; ModuleID = 'Project_CodeNet_C++1400/p03718/s354826331.cpp'
source_filename = "Project_CodeNet_C++1400/p03718/s354826331.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%struct.MaxFlow = type <{ i64, i64, %"class.std::vector", %"class.std::vector.8", %"class.std::vector.8", i32, [4 x i8] }>
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl" = type { %"class.std::vector.3"*, %"class.std::vector.3"*, %"class.std::vector.3"* }
%"class.std::vector.3" = type { %"struct.std::_Vector_base.4" }
%"struct.std::_Vector_base.4" = type { %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl" }
%"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl" = type { %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"* }
%"struct.MaxFlow::edge" = type { i32, i32, i64 }
%"class.std::vector.8" = type { %"struct.std::_Vector_base.9" }
%"struct.std::_Vector_base.9" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" = type { i32*, i32*, i32* }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::allocator" = type { i8 }
%"class.std::allocator.5" = type { i8 }
%"class.std::allocator.0" = type { i8 }
%"class.std::allocator.10" = type { i8 }
%"class.__gnu_cxx::new_allocator.1" = type { i8 }
%"class.__gnu_cxx::new_allocator.11" = type { i8 }
%"class.__gnu_cxx::new_allocator.6" = type { i8 }
%"struct.std::integral_constant" = type { i8 }
%"class.__gnu_cxx::__normal_iterator" = type { %"struct.MaxFlow::edge"* }
%"class.std::move_iterator" = type { %"struct.MaxFlow::edge"* }
%"class.std::queue" = type { %"class.std::deque" }
%"class.std::deque" = type { %"class.std::_Deque_base" }
%"class.std::_Deque_base" = type { %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl" }
%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl" = type { i32**, i64, %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator" }
%"struct.std::_Deque_iterator" = type { i32*, i32*, i32*, i32** }
%"class.__gnu_cxx::__normal_iterator.13" = type { %"struct.MaxFlow::edge"* }
%"class.std::allocator.14" = type { i8 }
%"class.__gnu_cxx::new_allocator.15" = type { i8 }
%"struct.__gnu_cxx::__allocator_always_compares_equal" = type { i8 }

$_ZN7MaxFlowC2Ev = comdat any

$_ZN7MaxFlowD2Ev = comdat any

$_ZN7MaxFlow4initEi = comdat any

$_ZN7MaxFlow8add_edgeEiix = comdat any

$_ZN7MaxFlow8max_flowEii = comdat any

$_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EEC2Ev = comdat any

$_ZNSt6vectorIiSaIiEEC2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EEC2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE12_Vector_implC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN7MaxFlow4edgeESaIS3_EEEC2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2Ev = comdat any

$_ZNSt6vectorIiSaIiEED2Ev = comdat any

$_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EED2Ev = comdat any

$_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIiSaIiEED2Ev = comdat any

$_ZSt8_DestroyIPiEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim = comdat any

$_ZN9__gnu_cxx13new_allocatorIiED2Ev = comdat any

$_ZSt8_DestroyIPSt6vectorIN7MaxFlow4edgeESaIS2_EES4_EvT_S6_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EED2Ev = comdat any

$_ZSt8_DestroyIPSt6vectorIN7MaxFlow4edgeESaIS2_EEEvT_S6_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN7MaxFlow4edgeESaIS4_EEEEvT_S8_ = comdat any

$_ZSt8_DestroyISt6vectorIN7MaxFlow4edgeESaIS2_EEEvPT_ = comdat any

$_ZSt11__addressofISt6vectorIN7MaxFlow4edgeESaIS2_EEEPT_RS5_ = comdat any

$_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPN7MaxFlow4edgeES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPN7MaxFlow4edgeEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPN7MaxFlow4edgeEEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIN7MaxFlow4edgeEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN7MaxFlow4edgeEE10deallocateEPS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN7MaxFlow4edgeEED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE13_M_deallocateEPS4_m = comdat any

$_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIN7MaxFlow4edgeESaIS2_EEEE10deallocateERS5_PS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN7MaxFlow4edgeESaIS3_EEE10deallocateEPS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN7MaxFlow4edgeESaIS3_EEED2Ev = comdat any

$_ZNSaIN7MaxFlow4edgeEEC2Ev = comdat any

$_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EEC2EmRKS2_ = comdat any

$_ZNSaISt6vectorIN7MaxFlow4edgeESaIS1_EEEC2Ev = comdat any

$_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EEC2EmRKS3_RKS4_ = comdat any

$_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EEaSEOS5_ = comdat any

$_ZNSaISt6vectorIN7MaxFlow4edgeESaIS1_EEED2Ev = comdat any

$_ZNSaIN7MaxFlow4edgeEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN7MaxFlow4edgeEEC2Ev = comdat any

$_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EEC2EmRKS2_ = comdat any

$_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EE21_M_default_initializeEm = comdat any

$_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE12_Vector_implC2ERKS2_ = comdat any

$_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE17_M_create_storageEm = comdat any

$_ZN9__gnu_cxx13new_allocatorIN7MaxFlow4edgeEEC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaIN7MaxFlow4edgeEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN7MaxFlow4edgeEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIN7MaxFlow4edgeEE8max_sizeEv = comdat any

$_ZSt27__uninitialized_default_n_aIPN7MaxFlow4edgeEmS1_ET_S3_T0_RSaIT1_E = comdat any

$_ZSt25__uninitialized_default_nIPN7MaxFlow4edgeEmET_S3_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPN7MaxFlow4edgeEmEET_S5_T0_ = comdat any

$_ZSt10_ConstructIN7MaxFlow4edgeEJEEvPT_DpOT0_ = comdat any

$_ZSt11__addressofIN7MaxFlow4edgeEEPT_RS2_ = comdat any

$_ZN7MaxFlow4edgeC2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EEC2EmRKS5_ = comdat any

$_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EE18_M_fill_initializeEmRKS3_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE17_M_create_storageEm = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN7MaxFlow4edgeESaIS3_EEEC2ERKS6_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIN7MaxFlow4edgeESaIS2_EEEE8allocateERS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN7MaxFlow4edgeESaIS3_EEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorIN7MaxFlow4edgeESaIS3_EEE8max_sizeEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPSt6vectorIN7MaxFlow4edgeESaIS2_EEmS4_S4_ET_S6_T0_RKT1_RSaIT2_E = comdat any

$_ZSt20uninitialized_fill_nIPSt6vectorIN7MaxFlow4edgeESaIS2_EEmS4_ET_S6_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIN7MaxFlow4edgeESaIS4_EEmS6_EET_S8_T0_RKT1_ = comdat any

$_ZSt10_ConstructISt6vectorIN7MaxFlow4edgeESaIS2_EEJRKS4_EEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKSt6vectorIN7MaxFlow4edgeESaIS2_EEEOT_RNSt16remove_referenceIS7_E4typeE = comdat any

$_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EEC2ERKS3_ = comdat any

$_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE4sizeEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN7MaxFlow4edgeEEE17_S_select_on_copyERKS3_ = comdat any

$_ZNKSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN7MaxFlow4edgeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E = comdat any

$_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE5beginEv = comdat any

$_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE3endEv = comdat any

$_ZNSt16allocator_traitsISaIN7MaxFlow4edgeEEE37select_on_container_copy_constructionERKS2_ = comdat any

$_ZNSaIN7MaxFlow4edgeEEC2ERKS1_ = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN7MaxFlow4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN7MaxFlow4edgeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_ = comdat any

$_ZN9__gnu_cxxneIPKN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_ = comdat any

$_ZSt10_ConstructIN7MaxFlow4edgeEJRKS1_EEvPT_DpOT0_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEEppEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZSt7forwardIRKN7MaxFlow4edgeEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEEC2ERKS4_ = comdat any

$_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EE14_M_move_assignEOS5_St17integral_constantIbLb1EE = comdat any

$_ZSt4moveIRSt6vectorIS0_IN7MaxFlow4edgeESaIS2_EESaIS4_EEEONSt16remove_referenceIT_E4typeEOS9_ = comdat any

$_ZNKSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE13get_allocatorEv = comdat any

$_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EEC2ERKS4_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE12_Vector_impl12_M_swap_dataERS7_ = comdat any

$_ZSt15__alloc_on_moveISaISt6vectorIN7MaxFlow4edgeESaIS2_EEEEvRT_S7_ = comdat any

$_ZNKSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSaISt6vectorIN7MaxFlow4edgeESaIS1_EEEC2ERKS4_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EEC2ERKS5_ = comdat any

$_ZSt4swapIPSt6vectorIN7MaxFlow4edgeESaIS2_EEEvRT_S7_ = comdat any

$_ZSt4moveIRPSt6vectorIN7MaxFlow4edgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS8_ = comdat any

$_ZSt18__do_alloc_on_moveISaISt6vectorIN7MaxFlow4edgeESaIS2_EEEEvRT_S7_St17integral_constantIbLb1EE = comdat any

$_ZSt4moveIRSaISt6vectorIN7MaxFlow4edgeESaIS2_EEEEONSt16remove_referenceIT_E4typeEOS8_ = comdat any

$_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EEixEm = comdat any

$_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EE12emplace_backIJRiRxxEEEvDpOT_ = comdat any

$_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EE12emplace_backIJRiRKxxEEEvDpOT_ = comdat any

$_ZNSt16allocator_traitsISaIN7MaxFlow4edgeEEE9constructIS1_JRiRxxEEEvRS2_PT_DpOT0_ = comdat any

$_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EE19_M_emplace_back_auxIJRiRxxEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN7MaxFlow4edgeEE9constructIS2_JRiRxxEEEvPT_DpOT0_ = comdat any

$_ZN7MaxFlow4edgeC2Eixi = comdat any

$_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPN7MaxFlow4edgeES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNSt16allocator_traitsISaIN7MaxFlow4edgeEEE7destroyIS1_EEvRS2_PT_ = comdat any

$_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt16allocator_traitsISaIN7MaxFlow4edgeEEE8max_sizeERKS2_ = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPN7MaxFlow4edgeEES3_S2_ET0_T_S6_S5_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPN7MaxFlow4edgeESt13move_iteratorIS2_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPN7MaxFlow4edgeEES3_ET0_T_S6_S5_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN7MaxFlow4edgeEES5_EET0_T_S8_S7_ = comdat any

$_ZStneIPN7MaxFlow4edgeEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZSt10_ConstructIN7MaxFlow4edgeEJS1_EEvPT_DpOT0_ = comdat any

$_ZNKSt13move_iteratorIPN7MaxFlow4edgeEEdeEv = comdat any

$_ZNSt13move_iteratorIPN7MaxFlow4edgeEEppEv = comdat any

$_ZSteqIPN7MaxFlow4edgeEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZNKSt13move_iteratorIPN7MaxFlow4edgeEE4baseEv = comdat any

$_ZSt7forwardIN7MaxFlow4edgeEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt13move_iteratorIPN7MaxFlow4edgeEEC2ES2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN7MaxFlow4edgeEE7destroyIS2_EEvPT_ = comdat any

$_ZNSt16allocator_traitsISaIN7MaxFlow4edgeEEE9constructIS1_JRiRKxxEEEvRS2_PT_DpOT0_ = comdat any

$_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EE19_M_emplace_back_auxIJRiRKxxEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN7MaxFlow4edgeEE9constructIS2_JRiRKxxEEEvPT_DpOT0_ = comdat any

$_ZN7MaxFlow3bfsEi = comdat any

$_ZNSt6vectorIiSaIiEEixEm = comdat any

$_ZNSaIiEC2Ev = comdat any

$_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_ = comdat any

$_ZNSt6vectorIiSaIiEEaSEOS1_ = comdat any

$_ZNSaIiED2Ev = comdat any

$_ZN7MaxFlow3dfsEiix = comdat any

$_ZNSt5dequeIiSaIiEEC2Ev = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEEC2EOS2_ = comdat any

$_ZNSt5dequeIiSaIiEED2Ev = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEE4pushERKi = comdat any

$_ZNKSt5queueIiSt5dequeIiSaIiEEE5emptyEv = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEE5frontEv = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEE3popEv = comdat any

$_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EE5beginEv = comdat any

$_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EE3endEv = comdat any

$_ZN9__gnu_cxxneIPN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEEppEv = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEC2Ev = comdat any

$_ZSt16__deque_buf_sizem = comdat any

$_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm = comdat any

$_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim = comdat any

$_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_ = comdat any

$_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m = comdat any

$_ZNSaIPiED2Ev = comdat any

$_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSaIPiEC2IiEERKSaIT_E = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiED2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_ = comdat any

$_ZNSt16allocator_traitsISaIiEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi = comdat any

$_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m = comdat any

$_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv = comdat any

$_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt5dequeIiSaIiEEC2EOS1_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2EOS1_ = comdat any

$_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE = comdat any

$_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_ = comdat any

$_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_ = comdat any

$_ZSt4swapIPPiEvRT_S3_ = comdat any

$_ZSt4swapImEvRT_S1_ = comdat any

$_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_ = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_ = comdat any

$_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_ = comdat any

$_ZNSt5dequeIiSaIiEE5beginEv = comdat any

$_ZNSt5dequeIiSaIiEE3endEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEED2Ev = comdat any

$_ZNSt5dequeIiSaIiEE9push_backERKi = comdat any

$_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_ = comdat any

$_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm = comdat any

$_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb = comdat any

$_ZSt4copyIPPiS1_ET0_T_S3_S2_ = comdat any

$_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_ = comdat any

$_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_ = comdat any

$_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_ = comdat any

$_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_ = comdat any

$_ZNKSt5dequeIiSaIiEE5emptyEv = comdat any

$_ZSteqIiRiPiEbRKSt15_Deque_iteratorIT_T0_T1_ES8_ = comdat any

$_ZNSt5dequeIiSaIiEE5frontEv = comdat any

$_ZNKSt15_Deque_iteratorIiRiPiEdeEv = comdat any

$_ZNSt5dequeIiSaIiEE9pop_frontEv = comdat any

$_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_ = comdat any

$_ZNSt5dequeIiSaIiEE16_M_pop_front_auxEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm = comdat any

$_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_ = comdat any

$_ZSt6fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_ = comdat any

$_ZNSt6vectorIiSaIiEE14_M_move_assignEOS1_St17integral_constantIbLb1EE = comdat any

$_ZSt4moveIRSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNKSt12_Vector_baseIiSaIiEE13get_allocatorEv = comdat any

$_ZNSt6vectorIiSaIiEEC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_ = comdat any

$_ZSt15__alloc_on_moveISaIiEEvRT_S2_ = comdat any

$_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSaIiEC2ERKS_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2ERKS0_ = comdat any

$_ZSt4swapIPiEvRT_S2_ = comdat any

$_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZSt18__do_alloc_on_moveISaIiEEvRT_S2_St17integral_constantIbLb1EE = comdat any

$_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EEixEm = comdat any

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@.str = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@yuyushiki = global [1000010 x i8] zeroinitializer, align 16
@.str.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@mf = global %struct.MaxFlow zeroinitializer, align 8
@n = global i32 0, align 4
@m = global i32 0, align 4
@_Z1SB5cxx11 = global [110 x %"class.std::__cxx11::basic_string"] zeroinitializer, align 16
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str.4 = private unnamed_addr constant [28 x i8] c"vector::_M_emplace_back_aux\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s354826331.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0
@x.159 = common global i32 0
@y.160 = common global i32 0
@x.161 = common global i32 0
@y.162 = common global i32 0
@x.163 = common global i32 0
@y.164 = common global i32 0
@x.165 = common global i32 0
@y.166 = common global i32 0
@x.167 = common global i32 0
@y.168 = common global i32 0
@x.169 = common global i32 0
@y.170 = common global i32 0
@x.171 = common global i32 0
@y.172 = common global i32 0
@x.173 = common global i32 0
@y.174 = common global i32 0
@x.175 = common global i32 0
@y.176 = common global i32 0
@x.177 = common global i32 0
@y.178 = common global i32 0
@x.179 = common global i32 0
@y.180 = common global i32 0
@x.181 = common global i32 0
@y.182 = common global i32 0
@x.183 = common global i32 0
@y.184 = common global i32 0
@x.185 = common global i32 0
@y.186 = common global i32 0
@x.187 = common global i32 0
@y.188 = common global i32 0
@x.189 = common global i32 0
@y.190 = common global i32 0
@x.191 = common global i32 0
@y.192 = common global i32 0
@x.193 = common global i32 0
@y.194 = common global i32 0
@x.195 = common global i32 0
@y.196 = common global i32 0
@x.197 = common global i32 0
@y.198 = common global i32 0
@x.199 = common global i32 0
@y.200 = common global i32 0
@x.201 = common global i32 0
@y.202 = common global i32 0
@x.203 = common global i32 0
@y.204 = common global i32 0
@x.205 = common global i32 0
@y.206 = common global i32 0
@x.207 = common global i32 0
@y.208 = common global i32 0
@x.209 = common global i32 0
@y.210 = common global i32 0
@x.211 = common global i32 0
@y.212 = common global i32 0
@x.213 = common global i32 0
@y.214 = common global i32 0
@x.215 = common global i32 0
@y.216 = common global i32 0
@x.217 = common global i32 0
@y.218 = common global i32 0
@x.219 = common global i32 0
@y.220 = common global i32 0
@x.221 = common global i32 0
@y.222 = common global i32 0
@x.223 = common global i32 0
@y.224 = common global i32 0
@x.225 = common global i32 0
@y.226 = common global i32 0
@x.227 = common global i32 0
@y.228 = common global i32 0
@x.229 = common global i32 0
@y.230 = common global i32 0
@x.231 = common global i32 0
@y.232 = common global i32 0
@x.233 = common global i32 0
@y.234 = common global i32 0
@x.235 = common global i32 0
@y.236 = common global i32 0
@x.237 = common global i32 0
@y.238 = common global i32 0
@x.239 = common global i32 0
@y.240 = common global i32 0
@x.241 = common global i32 0
@y.242 = common global i32 0
@x.243 = common global i32 0
@y.244 = common global i32 0
@x.245 = common global i32 0
@y.246 = common global i32 0
@x.247 = common global i32 0
@y.248 = common global i32 0
@x.249 = common global i32 0
@y.250 = common global i32 0
@x.251 = common global i32 0
@y.252 = common global i32 0
@x.253 = common global i32 0
@y.254 = common global i32 0
@x.255 = common global i32 0
@y.256 = common global i32 0
@x.257 = common global i32 0
@y.258 = common global i32 0
@x.259 = common global i32 0
@y.260 = common global i32 0
@x.261 = common global i32 0
@y.262 = common global i32 0
@x.263 = common global i32 0
@y.264 = common global i32 0
@x.265 = common global i32 0
@y.266 = common global i32 0
@x.267 = common global i32 0
@y.268 = common global i32 0
@x.269 = common global i32 0
@y.270 = common global i32 0
@x.271 = common global i32 0
@y.272 = common global i32 0
@x.273 = common global i32 0
@y.274 = common global i32 0
@x.275 = common global i32 0
@y.276 = common global i32 0
@x.277 = common global i32 0
@y.278 = common global i32 0
@x.279 = common global i32 0
@y.280 = common global i32 0
@x.281 = common global i32 0
@y.282 = common global i32 0
@x.283 = common global i32 0
@y.284 = common global i32 0
@x.285 = common global i32 0
@y.286 = common global i32 0
@x.287 = common global i32 0
@y.288 = common global i32 0
@x.289 = common global i32 0
@y.290 = common global i32 0
@x.291 = common global i32 0
@y.292 = common global i32 0
@x.293 = common global i32 0
@y.294 = common global i32 0
@x.295 = common global i32 0
@y.296 = common global i32 0
@x.297 = common global i32 0
@y.298 = common global i32 0
@x.299 = common global i32 0
@y.300 = common global i32 0
@x.301 = common global i32 0
@y.302 = common global i32 0
@x.303 = common global i32 0
@y.304 = common global i32 0
@x.305 = common global i32 0
@y.306 = common global i32 0
@x.307 = common global i32 0
@y.308 = common global i32 0
@x.309 = common global i32 0
@y.310 = common global i32 0
@x.311 = common global i32 0
@y.312 = common global i32 0
@x.313 = common global i32 0
@y.314 = common global i32 0
@x.315 = common global i32 0
@y.316 = common global i32 0
@x.317 = common global i32 0
@y.318 = common global i32 0
@x.319 = common global i32 0
@y.320 = common global i32 0
@x.321 = common global i32 0
@y.322 = common global i32 0
@x.323 = common global i32 0
@y.324 = common global i32 0
@x.325 = common global i32 0
@y.326 = common global i32 0
@x.327 = common global i32 0
@y.328 = common global i32 0
@x.329 = common global i32 0
@y.330 = common global i32 0
@x.331 = common global i32 0
@y.332 = common global i32 0
@x.333 = common global i32 0
@y.334 = common global i32 0
@x.335 = common global i32 0
@y.336 = common global i32 0
@x.337 = common global i32 0
@y.338 = common global i32 0
@x.339 = common global i32 0
@y.340 = common global i32 0
@x.341 = common global i32 0
@y.342 = common global i32 0
@x.343 = common global i32 0
@y.344 = common global i32 0
@x.345 = common global i32 0
@y.346 = common global i32 0
@x.347 = common global i32 0
@y.348 = common global i32 0
@x.349 = common global i32 0
@y.350 = common global i32 0
@x.351 = common global i32 0
@y.352 = common global i32 0
@x.353 = common global i32 0
@y.354 = common global i32 0
@x.355 = common global i32 0
@y.356 = common global i32 0
@x.357 = common global i32 0
@y.358 = common global i32 0
@x.359 = common global i32 0
@y.360 = common global i32 0
@x.361 = common global i32 0
@y.362 = common global i32 0
@x.363 = common global i32 0
@y.364 = common global i32 0
@x.365 = common global i32 0
@y.366 = common global i32 0
@x.367 = common global i32 0
@y.368 = common global i32 0
@x.369 = common global i32 0
@y.370 = common global i32 0
@x.371 = common global i32 0
@y.372 = common global i32 0
@x.373 = common global i32 0
@y.374 = common global i32 0
@x.375 = common global i32 0
@y.376 = common global i32 0
@x.377 = common global i32 0
@y.378 = common global i32 0
@x.379 = common global i32 0
@y.380 = common global i32 0
@x.381 = common global i32 0
@y.382 = common global i32 0
@x.383 = common global i32 0
@y.384 = common global i32 0
@x.385 = common global i32 0
@y.386 = common global i32 0
@x.387 = common global i32 0
@y.388 = common global i32 0
@x.389 = common global i32 0
@y.390 = common global i32 0
@x.391 = common global i32 0
@y.392 = common global i32 0
@x.393 = common global i32 0
@y.394 = common global i32 0
@x.395 = common global i32 0
@y.396 = common global i32 0
@x.397 = common global i32 0
@y.398 = common global i32 0
@x.399 = common global i32 0
@y.400 = common global i32 0
@x.401 = common global i32 0
@y.402 = common global i32 0
@x.403 = common global i32 0
@y.404 = common global i32 0
@x.405 = common global i32 0
@y.406 = common global i32 0
@x.407 = common global i32 0
@y.408 = common global i32 0
@x.409 = common global i32 0
@y.410 = common global i32 0
@x.411 = common global i32 0
@y.412 = common global i32 0
@x.413 = common global i32 0
@y.414 = common global i32 0
@x.415 = common global i32 0
@y.416 = common global i32 0
@x.417 = common global i32 0
@y.418 = common global i32 0
@x.419 = common global i32 0
@y.420 = common global i32 0
@x.421 = common global i32 0
@y.422 = common global i32 0
@x.423 = common global i32 0
@y.424 = common global i32 0
@x.425 = common global i32 0
@y.426 = common global i32 0
@x.427 = common global i32 0
@y.428 = common global i32 0
@x.429 = common global i32 0
@y.430 = common global i32 0
@x.431 = common global i32 0
@y.432 = common global i32 0
@x.433 = common global i32 0
@y.434 = common global i32 0
@x.435 = common global i32 0
@y.436 = common global i32 0
@x.437 = common global i32 0
@y.438 = common global i32 0
@x.439 = common global i32 0
@y.440 = common global i32 0
@x.441 = common global i32 0
@y.442 = common global i32 0
@x.443 = common global i32 0
@y.444 = common global i32 0
@x.445 = common global i32 0
@y.446 = common global i32 0
@x.447 = common global i32 0
@y.448 = common global i32 0
@x.449 = common global i32 0
@y.450 = common global i32 0
@x.451 = common global i32 0
@y.452 = common global i32 0
@x.453 = common global i32 0
@y.454 = common global i32 0
@x.455 = common global i32 0
@y.456 = common global i32 0
@x.457 = common global i32 0
@y.458 = common global i32 0
@x.459 = common global i32 0
@y.460 = common global i32 0
@x.461 = common global i32 0
@y.462 = common global i32 0
@x.463 = common global i32 0
@y.464 = common global i32 0
@x.465 = common global i32 0
@y.466 = common global i32 0
@x.467 = common global i32 0
@y.468 = common global i32 0
@x.469 = common global i32 0
@y.470 = common global i32 0
@x.471 = common global i32 0
@y.472 = common global i32 0
@x.473 = common global i32 0
@y.474 = common global i32 0
@x.475 = common global i32 0
@y.476 = common global i32 0
@x.477 = common global i32 0
@y.478 = common global i32 0
@x.479 = common global i32 0
@y.480 = common global i32 0
@x.481 = common global i32 0
@y.482 = common global i32 0
@x.483 = common global i32 0
@y.484 = common global i32 0
@x.485 = common global i32 0
@y.486 = common global i32 0
@x.487 = common global i32 0
@y.488 = common global i32 0
@x.489 = common global i32 0
@y.490 = common global i32 0
@x.491 = common global i32 0
@y.492 = common global i32 0
@x.493 = common global i32 0
@y.494 = common global i32 0
@x.495 = common global i32 0
@y.496 = common global i32 0
@x.497 = common global i32 0
@y.498 = common global i32 0
@x.499 = common global i32 0
@y.500 = common global i32 0
@x.501 = common global i32 0
@y.502 = common global i32 0
@x.503 = common global i32 0
@y.504 = common global i32 0
@x.505 = common global i32 0
@y.506 = common global i32 0
@x.507 = common global i32 0
@y.508 = common global i32 0
@x.509 = common global i32 0
@y.510 = common global i32 0
@x.511 = common global i32 0
@y.512 = common global i32 0
@x.513 = common global i32 0
@y.514 = common global i32 0
@x.515 = common global i32 0
@y.516 = common global i32 0
@x.517 = common global i32 0
@y.518 = common global i32 0
@x.519 = common global i32 0
@y.520 = common global i32 0
@x.521 = common global i32 0
@y.522 = common global i32 0
@x.523 = common global i32 0
@y.524 = common global i32 0
@x.525 = common global i32 0
@y.526 = common global i32 0
@x.527 = common global i32 0
@y.528 = common global i32 0
@x.529 = common global i32 0
@y.530 = common global i32 0
@x.531 = common global i32 0
@y.532 = common global i32 0
@x.533 = common global i32 0
@y.534 = common global i32 0
@x.535 = common global i32 0
@y.536 = common global i32 0
@x.537 = common global i32 0
@y.538 = common global i32 0
@x.539 = common global i32 0
@y.540 = common global i32 0
@x.541 = common global i32 0
@y.542 = common global i32 0
@x.543 = common global i32 0
@y.544 = common global i32 0
@x.545 = common global i32 0
@y.546 = common global i32 0
@x.547 = common global i32 0
@y.548 = common global i32 0
@x.549 = common global i32 0
@y.550 = common global i32 0
@x.551 = common global i32 0
@y.552 = common global i32 0
@x.553 = common global i32 0
@y.554 = common global i32 0
@x.555 = common global i32 0
@y.556 = common global i32 0
@x.557 = common global i32 0
@y.558 = common global i32 0
@x.559 = common global i32 0
@y.560 = common global i32 0
@x.561 = common global i32 0
@y.562 = common global i32 0
@x.563 = common global i32 0
@y.564 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x
  %4 = load i32, i32* @y
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %2
  %11 = icmp slt i32 %4, 10
  store i1 %11, i1* %1
  %12 = alloca i32
  store i32 1724264348, i32* %12
  br label %13

; <label>:13:                                     ; preds = %0, %56
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1724264348, label %16
    i32 1357791966, label %36
    i32 1624114935, label %53
    i32 -1979820188, label %54
  ]

; <label>:15:                                     ; preds = %13
  br label %56

; <label>:16:                                     ; preds = %13
  %17 = load volatile i1, i1* %2
  %18 = load volatile i1, i1* %1
  %19 = xor i1 %17, true
  %20 = xor i1 %18, true
  %21 = xor i1 true, true
  %22 = and i1 %19, true
  %23 = and i1 %17, %21
  %24 = and i1 %20, true
  %25 = and i1 %18, %21
  %26 = or i1 %22, %23
  %27 = or i1 %24, %25
  %28 = xor i1 %26, %27
  %29 = or i1 %19, %20
  %30 = xor i1 %29, true
  %31 = or i1 true, %21
  %32 = and i1 %30, %31
  %33 = or i1 %28, %32
  %34 = or i1 %17, %18
  %35 = select i1 %33, i32 1357791966, i32 -1979820188
  store i32 %35, i32* %12
  br label %56

; <label>:36:                                     ; preds = %13
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %37 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  %38 = load i32, i32* @x
  %39 = load i32, i32* @y
  %40 = add i32 %38, -1940770294
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -1940770294
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 1624114935, i32 -1979820188
  store i32 %52, i32* %12
  br label %56

; <label>:53:                                     ; preds = %13
  ret void

; <label>:54:                                     ; preds = %13
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %55 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  store i32 1357791966, i32* %12
  br label %56

; <label>:56:                                     ; preds = %54, %36, %16, %15
  br label %13
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline uwtable
define i64 @_Z2inv() #0 {
  %1 = alloca i64
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.5
  %5 = load i32, i32* @y.6
  %6 = sub i32 %4, 1329350664
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1329350664
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -993059500, i32* %14
  br label %15

; <label>:15:                                     ; preds = %0, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -993059500, label %18
    i32 -357702574, label %26
    i32 -363039558, label %56
    i32 -1088749365, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -357702574, i32 -1088749365
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca i64, align 8
  %28 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i64* %27)
  %29 = load i64, i64* %27, align 8
  store i64 %29, i64* %1
  %30 = load i32, i32* @x.5
  %31 = load i32, i32* @y.6
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -363039558, i32 -1088749365
  store i32 %55, i32* %14
  br label %62

; <label>:56:                                     ; preds = %15
  %57 = load volatile i64, i64* %1
  ret i64 %57

; <label>:58:                                     ; preds = %15
  %59 = alloca i64, align 8
  %60 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i64* %59)
  %61 = load i64, i64* %59, align 8
  store i32 -357702574, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

declare i32 @scanf(i8*, ...) #1

; Function Attrs: noinline uwtable
define void @_Z4stinB5cxx11v(%"class.std::__cxx11::basic_string"* noalias sret) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.7
  %3 = load i32, i32* @y.8
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %87

; <label>:15:                                     ; preds = %1, %87
  %16 = alloca %"class.std::allocator", align 1
  %17 = alloca i8*
  %18 = alloca i32
  %19 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([1000010 x i8], [1000010 x i8]* @yuyushiki, i32 0, i32 0))
  call void @_ZNSaIcEC1Ev(%"class.std::allocator"* %16) #3
  %20 = load i32, i32* @x.7
  %21 = load i32, i32* @y.8
  %22 = sub i32 %20, -7082806
  %23 = sub i32 %22, 1
  %24 = add i32 %23, -7082806
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  br i1 %32, label %34, label %87

; <label>:34:                                     ; preds = %15
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"* %0, i8* getelementptr inbounds ([1000010 x i8], [1000010 x i8]* @yuyushiki, i32 0, i32 0), %"class.std::allocator"* dereferenceable(1) %16)
          to label %35 unwind label %36

; <label>:35:                                     ; preds = %34
  call void @_ZNSaIcED1Ev(%"class.std::allocator"* %16) #3
  ret void

; <label>:36:                                     ; preds = %34
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  store i8* %38, i8** %17, align 8
  %39 = extractvalue { i8*, i32 } %37, 1
  store i32 %39, i32* %18, align 4
  call void @_ZNSaIcED1Ev(%"class.std::allocator"* %16) #3
  br label %40

; <label>:40:                                     ; preds = %36
  %41 = load i32, i32* @x.7
  %42 = load i32, i32* @y.8
  %43 = add i32 %41, -1175976993
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -1175976993
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  br i1 %53, label %55, label %92

; <label>:55:                                     ; preds = %40, %92
  %56 = load i8*, i8** %17, align 8
  %57 = load i32, i32* %18, align 4
  %58 = insertvalue { i8*, i32 } undef, i8* %56, 0
  %59 = insertvalue { i8*, i32 } %58, i32 %57, 1
  %60 = load i32, i32* @x.7
  %61 = load i32, i32* @y.8
  %62 = sub i32 %60, 1302616262
  %63 = sub i32 %62, 1
  %64 = add i32 %63, 1302616262
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 false, true
  %73 = and i1 %70, false
  %74 = and i1 %68, %72
  %75 = and i1 %71, false
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 false, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  br i1 %84, label %86, label %92

; <label>:86:                                     ; preds = %55
  resume { i8*, i32 } %59

; <label>:87:                                     ; preds = %15, %1
  %88 = alloca %"class.std::allocator", align 1
  %89 = alloca i8*
  %90 = alloca i32
  %91 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([1000010 x i8], [1000010 x i8]* @yuyushiki, i32 0, i32 0))
  call void @_ZNSaIcEC1Ev(%"class.std::allocator"* %88) #3
  br label %15

; <label>:92:                                     ; preds = %55, %40
  %93 = load i8*, i8** %17, align 8
  %94 = load i32, i32* %18, align 4
  %95 = insertvalue { i8*, i32 } undef, i8* %93, 0
  %96 = insertvalue { i8*, i32 } %95, i32 %94, 1
  br label %55
}

; Function Attrs: nounwind
declare void @_ZNSaIcEC1Ev(%"class.std::allocator"*) unnamed_addr #2

declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"*, i8*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #1

declare i32 @__gxx_personality_v0(...)

; Function Attrs: nounwind
declare void @_ZNSaIcED1Ev(%"class.std::allocator"*) unnamed_addr #2

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.2() #0 section ".text.startup" {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.9
  %4 = load i32, i32* @y.10
  %5 = sub i32 %3, 112123548
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 112123548
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %2
  %12 = icmp slt i32 %4, 10
  store i1 %12, i1* %1
  %13 = alloca i32
  store i32 1380756196, i32* %13
  br label %14

; <label>:14:                                     ; preds = %0, %44
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1380756196, label %17
    i32 1127600513, label %25
    i32 646084910, label %41
    i32 1087264896, label %42
  ]

; <label>:16:                                     ; preds = %14
  br label %44

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %2
  %19 = load volatile i1, i1* %1
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 1127600513, i32 1087264896
  store i32 %24, i32* %13
  br label %44

; <label>:25:                                     ; preds = %14
  call void @_ZN7MaxFlowC2Ev(%struct.MaxFlow* @mf) #3
  %26 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%struct.MaxFlow*)* @_ZN7MaxFlowD2Ev to void (i8*)*), i8* bitcast (%struct.MaxFlow* @mf to i8*), i8* @__dso_handle) #3
  %27 = load i32, i32* @x.9
  %28 = load i32, i32* @y.10
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  %40 = select i1 %38, i32 646084910, i32 1087264896
  store i32 %40, i32* %13
  br label %44

; <label>:41:                                     ; preds = %14
  ret void

; <label>:42:                                     ; preds = %14
  call void @_ZN7MaxFlowC2Ev(%struct.MaxFlow* @mf) #3
  %43 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%struct.MaxFlow*)* @_ZN7MaxFlowD2Ev to void (i8*)*), i8* bitcast (%struct.MaxFlow* @mf to i8*), i8* @__dso_handle) #3
  store i32 1127600513, i32* %13
  br label %44

; <label>:44:                                     ; preds = %42, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN7MaxFlowC2Ev(%struct.MaxFlow*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.11
  %5 = load i32, i32* @y.12
  %6 = sub i32 %4, -318889286
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -318889286
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -757027087, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %69
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -757027087, label %18
    i32 -2053478118, label %38
    i32 702195749, label %60
    i32 -1002377218, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %69

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -2053478118, i32 -1002377218
  store i32 %37, i32* %14
  br label %69

; <label>:38:                                     ; preds = %15
  %39 = alloca %struct.MaxFlow*, align 8
  store %struct.MaxFlow* %0, %struct.MaxFlow** %39, align 8
  %40 = load %struct.MaxFlow*, %struct.MaxFlow** %39, align 8
  %41 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %40, i32 0, i32 0
  store i64 0, i64* %41, align 8
  %42 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %40, i32 0, i32 1
  store i64 1000000000000000010, i64* %42, align 8
  %43 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %40, i32 0, i32 2
  call void @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EEC2Ev(%"class.std::vector"* %43) #3
  %44 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %40, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.8"* %44) #3
  %45 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %40, i32 0, i32 4
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.8"* %45) #3
  %46 = load i32, i32* @x.11
  %47 = load i32, i32* @y.12
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 702195749, i32 -1002377218
  store i32 %59, i32* %14
  br label %69

; <label>:60:                                     ; preds = %15
  ret void

; <label>:61:                                     ; preds = %15
  %62 = alloca %struct.MaxFlow*, align 8
  store %struct.MaxFlow* %0, %struct.MaxFlow** %62, align 8
  %63 = load %struct.MaxFlow*, %struct.MaxFlow** %62, align 8
  %64 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %63, i32 0, i32 0
  store i64 0, i64* %64, align 8
  %65 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %63, i32 0, i32 1
  store i64 1000000000000000010, i64* %65, align 8
  %66 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %63, i32 0, i32 2
  call void @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EEC2Ev(%"class.std::vector"* %66) #3
  %67 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %63, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.8"* %67) #3
  %68 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %63, i32 0, i32 4
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.8"* %68) #3
  store i32 -2053478118, i32* %14
  br label %69

; <label>:69:                                     ; preds = %61, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN7MaxFlowD2Ev(%struct.MaxFlow*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %struct.MaxFlow*, align 8
  store %struct.MaxFlow* %0, %struct.MaxFlow** %2, align 8
  %3 = load %struct.MaxFlow*, %struct.MaxFlow** %2, align 8
  %4 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %3, i32 0, i32 4
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.8"* %4) #3
  %5 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %3, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.8"* %5) #3
  %6 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %3, i32 0, i32 2
  call void @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EED2Ev(%"class.std::vector"* %6) #3
  ret void
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.3() #0 section ".text.startup" {
  %1 = alloca i32
  store i32 1784770467, i32* %1
  %2 = alloca %"class.std::__cxx11::basic_string"*
  store %"class.std::__cxx11::basic_string"* getelementptr inbounds ([110 x %"class.std::__cxx11::basic_string"], [110 x %"class.std::__cxx11::basic_string"]* @_Z1SB5cxx11, i32 0, i32 0), %"class.std::__cxx11::basic_string"** %2
  br label %3

; <label>:3:                                      ; preds = %0, %13
  %4 = load i32, i32* %1
  switch i32 %4, label %5 [
    i32 1784770467, label %6
    i32 -1564145899, label %11
  ]

; <label>:5:                                      ; preds = %3
  br label %13

; <label>:6:                                      ; preds = %3
  %7 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"* %7) #3
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 1
  %9 = icmp eq %"class.std::__cxx11::basic_string"* %8, getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* getelementptr inbounds ([110 x %"class.std::__cxx11::basic_string"], [110 x %"class.std::__cxx11::basic_string"]* @_Z1SB5cxx11, i32 0, i32 0), i64 110)
  %10 = select i1 %9, i32 -1564145899, i32 1784770467
  store i32 %10, i32* %1
  store %"class.std::__cxx11::basic_string"* %8, %"class.std::__cxx11::basic_string"** %2
  br label %13

; <label>:11:                                     ; preds = %3
  %12 = call i32 @__cxa_atexit(void (i8*)* @__cxx_global_array_dtor, i8* null, i8* @__dso_handle) #3
  ret void

; <label>:13:                                     ; preds = %6, %5
  br label %3
}

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

; Function Attrs: noinline uwtable
define internal void @__cxx_global_array_dtor(i8*) #0 section ".text.startup" {
  %2 = alloca %"class.std::__cxx11::basic_string"*
  %3 = alloca i1
  %4 = alloca %"class.std::__cxx11::basic_string"*
  %5 = alloca i8*, align 8
  store i8* %0, i8** %5, align 8
  %6 = alloca i32
  store i32 -1000024637, i32* %6
  %7 = alloca %"class.std::__cxx11::basic_string"*
  store %"class.std::__cxx11::basic_string"* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* getelementptr inbounds ([110 x %"class.std::__cxx11::basic_string"], [110 x %"class.std::__cxx11::basic_string"]* @_Z1SB5cxx11, i32 0, i32 0), i64 110), %"class.std::__cxx11::basic_string"** %7
  br label %8

; <label>:8:                                      ; preds = %1, %102
  %9 = load i32, i32* %6
  switch i32 %9, label %10 [
    i32 -1000024637, label %11
    i32 653560239, label %28
    i32 -1182820321, label %48
    i32 825714713, label %52
    i32 1088393078, label %80
    i32 -1545269242, label %96
    i32 -1994597246, label %97
    i32 -1630059342, label %101
  ]

; <label>:10:                                     ; preds = %8
  br label %102

; <label>:11:                                     ; preds = %8
  %12 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7
  store %"class.std::__cxx11::basic_string"* %12, %"class.std::__cxx11::basic_string"** %2
  %13 = load i32, i32* @x.17
  %14 = load i32, i32* @y.18
  %15 = add i32 %13, 547233428
  %16 = sub i32 %15, 1
  %17 = sub i32 %16, 547233428
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %14, 10
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 653560239, i32 -1994597246
  store i32 %27, i32* %6
  br label %102

; <label>:28:                                     ; preds = %8
  %29 = load volatile %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %29, i64 -1
  store %"class.std::__cxx11::basic_string"* %30, %"class.std::__cxx11::basic_string"** %4
  %31 = load volatile %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %31) #3
  %32 = load volatile %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4
  %33 = icmp eq %"class.std::__cxx11::basic_string"* %32, getelementptr inbounds ([110 x %"class.std::__cxx11::basic_string"], [110 x %"class.std::__cxx11::basic_string"]* @_Z1SB5cxx11, i32 0, i32 0)
  store i1 %33, i1* %3
  %34 = load i32, i32* @x.17
  %35 = load i32, i32* @y.18
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 -1182820321, i32 -1994597246
  store i32 %47, i32* %6
  br label %102

; <label>:48:                                     ; preds = %8
  %49 = load volatile i1, i1* %3
  %50 = select i1 %49, i32 825714713, i32 -1000024637
  store i32 %50, i32* %6
  %51 = load volatile %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4
  store %"class.std::__cxx11::basic_string"* %51, %"class.std::__cxx11::basic_string"** %7
  br label %102

; <label>:52:                                     ; preds = %8
  %53 = load i32, i32* @x.17
  %54 = load i32, i32* @y.18
  %55 = sub i32 %53, 441506160
  %56 = sub i32 %55, 1
  %57 = add i32 %56, 441506160
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 1088393078, i32 -1630059342
  store i32 %79, i32* %6
  br label %102

; <label>:80:                                     ; preds = %8
  %81 = load i32, i32* @x.17
  %82 = load i32, i32* @y.18
  %83 = add i32 %81, -1570254676
  %84 = sub i32 %83, 1
  %85 = sub i32 %84, -1570254676
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  %95 = select i1 %93, i32 -1545269242, i32 -1630059342
  store i32 %95, i32* %6
  br label %102

; <label>:96:                                     ; preds = %8
  ret void

; <label>:97:                                     ; preds = %8
  %98 = load volatile %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2
  %99 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %98, i64 -1
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %99) #3
  %100 = icmp eq %"class.std::__cxx11::basic_string"* %99, getelementptr inbounds ([110 x %"class.std::__cxx11::basic_string"], [110 x %"class.std::__cxx11::basic_string"]* @_Z1SB5cxx11, i32 0, i32 0)
  store i32 653560239, i32* %6
  br label %102

; <label>:101:                                    ; preds = %8
  store i32 1088393078, i32* %6
  br label %102

; <label>:102:                                    ; preds = %101, %97, %80, %52, %48, %28, %11, %10
  br label %8
}

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

; Function Attrs: noinline norecurse uwtable
define i32 @main() #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = alloca i8*
  %5 = alloca i32
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  store i32 0, i32* %1, align 4
  %14 = call i64 @_Z2inv()
  %15 = trunc i64 %14 to i32
  store i32 %15, i32* @n, align 4
  %16 = call i64 @_Z2inv()
  %17 = trunc i64 %16 to i32
  store i32 %17, i32* @m, align 4
  store i64 0, i64* %2, align 8
  br label %18

; <label>:18:                                     ; preds = %104, %0
  %19 = load i64, i64* %2, align 8
  %20 = load i32, i32* @n, align 4
  %21 = sext i32 %20 to i64
  %22 = icmp slt i64 %19, %21
  br i1 %22, label %23, label %109

; <label>:23:                                     ; preds = %18
  %24 = load i32, i32* @x.19
  %25 = load i32, i32* @y.20
  %26 = add i32 %24, -1330176505
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, -1330176505
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  br i1 %36, label %38, label %663

; <label>:38:                                     ; preds = %23, %663
  call void @_Z4stinB5cxx11v(%"class.std::__cxx11::basic_string"* sret %3)
  %39 = load i64, i64* %2, align 8
  %40 = getelementptr inbounds [110 x %"class.std::__cxx11::basic_string"], [110 x %"class.std::__cxx11::basic_string"]* @_Z1SB5cxx11, i64 0, i64 %39
  %41 = load i32, i32* @x.19
  %42 = load i32, i32* @y.20
  %43 = add i32 %41, -133746814
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -133746814
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  br i1 %53, label %55, label %663

; <label>:55:                                     ; preds = %38
  %56 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_(%"class.std::__cxx11::basic_string"* %40, %"class.std::__cxx11::basic_string"* dereferenceable(32) %3)
          to label %57 unwind label %105

; <label>:57:                                     ; preds = %55
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %3) #3
  br label %58

; <label>:58:                                     ; preds = %57
  %59 = load i32, i32* @x.19
  %60 = load i32, i32* @y.20
  %61 = add i32 %59, 246218009
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, 246218009
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  br i1 %71, label %73, label %666

; <label>:73:                                     ; preds = %58, %666
  %74 = load i64, i64* %2, align 8
  %75 = sub i64 0, 1
  %76 = sub i64 %74, %75
  %77 = add nsw i64 %74, 1
  store i64 %76, i64* %2, align 8
  %78 = load i32, i32* @x.19
  %79 = load i32, i32* @y.20
  %80 = add i32 %78, -1778086086
  %81 = sub i32 %80, 1
  %82 = sub i32 %81, -1778086086
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 false, true
  %91 = and i1 %88, false
  %92 = and i1 %86, %90
  %93 = and i1 %89, false
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 false, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  br i1 %102, label %104, label %666

; <label>:104:                                    ; preds = %73
  br label %18

; <label>:105:                                    ; preds = %55
  %106 = landingpad { i8*, i32 }
          cleanup
  %107 = extractvalue { i8*, i32 } %106, 0
  store i8* %107, i8** %4, align 8
  %108 = extractvalue { i8*, i32 } %106, 1
  store i32 %108, i32* %5, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %3) #3
  br label %658

; <label>:109:                                    ; preds = %18
  %110 = load i32, i32* @n, align 4
  %111 = load i32, i32* @m, align 4
  %112 = mul nsw i32 %110, %111
  store i32 %112, i32* %6, align 4
  %113 = load i32, i32* %6, align 4
  %114 = load i32, i32* @m, align 4
  %115 = sub i32 0, %114
  %116 = sub i32 %113, %115
  %117 = add nsw i32 %113, %114
  store i32 %116, i32* %7, align 4
  %118 = load i32, i32* %7, align 4
  %119 = load i32, i32* @n, align 4
  %120 = sub i32 %118, -275445055
  %121 = add i32 %120, %119
  %122 = add i32 %121, -275445055
  %123 = add nsw i32 %118, %119
  store i32 %122, i32* %8, align 4
  %124 = load i32, i32* %8, align 4
  %125 = sub i32 %124, 648262108
  %126 = add i32 %125, 1
  %127 = add i32 %126, 648262108
  %128 = add nsw i32 %124, 1
  store i32 %127, i32* %9, align 4
  %129 = load i32, i32* %9, align 4
  %130 = sub i32 0, %129
  %131 = sub i32 0, 1
  %132 = add i32 %130, %131
  %133 = sub i32 0, %132
  %134 = add nsw i32 %129, 1
  call void @_ZN7MaxFlow4initEi(%struct.MaxFlow* @mf, i32 %133)
  store i64 0, i64* %10, align 8
  br label %135

; <label>:135:                                    ; preds = %583, %109
  %136 = load i64, i64* %10, align 8
  %137 = load i32, i32* @n, align 4
  %138 = sext i32 %137 to i64
  %139 = icmp slt i64 %136, %138
  br i1 %139, label %140, label %589

; <label>:140:                                    ; preds = %135
  %141 = load i32, i32* @x.19
  %142 = load i32, i32* @y.20
  %143 = add i32 %141, 1109722120
  %144 = sub i32 %143, 1
  %145 = sub i32 %144, 1109722120
  %146 = sub i32 %141, 1
  %147 = mul i32 %141, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %142, 10
  %151 = xor i1 %149, true
  %152 = xor i1 %150, true
  %153 = xor i1 false, true
  %154 = and i1 %151, false
  %155 = and i1 %149, %153
  %156 = and i1 %152, false
  %157 = and i1 %150, %153
  %158 = or i1 %154, %155
  %159 = or i1 %156, %157
  %160 = xor i1 %158, %159
  %161 = or i1 %151, %152
  %162 = xor i1 %161, true
  %163 = or i1 false, %153
  %164 = and i1 %162, %163
  %165 = or i1 %160, %164
  %166 = or i1 %149, %150
  br i1 %165, label %167, label %690

; <label>:167:                                    ; preds = %140, %690
  store i64 0, i64* %11, align 8
  %168 = load i32, i32* @x.19
  %169 = load i32, i32* @y.20
  %170 = sub i32 %168, -2098803899
  %171 = sub i32 %170, 1
  %172 = add i32 %171, -2098803899
  %173 = sub i32 %168, 1
  %174 = mul i32 %168, %172
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %169, 10
  %178 = xor i1 %176, true
  %179 = xor i1 %177, true
  %180 = xor i1 false, true
  %181 = and i1 %178, false
  %182 = and i1 %176, %180
  %183 = and i1 %179, false
  %184 = and i1 %177, %180
  %185 = or i1 %181, %182
  %186 = or i1 %183, %184
  %187 = xor i1 %185, %186
  %188 = or i1 %178, %179
  %189 = xor i1 %188, true
  %190 = or i1 false, %180
  %191 = and i1 %189, %190
  %192 = or i1 %187, %191
  %193 = or i1 %176, %177
  br i1 %192, label %194, label %690

; <label>:194:                                    ; preds = %167
  br label %195

; <label>:195:                                    ; preds = %524, %194
  %196 = load i64, i64* %11, align 8
  %197 = load i32, i32* @m, align 4
  %198 = sext i32 %197 to i64
  %199 = icmp slt i64 %196, %198
  br i1 %199, label %200, label %529

; <label>:200:                                    ; preds = %195
  %201 = load i64, i64* %10, align 8
  %202 = load i32, i32* @m, align 4
  %203 = sext i32 %202 to i64
  %204 = mul nsw i64 %201, %203
  %205 = load i64, i64* %11, align 8
  %206 = sub i64 %204, 6511880219954810254
  %207 = add i64 %206, %205
  %208 = add i64 %207, 6511880219954810254
  %209 = add nsw i64 %204, %205
  %210 = trunc i64 %208 to i32
  store i32 %210, i32* %12, align 4
  %211 = load i64, i64* %10, align 8
  %212 = getelementptr inbounds [110 x %"class.std::__cxx11::basic_string"], [110 x %"class.std::__cxx11::basic_string"]* @_Z1SB5cxx11, i64 0, i64 %211
  %213 = load i64, i64* %11, align 8
  %214 = call dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"* %212, i64 %213)
  %215 = load i8, i8* %214, align 1
  %216 = sext i8 %215 to i32
  %217 = icmp eq i32 %216, 111
  br i1 %217, label %218, label %254

; <label>:218:                                    ; preds = %200
  %219 = load i32, i32* %12, align 4
  %220 = load i32, i32* %6, align 4
  %221 = sext i32 %220 to i64
  %222 = load i64, i64* %11, align 8
  %223 = sub i64 %221, -3479328297321102852
  %224 = add i64 %223, %222
  %225 = add i64 %224, -3479328297321102852
  %226 = add nsw i64 %221, %222
  %227 = trunc i64 %225 to i32
  call void @_ZN7MaxFlow8add_edgeEiix(%struct.MaxFlow* @mf, i32 %219, i32 %227, i64 1000000010)
  %228 = load i32, i32* %12, align 4
  %229 = load i32, i32* %7, align 4
  %230 = sext i32 %229 to i64
  %231 = load i64, i64* %10, align 8
  %232 = sub i64 %230, 2543321785284987963
  %233 = add i64 %232, %231
  %234 = add i64 %233, 2543321785284987963
  %235 = add nsw i64 %230, %231
  %236 = trunc i64 %234 to i32
  call void @_ZN7MaxFlow8add_edgeEiix(%struct.MaxFlow* @mf, i32 %228, i32 %236, i64 1000000010)
  %237 = load i32, i32* %6, align 4
  %238 = sext i32 %237 to i64
  %239 = load i64, i64* %11, align 8
  %240 = sub i64 0, %239
  %241 = sub i64 %238, %240
  %242 = add nsw i64 %238, %239
  %243 = trunc i64 %241 to i32
  %244 = load i32, i32* %12, align 4
  call void @_ZN7MaxFlow8add_edgeEiix(%struct.MaxFlow* @mf, i32 %243, i32 %244, i64 1)
  %245 = load i32, i32* %7, align 4
  %246 = sext i32 %245 to i64
  %247 = load i64, i64* %10, align 8
  %248 = sub i64 %246, -2823848268087081486
  %249 = add i64 %248, %247
  %250 = add i64 %249, -2823848268087081486
  %251 = add nsw i64 %246, %247
  %252 = trunc i64 %250 to i32
  %253 = load i32, i32* %12, align 4
  call void @_ZN7MaxFlow8add_edgeEiix(%struct.MaxFlow* @mf, i32 %252, i32 %253, i64 1)
  br label %471

; <label>:254:                                    ; preds = %200
  %255 = load i32, i32* @x.19
  %256 = load i32, i32* @y.20
  %257 = sub i32 0, 1
  %258 = add i32 %255, %257
  %259 = sub i32 %255, 1
  %260 = mul i32 %255, %258
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %256, 10
  %264 = xor i1 %262, true
  %265 = xor i1 %263, true
  %266 = xor i1 true, true
  %267 = and i1 %264, true
  %268 = and i1 %262, %266
  %269 = and i1 %265, true
  %270 = and i1 %263, %266
  %271 = or i1 %267, %268
  %272 = or i1 %269, %270
  %273 = xor i1 %271, %272
  %274 = or i1 %264, %265
  %275 = xor i1 %274, true
  %276 = or i1 true, %266
  %277 = and i1 %275, %276
  %278 = or i1 %273, %277
  %279 = or i1 %262, %263
  br i1 %278, label %280, label %691

; <label>:280:                                    ; preds = %254, %691
  %281 = load i64, i64* %10, align 8
  %282 = getelementptr inbounds [110 x %"class.std::__cxx11::basic_string"], [110 x %"class.std::__cxx11::basic_string"]* @_Z1SB5cxx11, i64 0, i64 %281
  %283 = load i64, i64* %11, align 8
  %284 = call dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"* %282, i64 %283)
  %285 = load i8, i8* %284, align 1
  %286 = sext i8 %285 to i32
  %287 = icmp eq i32 %286, 83
  %288 = load i32, i32* @x.19
  %289 = load i32, i32* @y.20
  %290 = add i32 %288, -1165815418
  %291 = sub i32 %290, 1
  %292 = sub i32 %291, -1165815418
  %293 = sub i32 %288, 1
  %294 = mul i32 %288, %292
  %295 = urem i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %289, 10
  %298 = and i1 %296, %297
  %299 = xor i1 %296, %297
  %300 = or i1 %298, %299
  %301 = or i1 %296, %297
  br i1 %300, label %302, label %691

; <label>:302:                                    ; preds = %280
  br i1 %287, label %303, label %340

; <label>:303:                                    ; preds = %302
  %304 = load i32, i32* %8, align 4
  %305 = load i32, i32* %12, align 4
  call void @_ZN7MaxFlow8add_edgeEiix(%struct.MaxFlow* @mf, i32 %304, i32 %305, i64 1000000010)
  %306 = load i32, i32* %12, align 4
  %307 = load i32, i32* %6, align 4
  %308 = sext i32 %307 to i64
  %309 = load i64, i64* %11, align 8
  %310 = sub i64 0, %308
  %311 = sub i64 0, %309
  %312 = add i64 %310, %311
  %313 = sub i64 0, %312
  %314 = add nsw i64 %308, %309
  %315 = trunc i64 %313 to i32
  call void @_ZN7MaxFlow8add_edgeEiix(%struct.MaxFlow* @mf, i32 %306, i32 %315, i64 1000000010)
  %316 = load i32, i32* %12, align 4
  %317 = load i32, i32* %7, align 4
  %318 = sext i32 %317 to i64
  %319 = load i64, i64* %10, align 8
  %320 = sub i64 0, %319
  %321 = sub i64 %318, %320
  %322 = add nsw i64 %318, %319
  %323 = trunc i64 %321 to i32
  call void @_ZN7MaxFlow8add_edgeEiix(%struct.MaxFlow* @mf, i32 %316, i32 %323, i64 1000000010)
  %324 = load i32, i32* %6, align 4
  %325 = sext i32 %324 to i64
  %326 = load i64, i64* %11, align 8
  %327 = sub i64 0, %326
  %328 = sub i64 %325, %327
  %329 = add nsw i64 %325, %326
  %330 = trunc i64 %328 to i32
  %331 = load i32, i32* %12, align 4
  call void @_ZN7MaxFlow8add_edgeEiix(%struct.MaxFlow* @mf, i32 %330, i32 %331, i64 1000000010)
  %332 = load i32, i32* %7, align 4
  %333 = sext i32 %332 to i64
  %334 = load i64, i64* %10, align 8
  %335 = sub i64 0, %334
  %336 = sub i64 %333, %335
  %337 = add nsw i64 %333, %334
  %338 = trunc i64 %336 to i32
  %339 = load i32, i32* %12, align 4
  call void @_ZN7MaxFlow8add_edgeEiix(%struct.MaxFlow* @mf, i32 %338, i32 %339, i64 1000000010)
  br label %441

; <label>:340:                                    ; preds = %302
  %341 = load i32, i32* @x.19
  %342 = load i32, i32* @y.20
  %343 = add i32 %341, -832541315
  %344 = sub i32 %343, 1
  %345 = sub i32 %344, -832541315
  %346 = sub i32 %341, 1
  %347 = mul i32 %341, %345
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %342, 10
  %351 = xor i1 %349, true
  %352 = xor i1 %350, true
  %353 = xor i1 true, true
  %354 = and i1 %351, true
  %355 = and i1 %349, %353
  %356 = and i1 %352, true
  %357 = and i1 %350, %353
  %358 = or i1 %354, %355
  %359 = or i1 %356, %357
  %360 = xor i1 %358, %359
  %361 = or i1 %351, %352
  %362 = xor i1 %361, true
  %363 = or i1 true, %353
  %364 = and i1 %362, %363
  %365 = or i1 %360, %364
  %366 = or i1 %349, %350
  br i1 %365, label %367, label %699

; <label>:367:                                    ; preds = %340, %699
  %368 = load i64, i64* %10, align 8
  %369 = getelementptr inbounds [110 x %"class.std::__cxx11::basic_string"], [110 x %"class.std::__cxx11::basic_string"]* @_Z1SB5cxx11, i64 0, i64 %368
  %370 = load i64, i64* %11, align 8
  %371 = call dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"* %369, i64 %370)
  %372 = load i8, i8* %371, align 1
  %373 = sext i8 %372 to i32
  %374 = icmp eq i32 %373, 84
  %375 = load i32, i32* @x.19
  %376 = load i32, i32* @y.20
  %377 = sub i32 %375, -745019586
  %378 = sub i32 %377, 1
  %379 = add i32 %378, -745019586
  %380 = sub i32 %375, 1
  %381 = mul i32 %375, %379
  %382 = urem i32 %381, 2
  %383 = icmp eq i32 %382, 0
  %384 = icmp slt i32 %376, 10
  %385 = xor i1 %383, true
  %386 = xor i1 %384, true
  %387 = xor i1 true, true
  %388 = and i1 %385, true
  %389 = and i1 %383, %387
  %390 = and i1 %386, true
  %391 = and i1 %384, %387
  %392 = or i1 %388, %389
  %393 = or i1 %390, %391
  %394 = xor i1 %392, %393
  %395 = or i1 %385, %386
  %396 = xor i1 %395, true
  %397 = or i1 true, %387
  %398 = and i1 %396, %397
  %399 = or i1 %394, %398
  %400 = or i1 %383, %384
  br i1 %399, label %401, label %699

; <label>:401:                                    ; preds = %367
  br i1 %374, label %402, label %440

; <label>:402:                                    ; preds = %401
  %403 = load i32, i32* %12, align 4
  %404 = load i32, i32* %9, align 4
  call void @_ZN7MaxFlow8add_edgeEiix(%struct.MaxFlow* @mf, i32 %403, i32 %404, i64 1000000010)
  %405 = load i32, i32* %12, align 4
  %406 = load i32, i32* %6, align 4
  %407 = sext i32 %406 to i64
  %408 = load i64, i64* %11, align 8
  %409 = sub i64 %407, -6002267473462232061
  %410 = add i64 %409, %408
  %411 = add i64 %410, -6002267473462232061
  %412 = add nsw i64 %407, %408
  %413 = trunc i64 %411 to i32
  call void @_ZN7MaxFlow8add_edgeEiix(%struct.MaxFlow* @mf, i32 %405, i32 %413, i64 1000000010)
  %414 = load i32, i32* %12, align 4
  %415 = load i32, i32* %7, align 4
  %416 = sext i32 %415 to i64
  %417 = load i64, i64* %10, align 8
  %418 = sub i64 0, %417
  %419 = sub i64 %416, %418
  %420 = add nsw i64 %416, %417
  %421 = trunc i64 %419 to i32
  call void @_ZN7MaxFlow8add_edgeEiix(%struct.MaxFlow* @mf, i32 %414, i32 %421, i64 1000000010)
  %422 = load i32, i32* %6, align 4
  %423 = sext i32 %422 to i64
  %424 = load i64, i64* %11, align 8
  %425 = sub i64 0, %424
  %426 = sub i64 %423, %425
  %427 = add nsw i64 %423, %424
  %428 = trunc i64 %426 to i32
  %429 = load i32, i32* %12, align 4
  call void @_ZN7MaxFlow8add_edgeEiix(%struct.MaxFlow* @mf, i32 %428, i32 %429, i64 1000000010)
  %430 = load i32, i32* %7, align 4
  %431 = sext i32 %430 to i64
  %432 = load i64, i64* %10, align 8
  %433 = sub i64 0, %431
  %434 = sub i64 0, %432
  %435 = add i64 %433, %434
  %436 = sub i64 0, %435
  %437 = add nsw i64 %431, %432
  %438 = trunc i64 %436 to i32
  %439 = load i32, i32* %12, align 4
  call void @_ZN7MaxFlow8add_edgeEiix(%struct.MaxFlow* @mf, i32 %438, i32 %439, i64 1000000010)
  br label %440

; <label>:440:                                    ; preds = %402, %401
  br label %441

; <label>:441:                                    ; preds = %440, %303
  %442 = load i32, i32* @x.19
  %443 = load i32, i32* @y.20
  %444 = sub i32 %442, -2106847585
  %445 = sub i32 %444, 1
  %446 = add i32 %445, -2106847585
  %447 = sub i32 %442, 1
  %448 = mul i32 %442, %446
  %449 = urem i32 %448, 2
  %450 = icmp eq i32 %449, 0
  %451 = icmp slt i32 %443, 10
  %452 = and i1 %450, %451
  %453 = xor i1 %450, %451
  %454 = or i1 %452, %453
  %455 = or i1 %450, %451
  br i1 %454, label %456, label %707

; <label>:456:                                    ; preds = %441, %707
  %457 = load i32, i32* @x.19
  %458 = load i32, i32* @y.20
  %459 = sub i32 0, 1
  %460 = add i32 %457, %459
  %461 = sub i32 %457, 1
  %462 = mul i32 %457, %460
  %463 = urem i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = icmp slt i32 %458, 10
  %466 = and i1 %464, %465
  %467 = xor i1 %464, %465
  %468 = or i1 %466, %467
  %469 = or i1 %464, %465
  br i1 %468, label %470, label %707

; <label>:470:                                    ; preds = %456
  br label %471

; <label>:471:                                    ; preds = %470, %218
  %472 = load i32, i32* @x.19
  %473 = load i32, i32* @y.20
  %474 = sub i32 0, 1
  %475 = add i32 %472, %474
  %476 = sub i32 %472, 1
  %477 = mul i32 %472, %475
  %478 = urem i32 %477, 2
  %479 = icmp eq i32 %478, 0
  %480 = icmp slt i32 %473, 10
  %481 = xor i1 %479, true
  %482 = xor i1 %480, true
  %483 = xor i1 false, true
  %484 = and i1 %481, false
  %485 = and i1 %479, %483
  %486 = and i1 %482, false
  %487 = and i1 %480, %483
  %488 = or i1 %484, %485
  %489 = or i1 %486, %487
  %490 = xor i1 %488, %489
  %491 = or i1 %481, %482
  %492 = xor i1 %491, true
  %493 = or i1 false, %483
  %494 = and i1 %492, %493
  %495 = or i1 %490, %494
  %496 = or i1 %479, %480
  br i1 %495, label %497, label %708

; <label>:497:                                    ; preds = %471, %708
  %498 = load i32, i32* @x.19
  %499 = load i32, i32* @y.20
  %500 = sub i32 0, 1
  %501 = add i32 %498, %500
  %502 = sub i32 %498, 1
  %503 = mul i32 %498, %501
  %504 = urem i32 %503, 2
  %505 = icmp eq i32 %504, 0
  %506 = icmp slt i32 %499, 10
  %507 = xor i1 %505, true
  %508 = xor i1 %506, true
  %509 = xor i1 true, true
  %510 = and i1 %507, true
  %511 = and i1 %505, %509
  %512 = and i1 %508, true
  %513 = and i1 %506, %509
  %514 = or i1 %510, %511
  %515 = or i1 %512, %513
  %516 = xor i1 %514, %515
  %517 = or i1 %507, %508
  %518 = xor i1 %517, true
  %519 = or i1 true, %509
  %520 = and i1 %518, %519
  %521 = or i1 %516, %520
  %522 = or i1 %505, %506
  br i1 %521, label %523, label %708

; <label>:523:                                    ; preds = %497
  br label %524

; <label>:524:                                    ; preds = %523
  %525 = load i64, i64* %11, align 8
  %526 = sub i64 0, 1
  %527 = sub i64 %525, %526
  %528 = add nsw i64 %525, 1
  store i64 %527, i64* %11, align 8
  br label %195

; <label>:529:                                    ; preds = %195
  %530 = load i32, i32* @x.19
  %531 = load i32, i32* @y.20
  %532 = sub i32 %530, -417575333
  %533 = sub i32 %532, 1
  %534 = add i32 %533, -417575333
  %535 = sub i32 %530, 1
  %536 = mul i32 %530, %534
  %537 = urem i32 %536, 2
  %538 = icmp eq i32 %537, 0
  %539 = icmp slt i32 %531, 10
  %540 = xor i1 %538, true
  %541 = xor i1 %539, true
  %542 = xor i1 true, true
  %543 = and i1 %540, true
  %544 = and i1 %538, %542
  %545 = and i1 %541, true
  %546 = and i1 %539, %542
  %547 = or i1 %543, %544
  %548 = or i1 %545, %546
  %549 = xor i1 %547, %548
  %550 = or i1 %540, %541
  %551 = xor i1 %550, true
  %552 = or i1 true, %542
  %553 = and i1 %551, %552
  %554 = or i1 %549, %553
  %555 = or i1 %538, %539
  br i1 %554, label %556, label %709

; <label>:556:                                    ; preds = %529, %709
  %557 = load i32, i32* @x.19
  %558 = load i32, i32* @y.20
  %559 = sub i32 0, 1
  %560 = add i32 %557, %559
  %561 = sub i32 %557, 1
  %562 = mul i32 %557, %560
  %563 = urem i32 %562, 2
  %564 = icmp eq i32 %563, 0
  %565 = icmp slt i32 %558, 10
  %566 = xor i1 %564, true
  %567 = xor i1 %565, true
  %568 = xor i1 true, true
  %569 = and i1 %566, true
  %570 = and i1 %564, %568
  %571 = and i1 %567, true
  %572 = and i1 %565, %568
  %573 = or i1 %569, %570
  %574 = or i1 %571, %572
  %575 = xor i1 %573, %574
  %576 = or i1 %566, %567
  %577 = xor i1 %576, true
  %578 = or i1 true, %568
  %579 = and i1 %577, %578
  %580 = or i1 %575, %579
  %581 = or i1 %564, %565
  br i1 %580, label %582, label %709

; <label>:582:                                    ; preds = %556
  br label %583

; <label>:583:                                    ; preds = %582
  %584 = load i64, i64* %10, align 8
  %585 = sub i64 %584, 8310389217390918738
  %586 = add i64 %585, 1
  %587 = add i64 %586, 8310389217390918738
  %588 = add nsw i64 %584, 1
  store i64 %587, i64* %10, align 8
  br label %135

; <label>:589:                                    ; preds = %135
  %590 = load i32, i32* %8, align 4
  %591 = load i32, i32* %9, align 4
  %592 = call i64 @_ZN7MaxFlow8max_flowEii(%struct.MaxFlow* @mf, i32 %590, i32 %591)
  store i64 %592, i64* %13, align 8
  %593 = load i64, i64* %13, align 8
  %594 = load i32, i32* @n, align 4
  %595 = load i32, i32* @m, align 4
  %596 = mul nsw i32 %594, %595
  %597 = sext i32 %596 to i64
  %598 = icmp sgt i64 %593, %597
  br i1 %598, label %599, label %654

; <label>:599:                                    ; preds = %589
  %600 = load i32, i32* @x.19
  %601 = load i32, i32* @y.20
  %602 = sub i32 %600, 1854128089
  %603 = sub i32 %602, 1
  %604 = add i32 %603, 1854128089
  %605 = sub i32 %600, 1
  %606 = mul i32 %600, %604
  %607 = urem i32 %606, 2
  %608 = icmp eq i32 %607, 0
  %609 = icmp slt i32 %601, 10
  %610 = xor i1 %608, true
  %611 = xor i1 %609, true
  %612 = xor i1 true, true
  %613 = and i1 %610, true
  %614 = and i1 %608, %612
  %615 = and i1 %611, true
  %616 = and i1 %609, %612
  %617 = or i1 %613, %614
  %618 = or i1 %615, %616
  %619 = xor i1 %617, %618
  %620 = or i1 %610, %611
  %621 = xor i1 %620, true
  %622 = or i1 true, %612
  %623 = and i1 %621, %622
  %624 = or i1 %619, %623
  %625 = or i1 %608, %609
  br i1 %624, label %626, label %710

; <label>:626:                                    ; preds = %599, %710
  store i64 -1, i64* %13, align 8
  %627 = load i32, i32* @x.19
  %628 = load i32, i32* @y.20
  %629 = add i32 %627, -418320174
  %630 = sub i32 %629, 1
  %631 = sub i32 %630, -418320174
  %632 = sub i32 %627, 1
  %633 = mul i32 %627, %631
  %634 = urem i32 %633, 2
  %635 = icmp eq i32 %634, 0
  %636 = icmp slt i32 %628, 10
  %637 = xor i1 %635, true
  %638 = xor i1 %636, true
  %639 = xor i1 true, true
  %640 = and i1 %637, true
  %641 = and i1 %635, %639
  %642 = and i1 %638, true
  %643 = and i1 %636, %639
  %644 = or i1 %640, %641
  %645 = or i1 %642, %643
  %646 = xor i1 %644, %645
  %647 = or i1 %637, %638
  %648 = xor i1 %647, true
  %649 = or i1 true, %639
  %650 = and i1 %648, %649
  %651 = or i1 %646, %650
  %652 = or i1 %635, %636
  br i1 %651, label %653, label %710

; <label>:653:                                    ; preds = %626
  br label %654

; <label>:654:                                    ; preds = %653, %589
  %655 = load i64, i64* %13, align 8
  %656 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %655)
  %657 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %656, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  ret i32 0

; <label>:658:                                    ; preds = %105
  %659 = load i8*, i8** %4, align 8
  %660 = load i32, i32* %5, align 4
  %661 = insertvalue { i8*, i32 } undef, i8* %659, 0
  %662 = insertvalue { i8*, i32 } %661, i32 %660, 1
  resume { i8*, i32 } %662

; <label>:663:                                    ; preds = %38, %23
  call void @_Z4stinB5cxx11v(%"class.std::__cxx11::basic_string"* sret %3)
  %664 = load i64, i64* %2, align 8
  %665 = getelementptr inbounds [110 x %"class.std::__cxx11::basic_string"], [110 x %"class.std::__cxx11::basic_string"]* @_Z1SB5cxx11, i64 0, i64 %664
  br label %38

; <label>:666:                                    ; preds = %73, %58
  %667 = load i64, i64* %2, align 8
  %668 = add i64 0, -6707585188558555562
  %669 = sub i64 %668, %667
  %670 = sub i64 %669, -6707585188558555562
  %671 = sub i64 0, %667
  %672 = sub i64 0, 1
  %673 = sub i64 %670, %672
  %674 = add i64 %670, 1
  %675 = shl i64 %667, 1
  %676 = sub i64 %667, 8288552367141179044
  %677 = sub i64 %676, 1
  %678 = add i64 %677, 8288552367141179044
  %679 = sub i64 %667, 1
  %680 = mul i64 %678, 1
  %681 = sub i64 %667, -4457628555801405284
  %682 = sub i64 %681, 1
  %683 = add i64 %682, -4457628555801405284
  %684 = sub i64 %667, 1
  %685 = mul i64 %683, 1
  %686 = shl i64 %667, 1
  %687 = sub i64 0, 1
  %688 = sub i64 %667, %687
  %689 = add nsw i64 %667, 1
  store i64 %688, i64* %2, align 8
  br label %73

; <label>:690:                                    ; preds = %167, %140
  store i64 0, i64* %11, align 8
  br label %167

; <label>:691:                                    ; preds = %280, %254
  %692 = load i64, i64* %10, align 8
  %693 = getelementptr inbounds [110 x %"class.std::__cxx11::basic_string"], [110 x %"class.std::__cxx11::basic_string"]* @_Z1SB5cxx11, i64 0, i64 %692
  %694 = load i64, i64* %11, align 8
  %695 = call dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"* %693, i64 %694)
  %696 = load i8, i8* %695, align 1
  %697 = sext i8 %696 to i32
  %698 = icmp eq i32 %697, 83
  br label %280

; <label>:699:                                    ; preds = %367, %340
  %700 = load i64, i64* %10, align 8
  %701 = getelementptr inbounds [110 x %"class.std::__cxx11::basic_string"], [110 x %"class.std::__cxx11::basic_string"]* @_Z1SB5cxx11, i64 0, i64 %700
  %702 = load i64, i64* %11, align 8
  %703 = call dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"* %701, i64 %702)
  %704 = load i8, i8* %703, align 1
  %705 = sext i8 %704 to i32
  %706 = icmp eq i32 %705, 84
  br label %367

; <label>:707:                                    ; preds = %456, %441
  br label %456

; <label>:708:                                    ; preds = %497, %471
  br label %497

; <label>:709:                                    ; preds = %556, %529
  br label %556

; <label>:710:                                    ; preds = %626, %599
  store i64 -1, i64* %13, align 8
  br label %626
}

declare dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN7MaxFlow4initEi(%struct.MaxFlow*, i32) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %struct.MaxFlow*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::vector", align 8
  %6 = alloca %"class.std::vector.3", align 8
  %7 = alloca %"class.std::allocator.5", align 1
  %8 = alloca i8*
  %9 = alloca i32
  %10 = alloca %"class.std::allocator.0", align 1
  store %struct.MaxFlow* %0, %struct.MaxFlow** %3, align 8
  store i32 %1, i32* %4, align 4
  %11 = load %struct.MaxFlow*, %struct.MaxFlow** %3, align 8
  %12 = load i32, i32* %4, align 4
  %13 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %11, i32 0, i32 5
  store i32 %12, i32* %13, align 8
  %14 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %11, i32 0, i32 5
  %15 = load i32, i32* %14, align 8
  %16 = sext i32 %15 to i64
  call void @_ZNSaIN7MaxFlow4edgeEEC2Ev(%"class.std::allocator.5"* %7) #3
  invoke void @_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EEC2EmRKS2_(%"class.std::vector.3"* %6, i64 0, %"class.std::allocator.5"* dereferenceable(1) %7)
          to label %17 unwind label %51

; <label>:17:                                     ; preds = %2
  %18 = load i32, i32* @x.21
  %19 = load i32, i32* @y.22
  %20 = sub i32 %18, -1798778806
  %21 = sub i32 %20, 1
  %22 = add i32 %21, -1798778806
  %23 = sub i32 %18, 1
  %24 = mul i32 %18, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %19, 10
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  br i1 %30, label %32, label %65

; <label>:32:                                     ; preds = %17, %65
  call void @_ZNSaISt6vectorIN7MaxFlow4edgeESaIS1_EEEC2Ev(%"class.std::allocator.0"* %10) #3
  %33 = load i32, i32* @x.21
  %34 = load i32, i32* @y.22
  %35 = sub i32 %33, 625601724
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 625601724
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  br i1 %45, label %47, label %65

; <label>:47:                                     ; preds = %32
  invoke void @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EEC2EmRKS3_RKS4_(%"class.std::vector"* %5, i64 %16, %"class.std::vector.3"* dereferenceable(24) %6, %"class.std::allocator.0"* dereferenceable(1) %10)
          to label %48 unwind label %55

; <label>:48:                                     ; preds = %47
  %49 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %11, i32 0, i32 2
  %50 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EEaSEOS5_(%"class.std::vector"* %49, %"class.std::vector"* dereferenceable(24) %5) #3
  call void @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EED2Ev(%"class.std::vector"* %5) #3
  call void @_ZNSaISt6vectorIN7MaxFlow4edgeESaIS1_EEED2Ev(%"class.std::allocator.0"* %10) #3
  call void @_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EED2Ev(%"class.std::vector.3"* %6) #3
  call void @_ZNSaIN7MaxFlow4edgeEED2Ev(%"class.std::allocator.5"* %7) #3
  ret void

; <label>:51:                                     ; preds = %2
  %52 = landingpad { i8*, i32 }
          cleanup
  %53 = extractvalue { i8*, i32 } %52, 0
  store i8* %53, i8** %8, align 8
  %54 = extractvalue { i8*, i32 } %52, 1
  store i32 %54, i32* %9, align 4
  br label %59

; <label>:55:                                     ; preds = %47
  %56 = landingpad { i8*, i32 }
          cleanup
  %57 = extractvalue { i8*, i32 } %56, 0
  store i8* %57, i8** %8, align 8
  %58 = extractvalue { i8*, i32 } %56, 1
  store i32 %58, i32* %9, align 4
  call void @_ZNSaISt6vectorIN7MaxFlow4edgeESaIS1_EEED2Ev(%"class.std::allocator.0"* %10) #3
  call void @_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EED2Ev(%"class.std::vector.3"* %6) #3
  br label %59

; <label>:59:                                     ; preds = %55, %51
  call void @_ZNSaIN7MaxFlow4edgeEED2Ev(%"class.std::allocator.5"* %7) #3
  br label %60

; <label>:60:                                     ; preds = %59
  %61 = load i8*, i8** %8, align 8
  %62 = load i32, i32* %9, align 4
  %63 = insertvalue { i8*, i32 } undef, i8* %61, 0
  %64 = insertvalue { i8*, i32 } %63, i32 %62, 1
  resume { i8*, i32 } %64

; <label>:65:                                     ; preds = %32, %17
  call void @_ZNSaISt6vectorIN7MaxFlow4edgeESaIS1_EEEC2Ev(%"class.std::allocator.0"* %10) #3
  br label %32
}

declare dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"*, i64) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN7MaxFlow8add_edgeEiix(%struct.MaxFlow*, i32, i32, i64) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.23
  %8 = load i32, i32* @y.24
  %9 = sub i32 %7, -1324494469
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -1324494469
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 406889053, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %134
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 406889053, label %21
    i32 -1099701370, label %41
    i32 1948720325, label %87
    i32 1450228215, label %88
  ]

; <label>:20:                                     ; preds = %18
  br label %134

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1099701370, i32 1450228215
  store i32 %40, i32* %17
  br label %134

; <label>:41:                                     ; preds = %18
  %42 = alloca %struct.MaxFlow*, align 8
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i64, align 8
  %46 = alloca i64, align 8
  %47 = alloca i64, align 8
  store %struct.MaxFlow* %0, %struct.MaxFlow** %42, align 8
  store i32 %1, i32* %43, align 4
  store i32 %2, i32* %44, align 4
  store i64 %3, i64* %45, align 8
  %48 = load %struct.MaxFlow*, %struct.MaxFlow** %42, align 8
  %49 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %48, i32 0, i32 2
  %50 = load i32, i32* %43, align 4
  %51 = sext i32 %50 to i64
  %52 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %49, i64 %51) #3
  %53 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %48, i32 0, i32 2
  %54 = load i32, i32* %44, align 4
  %55 = sext i32 %54 to i64
  %56 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %53, i64 %55) #3
  %57 = call i64 @_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %56) #3
  store i64 %57, i64* %46, align 8
  call void @_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EE12emplace_backIJRiRxxEEEvDpOT_(%"class.std::vector.3"* %52, i32* dereferenceable(4) %44, i64* dereferenceable(8) %45, i64* dereferenceable(8) %46)
  %58 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %48, i32 0, i32 2
  %59 = load i32, i32* %44, align 4
  %60 = sext i32 %59 to i64
  %61 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %58, i64 %60) #3
  %62 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %48, i32 0, i32 0
  %63 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %48, i32 0, i32 2
  %64 = load i32, i32* %43, align 4
  %65 = sext i32 %64 to i64
  %66 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %63, i64 %65) #3
  %67 = call i64 @_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %66) #3
  %68 = add i64 %67, -5601982070276711614
  %69 = sub i64 %68, 1
  %70 = sub i64 %69, -5601982070276711614
  %71 = sub nsw i64 %67, 1
  store i64 %70, i64* %47, align 8
  call void @_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EE12emplace_backIJRiRKxxEEEvDpOT_(%"class.std::vector.3"* %61, i32* dereferenceable(4) %43, i64* dereferenceable(8) %62, i64* dereferenceable(8) %47)
  %72 = load i32, i32* @x.23
  %73 = load i32, i32* @y.24
  %74 = add i32 %72, -1216256486
  %75 = sub i32 %74, 1
  %76 = sub i32 %75, -1216256486
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  %86 = select i1 %84, i32 1948720325, i32 1450228215
  store i32 %86, i32* %17
  br label %134

; <label>:87:                                     ; preds = %18
  ret void

; <label>:88:                                     ; preds = %18
  %89 = alloca %struct.MaxFlow*, align 8
  %90 = alloca i32, align 4
  %91 = alloca i32, align 4
  %92 = alloca i64, align 8
  %93 = alloca i64, align 8
  %94 = alloca i64, align 8
  store %struct.MaxFlow* %0, %struct.MaxFlow** %89, align 8
  store i32 %1, i32* %90, align 4
  store i32 %2, i32* %91, align 4
  store i64 %3, i64* %92, align 8
  %95 = load %struct.MaxFlow*, %struct.MaxFlow** %89, align 8
  %96 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %95, i32 0, i32 2
  %97 = load i32, i32* %90, align 4
  %98 = sext i32 %97 to i64
  %99 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %96, i64 %98) #3
  %100 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %95, i32 0, i32 2
  %101 = load i32, i32* %91, align 4
  %102 = sext i32 %101 to i64
  %103 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %100, i64 %102) #3
  %104 = call i64 @_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %103) #3
  store i64 %104, i64* %93, align 8
  call void @_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EE12emplace_backIJRiRxxEEEvDpOT_(%"class.std::vector.3"* %99, i32* dereferenceable(4) %91, i64* dereferenceable(8) %92, i64* dereferenceable(8) %93)
  %105 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %95, i32 0, i32 2
  %106 = load i32, i32* %91, align 4
  %107 = sext i32 %106 to i64
  %108 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %105, i64 %107) #3
  %109 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %95, i32 0, i32 0
  %110 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %95, i32 0, i32 2
  %111 = load i32, i32* %90, align 4
  %112 = sext i32 %111 to i64
  %113 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %110, i64 %112) #3
  %114 = call i64 @_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %113) #3
  %115 = shl i64 %114, 1
  %116 = shl i64 %114, 1
  %117 = shl i64 %114, 1
  %118 = add i64 %114, 1408142577026661247
  %119 = sub i64 %118, 1
  %120 = sub i64 %119, 1408142577026661247
  %121 = sub i64 %114, 1
  %122 = mul i64 %120, 1
  %123 = sub i64 0, %114
  %124 = add i64 0, %123
  %125 = sub i64 0, %114
  %126 = add i64 %124, -7145988384170087744
  %127 = add i64 %126, 1
  %128 = sub i64 %127, -7145988384170087744
  %129 = add i64 %124, 1
  %130 = sub i64 %114, -7398078693723247316
  %131 = sub i64 %130, 1
  %132 = add i64 %131, -7398078693723247316
  %133 = sub nsw i64 %114, 1
  store i64 %132, i64* %94, align 8
  call void @_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EE12emplace_backIJRiRKxxEEEvDpOT_(%"class.std::vector.3"* %108, i32* dereferenceable(4) %90, i64* dereferenceable(8) %109, i64* dereferenceable(8) %94)
  store i32 -1099701370, i32* %17
  br label %134

; <label>:134:                                    ; preds = %88, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN7MaxFlow8max_flowEii(%struct.MaxFlow*, i32, i32) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.25
  %5 = load i32, i32* @y.26
  %6 = add i32 %4, -451013956
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -451013956
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %269

; <label>:18:                                     ; preds = %3, %269
  %19 = alloca %struct.MaxFlow*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i64, align 8
  %23 = alloca %"class.std::vector.8", align 8
  %24 = alloca i32, align 4
  %25 = alloca %"class.std::allocator.10", align 1
  %26 = alloca i8*
  %27 = alloca i32
  %28 = alloca i64, align 8
  store %struct.MaxFlow* %0, %struct.MaxFlow** %19, align 8
  store i32 %1, i32* %20, align 4
  store i32 %2, i32* %21, align 4
  %29 = load %struct.MaxFlow*, %struct.MaxFlow** %19, align 8
  %30 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %29, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %22, align 8
  %32 = load i32, i32* @x.25
  %33 = load i32, i32* @y.26
  %34 = sub i32 %32, -417867762
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -417867762
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %269

; <label>:46:                                     ; preds = %18
  br label %47

; <label>:47:                                     ; preds = %46, %209
  %48 = load i32, i32* @x.25
  %49 = load i32, i32* @y.26
  %50 = sub i32 %48, 1778714792
  %51 = sub i32 %50, 1
  %52 = add i32 %51, 1778714792
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  br i1 %72, label %74, label %283

; <label>:74:                                     ; preds = %47, %283
  %75 = load i32, i32* %20, align 4
  call void @_ZN7MaxFlow3bfsEi(%struct.MaxFlow* %29, i32 %75)
  %76 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %29, i32 0, i32 3
  %77 = load i32, i32* %21, align 4
  %78 = sext i32 %77 to i64
  %79 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %76, i64 %78) #3
  %80 = load i32, i32* %79, align 4
  %81 = icmp slt i32 %80, 0
  %82 = load i32, i32* @x.25
  %83 = load i32, i32* @y.26
  %84 = sub i32 %82, -942935119
  %85 = sub i32 %84, 1
  %86 = add i32 %85, -942935119
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = xor i1 %90, true
  %93 = xor i1 %91, true
  %94 = xor i1 true, true
  %95 = and i1 %92, true
  %96 = and i1 %90, %94
  %97 = and i1 %93, true
  %98 = and i1 %91, %94
  %99 = or i1 %95, %96
  %100 = or i1 %97, %98
  %101 = xor i1 %99, %100
  %102 = or i1 %92, %93
  %103 = xor i1 %102, true
  %104 = or i1 true, %94
  %105 = and i1 %103, %104
  %106 = or i1 %101, %105
  %107 = or i1 %90, %91
  br i1 %106, label %108, label %283

; <label>:108:                                    ; preds = %74
  br i1 %81, label %109, label %140

; <label>:109:                                    ; preds = %108
  %110 = load i32, i32* @x.25
  %111 = load i32, i32* @y.26
  %112 = sub i32 0, 1
  %113 = add i32 %110, %112
  %114 = sub i32 %110, 1
  %115 = mul i32 %110, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %111, 10
  %119 = and i1 %117, %118
  %120 = xor i1 %117, %118
  %121 = or i1 %119, %120
  %122 = or i1 %117, %118
  br i1 %121, label %123, label %291

; <label>:123:                                    ; preds = %109, %291
  %124 = load i64, i64* %22, align 8
  %125 = load i32, i32* @x.25
  %126 = load i32, i32* @y.26
  %127 = add i32 %125, -1616579831
  %128 = sub i32 %127, 1
  %129 = sub i32 %128, -1616579831
  %130 = sub i32 %125, 1
  %131 = mul i32 %125, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %126, 10
  %135 = and i1 %133, %134
  %136 = xor i1 %133, %134
  %137 = or i1 %135, %136
  %138 = or i1 %133, %134
  br i1 %137, label %139, label %291

; <label>:139:                                    ; preds = %123
  ret i64 %124

; <label>:140:                                    ; preds = %108
  %141 = load i32, i32* @x.25
  %142 = load i32, i32* @y.26
  %143 = add i32 %141, -1686054344
  %144 = sub i32 %143, 1
  %145 = sub i32 %144, -1686054344
  %146 = sub i32 %141, 1
  %147 = mul i32 %141, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %142, 10
  %151 = and i1 %149, %150
  %152 = xor i1 %149, %150
  %153 = or i1 %151, %152
  %154 = or i1 %149, %150
  br i1 %153, label %155, label %293

; <label>:155:                                    ; preds = %140, %293
  %156 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %29, i32 0, i32 5
  %157 = load i32, i32* %156, align 8
  %158 = sext i32 %157 to i64
  store i32 0, i32* %24, align 4
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.10"* %25) #3
  %159 = load i32, i32* @x.25
  %160 = load i32, i32* @y.26
  %161 = sub i32 0, 1
  %162 = add i32 %159, %161
  %163 = sub i32 %159, 1
  %164 = mul i32 %159, %162
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %160, 10
  %168 = xor i1 %166, true
  %169 = xor i1 %167, true
  %170 = xor i1 false, true
  %171 = and i1 %168, false
  %172 = and i1 %166, %170
  %173 = and i1 %169, false
  %174 = and i1 %167, %170
  %175 = or i1 %171, %172
  %176 = or i1 %173, %174
  %177 = xor i1 %175, %176
  %178 = or i1 %168, %169
  %179 = xor i1 %178, true
  %180 = or i1 false, %170
  %181 = and i1 %179, %180
  %182 = or i1 %177, %181
  %183 = or i1 %166, %167
  br i1 %182, label %184, label %293

; <label>:184:                                    ; preds = %155
  invoke void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector.8"* %23, i64 %158, i32* dereferenceable(4) %24, %"class.std::allocator.10"* dereferenceable(1) %25)
          to label %185 unwind label %205

; <label>:185:                                    ; preds = %184
  %186 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %29, i32 0, i32 4
  %187 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIiSaIiEEaSEOS1_(%"class.std::vector.8"* %186, %"class.std::vector.8"* dereferenceable(24) %23) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.8"* %23) #3
  call void @_ZNSaIiED2Ev(%"class.std::allocator.10"* %25) #3
  br label %188

; <label>:188:                                    ; preds = %197, %185
  %189 = load i32, i32* %20, align 4
  %190 = load i32, i32* %21, align 4
  %191 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %29, i32 0, i32 1
  %192 = load i64, i64* %191, align 8
  %193 = call i64 @_ZN7MaxFlow3dfsEiix(%struct.MaxFlow* %29, i32 %189, i32 %190, i64 %192)
  store i64 %193, i64* %28, align 8
  %194 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %29, i32 0, i32 0
  %195 = load i64, i64* %194, align 8
  %196 = icmp sgt i64 %193, %195
  br i1 %196, label %197, label %209

; <label>:197:                                    ; preds = %188
  %198 = load i64, i64* %28, align 8
  %199 = load i64, i64* %22, align 8
  %200 = sub i64 0, %199
  %201 = sub i64 0, %198
  %202 = add i64 %200, %201
  %203 = sub i64 0, %202
  %204 = add nsw i64 %199, %198
  store i64 %203, i64* %22, align 8
  br label %188

; <label>:205:                                    ; preds = %184
  %206 = landingpad { i8*, i32 }
          cleanup
  %207 = extractvalue { i8*, i32 } %206, 0
  store i8* %207, i8** %26, align 8
  %208 = extractvalue { i8*, i32 } %206, 1
  store i32 %208, i32* %27, align 4
  call void @_ZNSaIiED2Ev(%"class.std::allocator.10"* %25) #3
  br label %210

; <label>:209:                                    ; preds = %188
  br label %47

; <label>:210:                                    ; preds = %205
  %211 = load i32, i32* @x.25
  %212 = load i32, i32* @y.26
  %213 = sub i32 %211, -852445966
  %214 = sub i32 %213, 1
  %215 = add i32 %214, -852445966
  %216 = sub i32 %211, 1
  %217 = mul i32 %211, %215
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %212, 10
  %221 = xor i1 %219, true
  %222 = xor i1 %220, true
  %223 = xor i1 true, true
  %224 = and i1 %221, true
  %225 = and i1 %219, %223
  %226 = and i1 %222, true
  %227 = and i1 %220, %223
  %228 = or i1 %224, %225
  %229 = or i1 %226, %227
  %230 = xor i1 %228, %229
  %231 = or i1 %221, %222
  %232 = xor i1 %231, true
  %233 = or i1 true, %223
  %234 = and i1 %232, %233
  %235 = or i1 %230, %234
  %236 = or i1 %219, %220
  br i1 %235, label %237, label %297

; <label>:237:                                    ; preds = %210, %297
  %238 = load i8*, i8** %26, align 8
  %239 = load i32, i32* %27, align 4
  %240 = insertvalue { i8*, i32 } undef, i8* %238, 0
  %241 = insertvalue { i8*, i32 } %240, i32 %239, 1
  %242 = load i32, i32* @x.25
  %243 = load i32, i32* @y.26
  %244 = add i32 %242, 1092463645
  %245 = sub i32 %244, 1
  %246 = sub i32 %245, 1092463645
  %247 = sub i32 %242, 1
  %248 = mul i32 %242, %246
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %243, 10
  %252 = xor i1 %250, true
  %253 = xor i1 %251, true
  %254 = xor i1 true, true
  %255 = and i1 %252, true
  %256 = and i1 %250, %254
  %257 = and i1 %253, true
  %258 = and i1 %251, %254
  %259 = or i1 %255, %256
  %260 = or i1 %257, %258
  %261 = xor i1 %259, %260
  %262 = or i1 %252, %253
  %263 = xor i1 %262, true
  %264 = or i1 true, %254
  %265 = and i1 %263, %264
  %266 = or i1 %261, %265
  %267 = or i1 %250, %251
  br i1 %266, label %268, label %297

; <label>:268:                                    ; preds = %237
  resume { i8*, i32 } %241

; <label>:269:                                    ; preds = %18, %3
  %270 = alloca %struct.MaxFlow*, align 8
  %271 = alloca i32, align 4
  %272 = alloca i32, align 4
  %273 = alloca i64, align 8
  %274 = alloca %"class.std::vector.8", align 8
  %275 = alloca i32, align 4
  %276 = alloca %"class.std::allocator.10", align 1
  %277 = alloca i8*
  %278 = alloca i32
  %279 = alloca i64, align 8
  store %struct.MaxFlow* %0, %struct.MaxFlow** %270, align 8
  store i32 %1, i32* %271, align 4
  store i32 %2, i32* %272, align 4
  %280 = load %struct.MaxFlow*, %struct.MaxFlow** %270, align 8
  %281 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %280, i32 0, i32 0
  %282 = load i64, i64* %281, align 8
  store i64 %282, i64* %273, align 8
  br label %18

; <label>:283:                                    ; preds = %74, %47
  %284 = load i32, i32* %20, align 4
  call void @_ZN7MaxFlow3bfsEi(%struct.MaxFlow* %29, i32 %284)
  %285 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %29, i32 0, i32 3
  %286 = load i32, i32* %21, align 4
  %287 = sext i32 %286 to i64
  %288 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %285, i64 %287) #3
  %289 = load i32, i32* %288, align 4
  %290 = icmp slt i32 %289, 0
  br label %74

; <label>:291:                                    ; preds = %123, %109
  %292 = load i64, i64* %22, align 8
  br label %123

; <label>:293:                                    ; preds = %155, %140
  %294 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %29, i32 0, i32 5
  %295 = load i32, i32* %294, align 8
  %296 = sext i32 %295 to i64
  store i32 0, i32* %24, align 4
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.10"* %25) #3
  br label %155

; <label>:297:                                    ; preds = %237, %210
  %298 = load i8*, i8** %26, align 8
  %299 = load i32, i32* %27, align 4
  %300 = insertvalue { i8*, i32 } undef, i8* %298, 0
  %301 = insertvalue { i8*, i32 } %300, i32 %299, 1
  br label %237
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EEC2Ev(%"class.std::vector"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  invoke void @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EEC2Ev(%"struct.std::_Vector_base"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #10
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.8"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.29
  %3 = load i32, i32* @y.30
  %4 = sub i32 %2, 352521409
  %5 = sub i32 %4, 1
  %6 = add i32 %5, 352521409
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %93

; <label>:16:                                     ; preds = %1, %93
  %17 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %17, align 8
  %18 = load %"class.std::vector.8"*, %"class.std::vector.8"** %17, align 8
  %19 = bitcast %"class.std::vector.8"* %18 to %"struct.std::_Vector_base.9"*
  %20 = load i32, i32* @x.29
  %21 = load i32, i32* @y.30
  %22 = sub i32 %20, 455323569
  %23 = sub i32 %22, 1
  %24 = add i32 %23, 455323569
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  br i1 %32, label %34, label %93

; <label>:34:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base.9"* %19)
          to label %35 unwind label %90

; <label>:35:                                     ; preds = %34
  %36 = load i32, i32* @x.29
  %37 = load i32, i32* @y.30
  %38 = add i32 %36, -14834144
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, -14834144
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  br i1 %60, label %62, label %97

; <label>:62:                                     ; preds = %35, %97
  %63 = load i32, i32* @x.29
  %64 = load i32, i32* @y.30
  %65 = sub i32 %63, 1179723946
  %66 = sub i32 %65, 1
  %67 = add i32 %66, 1179723946
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = xor i1 %71, true
  %74 = xor i1 %72, true
  %75 = xor i1 true, true
  %76 = and i1 %73, true
  %77 = and i1 %71, %75
  %78 = and i1 %74, true
  %79 = and i1 %72, %75
  %80 = or i1 %76, %77
  %81 = or i1 %78, %79
  %82 = xor i1 %80, %81
  %83 = or i1 %73, %74
  %84 = xor i1 %83, true
  %85 = or i1 true, %75
  %86 = and i1 %84, %85
  %87 = or i1 %82, %86
  %88 = or i1 %71, %72
  br i1 %87, label %89, label %97

; <label>:89:                                     ; preds = %62
  ret void

; <label>:90:                                     ; preds = %34
  %91 = landingpad { i8*, i32 }
          catch i8* null
  %92 = extractvalue { i8*, i32 } %91, 0
  call void @__clang_call_terminate(i8* %92) #10
  unreachable

; <label>:93:                                     ; preds = %16, %1
  %94 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %94, align 8
  %95 = load %"class.std::vector.8"*, %"class.std::vector.8"** %94, align 8
  %96 = bitcast %"class.std::vector.8"* %95 to %"struct.std::_Vector_base.9"*
  br label %16

; <label>:97:                                     ; preds = %62, %35
  br label %62
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EEC2Ev(%"struct.std::_Vector_base"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.31
  %5 = load i32, i32* @y.32
  %6 = sub i32 %4, -149010376
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -149010376
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -868710547, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -868710547, label %18
    i32 400271232, label %38
    i32 -708641905, label %56
    i32 1766973164, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 400271232, i32 1766973164
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %39, align 8
  %40 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %40, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %41)
  %42 = load i32, i32* @x.31
  %43 = load i32, i32* @y.32
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -708641905, i32 1766973164
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %58, align 8
  %59 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %58, align 8
  %60 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %59, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %60)
  store i32 400271232, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #6 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #10
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %3 to %"class.std::allocator.0"*
  call void @_ZNSaISt6vectorIN7MaxFlow4edgeESaIS1_EEEC2Ev(%"class.std::allocator.0"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %3, i32 0, i32 0
  store %"class.std::vector.3"* null, %"class.std::vector.3"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %3, i32 0, i32 1
  store %"class.std::vector.3"* null, %"class.std::vector.3"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %3, i32 0, i32 2
  store %"class.std::vector.3"* null, %"class.std::vector.3"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN7MaxFlow4edgeESaIS3_EEEC2Ev(%"class.__gnu_cxx::new_allocator.1"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base.9"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %2, align 8
  %3 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.41
  %5 = load i32, i32* @y.42
  %6 = add i32 %4, -781258925
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -781258925
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1953359898, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %55
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1953359898, label %18
    i32 -371959470, label %26
    i32 -865127184, label %47
    i32 -835978233, label %48
  ]

; <label>:17:                                     ; preds = %15
  br label %55

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -371959470, i32 -835978233
  store i32 %25, i32* %14
  br label %55

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %27, align 8
  %28 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %27, align 8
  %29 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %28 to %"class.std::allocator.10"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.10"* %29) #3
  %30 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %28, i32 0, i32 0
  store i32* null, i32** %30, align 8
  %31 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %28, i32 0, i32 1
  store i32* null, i32** %31, align 8
  %32 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %28, i32 0, i32 2
  store i32* null, i32** %32, align 8
  %33 = load i32, i32* @x.41
  %34 = load i32, i32* @y.42
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -865127184, i32 -835978233
  store i32 %46, i32* %14
  br label %55

; <label>:47:                                     ; preds = %15
  ret void

; <label>:48:                                     ; preds = %15
  %49 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %49, align 8
  %50 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %49, align 8
  %51 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %50 to %"class.std::allocator.10"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.10"* %51) #3
  %52 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %50, i32 0, i32 0
  store i32* null, i32** %52, align 8
  %53 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %50, i32 0, i32 1
  store i32* null, i32** %53, align 8
  %54 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %50, i32 0, i32 2
  store i32* null, i32** %54, align 8
  store i32 -371959470, i32* %14
  br label %55

; <label>:55:                                     ; preds = %48, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.11"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.8"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.8"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %6 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  %14 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %15 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %14) #3
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %9, i32* %13, %"class.std::allocator.10"* dereferenceable(1) %15)
          to label %16 unwind label %71

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.45
  %18 = load i32, i32* @y.46
  %19 = sub i32 %17, 656309299
  %20 = sub i32 %19, 1
  %21 = add i32 %20, 656309299
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 true, true
  %30 = and i1 %27, true
  %31 = and i1 %25, %29
  %32 = and i1 %28, true
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 true, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  br i1 %41, label %43, label %78

; <label>:43:                                     ; preds = %16, %78
  %44 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.9"* %44) #3
  %45 = load i32, i32* @x.45
  %46 = load i32, i32* @y.46
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  br i1 %68, label %70, label %78

; <label>:70:                                     ; preds = %43
  ret void

; <label>:71:                                     ; preds = %1
  %72 = landingpad { i8*, i32 }
          catch i8* null
  %73 = extractvalue { i8*, i32 } %72, 0
  store i8* %73, i8** %3, align 8
  %74 = extractvalue { i8*, i32 } %72, 1
  store i32 %74, i32* %4, align 4
  %75 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.9"* %75) #3
  br label %76

; <label>:76:                                     ; preds = %71
  %77 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %77) #10
  unreachable

; <label>:78:                                     ; preds = %43, %16
  %79 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.9"* %79) #3
  br label %43
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EED2Ev(%"class.std::vector"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.47
  %3 = load i32, i32* @y.48
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 true, true
  %14 = and i1 %11, true
  %15 = and i1 %9, %13
  %16 = and i1 %12, true
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 true, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %118

; <label>:27:                                     ; preds = %1, %118
  %28 = alloca %"class.std::vector"*, align 8
  %29 = alloca i8*
  %30 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %28, align 8
  %31 = load %"class.std::vector"*, %"class.std::vector"** %28, align 8
  %32 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load %"class.std::vector.3"*, %"class.std::vector.3"** %34, align 8
  %36 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %37, i32 0, i32 1
  %39 = load %"class.std::vector.3"*, %"class.std::vector.3"** %38, align 8
  %40 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  %41 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %40) #3
  %42 = load i32, i32* @x.47
  %43 = load i32, i32* @y.48
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  br i1 %53, label %55, label %118

; <label>:55:                                     ; preds = %27
  invoke void @_ZSt8_DestroyIPSt6vectorIN7MaxFlow4edgeESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.3"* %35, %"class.std::vector.3"* %39, %"class.std::allocator.0"* dereferenceable(1) %41)
          to label %56 unwind label %58

; <label>:56:                                     ; preds = %55
  %57 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base"* %57) #3
  ret void

; <label>:58:                                     ; preds = %55
  %59 = load i32, i32* @x.47
  %60 = load i32, i32* @y.48
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  br i1 %82, label %84, label %133

; <label>:84:                                     ; preds = %58, %133
  %85 = landingpad { i8*, i32 }
          catch i8* null
  %86 = extractvalue { i8*, i32 } %85, 0
  store i8* %86, i8** %29, align 8
  %87 = extractvalue { i8*, i32 } %85, 1
  store i32 %87, i32* %30, align 4
  %88 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base"* %88) #3
  %89 = load i32, i32* @x.47
  %90 = load i32, i32* @y.48
  %91 = add i32 %89, -1673598776
  %92 = sub i32 %91, 1
  %93 = sub i32 %92, -1673598776
  %94 = sub i32 %89, 1
  %95 = mul i32 %89, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %90, 10
  %99 = xor i1 %97, true
  %100 = xor i1 %98, true
  %101 = xor i1 false, true
  %102 = and i1 %99, false
  %103 = and i1 %97, %101
  %104 = and i1 %100, false
  %105 = and i1 %98, %101
  %106 = or i1 %102, %103
  %107 = or i1 %104, %105
  %108 = xor i1 %106, %107
  %109 = or i1 %99, %100
  %110 = xor i1 %109, true
  %111 = or i1 false, %101
  %112 = and i1 %110, %111
  %113 = or i1 %108, %112
  %114 = or i1 %97, %98
  br i1 %113, label %115, label %133

; <label>:115:                                    ; preds = %84
  br label %116

; <label>:116:                                    ; preds = %115
  %117 = load i8*, i8** %29, align 8
  call void @__clang_call_terminate(i8* %117) #10
  unreachable

; <label>:118:                                    ; preds = %27, %1
  %119 = alloca %"class.std::vector"*, align 8
  %120 = alloca i8*
  %121 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %119, align 8
  %122 = load %"class.std::vector"*, %"class.std::vector"** %119, align 8
  %123 = bitcast %"class.std::vector"* %122 to %"struct.std::_Vector_base"*
  %124 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %123, i32 0, i32 0
  %125 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %124, i32 0, i32 0
  %126 = load %"class.std::vector.3"*, %"class.std::vector.3"** %125, align 8
  %127 = bitcast %"class.std::vector"* %122 to %"struct.std::_Vector_base"*
  %128 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %127, i32 0, i32 0
  %129 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %128, i32 0, i32 1
  %130 = load %"class.std::vector.3"*, %"class.std::vector.3"** %129, align 8
  %131 = bitcast %"class.std::vector"* %122 to %"struct.std::_Vector_base"*
  %132 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %131) #3
  br label %27

; <label>:133:                                    ; preds = %84, %58
  %134 = landingpad { i8*, i32 }
          catch i8* null
  %135 = extractvalue { i8*, i32 } %134, 0
  store i8* %135, i8** %29, align 8
  %136 = extractvalue { i8*, i32 } %134, 1
  store i32 %136, i32* %30, align 4
  %137 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base"* %137) #3
  br label %84
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32*, i32*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.49
  %7 = load i32, i32* @y.50
  %8 = add i32 %6, -597763825
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -597763825
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1788694020, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %56
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1788694020, label %20
    i32 -1053118289, label %28
    i32 -587900577, label %49
    i32 1479558229, label %50
  ]

; <label>:19:                                     ; preds = %17
  br label %56

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1053118289, i32 1479558229
  store i32 %27, i32* %16
  br label %56

; <label>:28:                                     ; preds = %17
  %29 = alloca i32*, align 8
  %30 = alloca i32*, align 8
  %31 = alloca %"class.std::allocator.10"*, align 8
  store i32* %0, i32** %29, align 8
  store i32* %1, i32** %30, align 8
  store %"class.std::allocator.10"* %2, %"class.std::allocator.10"** %31, align 8
  %32 = load i32*, i32** %29, align 8
  %33 = load i32*, i32** %30, align 8
  call void @_ZSt8_DestroyIPiEvT_S1_(i32* %32, i32* %33)
  %34 = load i32, i32* @x.49
  %35 = load i32, i32* @y.50
  %36 = sub i32 %34, -2025855758
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -2025855758
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -587900577, i32 1479558229
  store i32 %48, i32* %16
  br label %56

; <label>:49:                                     ; preds = %17
  ret void

; <label>:50:                                     ; preds = %17
  %51 = alloca i32*, align 8
  %52 = alloca i32*, align 8
  %53 = alloca %"class.std::allocator.10"*, align 8
  store i32* %0, i32** %51, align 8
  store i32* %1, i32** %52, align 8
  store %"class.std::allocator.10"* %2, %"class.std::allocator.10"** %53, align 8
  %54 = load i32*, i32** %51, align 8
  %55 = load i32*, i32** %52, align 8
  call void @_ZSt8_DestroyIPiEvT_S1_(i32* %54, i32* %55)
  store i32 -1053118289, i32* %16
  br label %56

; <label>:56:                                     ; preds = %50, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %2, align 8
  %3 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4 to %"class.std::allocator.10"*
  ret %"class.std::allocator.10"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.9"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.9"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %2, align 8
  %5 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = ptrtoint i32* %11 to i64
  %16 = ptrtoint i32* %14 to i64
  %17 = add i64 %15, 5331990218548331257
  %18 = sub i64 %17, %16
  %19 = sub i64 %18, 5331990218548331257
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 4
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.9"* %5, i32* %8, i64 %21)
          to label %22 unwind label %53

; <label>:22:                                     ; preds = %1
  %23 = load i32, i32* @x.53
  %24 = load i32, i32* @y.54
  %25 = sub i32 0, 1
  %26 = add i32 %23, %25
  %27 = sub i32 %23, 1
  %28 = mul i32 %23, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %24, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  br i1 %34, label %36, label %60

; <label>:36:                                     ; preds = %22, %60
  %37 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %37) #3
  %38 = load i32, i32* @x.53
  %39 = load i32, i32* @y.54
  %40 = sub i32 %38, 2029192755
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 2029192755
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %60

; <label>:52:                                     ; preds = %36
  ret void

; <label>:53:                                     ; preds = %1
  %54 = landingpad { i8*, i32 }
          catch i8* null
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %3, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %4, align 4
  %57 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %57) #3
  br label %58

; <label>:58:                                     ; preds = %53
  %59 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %59) #10
  unreachable

; <label>:60:                                     ; preds = %36, %22
  %61 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %61) #3
  br label %36
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiEvT_S1_(i32*, i32*) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load i32*, i32** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32* %5, i32* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32*, i32*) #4 comdat align 2 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.9"*, i32*, i64) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca %"struct.std::_Vector_base.9"*
  %6 = alloca %"struct.std::_Vector_base.9"*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %6, align 8
  store i32* %1, i32** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %6, align 8
  store %"struct.std::_Vector_base.9"* %9, %"struct.std::_Vector_base.9"** %5
  %10 = load i32*, i32** %7, align 8
  store i32* %10, i32** %4
  %11 = alloca i32
  store i32 1302737373, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %70
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1302737373, label %15
    i32 -803697649, label %19
    i32 -1335510884, label %25
    i32 41637273, label %52
    i32 1722436752, label %68
    i32 788979018, label %69
  ]

; <label>:14:                                     ; preds = %12
  br label %70

; <label>:15:                                     ; preds = %12
  %16 = load volatile i32*, i32** %4
  %17 = icmp ne i32* %16, null
  %18 = select i1 %17, i32 -803697649, i32 -1335510884
  store i32 %18, i32* %11
  br label %70

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %21 to %"class.std::allocator.10"*
  %23 = load i32*, i32** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.10"* dereferenceable(1) %22, i32* %23, i64 %24)
  store i32 -1335510884, i32* %11
  br label %70

; <label>:25:                                     ; preds = %12
  %26 = load i32, i32* @x.59
  %27 = load i32, i32* @y.60
  %28 = sub i32 0, 1
  %29 = add i32 %26, %28
  %30 = sub i32 %26, 1
  %31 = mul i32 %26, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %27, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 false, true
  %38 = and i1 %35, false
  %39 = and i1 %33, %37
  %40 = and i1 %36, false
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 false, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  %51 = select i1 %49, i32 41637273, i32 788979018
  store i32 %51, i32* %11
  br label %70

; <label>:52:                                     ; preds = %12
  %53 = load i32, i32* @x.59
  %54 = load i32, i32* @y.60
  %55 = add i32 %53, 897419493
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, 897419493
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 1722436752, i32 788979018
  store i32 %67, i32* %11
  br label %70

; <label>:68:                                     ; preds = %12
  ret void

; <label>:69:                                     ; preds = %12
  store i32 41637273, i32* %11
  br label %70

; <label>:70:                                     ; preds = %69, %52, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.61
  %5 = load i32, i32* @y.62
  %6 = add i32 %4, -142568995
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -142568995
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -689840618, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -689840618, label %18
    i32 -1508012834, label %38
    i32 2113648867, label %69
    i32 -635817924, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1508012834, i32 -635817924
  store i32 %37, i32* %14
  br label %74

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %39, align 8
  %40 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %39, align 8
  %41 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %40 to %"class.std::allocator.10"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.10"* %41) #3
  %42 = load i32, i32* @x.61
  %43 = load i32, i32* @y.62
  %44 = sub i32 %42, -92420408
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -92420408
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 2113648867, i32 -635817924
  store i32 %68, i32* %14
  br label %74

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %71, align 8
  %72 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %71, align 8
  %73 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %72 to %"class.std::allocator.10"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.10"* %73) #3
  store i32 -1508012834, i32* %14
  br label %74

; <label>:74:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.10"* dereferenceable(1), i32*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.10"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  %8 = bitcast %"class.std::allocator.10"* %7 to %"class.__gnu_cxx::new_allocator.11"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.11"* %8, i32* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.11"*, i32*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = bitcast i32* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #7

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.11"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIN7MaxFlow4edgeESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.3"*, %"class.std::vector.3"*, %"class.std::allocator.0"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.69
  %7 = load i32, i32* @y.70
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1123770000, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1123770000, label %19
    i32 -1431730324, label %39
    i32 -80704281, label %59
    i32 238480828, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1431730324, i32 238480828
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.3"*, align 8
  %41 = alloca %"class.std::vector.3"*, align 8
  %42 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %40, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %41, align 8
  store %"class.std::allocator.0"* %2, %"class.std::allocator.0"** %42, align 8
  %43 = load %"class.std::vector.3"*, %"class.std::vector.3"** %40, align 8
  %44 = load %"class.std::vector.3"*, %"class.std::vector.3"** %41, align 8
  call void @_ZSt8_DestroyIPSt6vectorIN7MaxFlow4edgeESaIS2_EEEvT_S6_(%"class.std::vector.3"* %43, %"class.std::vector.3"* %44)
  %45 = load i32, i32* @x.69
  %46 = load i32, i32* @y.70
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -80704281, i32 238480828
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  ret void

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::vector.3"*, align 8
  %62 = alloca %"class.std::vector.3"*, align 8
  %63 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %61, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %62, align 8
  store %"class.std::allocator.0"* %2, %"class.std::allocator.0"** %63, align 8
  %64 = load %"class.std::vector.3"*, %"class.std::vector.3"** %61, align 8
  %65 = load %"class.std::vector.3"*, %"class.std::vector.3"** %62, align 8
  call void @_ZSt8_DestroyIPSt6vectorIN7MaxFlow4edgeESaIS2_EEEvT_S6_(%"class.std::vector.3"* %64, %"class.std::vector.3"* %65)
  store i32 -1431730324, i32* %15
  br label %66

; <label>:66:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.0"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.71
  %6 = load i32, i32* @y.72
  %7 = add i32 %5, -994310311
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -994310311
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -623983565, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -623983565, label %19
    i32 300368279, label %39
    i32 -478957486, label %70
    i32 1588562773, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 300368279, i32 1588562773
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %40, align 8
  %41 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %42 to %"class.std::allocator.0"*
  store %"class.std::allocator.0"* %43, %"class.std::allocator.0"** %2
  %44 = load i32, i32* @x.71
  %45 = load i32, i32* @y.72
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -478957486, i32 1588562773
  store i32 %69, i32* %15
  br label %77

; <label>:70:                                     ; preds = %16
  %71 = load volatile %"class.std::allocator.0"*, %"class.std::allocator.0"** %2
  ret %"class.std::allocator.0"* %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %73, align 8
  %74 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %73, align 8
  %75 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %74, i32 0, i32 0
  %76 = bitcast %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %75 to %"class.std::allocator.0"*
  store i32 300368279, i32* %15
  br label %77

; <label>:77:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.73
  %3 = load i32, i32* @y.74
  %4 = sub i32 %2, -1652243330
  %5 = sub i32 %4, 1
  %6 = add i32 %5, -1652243330
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %143

; <label>:16:                                     ; preds = %1, %143
  %17 = alloca %"struct.std::_Vector_base"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %17, align 8
  %20 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %17, align 8
  %21 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %21, i32 0, i32 0
  %23 = load %"class.std::vector.3"*, %"class.std::vector.3"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %24, i32 0, i32 2
  %26 = load %"class.std::vector.3"*, %"class.std::vector.3"** %25, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %27, i32 0, i32 0
  %29 = load %"class.std::vector.3"*, %"class.std::vector.3"** %28, align 8
  %30 = ptrtoint %"class.std::vector.3"* %26 to i64
  %31 = ptrtoint %"class.std::vector.3"* %29 to i64
  %32 = sub i64 %30, 4824934645730024281
  %33 = sub i64 %32, %31
  %34 = add i64 %33, 4824934645730024281
  %35 = sub i64 %30, %31
  %36 = sdiv exact i64 %34, 24
  %37 = load i32, i32* @x.73
  %38 = load i32, i32* @y.74
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  br i1 %60, label %62, label %143

; <label>:62:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base"* %20, %"class.std::vector.3"* %23, i64 %36)
          to label %63 unwind label %107

; <label>:63:                                     ; preds = %62
  %64 = load i32, i32* @x.73
  %65 = load i32, i32* @y.74
  %66 = sub i32 %64, 2054492968
  %67 = sub i32 %66, 1
  %68 = add i32 %67, 2054492968
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 false, true
  %77 = and i1 %74, false
  %78 = and i1 %72, %76
  %79 = and i1 %75, false
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 false, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  br i1 %88, label %90, label %178

; <label>:90:                                     ; preds = %63, %178
  %91 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %91) #3
  %92 = load i32, i32* @x.73
  %93 = load i32, i32* @y.74
  %94 = sub i32 %92, 628916570
  %95 = sub i32 %94, 1
  %96 = add i32 %95, 628916570
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  br i1 %104, label %106, label %178

; <label>:106:                                    ; preds = %90
  ret void

; <label>:107:                                    ; preds = %62
  %108 = load i32, i32* @x.73
  %109 = load i32, i32* @y.74
  %110 = sub i32 0, 1
  %111 = add i32 %108, %110
  %112 = sub i32 %108, 1
  %113 = mul i32 %108, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %109, 10
  %117 = and i1 %115, %116
  %118 = xor i1 %115, %116
  %119 = or i1 %117, %118
  %120 = or i1 %115, %116
  br i1 %119, label %121, label %180

; <label>:121:                                    ; preds = %107, %180
  %122 = landingpad { i8*, i32 }
          catch i8* null
  %123 = extractvalue { i8*, i32 } %122, 0
  store i8* %123, i8** %18, align 8
  %124 = extractvalue { i8*, i32 } %122, 1
  store i32 %124, i32* %19, align 4
  %125 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %125) #3
  %126 = load i32, i32* @x.73
  %127 = load i32, i32* @y.74
  %128 = sub i32 %126, 516975496
  %129 = sub i32 %128, 1
  %130 = add i32 %129, 516975496
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = and i1 %134, %135
  %137 = xor i1 %134, %135
  %138 = or i1 %136, %137
  %139 = or i1 %134, %135
  br i1 %138, label %140, label %180

; <label>:140:                                    ; preds = %121
  br label %141

; <label>:141:                                    ; preds = %140
  %142 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %142) #10
  unreachable

; <label>:143:                                    ; preds = %16, %1
  %144 = alloca %"struct.std::_Vector_base"*, align 8
  %145 = alloca i8*
  %146 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %144, align 8
  %147 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %144, align 8
  %148 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %147, i32 0, i32 0
  %149 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %148, i32 0, i32 0
  %150 = load %"class.std::vector.3"*, %"class.std::vector.3"** %149, align 8
  %151 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %147, i32 0, i32 0
  %152 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %151, i32 0, i32 2
  %153 = load %"class.std::vector.3"*, %"class.std::vector.3"** %152, align 8
  %154 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %147, i32 0, i32 0
  %155 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %154, i32 0, i32 0
  %156 = load %"class.std::vector.3"*, %"class.std::vector.3"** %155, align 8
  %157 = ptrtoint %"class.std::vector.3"* %153 to i64
  %158 = ptrtoint %"class.std::vector.3"* %156 to i64
  %159 = sub i64 0, 7410158153737071447
  %160 = sub i64 %159, %157
  %161 = add i64 %160, 7410158153737071447
  %162 = sub i64 0, %157
  %163 = add i64 %161, 8972602849380288487
  %164 = add i64 %163, %158
  %165 = sub i64 %164, 8972602849380288487
  %166 = add i64 %161, %158
  %167 = sub i64 %157, -8144919731770735966
  %168 = sub i64 %167, %158
  %169 = add i64 %168, -8144919731770735966
  %170 = sub i64 %157, %158
  %171 = add i64 %169, -6183211095655001184
  %172 = sub i64 %171, 24
  %173 = sub i64 %172, -6183211095655001184
  %174 = sub i64 %169, 24
  %175 = mul i64 %173, 24
  %176 = shl i64 %169, 24
  %177 = sdiv exact i64 %169, 24
  br label %16

; <label>:178:                                    ; preds = %90, %63
  %179 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %179) #3
  br label %90

; <label>:180:                                    ; preds = %121, %107
  %181 = landingpad { i8*, i32 }
          catch i8* null
  %182 = extractvalue { i8*, i32 } %181, 0
  store i8* %182, i8** %18, align 8
  %183 = extractvalue { i8*, i32 } %181, 1
  store i32 %183, i32* %19, align 4
  %184 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %184) #3
  br label %121
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIN7MaxFlow4edgeESaIS2_EEEvT_S6_(%"class.std::vector.3"*, %"class.std::vector.3"*) #0 comdat {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %4, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %6 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN7MaxFlow4edgeESaIS4_EEEEvT_S8_(%"class.std::vector.3"* %5, %"class.std::vector.3"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN7MaxFlow4edgeESaIS4_EEEEvT_S8_(%"class.std::vector.3"*, %"class.std::vector.3"*) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %4, align 8
  %5 = alloca i32
  store i32 -1939397196, i32* %5
  br label %6

; <label>:6:                                      ; preds = %2, %21
  %7 = load i32, i32* %5
  switch i32 %7, label %8 [
    i32 -1939397196, label %9
    i32 -1866880346, label %14
    i32 1900873883, label %17
    i32 -40555916, label %20
  ]

; <label>:8:                                      ; preds = %6
  br label %21

; <label>:9:                                      ; preds = %6
  %10 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %11 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %12 = icmp ne %"class.std::vector.3"* %10, %11
  %13 = select i1 %12, i32 -1866880346, i32 -40555916
  store i32 %13, i32* %5
  br label %21

; <label>:14:                                     ; preds = %6
  %15 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %16 = call %"class.std::vector.3"* @_ZSt11__addressofISt6vectorIN7MaxFlow4edgeESaIS2_EEEPT_RS5_(%"class.std::vector.3"* dereferenceable(24) %15) #3
  call void @_ZSt8_DestroyISt6vectorIN7MaxFlow4edgeESaIS2_EEEvPT_(%"class.std::vector.3"* %16)
  store i32 1900873883, i32* %5
  br label %21

; <label>:17:                                     ; preds = %6
  %18 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %19 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %18, i32 1
  store %"class.std::vector.3"* %19, %"class.std::vector.3"** %3, align 8
  store i32 -1939397196, i32* %5
  br label %21

; <label>:20:                                     ; preds = %6
  ret void

; <label>:21:                                     ; preds = %17, %14, %9, %8
  br label %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIN7MaxFlow4edgeESaIS2_EEEvPT_(%"class.std::vector.3"*) #4 comdat {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  call void @_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EED2Ev(%"class.std::vector.3"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.3"* @_ZSt11__addressofISt6vectorIN7MaxFlow4edgeESaIS2_EEEPT_RS5_(%"class.std::vector.3"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %4 = bitcast %"class.std::vector.3"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.3"*
  ret %"class.std::vector.3"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EED2Ev(%"class.std::vector.3"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.83
  %3 = load i32, i32* @y.84
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %54

; <label>:15:                                     ; preds = %1, %54
  %16 = alloca %"class.std::vector.3"*, align 8
  %17 = alloca i8*
  %18 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %16, align 8
  %19 = load %"class.std::vector.3"*, %"class.std::vector.3"** %16, align 8
  %20 = bitcast %"class.std::vector.3"* %19 to %"struct.std::_Vector_base.4"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %21, i32 0, i32 0
  %23 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %22, align 8
  %24 = bitcast %"class.std::vector.3"* %19 to %"struct.std::_Vector_base.4"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %25, i32 0, i32 1
  %27 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %26, align 8
  %28 = bitcast %"class.std::vector.3"* %19 to %"struct.std::_Vector_base.4"*
  %29 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %28) #3
  %30 = load i32, i32* @x.83
  %31 = load i32, i32* @y.84
  %32 = sub i32 %30, -1297278223
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -1297278223
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  br i1 %42, label %44, label %54

; <label>:44:                                     ; preds = %15
  invoke void @_ZSt8_DestroyIPN7MaxFlow4edgeES1_EvT_S3_RSaIT0_E(%"struct.MaxFlow::edge"* %23, %"struct.MaxFlow::edge"* %27, %"class.std::allocator.5"* dereferenceable(1) %29)
          to label %45 unwind label %47

; <label>:45:                                     ; preds = %44
  %46 = bitcast %"class.std::vector.3"* %19 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EED2Ev(%"struct.std::_Vector_base.4"* %46) #3
  ret void

; <label>:47:                                     ; preds = %44
  %48 = landingpad { i8*, i32 }
          catch i8* null
  %49 = extractvalue { i8*, i32 } %48, 0
  store i8* %49, i8** %17, align 8
  %50 = extractvalue { i8*, i32 } %48, 1
  store i32 %50, i32* %18, align 4
  %51 = bitcast %"class.std::vector.3"* %19 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EED2Ev(%"struct.std::_Vector_base.4"* %51) #3
  br label %52

; <label>:52:                                     ; preds = %47
  %53 = load i8*, i8** %17, align 8
  call void @__clang_call_terminate(i8* %53) #10
  unreachable

; <label>:54:                                     ; preds = %15, %1
  %55 = alloca %"class.std::vector.3"*, align 8
  %56 = alloca i8*
  %57 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %55, align 8
  %58 = load %"class.std::vector.3"*, %"class.std::vector.3"** %55, align 8
  %59 = bitcast %"class.std::vector.3"* %58 to %"struct.std::_Vector_base.4"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %60, i32 0, i32 0
  %62 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %61, align 8
  %63 = bitcast %"class.std::vector.3"* %58 to %"struct.std::_Vector_base.4"*
  %64 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %64, i32 0, i32 1
  %66 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %65, align 8
  %67 = bitcast %"class.std::vector.3"* %58 to %"struct.std::_Vector_base.4"*
  %68 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %67) #3
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN7MaxFlow4edgeES1_EvT_S3_RSaIT0_E(%"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.85
  %7 = load i32, i32* @y.86
  %8 = sub i32 %6, -1822636937
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1822636937
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 516842194, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %80
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 516842194, label %20
    i32 1848700831, label %40
    i32 -1399899379, label %73
    i32 -1434320392, label %74
  ]

; <label>:19:                                     ; preds = %17
  br label %80

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1848700831, i32 -1434320392
  store i32 %39, i32* %16
  br label %80

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.MaxFlow::edge"*, align 8
  %42 = alloca %"struct.MaxFlow::edge"*, align 8
  %43 = alloca %"class.std::allocator.5"*, align 8
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %41, align 8
  store %"struct.MaxFlow::edge"* %1, %"struct.MaxFlow::edge"** %42, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %43, align 8
  %44 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %41, align 8
  %45 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %42, align 8
  call void @_ZSt8_DestroyIPN7MaxFlow4edgeEEvT_S3_(%"struct.MaxFlow::edge"* %44, %"struct.MaxFlow::edge"* %45)
  %46 = load i32, i32* @x.85
  %47 = load i32, i32* @y.86
  %48 = add i32 %46, 1198522875
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, 1198522875
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -1399899379, i32 -1434320392
  store i32 %72, i32* %16
  br label %80

; <label>:73:                                     ; preds = %17
  ret void

; <label>:74:                                     ; preds = %17
  %75 = alloca %"struct.MaxFlow::edge"*, align 8
  %76 = alloca %"struct.MaxFlow::edge"*, align 8
  %77 = alloca %"class.std::allocator.5"*, align 8
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %75, align 8
  store %"struct.MaxFlow::edge"* %1, %"struct.MaxFlow::edge"** %76, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %77, align 8
  %78 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %75, align 8
  %79 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %76, align 8
  call void @_ZSt8_DestroyIPN7MaxFlow4edgeEEvT_S3_(%"struct.MaxFlow::edge"* %78, %"struct.MaxFlow::edge"* %79)
  store i32 1848700831, i32* %16
  br label %80

; <label>:80:                                     ; preds = %74, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.87
  %6 = load i32, i32* @y.88
  %7 = add i32 %5, 871533921
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 871533921
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1637308071, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1637308071, label %19
    i32 33666629, label %39
    i32 978988132, label %58
    i32 1971120763, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 33666629, i32 1971120763
  store i32 %38, i32* %15
  br label %65

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %40, align 8
  %41 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %42 to %"class.std::allocator.5"*
  store %"class.std::allocator.5"* %43, %"class.std::allocator.5"** %2
  %44 = load i32, i32* @x.87
  %45 = load i32, i32* @y.88
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 978988132, i32 1971120763
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"class.std::allocator.5"*, %"class.std::allocator.5"** %2
  ret %"class.std::allocator.5"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %61, align 8
  %62 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %61, align 8
  %63 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %63 to %"class.std::allocator.5"*
  store i32 33666629, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EED2Ev(%"struct.std::_Vector_base.4"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.4"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %2, align 8
  %5 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %13, align 8
  %15 = ptrtoint %"struct.MaxFlow::edge"* %11 to i64
  %16 = ptrtoint %"struct.MaxFlow::edge"* %14 to i64
  %17 = sub i64 %15, 6988478969285352256
  %18 = sub i64 %17, %16
  %19 = add i64 %18, 6988478969285352256
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 16
  invoke void @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.4"* %5, %"struct.MaxFlow::edge"* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %28) #3
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i32, i32* @x.89
  %31 = load i32, i32* @y.90
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  br i1 %41, label %43, label %72

; <label>:43:                                     ; preds = %29, %72
  %44 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %44) #10
  %45 = load i32, i32* @x.89
  %46 = load i32, i32* @y.90
  %47 = add i32 %45, -2054889885
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -2054889885
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  br i1 %69, label %71, label %72

; <label>:71:                                     ; preds = %43
  unreachable

; <label>:72:                                     ; preds = %43, %29
  %73 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %73) #10
  br label %43
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN7MaxFlow4edgeEEvT_S3_(%"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"*) #0 comdat {
  %3 = alloca %"struct.MaxFlow::edge"*, align 8
  %4 = alloca %"struct.MaxFlow::edge"*, align 8
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %3, align 8
  store %"struct.MaxFlow::edge"* %1, %"struct.MaxFlow::edge"** %4, align 8
  %5 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %3, align 8
  %6 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN7MaxFlow4edgeEEEvT_S5_(%"struct.MaxFlow::edge"* %5, %"struct.MaxFlow::edge"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN7MaxFlow4edgeEEEvT_S5_(%"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"*) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.93
  %6 = load i32, i32* @y.94
  %7 = add i32 %5, 1909135534
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1909135534
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2124181060, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2124181060, label %19
    i32 109121244, label %39
    i32 1508890403, label %68
    i32 1384105270, label %69
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 109121244, i32 1384105270
  store i32 %38, i32* %15
  br label %72

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.MaxFlow::edge"*, align 8
  %41 = alloca %"struct.MaxFlow::edge"*, align 8
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %40, align 8
  store %"struct.MaxFlow::edge"* %1, %"struct.MaxFlow::edge"** %41, align 8
  %42 = load i32, i32* @x.93
  %43 = load i32, i32* @y.94
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1508890403, i32 1384105270
  store i32 %67, i32* %15
  br label %72

; <label>:68:                                     ; preds = %16
  ret void

; <label>:69:                                     ; preds = %16
  %70 = alloca %"struct.MaxFlow::edge"*, align 8
  %71 = alloca %"struct.MaxFlow::edge"*, align 8
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %70, align 8
  store %"struct.MaxFlow::edge"* %1, %"struct.MaxFlow::edge"** %71, align 8
  store i32 109121244, i32* %15
  br label %72

; <label>:72:                                     ; preds = %69, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.4"*, %"struct.MaxFlow::edge"*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.MaxFlow::edge"*
  %5 = alloca %"struct.std::_Vector_base.4"*
  %6 = alloca %"struct.std::_Vector_base.4"*, align 8
  %7 = alloca %"struct.MaxFlow::edge"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %6, align 8
  store %"struct.MaxFlow::edge"* %1, %"struct.MaxFlow::edge"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %6, align 8
  store %"struct.std::_Vector_base.4"* %9, %"struct.std::_Vector_base.4"** %5
  %10 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %7, align 8
  store %"struct.MaxFlow::edge"* %10, %"struct.MaxFlow::edge"** %4
  %11 = alloca i32
  store i32 -1913835290, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -1913835290, label %15
    i32 542405968, label %19
    i32 -98265126, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %4
  %17 = icmp ne %"struct.MaxFlow::edge"* %16, null
  %18 = select i1 %17, i32 542405968, i32 -98265126
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %21 to %"class.std::allocator.5"*
  %23 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIN7MaxFlow4edgeEEE10deallocateERS2_PS1_m(%"class.std::allocator.5"* dereferenceable(1) %22, %"struct.MaxFlow::edge"* %23, i64 %24)
  store i32 -98265126, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.97
  %5 = load i32, i32* @y.98
  %6 = add i32 %4, -1962450607
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1962450607
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1305163406, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1305163406, label %18
    i32 -363367369, label %38
    i32 1774701637, label %57
    i32 -647748438, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -363367369, i32 -647748438
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"** %39, align 8
  %40 = load %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"** %39, align 8
  %41 = bitcast %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %40 to %"class.std::allocator.5"*
  call void @_ZNSaIN7MaxFlow4edgeEED2Ev(%"class.std::allocator.5"* %41) #3
  %42 = load i32, i32* @x.97
  %43 = load i32, i32* @y.98
  %44 = add i32 %42, -2119986901
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -2119986901
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 1774701637, i32 -647748438
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"** %59, align 8
  %60 = load %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"** %59, align 8
  %61 = bitcast %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %60 to %"class.std::allocator.5"*
  call void @_ZNSaIN7MaxFlow4edgeEED2Ev(%"class.std::allocator.5"* %61) #3
  store i32 -363367369, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN7MaxFlow4edgeEEE10deallocateERS2_PS1_m(%"class.std::allocator.5"* dereferenceable(1), %"struct.MaxFlow::edge"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.5"*, align 8
  %5 = alloca %"struct.MaxFlow::edge"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %4, align 8
  store %"struct.MaxFlow::edge"* %1, %"struct.MaxFlow::edge"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %4, align 8
  %8 = bitcast %"class.std::allocator.5"* %7 to %"class.__gnu_cxx::new_allocator.6"*
  %9 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN7MaxFlow4edgeEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.6"* %8, %"struct.MaxFlow::edge"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN7MaxFlow4edgeEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.6"*, %"struct.MaxFlow::edge"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %5 = alloca %"struct.MaxFlow::edge"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  store %"struct.MaxFlow::edge"* %1, %"struct.MaxFlow::edge"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  %8 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %5, align 8
  %9 = bitcast %"struct.MaxFlow::edge"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN7MaxFlow4edgeEED2Ev(%"class.__gnu_cxx::new_allocator.6"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base"*, %"class.std::vector.3"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca i64*
  %7 = alloca %"class.std::vector.3"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.105
  %11 = load i32, i32* @y.106
  %12 = sub i32 %10, -1838677053
  %13 = sub i32 %12, 1
  %14 = add i32 %13, -1838677053
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -1107561986, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %150
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -1107561986, label %24
    i32 -803600410, label %44
    i32 -976554363, label %81
    i32 -1993290003, label %84
    i32 -2098787135, label %99
    i32 -252029854, label %133
    i32 452595150, label %134
    i32 933845569, label %135
    i32 466864243, label %142
  ]

; <label>:23:                                     ; preds = %21
  br label %150

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 -803600410, i32 933845569
  store i32 %43, i32* %20
  br label %150

; <label>:44:                                     ; preds = %21
  %45 = alloca %"struct.std::_Vector_base"*, align 8
  %46 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"** %46, %"class.std::vector.3"*** %7
  %47 = alloca i64, align 8
  store i64* %47, i64** %6
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %45, align 8
  %48 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %7
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %48, align 8
  %49 = load volatile i64*, i64** %6
  store i64 %2, i64* %49, align 8
  %50 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %45, align 8
  store %"struct.std::_Vector_base"* %50, %"struct.std::_Vector_base"** %5
  %51 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %7
  %52 = load %"class.std::vector.3"*, %"class.std::vector.3"** %51, align 8
  %53 = icmp ne %"class.std::vector.3"* %52, null
  store i1 %53, i1* %4
  %54 = load i32, i32* @x.105
  %55 = load i32, i32* @y.106
  %56 = add i32 %54, 689330787
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, 689330787
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 true, true
  %67 = and i1 %64, true
  %68 = and i1 %62, %66
  %69 = and i1 %65, true
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 true, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  %80 = select i1 %78, i32 -976554363, i32 933845569
  store i32 %80, i32* %20
  br label %150

; <label>:81:                                     ; preds = %21
  %82 = load volatile i1, i1* %4
  %83 = select i1 %82, i32 -1993290003, i32 452595150
  store i32 %83, i32* %20
  br label %150

; <label>:84:                                     ; preds = %21
  %85 = load i32, i32* @x.105
  %86 = load i32, i32* @y.106
  %87 = sub i32 0, 1
  %88 = add i32 %85, %87
  %89 = sub i32 %85, 1
  %90 = mul i32 %85, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %86, 10
  %94 = and i1 %92, %93
  %95 = xor i1 %92, %93
  %96 = or i1 %94, %95
  %97 = or i1 %92, %93
  %98 = select i1 %96, i32 -2098787135, i32 466864243
  store i32 %98, i32* %20
  br label %150

; <label>:99:                                     ; preds = %21
  %100 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %101 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %100, i32 0, i32 0
  %102 = bitcast %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %101 to %"class.std::allocator.0"*
  %103 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %7
  %104 = load %"class.std::vector.3"*, %"class.std::vector.3"** %103, align 8
  %105 = load volatile i64*, i64** %6
  %106 = load i64, i64* %105, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIN7MaxFlow4edgeESaIS2_EEEE10deallocateERS5_PS4_m(%"class.std::allocator.0"* dereferenceable(1) %102, %"class.std::vector.3"* %104, i64 %106)
  %107 = load i32, i32* @x.105
  %108 = load i32, i32* @y.106
  %109 = sub i32 0, 1
  %110 = add i32 %107, %109
  %111 = sub i32 %107, 1
  %112 = mul i32 %107, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %108, 10
  %116 = xor i1 %114, true
  %117 = xor i1 %115, true
  %118 = xor i1 true, true
  %119 = and i1 %116, true
  %120 = and i1 %114, %118
  %121 = and i1 %117, true
  %122 = and i1 %115, %118
  %123 = or i1 %119, %120
  %124 = or i1 %121, %122
  %125 = xor i1 %123, %124
  %126 = or i1 %116, %117
  %127 = xor i1 %126, true
  %128 = or i1 true, %118
  %129 = and i1 %127, %128
  %130 = or i1 %125, %129
  %131 = or i1 %114, %115
  %132 = select i1 %130, i32 -252029854, i32 466864243
  store i32 %132, i32* %20
  br label %150

; <label>:133:                                    ; preds = %21
  store i32 452595150, i32* %20
  br label %150

; <label>:134:                                    ; preds = %21
  ret void

; <label>:135:                                    ; preds = %21
  %136 = alloca %"struct.std::_Vector_base"*, align 8
  %137 = alloca %"class.std::vector.3"*, align 8
  %138 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %136, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %137, align 8
  store i64 %2, i64* %138, align 8
  %139 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %136, align 8
  %140 = load %"class.std::vector.3"*, %"class.std::vector.3"** %137, align 8
  %141 = icmp ne %"class.std::vector.3"* %140, null
  store i32 -803600410, i32* %20
  br label %150

; <label>:142:                                    ; preds = %21
  %143 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %144 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %143, i32 0, i32 0
  %145 = bitcast %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %144 to %"class.std::allocator.0"*
  %146 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %7
  %147 = load %"class.std::vector.3"*, %"class.std::vector.3"** %146, align 8
  %148 = load volatile i64*, i64** %6
  %149 = load i64, i64* %148, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIN7MaxFlow4edgeESaIS2_EEEE10deallocateERS5_PS4_m(%"class.std::allocator.0"* dereferenceable(1) %145, %"class.std::vector.3"* %147, i64 %149)
  store i32 -2098787135, i32* %20
  br label %150

; <label>:150:                                    ; preds = %142, %135, %133, %99, %84, %81, %44, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %3 to %"class.std::allocator.0"*
  call void @_ZNSaISt6vectorIN7MaxFlow4edgeESaIS1_EEED2Ev(%"class.std::allocator.0"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIN7MaxFlow4edgeESaIS2_EEEE10deallocateERS5_PS4_m(%"class.std::allocator.0"* dereferenceable(1), %"class.std::vector.3"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.0"*, align 8
  %5 = alloca %"class.std::vector.3"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %4, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %4, align 8
  %8 = bitcast %"class.std::allocator.0"* %7 to %"class.__gnu_cxx::new_allocator.1"*
  %9 = load %"class.std::vector.3"*, %"class.std::vector.3"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN7MaxFlow4edgeESaIS3_EEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.1"* %8, %"class.std::vector.3"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN7MaxFlow4edgeESaIS3_EEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.1"*, %"class.std::vector.3"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %5 = alloca %"class.std::vector.3"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %4, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %4, align 8
  %8 = load %"class.std::vector.3"*, %"class.std::vector.3"** %5, align 8
  %9 = bitcast %"class.std::vector.3"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN7MaxFlow4edgeESaIS3_EEED2Ev(%"class.__gnu_cxx::new_allocator.1"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.113
  %5 = load i32, i32* @y.114
  %6 = add i32 %4, 1513817659
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1513817659
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1580978665, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %48
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1580978665, label %18
    i32 862098234, label %26
    i32 -12245501, label %44
    i32 779229985, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %48

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 862098234, i32 779229985
  store i32 %25, i32* %14
  br label %48

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %27, align 8
  %29 = load i32, i32* @x.113
  %30 = load i32, i32* @y.114
  %31 = sub i32 %29, 2051258879
  %32 = sub i32 %31, 1
  %33 = add i32 %32, 2051258879
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -12245501, i32 779229985
  store i32 %43, i32* %14
  br label %48

; <label>:44:                                     ; preds = %15
  ret void

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %46, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %46, align 8
  store i32 862098234, i32* %14
  br label %48

; <label>:48:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN7MaxFlow4edgeEEC2Ev(%"class.std::allocator.5"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %2, align 8
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %2, align 8
  %4 = bitcast %"class.std::allocator.5"* %3 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorIN7MaxFlow4edgeEEC2Ev(%"class.__gnu_cxx::new_allocator.6"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EEC2EmRKS2_(%"class.std::vector.3"*, i64, %"class.std::allocator.5"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.3"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.5"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %6, align 8
  %9 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %10 = bitcast %"class.std::vector.3"* %9 to %"struct.std::_Vector_base.4"*
  %11 = load i64, i64* %5, align 8
  %12 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %6, align 8
  call void @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.4"* %10, i64 %11, %"class.std::allocator.5"* dereferenceable(1) %12)
  %13 = load i64, i64* %5, align 8
  invoke void @_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EE21_M_default_initializeEm(%"class.std::vector.3"* %9, i64 %13)
          to label %14 unwind label %15

; <label>:14:                                     ; preds = %3
  ret void

; <label>:15:                                     ; preds = %3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  store i8* %17, i8** %7, align 8
  %18 = extractvalue { i8*, i32 } %16, 1
  store i32 %18, i32* %8, align 4
  %19 = bitcast %"class.std::vector.3"* %9 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EED2Ev(%"struct.std::_Vector_base.4"* %19) #3
  br label %20

; <label>:20:                                     ; preds = %15
  %21 = load i32, i32* @x.117
  %22 = load i32, i32* @y.118
  %23 = add i32 %21, 948721485
  %24 = sub i32 %23, 1
  %25 = sub i32 %24, 948721485
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  br i1 %33, label %35, label %55

; <label>:35:                                     ; preds = %20, %55
  %36 = load i8*, i8** %7, align 8
  %37 = load i32, i32* %8, align 4
  %38 = insertvalue { i8*, i32 } undef, i8* %36, 0
  %39 = insertvalue { i8*, i32 } %38, i32 %37, 1
  %40 = load i32, i32* @x.117
  %41 = load i32, i32* @y.118
  %42 = sub i32 %40, 1199469506
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 1199469506
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  br i1 %52, label %54, label %55

; <label>:54:                                     ; preds = %35
  resume { i8*, i32 } %39

; <label>:55:                                     ; preds = %35, %20
  %56 = load i8*, i8** %7, align 8
  %57 = load i32, i32* %8, align 4
  %58 = insertvalue { i8*, i32 } undef, i8* %56, 0
  %59 = insertvalue { i8*, i32 } %58, i32 %57, 1
  br label %35
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIN7MaxFlow4edgeESaIS1_EEEC2Ev(%"class.std::allocator.0"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %2, align 8
  %3 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %2, align 8
  %4 = bitcast %"class.std::allocator.0"* %3 to %"class.__gnu_cxx::new_allocator.1"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN7MaxFlow4edgeESaIS3_EEEC2Ev(%"class.__gnu_cxx::new_allocator.1"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EEC2EmRKS3_RKS4_(%"class.std::vector"*, i64, %"class.std::vector.3"* dereferenceable(24), %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.3"*, align 8
  %8 = alloca %"class.std::allocator.0"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %7, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %8, align 8
  %11 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %12 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %8, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EEC2EmRKS5_(%"struct.std::_Vector_base"* %12, i64 %13, %"class.std::allocator.0"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  invoke void @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EE18_M_fill_initializeEmRKS3_(%"class.std::vector"* %11, i64 %15, %"class.std::vector.3"* dereferenceable(24) %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %4
  ret void

; <label>:18:                                     ; preds = %4
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %9, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %10, align 4
  %22 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %9, align 8
  %25 = load i32, i32* %10, align 4
  %26 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EEaSEOS5_(%"class.std::vector"*, %"class.std::vector"* dereferenceable(24)) #4 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i8, align 1
  %6 = alloca %"struct.std::integral_constant", align 1
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %4, align 8
  %7 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  store i8 1, i8* %5, align 1
  %8 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector"* @_ZSt4moveIRSt6vectorIS0_IN7MaxFlow4edgeESaIS2_EESaIS4_EEEONSt16remove_referenceIT_E4typeEOS9_(%"class.std::vector"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EE14_M_move_assignEOS5_St17integral_constantIbLb1EE(%"class.std::vector"* %7, %"class.std::vector"* dereferenceable(24) %9) #3
  ret %"class.std::vector"* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIN7MaxFlow4edgeESaIS1_EEED2Ev(%"class.std::allocator.0"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %2, align 8
  %3 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %2, align 8
  %4 = bitcast %"class.std::allocator.0"* %3 to %"class.__gnu_cxx::new_allocator.1"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN7MaxFlow4edgeESaIS3_EEED2Ev(%"class.__gnu_cxx::new_allocator.1"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN7MaxFlow4edgeEED2Ev(%"class.std::allocator.5"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %2, align 8
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %2, align 8
  %4 = bitcast %"class.std::allocator.5"* %3 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorIN7MaxFlow4edgeEED2Ev(%"class.__gnu_cxx::new_allocator.6"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN7MaxFlow4edgeEEC2Ev(%"class.__gnu_cxx::new_allocator.6"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.4"*, i64, %"class.std::allocator.5"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.4"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.5"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %6, align 8
  %9 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %6, align 8
  call void @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %10, %"class.std::allocator.5"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base.4"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %10) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i32, i32* @x.131
  %20 = load i32, i32* @y.132
  %21 = sub i32 0, 1
  %22 = add i32 %19, %21
  %23 = sub i32 %19, 1
  %24 = mul i32 %19, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %20, 10
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  br i1 %30, label %32, label %52

; <label>:32:                                     ; preds = %18, %52
  %33 = load i8*, i8** %7, align 8
  %34 = load i32, i32* %8, align 4
  %35 = insertvalue { i8*, i32 } undef, i8* %33, 0
  %36 = insertvalue { i8*, i32 } %35, i32 %34, 1
  %37 = load i32, i32* @x.131
  %38 = load i32, i32* @y.132
  %39 = add i32 %37, -755168025
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, -755168025
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  br i1 %49, label %51, label %52

; <label>:51:                                     ; preds = %32
  resume { i8*, i32 } %36

; <label>:52:                                     ; preds = %32, %18
  %53 = load i8*, i8** %7, align 8
  %54 = load i32, i32* %8, align 4
  %55 = insertvalue { i8*, i32 } undef, i8* %53, 0
  %56 = insertvalue { i8*, i32 } %55, i32 %54, 1
  br label %32
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EE21_M_default_initializeEm(%"class.std::vector.3"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %6 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %12 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %11) #3
  %13 = call %"struct.MaxFlow::edge"* @_ZSt27__uninitialized_default_n_aIPN7MaxFlow4edgeEmS1_ET_S3_T0_RSaIT1_E(%"struct.MaxFlow::edge"* %9, i64 %10, %"class.std::allocator.5"* dereferenceable(1) %12)
  %14 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %15, i32 0, i32 1
  store %"struct.MaxFlow::edge"* %13, %"struct.MaxFlow::edge"** %16, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"*, %"class.std::allocator.5"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.5"*, align 8
  store %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %4, align 8
  %5 = load %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %5 to %"class.std::allocator.5"*
  %7 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %4, align 8
  call void @_ZNSaIN7MaxFlow4edgeEEC2ERKS1_(%"class.std::allocator.5"* %6, %"class.std::allocator.5"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %5, i32 0, i32 0
  store %"struct.MaxFlow::edge"* null, %"struct.MaxFlow::edge"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %5, i32 0, i32 1
  store %"struct.MaxFlow::edge"* null, %"struct.MaxFlow::edge"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %5, i32 0, i32 2
  store %"struct.MaxFlow::edge"* null, %"struct.MaxFlow::edge"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base.4"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.137
  %6 = load i32, i32* @y.138
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1315386202, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %82
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1315386202, label %18
    i32 -545288938, label %26
    i32 -962403660, label %61
    i32 -1109827487, label %62
  ]

; <label>:17:                                     ; preds = %15
  br label %82

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -545288938, i32 -1109827487
  store i32 %25, i32* %14
  br label %82

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base.4"*, align 8
  %28 = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %27, align 8
  store i64 %1, i64* %28, align 8
  %29 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %27, align 8
  %30 = load i64, i64* %28, align 8
  %31 = call %"struct.MaxFlow::edge"* @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.4"* %29, i64 %30)
  %32 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %29, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %32, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %31, %"struct.MaxFlow::edge"** %33, align 8
  %34 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %29, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %35, align 8
  %37 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %29, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %37, i32 0, i32 1
  store %"struct.MaxFlow::edge"* %36, %"struct.MaxFlow::edge"** %38, align 8
  %39 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %29, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %39, i32 0, i32 0
  %41 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %40, align 8
  %42 = load i64, i64* %28, align 8
  %43 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %41, i64 %42
  %44 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %29, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %44, i32 0, i32 2
  store %"struct.MaxFlow::edge"* %43, %"struct.MaxFlow::edge"** %45, align 8
  %46 = load i32, i32* @x.137
  %47 = load i32, i32* @y.138
  %48 = add i32 %46, -695659332
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -695659332
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -962403660, i32 -1109827487
  store i32 %60, i32* %14
  br label %82

; <label>:61:                                     ; preds = %15
  ret void

; <label>:62:                                     ; preds = %15
  %63 = alloca %"struct.std::_Vector_base.4"*, align 8
  %64 = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %63, align 8
  store i64 %1, i64* %64, align 8
  %65 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %63, align 8
  %66 = load i64, i64* %64, align 8
  %67 = call %"struct.MaxFlow::edge"* @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.4"* %65, i64 %66)
  %68 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %65, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %68, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %67, %"struct.MaxFlow::edge"** %69, align 8
  %70 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %65, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %70, i32 0, i32 0
  %72 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %71, align 8
  %73 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %65, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %73, i32 0, i32 1
  store %"struct.MaxFlow::edge"* %72, %"struct.MaxFlow::edge"** %74, align 8
  %75 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %65, i32 0, i32 0
  %76 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %75, i32 0, i32 0
  %77 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %76, align 8
  %78 = load i64, i64* %64, align 8
  %79 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %77, i64 %78
  %80 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %65, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %80, i32 0, i32 2
  store %"struct.MaxFlow::edge"* %79, %"struct.MaxFlow::edge"** %81, align 8
  store i32 -545288938, i32* %14
  br label %82

; <label>:82:                                     ; preds = %62, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN7MaxFlow4edgeEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %1, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.MaxFlow::edge"* @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.4"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base.4"*
  %5 = alloca %"struct.std::_Vector_base.4"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %5, align 8
  store %"struct.std::_Vector_base.4"* %7, %"struct.std::_Vector_base.4"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 -1608758724, i32* %9
  %10 = alloca %"struct.MaxFlow::edge"*
  br label %11

; <label>:11:                                     ; preds = %2, %27
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 -1608758724, label %14
    i32 849774114, label %18
    i32 176479901, label %24
    i32 -557360641, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %27

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 849774114, i32 176479901
  store i32 %17, i32* %9
  br label %27

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %20 to %"class.std::allocator.5"*
  %22 = load i64, i64* %6, align 8
  %23 = call %"struct.MaxFlow::edge"* @_ZNSt16allocator_traitsISaIN7MaxFlow4edgeEEE8allocateERS2_m(%"class.std::allocator.5"* dereferenceable(1) %21, i64 %22)
  store i32 -557360641, i32* %9
  store %"struct.MaxFlow::edge"* %23, %"struct.MaxFlow::edge"** %10
  br label %27

; <label>:24:                                     ; preds = %11
  store i32 -557360641, i32* %9
  store %"struct.MaxFlow::edge"* null, %"struct.MaxFlow::edge"** %10
  br label %27

; <label>:25:                                     ; preds = %11
  %26 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %10
  ret %"struct.MaxFlow::edge"* %26

; <label>:27:                                     ; preds = %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.MaxFlow::edge"* @_ZNSt16allocator_traitsISaIN7MaxFlow4edgeEEE8allocateERS2_m(%"class.std::allocator.5"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"struct.MaxFlow::edge"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.143
  %7 = load i32, i32* @y.144
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -381989235, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %58
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -381989235, label %19
    i32 -1060082294, label %27
    i32 -638500575, label %49
    i32 -377905635, label %51
  ]

; <label>:18:                                     ; preds = %16
  br label %58

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1060082294, i32 -377905635
  store i32 %26, i32* %15
  br label %58

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.5"*, align 8
  %29 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %28, align 8
  %31 = bitcast %"class.std::allocator.5"* %30 to %"class.__gnu_cxx::new_allocator.6"*
  %32 = load i64, i64* %29, align 8
  %33 = call %"struct.MaxFlow::edge"* @_ZN9__gnu_cxx13new_allocatorIN7MaxFlow4edgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"* %31, i64 %32, i8* null)
  store %"struct.MaxFlow::edge"* %33, %"struct.MaxFlow::edge"** %3
  %34 = load i32, i32* @x.143
  %35 = load i32, i32* @y.144
  %36 = add i32 %34, -1223802185
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, -1223802185
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -638500575, i32 -377905635
  store i32 %48, i32* %15
  br label %58

; <label>:49:                                     ; preds = %16
  %50 = load volatile %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %3
  ret %"struct.MaxFlow::edge"* %50

; <label>:51:                                     ; preds = %16
  %52 = alloca %"class.std::allocator.5"*, align 8
  %53 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %52, align 8
  store i64 %1, i64* %53, align 8
  %54 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %52, align 8
  %55 = bitcast %"class.std::allocator.5"* %54 to %"class.__gnu_cxx::new_allocator.6"*
  %56 = load i64, i64* %53, align 8
  %57 = call %"struct.MaxFlow::edge"* @_ZN9__gnu_cxx13new_allocatorIN7MaxFlow4edgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"* %55, i64 %56, i8* null)
  store i32 -1060082294, i32* %15
  br label %58

; <label>:58:                                     ; preds = %51, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.MaxFlow::edge"* @_ZN9__gnu_cxx13new_allocatorIN7MaxFlow4edgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN7MaxFlow4edgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 1109512718, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1109512718, label %16
    i32 -672733311, label %21
    i32 -892468076, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -672733311, i32 -892468076
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 16
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"struct.MaxFlow::edge"*
  ret %"struct.MaxFlow::edge"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIN7MaxFlow4edgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  ret i64 1152921504606846975
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #8

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #9

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.MaxFlow::edge"* @_ZSt27__uninitialized_default_n_aIPN7MaxFlow4edgeEmS1_ET_S3_T0_RSaIT1_E(%"struct.MaxFlow::edge"*, i64, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"struct.MaxFlow::edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.149
  %8 = load i32, i32* @y.150
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 2008456773, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %59
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 2008456773, label %20
    i32 -996017727, label %28
    i32 -780437424, label %50
    i32 510873729, label %52
  ]

; <label>:19:                                     ; preds = %17
  br label %59

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -996017727, i32 510873729
  store i32 %27, i32* %16
  br label %59

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.MaxFlow::edge"*, align 8
  %30 = alloca i64, align 8
  %31 = alloca %"class.std::allocator.5"*, align 8
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %29, align 8
  store i64 %1, i64* %30, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %31, align 8
  %32 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %29, align 8
  %33 = load i64, i64* %30, align 8
  %34 = call %"struct.MaxFlow::edge"* @_ZSt25__uninitialized_default_nIPN7MaxFlow4edgeEmET_S3_T0_(%"struct.MaxFlow::edge"* %32, i64 %33)
  store %"struct.MaxFlow::edge"* %34, %"struct.MaxFlow::edge"** %4
  %35 = load i32, i32* @x.149
  %36 = load i32, i32* @y.150
  %37 = sub i32 %35, -1441416317
  %38 = sub i32 %37, 1
  %39 = add i32 %38, -1441416317
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -780437424, i32 510873729
  store i32 %49, i32* %16
  br label %59

; <label>:50:                                     ; preds = %17
  %51 = load volatile %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %4
  ret %"struct.MaxFlow::edge"* %51

; <label>:52:                                     ; preds = %17
  %53 = alloca %"struct.MaxFlow::edge"*, align 8
  %54 = alloca i64, align 8
  %55 = alloca %"class.std::allocator.5"*, align 8
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %53, align 8
  store i64 %1, i64* %54, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %55, align 8
  %56 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %53, align 8
  %57 = load i64, i64* %54, align 8
  %58 = call %"struct.MaxFlow::edge"* @_ZSt25__uninitialized_default_nIPN7MaxFlow4edgeEmET_S3_T0_(%"struct.MaxFlow::edge"* %56, i64 %57)
  store i32 -996017727, i32* %16
  br label %59

; <label>:59:                                     ; preds = %52, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.MaxFlow::edge"* @_ZSt25__uninitialized_default_nIPN7MaxFlow4edgeEmET_S3_T0_(%"struct.MaxFlow::edge"*, i64) #0 comdat {
  %3 = alloca %"struct.MaxFlow::edge"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.151
  %7 = load i32, i32* @y.152
  %8 = add i32 %6, -981740302
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -981740302
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1348938172, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %71
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1348938172, label %20
    i32 -2136158158, label %40
    i32 581302364, label %62
    i32 -211093418, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %71

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -2136158158, i32 -211093418
  store i32 %39, i32* %16
  br label %71

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.MaxFlow::edge"*, align 8
  %42 = alloca i64, align 8
  %43 = alloca i8, align 1
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %41, align 8
  store i64 %1, i64* %42, align 8
  store i8 1, i8* %43, align 1
  %44 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %41, align 8
  %45 = load i64, i64* %42, align 8
  %46 = call %"struct.MaxFlow::edge"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPN7MaxFlow4edgeEmEET_S5_T0_(%"struct.MaxFlow::edge"* %44, i64 %45)
  store %"struct.MaxFlow::edge"* %46, %"struct.MaxFlow::edge"** %3
  %47 = load i32, i32* @x.151
  %48 = load i32, i32* @y.152
  %49 = sub i32 %47, 766842551
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 766842551
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 581302364, i32 -211093418
  store i32 %61, i32* %16
  br label %71

; <label>:62:                                     ; preds = %17
  %63 = load volatile %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %3
  ret %"struct.MaxFlow::edge"* %63

; <label>:64:                                     ; preds = %17
  %65 = alloca %"struct.MaxFlow::edge"*, align 8
  %66 = alloca i64, align 8
  %67 = alloca i8, align 1
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %65, align 8
  store i64 %1, i64* %66, align 8
  store i8 1, i8* %67, align 1
  %68 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %65, align 8
  %69 = load i64, i64* %66, align 8
  %70 = call %"struct.MaxFlow::edge"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPN7MaxFlow4edgeEmEET_S5_T0_(%"struct.MaxFlow::edge"* %68, i64 %69)
  store i32 -2136158158, i32* %16
  br label %71

; <label>:71:                                     ; preds = %64, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.MaxFlow::edge"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPN7MaxFlow4edgeEmEET_S5_T0_(%"struct.MaxFlow::edge"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.MaxFlow::edge"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"struct.MaxFlow::edge"*, align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %3, align 8
  store %"struct.MaxFlow::edge"* %8, %"struct.MaxFlow::edge"** %5, align 8
  br label %9

; <label>:9:                                      ; preds = %45, %2
  %10 = load i32, i32* @x.153
  %11 = load i32, i32* @y.154
  %12 = sub i32 %10, 753000195
  %13 = sub i32 %12, 1
  %14 = add i32 %13, 753000195
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %11, 10
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  br i1 %22, label %24, label %273

; <label>:24:                                     ; preds = %9, %273
  %25 = load i64, i64* %4, align 8
  %26 = icmp ugt i64 %25, 0
  %27 = load i32, i32* @x.153
  %28 = load i32, i32* @y.154
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  br i1 %38, label %40, label %273

; <label>:40:                                     ; preds = %24
  br i1 %26, label %41, label %105

; <label>:41:                                     ; preds = %40
  %42 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %5, align 8
  %43 = call %"struct.MaxFlow::edge"* @_ZSt11__addressofIN7MaxFlow4edgeEEPT_RS2_(%"struct.MaxFlow::edge"* dereferenceable(16) %42) #3
  invoke void @_ZSt10_ConstructIN7MaxFlow4edgeEJEEvPT_DpOT0_(%"struct.MaxFlow::edge"* %43)
          to label %44 unwind label %54

; <label>:44:                                     ; preds = %41
  br label %45

; <label>:45:                                     ; preds = %44
  %46 = load i64, i64* %4, align 8
  %47 = sub i64 0, %46
  %48 = sub i64 0, -1
  %49 = add i64 %47, %48
  %50 = sub i64 0, %49
  %51 = add i64 %46, -1
  store i64 %50, i64* %4, align 8
  %52 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %5, align 8
  %53 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %52, i32 1
  store %"struct.MaxFlow::edge"* %53, %"struct.MaxFlow::edge"** %5, align 8
  br label %9

; <label>:54:                                     ; preds = %41
  %55 = landingpad { i8*, i32 }
          catch i8* null
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %6, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %7, align 4
  br label %58

; <label>:58:                                     ; preds = %54
  %59 = load i8*, i8** %6, align 8
  %60 = call i8* @__cxa_begin_catch(i8* %59) #3
  %61 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %3, align 8
  %62 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %5, align 8
  invoke void @_ZSt8_DestroyIPN7MaxFlow4edgeEEvT_S3_(%"struct.MaxFlow::edge"* %61, %"struct.MaxFlow::edge"* %62)
          to label %63 unwind label %107

; <label>:63:                                     ; preds = %58
  %64 = load i32, i32* @x.153
  %65 = load i32, i32* @y.154
  %66 = sub i32 0, 1
  %67 = add i32 %64, %66
  %68 = sub i32 %64, 1
  %69 = mul i32 %64, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %65, 10
  %73 = and i1 %71, %72
  %74 = xor i1 %71, %72
  %75 = or i1 %73, %74
  %76 = or i1 %71, %72
  br i1 %75, label %77, label %276

; <label>:77:                                     ; preds = %63, %276
  %78 = load i32, i32* @x.153
  %79 = load i32, i32* @y.154
  %80 = sub i32 %78, -1526117180
  %81 = sub i32 %80, 1
  %82 = add i32 %81, -1526117180
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 true, true
  %91 = and i1 %88, true
  %92 = and i1 %86, %90
  %93 = and i1 %89, true
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 true, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  br i1 %102, label %104, label %276

; <label>:104:                                    ; preds = %77
  invoke void @__cxa_rethrow() #12
          to label %232 unwind label %107

; <label>:105:                                    ; preds = %40
  %106 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %5, align 8
  ret %"struct.MaxFlow::edge"* %106

; <label>:107:                                    ; preds = %104, %58
  %108 = load i32, i32* @x.153
  %109 = load i32, i32* @y.154
  %110 = add i32 %108, -1601044257
  %111 = sub i32 %110, 1
  %112 = sub i32 %111, -1601044257
  %113 = sub i32 %108, 1
  %114 = mul i32 %108, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %109, 10
  %118 = and i1 %116, %117
  %119 = xor i1 %116, %117
  %120 = or i1 %118, %119
  %121 = or i1 %116, %117
  br i1 %120, label %122, label %277

; <label>:122:                                    ; preds = %107, %277
  %123 = landingpad { i8*, i32 }
          cleanup
  %124 = extractvalue { i8*, i32 } %123, 0
  store i8* %124, i8** %6, align 8
  %125 = extractvalue { i8*, i32 } %123, 1
  store i32 %125, i32* %7, align 4
  %126 = load i32, i32* @x.153
  %127 = load i32, i32* @y.154
  %128 = sub i32 0, 1
  %129 = add i32 %126, %128
  %130 = sub i32 %126, 1
  %131 = mul i32 %126, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %127, 10
  %135 = and i1 %133, %134
  %136 = xor i1 %133, %134
  %137 = or i1 %135, %136
  %138 = or i1 %133, %134
  br i1 %137, label %139, label %277

; <label>:139:                                    ; preds = %122
  invoke void @__cxa_end_catch()
          to label %140 unwind label %229

; <label>:140:                                    ; preds = %139
  %141 = load i32, i32* @x.153
  %142 = load i32, i32* @y.154
  %143 = sub i32 0, 1
  %144 = add i32 %141, %143
  %145 = sub i32 %141, 1
  %146 = mul i32 %141, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %142, 10
  %150 = xor i1 %148, true
  %151 = xor i1 %149, true
  %152 = xor i1 true, true
  %153 = and i1 %150, true
  %154 = and i1 %148, %152
  %155 = and i1 %151, true
  %156 = and i1 %149, %152
  %157 = or i1 %153, %154
  %158 = or i1 %155, %156
  %159 = xor i1 %157, %158
  %160 = or i1 %150, %151
  %161 = xor i1 %160, true
  %162 = or i1 true, %152
  %163 = and i1 %161, %162
  %164 = or i1 %159, %163
  %165 = or i1 %148, %149
  br i1 %164, label %166, label %281

; <label>:166:                                    ; preds = %140, %281
  %167 = load i32, i32* @x.153
  %168 = load i32, i32* @y.154
  %169 = sub i32 %167, 451638754
  %170 = sub i32 %169, 1
  %171 = add i32 %170, 451638754
  %172 = sub i32 %167, 1
  %173 = mul i32 %167, %171
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %168, 10
  %177 = xor i1 %175, true
  %178 = xor i1 %176, true
  %179 = xor i1 false, true
  %180 = and i1 %177, false
  %181 = and i1 %175, %179
  %182 = and i1 %178, false
  %183 = and i1 %176, %179
  %184 = or i1 %180, %181
  %185 = or i1 %182, %183
  %186 = xor i1 %184, %185
  %187 = or i1 %177, %178
  %188 = xor i1 %187, true
  %189 = or i1 false, %179
  %190 = and i1 %188, %189
  %191 = or i1 %186, %190
  %192 = or i1 %175, %176
  br i1 %191, label %193, label %281

; <label>:193:                                    ; preds = %166
  br label %224
                                                  ; No predecessors!
  %195 = load i32, i32* @x.153
  %196 = load i32, i32* @y.154
  %197 = add i32 %195, 872856901
  %198 = sub i32 %197, 1
  %199 = sub i32 %198, 872856901
  %200 = sub i32 %195, 1
  %201 = mul i32 %195, %199
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %196, 10
  %205 = and i1 %203, %204
  %206 = xor i1 %203, %204
  %207 = or i1 %205, %206
  %208 = or i1 %203, %204
  br i1 %207, label %209, label %282

; <label>:209:                                    ; preds = %194, %282
  call void @llvm.trap()
  %210 = load i32, i32* @x.153
  %211 = load i32, i32* @y.154
  %212 = sub i32 0, 1
  %213 = add i32 %210, %212
  %214 = sub i32 %210, 1
  %215 = mul i32 %210, %213
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %211, 10
  %219 = and i1 %217, %218
  %220 = xor i1 %217, %218
  %221 = or i1 %219, %220
  %222 = or i1 %217, %218
  br i1 %221, label %223, label %282

; <label>:223:                                    ; preds = %209
  unreachable

; <label>:224:                                    ; preds = %193
  %225 = load i8*, i8** %6, align 8
  %226 = load i32, i32* %7, align 4
  %227 = insertvalue { i8*, i32 } undef, i8* %225, 0
  %228 = insertvalue { i8*, i32 } %227, i32 %226, 1
  resume { i8*, i32 } %228

; <label>:229:                                    ; preds = %139
  %230 = landingpad { i8*, i32 }
          catch i8* null
  %231 = extractvalue { i8*, i32 } %230, 0
  call void @__clang_call_terminate(i8* %231) #10
  unreachable

; <label>:232:                                    ; preds = %104
  %233 = load i32, i32* @x.153
  %234 = load i32, i32* @y.154
  %235 = sub i32 0, 1
  %236 = add i32 %233, %235
  %237 = sub i32 %233, 1
  %238 = mul i32 %233, %236
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %234, 10
  %242 = and i1 %240, %241
  %243 = xor i1 %240, %241
  %244 = or i1 %242, %243
  %245 = or i1 %240, %241
  br i1 %244, label %246, label %283

; <label>:246:                                    ; preds = %232, %283
  %247 = load i32, i32* @x.153
  %248 = load i32, i32* @y.154
  %249 = sub i32 0, 1
  %250 = add i32 %247, %249
  %251 = sub i32 %247, 1
  %252 = mul i32 %247, %250
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %248, 10
  %256 = xor i1 %254, true
  %257 = xor i1 %255, true
  %258 = xor i1 false, true
  %259 = and i1 %256, false
  %260 = and i1 %254, %258
  %261 = and i1 %257, false
  %262 = and i1 %255, %258
  %263 = or i1 %259, %260
  %264 = or i1 %261, %262
  %265 = xor i1 %263, %264
  %266 = or i1 %256, %257
  %267 = xor i1 %266, true
  %268 = or i1 false, %258
  %269 = and i1 %267, %268
  %270 = or i1 %265, %269
  %271 = or i1 %254, %255
  br i1 %270, label %272, label %283

; <label>:272:                                    ; preds = %246
  unreachable

; <label>:273:                                    ; preds = %24, %9
  %274 = load i64, i64* %4, align 8
  %275 = icmp ugt i64 %274, 0
  br label %24

; <label>:276:                                    ; preds = %77, %63
  br label %77

; <label>:277:                                    ; preds = %122, %107
  %278 = landingpad { i8*, i32 }
          cleanup
  %279 = extractvalue { i8*, i32 } %278, 0
  store i8* %279, i8** %6, align 8
  %280 = extractvalue { i8*, i32 } %278, 1
  store i32 %280, i32* %7, align 4
  br label %122

; <label>:281:                                    ; preds = %166, %140
  br label %166

; <label>:282:                                    ; preds = %209, %194
  call void @llvm.trap()
  br label %209

; <label>:283:                                    ; preds = %246, %232
  br label %246
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructIN7MaxFlow4edgeEJEEvPT_DpOT0_(%"struct.MaxFlow::edge"*) #0 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.155
  %5 = load i32, i32* @y.156
  %6 = add i32 %4, -563835312
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -563835312
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1091347291, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %76
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1091347291, label %18
    i32 758684440, label %38
    i32 207991710, label %70
    i32 -1175544086, label %71
  ]

; <label>:17:                                     ; preds = %15
  br label %76

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 758684440, i32 -1175544086
  store i32 %37, i32* %14
  br label %76

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.MaxFlow::edge"*, align 8
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %39, align 8
  %40 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %39, align 8
  %41 = bitcast %"struct.MaxFlow::edge"* %40 to i8*
  %42 = bitcast i8* %41 to %"struct.MaxFlow::edge"*
  call void @_ZN7MaxFlow4edgeC2Ev(%"struct.MaxFlow::edge"* %42)
  %43 = load i32, i32* @x.155
  %44 = load i32, i32* @y.156
  %45 = add i32 %43, 1251594847
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 1251594847
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 207991710, i32 -1175544086
  store i32 %69, i32* %14
  br label %76

; <label>:70:                                     ; preds = %15
  ret void

; <label>:71:                                     ; preds = %15
  %72 = alloca %"struct.MaxFlow::edge"*, align 8
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %72, align 8
  %73 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %72, align 8
  %74 = bitcast %"struct.MaxFlow::edge"* %73 to i8*
  %75 = bitcast i8* %74 to %"struct.MaxFlow::edge"*
  call void @_ZN7MaxFlow4edgeC2Ev(%"struct.MaxFlow::edge"* %75)
  store i32 758684440, i32* %14
  br label %76

; <label>:76:                                     ; preds = %71, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.MaxFlow::edge"* @_ZSt11__addressofIN7MaxFlow4edgeEEPT_RS2_(%"struct.MaxFlow::edge"* dereferenceable(16)) #4 comdat {
  %2 = alloca %"struct.MaxFlow::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.157
  %6 = load i32, i32* @y.158
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1049214269, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %77
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1049214269, label %18
    i32 -401092489, label %38
    i32 -884355160, label %70
    i32 2145179624, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %77

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -401092489, i32 2145179624
  store i32 %37, i32* %14
  br label %77

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.MaxFlow::edge"*, align 8
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %39, align 8
  %40 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %39, align 8
  %41 = bitcast %"struct.MaxFlow::edge"* %40 to i8*
  %42 = bitcast i8* %41 to %"struct.MaxFlow::edge"*
  store %"struct.MaxFlow::edge"* %42, %"struct.MaxFlow::edge"** %2
  %43 = load i32, i32* @x.157
  %44 = load i32, i32* @y.158
  %45 = add i32 %43, -431629971
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -431629971
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -884355160, i32 2145179624
  store i32 %69, i32* %14
  br label %77

; <label>:70:                                     ; preds = %15
  %71 = load volatile %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %2
  ret %"struct.MaxFlow::edge"* %71

; <label>:72:                                     ; preds = %15
  %73 = alloca %"struct.MaxFlow::edge"*, align 8
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %73, align 8
  %74 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %73, align 8
  %75 = bitcast %"struct.MaxFlow::edge"* %74 to i8*
  %76 = bitcast i8* %75 to %"struct.MaxFlow::edge"*
  store i32 -401092489, i32* %14
  br label %77

; <label>:77:                                     ; preds = %72, %38, %18, %17
  br label %15
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN7MaxFlow4edgeC2Ev(%"struct.MaxFlow::edge"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.159
  %5 = load i32, i32* @y.160
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 472572064, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %58
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 472572064, label %17
    i32 1148844896, label %25
    i32 -10296937, label %54
    i32 -1723276663, label %55
  ]

; <label>:16:                                     ; preds = %14
  br label %58

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 1148844896, i32 -1723276663
  store i32 %24, i32* %13
  br label %58

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.MaxFlow::edge"*, align 8
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %26, align 8
  %27 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %26, align 8
  %28 = load i32, i32* @x.159
  %29 = load i32, i32* @y.160
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 false, true
  %40 = and i1 %37, false
  %41 = and i1 %35, %39
  %42 = and i1 %38, false
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 false, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  %53 = select i1 %51, i32 -10296937, i32 -1723276663
  store i32 %53, i32* %13
  br label %58

; <label>:54:                                     ; preds = %14
  ret void

; <label>:55:                                     ; preds = %14
  %56 = alloca %"struct.MaxFlow::edge"*, align 8
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %56, align 8
  %57 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %56, align 8
  store i32 1148844896, i32* %13
  br label %58

; <label>:58:                                     ; preds = %55, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EEC2EmRKS5_(%"struct.std::_Vector_base"*, i64, %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.0"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.0"* %2, %"class.std::allocator.0"** %6, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %6, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_(%"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %10, %"class.std::allocator.0"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE17_M_create_storageEm(%"struct.std::_Vector_base"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %10) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i32, i32* @x.161
  %20 = load i32, i32* @y.162
  %21 = sub i32 %19, -1583459498
  %22 = sub i32 %21, 1
  %23 = add i32 %22, -1583459498
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  br i1 %31, label %33, label %53

; <label>:33:                                     ; preds = %18, %53
  %34 = load i8*, i8** %7, align 8
  %35 = load i32, i32* %8, align 4
  %36 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %37 = insertvalue { i8*, i32 } %36, i32 %35, 1
  %38 = load i32, i32* @x.161
  %39 = load i32, i32* @y.162
  %40 = sub i32 %38, 1046713413
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 1046713413
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %53

; <label>:52:                                     ; preds = %33
  resume { i8*, i32 } %37

; <label>:53:                                     ; preds = %33, %18
  %54 = load i8*, i8** %7, align 8
  %55 = load i32, i32* %8, align 4
  %56 = insertvalue { i8*, i32 } undef, i8* %54, 0
  %57 = insertvalue { i8*, i32 } %56, i32 %55, 1
  br label %33
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EE18_M_fill_initializeEmRKS3_(%"class.std::vector"*, i64, %"class.std::vector.3"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %6, align 8
  %7 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %8 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::vector.3"*, %"class.std::vector.3"** %10, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %14 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14) #3
  %16 = call %"class.std::vector.3"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIN7MaxFlow4edgeESaIS2_EEmS4_S4_ET_S6_T0_RKT1_RSaIT2_E(%"class.std::vector.3"* %11, i64 %12, %"class.std::vector.3"* dereferenceable(24) %13, %"class.std::allocator.0"* dereferenceable(1) %15)
  %17 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %18, i32 0, i32 1
  store %"class.std::vector.3"* %16, %"class.std::vector.3"** %19, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_(%"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"*, %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.0"*, align 8
  store %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %5 to %"class.std::allocator.0"*
  %7 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %4, align 8
  call void @_ZNSaISt6vectorIN7MaxFlow4edgeESaIS1_EEEC2ERKS4_(%"class.std::allocator.0"* %6, %"class.std::allocator.0"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %5, i32 0, i32 0
  store %"class.std::vector.3"* null, %"class.std::vector.3"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %5, i32 0, i32 1
  store %"class.std::vector.3"* null, %"class.std::vector.3"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %5, i32 0, i32 2
  store %"class.std::vector.3"* null, %"class.std::vector.3"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE17_M_create_storageEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"class.std::vector.3"* @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE11_M_allocateEm(%"struct.std::_Vector_base"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %8, i32 0, i32 0
  store %"class.std::vector.3"* %7, %"class.std::vector.3"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"class.std::vector.3"*, %"class.std::vector.3"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %13, i32 0, i32 1
  store %"class.std::vector.3"* %12, %"class.std::vector.3"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"class.std::vector.3"*, %"class.std::vector.3"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %20, i32 0, i32 2
  store %"class.std::vector.3"* %19, %"class.std::vector.3"** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN7MaxFlow4edgeESaIS3_EEEC2ERKS6_(%"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %1, %"class.__gnu_cxx::new_allocator.1"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.3"*
  %4 = alloca %"class.std::vector.3"*
  %5 = alloca i64
  %6 = alloca %"struct.std::_Vector_base"*
  %7 = alloca %"struct.std::_Vector_base"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %7, align 8
  store i64 %1, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %7, align 8
  store %"struct.std::_Vector_base"* %9, %"struct.std::_Vector_base"** %6
  %10 = load i64, i64* %8, align 8
  store i64 %10, i64* %5
  %11 = alloca i32
  store i32 -269284467, i32* %11
  %12 = alloca %"class.std::vector.3"*
  br label %13

; <label>:13:                                     ; preds = %2, %144
  %14 = load i32, i32* %11
  switch i32 %14, label %15 [
    i32 -269284467, label %16
    i32 -1066024899, label %20
    i32 -1089604973, label %35
    i32 579470822, label %67
    i32 410111195, label %69
    i32 -830987911, label %85
    i32 -1061536805, label %101
    i32 1885882523, label %102
    i32 -465638666, label %119
    i32 397036545, label %134
    i32 297634000, label %136
    i32 -430055604, label %142
    i32 1978313130, label %143
  ]

; <label>:15:                                     ; preds = %13
  br label %144

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = icmp ne i64 %17, 0
  %19 = select i1 %18, i32 -1066024899, i32 410111195
  store i32 %19, i32* %11
  br label %144

; <label>:20:                                     ; preds = %13
  %21 = load i32, i32* @x.171
  %22 = load i32, i32* @y.172
  %23 = sub i32 0, 1
  %24 = add i32 %21, %23
  %25 = sub i32 %21, 1
  %26 = mul i32 %21, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %22, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  %34 = select i1 %32, i32 -1089604973, i32 297634000
  store i32 %34, i32* %11
  br label %144

; <label>:35:                                     ; preds = %13
  %36 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6
  %37 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %37 to %"class.std::allocator.0"*
  %39 = load i64, i64* %8, align 8
  %40 = call %"class.std::vector.3"* @_ZNSt16allocator_traitsISaISt6vectorIN7MaxFlow4edgeESaIS2_EEEE8allocateERS5_m(%"class.std::allocator.0"* dereferenceable(1) %38, i64 %39)
  store %"class.std::vector.3"* %40, %"class.std::vector.3"** %4
  %41 = load i32, i32* @x.171
  %42 = load i32, i32* @y.172
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 579470822, i32 297634000
  store i32 %66, i32* %11
  br label %144

; <label>:67:                                     ; preds = %13
  store i32 1885882523, i32* %11
  %68 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  store %"class.std::vector.3"* %68, %"class.std::vector.3"** %12
  br label %144

; <label>:69:                                     ; preds = %13
  %70 = load i32, i32* @x.171
  %71 = load i32, i32* @y.172
  %72 = add i32 %70, 741708033
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, 741708033
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  %84 = select i1 %82, i32 -830987911, i32 -430055604
  store i32 %84, i32* %11
  br label %144

; <label>:85:                                     ; preds = %13
  %86 = load i32, i32* @x.171
  %87 = load i32, i32* @y.172
  %88 = add i32 %86, -97199524
  %89 = sub i32 %88, 1
  %90 = sub i32 %89, -97199524
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = and i1 %94, %95
  %97 = xor i1 %94, %95
  %98 = or i1 %96, %97
  %99 = or i1 %94, %95
  %100 = select i1 %98, i32 -1061536805, i32 -430055604
  store i32 %100, i32* %11
  br label %144

; <label>:101:                                    ; preds = %13
  store i32 1885882523, i32* %11
  store %"class.std::vector.3"* null, %"class.std::vector.3"** %12
  br label %144

; <label>:102:                                    ; preds = %13
  %103 = load %"class.std::vector.3"*, %"class.std::vector.3"** %12
  store %"class.std::vector.3"* %103, %"class.std::vector.3"** %3
  %104 = load i32, i32* @x.171
  %105 = load i32, i32* @y.172
  %106 = sub i32 %104, 1649008937
  %107 = sub i32 %106, 1
  %108 = add i32 %107, 1649008937
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = and i1 %112, %113
  %115 = xor i1 %112, %113
  %116 = or i1 %114, %115
  %117 = or i1 %112, %113
  %118 = select i1 %116, i32 -465638666, i32 1978313130
  store i32 %118, i32* %11
  br label %144

; <label>:119:                                    ; preds = %13
  %120 = load i32, i32* @x.171
  %121 = load i32, i32* @y.172
  %122 = sub i32 0, 1
  %123 = add i32 %120, %122
  %124 = sub i32 %120, 1
  %125 = mul i32 %120, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %121, 10
  %129 = and i1 %127, %128
  %130 = xor i1 %127, %128
  %131 = or i1 %129, %130
  %132 = or i1 %127, %128
  %133 = select i1 %131, i32 397036545, i32 1978313130
  store i32 %133, i32* %11
  br label %144

; <label>:134:                                    ; preds = %13
  %135 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %3
  ret %"class.std::vector.3"* %135

; <label>:136:                                    ; preds = %13
  %137 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6
  %138 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %137, i32 0, i32 0
  %139 = bitcast %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %138 to %"class.std::allocator.0"*
  %140 = load i64, i64* %8, align 8
  %141 = call %"class.std::vector.3"* @_ZNSt16allocator_traitsISaISt6vectorIN7MaxFlow4edgeESaIS2_EEEE8allocateERS5_m(%"class.std::allocator.0"* dereferenceable(1) %139, i64 %140)
  store i32 -1089604973, i32* %11
  br label %144

; <label>:142:                                    ; preds = %13
  store i32 -830987911, i32* %11
  br label %144

; <label>:143:                                    ; preds = %13
  store i32 -465638666, i32* %11
  br label %144

; <label>:144:                                    ; preds = %143, %142, %136, %119, %102, %101, %85, %69, %67, %35, %20, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZNSt16allocator_traitsISaISt6vectorIN7MaxFlow4edgeESaIS2_EEEE8allocateERS5_m(%"class.std::allocator.0"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.3"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.173
  %7 = load i32, i32* @y.174
  %8 = add i32 %6, 1486535713
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1486535713
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1878644123, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %71
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1878644123, label %20
    i32 1127501031, label %40
    i32 909768764, label %62
    i32 2070684221, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %71

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1127501031, i32 2070684221
  store i32 %39, i32* %16
  br label %71

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.0"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %41, align 8
  store i64 %1, i64* %42, align 8
  %43 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %41, align 8
  %44 = bitcast %"class.std::allocator.0"* %43 to %"class.__gnu_cxx::new_allocator.1"*
  %45 = load i64, i64* %42, align 8
  %46 = call %"class.std::vector.3"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIN7MaxFlow4edgeESaIS3_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.1"* %44, i64 %45, i8* null)
  store %"class.std::vector.3"* %46, %"class.std::vector.3"** %3
  %47 = load i32, i32* @x.173
  %48 = load i32, i32* @y.174
  %49 = add i32 %47, -392634901
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -392634901
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 909768764, i32 2070684221
  store i32 %61, i32* %16
  br label %71

; <label>:62:                                     ; preds = %17
  %63 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %3
  ret %"class.std::vector.3"* %63

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::allocator.0"*, align 8
  %66 = alloca i64, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %65, align 8
  store i64 %1, i64* %66, align 8
  %67 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %65, align 8
  %68 = bitcast %"class.std::allocator.0"* %67 to %"class.__gnu_cxx::new_allocator.1"*
  %69 = load i64, i64* %66, align 8
  %70 = call %"class.std::vector.3"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIN7MaxFlow4edgeESaIS3_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.1"* %68, i64 %69, i8* null)
  store i32 1127501031, i32* %16
  br label %71

; <label>:71:                                     ; preds = %64, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIN7MaxFlow4edgeESaIS3_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.1"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.175
  %9 = load i32, i32* @y.176
  %10 = add i32 %8, 1473134667
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 1473134667
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1207731082, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %129
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1207731082, label %22
    i32 -593720198, label %30
    i32 2106590186, label %66
    i32 -367818053, label %69
    i32 2010045129, label %97
    i32 -1097916050, label %113
    i32 867843988, label %114
    i32 -2059556748, label %120
    i32 1218405854, label %128
  ]

; <label>:21:                                     ; preds = %19
  br label %129

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -593720198, i32 -2059556748
  store i32 %29, i32* %18
  br label %129

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %32 = alloca i64, align 8
  store i64* %32, i64** %5
  %33 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %31, align 8
  %34 = load volatile i64*, i64** %5
  store i64 %1, i64* %34, align 8
  store i8* %2, i8** %33, align 8
  %35 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %31, align 8
  %36 = load volatile i64*, i64** %5
  %37 = load i64, i64* %36, align 8
  %38 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN7MaxFlow4edgeESaIS3_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.1"* %35) #3
  %39 = icmp ugt i64 %37, %38
  store i1 %39, i1* %4
  %40 = load i32, i32* @x.175
  %41 = load i32, i32* @y.176
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 2106590186, i32 -2059556748
  store i32 %65, i32* %18
  br label %129

; <label>:66:                                     ; preds = %19
  %67 = load volatile i1, i1* %4
  %68 = select i1 %67, i32 -367818053, i32 867843988
  store i32 %68, i32* %18
  br label %129

; <label>:69:                                     ; preds = %19
  %70 = load i32, i32* @x.175
  %71 = load i32, i32* @y.176
  %72 = add i32 %70, 2002615858
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, 2002615858
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 true, true
  %83 = and i1 %80, true
  %84 = and i1 %78, %82
  %85 = and i1 %81, true
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 true, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  %96 = select i1 %94, i32 2010045129, i32 1218405854
  store i32 %96, i32* %18
  br label %129

; <label>:97:                                     ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #12
  %98 = load i32, i32* @x.175
  %99 = load i32, i32* @y.176
  %100 = add i32 %98, 1815356935
  %101 = sub i32 %100, 1
  %102 = sub i32 %101, 1815356935
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = and i1 %106, %107
  %109 = xor i1 %106, %107
  %110 = or i1 %108, %109
  %111 = or i1 %106, %107
  %112 = select i1 %110, i32 -1097916050, i32 1218405854
  store i32 %112, i32* %18
  br label %129

; <label>:113:                                    ; preds = %19
  unreachable

; <label>:114:                                    ; preds = %19
  %115 = load volatile i64*, i64** %5
  %116 = load i64, i64* %115, align 8
  %117 = mul i64 %116, 24
  %118 = call i8* @_Znwm(i64 %117)
  %119 = bitcast i8* %118 to %"class.std::vector.3"*
  ret %"class.std::vector.3"* %119

; <label>:120:                                    ; preds = %19
  %121 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %122 = alloca i64, align 8
  %123 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %121, align 8
  store i64 %1, i64* %122, align 8
  store i8* %2, i8** %123, align 8
  %124 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %121, align 8
  %125 = load i64, i64* %122, align 8
  %126 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN7MaxFlow4edgeESaIS3_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.1"* %124) #3
  %127 = icmp ugt i64 %125, %126
  store i32 -593720198, i32* %18
  br label %129

; <label>:128:                                    ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 2010045129, i32* %18
  br label %129

; <label>:129:                                    ; preds = %128, %120, %97, %69, %66, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN7MaxFlow4edgeESaIS3_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.1"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIN7MaxFlow4edgeESaIS2_EEmS4_S4_ET_S6_T0_RKT1_RSaIT2_E(%"class.std::vector.3"*, i64, %"class.std::vector.3"* dereferenceable(24), %"class.std::allocator.0"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.3"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.3"*, align 8
  %8 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %7, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %8, align 8
  %9 = load %"class.std::vector.3"*, %"class.std::vector.3"** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  %12 = call %"class.std::vector.3"* @_ZSt20uninitialized_fill_nIPSt6vectorIN7MaxFlow4edgeESaIS2_EEmS4_ET_S6_T0_RKT1_(%"class.std::vector.3"* %9, i64 %10, %"class.std::vector.3"* dereferenceable(24) %11)
  ret %"class.std::vector.3"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZSt20uninitialized_fill_nIPSt6vectorIN7MaxFlow4edgeESaIS2_EEmS4_ET_S6_T0_RKT1_(%"class.std::vector.3"*, i64, %"class.std::vector.3"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.3"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.3"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %11 = call %"class.std::vector.3"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIN7MaxFlow4edgeESaIS4_EEmS6_EET_S8_T0_RKT1_(%"class.std::vector.3"* %8, i64 %9, %"class.std::vector.3"* dereferenceable(24) %10)
  ret %"class.std::vector.3"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIN7MaxFlow4edgeESaIS4_EEmS6_EET_S8_T0_RKT1_(%"class.std::vector.3"*, i64, %"class.std::vector.3"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.3"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.3"*, align 8
  %7 = alloca %"class.std::vector.3"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %6, align 8
  %10 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  store %"class.std::vector.3"* %10, %"class.std::vector.3"** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %60, %3
  %12 = load i64, i64* %5, align 8
  %13 = icmp ugt i64 %12, 0
  br i1 %13, label %14, label %162

; <label>:14:                                     ; preds = %11
  %15 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  %16 = call %"class.std::vector.3"* @_ZSt11__addressofISt6vectorIN7MaxFlow4edgeESaIS2_EEEPT_RS5_(%"class.std::vector.3"* dereferenceable(24) %15) #3
  %17 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  invoke void @_ZSt10_ConstructISt6vectorIN7MaxFlow4edgeESaIS2_EEJRKS4_EEvPT_DpOT0_(%"class.std::vector.3"* %16, %"class.std::vector.3"* dereferenceable(24) %17)
          to label %18 unwind label %68

; <label>:18:                                     ; preds = %14
  %19 = load i32, i32* @x.183
  %20 = load i32, i32* @y.184
  %21 = sub i32 %19, -705664380
  %22 = sub i32 %21, 1
  %23 = add i32 %22, -705664380
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  br i1 %31, label %33, label %287

; <label>:33:                                     ; preds = %18, %287
  %34 = load i32, i32* @x.183
  %35 = load i32, i32* @y.184
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %287

; <label>:59:                                     ; preds = %33
  br label %60

; <label>:60:                                     ; preds = %59
  %61 = load i64, i64* %5, align 8
  %62 = add i64 %61, -8965077319351094214
  %63 = add i64 %62, -1
  %64 = sub i64 %63, -8965077319351094214
  %65 = add i64 %61, -1
  store i64 %64, i64* %5, align 8
  %66 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  %67 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %66, i32 1
  store %"class.std::vector.3"* %67, %"class.std::vector.3"** %7, align 8
  br label %11

; <label>:68:                                     ; preds = %14
  %69 = load i32, i32* @x.183
  %70 = load i32, i32* @y.184
  %71 = sub i32 %69, -643929450
  %72 = sub i32 %71, 1
  %73 = add i32 %72, -643929450
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  br i1 %81, label %83, label %288

; <label>:83:                                     ; preds = %68, %288
  %84 = landingpad { i8*, i32 }
          catch i8* null
  %85 = extractvalue { i8*, i32 } %84, 0
  store i8* %85, i8** %8, align 8
  %86 = extractvalue { i8*, i32 } %84, 1
  store i32 %86, i32* %9, align 4
  %87 = load i32, i32* @x.183
  %88 = load i32, i32* @y.184
  %89 = add i32 %87, 710373041
  %90 = sub i32 %89, 1
  %91 = sub i32 %90, 710373041
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 false, true
  %100 = and i1 %97, false
  %101 = and i1 %95, %99
  %102 = and i1 %98, false
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 false, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  br i1 %111, label %113, label %288

; <label>:113:                                    ; preds = %83
  br label %114

; <label>:114:                                    ; preds = %113
  %115 = load i8*, i8** %8, align 8
  %116 = call i8* @__cxa_begin_catch(i8* %115) #3
  %117 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %118 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIN7MaxFlow4edgeESaIS2_EEEvT_S6_(%"class.std::vector.3"* %117, %"class.std::vector.3"* %118)
          to label %119 unwind label %218

; <label>:119:                                    ; preds = %114
  %120 = load i32, i32* @x.183
  %121 = load i32, i32* @y.184
  %122 = add i32 %120, -1676021481
  %123 = sub i32 %122, 1
  %124 = sub i32 %123, -1676021481
  %125 = sub i32 %120, 1
  %126 = mul i32 %120, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %121, 10
  %130 = and i1 %128, %129
  %131 = xor i1 %128, %129
  %132 = or i1 %130, %131
  %133 = or i1 %128, %129
  br i1 %132, label %134, label %292

; <label>:134:                                    ; preds = %119, %292
  %135 = load i32, i32* @x.183
  %136 = load i32, i32* @y.184
  %137 = sub i32 %135, 719149742
  %138 = sub i32 %137, 1
  %139 = add i32 %138, 719149742
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = xor i1 %143, true
  %146 = xor i1 %144, true
  %147 = xor i1 false, true
  %148 = and i1 %145, false
  %149 = and i1 %143, %147
  %150 = and i1 %146, false
  %151 = and i1 %144, %147
  %152 = or i1 %148, %149
  %153 = or i1 %150, %151
  %154 = xor i1 %152, %153
  %155 = or i1 %145, %146
  %156 = xor i1 %155, true
  %157 = or i1 false, %147
  %158 = and i1 %156, %157
  %159 = or i1 %154, %158
  %160 = or i1 %143, %144
  br i1 %159, label %161, label %292

; <label>:161:                                    ; preds = %134
  invoke void @__cxa_rethrow() #12
          to label %232 unwind label %218

; <label>:162:                                    ; preds = %11
  %163 = load i32, i32* @x.183
  %164 = load i32, i32* @y.184
  %165 = sub i32 %163, -1010729391
  %166 = sub i32 %165, 1
  %167 = add i32 %166, -1010729391
  %168 = sub i32 %163, 1
  %169 = mul i32 %163, %167
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %164, 10
  %173 = xor i1 %171, true
  %174 = xor i1 %172, true
  %175 = xor i1 true, true
  %176 = and i1 %173, true
  %177 = and i1 %171, %175
  %178 = and i1 %174, true
  %179 = and i1 %172, %175
  %180 = or i1 %176, %177
  %181 = or i1 %178, %179
  %182 = xor i1 %180, %181
  %183 = or i1 %173, %174
  %184 = xor i1 %183, true
  %185 = or i1 true, %175
  %186 = and i1 %184, %185
  %187 = or i1 %182, %186
  %188 = or i1 %171, %172
  br i1 %187, label %189, label %293

; <label>:189:                                    ; preds = %162, %293
  %190 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  %191 = load i32, i32* @x.183
  %192 = load i32, i32* @y.184
  %193 = sub i32 %191, 1684218447
  %194 = sub i32 %193, 1
  %195 = add i32 %194, 1684218447
  %196 = sub i32 %191, 1
  %197 = mul i32 %191, %195
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %192, 10
  %201 = xor i1 %199, true
  %202 = xor i1 %200, true
  %203 = xor i1 false, true
  %204 = and i1 %201, false
  %205 = and i1 %199, %203
  %206 = and i1 %202, false
  %207 = and i1 %200, %203
  %208 = or i1 %204, %205
  %209 = or i1 %206, %207
  %210 = xor i1 %208, %209
  %211 = or i1 %201, %202
  %212 = xor i1 %211, true
  %213 = or i1 false, %203
  %214 = and i1 %212, %213
  %215 = or i1 %210, %214
  %216 = or i1 %199, %200
  br i1 %215, label %217, label %293

; <label>:217:                                    ; preds = %189
  ret %"class.std::vector.3"* %190

; <label>:218:                                    ; preds = %161, %114
  %219 = landingpad { i8*, i32 }
          cleanup
  %220 = extractvalue { i8*, i32 } %219, 0
  store i8* %220, i8** %8, align 8
  %221 = extractvalue { i8*, i32 } %219, 1
  store i32 %221, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %222 unwind label %229

; <label>:222:                                    ; preds = %218
  br label %224
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:224:                                    ; preds = %222
  %225 = load i8*, i8** %8, align 8
  %226 = load i32, i32* %9, align 4
  %227 = insertvalue { i8*, i32 } undef, i8* %225, 0
  %228 = insertvalue { i8*, i32 } %227, i32 %226, 1
  resume { i8*, i32 } %228

; <label>:229:                                    ; preds = %218
  %230 = landingpad { i8*, i32 }
          catch i8* null
  %231 = extractvalue { i8*, i32 } %230, 0
  call void @__clang_call_terminate(i8* %231) #10
  unreachable

; <label>:232:                                    ; preds = %161
  %233 = load i32, i32* @x.183
  %234 = load i32, i32* @y.184
  %235 = add i32 %233, 1240363493
  %236 = sub i32 %235, 1
  %237 = sub i32 %236, 1240363493
  %238 = sub i32 %233, 1
  %239 = mul i32 %233, %237
  %240 = urem i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %234, 10
  %243 = xor i1 %241, true
  %244 = xor i1 %242, true
  %245 = xor i1 false, true
  %246 = and i1 %243, false
  %247 = and i1 %241, %245
  %248 = and i1 %244, false
  %249 = and i1 %242, %245
  %250 = or i1 %246, %247
  %251 = or i1 %248, %249
  %252 = xor i1 %250, %251
  %253 = or i1 %243, %244
  %254 = xor i1 %253, true
  %255 = or i1 false, %245
  %256 = and i1 %254, %255
  %257 = or i1 %252, %256
  %258 = or i1 %241, %242
  br i1 %257, label %259, label %295

; <label>:259:                                    ; preds = %232, %295
  %260 = load i32, i32* @x.183
  %261 = load i32, i32* @y.184
  %262 = sub i32 %260, -784633711
  %263 = sub i32 %262, 1
  %264 = add i32 %263, -784633711
  %265 = sub i32 %260, 1
  %266 = mul i32 %260, %264
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %261, 10
  %270 = xor i1 %268, true
  %271 = xor i1 %269, true
  %272 = xor i1 false, true
  %273 = and i1 %270, false
  %274 = and i1 %268, %272
  %275 = and i1 %271, false
  %276 = and i1 %269, %272
  %277 = or i1 %273, %274
  %278 = or i1 %275, %276
  %279 = xor i1 %277, %278
  %280 = or i1 %270, %271
  %281 = xor i1 %280, true
  %282 = or i1 false, %272
  %283 = and i1 %281, %282
  %284 = or i1 %279, %283
  %285 = or i1 %268, %269
  br i1 %284, label %286, label %295

; <label>:286:                                    ; preds = %259
  unreachable

; <label>:287:                                    ; preds = %33, %18
  br label %33

; <label>:288:                                    ; preds = %83, %68
  %289 = landingpad { i8*, i32 }
          catch i8* null
  %290 = extractvalue { i8*, i32 } %289, 0
  store i8* %290, i8** %8, align 8
  %291 = extractvalue { i8*, i32 } %289, 1
  store i32 %291, i32* %9, align 4
  br label %83

; <label>:292:                                    ; preds = %134, %119
  br label %134

; <label>:293:                                    ; preds = %189, %162
  %294 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  br label %189

; <label>:295:                                    ; preds = %259, %232
  br label %259
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIN7MaxFlow4edgeESaIS2_EEJRKS4_EEvPT_DpOT0_(%"class.std::vector.3"*, %"class.std::vector.3"* dereferenceable(24)) #0 comdat {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %4, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %6 = bitcast %"class.std::vector.3"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector.3"*
  %8 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector.3"* @_ZSt7forwardIRKSt6vectorIN7MaxFlow4edgeESaIS2_EEEOT_RNSt16remove_referenceIS7_E4typeE(%"class.std::vector.3"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EEC2ERKS3_(%"class.std::vector.3"* %7, %"class.std::vector.3"* dereferenceable(24) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.3"* @_ZSt7forwardIRKSt6vectorIN7MaxFlow4edgeESaIS2_EEEOT_RNSt16remove_referenceIS7_E4typeE(%"class.std::vector.3"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  ret %"class.std::vector.3"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EEC2ERKS3_(%"class.std::vector.3"*, %"class.std::vector.3"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca %"class.std::vector.3"*, align 8
  %5 = alloca %"class.std::allocator.5", align 1
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %4, align 8
  %10 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %11 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %12 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %13 = call i64 @_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %12) #3
  %14 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %15 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %16 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %15) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN7MaxFlow4edgeEEE17_S_select_on_copyERKS3_(%"class.std::allocator.5"* sret %5, %"class.std::allocator.5"* dereferenceable(1) %16)
  invoke void @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.4"* %11, i64 %13, %"class.std::allocator.5"* dereferenceable(1) %5)
          to label %17 unwind label %92

; <label>:17:                                     ; preds = %2
  %18 = load i32, i32* @x.189
  %19 = load i32, i32* @y.190
  %20 = sub i32 0, 1
  %21 = add i32 %18, %20
  %22 = sub i32 %18, 1
  %23 = mul i32 %18, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %19, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  br i1 %41, label %43, label %136

; <label>:43:                                     ; preds = %17, %136
  call void @_ZNSaIN7MaxFlow4edgeEED2Ev(%"class.std::allocator.5"* %5) #3
  %44 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %45 = call %"struct.MaxFlow::edge"* @_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE5beginEv(%"class.std::vector.3"* %44) #3
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %45, %"struct.MaxFlow::edge"** %46, align 8
  %47 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %48 = call %"struct.MaxFlow::edge"* @_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE3endEv(%"class.std::vector.3"* %47) #3
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %48, %"struct.MaxFlow::edge"** %49, align 8
  %50 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %51 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %50, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %51, i32 0, i32 0
  %53 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %52, align 8
  %54 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %55 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %54) #3
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %57 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %56, align 8
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %59 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %58, align 8
  %60 = load i32, i32* @x.189
  %61 = load i32, i32* @y.190
  %62 = sub i32 %60, -299497761
  %63 = sub i32 %62, 1
  %64 = add i32 %63, -299497761
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 false, true
  %73 = and i1 %70, false
  %74 = and i1 %68, %72
  %75 = and i1 %71, false
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 false, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  br i1 %84, label %86, label %136

; <label>:86:                                     ; preds = %43
  %87 = invoke %"struct.MaxFlow::edge"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN7MaxFlow4edgeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E(%"struct.MaxFlow::edge"* %57, %"struct.MaxFlow::edge"* %59, %"struct.MaxFlow::edge"* %53, %"class.std::allocator.5"* dereferenceable(1) %55)
          to label %88 unwind label %96

; <label>:88:                                     ; preds = %86
  %89 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %90 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %89, i32 0, i32 0
  %91 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %90, i32 0, i32 1
  store %"struct.MaxFlow::edge"* %87, %"struct.MaxFlow::edge"** %91, align 8
  ret void

; <label>:92:                                     ; preds = %2
  %93 = landingpad { i8*, i32 }
          cleanup
  %94 = extractvalue { i8*, i32 } %93, 0
  store i8* %94, i8** %6, align 8
  %95 = extractvalue { i8*, i32 } %93, 1
  store i32 %95, i32* %7, align 4
  call void @_ZNSaIN7MaxFlow4edgeEED2Ev(%"class.std::allocator.5"* %5) #3
  br label %131

; <label>:96:                                     ; preds = %86
  %97 = load i32, i32* @x.189
  %98 = load i32, i32* @y.190
  %99 = add i32 %97, 952180030
  %100 = sub i32 %99, 1
  %101 = sub i32 %100, 952180030
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  br i1 %109, label %111, label %153

; <label>:111:                                    ; preds = %96, %153
  %112 = landingpad { i8*, i32 }
          cleanup
  %113 = extractvalue { i8*, i32 } %112, 0
  store i8* %113, i8** %6, align 8
  %114 = extractvalue { i8*, i32 } %112, 1
  store i32 %114, i32* %7, align 4
  %115 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EED2Ev(%"struct.std::_Vector_base.4"* %115) #3
  %116 = load i32, i32* @x.189
  %117 = load i32, i32* @y.190
  %118 = sub i32 %116, 1172325080
  %119 = sub i32 %118, 1
  %120 = add i32 %119, 1172325080
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = and i1 %124, %125
  %127 = xor i1 %124, %125
  %128 = or i1 %126, %127
  %129 = or i1 %124, %125
  br i1 %128, label %130, label %153

; <label>:130:                                    ; preds = %111
  br label %131

; <label>:131:                                    ; preds = %130, %92
  %132 = load i8*, i8** %6, align 8
  %133 = load i32, i32* %7, align 4
  %134 = insertvalue { i8*, i32 } undef, i8* %132, 0
  %135 = insertvalue { i8*, i32 } %134, i32 %133, 1
  resume { i8*, i32 } %135

; <label>:136:                                    ; preds = %43, %17
  call void @_ZNSaIN7MaxFlow4edgeEED2Ev(%"class.std::allocator.5"* %5) #3
  %137 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %138 = call %"struct.MaxFlow::edge"* @_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE5beginEv(%"class.std::vector.3"* %137) #3
  %139 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %138, %"struct.MaxFlow::edge"** %139, align 8
  %140 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %141 = call %"struct.MaxFlow::edge"* @_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE3endEv(%"class.std::vector.3"* %140) #3
  %142 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %141, %"struct.MaxFlow::edge"** %142, align 8
  %143 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %144 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %143, i32 0, i32 0
  %145 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %144, i32 0, i32 0
  %146 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %145, align 8
  %147 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %148 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %147) #3
  %149 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %150 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %149, align 8
  %151 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %152 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %151, align 8
  br label %43

; <label>:153:                                    ; preds = %111, %96
  %154 = landingpad { i8*, i32 }
          cleanup
  %155 = extractvalue { i8*, i32 } %154, 0
  store i8* %155, i8** %6, align 8
  %156 = extractvalue { i8*, i32 } %154, 1
  store i32 %156, i32* %7, align 4
  %157 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EED2Ev(%"struct.std::_Vector_base.4"* %157) #3
  br label %111
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE4sizeEv(%"class.std::vector.3"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %4 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %6, align 8
  %8 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %10, align 8
  %12 = ptrtoint %"struct.MaxFlow::edge"* %7 to i64
  %13 = ptrtoint %"struct.MaxFlow::edge"* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 16
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIN7MaxFlow4edgeEEE17_S_select_on_copyERKS3_(%"class.std::allocator.5"* noalias sret, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %3, align 8
  %4 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %3, align 8
  call void @_ZNSt16allocator_traitsISaIN7MaxFlow4edgeEEE37select_on_container_copy_constructionERKS2_(%"class.std::allocator.5"* sret %0, %"class.std::allocator.5"* dereferenceable(1) %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %2, align 8
  %3 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %4 to %"class.std::allocator.5"*
  ret %"class.std::allocator.5"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.MaxFlow::edge"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN7MaxFlow4edgeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E(%"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"struct.MaxFlow::edge"*, align 8
  %8 = alloca %"class.std::allocator.5"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %1, %"struct.MaxFlow::edge"** %12, align 8
  store %"struct.MaxFlow::edge"* %2, %"struct.MaxFlow::edge"** %7, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %8, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %7, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %19 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %18, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %21 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %20, align 8
  %22 = call %"struct.MaxFlow::edge"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN7MaxFlow4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.MaxFlow::edge"* %19, %"struct.MaxFlow::edge"* %21, %"struct.MaxFlow::edge"* %17)
  ret %"struct.MaxFlow::edge"* %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.MaxFlow::edge"* @_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE5beginEv(%"class.std::vector.3"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca %"struct.MaxFlow::edge"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %6 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %8, align 8
  store %"struct.MaxFlow::edge"* %9, %"struct.MaxFlow::edge"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator"* %2, %"struct.MaxFlow::edge"** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %11 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %10, align 8
  ret %"struct.MaxFlow::edge"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.MaxFlow::edge"* @_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE3endEv(%"class.std::vector.3"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca %"struct.MaxFlow::edge"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %6 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %8, align 8
  store %"struct.MaxFlow::edge"* %9, %"struct.MaxFlow::edge"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator"* %2, %"struct.MaxFlow::edge"** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %11 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %10, align 8
  ret %"struct.MaxFlow::edge"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN7MaxFlow4edgeEEE37select_on_container_copy_constructionERKS2_(%"class.std::allocator.5"* noalias sret, %"class.std::allocator.5"* dereferenceable(1)) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.203
  %6 = load i32, i32* @y.204
  %7 = sub i32 %5, 1515593631
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1515593631
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -89901741, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %60
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -89901741, label %19
    i32 1333096141, label %27
    i32 927728717, label %56
    i32 -857959010, label %57
  ]

; <label>:18:                                     ; preds = %16
  br label %60

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1333096141, i32 -857959010
  store i32 %26, i32* %15
  br label %60

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %28, align 8
  %29 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %28, align 8
  call void @_ZNSaIN7MaxFlow4edgeEEC2ERKS1_(%"class.std::allocator.5"* %0, %"class.std::allocator.5"* dereferenceable(1) %29) #3
  %30 = load i32, i32* @x.203
  %31 = load i32, i32* @y.204
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 927728717, i32 -857959010
  store i32 %55, i32* %15
  br label %60

; <label>:56:                                     ; preds = %16
  ret void

; <label>:57:                                     ; preds = %16
  %58 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %58, align 8
  %59 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %58, align 8
  call void @_ZNSaIN7MaxFlow4edgeEEC2ERKS1_(%"class.std::allocator.5"* %0, %"class.std::allocator.5"* dereferenceable(1) %59) #3
  store i32 1333096141, i32* %15
  br label %60

; <label>:60:                                     ; preds = %57, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN7MaxFlow4edgeEEC2ERKS1_(%"class.std::allocator.5"*, %"class.std::allocator.5"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.5"*, align 8
  %4 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %3, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %4, align 8
  %5 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %3, align 8
  %6 = bitcast %"class.std::allocator.5"* %5 to %"class.__gnu_cxx::new_allocator.6"*
  %7 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %4, align 8
  %8 = bitcast %"class.std::allocator.5"* %7 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorIN7MaxFlow4edgeEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.6"* %6, %"class.__gnu_cxx::new_allocator.6"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.MaxFlow::edge"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN7MaxFlow4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"*) #0 comdat {
  %4 = alloca %"struct.MaxFlow::edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.207
  %8 = load i32, i32* @y.208
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -2139629608, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %95
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -2139629608, label %20
    i32 1052723669, label %40
    i32 1874813435, label %74
    i32 -1547855790, label %76
  ]

; <label>:19:                                     ; preds = %17
  br label %95

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1052723669, i32 -1547855790
  store i32 %39, i32* %16
  br label %95

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %43 = alloca %"struct.MaxFlow::edge"*, align 8
  %44 = alloca i8, align 1
  %45 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %46 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %41, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %47, align 8
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %42, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %1, %"struct.MaxFlow::edge"** %48, align 8
  store %"struct.MaxFlow::edge"* %2, %"struct.MaxFlow::edge"** %43, align 8
  store i8 1, i8* %44, align 1
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator"* %45 to i8*
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator"* %46 to i8*
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %43, align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %45, i32 0, i32 0
  %55 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %54, align 8
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %46, i32 0, i32 0
  %57 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %56, align 8
  %58 = call %"struct.MaxFlow::edge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN7MaxFlow4edgeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_(%"struct.MaxFlow::edge"* %55, %"struct.MaxFlow::edge"* %57, %"struct.MaxFlow::edge"* %53)
  store %"struct.MaxFlow::edge"* %58, %"struct.MaxFlow::edge"** %4
  %59 = load i32, i32* @x.207
  %60 = load i32, i32* @y.208
  %61 = add i32 %59, 435368712
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, 435368712
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 1874813435, i32 -1547855790
  store i32 %73, i32* %16
  br label %95

; <label>:74:                                     ; preds = %17
  %75 = load volatile %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %4
  ret %"struct.MaxFlow::edge"* %75

; <label>:76:                                     ; preds = %17
  %77 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %78 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %79 = alloca %"struct.MaxFlow::edge"*, align 8
  %80 = alloca i8, align 1
  %81 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %82 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %83 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %77, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %83, align 8
  %84 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %78, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %1, %"struct.MaxFlow::edge"** %84, align 8
  store %"struct.MaxFlow::edge"* %2, %"struct.MaxFlow::edge"** %79, align 8
  store i8 1, i8* %80, align 1
  %85 = bitcast %"class.__gnu_cxx::__normal_iterator"* %81 to i8*
  %86 = bitcast %"class.__gnu_cxx::__normal_iterator"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 8, i32 8, i1 false)
  %87 = bitcast %"class.__gnu_cxx::__normal_iterator"* %82 to i8*
  %88 = bitcast %"class.__gnu_cxx::__normal_iterator"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* %88, i64 8, i32 8, i1 false)
  %89 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %79, align 8
  %90 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %81, i32 0, i32 0
  %91 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %90, align 8
  %92 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %82, i32 0, i32 0
  %93 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %92, align 8
  %94 = call %"struct.MaxFlow::edge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN7MaxFlow4edgeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_(%"struct.MaxFlow::edge"* %91, %"struct.MaxFlow::edge"* %93, %"struct.MaxFlow::edge"* %89)
  store i32 1052723669, i32* %16
  br label %95

; <label>:95:                                     ; preds = %76, %40, %20, %19
  br label %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #11

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.MaxFlow::edge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN7MaxFlow4edgeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_(%"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.209
  %5 = load i32, i32* @y.210
  %6 = add i32 %4, -554031049
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -554031049
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %176

; <label>:18:                                     ; preds = %3, %176
  %19 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %20 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %21 = alloca %"struct.MaxFlow::edge"*, align 8
  %22 = alloca %"struct.MaxFlow::edge"*, align 8
  %23 = alloca i8*
  %24 = alloca i32
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %19, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %25, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %20, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %1, %"struct.MaxFlow::edge"** %26, align 8
  store %"struct.MaxFlow::edge"* %2, %"struct.MaxFlow::edge"** %21, align 8
  %27 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %21, align 8
  store %"struct.MaxFlow::edge"* %27, %"struct.MaxFlow::edge"** %22, align 8
  %28 = load i32, i32* @x.209
  %29 = load i32, i32* @y.210
  %30 = sub i32 %28, 639132571
  %31 = sub i32 %30, 1
  %32 = add i32 %31, 639132571
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  br i1 %52, label %54, label %176

; <label>:54:                                     ; preds = %18
  br label %55

; <label>:55:                                     ; preds = %103, %54
  %56 = call zeroext i1 @_ZN9__gnu_cxxneIPKN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %19, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %20) #3
  br i1 %56, label %57, label %117

; <label>:57:                                     ; preds = %55
  %58 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %22, align 8
  %59 = call %"struct.MaxFlow::edge"* @_ZSt11__addressofIN7MaxFlow4edgeEEPT_RS2_(%"struct.MaxFlow::edge"* dereferenceable(16) %58) #3
  %60 = call dereferenceable(16) %"struct.MaxFlow::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPKN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %19) #3
  invoke void @_ZSt10_ConstructIN7MaxFlow4edgeEJRKS1_EEvPT_DpOT0_(%"struct.MaxFlow::edge"* %59, %"struct.MaxFlow::edge"* dereferenceable(16) %60)
          to label %61 unwind label %107

; <label>:61:                                     ; preds = %57
  %62 = load i32, i32* @x.209
  %63 = load i32, i32* @y.210
  %64 = sub i32 0, 1
  %65 = add i32 %62, %64
  %66 = sub i32 %62, 1
  %67 = mul i32 %62, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %63, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 true, true
  %74 = and i1 %71, true
  %75 = and i1 %69, %73
  %76 = and i1 %72, true
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 true, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  br i1 %85, label %87, label %186

; <label>:87:                                     ; preds = %61, %186
  %88 = load i32, i32* @x.209
  %89 = load i32, i32* @y.210
  %90 = add i32 %88, -447027673
  %91 = sub i32 %90, 1
  %92 = sub i32 %91, -447027673
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = and i1 %96, %97
  %99 = xor i1 %96, %97
  %100 = or i1 %98, %99
  %101 = or i1 %96, %97
  br i1 %100, label %102, label %186

; <label>:102:                                    ; preds = %87
  br label %103

; <label>:103:                                    ; preds = %102
  %104 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPKN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %19) #3
  %105 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %22, align 8
  %106 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %105, i32 1
  store %"struct.MaxFlow::edge"* %106, %"struct.MaxFlow::edge"** %22, align 8
  br label %55

; <label>:107:                                    ; preds = %57
  %108 = landingpad { i8*, i32 }
          catch i8* null
  %109 = extractvalue { i8*, i32 } %108, 0
  store i8* %109, i8** %23, align 8
  %110 = extractvalue { i8*, i32 } %108, 1
  store i32 %110, i32* %24, align 4
  br label %111

; <label>:111:                                    ; preds = %107
  %112 = load i8*, i8** %23, align 8
  %113 = call i8* @__cxa_begin_catch(i8* %112) #3
  %114 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %21, align 8
  %115 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %22, align 8
  invoke void @_ZSt8_DestroyIPN7MaxFlow4edgeEEvT_S3_(%"struct.MaxFlow::edge"* %114, %"struct.MaxFlow::edge"* %115)
          to label %116 unwind label %119

; <label>:116:                                    ; preds = %111
  invoke void @__cxa_rethrow() #12
          to label %175 unwind label %119

; <label>:117:                                    ; preds = %55
  %118 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %22, align 8
  ret %"struct.MaxFlow::edge"* %118

; <label>:119:                                    ; preds = %116, %111
  %120 = landingpad { i8*, i32 }
          cleanup
  %121 = extractvalue { i8*, i32 } %120, 0
  store i8* %121, i8** %23, align 8
  %122 = extractvalue { i8*, i32 } %120, 1
  store i32 %122, i32* %24, align 4
  invoke void @__cxa_end_catch()
          to label %123 unwind label %130

; <label>:123:                                    ; preds = %119
  br label %125
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:125:                                    ; preds = %123
  %126 = load i8*, i8** %23, align 8
  %127 = load i32, i32* %24, align 4
  %128 = insertvalue { i8*, i32 } undef, i8* %126, 0
  %129 = insertvalue { i8*, i32 } %128, i32 %127, 1
  resume { i8*, i32 } %129

; <label>:130:                                    ; preds = %119
  %131 = load i32, i32* @x.209
  %132 = load i32, i32* @y.210
  %133 = sub i32 %131, 1844774470
  %134 = sub i32 %133, 1
  %135 = add i32 %134, 1844774470
  %136 = sub i32 %131, 1
  %137 = mul i32 %131, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %132, 10
  %141 = xor i1 %139, true
  %142 = xor i1 %140, true
  %143 = xor i1 true, true
  %144 = and i1 %141, true
  %145 = and i1 %139, %143
  %146 = and i1 %142, true
  %147 = and i1 %140, %143
  %148 = or i1 %144, %145
  %149 = or i1 %146, %147
  %150 = xor i1 %148, %149
  %151 = or i1 %141, %142
  %152 = xor i1 %151, true
  %153 = or i1 true, %143
  %154 = and i1 %152, %153
  %155 = or i1 %150, %154
  %156 = or i1 %139, %140
  br i1 %155, label %157, label %187

; <label>:157:                                    ; preds = %130, %187
  %158 = landingpad { i8*, i32 }
          catch i8* null
  %159 = extractvalue { i8*, i32 } %158, 0
  call void @__clang_call_terminate(i8* %159) #10
  %160 = load i32, i32* @x.209
  %161 = load i32, i32* @y.210
  %162 = add i32 %160, -80022099
  %163 = sub i32 %162, 1
  %164 = sub i32 %163, -80022099
  %165 = sub i32 %160, 1
  %166 = mul i32 %160, %164
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %161, 10
  %170 = and i1 %168, %169
  %171 = xor i1 %168, %169
  %172 = or i1 %170, %171
  %173 = or i1 %168, %169
  br i1 %172, label %174, label %187

; <label>:174:                                    ; preds = %157
  unreachable

; <label>:175:                                    ; preds = %116
  unreachable

; <label>:176:                                    ; preds = %18, %3
  %177 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %178 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %179 = alloca %"struct.MaxFlow::edge"*, align 8
  %180 = alloca %"struct.MaxFlow::edge"*, align 8
  %181 = alloca i8*
  %182 = alloca i32
  %183 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %177, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %183, align 8
  %184 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %178, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %1, %"struct.MaxFlow::edge"** %184, align 8
  store %"struct.MaxFlow::edge"* %2, %"struct.MaxFlow::edge"** %179, align 8
  %185 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %179, align 8
  store %"struct.MaxFlow::edge"* %185, %"struct.MaxFlow::edge"** %180, align 8
  br label %18

; <label>:186:                                    ; preds = %87, %61
  br label %87

; <label>:187:                                    ; preds = %157, %130
  %188 = landingpad { i8*, i32 }
          catch i8* null
  %189 = extractvalue { i8*, i32 } %188, 0
  call void @__clang_call_terminate(i8* %189) #10
  br label %157
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPKN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #4 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) %"struct.MaxFlow::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %7 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) %"struct.MaxFlow::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8) #3
  %10 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %9, align 8
  %11 = icmp ne %"struct.MaxFlow::edge"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructIN7MaxFlow4edgeEJRKS1_EEvPT_DpOT0_(%"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"* dereferenceable(16)) #4 comdat {
  %3 = alloca %"struct.MaxFlow::edge"*, align 8
  %4 = alloca %"struct.MaxFlow::edge"*, align 8
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %3, align 8
  store %"struct.MaxFlow::edge"* %1, %"struct.MaxFlow::edge"** %4, align 8
  %5 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %3, align 8
  %6 = bitcast %"struct.MaxFlow::edge"* %5 to i8*
  %7 = bitcast i8* %6 to %"struct.MaxFlow::edge"*
  %8 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %4, align 8
  %9 = call dereferenceable(16) %"struct.MaxFlow::edge"* @_ZSt7forwardIRKN7MaxFlow4edgeEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.MaxFlow::edge"* dereferenceable(16) %8) #3
  %10 = bitcast %"struct.MaxFlow::edge"* %7 to i8*
  %11 = bitcast %"struct.MaxFlow::edge"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 16, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.MaxFlow::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPKN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.MaxFlow::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.215
  %6 = load i32, i32* @y.216
  %7 = sub i32 %5, -1124445925
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1124445925
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1493373800, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1493373800, label %19
    i32 -1044546324, label %27
    i32 1822781116, label %59
    i32 -1215289008, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1044546324, i32 -1215289008
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %29, i32 0, i32 0
  %31 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %30, align 8
  store %"struct.MaxFlow::edge"* %31, %"struct.MaxFlow::edge"** %2
  %32 = load i32, i32* @x.215
  %33 = load i32, i32* @y.216
  %34 = add i32 %32, -1807467254
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -1807467254
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 1822781116, i32 -1215289008
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %2
  ret %"struct.MaxFlow::edge"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %62, align 8
  %63 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %62, align 8
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %63, i32 0, i32 0
  %65 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %64, align 8
  store i32 -1044546324, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPKN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.217
  %6 = load i32, i32* @y.218
  %7 = add i32 %5, -1747352968
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1747352968
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1870859279, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %57
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1870859279, label %19
    i32 2036649145, label %27
    i32 -139068176, label %49
    i32 -223687466, label %51
  ]

; <label>:18:                                     ; preds = %16
  br label %57

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 2036649145, i32 -223687466
  store i32 %26, i32* %15
  br label %57

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %29, %"class.__gnu_cxx::__normal_iterator"** %2
  %30 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %30, i32 0, i32 0
  %32 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %31, align 8
  %33 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %32, i32 1
  store %"struct.MaxFlow::edge"* %33, %"struct.MaxFlow::edge"** %31, align 8
  %34 = load i32, i32* @x.217
  %35 = load i32, i32* @y.218
  %36 = sub i32 %34, -299061791
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -299061791
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -139068176, i32 -223687466
  store i32 %48, i32* %15
  br label %57

; <label>:49:                                     ; preds = %16
  %50 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2
  ret %"class.__gnu_cxx::__normal_iterator"* %50

; <label>:51:                                     ; preds = %16
  %52 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %52, align 8
  %53 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %52, align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %53, i32 0, i32 0
  %55 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %54, align 8
  %56 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %55, i32 1
  store %"struct.MaxFlow::edge"* %56, %"struct.MaxFlow::edge"** %54, align 8
  store i32 2036649145, i32* %15
  br label %57

; <label>:57:                                     ; preds = %51, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.MaxFlow::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret %"struct.MaxFlow::edge"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.MaxFlow::edge"* @_ZSt7forwardIRKN7MaxFlow4edgeEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.MaxFlow::edge"* dereferenceable(16)) #4 comdat {
  %2 = alloca %"struct.MaxFlow::edge"*, align 8
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %2, align 8
  %3 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %2, align 8
  ret %"struct.MaxFlow::edge"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator"*, %"struct.MaxFlow::edge"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.223
  %6 = load i32, i32* @y.224
  %7 = add i32 %5, 529671791
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 529671791
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -921271803, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -921271803, label %19
    i32 895766368, label %39
    i32 -68626092, label %61
    i32 -1731059010, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 895766368, i32 -1731059010
  store i32 %38, i32* %15
  br label %69

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %41 = alloca %"struct.MaxFlow::edge"**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %40, align 8
  store %"struct.MaxFlow::edge"** %1, %"struct.MaxFlow::edge"*** %41, align 8
  %42 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %40, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %42, i32 0, i32 0
  %44 = load %"struct.MaxFlow::edge"**, %"struct.MaxFlow::edge"*** %41, align 8
  %45 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %44, align 8
  store %"struct.MaxFlow::edge"* %45, %"struct.MaxFlow::edge"** %43, align 8
  %46 = load i32, i32* @x.223
  %47 = load i32, i32* @y.224
  %48 = add i32 %46, -1588154302
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -1588154302
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -68626092, i32 -1731059010
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %64 = alloca %"struct.MaxFlow::edge"**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %63, align 8
  store %"struct.MaxFlow::edge"** %1, %"struct.MaxFlow::edge"*** %64, align 8
  %65 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %63, align 8
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %65, i32 0, i32 0
  %67 = load %"struct.MaxFlow::edge"**, %"struct.MaxFlow::edge"*** %64, align 8
  %68 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %67, align 8
  store %"struct.MaxFlow::edge"* %68, %"struct.MaxFlow::edge"** %66, align 8
  store i32 895766368, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EE14_M_move_assignEOS5_St17integral_constantIbLb1EE(%"class.std::vector"*, %"class.std::vector"* dereferenceable(24)) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca %"class.std::vector", align 8
  %7 = alloca %"class.std::allocator.0", align 1
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %5, align 8
  %10 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %11 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  call void @_ZNKSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE13get_allocatorEv(%"class.std::allocator.0"* sret %7, %"struct.std::_Vector_base"* %11) #3
  call void @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EEC2ERKS4_(%"class.std::vector"* %6, %"class.std::allocator.0"* dereferenceable(1) %7) #3
  call void @_ZNSaISt6vectorIN7MaxFlow4edgeESaIS1_EEED2Ev(%"class.std::allocator.0"* %7) #3
  %12 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %12, i32 0, i32 0
  %14 = bitcast %"class.std::vector"* %6 to %"struct.std::_Vector_base"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %14, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE12_Vector_impl12_M_swap_dataERS7_(%"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %13, %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* dereferenceable(24) %15) #3
  %16 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %16, i32 0, i32 0
  %18 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %19 = bitcast %"class.std::vector"* %18 to %"struct.std::_Vector_base"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %19, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE12_Vector_impl12_M_swap_dataERS7_(%"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %17, %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* dereferenceable(24) %20) #3
  %21 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %22 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %21) #3
  %23 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %24 = bitcast %"class.std::vector"* %23 to %"struct.std::_Vector_base"*
  %25 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %24) #3
  invoke void @_ZSt15__alloc_on_moveISaISt6vectorIN7MaxFlow4edgeESaIS2_EEEEvRT_S7_(%"class.std::allocator.0"* dereferenceable(1) %22, %"class.std::allocator.0"* dereferenceable(1) %25)
          to label %26 unwind label %27

; <label>:26:                                     ; preds = %2
  call void @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EED2Ev(%"class.std::vector"* %6) #3
  ret void

; <label>:27:                                     ; preds = %2
  %28 = landingpad { i8*, i32 }
          catch i8* null
  %29 = extractvalue { i8*, i32 } %28, 0
  store i8* %29, i8** %8, align 8
  %30 = extractvalue { i8*, i32 } %28, 1
  store i32 %30, i32* %9, align 4
  call void @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EED2Ev(%"class.std::vector"* %6) #3
  br label %31

; <label>:31:                                     ; preds = %27
  %32 = load i8*, i8** %8, align 8
  call void @__clang_call_terminate(i8* %32) #10
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector"* @_ZSt4moveIRSt6vectorIS0_IN7MaxFlow4edgeESaIS2_EESaIS4_EEEONSt16remove_referenceIT_E4typeEOS9_(%"class.std::vector"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  ret %"class.std::vector"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE13get_allocatorEv(%"class.std::allocator.0"* noalias sret, %"struct.std::_Vector_base"*) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.229
  %6 = load i32, i32* @y.230
  %7 = add i32 %5, 244425150
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 244425150
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 359318990, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 359318990, label %19
    i32 -121503122, label %27
    i32 1630135609, label %58
    i32 1907282825, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -121503122, i32 1907282825
  store i32 %26, i32* %15
  br label %63

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %1, %"struct.std::_Vector_base"** %28, align 8
  %29 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %28, align 8
  %30 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %29) #3
  call void @_ZNSaISt6vectorIN7MaxFlow4edgeESaIS1_EEEC2ERKS4_(%"class.std::allocator.0"* %0, %"class.std::allocator.0"* dereferenceable(1) %30) #3
  %31 = load i32, i32* @x.229
  %32 = load i32, i32* @y.230
  %33 = add i32 %31, -423435496
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -423435496
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 1630135609, i32 1907282825
  store i32 %57, i32* %15
  br label %63

; <label>:58:                                     ; preds = %16
  ret void

; <label>:59:                                     ; preds = %16
  %60 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %1, %"struct.std::_Vector_base"** %60, align 8
  %61 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %60, align 8
  %62 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %61) #3
  call void @_ZNSaISt6vectorIN7MaxFlow4edgeESaIS1_EEEC2ERKS4_(%"class.std::allocator.0"* %0, %"class.std::allocator.0"* dereferenceable(1) %62) #3
  store i32 -121503122, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EEC2ERKS4_(%"class.std::vector"*, %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %4, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EEC2ERKS5_(%"struct.std::_Vector_base"* %6, %"class.std::allocator.0"* dereferenceable(1) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE12_Vector_impl12_M_swap_dataERS7_(%"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* dereferenceable(24)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %1, %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPSt6vectorIN7MaxFlow4edgeESaIS2_EEEvRT_S7_(%"class.std::vector.3"** dereferenceable(8) %6, %"class.std::vector.3"** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPSt6vectorIN7MaxFlow4edgeESaIS2_EEEvRT_S7_(%"class.std::vector.3"** dereferenceable(8) %9, %"class.std::vector.3"** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPSt6vectorIN7MaxFlow4edgeESaIS2_EEEvRT_S7_(%"class.std::vector.3"** dereferenceable(8) %12, %"class.std::vector.3"** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt15__alloc_on_moveISaISt6vectorIN7MaxFlow4edgeESaIS2_EEEEvRT_S7_(%"class.std::allocator.0"* dereferenceable(1), %"class.std::allocator.0"* dereferenceable(1)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.235
  %6 = load i32, i32* @y.236
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 271129451, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 271129451, label %18
    i32 -34804911, label %38
    i32 -2023586227, label %58
    i32 -899746798, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -34804911, i32 -899746798
  store i32 %37, i32* %14
  br label %65

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.0"*, align 8
  %40 = alloca %"class.std::allocator.0"*, align 8
  %41 = alloca %"struct.std::integral_constant", align 1
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %39, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %40, align 8
  %42 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %39, align 8
  %43 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %40, align 8
  call void @_ZSt18__do_alloc_on_moveISaISt6vectorIN7MaxFlow4edgeESaIS2_EEEEvRT_S7_St17integral_constantIbLb1EE(%"class.std::allocator.0"* dereferenceable(1) %42, %"class.std::allocator.0"* dereferenceable(1) %43)
  %44 = load i32, i32* @x.235
  %45 = load i32, i32* @y.236
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -2023586227, i32 -899746798
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  ret void

; <label>:59:                                     ; preds = %15
  %60 = alloca %"class.std::allocator.0"*, align 8
  %61 = alloca %"class.std::allocator.0"*, align 8
  %62 = alloca %"struct.std::integral_constant", align 1
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %60, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %61, align 8
  %63 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %60, align 8
  %64 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %61, align 8
  call void @_ZSt18__do_alloc_on_moveISaISt6vectorIN7MaxFlow4edgeESaIS2_EEEEvRT_S7_St17integral_constantIbLb1EE(%"class.std::allocator.0"* dereferenceable(1) %63, %"class.std::allocator.0"* dereferenceable(1) %64)
  store i32 -34804911, i32* %14
  br label %65

; <label>:65:                                     ; preds = %59, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %4 to %"class.std::allocator.0"*
  ret %"class.std::allocator.0"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIN7MaxFlow4edgeESaIS1_EEEC2ERKS4_(%"class.std::allocator.0"*, %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.0"*, align 8
  %4 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %3, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %4, align 8
  %5 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %3, align 8
  %6 = bitcast %"class.std::allocator.0"* %5 to %"class.__gnu_cxx::new_allocator.1"*
  %7 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %4, align 8
  %8 = bitcast %"class.std::allocator.0"* %7 to %"class.__gnu_cxx::new_allocator.1"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN7MaxFlow4edgeESaIS3_EEEC2ERKS6_(%"class.__gnu_cxx::new_allocator.1"* %6, %"class.__gnu_cxx::new_allocator.1"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EEC2ERKS5_(%"struct.std::_Vector_base"*, %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base"*, align 8
  %4 = alloca %"class.std::allocator.0"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %4, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %4, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIN7MaxFlow4edgeESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_(%"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %6, %"class.std::allocator.0"* dereferenceable(1) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPSt6vectorIN7MaxFlow4edgeESaIS2_EEEvRT_S7_(%"class.std::vector.3"** dereferenceable(8), %"class.std::vector.3"** dereferenceable(8)) #4 comdat {
  %3 = alloca %"class.std::vector.3"**, align 8
  %4 = alloca %"class.std::vector.3"**, align 8
  %5 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"** %0, %"class.std::vector.3"*** %3, align 8
  store %"class.std::vector.3"** %1, %"class.std::vector.3"*** %4, align 8
  %6 = load %"class.std::vector.3"**, %"class.std::vector.3"*** %3, align 8
  %7 = call dereferenceable(8) %"class.std::vector.3"** @_ZSt4moveIRPSt6vectorIN7MaxFlow4edgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.3"** dereferenceable(8) %6) #3
  %8 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  store %"class.std::vector.3"* %8, %"class.std::vector.3"** %5, align 8
  %9 = load %"class.std::vector.3"**, %"class.std::vector.3"*** %4, align 8
  %10 = call dereferenceable(8) %"class.std::vector.3"** @_ZSt4moveIRPSt6vectorIN7MaxFlow4edgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.3"** dereferenceable(8) %9) #3
  %11 = load %"class.std::vector.3"*, %"class.std::vector.3"** %10, align 8
  %12 = load %"class.std::vector.3"**, %"class.std::vector.3"*** %3, align 8
  store %"class.std::vector.3"* %11, %"class.std::vector.3"** %12, align 8
  %13 = call dereferenceable(8) %"class.std::vector.3"** @_ZSt4moveIRPSt6vectorIN7MaxFlow4edgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.3"** dereferenceable(8) %5) #3
  %14 = load %"class.std::vector.3"*, %"class.std::vector.3"** %13, align 8
  %15 = load %"class.std::vector.3"**, %"class.std::vector.3"*** %4, align 8
  store %"class.std::vector.3"* %14, %"class.std::vector.3"** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.3"** @_ZSt4moveIRPSt6vectorIN7MaxFlow4edgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.3"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"class.std::vector.3"**, align 8
  store %"class.std::vector.3"** %0, %"class.std::vector.3"*** %2, align 8
  %3 = load %"class.std::vector.3"**, %"class.std::vector.3"*** %2, align 8
  ret %"class.std::vector.3"** %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt18__do_alloc_on_moveISaISt6vectorIN7MaxFlow4edgeESaIS2_EEEEvRT_S7_St17integral_constantIbLb1EE(%"class.std::allocator.0"* dereferenceable(1), %"class.std::allocator.0"* dereferenceable(1)) #4 comdat {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"class.std::allocator.0"*, align 8
  %5 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %4, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %5, align 8
  %6 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %5, align 8
  %7 = call dereferenceable(1) %"class.std::allocator.0"* @_ZSt4moveIRSaISt6vectorIN7MaxFlow4edgeESaIS2_EEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::allocator.0"* dereferenceable(1) %6) #3
  %8 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.0"* @_ZSt4moveIRSaISt6vectorIN7MaxFlow4edgeESaIS2_EEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::allocator.0"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %2, align 8
  %3 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %2, align 8
  ret %"class.std::allocator.0"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> >, std::allocator<std::vector<MaxFlow::edge, std::allocator<MaxFlow::edge> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.3"*, %"class.std::vector.3"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %9, i64 %10
  ret %"class.std::vector.3"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EE12emplace_backIJRiRxxEEEvDpOT_(%"class.std::vector.3"*, i32* dereferenceable(4), i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %5 = alloca %"struct.MaxFlow::edge"*
  %6 = alloca %"struct.MaxFlow::edge"*
  %7 = alloca %"class.std::vector.3"*
  %8 = alloca %"class.std::vector.3"*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i64*, align 8
  %11 = alloca i64*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %8, align 8
  store i32* %1, i32** %9, align 8
  store i64* %2, i64** %10, align 8
  store i64* %3, i64** %11, align 8
  %12 = load %"class.std::vector.3"*, %"class.std::vector.3"** %8, align 8
  store %"class.std::vector.3"* %12, %"class.std::vector.3"** %7
  %13 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %14 = bitcast %"class.std::vector.3"* %13 to %"struct.std::_Vector_base.4"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %15, i32 0, i32 1
  %17 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %16, align 8
  store %"struct.MaxFlow::edge"* %17, %"struct.MaxFlow::edge"** %6
  %18 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %19 = bitcast %"class.std::vector.3"* %18 to %"struct.std::_Vector_base.4"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %20, i32 0, i32 2
  %22 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %21, align 8
  store %"struct.MaxFlow::edge"* %22, %"struct.MaxFlow::edge"** %5
  %23 = alloca i32
  store i32 2093836519, i32* %23
  br label %24

; <label>:24:                                     ; preds = %4, %108
  %25 = load i32, i32* %23
  switch i32 %25, label %26 [
    i32 2093836519, label %27
    i32 176040947, label %32
    i32 1111911511, label %54
    i32 -173678897, label %62
    i32 1272983112, label %78
    i32 1904581951, label %106
    i32 -1774274034, label %107
  ]

; <label>:26:                                     ; preds = %24
  br label %108

; <label>:27:                                     ; preds = %24
  %28 = load volatile %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %6
  %29 = load volatile %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %5
  %30 = icmp ne %"struct.MaxFlow::edge"* %28, %29
  %31 = select i1 %30, i32 176040947, i32 1111911511
  store i32 %31, i32* %23
  br label %108

; <label>:32:                                     ; preds = %24
  %33 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %34 = bitcast %"class.std::vector.3"* %33 to %"struct.std::_Vector_base.4"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %34, i32 0, i32 0
  %36 = bitcast %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %35 to %"class.std::allocator.5"*
  %37 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %38 = bitcast %"class.std::vector.3"* %37 to %"struct.std::_Vector_base.4"*
  %39 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %38, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %39, i32 0, i32 1
  %41 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %40, align 8
  %42 = load i32*, i32** %9, align 8
  %43 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %42) #3
  %44 = load i64*, i64** %10, align 8
  %45 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %44) #3
  %46 = load i64*, i64** %11, align 8
  %47 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %46) #3
  call void @_ZNSt16allocator_traitsISaIN7MaxFlow4edgeEEE9constructIS1_JRiRxxEEEvRS2_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1) %36, %"struct.MaxFlow::edge"* %41, i32* dereferenceable(4) %43, i64* dereferenceable(8) %45, i64* dereferenceable(8) %47)
  %48 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %49 = bitcast %"class.std::vector.3"* %48 to %"struct.std::_Vector_base.4"*
  %50 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %49, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %50, i32 0, i32 1
  %52 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %51, align 8
  %53 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %52, i32 1
  store %"struct.MaxFlow::edge"* %53, %"struct.MaxFlow::edge"** %51, align 8
  store i32 -173678897, i32* %23
  br label %108

; <label>:54:                                     ; preds = %24
  %55 = load i32*, i32** %9, align 8
  %56 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %55) #3
  %57 = load i64*, i64** %10, align 8
  %58 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %57) #3
  %59 = load i64*, i64** %11, align 8
  %60 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %59) #3
  %61 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  call void @_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EE19_M_emplace_back_auxIJRiRxxEEEvDpOT_(%"class.std::vector.3"* %61, i32* dereferenceable(4) %56, i64* dereferenceable(8) %58, i64* dereferenceable(8) %60)
  store i32 -173678897, i32* %23
  br label %108

; <label>:62:                                     ; preds = %24
  %63 = load i32, i32* @x.253
  %64 = load i32, i32* @y.254
  %65 = add i32 %63, 1122928132
  %66 = sub i32 %65, 1
  %67 = sub i32 %66, 1122928132
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = and i1 %71, %72
  %74 = xor i1 %71, %72
  %75 = or i1 %73, %74
  %76 = or i1 %71, %72
  %77 = select i1 %75, i32 1272983112, i32 -1774274034
  store i32 %77, i32* %23
  br label %108

; <label>:78:                                     ; preds = %24
  %79 = load i32, i32* @x.253
  %80 = load i32, i32* @y.254
  %81 = sub i32 %79, -1663944994
  %82 = sub i32 %81, 1
  %83 = add i32 %82, -1663944994
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = xor i1 %87, true
  %90 = xor i1 %88, true
  %91 = xor i1 true, true
  %92 = and i1 %89, true
  %93 = and i1 %87, %91
  %94 = and i1 %90, true
  %95 = and i1 %88, %91
  %96 = or i1 %92, %93
  %97 = or i1 %94, %95
  %98 = xor i1 %96, %97
  %99 = or i1 %89, %90
  %100 = xor i1 %99, true
  %101 = or i1 true, %91
  %102 = and i1 %100, %101
  %103 = or i1 %98, %102
  %104 = or i1 %87, %88
  %105 = select i1 %103, i32 1904581951, i32 -1774274034
  store i32 %105, i32* %23
  br label %108

; <label>:106:                                    ; preds = %24
  ret void

; <label>:107:                                    ; preds = %24
  store i32 1272983112, i32* %23
  br label %108

; <label>:108:                                    ; preds = %107, %78, %62, %54, %32, %27, %26
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EE12emplace_backIJRiRKxxEEEvDpOT_(%"class.std::vector.3"*, i32* dereferenceable(4), i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %5 = alloca %"struct.MaxFlow::edge"*
  %6 = alloca %"struct.MaxFlow::edge"*
  %7 = alloca %"class.std::vector.3"*
  %8 = alloca %"class.std::vector.3"*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i64*, align 8
  %11 = alloca i64*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %8, align 8
  store i32* %1, i32** %9, align 8
  store i64* %2, i64** %10, align 8
  store i64* %3, i64** %11, align 8
  %12 = load %"class.std::vector.3"*, %"class.std::vector.3"** %8, align 8
  store %"class.std::vector.3"* %12, %"class.std::vector.3"** %7
  %13 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %14 = bitcast %"class.std::vector.3"* %13 to %"struct.std::_Vector_base.4"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %15, i32 0, i32 1
  %17 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %16, align 8
  store %"struct.MaxFlow::edge"* %17, %"struct.MaxFlow::edge"** %6
  %18 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %19 = bitcast %"class.std::vector.3"* %18 to %"struct.std::_Vector_base.4"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %20, i32 0, i32 2
  %22 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %21, align 8
  store %"struct.MaxFlow::edge"* %22, %"struct.MaxFlow::edge"** %5
  %23 = alloca i32
  store i32 2019105978, i32* %23
  br label %24

; <label>:24:                                     ; preds = %4, %167
  %25 = load i32, i32* %23
  switch i32 %25, label %26 [
    i32 2019105978, label %27
    i32 557205805, label %32
    i32 142271295, label %47
    i32 -680863666, label %96
    i32 186425097, label %97
    i32 2112531797, label %113
    i32 127138038, label %135
    i32 603449200, label %136
    i32 -444422625, label %137
    i32 -783844329, label %159
  ]

; <label>:26:                                     ; preds = %24
  br label %167

; <label>:27:                                     ; preds = %24
  %28 = load volatile %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %6
  %29 = load volatile %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %5
  %30 = icmp ne %"struct.MaxFlow::edge"* %28, %29
  %31 = select i1 %30, i32 557205805, i32 186425097
  store i32 %31, i32* %23
  br label %167

; <label>:32:                                     ; preds = %24
  %33 = load i32, i32* @x.255
  %34 = load i32, i32* @y.256
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 142271295, i32 -444422625
  store i32 %46, i32* %23
  br label %167

; <label>:47:                                     ; preds = %24
  %48 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %49 = bitcast %"class.std::vector.3"* %48 to %"struct.std::_Vector_base.4"*
  %50 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %49, i32 0, i32 0
  %51 = bitcast %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %50 to %"class.std::allocator.5"*
  %52 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %53 = bitcast %"class.std::vector.3"* %52 to %"struct.std::_Vector_base.4"*
  %54 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %54, i32 0, i32 1
  %56 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %55, align 8
  %57 = load i32*, i32** %9, align 8
  %58 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %57) #3
  %59 = load i64*, i64** %10, align 8
  %60 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %59) #3
  %61 = load i64*, i64** %11, align 8
  %62 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %61) #3
  call void @_ZNSt16allocator_traitsISaIN7MaxFlow4edgeEEE9constructIS1_JRiRKxxEEEvRS2_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1) %51, %"struct.MaxFlow::edge"* %56, i32* dereferenceable(4) %58, i64* dereferenceable(8) %60, i64* dereferenceable(8) %62)
  %63 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %64 = bitcast %"class.std::vector.3"* %63 to %"struct.std::_Vector_base.4"*
  %65 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %64, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %65, i32 0, i32 1
  %67 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %66, align 8
  %68 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %67, i32 1
  store %"struct.MaxFlow::edge"* %68, %"struct.MaxFlow::edge"** %66, align 8
  %69 = load i32, i32* @x.255
  %70 = load i32, i32* @y.256
  %71 = sub i32 %69, 1013680223
  %72 = sub i32 %71, 1
  %73 = add i32 %72, 1013680223
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = xor i1 %77, true
  %80 = xor i1 %78, true
  %81 = xor i1 false, true
  %82 = and i1 %79, false
  %83 = and i1 %77, %81
  %84 = and i1 %80, false
  %85 = and i1 %78, %81
  %86 = or i1 %82, %83
  %87 = or i1 %84, %85
  %88 = xor i1 %86, %87
  %89 = or i1 %79, %80
  %90 = xor i1 %89, true
  %91 = or i1 false, %81
  %92 = and i1 %90, %91
  %93 = or i1 %88, %92
  %94 = or i1 %77, %78
  %95 = select i1 %93, i32 -680863666, i32 -444422625
  store i32 %95, i32* %23
  br label %167

; <label>:96:                                     ; preds = %24
  store i32 603449200, i32* %23
  br label %167

; <label>:97:                                     ; preds = %24
  %98 = load i32, i32* @x.255
  %99 = load i32, i32* @y.256
  %100 = sub i32 %98, -2003656618
  %101 = sub i32 %100, 1
  %102 = add i32 %101, -2003656618
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = and i1 %106, %107
  %109 = xor i1 %106, %107
  %110 = or i1 %108, %109
  %111 = or i1 %106, %107
  %112 = select i1 %110, i32 2112531797, i32 -783844329
  store i32 %112, i32* %23
  br label %167

; <label>:113:                                    ; preds = %24
  %114 = load i32*, i32** %9, align 8
  %115 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %114) #3
  %116 = load i64*, i64** %10, align 8
  %117 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %116) #3
  %118 = load i64*, i64** %11, align 8
  %119 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %118) #3
  %120 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  call void @_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EE19_M_emplace_back_auxIJRiRKxxEEEvDpOT_(%"class.std::vector.3"* %120, i32* dereferenceable(4) %115, i64* dereferenceable(8) %117, i64* dereferenceable(8) %119)
  %121 = load i32, i32* @x.255
  %122 = load i32, i32* @y.256
  %123 = sub i32 0, 1
  %124 = add i32 %121, %123
  %125 = sub i32 %121, 1
  %126 = mul i32 %121, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %122, 10
  %130 = and i1 %128, %129
  %131 = xor i1 %128, %129
  %132 = or i1 %130, %131
  %133 = or i1 %128, %129
  %134 = select i1 %132, i32 127138038, i32 -783844329
  store i32 %134, i32* %23
  br label %167

; <label>:135:                                    ; preds = %24
  store i32 603449200, i32* %23
  br label %167

; <label>:136:                                    ; preds = %24
  ret void

; <label>:137:                                    ; preds = %24
  %138 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %139 = bitcast %"class.std::vector.3"* %138 to %"struct.std::_Vector_base.4"*
  %140 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %139, i32 0, i32 0
  %141 = bitcast %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %140 to %"class.std::allocator.5"*
  %142 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %143 = bitcast %"class.std::vector.3"* %142 to %"struct.std::_Vector_base.4"*
  %144 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %143, i32 0, i32 0
  %145 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %144, i32 0, i32 1
  %146 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %145, align 8
  %147 = load i32*, i32** %9, align 8
  %148 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %147) #3
  %149 = load i64*, i64** %10, align 8
  %150 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %149) #3
  %151 = load i64*, i64** %11, align 8
  %152 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %151) #3
  call void @_ZNSt16allocator_traitsISaIN7MaxFlow4edgeEEE9constructIS1_JRiRKxxEEEvRS2_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1) %141, %"struct.MaxFlow::edge"* %146, i32* dereferenceable(4) %148, i64* dereferenceable(8) %150, i64* dereferenceable(8) %152)
  %153 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %154 = bitcast %"class.std::vector.3"* %153 to %"struct.std::_Vector_base.4"*
  %155 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %154, i32 0, i32 0
  %156 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %155, i32 0, i32 1
  %157 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %156, align 8
  %158 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %157, i32 1
  store %"struct.MaxFlow::edge"* %158, %"struct.MaxFlow::edge"** %156, align 8
  store i32 142271295, i32* %23
  br label %167

; <label>:159:                                    ; preds = %24
  %160 = load i32*, i32** %9, align 8
  %161 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %160) #3
  %162 = load i64*, i64** %10, align 8
  %163 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %162) #3
  %164 = load i64*, i64** %11, align 8
  %165 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %164) #3
  %166 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  call void @_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EE19_M_emplace_back_auxIJRiRKxxEEEvDpOT_(%"class.std::vector.3"* %166, i32* dereferenceable(4) %161, i64* dereferenceable(8) %163, i64* dereferenceable(8) %165)
  store i32 2112531797, i32* %23
  br label %167

; <label>:167:                                    ; preds = %159, %137, %135, %113, %97, %96, %47, %32, %27, %26
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN7MaxFlow4edgeEEE9constructIS1_JRiRxxEEEvRS2_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1), %"struct.MaxFlow::edge"*, i32* dereferenceable(4), i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %6 = alloca %"class.std::allocator.5"*, align 8
  %7 = alloca %"struct.MaxFlow::edge"*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i64*, align 8
  %10 = alloca i64*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %6, align 8
  store %"struct.MaxFlow::edge"* %1, %"struct.MaxFlow::edge"** %7, align 8
  store i32* %2, i32** %8, align 8
  store i64* %3, i64** %9, align 8
  store i64* %4, i64** %10, align 8
  %11 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %6, align 8
  %12 = bitcast %"class.std::allocator.5"* %11 to %"class.__gnu_cxx::new_allocator.6"*
  %13 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %7, align 8
  %14 = load i32*, i32** %8, align 8
  %15 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %14) #3
  %16 = load i64*, i64** %9, align 8
  %17 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %16) #3
  %18 = load i64*, i64** %10, align 8
  %19 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %18) #3
  call void @_ZN9__gnu_cxx13new_allocatorIN7MaxFlow4edgeEE9constructIS2_JRiRxxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"* %12, %"struct.MaxFlow::edge"* %13, i32* dereferenceable(4) %15, i64* dereferenceable(8) %17, i64* dereferenceable(8) %19)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4)) #4 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EE19_M_emplace_back_auxIJRiRxxEEEvDpOT_(%"class.std::vector.3"*, i32* dereferenceable(4), i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.3"*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"struct.MaxFlow::edge"*, align 8
  %11 = alloca %"struct.MaxFlow::edge"*, align 8
  %12 = alloca i8*
  %13 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %5, align 8
  store i32* %1, i32** %6, align 8
  store i64* %2, i64** %7, align 8
  store i64* %3, i64** %8, align 8
  %14 = load %"class.std::vector.3"*, %"class.std::vector.3"** %5, align 8
  %15 = call i64 @_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.3"* %14, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i32 0, i32 0))
  store i64 %15, i64* %9, align 8
  %16 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %17 = load i64, i64* %9, align 8
  %18 = call %"struct.MaxFlow::edge"* @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.4"* %16, i64 %17)
  store %"struct.MaxFlow::edge"* %18, %"struct.MaxFlow::edge"** %10, align 8
  %19 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %10, align 8
  store %"struct.MaxFlow::edge"* %19, %"struct.MaxFlow::edge"** %11, align 8
  %20 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %21 to %"class.std::allocator.5"*
  %23 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %10, align 8
  %24 = call i64 @_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %14) #3
  %25 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %23, i64 %24
  %26 = load i32*, i32** %6, align 8
  %27 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %26) #3
  %28 = load i64*, i64** %7, align 8
  %29 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %28) #3
  %30 = load i64*, i64** %8, align 8
  %31 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %30) #3
  invoke void @_ZNSt16allocator_traitsISaIN7MaxFlow4edgeEEE9constructIS1_JRiRxxEEEvRS2_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1) %22, %"struct.MaxFlow::edge"* %25, i32* dereferenceable(4) %27, i64* dereferenceable(8) %29, i64* dereferenceable(8) %31)
          to label %32 unwind label %48

; <label>:32:                                     ; preds = %4
  store %"struct.MaxFlow::edge"* null, %"struct.MaxFlow::edge"** %11, align 8
  %33 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %35, align 8
  %37 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %38, i32 0, i32 1
  %40 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %39, align 8
  %41 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %10, align 8
  %42 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %43 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %42) #3
  %44 = invoke %"struct.MaxFlow::edge"* @_ZSt34__uninitialized_move_if_noexcept_aIPN7MaxFlow4edgeES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.MaxFlow::edge"* %36, %"struct.MaxFlow::edge"* %40, %"struct.MaxFlow::edge"* %41, %"class.std::allocator.5"* dereferenceable(1) %43)
          to label %45 unwind label %48

; <label>:45:                                     ; preds = %32
  store %"struct.MaxFlow::edge"* %44, %"struct.MaxFlow::edge"** %11, align 8
  %46 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %11, align 8
  %47 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %46, i32 1
  store %"struct.MaxFlow::edge"* %47, %"struct.MaxFlow::edge"** %11, align 8
  br label %164

; <label>:48:                                     ; preds = %32, %4
  %49 = landingpad { i8*, i32 }
          catch i8* null
  %50 = extractvalue { i8*, i32 } %49, 0
  store i8* %50, i8** %12, align 8
  %51 = extractvalue { i8*, i32 } %49, 1
  store i32 %51, i32* %13, align 4
  br label %52

; <label>:52:                                     ; preds = %48
  %53 = load i8*, i8** %12, align 8
  %54 = call i8* @__cxa_begin_catch(i8* %53) #3
  %55 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %11, align 8
  %56 = icmp ne %"struct.MaxFlow::edge"* %55, null
  br i1 %56, label %69, label %57

; <label>:57:                                     ; preds = %52
  %58 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %59 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %58, i32 0, i32 0
  %60 = bitcast %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %59 to %"class.std::allocator.5"*
  %61 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %10, align 8
  %62 = call i64 @_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %14) #3
  %63 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %61, i64 %62
  invoke void @_ZNSt16allocator_traitsISaIN7MaxFlow4edgeEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.5"* dereferenceable(1) %60, %"struct.MaxFlow::edge"* %63)
          to label %64 unwind label %65

; <label>:64:                                     ; preds = %57
  br label %104

; <label>:65:                                     ; preds = %162, %161, %102, %57
  %66 = landingpad { i8*, i32 }
          cleanup
  %67 = extractvalue { i8*, i32 } %66, 0
  store i8* %67, i8** %12, align 8
  %68 = extractvalue { i8*, i32 } %66, 1
  store i32 %68, i32* %13, align 4
  invoke void @__cxa_end_catch()
          to label %163 unwind label %255

; <label>:69:                                     ; preds = %52
  %70 = load i32, i32* @x.265
  %71 = load i32, i32* @y.266
  %72 = sub i32 %70, 1136607039
  %73 = sub i32 %72, 1
  %74 = add i32 %73, 1136607039
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  br i1 %82, label %84, label %259

; <label>:84:                                     ; preds = %69, %259
  %85 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %10, align 8
  %86 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %11, align 8
  %87 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %88 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %87) #3
  %89 = load i32, i32* @x.265
  %90 = load i32, i32* @y.266
  %91 = sub i32 0, 1
  %92 = add i32 %89, %91
  %93 = sub i32 %89, 1
  %94 = mul i32 %89, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %90, 10
  %98 = and i1 %96, %97
  %99 = xor i1 %96, %97
  %100 = or i1 %98, %99
  %101 = or i1 %96, %97
  br i1 %100, label %102, label %259

; <label>:102:                                    ; preds = %84
  invoke void @_ZSt8_DestroyIPN7MaxFlow4edgeES1_EvT_S3_RSaIT0_E(%"struct.MaxFlow::edge"* %85, %"struct.MaxFlow::edge"* %86, %"class.std::allocator.5"* dereferenceable(1) %88)
          to label %103 unwind label %65

; <label>:103:                                    ; preds = %102
  br label %104

; <label>:104:                                    ; preds = %103, %64
  %105 = load i32, i32* @x.265
  %106 = load i32, i32* @y.266
  %107 = add i32 %105, -1182509536
  %108 = sub i32 %107, 1
  %109 = sub i32 %108, -1182509536
  %110 = sub i32 %105, 1
  %111 = mul i32 %105, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %106, 10
  %115 = xor i1 %113, true
  %116 = xor i1 %114, true
  %117 = xor i1 false, true
  %118 = and i1 %115, false
  %119 = and i1 %113, %117
  %120 = and i1 %116, false
  %121 = and i1 %114, %117
  %122 = or i1 %118, %119
  %123 = or i1 %120, %121
  %124 = xor i1 %122, %123
  %125 = or i1 %115, %116
  %126 = xor i1 %125, true
  %127 = or i1 false, %117
  %128 = and i1 %126, %127
  %129 = or i1 %124, %128
  %130 = or i1 %113, %114
  br i1 %129, label %131, label %264

; <label>:131:                                    ; preds = %104, %264
  %132 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %133 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %10, align 8
  %134 = load i64, i64* %9, align 8
  %135 = load i32, i32* @x.265
  %136 = load i32, i32* @y.266
  %137 = sub i32 %135, -596517379
  %138 = sub i32 %137, 1
  %139 = add i32 %138, -596517379
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = xor i1 %143, true
  %146 = xor i1 %144, true
  %147 = xor i1 true, true
  %148 = and i1 %145, true
  %149 = and i1 %143, %147
  %150 = and i1 %146, true
  %151 = and i1 %144, %147
  %152 = or i1 %148, %149
  %153 = or i1 %150, %151
  %154 = xor i1 %152, %153
  %155 = or i1 %145, %146
  %156 = xor i1 %155, true
  %157 = or i1 true, %147
  %158 = and i1 %156, %157
  %159 = or i1 %154, %158
  %160 = or i1 %143, %144
  br i1 %159, label %161, label %264

; <label>:161:                                    ; preds = %131
  invoke void @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.4"* %132, %"struct.MaxFlow::edge"* %133, i64 %134)
          to label %162 unwind label %65

; <label>:162:                                    ; preds = %161
  invoke void @__cxa_rethrow() #12
          to label %258 unwind label %65

; <label>:163:                                    ; preds = %65
  br label %209

; <label>:164:                                    ; preds = %45
  %165 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %166 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %165, i32 0, i32 0
  %167 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %166, i32 0, i32 0
  %168 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %167, align 8
  %169 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %170 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %169, i32 0, i32 0
  %171 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %170, i32 0, i32 1
  %172 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %171, align 8
  %173 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %174 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %173) #3
  call void @_ZSt8_DestroyIPN7MaxFlow4edgeES1_EvT_S3_RSaIT0_E(%"struct.MaxFlow::edge"* %168, %"struct.MaxFlow::edge"* %172, %"class.std::allocator.5"* dereferenceable(1) %174)
  %175 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %176 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %177 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %176, i32 0, i32 0
  %178 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %177, i32 0, i32 0
  %179 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %178, align 8
  %180 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %181 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %180, i32 0, i32 0
  %182 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %181, i32 0, i32 2
  %183 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %182, align 8
  %184 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %185 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %184, i32 0, i32 0
  %186 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %185, i32 0, i32 0
  %187 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %186, align 8
  %188 = ptrtoint %"struct.MaxFlow::edge"* %183 to i64
  %189 = ptrtoint %"struct.MaxFlow::edge"* %187 to i64
  %190 = sub i64 %188, 780851320087646860
  %191 = sub i64 %190, %189
  %192 = add i64 %191, 780851320087646860
  %193 = sub i64 %188, %189
  %194 = sdiv exact i64 %192, 16
  call void @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.4"* %175, %"struct.MaxFlow::edge"* %179, i64 %194)
  %195 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %10, align 8
  %196 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %197 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %196, i32 0, i32 0
  %198 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %197, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %195, %"struct.MaxFlow::edge"** %198, align 8
  %199 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %11, align 8
  %200 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %201 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %200, i32 0, i32 0
  %202 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %201, i32 0, i32 1
  store %"struct.MaxFlow::edge"* %199, %"struct.MaxFlow::edge"** %202, align 8
  %203 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %10, align 8
  %204 = load i64, i64* %9, align 8
  %205 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %203, i64 %204
  %206 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %207 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %206, i32 0, i32 0
  %208 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %207, i32 0, i32 2
  store %"struct.MaxFlow::edge"* %205, %"struct.MaxFlow::edge"** %208, align 8
  ret void

; <label>:209:                                    ; preds = %163
  %210 = load i32, i32* @x.265
  %211 = load i32, i32* @y.266
  %212 = sub i32 %210, -1055386127
  %213 = sub i32 %212, 1
  %214 = add i32 %213, -1055386127
  %215 = sub i32 %210, 1
  %216 = mul i32 %210, %214
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %211, 10
  %220 = xor i1 %218, true
  %221 = xor i1 %219, true
  %222 = xor i1 false, true
  %223 = and i1 %220, false
  %224 = and i1 %218, %222
  %225 = and i1 %221, false
  %226 = and i1 %219, %222
  %227 = or i1 %223, %224
  %228 = or i1 %225, %226
  %229 = xor i1 %227, %228
  %230 = or i1 %220, %221
  %231 = xor i1 %230, true
  %232 = or i1 false, %222
  %233 = and i1 %231, %232
  %234 = or i1 %229, %233
  %235 = or i1 %218, %219
  br i1 %234, label %236, label %268

; <label>:236:                                    ; preds = %209, %268
  %237 = load i8*, i8** %12, align 8
  %238 = load i32, i32* %13, align 4
  %239 = insertvalue { i8*, i32 } undef, i8* %237, 0
  %240 = insertvalue { i8*, i32 } %239, i32 %238, 1
  %241 = load i32, i32* @x.265
  %242 = load i32, i32* @y.266
  %243 = sub i32 0, 1
  %244 = add i32 %241, %243
  %245 = sub i32 %241, 1
  %246 = mul i32 %241, %244
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %242, 10
  %250 = and i1 %248, %249
  %251 = xor i1 %248, %249
  %252 = or i1 %250, %251
  %253 = or i1 %248, %249
  br i1 %252, label %254, label %268

; <label>:254:                                    ; preds = %236
  resume { i8*, i32 } %240

; <label>:255:                                    ; preds = %65
  %256 = landingpad { i8*, i32 }
          catch i8* null
  %257 = extractvalue { i8*, i32 } %256, 0
  call void @__clang_call_terminate(i8* %257) #10
  unreachable

; <label>:258:                                    ; preds = %162
  unreachable

; <label>:259:                                    ; preds = %84, %69
  %260 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %10, align 8
  %261 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %11, align 8
  %262 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %263 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %262) #3
  br label %84

; <label>:264:                                    ; preds = %131, %104
  %265 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %266 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %10, align 8
  %267 = load i64, i64* %9, align 8
  br label %131

; <label>:268:                                    ; preds = %236, %209
  %269 = load i8*, i8** %12, align 8
  %270 = load i32, i32* %13, align 4
  %271 = insertvalue { i8*, i32 } undef, i8* %269, 0
  %272 = insertvalue { i8*, i32 } %271, i32 %270, 1
  br label %236
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN7MaxFlow4edgeEE9constructIS2_JRiRxxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"*, %"struct.MaxFlow::edge"*, i32* dereferenceable(4), i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %6 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %7 = alloca %"struct.MaxFlow::edge"*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i64*, align 8
  %10 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %6, align 8
  store %"struct.MaxFlow::edge"* %1, %"struct.MaxFlow::edge"** %7, align 8
  store i32* %2, i32** %8, align 8
  store i64* %3, i64** %9, align 8
  store i64* %4, i64** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %6, align 8
  %12 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %7, align 8
  %13 = bitcast %"struct.MaxFlow::edge"* %12 to i8*
  %14 = bitcast i8* %13 to %"struct.MaxFlow::edge"*
  %15 = load i32*, i32** %8, align 8
  %16 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %15) #3
  %17 = load i32, i32* %16, align 4
  %18 = load i64*, i64** %9, align 8
  %19 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %18) #3
  %20 = load i64, i64* %19, align 8
  %21 = load i64*, i64** %10, align 8
  %22 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %21) #3
  %23 = load i64, i64* %22, align 8
  %24 = trunc i64 %23 to i32
  call void @_ZN7MaxFlow4edgeC2Eixi(%"struct.MaxFlow::edge"* %14, i32 %17, i64 %20, i32 %24)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN7MaxFlow4edgeC2Eixi(%"struct.MaxFlow::edge"*, i32, i64, i32) unnamed_addr #4 comdat align 2 {
  %5 = alloca %"struct.MaxFlow::edge"*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %5, align 8
  store i32 %1, i32* %6, align 4
  store i64 %2, i64* %7, align 8
  store i32 %3, i32* %8, align 4
  %9 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %5, align 8
  %10 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %9, i32 0, i32 0
  %11 = load i32, i32* %6, align 4
  store i32 %11, i32* %10, align 8
  %12 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %9, i32 0, i32 1
  %13 = load i32, i32* %8, align 4
  store i32 %13, i32* %12, align 4
  %14 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %9, i32 0, i32 2
  %15 = load i64, i64* %7, align 8
  store i64 %15, i64* %14, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.3"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.std::vector.3"*
  %8 = alloca %"class.std::vector.3"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %8, align 8
  store i64 %1, i64* %9, align 8
  store i8* %2, i8** %10, align 8
  %13 = load %"class.std::vector.3"*, %"class.std::vector.3"** %8, align 8
  store %"class.std::vector.3"* %13, %"class.std::vector.3"** %7
  %14 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %15 = call i64 @_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE8max_sizeEv(%"class.std::vector.3"* %14) #3
  %16 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %17 = call i64 @_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %16) #3
  %18 = sub i64 %15, 5267188428754332125
  %19 = sub i64 %18, %17
  %20 = add i64 %19, 5267188428754332125
  %21 = sub i64 %15, %17
  store i64 %20, i64* %6
  %22 = load i64, i64* %9, align 8
  store i64 %22, i64* %5
  %23 = alloca i32
  store i32 -1572557793, i32* %23
  %24 = alloca i64
  br label %25

; <label>:25:                                     ; preds = %3, %170
  %26 = load i32, i32* %23
  switch i32 %26, label %27 [
    i32 -1572557793, label %28
    i32 648681138, label %33
    i32 67241482, label %49
    i32 -286129421, label %77
    i32 1093732156, label %78
    i32 412312024, label %94
    i32 -1963799330, label %122
    i32 -2136619703, label %153
    i32 288837957, label %156
    i32 686725373, label %159
    i32 -1398093503, label %161
    i32 -439591913, label %163
    i32 -1263836003, label %165
  ]

; <label>:27:                                     ; preds = %25
  br label %170

; <label>:28:                                     ; preds = %25
  %29 = load volatile i64, i64* %6
  %30 = load volatile i64, i64* %5
  %31 = icmp ult i64 %29, %30
  %32 = select i1 %31, i32 648681138, i32 1093732156
  store i32 %32, i32* %23
  br label %170

; <label>:33:                                     ; preds = %25
  %34 = load i32, i32* @x.271
  %35 = load i32, i32* @y.272
  %36 = sub i32 %34, -233248753
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -233248753
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 67241482, i32 -439591913
  store i32 %48, i32* %23
  br label %170

; <label>:49:                                     ; preds = %25
  %50 = load i8*, i8** %10, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %50) #12
  %51 = load i32, i32* @x.271
  %52 = load i32, i32* @y.272
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -286129421, i32 -439591913
  store i32 %76, i32* %23
  br label %170

; <label>:77:                                     ; preds = %25
  unreachable

; <label>:78:                                     ; preds = %25
  %79 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %80 = call i64 @_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %79) #3
  %81 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %82 = call i64 @_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %81) #3
  store i64 %82, i64* %12, align 8
  %83 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %12, i64* dereferenceable(8) %9)
  %84 = load i64, i64* %83, align 8
  %85 = add i64 %80, 2447843533467136546
  %86 = add i64 %85, %84
  %87 = sub i64 %86, 2447843533467136546
  %88 = add i64 %80, %84
  store i64 %87, i64* %11, align 8
  %89 = load i64, i64* %11, align 8
  %90 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %91 = call i64 @_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %90) #3
  %92 = icmp ult i64 %89, %91
  %93 = select i1 %92, i32 288837957, i32 412312024
  store i32 %93, i32* %23
  br label %170

; <label>:94:                                     ; preds = %25
  %95 = load i32, i32* @x.271
  %96 = load i32, i32* @y.272
  %97 = add i32 %95, 1492347418
  %98 = sub i32 %97, 1
  %99 = sub i32 %98, 1492347418
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = xor i1 %103, true
  %106 = xor i1 %104, true
  %107 = xor i1 false, true
  %108 = and i1 %105, false
  %109 = and i1 %103, %107
  %110 = and i1 %106, false
  %111 = and i1 %104, %107
  %112 = or i1 %108, %109
  %113 = or i1 %110, %111
  %114 = xor i1 %112, %113
  %115 = or i1 %105, %106
  %116 = xor i1 %115, true
  %117 = or i1 false, %107
  %118 = and i1 %116, %117
  %119 = or i1 %114, %118
  %120 = or i1 %103, %104
  %121 = select i1 %119, i32 -1963799330, i32 -1263836003
  store i32 %121, i32* %23
  br label %170

; <label>:122:                                    ; preds = %25
  %123 = load i64, i64* %11, align 8
  %124 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %125 = call i64 @_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE8max_sizeEv(%"class.std::vector.3"* %124) #3
  %126 = icmp ugt i64 %123, %125
  store i1 %126, i1* %4
  %127 = load i32, i32* @x.271
  %128 = load i32, i32* @y.272
  %129 = sub i32 0, 1
  %130 = add i32 %127, %129
  %131 = sub i32 %127, 1
  %132 = mul i32 %127, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %128, 10
  %136 = xor i1 %134, true
  %137 = xor i1 %135, true
  %138 = xor i1 true, true
  %139 = and i1 %136, true
  %140 = and i1 %134, %138
  %141 = and i1 %137, true
  %142 = and i1 %135, %138
  %143 = or i1 %139, %140
  %144 = or i1 %141, %142
  %145 = xor i1 %143, %144
  %146 = or i1 %136, %137
  %147 = xor i1 %146, true
  %148 = or i1 true, %138
  %149 = and i1 %147, %148
  %150 = or i1 %145, %149
  %151 = or i1 %134, %135
  %152 = select i1 %150, i32 -2136619703, i32 -1263836003
  store i32 %152, i32* %23
  br label %170

; <label>:153:                                    ; preds = %25
  %154 = load volatile i1, i1* %4
  %155 = select i1 %154, i32 288837957, i32 686725373
  store i32 %155, i32* %23
  br label %170

; <label>:156:                                    ; preds = %25
  %157 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %158 = call i64 @_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE8max_sizeEv(%"class.std::vector.3"* %157) #3
  store i32 -1398093503, i32* %23
  store i64 %158, i64* %24
  br label %170

; <label>:159:                                    ; preds = %25
  %160 = load i64, i64* %11, align 8
  store i32 -1398093503, i32* %23
  store i64 %160, i64* %24
  br label %170

; <label>:161:                                    ; preds = %25
  %162 = load i64, i64* %24
  ret i64 %162

; <label>:163:                                    ; preds = %25
  %164 = load i8*, i8** %10, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %164) #12
  store i32 67241482, i32* %23
  br label %170

; <label>:165:                                    ; preds = %25
  %166 = load i64, i64* %11, align 8
  %167 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %168 = call i64 @_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE8max_sizeEv(%"class.std::vector.3"* %167) #3
  %169 = icmp ugt i64 %166, %168
  store i32 -1963799330, i32* %23
  br label %170

; <label>:170:                                    ; preds = %165, %163, %159, %156, %153, %122, %94, %78, %49, %33, %28, %27
  br label %25
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.MaxFlow::edge"* @_ZSt34__uninitialized_move_if_noexcept_aIPN7MaxFlow4edgeES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.MaxFlow::edge"*, align 8
  %6 = alloca %"struct.MaxFlow::edge"*, align 8
  %7 = alloca %"struct.MaxFlow::edge"*, align 8
  %8 = alloca %"class.std::allocator.5"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %5, align 8
  store %"struct.MaxFlow::edge"* %1, %"struct.MaxFlow::edge"** %6, align 8
  store %"struct.MaxFlow::edge"* %2, %"struct.MaxFlow::edge"** %7, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %8, align 8
  %11 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %5, align 8
  %12 = call %"struct.MaxFlow::edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN7MaxFlow4edgeESt13move_iteratorIS2_EET0_T_(%"struct.MaxFlow::edge"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %12, %"struct.MaxFlow::edge"** %13, align 8
  %14 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %6, align 8
  %15 = call %"struct.MaxFlow::edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN7MaxFlow4edgeESt13move_iteratorIS2_EET0_T_(%"struct.MaxFlow::edge"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %15, %"struct.MaxFlow::edge"** %16, align 8
  %17 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %7, align 8
  %18 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %22 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %21, align 8
  %23 = call %"struct.MaxFlow::edge"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN7MaxFlow4edgeEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.MaxFlow::edge"* %20, %"struct.MaxFlow::edge"* %22, %"struct.MaxFlow::edge"* %17, %"class.std::allocator.5"* dereferenceable(1) %18)
  ret %"struct.MaxFlow::edge"* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN7MaxFlow4edgeEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.5"* dereferenceable(1), %"struct.MaxFlow::edge"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.5"*, align 8
  %4 = alloca %"struct.MaxFlow::edge"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %3, align 8
  store %"struct.MaxFlow::edge"* %1, %"struct.MaxFlow::edge"** %4, align 8
  %5 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %3, align 8
  %6 = bitcast %"class.std::allocator.5"* %5 to %"class.__gnu_cxx::new_allocator.6"*
  %7 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN7MaxFlow4edgeEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.6"* %6, %"struct.MaxFlow::edge"* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE8max_sizeEv(%"class.std::vector.3"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %4 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  %5 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIN7MaxFlow4edgeEEE8max_sizeERKS2_(%"class.std::allocator.5"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  %8 = load i64*, i64** %6, align 8
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %4
  %10 = load i64*, i64** %7, align 8
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 457878025, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 457878025, label %16
    i32 -1897601017, label %21
    i32 -969400937, label %23
    i32 -1872011988, label %25
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp ult i64 %17, %18
  %20 = select i1 %19, i32 -1897601017, i32 -969400937
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  %22 = load i64*, i64** %7, align 8
  store i64* %22, i64** %5, align 8
  store i32 -1872011988, i32* %12
  br label %27

; <label>:23:                                     ; preds = %13
  %24 = load i64*, i64** %6, align 8
  store i64* %24, i64** %5, align 8
  store i32 -1872011988, i32* %12
  br label %27

; <label>:25:                                     ; preds = %13
  %26 = load i64*, i64** %5, align 8
  ret i64* %26

; <label>:27:                                     ; preds = %23, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIN7MaxFlow4edgeEEE8max_sizeERKS2_(%"class.std::allocator.5"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.281
  %6 = load i32, i32* @y.282
  %7 = add i32 %5, 1426410403
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1426410403
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1830699853, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1830699853, label %19
    i32 -2002081684, label %27
    i32 -769474440, label %59
    i32 1629805589, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -2002081684, i32 1629805589
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %28, align 8
  %29 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %28, align 8
  %30 = bitcast %"class.std::allocator.5"* %29 to %"class.__gnu_cxx::new_allocator.6"*
  %31 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN7MaxFlow4edgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* %30) #3
  store i64 %31, i64* %2
  %32 = load i32, i32* @x.281
  %33 = load i32, i32* @y.282
  %34 = add i32 %32, 659764331
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 659764331
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -769474440, i32 1629805589
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i64, i64* %2
  ret i64 %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %62, align 8
  %63 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %62, align 8
  %64 = bitcast %"class.std::allocator.5"* %63 to %"class.__gnu_cxx::new_allocator.6"*
  %65 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN7MaxFlow4edgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* %64) #3
  store i32 -2002081684, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.MaxFlow::edge"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN7MaxFlow4edgeEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::move_iterator", align 8
  %7 = alloca %"struct.MaxFlow::edge"*, align 8
  %8 = alloca %"class.std::allocator.5"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %6, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %1, %"struct.MaxFlow::edge"** %12, align 8
  store %"struct.MaxFlow::edge"* %2, %"struct.MaxFlow::edge"** %7, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %8, align 8
  %13 = bitcast %"class.std::move_iterator"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %19 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %21 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %20, align 8
  %22 = call %"struct.MaxFlow::edge"* @_ZSt18uninitialized_copyISt13move_iteratorIPN7MaxFlow4edgeEES3_ET0_T_S6_S5_(%"struct.MaxFlow::edge"* %19, %"struct.MaxFlow::edge"* %21, %"struct.MaxFlow::edge"* %17)
  ret %"struct.MaxFlow::edge"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.MaxFlow::edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN7MaxFlow4edgeESt13move_iteratorIS2_EET0_T_(%"struct.MaxFlow::edge"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca %"struct.MaxFlow::edge"*, align 8
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %3, align 8
  %4 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %3, align 8
  call void @_ZNSt13move_iteratorIPN7MaxFlow4edgeEEC2ES2_(%"class.std::move_iterator"* %2, %"struct.MaxFlow::edge"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  %6 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %5, align 8
  ret %"struct.MaxFlow::edge"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.MaxFlow::edge"* @_ZSt18uninitialized_copyISt13move_iteratorIPN7MaxFlow4edgeEES3_ET0_T_S6_S5_(%"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"struct.MaxFlow::edge"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %1, %"struct.MaxFlow::edge"** %11, align 8
  store %"struct.MaxFlow::edge"* %2, %"struct.MaxFlow::edge"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %18 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %19, align 8
  %21 = call %"struct.MaxFlow::edge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN7MaxFlow4edgeEES5_EET0_T_S8_S7_(%"struct.MaxFlow::edge"* %18, %"struct.MaxFlow::edge"* %20, %"struct.MaxFlow::edge"* %16)
  ret %"struct.MaxFlow::edge"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.MaxFlow::edge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN7MaxFlow4edgeEES5_EET0_T_S8_S7_(%"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"struct.MaxFlow::edge"*, align 8
  %7 = alloca %"struct.MaxFlow::edge"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %1, %"struct.MaxFlow::edge"** %11, align 8
  store %"struct.MaxFlow::edge"* %2, %"struct.MaxFlow::edge"** %6, align 8
  %12 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %6, align 8
  store %"struct.MaxFlow::edge"* %12, %"struct.MaxFlow::edge"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %78, %3
  %14 = invoke zeroext i1 @_ZStneIPN7MaxFlow4edgeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8) %4, %"class.std::move_iterator"* dereferenceable(8) %5)
          to label %15 unwind label %81

; <label>:15:                                     ; preds = %13
  br i1 %14, label %16, label %197

; <label>:16:                                     ; preds = %15
  %17 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %7, align 8
  %18 = call %"struct.MaxFlow::edge"* @_ZSt11__addressofIN7MaxFlow4edgeEEPT_RS2_(%"struct.MaxFlow::edge"* dereferenceable(16) %17) #3
  %19 = invoke dereferenceable(16) %"struct.MaxFlow::edge"* @_ZNKSt13move_iteratorIPN7MaxFlow4edgeEEdeEv(%"class.std::move_iterator"* %4)
          to label %20 unwind label %81

; <label>:20:                                     ; preds = %16
  invoke void @_ZSt10_ConstructIN7MaxFlow4edgeEJS1_EEvPT_DpOT0_(%"struct.MaxFlow::edge"* %18, %"struct.MaxFlow::edge"* dereferenceable(16) %19)
          to label %21 unwind label %81

; <label>:21:                                     ; preds = %20
  %22 = load i32, i32* @x.289
  %23 = load i32, i32* @y.290
  %24 = sub i32 %22, -66084338
  %25 = sub i32 %24, 1
  %26 = add i32 %25, -66084338
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 false, true
  %35 = and i1 %32, false
  %36 = and i1 %30, %34
  %37 = and i1 %33, false
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 false, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  br i1 %46, label %48, label %404

; <label>:48:                                     ; preds = %21, %404
  %49 = load i32, i32* @x.289
  %50 = load i32, i32* @y.290
  %51 = sub i32 %49, 1879919748
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 1879919748
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  br i1 %73, label %75, label %404

; <label>:75:                                     ; preds = %48
  br label %76

; <label>:76:                                     ; preds = %75
  %77 = invoke dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPN7MaxFlow4edgeEEppEv(%"class.std::move_iterator"* %4)
          to label %78 unwind label %81

; <label>:78:                                     ; preds = %76
  %79 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %7, align 8
  %80 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %79, i32 1
  store %"struct.MaxFlow::edge"* %80, %"struct.MaxFlow::edge"** %7, align 8
  br label %13

; <label>:81:                                     ; preds = %76, %20, %16, %13
  %82 = load i32, i32* @x.289
  %83 = load i32, i32* @y.290
  %84 = sub i32 0, 1
  %85 = add i32 %82, %84
  %86 = sub i32 %82, 1
  %87 = mul i32 %82, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %83, 10
  %91 = xor i1 %89, true
  %92 = xor i1 %90, true
  %93 = xor i1 true, true
  %94 = and i1 %91, true
  %95 = and i1 %89, %93
  %96 = and i1 %92, true
  %97 = and i1 %90, %93
  %98 = or i1 %94, %95
  %99 = or i1 %96, %97
  %100 = xor i1 %98, %99
  %101 = or i1 %91, %92
  %102 = xor i1 %101, true
  %103 = or i1 true, %93
  %104 = and i1 %102, %103
  %105 = or i1 %100, %104
  %106 = or i1 %89, %90
  br i1 %105, label %107, label %405

; <label>:107:                                    ; preds = %81, %405
  %108 = landingpad { i8*, i32 }
          catch i8* null
  %109 = extractvalue { i8*, i32 } %108, 0
  store i8* %109, i8** %8, align 8
  %110 = extractvalue { i8*, i32 } %108, 1
  store i32 %110, i32* %9, align 4
  %111 = load i32, i32* @x.289
  %112 = load i32, i32* @y.290
  %113 = add i32 %111, -1007339996
  %114 = sub i32 %113, 1
  %115 = sub i32 %114, -1007339996
  %116 = sub i32 %111, 1
  %117 = mul i32 %111, %115
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %112, 10
  %121 = xor i1 %119, true
  %122 = xor i1 %120, true
  %123 = xor i1 false, true
  %124 = and i1 %121, false
  %125 = and i1 %119, %123
  %126 = and i1 %122, false
  %127 = and i1 %120, %123
  %128 = or i1 %124, %125
  %129 = or i1 %126, %127
  %130 = xor i1 %128, %129
  %131 = or i1 %121, %122
  %132 = xor i1 %131, true
  %133 = or i1 false, %123
  %134 = and i1 %132, %133
  %135 = or i1 %130, %134
  %136 = or i1 %119, %120
  br i1 %135, label %137, label %405

; <label>:137:                                    ; preds = %107
  br label %138

; <label>:138:                                    ; preds = %137
  %139 = load i8*, i8** %8, align 8
  %140 = call i8* @__cxa_begin_catch(i8* %139) #3
  %141 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %6, align 8
  %142 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %7, align 8
  invoke void @_ZSt8_DestroyIPN7MaxFlow4edgeEEvT_S3_(%"struct.MaxFlow::edge"* %141, %"struct.MaxFlow::edge"* %142)
          to label %143 unwind label %199

; <label>:143:                                    ; preds = %138
  %144 = load i32, i32* @x.289
  %145 = load i32, i32* @y.290
  %146 = sub i32 0, 1
  %147 = add i32 %144, %146
  %148 = sub i32 %144, 1
  %149 = mul i32 %144, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %145, 10
  %153 = xor i1 %151, true
  %154 = xor i1 %152, true
  %155 = xor i1 true, true
  %156 = and i1 %153, true
  %157 = and i1 %151, %155
  %158 = and i1 %154, true
  %159 = and i1 %152, %155
  %160 = or i1 %156, %157
  %161 = or i1 %158, %159
  %162 = xor i1 %160, %161
  %163 = or i1 %153, %154
  %164 = xor i1 %163, true
  %165 = or i1 true, %155
  %166 = and i1 %164, %165
  %167 = or i1 %162, %166
  %168 = or i1 %151, %152
  br i1 %167, label %169, label %409

; <label>:169:                                    ; preds = %143, %409
  %170 = load i32, i32* @x.289
  %171 = load i32, i32* @y.290
  %172 = add i32 %170, 2023810624
  %173 = sub i32 %172, 1
  %174 = sub i32 %173, 2023810624
  %175 = sub i32 %170, 1
  %176 = mul i32 %170, %174
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %171, 10
  %180 = xor i1 %178, true
  %181 = xor i1 %179, true
  %182 = xor i1 false, true
  %183 = and i1 %180, false
  %184 = and i1 %178, %182
  %185 = and i1 %181, false
  %186 = and i1 %179, %182
  %187 = or i1 %183, %184
  %188 = or i1 %185, %186
  %189 = xor i1 %187, %188
  %190 = or i1 %180, %181
  %191 = xor i1 %190, true
  %192 = or i1 false, %182
  %193 = and i1 %191, %192
  %194 = or i1 %189, %193
  %195 = or i1 %178, %179
  br i1 %194, label %196, label %409

; <label>:196:                                    ; preds = %169
  invoke void @__cxa_rethrow() #12
          to label %350 unwind label %199

; <label>:197:                                    ; preds = %15
  %198 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %7, align 8
  ret %"struct.MaxFlow::edge"* %198

; <label>:199:                                    ; preds = %196, %138
  %200 = load i32, i32* @x.289
  %201 = load i32, i32* @y.290
  %202 = add i32 %200, 910791787
  %203 = sub i32 %202, 1
  %204 = sub i32 %203, 910791787
  %205 = sub i32 %200, 1
  %206 = mul i32 %200, %204
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %201, 10
  %210 = xor i1 %208, true
  %211 = xor i1 %209, true
  %212 = xor i1 false, true
  %213 = and i1 %210, false
  %214 = and i1 %208, %212
  %215 = and i1 %211, false
  %216 = and i1 %209, %212
  %217 = or i1 %213, %214
  %218 = or i1 %215, %216
  %219 = xor i1 %217, %218
  %220 = or i1 %210, %211
  %221 = xor i1 %220, true
  %222 = or i1 false, %212
  %223 = and i1 %221, %222
  %224 = or i1 %219, %223
  %225 = or i1 %208, %209
  br i1 %224, label %226, label %410

; <label>:226:                                    ; preds = %199, %410
  %227 = landingpad { i8*, i32 }
          cleanup
  %228 = extractvalue { i8*, i32 } %227, 0
  store i8* %228, i8** %8, align 8
  %229 = extractvalue { i8*, i32 } %227, 1
  store i32 %229, i32* %9, align 4
  %230 = load i32, i32* @x.289
  %231 = load i32, i32* @y.290
  %232 = sub i32 %230, 428538199
  %233 = sub i32 %232, 1
  %234 = add i32 %233, 428538199
  %235 = sub i32 %230, 1
  %236 = mul i32 %230, %234
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %231, 10
  %240 = xor i1 %238, true
  %241 = xor i1 %239, true
  %242 = xor i1 false, true
  %243 = and i1 %240, false
  %244 = and i1 %238, %242
  %245 = and i1 %241, false
  %246 = and i1 %239, %242
  %247 = or i1 %243, %244
  %248 = or i1 %245, %246
  %249 = xor i1 %247, %248
  %250 = or i1 %240, %241
  %251 = xor i1 %250, true
  %252 = or i1 false, %242
  %253 = and i1 %251, %252
  %254 = or i1 %249, %253
  %255 = or i1 %238, %239
  br i1 %254, label %256, label %410

; <label>:256:                                    ; preds = %226
  invoke void @__cxa_end_catch()
          to label %257 unwind label %305

; <label>:257:                                    ; preds = %256
  br label %300
                                                  ; No predecessors!
  %259 = load i32, i32* @x.289
  %260 = load i32, i32* @y.290
  %261 = add i32 %259, -858831301
  %262 = sub i32 %261, 1
  %263 = sub i32 %262, -858831301
  %264 = sub i32 %259, 1
  %265 = mul i32 %259, %263
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %260, 10
  %269 = and i1 %267, %268
  %270 = xor i1 %267, %268
  %271 = or i1 %269, %270
  %272 = or i1 %267, %268
  br i1 %271, label %273, label %414

; <label>:273:                                    ; preds = %258, %414
  call void @llvm.trap()
  %274 = load i32, i32* @x.289
  %275 = load i32, i32* @y.290
  %276 = sub i32 0, 1
  %277 = add i32 %274, %276
  %278 = sub i32 %274, 1
  %279 = mul i32 %274, %277
  %280 = urem i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %275, 10
  %283 = xor i1 %281, true
  %284 = xor i1 %282, true
  %285 = xor i1 false, true
  %286 = and i1 %283, false
  %287 = and i1 %281, %285
  %288 = and i1 %284, false
  %289 = and i1 %282, %285
  %290 = or i1 %286, %287
  %291 = or i1 %288, %289
  %292 = xor i1 %290, %291
  %293 = or i1 %283, %284
  %294 = xor i1 %293, true
  %295 = or i1 false, %285
  %296 = and i1 %294, %295
  %297 = or i1 %292, %296
  %298 = or i1 %281, %282
  br i1 %297, label %299, label %414

; <label>:299:                                    ; preds = %273
  unreachable

; <label>:300:                                    ; preds = %257
  %301 = load i8*, i8** %8, align 8
  %302 = load i32, i32* %9, align 4
  %303 = insertvalue { i8*, i32 } undef, i8* %301, 0
  %304 = insertvalue { i8*, i32 } %303, i32 %302, 1
  resume { i8*, i32 } %304

; <label>:305:                                    ; preds = %256
  %306 = load i32, i32* @x.289
  %307 = load i32, i32* @y.290
  %308 = sub i32 %306, 1748922051
  %309 = sub i32 %308, 1
  %310 = add i32 %309, 1748922051
  %311 = sub i32 %306, 1
  %312 = mul i32 %306, %310
  %313 = urem i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %307, 10
  %316 = xor i1 %314, true
  %317 = xor i1 %315, true
  %318 = xor i1 true, true
  %319 = and i1 %316, true
  %320 = and i1 %314, %318
  %321 = and i1 %317, true
  %322 = and i1 %315, %318
  %323 = or i1 %319, %320
  %324 = or i1 %321, %322
  %325 = xor i1 %323, %324
  %326 = or i1 %316, %317
  %327 = xor i1 %326, true
  %328 = or i1 true, %318
  %329 = and i1 %327, %328
  %330 = or i1 %325, %329
  %331 = or i1 %314, %315
  br i1 %330, label %332, label %415

; <label>:332:                                    ; preds = %305, %415
  %333 = landingpad { i8*, i32 }
          catch i8* null
  %334 = extractvalue { i8*, i32 } %333, 0
  call void @__clang_call_terminate(i8* %334) #10
  %335 = load i32, i32* @x.289
  %336 = load i32, i32* @y.290
  %337 = add i32 %335, -539098773
  %338 = sub i32 %337, 1
  %339 = sub i32 %338, -539098773
  %340 = sub i32 %335, 1
  %341 = mul i32 %335, %339
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %336, 10
  %345 = and i1 %343, %344
  %346 = xor i1 %343, %344
  %347 = or i1 %345, %346
  %348 = or i1 %343, %344
  br i1 %347, label %349, label %415

; <label>:349:                                    ; preds = %332
  unreachable

; <label>:350:                                    ; preds = %196
  %351 = load i32, i32* @x.289
  %352 = load i32, i32* @y.290
  %353 = sub i32 0, 1
  %354 = add i32 %351, %353
  %355 = sub i32 %351, 1
  %356 = mul i32 %351, %354
  %357 = urem i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %352, 10
  %360 = xor i1 %358, true
  %361 = xor i1 %359, true
  %362 = xor i1 false, true
  %363 = and i1 %360, false
  %364 = and i1 %358, %362
  %365 = and i1 %361, false
  %366 = and i1 %359, %362
  %367 = or i1 %363, %364
  %368 = or i1 %365, %366
  %369 = xor i1 %367, %368
  %370 = or i1 %360, %361
  %371 = xor i1 %370, true
  %372 = or i1 false, %362
  %373 = and i1 %371, %372
  %374 = or i1 %369, %373
  %375 = or i1 %358, %359
  br i1 %374, label %376, label %418

; <label>:376:                                    ; preds = %350, %418
  %377 = load i32, i32* @x.289
  %378 = load i32, i32* @y.290
  %379 = add i32 %377, -2083073261
  %380 = sub i32 %379, 1
  %381 = sub i32 %380, -2083073261
  %382 = sub i32 %377, 1
  %383 = mul i32 %377, %381
  %384 = urem i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = icmp slt i32 %378, 10
  %387 = xor i1 %385, true
  %388 = xor i1 %386, true
  %389 = xor i1 false, true
  %390 = and i1 %387, false
  %391 = and i1 %385, %389
  %392 = and i1 %388, false
  %393 = and i1 %386, %389
  %394 = or i1 %390, %391
  %395 = or i1 %392, %393
  %396 = xor i1 %394, %395
  %397 = or i1 %387, %388
  %398 = xor i1 %397, true
  %399 = or i1 false, %389
  %400 = and i1 %398, %399
  %401 = or i1 %396, %400
  %402 = or i1 %385, %386
  br i1 %401, label %403, label %418

; <label>:403:                                    ; preds = %376
  unreachable

; <label>:404:                                    ; preds = %48, %21
  br label %48

; <label>:405:                                    ; preds = %107, %81
  %406 = landingpad { i8*, i32 }
          catch i8* null
  %407 = extractvalue { i8*, i32 } %406, 0
  store i8* %407, i8** %8, align 8
  %408 = extractvalue { i8*, i32 } %406, 1
  store i32 %408, i32* %9, align 4
  br label %107

; <label>:409:                                    ; preds = %169, %143
  br label %169

; <label>:410:                                    ; preds = %226, %199
  %411 = landingpad { i8*, i32 }
          cleanup
  %412 = extractvalue { i8*, i32 } %411, 0
  store i8* %412, i8** %8, align 8
  %413 = extractvalue { i8*, i32 } %411, 1
  store i32 %413, i32* %9, align 4
  br label %226

; <label>:414:                                    ; preds = %273, %258
  call void @llvm.trap()
  br label %273

; <label>:415:                                    ; preds = %332, %305
  %416 = landingpad { i8*, i32 }
          catch i8* null
  %417 = extractvalue { i8*, i32 } %416, 0
  call void @__clang_call_terminate(i8* %417) #10
  br label %332

; <label>:418:                                    ; preds = %376, %350
  br label %376
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPN7MaxFlow4edgeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPN7MaxFlow4edgeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8) %5, %"class.std::move_iterator"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = or i1 %9, %11
  %13 = xor i1 %7, true
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructIN7MaxFlow4edgeEJS1_EEvPT_DpOT0_(%"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"* dereferenceable(16)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.293
  %6 = load i32, i32* @y.294
  %7 = sub i32 %5, -2015115241
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -2015115241
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1334968665, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1334968665, label %19
    i32 -545383424, label %27
    i32 -669300267, label %52
    i32 -1335362584, label %53
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -545383424, i32 -1335362584
  store i32 %26, i32* %15
  br label %63

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.MaxFlow::edge"*, align 8
  %29 = alloca %"struct.MaxFlow::edge"*, align 8
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %28, align 8
  store %"struct.MaxFlow::edge"* %1, %"struct.MaxFlow::edge"** %29, align 8
  %30 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %28, align 8
  %31 = bitcast %"struct.MaxFlow::edge"* %30 to i8*
  %32 = bitcast i8* %31 to %"struct.MaxFlow::edge"*
  %33 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %29, align 8
  %34 = call dereferenceable(16) %"struct.MaxFlow::edge"* @_ZSt7forwardIN7MaxFlow4edgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.MaxFlow::edge"* dereferenceable(16) %33) #3
  %35 = bitcast %"struct.MaxFlow::edge"* %32 to i8*
  %36 = bitcast %"struct.MaxFlow::edge"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 16, i32 8, i1 false)
  %37 = load i32, i32* @x.293
  %38 = load i32, i32* @y.294
  %39 = add i32 %37, -1077239383
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, -1077239383
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 -669300267, i32 -1335362584
  store i32 %51, i32* %15
  br label %63

; <label>:52:                                     ; preds = %16
  ret void

; <label>:53:                                     ; preds = %16
  %54 = alloca %"struct.MaxFlow::edge"*, align 8
  %55 = alloca %"struct.MaxFlow::edge"*, align 8
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %54, align 8
  store %"struct.MaxFlow::edge"* %1, %"struct.MaxFlow::edge"** %55, align 8
  %56 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %54, align 8
  %57 = bitcast %"struct.MaxFlow::edge"* %56 to i8*
  %58 = bitcast i8* %57 to %"struct.MaxFlow::edge"*
  %59 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %55, align 8
  %60 = call dereferenceable(16) %"struct.MaxFlow::edge"* @_ZSt7forwardIN7MaxFlow4edgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.MaxFlow::edge"* dereferenceable(16) %59) #3
  %61 = bitcast %"struct.MaxFlow::edge"* %58 to i8*
  %62 = bitcast %"struct.MaxFlow::edge"* %60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %61, i8* %62, i64 16, i32 8, i1 false)
  store i32 -545383424, i32* %15
  br label %63

; <label>:63:                                     ; preds = %53, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.MaxFlow::edge"* @_ZNKSt13move_iteratorIPN7MaxFlow4edgeEEdeEv(%"class.std::move_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %4, align 8
  ret %"struct.MaxFlow::edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPN7MaxFlow4edgeEEppEv(%"class.std::move_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.297
  %6 = load i32, i32* @y.298
  %7 = add i32 %5, -1517732669
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1517732669
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -889060005, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %57
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -889060005, label %19
    i32 -1060777683, label %27
    i32 -311516938, label %49
    i32 -2032175004, label %51
  ]

; <label>:18:                                     ; preds = %16
  br label %57

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1060777683, i32 -2032175004
  store i32 %26, i32* %15
  br label %57

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %28, align 8
  %29 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %28, align 8
  store %"class.std::move_iterator"* %29, %"class.std::move_iterator"** %2
  %30 = load volatile %"class.std::move_iterator"*, %"class.std::move_iterator"** %2
  %31 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %30, i32 0, i32 0
  %32 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %31, align 8
  %33 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %32, i32 1
  store %"struct.MaxFlow::edge"* %33, %"struct.MaxFlow::edge"** %31, align 8
  %34 = load i32, i32* @x.297
  %35 = load i32, i32* @y.298
  %36 = sub i32 %34, -1901567173
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -1901567173
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -311516938, i32 -2032175004
  store i32 %48, i32* %15
  br label %57

; <label>:49:                                     ; preds = %16
  %50 = load volatile %"class.std::move_iterator"*, %"class.std::move_iterator"** %2
  ret %"class.std::move_iterator"* %50

; <label>:51:                                     ; preds = %16
  %52 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %52, align 8
  %53 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %52, align 8
  %54 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %53, i32 0, i32 0
  %55 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %54, align 8
  %56 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %55, i32 1
  store %"struct.MaxFlow::edge"* %56, %"struct.MaxFlow::edge"** %54, align 8
  store i32 -1060777683, i32* %15
  br label %57

; <label>:57:                                     ; preds = %51, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPN7MaxFlow4edgeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = call %"struct.MaxFlow::edge"* @_ZNKSt13move_iteratorIPN7MaxFlow4edgeEE4baseEv(%"class.std::move_iterator"* %5)
  %7 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %8 = call %"struct.MaxFlow::edge"* @_ZNKSt13move_iteratorIPN7MaxFlow4edgeEE4baseEv(%"class.std::move_iterator"* %7)
  %9 = icmp eq %"struct.MaxFlow::edge"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.MaxFlow::edge"* @_ZNKSt13move_iteratorIPN7MaxFlow4edgeEE4baseEv(%"class.std::move_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %4, align 8
  ret %"struct.MaxFlow::edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.MaxFlow::edge"* @_ZSt7forwardIN7MaxFlow4edgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.MaxFlow::edge"* dereferenceable(16)) #4 comdat {
  %2 = alloca %"struct.MaxFlow::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.303
  %6 = load i32, i32* @y.304
  %7 = sub i32 %5, -225661314
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -225661314
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -455333185, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -455333185, label %19
    i32 -2035783362, label %27
    i32 733984090, label %57
    i32 -836341176, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -2035783362, i32 -836341176
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.MaxFlow::edge"*, align 8
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %28, align 8
  %29 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %28, align 8
  store %"struct.MaxFlow::edge"* %29, %"struct.MaxFlow::edge"** %2
  %30 = load i32, i32* @x.303
  %31 = load i32, i32* @y.304
  %32 = sub i32 %30, -1088335065
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -1088335065
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 733984090, i32 -836341176
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %2
  ret %"struct.MaxFlow::edge"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"struct.MaxFlow::edge"*, align 8
  store %"struct.MaxFlow::edge"* %0, %"struct.MaxFlow::edge"** %60, align 8
  %61 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %60, align 8
  store i32 -2035783362, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPN7MaxFlow4edgeEEC2ES2_(%"class.std::move_iterator"*, %"struct.MaxFlow::edge"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"struct.MaxFlow::edge"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"struct.MaxFlow::edge"* %1, %"struct.MaxFlow::edge"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %4, align 8
  store %"struct.MaxFlow::edge"* %7, %"struct.MaxFlow::edge"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN7MaxFlow4edgeEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.6"*, %"struct.MaxFlow::edge"*) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %4 = alloca %"struct.MaxFlow::edge"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %3, align 8
  store %"struct.MaxFlow::edge"* %1, %"struct.MaxFlow::edge"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %3, align 8
  %6 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN7MaxFlow4edgeEEE9constructIS1_JRiRKxxEEEvRS2_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1), %"struct.MaxFlow::edge"*, i32* dereferenceable(4), i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %6 = alloca %"class.std::allocator.5"*, align 8
  %7 = alloca %"struct.MaxFlow::edge"*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i64*, align 8
  %10 = alloca i64*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %6, align 8
  store %"struct.MaxFlow::edge"* %1, %"struct.MaxFlow::edge"** %7, align 8
  store i32* %2, i32** %8, align 8
  store i64* %3, i64** %9, align 8
  store i64* %4, i64** %10, align 8
  %11 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %6, align 8
  %12 = bitcast %"class.std::allocator.5"* %11 to %"class.__gnu_cxx::new_allocator.6"*
  %13 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %7, align 8
  %14 = load i32*, i32** %8, align 8
  %15 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %14) #3
  %16 = load i64*, i64** %9, align 8
  %17 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %16) #3
  %18 = load i64*, i64** %10, align 8
  %19 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %18) #3
  call void @_ZN9__gnu_cxx13new_allocatorIN7MaxFlow4edgeEE9constructIS2_JRiRKxxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"* %12, %"struct.MaxFlow::edge"* %13, i32* dereferenceable(4) %15, i64* dereferenceable(8) %17, i64* dereferenceable(8) %19)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.311
  %6 = load i32, i32* @y.312
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -2014671829, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2014671829, label %18
    i32 1291918490, label %38
    i32 1599467167, label %56
    i32 226524829, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1291918490, i32 226524829
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca i64*, align 8
  store i64* %0, i64** %39, align 8
  %40 = load i64*, i64** %39, align 8
  store i64* %40, i64** %2
  %41 = load i32, i32* @x.311
  %42 = load i32, i32* @y.312
  %43 = add i32 %41, 989106156
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 989106156
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 1599467167, i32 226524829
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  %57 = load volatile i64*, i64** %2
  ret i64* %57

; <label>:58:                                     ; preds = %15
  %59 = alloca i64*, align 8
  store i64* %0, i64** %59, align 8
  %60 = load i64*, i64** %59, align 8
  store i32 1291918490, i32* %14
  br label %61

; <label>:61:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EE19_M_emplace_back_auxIJRiRKxxEEEvDpOT_(%"class.std::vector.3"*, i32* dereferenceable(4), i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.3"*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"struct.MaxFlow::edge"*, align 8
  %11 = alloca %"struct.MaxFlow::edge"*, align 8
  %12 = alloca i8*
  %13 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %5, align 8
  store i32* %1, i32** %6, align 8
  store i64* %2, i64** %7, align 8
  store i64* %3, i64** %8, align 8
  %14 = load %"class.std::vector.3"*, %"class.std::vector.3"** %5, align 8
  %15 = call i64 @_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.3"* %14, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i32 0, i32 0))
  store i64 %15, i64* %9, align 8
  %16 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %17 = load i64, i64* %9, align 8
  %18 = call %"struct.MaxFlow::edge"* @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.4"* %16, i64 %17)
  store %"struct.MaxFlow::edge"* %18, %"struct.MaxFlow::edge"** %10, align 8
  %19 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %10, align 8
  store %"struct.MaxFlow::edge"* %19, %"struct.MaxFlow::edge"** %11, align 8
  %20 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %21 to %"class.std::allocator.5"*
  %23 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %10, align 8
  %24 = call i64 @_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %14) #3
  %25 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %23, i64 %24
  %26 = load i32*, i32** %6, align 8
  %27 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %26) #3
  %28 = load i64*, i64** %7, align 8
  %29 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %28) #3
  %30 = load i64*, i64** %8, align 8
  %31 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %30) #3
  invoke void @_ZNSt16allocator_traitsISaIN7MaxFlow4edgeEEE9constructIS1_JRiRKxxEEEvRS2_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1) %22, %"struct.MaxFlow::edge"* %25, i32* dereferenceable(4) %27, i64* dereferenceable(8) %29, i64* dereferenceable(8) %31)
          to label %32 unwind label %89

; <label>:32:                                     ; preds = %4
  %33 = load i32, i32* @x.313
  %34 = load i32, i32* @y.314
  %35 = add i32 %33, -1054784047
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -1054784047
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %424

; <label>:59:                                     ; preds = %32, %424
  store %"struct.MaxFlow::edge"* null, %"struct.MaxFlow::edge"** %11, align 8
  %60 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %61 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %60, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %61, i32 0, i32 0
  %63 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %62, align 8
  %64 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %65 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %64, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %65, i32 0, i32 1
  %67 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %66, align 8
  %68 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %10, align 8
  %69 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %70 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %69) #3
  %71 = load i32, i32* @x.313
  %72 = load i32, i32* @y.314
  %73 = sub i32 0, 1
  %74 = add i32 %71, %73
  %75 = sub i32 %71, 1
  %76 = mul i32 %71, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %72, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  br i1 %82, label %84, label %424

; <label>:84:                                     ; preds = %59
  %85 = invoke %"struct.MaxFlow::edge"* @_ZSt34__uninitialized_move_if_noexcept_aIPN7MaxFlow4edgeES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.MaxFlow::edge"* %63, %"struct.MaxFlow::edge"* %67, %"struct.MaxFlow::edge"* %68, %"class.std::allocator.5"* dereferenceable(1) %70)
          to label %86 unwind label %89

; <label>:86:                                     ; preds = %84
  store %"struct.MaxFlow::edge"* %85, %"struct.MaxFlow::edge"** %11, align 8
  %87 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %11, align 8
  %88 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %87, i32 1
  store %"struct.MaxFlow::edge"* %88, %"struct.MaxFlow::edge"** %11, align 8
  br label %288

; <label>:89:                                     ; preds = %84, %4
  %90 = load i32, i32* @x.313
  %91 = load i32, i32* @y.314
  %92 = sub i32 %90, -815048184
  %93 = sub i32 %92, 1
  %94 = add i32 %93, -815048184
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = and i1 %98, %99
  %101 = xor i1 %98, %99
  %102 = or i1 %100, %101
  %103 = or i1 %98, %99
  br i1 %102, label %104, label %436

; <label>:104:                                    ; preds = %89, %436
  %105 = landingpad { i8*, i32 }
          catch i8* null
  %106 = extractvalue { i8*, i32 } %105, 0
  store i8* %106, i8** %12, align 8
  %107 = extractvalue { i8*, i32 } %105, 1
  store i32 %107, i32* %13, align 4
  %108 = load i32, i32* @x.313
  %109 = load i32, i32* @y.314
  %110 = sub i32 %108, 522456151
  %111 = sub i32 %110, 1
  %112 = add i32 %111, 522456151
  %113 = sub i32 %108, 1
  %114 = mul i32 %108, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %109, 10
  %118 = and i1 %116, %117
  %119 = xor i1 %116, %117
  %120 = or i1 %118, %119
  %121 = or i1 %116, %117
  br i1 %120, label %122, label %436

; <label>:122:                                    ; preds = %104
  br label %123

; <label>:123:                                    ; preds = %122
  %124 = load i32, i32* @x.313
  %125 = load i32, i32* @y.314
  %126 = sub i32 %124, 1477760829
  %127 = sub i32 %126, 1
  %128 = add i32 %127, 1477760829
  %129 = sub i32 %124, 1
  %130 = mul i32 %124, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %125, 10
  %134 = xor i1 %132, true
  %135 = xor i1 %133, true
  %136 = xor i1 true, true
  %137 = and i1 %134, true
  %138 = and i1 %132, %136
  %139 = and i1 %135, true
  %140 = and i1 %133, %136
  %141 = or i1 %137, %138
  %142 = or i1 %139, %140
  %143 = xor i1 %141, %142
  %144 = or i1 %134, %135
  %145 = xor i1 %144, true
  %146 = or i1 true, %136
  %147 = and i1 %145, %146
  %148 = or i1 %143, %147
  %149 = or i1 %132, %133
  br i1 %148, label %150, label %440

; <label>:150:                                    ; preds = %123, %440
  %151 = load i8*, i8** %12, align 8
  %152 = call i8* @__cxa_begin_catch(i8* %151) #3
  %153 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %11, align 8
  %154 = icmp ne %"struct.MaxFlow::edge"* %153, null
  %155 = load i32, i32* @x.313
  %156 = load i32, i32* @y.314
  %157 = sub i32 %155, 1314964663
  %158 = sub i32 %157, 1
  %159 = add i32 %158, 1314964663
  %160 = sub i32 %155, 1
  %161 = mul i32 %155, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %156, 10
  %165 = and i1 %163, %164
  %166 = xor i1 %163, %164
  %167 = or i1 %165, %166
  %168 = or i1 %163, %164
  br i1 %167, label %169, label %440

; <label>:169:                                    ; preds = %150
  br i1 %154, label %182, label %170

; <label>:170:                                    ; preds = %169
  %171 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %172 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %171, i32 0, i32 0
  %173 = bitcast %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %172 to %"class.std::allocator.5"*
  %174 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %10, align 8
  %175 = call i64 @_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %14) #3
  %176 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %174, i64 %175
  invoke void @_ZNSt16allocator_traitsISaIN7MaxFlow4edgeEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.5"* dereferenceable(1) %173, %"struct.MaxFlow::edge"* %176)
          to label %177 unwind label %178

; <label>:177:                                    ; preds = %170
  br label %229

; <label>:178:                                    ; preds = %233, %229, %227, %170
  %179 = landingpad { i8*, i32 }
          cleanup
  %180 = extractvalue { i8*, i32 } %179, 0
  store i8* %180, i8** %12, align 8
  %181 = extractvalue { i8*, i32 } %179, 1
  store i32 %181, i32* %13, align 4
  invoke void @__cxa_end_catch()
          to label %234 unwind label %380

; <label>:182:                                    ; preds = %169
  %183 = load i32, i32* @x.313
  %184 = load i32, i32* @y.314
  %185 = sub i32 0, 1
  %186 = add i32 %183, %185
  %187 = sub i32 %183, 1
  %188 = mul i32 %183, %186
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %184, 10
  %192 = xor i1 %190, true
  %193 = xor i1 %191, true
  %194 = xor i1 false, true
  %195 = and i1 %192, false
  %196 = and i1 %190, %194
  %197 = and i1 %193, false
  %198 = and i1 %191, %194
  %199 = or i1 %195, %196
  %200 = or i1 %197, %198
  %201 = xor i1 %199, %200
  %202 = or i1 %192, %193
  %203 = xor i1 %202, true
  %204 = or i1 false, %194
  %205 = and i1 %203, %204
  %206 = or i1 %201, %205
  %207 = or i1 %190, %191
  br i1 %206, label %208, label %445

; <label>:208:                                    ; preds = %182, %445
  %209 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %10, align 8
  %210 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %11, align 8
  %211 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %212 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %211) #3
  %213 = load i32, i32* @x.313
  %214 = load i32, i32* @y.314
  %215 = sub i32 %213, -1523560284
  %216 = sub i32 %215, 1
  %217 = add i32 %216, -1523560284
  %218 = sub i32 %213, 1
  %219 = mul i32 %213, %217
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %214, 10
  %223 = and i1 %221, %222
  %224 = xor i1 %221, %222
  %225 = or i1 %223, %224
  %226 = or i1 %221, %222
  br i1 %225, label %227, label %445

; <label>:227:                                    ; preds = %208
  invoke void @_ZSt8_DestroyIPN7MaxFlow4edgeES1_EvT_S3_RSaIT0_E(%"struct.MaxFlow::edge"* %209, %"struct.MaxFlow::edge"* %210, %"class.std::allocator.5"* dereferenceable(1) %212)
          to label %228 unwind label %178

; <label>:228:                                    ; preds = %227
  br label %229

; <label>:229:                                    ; preds = %228, %177
  %230 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %231 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %10, align 8
  %232 = load i64, i64* %9, align 8
  invoke void @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.4"* %230, %"struct.MaxFlow::edge"* %231, i64 %232)
          to label %233 unwind label %178

; <label>:233:                                    ; preds = %229
  invoke void @__cxa_rethrow() #12
          to label %423 unwind label %178

; <label>:234:                                    ; preds = %178
  %235 = load i32, i32* @x.313
  %236 = load i32, i32* @y.314
  %237 = sub i32 0, 1
  %238 = add i32 %235, %237
  %239 = sub i32 %235, 1
  %240 = mul i32 %235, %238
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %236, 10
  %244 = xor i1 %242, true
  %245 = xor i1 %243, true
  %246 = xor i1 false, true
  %247 = and i1 %244, false
  %248 = and i1 %242, %246
  %249 = and i1 %245, false
  %250 = and i1 %243, %246
  %251 = or i1 %247, %248
  %252 = or i1 %249, %250
  %253 = xor i1 %251, %252
  %254 = or i1 %244, %245
  %255 = xor i1 %254, true
  %256 = or i1 false, %246
  %257 = and i1 %255, %256
  %258 = or i1 %253, %257
  %259 = or i1 %242, %243
  br i1 %258, label %260, label %450

; <label>:260:                                    ; preds = %234, %450
  %261 = load i32, i32* @x.313
  %262 = load i32, i32* @y.314
  %263 = add i32 %261, 2074622471
  %264 = sub i32 %263, 1
  %265 = sub i32 %264, 2074622471
  %266 = sub i32 %261, 1
  %267 = mul i32 %261, %265
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %262, 10
  %271 = xor i1 %269, true
  %272 = xor i1 %270, true
  %273 = xor i1 false, true
  %274 = and i1 %271, false
  %275 = and i1 %269, %273
  %276 = and i1 %272, false
  %277 = and i1 %270, %273
  %278 = or i1 %274, %275
  %279 = or i1 %276, %277
  %280 = xor i1 %278, %279
  %281 = or i1 %271, %272
  %282 = xor i1 %281, true
  %283 = or i1 false, %273
  %284 = and i1 %282, %283
  %285 = or i1 %280, %284
  %286 = or i1 %269, %270
  br i1 %285, label %287, label %450

; <label>:287:                                    ; preds = %260
  br label %375

; <label>:288:                                    ; preds = %86
  %289 = load i32, i32* @x.313
  %290 = load i32, i32* @y.314
  %291 = add i32 %289, 943215522
  %292 = sub i32 %291, 1
  %293 = sub i32 %292, 943215522
  %294 = sub i32 %289, 1
  %295 = mul i32 %289, %293
  %296 = urem i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %290, 10
  %299 = and i1 %297, %298
  %300 = xor i1 %297, %298
  %301 = or i1 %299, %300
  %302 = or i1 %297, %298
  br i1 %301, label %303, label %451

; <label>:303:                                    ; preds = %288, %451
  %304 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %305 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %304, i32 0, i32 0
  %306 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %305, i32 0, i32 0
  %307 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %306, align 8
  %308 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %309 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %308, i32 0, i32 0
  %310 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %309, i32 0, i32 1
  %311 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %310, align 8
  %312 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %313 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %312) #3
  call void @_ZSt8_DestroyIPN7MaxFlow4edgeES1_EvT_S3_RSaIT0_E(%"struct.MaxFlow::edge"* %307, %"struct.MaxFlow::edge"* %311, %"class.std::allocator.5"* dereferenceable(1) %313)
  %314 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %315 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %316 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %315, i32 0, i32 0
  %317 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %316, i32 0, i32 0
  %318 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %317, align 8
  %319 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %320 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %319, i32 0, i32 0
  %321 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %320, i32 0, i32 2
  %322 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %321, align 8
  %323 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %324 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %323, i32 0, i32 0
  %325 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %324, i32 0, i32 0
  %326 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %325, align 8
  %327 = ptrtoint %"struct.MaxFlow::edge"* %322 to i64
  %328 = ptrtoint %"struct.MaxFlow::edge"* %326 to i64
  %329 = sub i64 %327, 8080905234941150214
  %330 = sub i64 %329, %328
  %331 = add i64 %330, 8080905234941150214
  %332 = sub i64 %327, %328
  %333 = sdiv exact i64 %331, 16
  call void @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.4"* %314, %"struct.MaxFlow::edge"* %318, i64 %333)
  %334 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %10, align 8
  %335 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %336 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %335, i32 0, i32 0
  %337 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %336, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %334, %"struct.MaxFlow::edge"** %337, align 8
  %338 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %11, align 8
  %339 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %340 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %339, i32 0, i32 0
  %341 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %340, i32 0, i32 1
  store %"struct.MaxFlow::edge"* %338, %"struct.MaxFlow::edge"** %341, align 8
  %342 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %10, align 8
  %343 = load i64, i64* %9, align 8
  %344 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %342, i64 %343
  %345 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %346 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %345, i32 0, i32 0
  %347 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %346, i32 0, i32 2
  store %"struct.MaxFlow::edge"* %344, %"struct.MaxFlow::edge"** %347, align 8
  %348 = load i32, i32* @x.313
  %349 = load i32, i32* @y.314
  %350 = sub i32 %348, 1653909819
  %351 = sub i32 %350, 1
  %352 = add i32 %351, 1653909819
  %353 = sub i32 %348, 1
  %354 = mul i32 %348, %352
  %355 = urem i32 %354, 2
  %356 = icmp eq i32 %355, 0
  %357 = icmp slt i32 %349, 10
  %358 = xor i1 %356, true
  %359 = xor i1 %357, true
  %360 = xor i1 true, true
  %361 = and i1 %358, true
  %362 = and i1 %356, %360
  %363 = and i1 %359, true
  %364 = and i1 %357, %360
  %365 = or i1 %361, %362
  %366 = or i1 %363, %364
  %367 = xor i1 %365, %366
  %368 = or i1 %358, %359
  %369 = xor i1 %368, true
  %370 = or i1 true, %360
  %371 = and i1 %369, %370
  %372 = or i1 %367, %371
  %373 = or i1 %356, %357
  br i1 %372, label %374, label %451

; <label>:374:                                    ; preds = %303
  ret void

; <label>:375:                                    ; preds = %287
  %376 = load i8*, i8** %12, align 8
  %377 = load i32, i32* %13, align 4
  %378 = insertvalue { i8*, i32 } undef, i8* %376, 0
  %379 = insertvalue { i8*, i32 } %378, i32 %377, 1
  resume { i8*, i32 } %379

; <label>:380:                                    ; preds = %178
  %381 = load i32, i32* @x.313
  %382 = load i32, i32* @y.314
  %383 = sub i32 0, 1
  %384 = add i32 %381, %383
  %385 = sub i32 %381, 1
  %386 = mul i32 %381, %384
  %387 = urem i32 %386, 2
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %382, 10
  %390 = xor i1 %388, true
  %391 = xor i1 %389, true
  %392 = xor i1 true, true
  %393 = and i1 %390, true
  %394 = and i1 %388, %392
  %395 = and i1 %391, true
  %396 = and i1 %389, %392
  %397 = or i1 %393, %394
  %398 = or i1 %395, %396
  %399 = xor i1 %397, %398
  %400 = or i1 %390, %391
  %401 = xor i1 %400, true
  %402 = or i1 true, %392
  %403 = and i1 %401, %402
  %404 = or i1 %399, %403
  %405 = or i1 %388, %389
  br i1 %404, label %406, label %544

; <label>:406:                                    ; preds = %380, %544
  %407 = landingpad { i8*, i32 }
          catch i8* null
  %408 = extractvalue { i8*, i32 } %407, 0
  call void @__clang_call_terminate(i8* %408) #10
  %409 = load i32, i32* @x.313
  %410 = load i32, i32* @y.314
  %411 = sub i32 0, 1
  %412 = add i32 %409, %411
  %413 = sub i32 %409, 1
  %414 = mul i32 %409, %412
  %415 = urem i32 %414, 2
  %416 = icmp eq i32 %415, 0
  %417 = icmp slt i32 %410, 10
  %418 = and i1 %416, %417
  %419 = xor i1 %416, %417
  %420 = or i1 %418, %419
  %421 = or i1 %416, %417
  br i1 %420, label %422, label %544

; <label>:422:                                    ; preds = %406
  unreachable

; <label>:423:                                    ; preds = %233
  unreachable

; <label>:424:                                    ; preds = %59, %32
  store %"struct.MaxFlow::edge"* null, %"struct.MaxFlow::edge"** %11, align 8
  %425 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %426 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %425, i32 0, i32 0
  %427 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %426, i32 0, i32 0
  %428 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %427, align 8
  %429 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %430 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %429, i32 0, i32 0
  %431 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %430, i32 0, i32 1
  %432 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %431, align 8
  %433 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %10, align 8
  %434 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %435 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %434) #3
  br label %59

; <label>:436:                                    ; preds = %104, %89
  %437 = landingpad { i8*, i32 }
          catch i8* null
  %438 = extractvalue { i8*, i32 } %437, 0
  store i8* %438, i8** %12, align 8
  %439 = extractvalue { i8*, i32 } %437, 1
  store i32 %439, i32* %13, align 4
  br label %104

; <label>:440:                                    ; preds = %150, %123
  %441 = load i8*, i8** %12, align 8
  %442 = call i8* @__cxa_begin_catch(i8* %441) #3
  %443 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %11, align 8
  %444 = icmp ne %"struct.MaxFlow::edge"* %443, null
  br label %150

; <label>:445:                                    ; preds = %208, %182
  %446 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %10, align 8
  %447 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %11, align 8
  %448 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %449 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %448) #3
  br label %208

; <label>:450:                                    ; preds = %260, %234
  br label %260

; <label>:451:                                    ; preds = %303, %288
  %452 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %453 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %452, i32 0, i32 0
  %454 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %453, i32 0, i32 0
  %455 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %454, align 8
  %456 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %457 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %456, i32 0, i32 0
  %458 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %457, i32 0, i32 1
  %459 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %458, align 8
  %460 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %461 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %460) #3
  call void @_ZSt8_DestroyIPN7MaxFlow4edgeES1_EvT_S3_RSaIT0_E(%"struct.MaxFlow::edge"* %455, %"struct.MaxFlow::edge"* %459, %"class.std::allocator.5"* dereferenceable(1) %461)
  %462 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %463 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %464 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %463, i32 0, i32 0
  %465 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %464, i32 0, i32 0
  %466 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %465, align 8
  %467 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %468 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %467, i32 0, i32 0
  %469 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %468, i32 0, i32 2
  %470 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %469, align 8
  %471 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %472 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %471, i32 0, i32 0
  %473 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %472, i32 0, i32 0
  %474 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %473, align 8
  %475 = ptrtoint %"struct.MaxFlow::edge"* %470 to i64
  %476 = ptrtoint %"struct.MaxFlow::edge"* %474 to i64
  %477 = shl i64 %475, %476
  %478 = sub i64 0, %476
  %479 = add i64 %475, %478
  %480 = sub i64 %475, %476
  %481 = mul i64 %479, %476
  %482 = sub i64 0, 6216238745563467581
  %483 = sub i64 %482, %475
  %484 = add i64 %483, 6216238745563467581
  %485 = sub i64 0, %475
  %486 = sub i64 %484, 1413539807773929730
  %487 = add i64 %486, %476
  %488 = add i64 %487, 1413539807773929730
  %489 = add i64 %484, %476
  %490 = shl i64 %475, %476
  %491 = add i64 0, 8088669083693425808
  %492 = sub i64 %491, %475
  %493 = sub i64 %492, 8088669083693425808
  %494 = sub i64 0, %475
  %495 = sub i64 %493, 5878574713880711658
  %496 = add i64 %495, %476
  %497 = add i64 %496, 5878574713880711658
  %498 = add i64 %493, %476
  %499 = sub i64 0, %476
  %500 = add i64 %475, %499
  %501 = sub i64 %475, %476
  %502 = shl i64 %500, 16
  %503 = add i64 %500, 6143809856564591455
  %504 = sub i64 %503, 16
  %505 = sub i64 %504, 6143809856564591455
  %506 = sub i64 %500, 16
  %507 = mul i64 %505, 16
  %508 = sub i64 %500, 9101133975676668422
  %509 = sub i64 %508, 16
  %510 = add i64 %509, 9101133975676668422
  %511 = sub i64 %500, 16
  %512 = mul i64 %510, 16
  %513 = add i64 0, 2344630047285306886
  %514 = sub i64 %513, %500
  %515 = sub i64 %514, 2344630047285306886
  %516 = sub i64 0, %500
  %517 = sub i64 0, 16
  %518 = sub i64 %515, %517
  %519 = add i64 %515, 16
  %520 = shl i64 %500, 16
  %521 = sub i64 0, %500
  %522 = add i64 0, %521
  %523 = sub i64 0, %500
  %524 = sub i64 %522, -4321214389415718399
  %525 = add i64 %524, 16
  %526 = add i64 %525, -4321214389415718399
  %527 = add i64 %522, 16
  %528 = shl i64 %500, 16
  %529 = sdiv exact i64 %500, 16
  call void @_ZNSt12_Vector_baseIN7MaxFlow4edgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.4"* %462, %"struct.MaxFlow::edge"* %466, i64 %529)
  %530 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %10, align 8
  %531 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %532 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %531, i32 0, i32 0
  %533 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %532, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %530, %"struct.MaxFlow::edge"** %533, align 8
  %534 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %11, align 8
  %535 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %536 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %535, i32 0, i32 0
  %537 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %536, i32 0, i32 1
  store %"struct.MaxFlow::edge"* %534, %"struct.MaxFlow::edge"** %537, align 8
  %538 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %10, align 8
  %539 = load i64, i64* %9, align 8
  %540 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %538, i64 %539
  %541 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %542 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %541, i32 0, i32 0
  %543 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %542, i32 0, i32 2
  store %"struct.MaxFlow::edge"* %540, %"struct.MaxFlow::edge"** %543, align 8
  br label %303

; <label>:544:                                    ; preds = %406, %380
  %545 = landingpad { i8*, i32 }
          catch i8* null
  %546 = extractvalue { i8*, i32 } %545, 0
  call void @__clang_call_terminate(i8* %546) #10
  br label %406
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN7MaxFlow4edgeEE9constructIS2_JRiRKxxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"*, %"struct.MaxFlow::edge"*, i32* dereferenceable(4), i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.315
  %9 = load i32, i32* @y.316
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -1151998489, i32* %17
  br label %18

; <label>:18:                                     ; preds = %5, %109
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1151998489, label %21
    i32 -1037659860, label %41
    i32 -1475367677, label %88
    i32 -1441005157, label %89
  ]

; <label>:20:                                     ; preds = %18
  br label %109

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1037659860, i32 -1441005157
  store i32 %40, i32* %17
  br label %109

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %43 = alloca %"struct.MaxFlow::edge"*, align 8
  %44 = alloca i32*, align 8
  %45 = alloca i64*, align 8
  %46 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %42, align 8
  store %"struct.MaxFlow::edge"* %1, %"struct.MaxFlow::edge"** %43, align 8
  store i32* %2, i32** %44, align 8
  store i64* %3, i64** %45, align 8
  store i64* %4, i64** %46, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %42, align 8
  %48 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %43, align 8
  %49 = bitcast %"struct.MaxFlow::edge"* %48 to i8*
  %50 = bitcast i8* %49 to %"struct.MaxFlow::edge"*
  %51 = load i32*, i32** %44, align 8
  %52 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %51) #3
  %53 = load i32, i32* %52, align 4
  %54 = load i64*, i64** %45, align 8
  %55 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %54) #3
  %56 = load i64, i64* %55, align 8
  %57 = load i64*, i64** %46, align 8
  %58 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %57) #3
  %59 = load i64, i64* %58, align 8
  %60 = trunc i64 %59 to i32
  call void @_ZN7MaxFlow4edgeC2Eixi(%"struct.MaxFlow::edge"* %50, i32 %53, i64 %56, i32 %60)
  %61 = load i32, i32* @x.315
  %62 = load i32, i32* @y.316
  %63 = sub i32 %61, 1819185758
  %64 = sub i32 %63, 1
  %65 = add i32 %64, 1819185758
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 true, true
  %74 = and i1 %71, true
  %75 = and i1 %69, %73
  %76 = and i1 %72, true
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 true, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  %87 = select i1 %85, i32 -1475367677, i32 -1441005157
  store i32 %87, i32* %17
  br label %109

; <label>:88:                                     ; preds = %18
  ret void

; <label>:89:                                     ; preds = %18
  %90 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %91 = alloca %"struct.MaxFlow::edge"*, align 8
  %92 = alloca i32*, align 8
  %93 = alloca i64*, align 8
  %94 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %90, align 8
  store %"struct.MaxFlow::edge"* %1, %"struct.MaxFlow::edge"** %91, align 8
  store i32* %2, i32** %92, align 8
  store i64* %3, i64** %93, align 8
  store i64* %4, i64** %94, align 8
  %95 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %90, align 8
  %96 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %91, align 8
  %97 = bitcast %"struct.MaxFlow::edge"* %96 to i8*
  %98 = bitcast i8* %97 to %"struct.MaxFlow::edge"*
  %99 = load i32*, i32** %92, align 8
  %100 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %99) #3
  %101 = load i32, i32* %100, align 4
  %102 = load i64*, i64** %93, align 8
  %103 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %102) #3
  %104 = load i64, i64* %103, align 8
  %105 = load i64*, i64** %94, align 8
  %106 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %105) #3
  %107 = load i64, i64* %106, align 8
  %108 = trunc i64 %107 to i32
  call void @_ZN7MaxFlow4edgeC2Eixi(%"struct.MaxFlow::edge"* %98, i32 %101, i64 %104, i32 %108)
  store i32 -1037659860, i32* %17
  br label %109

; <label>:109:                                    ; preds = %89, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN7MaxFlow3bfsEi(%struct.MaxFlow*, i32) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %struct.MaxFlow*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::vector.8", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::allocator.10", align 1
  %8 = alloca i8*
  %9 = alloca i32
  %10 = alloca %"class.std::queue", align 8
  %11 = alloca %"class.std::deque", align 8
  %12 = alloca i32, align 4
  %13 = alloca %"class.std::vector.3"*, align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %16 = alloca %"struct.MaxFlow::edge"*, align 8
  store %struct.MaxFlow* %0, %struct.MaxFlow** %3, align 8
  store i32 %1, i32* %4, align 4
  %17 = load %struct.MaxFlow*, %struct.MaxFlow** %3, align 8
  %18 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %17, i32 0, i32 5
  %19 = load i32, i32* %18, align 8
  %20 = sext i32 %19 to i64
  store i32 -1, i32* %6, align 4
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.10"* %7) #3
  invoke void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector.8"* %5, i64 %20, i32* dereferenceable(4) %6, %"class.std::allocator.10"* dereferenceable(1) %7)
          to label %21 unwind label %330

; <label>:21:                                     ; preds = %2
  %22 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %17, i32 0, i32 3
  %23 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIiSaIiEEaSEOS1_(%"class.std::vector.8"* %22, %"class.std::vector.8"* dereferenceable(24) %5) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.8"* %5) #3
  call void @_ZNSaIiED2Ev(%"class.std::allocator.10"* %7) #3
  call void @_ZNSt5dequeIiSaIiEEC2Ev(%"class.std::deque"* %11)
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEEC2EOS2_(%"class.std::queue"* %10, %"class.std::deque"* dereferenceable(80) %11)
          to label %24 unwind label %334

; <label>:24:                                     ; preds = %21
  %25 = load i32, i32* @x.317
  %26 = load i32, i32* @y.318
  %27 = sub i32 0, 1
  %28 = add i32 %25, %27
  %29 = sub i32 %25, 1
  %30 = mul i32 %25, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %26, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  br i1 %36, label %38, label %446

; <label>:38:                                     ; preds = %24, %446
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %11) #3
  %39 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %17, i32 0, i32 3
  %40 = load i32, i32* %4, align 4
  %41 = sext i32 %40 to i64
  %42 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %39, i64 %41) #3
  store i32 0, i32* %42, align 4
  %43 = load i32, i32* @x.317
  %44 = load i32, i32* @y.318
  %45 = add i32 %43, 2042620974
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 2042620974
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  br i1 %55, label %57, label %446

; <label>:57:                                     ; preds = %38
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEE4pushERKi(%"class.std::queue"* %10, i32* dereferenceable(4) %4)
          to label %58 unwind label %379

; <label>:58:                                     ; preds = %57
  br label %59

; <label>:59:                                     ; preds = %439, %58
  %60 = load i32, i32* @x.317
  %61 = load i32, i32* @y.318
  %62 = sub i32 %60, -2108444992
  %63 = sub i32 %62, 1
  %64 = add i32 %63, -2108444992
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 false, true
  %73 = and i1 %70, false
  %74 = and i1 %68, %72
  %75 = and i1 %71, false
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 false, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  br i1 %84, label %86, label %451

; <label>:86:                                     ; preds = %59, %451
  %87 = load i32, i32* @x.317
  %88 = load i32, i32* @y.318
  %89 = add i32 %87, -411651998
  %90 = sub i32 %89, 1
  %91 = sub i32 %90, -411651998
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 false, true
  %100 = and i1 %97, false
  %101 = and i1 %95, %99
  %102 = and i1 %98, false
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 false, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  br i1 %111, label %113, label %451

; <label>:113:                                    ; preds = %86
  %114 = invoke zeroext i1 @_ZNKSt5queueIiSt5dequeIiSaIiEEE5emptyEv(%"class.std::queue"* %10)
          to label %115 unwind label %379

; <label>:115:                                    ; preds = %113
  %116 = load i32, i32* @x.317
  %117 = load i32, i32* @y.318
  %118 = add i32 %116, -1633279073
  %119 = sub i32 %118, 1
  %120 = sub i32 %119, -1633279073
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = xor i1 %124, true
  %127 = xor i1 %125, true
  %128 = xor i1 true, true
  %129 = and i1 %126, true
  %130 = and i1 %124, %128
  %131 = and i1 %127, true
  %132 = and i1 %125, %128
  %133 = or i1 %129, %130
  %134 = or i1 %131, %132
  %135 = xor i1 %133, %134
  %136 = or i1 %126, %127
  %137 = xor i1 %136, true
  %138 = or i1 true, %128
  %139 = and i1 %137, %138
  %140 = or i1 %135, %139
  %141 = or i1 %124, %125
  br i1 %140, label %142, label %452

; <label>:142:                                    ; preds = %115, %452
  %143 = xor i1 %114, true
  %144 = and i1 true, %143
  %145 = xor i1 true, true
  %146 = and i1 %114, %145
  %147 = or i1 %144, %146
  %148 = xor i1 %114, true
  %149 = load i32, i32* @x.317
  %150 = load i32, i32* @y.318
  %151 = add i32 %149, 933493303
  %152 = sub i32 %151, 1
  %153 = sub i32 %152, 933493303
  %154 = sub i32 %149, 1
  %155 = mul i32 %149, %153
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %150, 10
  %159 = and i1 %157, %158
  %160 = xor i1 %157, %158
  %161 = or i1 %159, %160
  %162 = or i1 %157, %158
  br i1 %161, label %163, label %452

; <label>:163:                                    ; preds = %142
  br i1 %147, label %164, label %440

; <label>:164:                                    ; preds = %163
  %165 = invoke dereferenceable(4) i32* @_ZNSt5queueIiSt5dequeIiSaIiEEE5frontEv(%"class.std::queue"* %10)
          to label %166 unwind label %379

; <label>:166:                                    ; preds = %164
  %167 = load i32, i32* %165, align 4
  store i32 %167, i32* %12, align 4
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEE3popEv(%"class.std::queue"* %10)
          to label %168 unwind label %379

; <label>:168:                                    ; preds = %166
  %169 = load i32, i32* @x.317
  %170 = load i32, i32* @y.318
  %171 = sub i32 0, 1
  %172 = add i32 %169, %171
  %173 = sub i32 %169, 1
  %174 = mul i32 %169, %172
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %170, 10
  %178 = and i1 %176, %177
  %179 = xor i1 %176, %177
  %180 = or i1 %178, %179
  %181 = or i1 %176, %177
  br i1 %180, label %182, label %480

; <label>:182:                                    ; preds = %168, %480
  %183 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %17, i32 0, i32 2
  %184 = load i32, i32* %12, align 4
  %185 = sext i32 %184 to i64
  %186 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %183, i64 %185) #3
  store %"class.std::vector.3"* %186, %"class.std::vector.3"** %13, align 8
  %187 = load %"class.std::vector.3"*, %"class.std::vector.3"** %13, align 8
  %188 = call %"struct.MaxFlow::edge"* @_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EE5beginEv(%"class.std::vector.3"* %187) #3
  %189 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %14, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %188, %"struct.MaxFlow::edge"** %189, align 8
  %190 = load %"class.std::vector.3"*, %"class.std::vector.3"** %13, align 8
  %191 = call %"struct.MaxFlow::edge"* @_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EE3endEv(%"class.std::vector.3"* %190) #3
  %192 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %15, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %191, %"struct.MaxFlow::edge"** %192, align 8
  %193 = load i32, i32* @x.317
  %194 = load i32, i32* @y.318
  %195 = sub i32 %193, -1101696052
  %196 = sub i32 %195, 1
  %197 = add i32 %196, -1101696052
  %198 = sub i32 %193, 1
  %199 = mul i32 %193, %197
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %194, 10
  %203 = and i1 %201, %202
  %204 = xor i1 %201, %202
  %205 = or i1 %203, %204
  %206 = or i1 %201, %202
  br i1 %205, label %207, label %480

; <label>:207:                                    ; preds = %182
  br label %208

; <label>:208:                                    ; preds = %438, %207
  %209 = load i32, i32* @x.317
  %210 = load i32, i32* @y.318
  %211 = sub i32 %209, -877729353
  %212 = sub i32 %211, 1
  %213 = add i32 %212, -877729353
  %214 = sub i32 %209, 1
  %215 = mul i32 %209, %213
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %210, 10
  %219 = xor i1 %217, true
  %220 = xor i1 %218, true
  %221 = xor i1 false, true
  %222 = and i1 %219, false
  %223 = and i1 %217, %221
  %224 = and i1 %220, false
  %225 = and i1 %218, %221
  %226 = or i1 %222, %223
  %227 = or i1 %224, %225
  %228 = xor i1 %226, %227
  %229 = or i1 %219, %220
  %230 = xor i1 %229, true
  %231 = or i1 false, %221
  %232 = and i1 %230, %231
  %233 = or i1 %228, %232
  %234 = or i1 %217, %218
  br i1 %233, label %235, label %491

; <label>:235:                                    ; preds = %208, %491
  %236 = call zeroext i1 @_ZN9__gnu_cxxneIPN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator.13"* dereferenceable(8) %14, %"class.__gnu_cxx::__normal_iterator.13"* dereferenceable(8) %15) #3
  %237 = load i32, i32* @x.317
  %238 = load i32, i32* @y.318
  %239 = sub i32 %237, 526232291
  %240 = sub i32 %239, 1
  %241 = add i32 %240, 526232291
  %242 = sub i32 %237, 1
  %243 = mul i32 %237, %241
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %238, 10
  %247 = xor i1 %245, true
  %248 = xor i1 %246, true
  %249 = xor i1 false, true
  %250 = and i1 %247, false
  %251 = and i1 %245, %249
  %252 = and i1 %248, false
  %253 = and i1 %246, %249
  %254 = or i1 %250, %251
  %255 = or i1 %252, %253
  %256 = xor i1 %254, %255
  %257 = or i1 %247, %248
  %258 = xor i1 %257, true
  %259 = or i1 false, %249
  %260 = and i1 %258, %259
  %261 = or i1 %256, %260
  %262 = or i1 %245, %246
  br i1 %261, label %263, label %491

; <label>:263:                                    ; preds = %235
  br i1 %236, label %264, label %439

; <label>:264:                                    ; preds = %263
  %265 = call dereferenceable(16) %"struct.MaxFlow::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.13"* %14) #3
  store %"struct.MaxFlow::edge"* %265, %"struct.MaxFlow::edge"** %16, align 8
  %266 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %16, align 8
  %267 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %266, i32 0, i32 2
  %268 = load i64, i64* %267, align 8
  %269 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %17, i32 0, i32 0
  %270 = load i64, i64* %269, align 8
  %271 = icmp sgt i64 %268, %270
  br i1 %271, label %272, label %383

; <label>:272:                                    ; preds = %264
  %273 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %17, i32 0, i32 3
  %274 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %16, align 8
  %275 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %274, i32 0, i32 0
  %276 = load i32, i32* %275, align 8
  %277 = sext i32 %276 to i64
  %278 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %273, i64 %277) #3
  %279 = load i32, i32* %278, align 4
  %280 = icmp slt i32 %279, 0
  br i1 %280, label %281, label %383

; <label>:281:                                    ; preds = %272
  %282 = load i32, i32* @x.317
  %283 = load i32, i32* @y.318
  %284 = sub i32 0, 1
  %285 = add i32 %282, %284
  %286 = sub i32 %282, 1
  %287 = mul i32 %282, %285
  %288 = urem i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %283, 10
  %291 = and i1 %289, %290
  %292 = xor i1 %289, %290
  %293 = or i1 %291, %292
  %294 = or i1 %289, %290
  br i1 %293, label %295, label %493

; <label>:295:                                    ; preds = %281, %493
  %296 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %17, i32 0, i32 3
  %297 = load i32, i32* %12, align 4
  %298 = sext i32 %297 to i64
  %299 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %296, i64 %298) #3
  %300 = load i32, i32* %299, align 4
  %301 = sub i32 0, %300
  %302 = sub i32 0, 1
  %303 = add i32 %301, %302
  %304 = sub i32 0, %303
  %305 = add nsw i32 %300, 1
  %306 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %17, i32 0, i32 3
  %307 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %16, align 8
  %308 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %307, i32 0, i32 0
  %309 = load i32, i32* %308, align 8
  %310 = sext i32 %309 to i64
  %311 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %306, i64 %310) #3
  store i32 %304, i32* %311, align 4
  %312 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %16, align 8
  %313 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %312, i32 0, i32 0
  %314 = load i32, i32* @x.317
  %315 = load i32, i32* @y.318
  %316 = add i32 %314, 1088752396
  %317 = sub i32 %316, 1
  %318 = sub i32 %317, 1088752396
  %319 = sub i32 %314, 1
  %320 = mul i32 %314, %318
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %315, 10
  %324 = and i1 %322, %323
  %325 = xor i1 %322, %323
  %326 = or i1 %324, %325
  %327 = or i1 %322, %323
  br i1 %326, label %328, label %493

; <label>:328:                                    ; preds = %295
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEE4pushERKi(%"class.std::queue"* %10, i32* dereferenceable(4) %313)
          to label %329 unwind label %379

; <label>:329:                                    ; preds = %328
  br label %383

; <label>:330:                                    ; preds = %2
  %331 = landingpad { i8*, i32 }
          cleanup
  %332 = extractvalue { i8*, i32 } %331, 0
  store i8* %332, i8** %8, align 8
  %333 = extractvalue { i8*, i32 } %331, 1
  store i32 %333, i32* %9, align 4
  call void @_ZNSaIiED2Ev(%"class.std::allocator.10"* %7) #3
  br label %441

; <label>:334:                                    ; preds = %21
  %335 = load i32, i32* @x.317
  %336 = load i32, i32* @y.318
  %337 = add i32 %335, -556194474
  %338 = sub i32 %337, 1
  %339 = sub i32 %338, -556194474
  %340 = sub i32 %335, 1
  %341 = mul i32 %335, %339
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %336, 10
  %345 = and i1 %343, %344
  %346 = xor i1 %343, %344
  %347 = or i1 %345, %346
  %348 = or i1 %343, %344
  br i1 %347, label %349, label %517

; <label>:349:                                    ; preds = %334, %517
  %350 = landingpad { i8*, i32 }
          cleanup
  %351 = extractvalue { i8*, i32 } %350, 0
  store i8* %351, i8** %8, align 8
  %352 = extractvalue { i8*, i32 } %350, 1
  store i32 %352, i32* %9, align 4
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %11) #3
  %353 = load i32, i32* @x.317
  %354 = load i32, i32* @y.318
  %355 = sub i32 0, 1
  %356 = add i32 %353, %355
  %357 = sub i32 %353, 1
  %358 = mul i32 %353, %356
  %359 = urem i32 %358, 2
  %360 = icmp eq i32 %359, 0
  %361 = icmp slt i32 %354, 10
  %362 = xor i1 %360, true
  %363 = xor i1 %361, true
  %364 = xor i1 true, true
  %365 = and i1 %362, true
  %366 = and i1 %360, %364
  %367 = and i1 %363, true
  %368 = and i1 %361, %364
  %369 = or i1 %365, %366
  %370 = or i1 %367, %368
  %371 = xor i1 %369, %370
  %372 = or i1 %362, %363
  %373 = xor i1 %372, true
  %374 = or i1 true, %364
  %375 = and i1 %373, %374
  %376 = or i1 %371, %375
  %377 = or i1 %360, %361
  br i1 %376, label %378, label %517

; <label>:378:                                    ; preds = %349
  br label %441

; <label>:379:                                    ; preds = %328, %166, %164, %113, %57
  %380 = landingpad { i8*, i32 }
          cleanup
  %381 = extractvalue { i8*, i32 } %380, 0
  store i8* %381, i8** %8, align 8
  %382 = extractvalue { i8*, i32 } %380, 1
  store i32 %382, i32* %9, align 4
  call void @_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev(%"class.std::queue"* %10) #3
  br label %441

; <label>:383:                                    ; preds = %329, %272, %264
  br label %384

; <label>:384:                                    ; preds = %383
  %385 = load i32, i32* @x.317
  %386 = load i32, i32* @y.318
  %387 = add i32 %385, 2145043465
  %388 = sub i32 %387, 1
  %389 = sub i32 %388, 2145043465
  %390 = sub i32 %385, 1
  %391 = mul i32 %385, %389
  %392 = urem i32 %391, 2
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %386, 10
  %395 = xor i1 %393, true
  %396 = xor i1 %394, true
  %397 = xor i1 false, true
  %398 = and i1 %395, false
  %399 = and i1 %393, %397
  %400 = and i1 %396, false
  %401 = and i1 %394, %397
  %402 = or i1 %398, %399
  %403 = or i1 %400, %401
  %404 = xor i1 %402, %403
  %405 = or i1 %395, %396
  %406 = xor i1 %405, true
  %407 = or i1 false, %397
  %408 = and i1 %406, %407
  %409 = or i1 %404, %408
  %410 = or i1 %393, %394
  br i1 %409, label %411, label %521

; <label>:411:                                    ; preds = %384, %521
  %412 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.13"* @_ZN9__gnu_cxx17__normal_iteratorIPN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator.13"* %14) #3
  %413 = load i32, i32* @x.317
  %414 = load i32, i32* @y.318
  %415 = sub i32 0, 1
  %416 = add i32 %413, %415
  %417 = sub i32 %413, 1
  %418 = mul i32 %413, %416
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %414, 10
  %422 = xor i1 %420, true
  %423 = xor i1 %421, true
  %424 = xor i1 true, true
  %425 = and i1 %422, true
  %426 = and i1 %420, %424
  %427 = and i1 %423, true
  %428 = and i1 %421, %424
  %429 = or i1 %425, %426
  %430 = or i1 %427, %428
  %431 = xor i1 %429, %430
  %432 = or i1 %422, %423
  %433 = xor i1 %432, true
  %434 = or i1 true, %424
  %435 = and i1 %433, %434
  %436 = or i1 %431, %435
  %437 = or i1 %420, %421
  br i1 %436, label %438, label %521

; <label>:438:                                    ; preds = %411
  br label %208

; <label>:439:                                    ; preds = %263
  br label %59

; <label>:440:                                    ; preds = %163
  call void @_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev(%"class.std::queue"* %10) #3
  ret void

; <label>:441:                                    ; preds = %379, %378, %330
  %442 = load i8*, i8** %8, align 8
  %443 = load i32, i32* %9, align 4
  %444 = insertvalue { i8*, i32 } undef, i8* %442, 0
  %445 = insertvalue { i8*, i32 } %444, i32 %443, 1
  resume { i8*, i32 } %445

; <label>:446:                                    ; preds = %38, %24
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %11) #3
  %447 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %17, i32 0, i32 3
  %448 = load i32, i32* %4, align 4
  %449 = sext i32 %448 to i64
  %450 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %447, i64 %449) #3
  store i32 0, i32* %450, align 4
  br label %38

; <label>:451:                                    ; preds = %86, %59
  br label %86

; <label>:452:                                    ; preds = %142, %115
  %453 = shl i1 %114, true
  %454 = shl i1 %114, true
  %455 = shl i1 %114, true
  %456 = add i1 %114, true
  %457 = sub i1 %456, true
  %458 = sub i1 %457, true
  %459 = sub i1 %114, true
  %460 = mul i1 %458, true
  %461 = add i1 false, false
  %462 = sub i1 %461, %114
  %463 = sub i1 %462, false
  %464 = sub i1 false, %114
  %465 = add i1 %463, false
  %466 = add i1 %465, true
  %467 = sub i1 %466, false
  %468 = add i1 %463, true
  %469 = xor i1 %114, true
  %470 = and i1 false, %469
  %471 = xor i1 false, true
  %472 = and i1 %114, %471
  %473 = xor i1 true, true
  %474 = and i1 %473, false
  %475 = and i1 true, %471
  %476 = or i1 %470, %472
  %477 = or i1 %474, %475
  %478 = xor i1 %476, %477
  %479 = xor i1 %114, true
  br label %142

; <label>:480:                                    ; preds = %182, %168
  %481 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %17, i32 0, i32 2
  %482 = load i32, i32* %12, align 4
  %483 = sext i32 %482 to i64
  %484 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %481, i64 %483) #3
  store %"class.std::vector.3"* %484, %"class.std::vector.3"** %13, align 8
  %485 = load %"class.std::vector.3"*, %"class.std::vector.3"** %13, align 8
  %486 = call %"struct.MaxFlow::edge"* @_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EE5beginEv(%"class.std::vector.3"* %485) #3
  %487 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %14, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %486, %"struct.MaxFlow::edge"** %487, align 8
  %488 = load %"class.std::vector.3"*, %"class.std::vector.3"** %13, align 8
  %489 = call %"struct.MaxFlow::edge"* @_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EE3endEv(%"class.std::vector.3"* %488) #3
  %490 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %15, i32 0, i32 0
  store %"struct.MaxFlow::edge"* %489, %"struct.MaxFlow::edge"** %490, align 8
  br label %182

; <label>:491:                                    ; preds = %235, %208
  %492 = call zeroext i1 @_ZN9__gnu_cxxneIPN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator.13"* dereferenceable(8) %14, %"class.__gnu_cxx::__normal_iterator.13"* dereferenceable(8) %15) #3
  br label %235

; <label>:493:                                    ; preds = %295, %281
  %494 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %17, i32 0, i32 3
  %495 = load i32, i32* %12, align 4
  %496 = sext i32 %495 to i64
  %497 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %494, i64 %496) #3
  %498 = load i32, i32* %497, align 4
  %499 = shl i32 %498, 1
  %500 = sub i32 0, 1
  %501 = add i32 %498, %500
  %502 = sub i32 %498, 1
  %503 = mul i32 %501, 1
  %504 = sub i32 0, %498
  %505 = sub i32 0, 1
  %506 = add i32 %504, %505
  %507 = sub i32 0, %506
  %508 = add nsw i32 %498, 1
  %509 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %17, i32 0, i32 3
  %510 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %16, align 8
  %511 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %510, i32 0, i32 0
  %512 = load i32, i32* %511, align 8
  %513 = sext i32 %512 to i64
  %514 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %509, i64 %513) #3
  store i32 %507, i32* %514, align 4
  %515 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %16, align 8
  %516 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %515, i32 0, i32 0
  br label %295

; <label>:517:                                    ; preds = %349, %334
  %518 = landingpad { i8*, i32 }
          cleanup
  %519 = extractvalue { i8*, i32 } %518, 0
  store i8* %519, i8** %8, align 8
  %520 = extractvalue { i8*, i32 } %518, 1
  store i32 %520, i32* %9, align 4
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %11) #3
  br label %349

; <label>:521:                                    ; preds = %411, %384
  %522 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.13"* @_ZN9__gnu_cxx17__normal_iteratorIPN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator.13"* %14) #3
  br label %411
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"*, i64) #4 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.319
  %7 = load i32, i32* @y.320
  %8 = add i32 %6, -255283704
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -255283704
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -303984142, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %89
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -303984142, label %20
    i32 346764151, label %40
    i32 2109117413, label %77
    i32 745511745, label %79
  ]

; <label>:19:                                     ; preds = %17
  br label %89

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 346764151, i32 745511745
  store i32 %39, i32* %16
  br label %89

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector.8"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %41, align 8
  store i64 %1, i64* %42, align 8
  %43 = load %"class.std::vector.8"*, %"class.std::vector.8"** %41, align 8
  %44 = bitcast %"class.std::vector.8"* %43 to %"struct.std::_Vector_base.9"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %45, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  %48 = load i64, i64* %42, align 8
  %49 = getelementptr inbounds i32, i32* %47, i64 %48
  store i32* %49, i32** %3
  %50 = load i32, i32* @x.319
  %51 = load i32, i32* @y.320
  %52 = sub i32 %50, 377187152
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 377187152
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 2109117413, i32 745511745
  store i32 %76, i32* %16
  br label %89

; <label>:77:                                     ; preds = %17
  %78 = load volatile i32*, i32** %3
  ret i32* %78

; <label>:79:                                     ; preds = %17
  %80 = alloca %"class.std::vector.8"*, align 8
  %81 = alloca i64, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %80, align 8
  store i64 %1, i64* %81, align 8
  %82 = load %"class.std::vector.8"*, %"class.std::vector.8"** %80, align 8
  %83 = bitcast %"class.std::vector.8"* %82 to %"struct.std::_Vector_base.9"*
  %84 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %83, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %84, i32 0, i32 0
  %86 = load i32*, i32** %85, align 8
  %87 = load i64, i64* %81, align 8
  %88 = getelementptr inbounds i32, i32* %86, i64 %87
  store i32 346764151, i32* %16
  br label %89

; <label>:89:                                     ; preds = %79, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2Ev(%"class.std::allocator.10"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.321
  %5 = load i32, i32* @y.322
  %6 = sub i32 %4, 2146078932
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 2146078932
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1618611450, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1618611450, label %18
    i32 -220397521, label %38
    i32 -1886334921, label %57
    i32 801252582, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -220397521, i32 801252582
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %39, align 8
  %40 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %39, align 8
  %41 = bitcast %"class.std::allocator.10"* %40 to %"class.__gnu_cxx::new_allocator.11"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.11"* %41) #3
  %42 = load i32, i32* @x.321
  %43 = load i32, i32* @y.322
  %44 = sub i32 %42, 945234440
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 945234440
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1886334921, i32 801252582
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %59, align 8
  %60 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %59, align 8
  %61 = bitcast %"class.std::allocator.10"* %60 to %"class.__gnu_cxx::new_allocator.11"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.11"* %61) #3
  store i32 -220397521, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector.8"*, i64, i32* dereferenceable(4), %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.323
  %6 = load i32, i32* @y.324
  %7 = add i32 %5, -2115438568
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -2115438568
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %6, 10
  %15 = and i1 %13, %14
  %16 = xor i1 %13, %14
  %17 = or i1 %15, %16
  %18 = or i1 %13, %14
  br i1 %17, label %19, label %100

; <label>:19:                                     ; preds = %4, %100
  %20 = alloca %"class.std::vector.8"*, align 8
  %21 = alloca i64, align 8
  %22 = alloca i32*, align 8
  %23 = alloca %"class.std::allocator.10"*, align 8
  %24 = alloca i8*
  %25 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %20, align 8
  store i64 %1, i64* %21, align 8
  store i32* %2, i32** %22, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %23, align 8
  %26 = load %"class.std::vector.8"*, %"class.std::vector.8"** %20, align 8
  %27 = bitcast %"class.std::vector.8"* %26 to %"struct.std::_Vector_base.9"*
  %28 = load i64, i64* %21, align 8
  %29 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %23, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.9"* %27, i64 %28, %"class.std::allocator.10"* dereferenceable(1) %29)
  %30 = load i64, i64* %21, align 8
  %31 = load i32*, i32** %22, align 8
  %32 = load i32, i32* @x.323
  %33 = load i32, i32* @y.324
  %34 = add i32 %32, 258357398
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 258357398
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %100

; <label>:46:                                     ; preds = %19
  invoke void @_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi(%"class.std::vector.8"* %26, i64 %30, i32* dereferenceable(4) %31)
          to label %47 unwind label %48

; <label>:47:                                     ; preds = %46
  ret void

; <label>:48:                                     ; preds = %46
  %49 = load i32, i32* @x.323
  %50 = load i32, i32* @y.324
  %51 = sub i32 %49, 1476576338
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 1476576338
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  br i1 %61, label %63, label %113

; <label>:63:                                     ; preds = %48, %113
  %64 = landingpad { i8*, i32 }
          cleanup
  %65 = extractvalue { i8*, i32 } %64, 0
  store i8* %65, i8** %24, align 8
  %66 = extractvalue { i8*, i32 } %64, 1
  store i32 %66, i32* %25, align 4
  %67 = bitcast %"class.std::vector.8"* %26 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.9"* %67) #3
  %68 = load i32, i32* @x.323
  %69 = load i32, i32* @y.324
  %70 = add i32 %68, 1105617970
  %71 = sub i32 %70, 1
  %72 = sub i32 %71, 1105617970
  %73 = sub i32 %68, 1
  %74 = mul i32 %68, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %69, 10
  %78 = xor i1 %76, true
  %79 = xor i1 %77, true
  %80 = xor i1 false, true
  %81 = and i1 %78, false
  %82 = and i1 %76, %80
  %83 = and i1 %79, false
  %84 = and i1 %77, %80
  %85 = or i1 %81, %82
  %86 = or i1 %83, %84
  %87 = xor i1 %85, %86
  %88 = or i1 %78, %79
  %89 = xor i1 %88, true
  %90 = or i1 false, %80
  %91 = and i1 %89, %90
  %92 = or i1 %87, %91
  %93 = or i1 %76, %77
  br i1 %92, label %94, label %113

; <label>:94:                                     ; preds = %63
  br label %95

; <label>:95:                                     ; preds = %94
  %96 = load i8*, i8** %24, align 8
  %97 = load i32, i32* %25, align 4
  %98 = insertvalue { i8*, i32 } undef, i8* %96, 0
  %99 = insertvalue { i8*, i32 } %98, i32 %97, 1
  resume { i8*, i32 } %99

; <label>:100:                                    ; preds = %19, %4
  %101 = alloca %"class.std::vector.8"*, align 8
  %102 = alloca i64, align 8
  %103 = alloca i32*, align 8
  %104 = alloca %"class.std::allocator.10"*, align 8
  %105 = alloca i8*
  %106 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %101, align 8
  store i64 %1, i64* %102, align 8
  store i32* %2, i32** %103, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %104, align 8
  %107 = load %"class.std::vector.8"*, %"class.std::vector.8"** %101, align 8
  %108 = bitcast %"class.std::vector.8"* %107 to %"struct.std::_Vector_base.9"*
  %109 = load i64, i64* %102, align 8
  %110 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %104, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.9"* %108, i64 %109, %"class.std::allocator.10"* dereferenceable(1) %110)
  %111 = load i64, i64* %102, align 8
  %112 = load i32*, i32** %103, align 8
  br label %19

; <label>:113:                                    ; preds = %63, %48
  %114 = landingpad { i8*, i32 }
          cleanup
  %115 = extractvalue { i8*, i32 } %114, 0
  store i8* %115, i8** %24, align 8
  %116 = extractvalue { i8*, i32 } %114, 1
  store i32 %116, i32* %25, align 4
  %117 = bitcast %"class.std::vector.8"* %26 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.9"* %117) #3
  br label %63
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIiSaIiEEaSEOS1_(%"class.std::vector.8"*, %"class.std::vector.8"* dereferenceable(24)) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca i8, align 1
  %6 = alloca %"struct.std::integral_constant", align 1
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %4, align 8
  %7 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  store i8 1, i8* %5, align 1
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector.8"* @_ZSt4moveIRSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::vector.8"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIiSaIiEE14_M_move_assignEOS1_St17integral_constantIbLb1EE(%"class.std::vector.8"* %7, %"class.std::vector.8"* dereferenceable(24) %9) #3
  ret %"class.std::vector.8"* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiED2Ev(%"class.std::allocator.10"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %2, align 8
  %3 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %2, align 8
  %4 = bitcast %"class.std::allocator.10"* %3 to %"class.__gnu_cxx::new_allocator.11"*
  call void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.11"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN7MaxFlow3dfsEiix(%struct.MaxFlow*, i32, i32, i64) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca i32
  %8 = alloca i32
  %9 = alloca %struct.MaxFlow*
  %10 = alloca i64, align 8
  %11 = alloca %struct.MaxFlow*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  %15 = alloca i32*, align 8
  %16 = alloca %"struct.MaxFlow::edge"*, align 8
  %17 = alloca i64, align 8
  store %struct.MaxFlow* %0, %struct.MaxFlow** %11, align 8
  store i32 %1, i32* %12, align 4
  store i32 %2, i32* %13, align 4
  store i64 %3, i64* %14, align 8
  %18 = load %struct.MaxFlow*, %struct.MaxFlow** %11, align 8
  store %struct.MaxFlow* %18, %struct.MaxFlow** %9
  %19 = load i32, i32* %12, align 4
  store i32 %19, i32* %8
  %20 = load i32, i32* %13, align 4
  store i32 %20, i32* %7
  %21 = alloca i32
  store i32 -911203744, i32* %21
  br label %22

; <label>:22:                                     ; preds = %4, %336
  %23 = load i32, i32* %21
  switch i32 %23, label %24 [
    i32 -911203744, label %25
    i32 -727283823, label %30
    i32 -1366784099, label %32
    i32 -101285689, label %38
    i32 -1817152239, label %50
    i32 639798213, label %68
    i32 1906383181, label %83
    i32 855834341, label %118
    i32 -1635903539, label %121
    i32 333601567, label %148
    i32 86669944, label %179
    i32 541435807, label %182
    i32 -1658091646, label %210
    i32 -1290939589, label %211
    i32 -1620966274, label %239
    i32 -1178658263, label %266
    i32 1031669843, label %267
    i32 183098219, label %274
    i32 1550642795, label %278
    i32 1872617216, label %280
    i32 -152533464, label %319
    i32 -2010123463, label %335
  ]

; <label>:24:                                     ; preds = %22
  br label %336

; <label>:25:                                     ; preds = %22
  %26 = load volatile i32, i32* %8
  %27 = load volatile i32, i32* %7
  %28 = icmp eq i32 %26, %27
  %29 = select i1 %28, i32 -727283823, i32 -1366784099
  store i32 %29, i32* %21
  br label %336

; <label>:30:                                     ; preds = %22
  %31 = load i64, i64* %14, align 8
  store i64 %31, i64* %10, align 8
  store i32 1550642795, i32* %21
  br label %336

; <label>:32:                                     ; preds = %22
  %33 = load volatile %struct.MaxFlow*, %struct.MaxFlow** %9
  %34 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %33, i32 0, i32 4
  %35 = load i32, i32* %12, align 4
  %36 = sext i32 %35 to i64
  %37 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %34, i64 %36) #3
  store i32* %37, i32** %15, align 8
  store i32 -101285689, i32* %21
  br label %336

; <label>:38:                                     ; preds = %22
  %39 = load i32*, i32** %15, align 8
  %40 = load i32, i32* %39, align 4
  %41 = sext i32 %40 to i64
  %42 = load volatile %struct.MaxFlow*, %struct.MaxFlow** %9
  %43 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %42, i32 0, i32 2
  %44 = load i32, i32* %12, align 4
  %45 = sext i32 %44 to i64
  %46 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %43, i64 %45) #3
  %47 = call i64 @_ZNKSt6vectorIN7MaxFlow4edgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %46) #3
  %48 = icmp ult i64 %41, %47
  %49 = select i1 %48, i32 -1817152239, i32 183098219
  store i32 %49, i32* %21
  br label %336

; <label>:50:                                     ; preds = %22
  %51 = load volatile %struct.MaxFlow*, %struct.MaxFlow** %9
  %52 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %51, i32 0, i32 2
  %53 = load i32, i32* %12, align 4
  %54 = sext i32 %53 to i64
  %55 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %52, i64 %54) #3
  %56 = load i32*, i32** %15, align 8
  %57 = load i32, i32* %56, align 4
  %58 = sext i32 %57 to i64
  %59 = call dereferenceable(16) %"struct.MaxFlow::edge"* @_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EEixEm(%"class.std::vector.3"* %55, i64 %58) #3
  store %"struct.MaxFlow::edge"* %59, %"struct.MaxFlow::edge"** %16, align 8
  %60 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %16, align 8
  %61 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %60, i32 0, i32 2
  %62 = load i64, i64* %61, align 8
  %63 = load volatile %struct.MaxFlow*, %struct.MaxFlow** %9
  %64 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %63, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = icmp sgt i64 %62, %65
  %67 = select i1 %66, i32 639798213, i32 -1290939589
  store i32 %67, i32* %21
  br label %336

; <label>:68:                                     ; preds = %22
  %69 = load i32, i32* @x.329
  %70 = load i32, i32* @y.330
  %71 = sub i32 0, 1
  %72 = add i32 %69, %71
  %73 = sub i32 %69, 1
  %74 = mul i32 %69, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %70, 10
  %78 = and i1 %76, %77
  %79 = xor i1 %76, %77
  %80 = or i1 %78, %79
  %81 = or i1 %76, %77
  %82 = select i1 %80, i32 1906383181, i32 1872617216
  store i32 %82, i32* %21
  br label %336

; <label>:83:                                     ; preds = %22
  %84 = load volatile %struct.MaxFlow*, %struct.MaxFlow** %9
  %85 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %84, i32 0, i32 3
  %86 = load i32, i32* %12, align 4
  %87 = sext i32 %86 to i64
  %88 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %85, i64 %87) #3
  %89 = load i32, i32* %88, align 4
  %90 = sub i32 0, %89
  %91 = sub i32 0, 1
  %92 = add i32 %90, %91
  %93 = sub i32 0, %92
  %94 = add nsw i32 %89, 1
  %95 = load volatile %struct.MaxFlow*, %struct.MaxFlow** %9
  %96 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %95, i32 0, i32 3
  %97 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %16, align 8
  %98 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %97, i32 0, i32 0
  %99 = load i32, i32* %98, align 8
  %100 = sext i32 %99 to i64
  %101 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %96, i64 %100) #3
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %93, %102
  store i1 %103, i1* %6
  %104 = load i32, i32* @x.329
  %105 = load i32, i32* @y.330
  %106 = sub i32 0, 1
  %107 = add i32 %104, %106
  %108 = sub i32 %104, 1
  %109 = mul i32 %104, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %105, 10
  %113 = and i1 %111, %112
  %114 = xor i1 %111, %112
  %115 = or i1 %113, %114
  %116 = or i1 %111, %112
  %117 = select i1 %115, i32 855834341, i32 1872617216
  store i32 %117, i32* %21
  br label %336

; <label>:118:                                    ; preds = %22
  %119 = load volatile i1, i1* %6
  %120 = select i1 %119, i32 -1635903539, i32 -1290939589
  store i32 %120, i32* %21
  br label %336

; <label>:121:                                    ; preds = %22
  %122 = load i32, i32* @x.329
  %123 = load i32, i32* @y.330
  %124 = sub i32 0, 1
  %125 = add i32 %122, %124
  %126 = sub i32 %122, 1
  %127 = mul i32 %122, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %123, 10
  %131 = xor i1 %129, true
  %132 = xor i1 %130, true
  %133 = xor i1 true, true
  %134 = and i1 %131, true
  %135 = and i1 %129, %133
  %136 = and i1 %132, true
  %137 = and i1 %130, %133
  %138 = or i1 %134, %135
  %139 = or i1 %136, %137
  %140 = xor i1 %138, %139
  %141 = or i1 %131, %132
  %142 = xor i1 %141, true
  %143 = or i1 true, %133
  %144 = and i1 %142, %143
  %145 = or i1 %140, %144
  %146 = or i1 %129, %130
  %147 = select i1 %145, i32 333601567, i32 -152533464
  store i32 %147, i32* %21
  br label %336

; <label>:148:                                    ; preds = %22
  %149 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %16, align 8
  %150 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %149, i32 0, i32 0
  %151 = load i32, i32* %150, align 8
  %152 = load i32, i32* %13, align 4
  %153 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %16, align 8
  %154 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %153, i32 0, i32 2
  %155 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %14, i64* dereferenceable(8) %154)
  %156 = load i64, i64* %155, align 8
  %157 = load volatile %struct.MaxFlow*, %struct.MaxFlow** %9
  %158 = call i64 @_ZN7MaxFlow3dfsEiix(%struct.MaxFlow* %157, i32 %151, i32 %152, i64 %156)
  store i64 %158, i64* %17, align 8
  %159 = load i64, i64* %17, align 8
  %160 = load volatile %struct.MaxFlow*, %struct.MaxFlow** %9
  %161 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %160, i32 0, i32 0
  %162 = load i64, i64* %161, align 8
  %163 = icmp sgt i64 %159, %162
  store i1 %163, i1* %5
  %164 = load i32, i32* @x.329
  %165 = load i32, i32* @y.330
  %166 = add i32 %164, -445880952
  %167 = sub i32 %166, 1
  %168 = sub i32 %167, -445880952
  %169 = sub i32 %164, 1
  %170 = mul i32 %164, %168
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %165, 10
  %174 = and i1 %172, %173
  %175 = xor i1 %172, %173
  %176 = or i1 %174, %175
  %177 = or i1 %172, %173
  %178 = select i1 %176, i32 86669944, i32 -152533464
  store i32 %178, i32* %21
  br label %336

; <label>:179:                                    ; preds = %22
  %180 = load volatile i1, i1* %5
  %181 = select i1 %180, i32 541435807, i32 -1658091646
  store i32 %181, i32* %21
  br label %336

; <label>:182:                                    ; preds = %22
  %183 = load i64, i64* %17, align 8
  %184 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %16, align 8
  %185 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %184, i32 0, i32 2
  %186 = load i64, i64* %185, align 8
  %187 = sub i64 %186, 3180032390375464219
  %188 = sub i64 %187, %183
  %189 = add i64 %188, 3180032390375464219
  %190 = sub nsw i64 %186, %183
  store i64 %189, i64* %185, align 8
  %191 = load i64, i64* %17, align 8
  %192 = load volatile %struct.MaxFlow*, %struct.MaxFlow** %9
  %193 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %192, i32 0, i32 2
  %194 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %16, align 8
  %195 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %194, i32 0, i32 0
  %196 = load i32, i32* %195, align 8
  %197 = sext i32 %196 to i64
  %198 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN7MaxFlow4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %193, i64 %197) #3
  %199 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %16, align 8
  %200 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %199, i32 0, i32 1
  %201 = load i32, i32* %200, align 4
  %202 = sext i32 %201 to i64
  %203 = call dereferenceable(16) %"struct.MaxFlow::edge"* @_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EEixEm(%"class.std::vector.3"* %198, i64 %202) #3
  %204 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %203, i32 0, i32 2
  %205 = load i64, i64* %204, align 8
  %206 = sub i64 0, %191
  %207 = sub i64 %205, %206
  %208 = add nsw i64 %205, %191
  store i64 %207, i64* %204, align 8
  %209 = load i64, i64* %17, align 8
  store i64 %209, i64* %10, align 8
  store i32 1550642795, i32* %21
  br label %336

; <label>:210:                                    ; preds = %22
  store i32 -1290939589, i32* %21
  br label %336

; <label>:211:                                    ; preds = %22
  %212 = load i32, i32* @x.329
  %213 = load i32, i32* @y.330
  %214 = sub i32 %212, 1224359982
  %215 = sub i32 %214, 1
  %216 = add i32 %215, 1224359982
  %217 = sub i32 %212, 1
  %218 = mul i32 %212, %216
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %213, 10
  %222 = xor i1 %220, true
  %223 = xor i1 %221, true
  %224 = xor i1 false, true
  %225 = and i1 %222, false
  %226 = and i1 %220, %224
  %227 = and i1 %223, false
  %228 = and i1 %221, %224
  %229 = or i1 %225, %226
  %230 = or i1 %227, %228
  %231 = xor i1 %229, %230
  %232 = or i1 %222, %223
  %233 = xor i1 %232, true
  %234 = or i1 false, %224
  %235 = and i1 %233, %234
  %236 = or i1 %231, %235
  %237 = or i1 %220, %221
  %238 = select i1 %236, i32 -1620966274, i32 -2010123463
  store i32 %238, i32* %21
  br label %336

; <label>:239:                                    ; preds = %22
  %240 = load i32, i32* @x.329
  %241 = load i32, i32* @y.330
  %242 = sub i32 0, 1
  %243 = add i32 %240, %242
  %244 = sub i32 %240, 1
  %245 = mul i32 %240, %243
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %241, 10
  %249 = xor i1 %247, true
  %250 = xor i1 %248, true
  %251 = xor i1 false, true
  %252 = and i1 %249, false
  %253 = and i1 %247, %251
  %254 = and i1 %250, false
  %255 = and i1 %248, %251
  %256 = or i1 %252, %253
  %257 = or i1 %254, %255
  %258 = xor i1 %256, %257
  %259 = or i1 %249, %250
  %260 = xor i1 %259, true
  %261 = or i1 false, %251
  %262 = and i1 %260, %261
  %263 = or i1 %258, %262
  %264 = or i1 %247, %248
  %265 = select i1 %263, i32 -1178658263, i32 -2010123463
  store i32 %265, i32* %21
  br label %336

; <label>:266:                                    ; preds = %22
  store i32 1031669843, i32* %21
  br label %336

; <label>:267:                                    ; preds = %22
  %268 = load i32*, i32** %15, align 8
  %269 = load i32, i32* %268, align 4
  %270 = add i32 %269, -1299532444
  %271 = add i32 %270, 1
  %272 = sub i32 %271, -1299532444
  %273 = add nsw i32 %269, 1
  store i32 %272, i32* %268, align 4
  store i32 -101285689, i32* %21
  br label %336

; <label>:274:                                    ; preds = %22
  %275 = load volatile %struct.MaxFlow*, %struct.MaxFlow** %9
  %276 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %275, i32 0, i32 0
  %277 = load i64, i64* %276, align 8
  store i64 %277, i64* %10, align 8
  store i32 1550642795, i32* %21
  br label %336

; <label>:278:                                    ; preds = %22
  %279 = load i64, i64* %10, align 8
  ret i64 %279

; <label>:280:                                    ; preds = %22
  %281 = load volatile %struct.MaxFlow*, %struct.MaxFlow** %9
  %282 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %281, i32 0, i32 3
  %283 = load i32, i32* %12, align 4
  %284 = sext i32 %283 to i64
  %285 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %282, i64 %284) #3
  %286 = load i32, i32* %285, align 4
  %287 = add i32 %286, -71127243
  %288 = sub i32 %287, 1
  %289 = sub i32 %288, -71127243
  %290 = sub i32 %286, 1
  %291 = mul i32 %289, 1
  %292 = shl i32 %286, 1
  %293 = sub i32 0, %286
  %294 = add i32 0, %293
  %295 = sub i32 0, %286
  %296 = sub i32 %294, 2041172235
  %297 = add i32 %296, 1
  %298 = add i32 %297, 2041172235
  %299 = add i32 %294, 1
  %300 = shl i32 %286, 1
  %301 = add i32 %286, 877087045
  %302 = sub i32 %301, 1
  %303 = sub i32 %302, 877087045
  %304 = sub i32 %286, 1
  %305 = mul i32 %303, 1
  %306 = sub i32 %286, -1575315830
  %307 = add i32 %306, 1
  %308 = add i32 %307, -1575315830
  %309 = add nsw i32 %286, 1
  %310 = load volatile %struct.MaxFlow*, %struct.MaxFlow** %9
  %311 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %310, i32 0, i32 3
  %312 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %16, align 8
  %313 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %312, i32 0, i32 0
  %314 = load i32, i32* %313, align 8
  %315 = sext i32 %314 to i64
  %316 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %311, i64 %315) #3
  %317 = load i32, i32* %316, align 4
  %318 = icmp eq i32 %308, %317
  store i32 1906383181, i32* %21
  br label %336

; <label>:319:                                    ; preds = %22
  %320 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %16, align 8
  %321 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %320, i32 0, i32 0
  %322 = load i32, i32* %321, align 8
  %323 = load i32, i32* %13, align 4
  %324 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %16, align 8
  %325 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %324, i32 0, i32 2
  %326 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %14, i64* dereferenceable(8) %325)
  %327 = load i64, i64* %326, align 8
  %328 = load volatile %struct.MaxFlow*, %struct.MaxFlow** %9
  %329 = call i64 @_ZN7MaxFlow3dfsEiix(%struct.MaxFlow* %328, i32 %322, i32 %323, i64 %327)
  store i64 %329, i64* %17, align 8
  %330 = load i64, i64* %17, align 8
  %331 = load volatile %struct.MaxFlow*, %struct.MaxFlow** %9
  %332 = getelementptr inbounds %struct.MaxFlow, %struct.MaxFlow* %331, i32 0, i32 0
  %333 = load i64, i64* %332, align 8
  %334 = icmp sgt i64 %330, %333
  store i32 333601567, i32* %21
  br label %336

; <label>:335:                                    ; preds = %22
  store i32 -1620966274, i32* %21
  br label %336

; <label>:336:                                    ; preds = %335, %319, %280, %274, %267, %266, %239, %211, %210, %182, %179, %148, %121, %118, %83, %68, %50, %38, %32, %30, %25, %24
  br label %22
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEEC2Ev(%"class.std::deque"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.331
  %5 = load i32, i32* @y.332
  %6 = add i32 %4, -234536034
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -234536034
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -2087128762, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2087128762, label %18
    i32 -1641636533, label %26
    i32 -111105847, label %57
    i32 -895446645, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1641636533, i32 -895446645
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %27, align 8
  %28 = load %"class.std::deque"*, %"class.std::deque"** %27, align 8
  %29 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2Ev(%"class.std::_Deque_base"* %29)
  %30 = load i32, i32* @x.331
  %31 = load i32, i32* @y.332
  %32 = sub i32 %30, 1101710766
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 1101710766
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -111105847, i32 -895446645
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %59, align 8
  %60 = load %"class.std::deque"*, %"class.std::deque"** %59, align 8
  %61 = bitcast %"class.std::deque"* %60 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2Ev(%"class.std::_Deque_base"* %61)
  store i32 -1641636533, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEEC2EOS2_(%"class.std::queue"*, %"class.std::deque"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.333
  %6 = load i32, i32* @y.334
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1844017309, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %80
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1844017309, label %18
    i32 -89648574, label %38
    i32 -370534483, label %72
    i32 460359892, label %73
  ]

; <label>:17:                                     ; preds = %15
  br label %80

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -89648574, i32 460359892
  store i32 %37, i32* %14
  br label %80

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::queue"*, align 8
  %40 = alloca %"class.std::deque"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %39, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %40, align 8
  %41 = load %"class.std::queue"*, %"class.std::queue"** %39, align 8
  %42 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %41, i32 0, i32 0
  %43 = load %"class.std::deque"*, %"class.std::deque"** %40, align 8
  %44 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80) %43) #3
  call void @_ZNSt5dequeIiSaIiEEC2EOS1_(%"class.std::deque"* %42, %"class.std::deque"* dereferenceable(80) %44)
  %45 = load i32, i32* @x.333
  %46 = load i32, i32* @y.334
  %47 = add i32 %45, 1977466870
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 1977466870
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -370534483, i32 460359892
  store i32 %71, i32* %14
  br label %80

; <label>:72:                                     ; preds = %15
  ret void

; <label>:73:                                     ; preds = %15
  %74 = alloca %"class.std::queue"*, align 8
  %75 = alloca %"class.std::deque"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %74, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %75, align 8
  %76 = load %"class.std::queue"*, %"class.std::queue"** %74, align 8
  %77 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %76, i32 0, i32 0
  %78 = load %"class.std::deque"*, %"class.std::deque"** %75, align 8
  %79 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80) %78) #3
  call void @_ZNSt5dequeIiSaIiEEC2EOS1_(%"class.std::deque"* %77, %"class.std::deque"* dereferenceable(80) %79)
  store i32 -89648574, i32* %14
  br label %80

; <label>:80:                                     ; preds = %73, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::deque"*, align 8
  %3 = alloca %"struct.std::_Deque_iterator", align 8
  %4 = alloca %"struct.std::_Deque_iterator", align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  call void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* sret %3, %"class.std::deque"* %7) #3
  call void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator"* sret %4, %"class.std::deque"* %7) #3
  %8 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %9 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %8) #3
  invoke void @_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_(%"class.std::deque"* %7, %"struct.std::_Deque_iterator"* %3, %"struct.std::_Deque_iterator"* %4, %"class.std::allocator.10"* dereferenceable(1) %9)
          to label %10 unwind label %54

; <label>:10:                                     ; preds = %1
  %11 = load i32, i32* @x.335
  %12 = load i32, i32* @y.336
  %13 = sub i32 %11, 567887160
  %14 = sub i32 %13, 1
  %15 = add i32 %14, 567887160
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %12, 10
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  br i1 %35, label %37, label %114

; <label>:37:                                     ; preds = %10, %114
  %38 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %38) #3
  %39 = load i32, i32* @x.335
  %40 = load i32, i32* @y.336
  %41 = sub i32 %39, -2079584785
  %42 = sub i32 %41, 1
  %43 = add i32 %42, -2079584785
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  br i1 %51, label %53, label %114

; <label>:53:                                     ; preds = %37
  ret void

; <label>:54:                                     ; preds = %1
  %55 = landingpad { i8*, i32 }
          catch i8* null
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %5, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %6, align 4
  %58 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %58) #3
  br label %59

; <label>:59:                                     ; preds = %54
  %60 = load i32, i32* @x.335
  %61 = load i32, i32* @y.336
  %62 = add i32 %60, 784567591
  %63 = sub i32 %62, 1
  %64 = sub i32 %63, 784567591
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 true, true
  %73 = and i1 %70, true
  %74 = and i1 %68, %72
  %75 = and i1 %71, true
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 true, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  br i1 %84, label %86, label %116

; <label>:86:                                     ; preds = %59, %116
  %87 = load i8*, i8** %5, align 8
  call void @__clang_call_terminate(i8* %87) #10
  %88 = load i32, i32* @x.335
  %89 = load i32, i32* @y.336
  %90 = sub i32 0, 1
  %91 = add i32 %88, %90
  %92 = sub i32 %88, 1
  %93 = mul i32 %88, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %89, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 true, true
  %100 = and i1 %97, true
  %101 = and i1 %95, %99
  %102 = and i1 %98, true
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 true, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  br i1 %111, label %113, label %116

; <label>:113:                                    ; preds = %86
  unreachable

; <label>:114:                                    ; preds = %37, %10
  %115 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %115) #3
  br label %37

; <label>:116:                                    ; preds = %86, %59
  %117 = load i8*, i8** %5, align 8
  call void @__clang_call_terminate(i8* %117) #10
  br label %86
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEE4pushERKi(%"class.std::queue"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca %"class.std::queue"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::queue"*, %"class.std::queue"** %3, align 8
  %6 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %5, i32 0, i32 0
  %7 = load i32*, i32** %4, align 8
  call void @_ZNSt5dequeIiSaIiEE9push_backERKi(%"class.std::deque"* %6, i32* dereferenceable(4) %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt5queueIiSt5dequeIiSaIiEEE5emptyEv(%"class.std::queue"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.339
  %6 = load i32, i32* @y.340
  %7 = sub i32 %5, -289620822
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -289620822
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1267176811, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1267176811, label %19
    i32 -1297325062, label %27
    i32 1830337890, label %59
    i32 -2132942643, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1297325062, i32 -2132942643
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %28, align 8
  %29 = load %"class.std::queue"*, %"class.std::queue"** %28, align 8
  %30 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %29, i32 0, i32 0
  %31 = call zeroext i1 @_ZNKSt5dequeIiSaIiEE5emptyEv(%"class.std::deque"* %30) #3
  store i1 %31, i1* %2
  %32 = load i32, i32* @x.339
  %33 = load i32, i32* @y.340
  %34 = sub i32 %32, -848087616
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -848087616
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 1830337890, i32 -2132942643
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i1, i1* %2
  ret i1 %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %62, align 8
  %63 = load %"class.std::queue"*, %"class.std::queue"** %62, align 8
  %64 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %63, i32 0, i32 0
  %65 = call zeroext i1 @_ZNKSt5dequeIiSaIiEE5emptyEv(%"class.std::deque"* %64) #3
  store i32 -1297325062, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt5queueIiSt5dequeIiSaIiEEE5frontEv(%"class.std::queue"*) #4 comdat align 2 {
  %2 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %2, align 8
  %3 = load %"class.std::queue"*, %"class.std::queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i32 0, i32 0
  %5 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEE5frontEv(%"class.std::deque"* %4) #3
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEE3popEv(%"class.std::queue"*) #4 comdat align 2 {
  %2 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %2, align 8
  %3 = load %"class.std::queue"*, %"class.std::queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i32 0, i32 0
  call void @_ZNSt5dequeIiSaIiEE9pop_frontEv(%"class.std::deque"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.MaxFlow::edge"* @_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EE5beginEv(%"class.std::vector.3"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %3 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  %4 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %5 = bitcast %"class.std::vector.3"* %4 to %"struct.std::_Vector_base.4"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.13"* %2, %"struct.MaxFlow::edge"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %2, i32 0, i32 0
  %9 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %8, align 8
  ret %"struct.MaxFlow::edge"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.MaxFlow::edge"* @_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EE3endEv(%"class.std::vector.3"*) #4 comdat align 2 {
  %2 = alloca %"struct.MaxFlow::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.347
  %6 = load i32, i32* @y.348
  %7 = add i32 %5, 526320672
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 526320672
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1367421360, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1367421360, label %19
    i32 1410006828, label %39
    i32 -1419336380, label %62
    i32 -566817215, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1410006828, i32 -566817215
  store i32 %38, i32* %15
  br label %73

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %41 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %41, align 8
  %42 = load %"class.std::vector.3"*, %"class.std::vector.3"** %41, align 8
  %43 = bitcast %"class.std::vector.3"* %42 to %"struct.std::_Vector_base.4"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %44, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.13"* %40, %"struct.MaxFlow::edge"** dereferenceable(8) %45) #3
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %40, i32 0, i32 0
  %47 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %46, align 8
  store %"struct.MaxFlow::edge"* %47, %"struct.MaxFlow::edge"** %2
  %48 = load i32, i32* @x.347
  %49 = load i32, i32* @y.348
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -1419336380, i32 -566817215
  store i32 %61, i32* %15
  br label %73

; <label>:62:                                     ; preds = %16
  %63 = load volatile %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %2
  ret %"struct.MaxFlow::edge"* %63

; <label>:64:                                     ; preds = %16
  %65 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %66 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %66, align 8
  %67 = load %"class.std::vector.3"*, %"class.std::vector.3"** %66, align 8
  %68 = bitcast %"class.std::vector.3"* %67 to %"struct.std::_Vector_base.4"*
  %69 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %68, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %69, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.13"* %65, %"struct.MaxFlow::edge"** dereferenceable(8) %70) #3
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %65, i32 0, i32 0
  %72 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %71, align 8
  store i32 1410006828, i32* %15
  br label %73

; <label>:73:                                     ; preds = %64, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator.13"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.13"* dereferenceable(8)) #4 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %0, %"class.__gnu_cxx::__normal_iterator.13"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %1, %"class.__gnu_cxx::__normal_iterator.13"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %3, align 8
  %6 = call dereferenceable(8) %"struct.MaxFlow::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.13"* %5) #3
  %7 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %4, align 8
  %9 = call dereferenceable(8) %"struct.MaxFlow::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.13"* %8) #3
  %10 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %9, align 8
  %11 = icmp ne %"struct.MaxFlow::edge"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.MaxFlow::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.13"*) #4 comdat align 2 {
  %2 = alloca %"struct.MaxFlow::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.351
  %6 = load i32, i32* @y.352
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1485167988, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %76
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1485167988, label %18
    i32 1315389955, label %38
    i32 -1242172582, label %69
    i32 559099725, label %71
  ]

; <label>:17:                                     ; preds = %15
  br label %76

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1315389955, i32 559099725
  store i32 %37, i32* %14
  br label %76

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %0, %"class.__gnu_cxx::__normal_iterator.13"** %39, align 8
  %40 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %39, align 8
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %40, i32 0, i32 0
  %42 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %41, align 8
  store %"struct.MaxFlow::edge"* %42, %"struct.MaxFlow::edge"** %2
  %43 = load i32, i32* @x.351
  %44 = load i32, i32* @y.352
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -1242172582, i32 559099725
  store i32 %68, i32* %14
  br label %76

; <label>:69:                                     ; preds = %15
  %70 = load volatile %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %2
  ret %"struct.MaxFlow::edge"* %70

; <label>:71:                                     ; preds = %15
  %72 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %0, %"class.__gnu_cxx::__normal_iterator.13"** %72, align 8
  %73 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %72, align 8
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %73, i32 0, i32 0
  %75 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %74, align 8
  store i32 1315389955, i32* %14
  br label %76

; <label>:76:                                     ; preds = %71, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.13"* @_ZN9__gnu_cxx17__normal_iteratorIPN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator.13"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %0, %"class.__gnu_cxx::__normal_iterator.13"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %3, i32 0, i32 0
  %5 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %4, align 8
  %6 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %5, i32 1
  store %"struct.MaxFlow::edge"* %6, %"struct.MaxFlow::edge"** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator.13"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev(%"class.std::queue"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %2, align 8
  %3 = load %"class.std::queue"*, %"class.std::queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i32 0, i32 0
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2Ev(%"class.std::_Deque_base"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.357
  %3 = load i32, i32* @y.358
  %4 = add i32 %2, -1250099106
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -1250099106
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %59

; <label>:16:                                     ; preds = %1, %59
  %17 = alloca %"class.std::_Deque_base"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %17, align 8
  %20 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %17, align 8
  %21 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %20, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %21)
  %22 = load i32, i32* @x.357
  %23 = load i32, i32* @y.358
  %24 = sub i32 %22, 1582826706
  %25 = sub i32 %24, 1
  %26 = add i32 %25, 1582826706
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 false, true
  %35 = and i1 %32, false
  %36 = and i1 %30, %34
  %37 = and i1 %33, false
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 false, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  br i1 %46, label %48, label %59

; <label>:48:                                     ; preds = %16
  invoke void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"* %20, i64 0)
          to label %49 unwind label %50

; <label>:49:                                     ; preds = %48
  ret void

; <label>:50:                                     ; preds = %48
  %51 = landingpad { i8*, i32 }
          cleanup
  %52 = extractvalue { i8*, i32 } %51, 0
  store i8* %52, i8** %18, align 8
  %53 = extractvalue { i8*, i32 } %51, 1
  store i32 %53, i32* %19, align 4
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %21) #3
  br label %54

; <label>:54:                                     ; preds = %50
  %55 = load i8*, i8** %18, align 8
  %56 = load i32, i32* %19, align 4
  %57 = insertvalue { i8*, i32 } undef, i8* %55, 0
  %58 = insertvalue { i8*, i32 } %57, i32 %56, 1
  resume { i8*, i32 } %58

; <label>:59:                                     ; preds = %16, %1
  %60 = alloca %"class.std::_Deque_base"*, align 8
  %61 = alloca i8*
  %62 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %60, align 8
  %63 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %60, align 8
  %64 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %63, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %64)
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.359
  %5 = load i32, i32* @y.360
  %6 = sub i32 %4, -1973127556
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1973127556
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -667440187, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %58
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -667440187, label %18
    i32 -1754411106, label %26
    i32 516545181, label %49
    i32 1323768652, label %50
  ]

; <label>:17:                                     ; preds = %15
  br label %58

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1754411106, i32 1323768652
  store i32 %25, i32* %14
  br label %58

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %27, align 8
  %28 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %27, align 8
  %29 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %28 to %"class.std::allocator.10"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.10"* %29) #3
  %30 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %28, i32 0, i32 0
  store i32** null, i32*** %30, align 8
  %31 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %28, i32 0, i32 1
  store i64 0, i64* %31, align 8
  %32 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %28, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %32) #3
  %33 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %28, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %33) #3
  %34 = load i32, i32* @x.359
  %35 = load i32, i32* @y.360
  %36 = add i32 %34, -1896011231
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, -1896011231
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 516545181, i32 1323768652
  store i32 %48, i32* %14
  br label %58

; <label>:49:                                     ; preds = %15
  ret void

; <label>:50:                                     ; preds = %15
  %51 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %51, align 8
  %52 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %51, align 8
  %53 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %52 to %"class.std::allocator.10"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.10"* %53) #3
  %54 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %52, i32 0, i32 0
  store i32** null, i32*** %54, align 8
  %55 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %52, i32 0, i32 1
  store i64 0, i64* %55, align 8
  %56 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %52, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %56) #3
  %57 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %52, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %57) #3
  store i32 -1754411106, i32* %14
  br label %58

; <label>:58:                                     ; preds = %50, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32**, align 8
  %9 = alloca i32**, align 8
  %10 = alloca i8*
  %11 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %12 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %13 = load i64, i64* %4, align 8
  %14 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %15 = udiv i64 %13, %14
  %16 = sub i64 %15, -3069727356833135333
  %17 = add i64 %16, 1
  %18 = add i64 %17, -3069727356833135333
  %19 = add i64 %15, 1
  store i64 %18, i64* %5, align 8
  store i64 8, i64* %6, align 8
  %20 = load i64, i64* %5, align 8
  %21 = add i64 %20, 481741529349455490
  %22 = add i64 %21, 2
  %23 = sub i64 %22, 481741529349455490
  %24 = add i64 %20, 2
  store i64 %23, i64* %7, align 8
  %25 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %6, i64* dereferenceable(8) %7)
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %27, i32 0, i32 1
  store i64 %26, i64* %28, align 8
  %29 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %29, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = call i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"* %12, i64 %31)
  %33 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %33, i32 0, i32 0
  store i32** %32, i32*** %34, align 8
  %35 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %35, i32 0, i32 0
  %37 = load i32**, i32*** %36, align 8
  %38 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %38, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = load i64, i64* %5, align 8
  %42 = add i64 %40, 2948443489696563037
  %43 = sub i64 %42, %41
  %44 = sub i64 %43, 2948443489696563037
  %45 = sub i64 %40, %41
  %46 = udiv i64 %44, 2
  %47 = getelementptr inbounds i32*, i32** %37, i64 %46
  store i32** %47, i32*** %8, align 8
  %48 = load i32**, i32*** %8, align 8
  %49 = load i64, i64* %5, align 8
  %50 = getelementptr inbounds i32*, i32** %48, i64 %49
  store i32** %50, i32*** %9, align 8
  %51 = load i32**, i32*** %8, align 8
  %52 = load i32**, i32*** %9, align 8
  invoke void @_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_(%"class.std::_Deque_base"* %12, i32** %51, i32** %52)
          to label %53 unwind label %96

; <label>:53:                                     ; preds = %2
  %54 = load i32, i32* @x.361
  %55 = load i32, i32* @y.362
  %56 = sub i32 %54, 449587927
  %57 = sub i32 %56, 1
  %58 = add i32 %57, 449587927
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 false, true
  %67 = and i1 %64, false
  %68 = and i1 %62, %66
  %69 = and i1 %65, false
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 false, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  br i1 %78, label %80, label %235

; <label>:80:                                     ; preds = %53, %235
  %81 = load i32, i32* @x.361
  %82 = load i32, i32* @y.362
  %83 = add i32 %81, -1972212035
  %84 = sub i32 %83, 1
  %85 = sub i32 %84, -1972212035
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  br i1 %93, label %95, label %235

; <label>:95:                                     ; preds = %80
  br label %172

; <label>:96:                                     ; preds = %2
  %97 = load i32, i32* @x.361
  %98 = load i32, i32* @y.362
  %99 = sub i32 %97, 797961246
  %100 = sub i32 %99, 1
  %101 = add i32 %100, 797961246
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = xor i1 %105, true
  %108 = xor i1 %106, true
  %109 = xor i1 true, true
  %110 = and i1 %107, true
  %111 = and i1 %105, %109
  %112 = and i1 %108, true
  %113 = and i1 %106, %109
  %114 = or i1 %110, %111
  %115 = or i1 %112, %113
  %116 = xor i1 %114, %115
  %117 = or i1 %107, %108
  %118 = xor i1 %117, true
  %119 = or i1 true, %109
  %120 = and i1 %118, %119
  %121 = or i1 %116, %120
  %122 = or i1 %105, %106
  br i1 %121, label %123, label %236

; <label>:123:                                    ; preds = %96, %236
  %124 = landingpad { i8*, i32 }
          catch i8* null
  %125 = extractvalue { i8*, i32 } %124, 0
  store i8* %125, i8** %10, align 8
  %126 = extractvalue { i8*, i32 } %124, 1
  store i32 %126, i32* %11, align 4
  %127 = load i32, i32* @x.361
  %128 = load i32, i32* @y.362
  %129 = sub i32 %127, 1938270298
  %130 = sub i32 %129, 1
  %131 = add i32 %130, 1938270298
  %132 = sub i32 %127, 1
  %133 = mul i32 %127, %131
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %128, 10
  %137 = xor i1 %135, true
  %138 = xor i1 %136, true
  %139 = xor i1 false, true
  %140 = and i1 %137, false
  %141 = and i1 %135, %139
  %142 = and i1 %138, false
  %143 = and i1 %136, %139
  %144 = or i1 %140, %141
  %145 = or i1 %142, %143
  %146 = xor i1 %144, %145
  %147 = or i1 %137, %138
  %148 = xor i1 %147, true
  %149 = or i1 false, %139
  %150 = and i1 %148, %149
  %151 = or i1 %146, %150
  %152 = or i1 %135, %136
  br i1 %151, label %153, label %236

; <label>:153:                                    ; preds = %123
  br label %154

; <label>:154:                                    ; preds = %153
  %155 = load i8*, i8** %10, align 8
  %156 = call i8* @__cxa_begin_catch(i8* %155) #3
  %157 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %158 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %157, i32 0, i32 0
  %159 = load i32**, i32*** %158, align 8
  %160 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %161 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %160, i32 0, i32 1
  %162 = load i64, i64* %161, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %12, i32** %159, i64 %162) #3
  %163 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %164 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %163, i32 0, i32 0
  store i32** null, i32*** %164, align 8
  %165 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %166 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %165, i32 0, i32 1
  store i64 0, i64* %166, align 8
  invoke void @__cxa_rethrow() #12
          to label %234 unwind label %167

; <label>:167:                                    ; preds = %154
  %168 = landingpad { i8*, i32 }
          cleanup
  %169 = extractvalue { i8*, i32 } %168, 0
  store i8* %169, i8** %10, align 8
  %170 = extractvalue { i8*, i32 } %168, 1
  store i32 %170, i32* %11, align 4
  invoke void @__cxa_end_catch()
          to label %171 unwind label %231

; <label>:171:                                    ; preds = %167
  br label %226

; <label>:172:                                    ; preds = %95
  %173 = load i32, i32* @x.361
  %174 = load i32, i32* @y.362
  %175 = sub i32 0, 1
  %176 = add i32 %173, %175
  %177 = sub i32 %173, 1
  %178 = mul i32 %173, %176
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %174, 10
  %182 = and i1 %180, %181
  %183 = xor i1 %180, %181
  %184 = or i1 %182, %183
  %185 = or i1 %180, %181
  br i1 %184, label %186, label %240

; <label>:186:                                    ; preds = %172, %240
  %187 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %188 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %187, i32 0, i32 2
  %189 = load i32**, i32*** %8, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %188, i32** %189) #3
  %190 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %191 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %190, i32 0, i32 3
  %192 = load i32**, i32*** %9, align 8
  %193 = getelementptr inbounds i32*, i32** %192, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %191, i32** %193) #3
  %194 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %195 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %194, i32 0, i32 2
  %196 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %195, i32 0, i32 1
  %197 = load i32*, i32** %196, align 8
  %198 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %199 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %198, i32 0, i32 2
  %200 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %199, i32 0, i32 0
  store i32* %197, i32** %200, align 8
  %201 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %202 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %201, i32 0, i32 3
  %203 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %202, i32 0, i32 1
  %204 = load i32*, i32** %203, align 8
  %205 = load i64, i64* %4, align 8
  %206 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %207 = urem i64 %205, %206
  %208 = getelementptr inbounds i32, i32* %204, i64 %207
  %209 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %210 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %209, i32 0, i32 3
  %211 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %210, i32 0, i32 0
  store i32* %208, i32** %211, align 8
  %212 = load i32, i32* @x.361
  %213 = load i32, i32* @y.362
  %214 = sub i32 0, 1
  %215 = add i32 %212, %214
  %216 = sub i32 %212, 1
  %217 = mul i32 %212, %215
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %213, 10
  %221 = and i1 %219, %220
  %222 = xor i1 %219, %220
  %223 = or i1 %221, %222
  %224 = or i1 %219, %220
  br i1 %223, label %225, label %240

; <label>:225:                                    ; preds = %186
  ret void

; <label>:226:                                    ; preds = %171
  %227 = load i8*, i8** %10, align 8
  %228 = load i32, i32* %11, align 4
  %229 = insertvalue { i8*, i32 } undef, i8* %227, 0
  %230 = insertvalue { i8*, i32 } %229, i32 %228, 1
  resume { i8*, i32 } %230

; <label>:231:                                    ; preds = %167
  %232 = landingpad { i8*, i32 }
          catch i8* null
  %233 = extractvalue { i8*, i32 } %232, 0
  call void @__clang_call_terminate(i8* %233) #10
  unreachable

; <label>:234:                                    ; preds = %154
  unreachable

; <label>:235:                                    ; preds = %80, %53
  br label %80

; <label>:236:                                    ; preds = %123, %96
  %237 = landingpad { i8*, i32 }
          catch i8* null
  %238 = extractvalue { i8*, i32 } %237, 0
  store i8* %238, i8** %10, align 8
  %239 = extractvalue { i8*, i32 } %237, 1
  store i32 %239, i32* %11, align 4
  br label %123

; <label>:240:                                    ; preds = %186, %172
  %241 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %242 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %241, i32 0, i32 2
  %243 = load i32**, i32*** %8, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %242, i32** %243) #3
  %244 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %245 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %244, i32 0, i32 3
  %246 = load i32**, i32*** %9, align 8
  %247 = getelementptr inbounds i32*, i32** %246, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %245, i32** %247) #3
  %248 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %249 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %248, i32 0, i32 2
  %250 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %249, i32 0, i32 1
  %251 = load i32*, i32** %250, align 8
  %252 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %253 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %252, i32 0, i32 2
  %254 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %253, i32 0, i32 0
  store i32* %251, i32** %254, align 8
  %255 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %256 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %255, i32 0, i32 3
  %257 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %256, i32 0, i32 1
  %258 = load i32*, i32** %257, align 8
  %259 = load i64, i64* %4, align 8
  %260 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %261 = shl i64 %259, %260
  %262 = shl i64 %259, %260
  %263 = sub i64 0, %259
  %264 = add i64 0, %263
  %265 = sub i64 0, %259
  %266 = add i64 %264, -4280765915940040062
  %267 = add i64 %266, %260
  %268 = sub i64 %267, -4280765915940040062
  %269 = add i64 %264, %260
  %270 = sub i64 0, 8629652945226253281
  %271 = sub i64 %270, %259
  %272 = add i64 %271, 8629652945226253281
  %273 = sub i64 0, %259
  %274 = sub i64 0, %260
  %275 = sub i64 %272, %274
  %276 = add i64 %272, %260
  %277 = sub i64 0, %259
  %278 = add i64 0, %277
  %279 = sub i64 0, %259
  %280 = sub i64 %278, 1101585038173417698
  %281 = add i64 %280, %260
  %282 = add i64 %281, 1101585038173417698
  %283 = add i64 %278, %260
  %284 = shl i64 %259, %260
  %285 = urem i64 %259, %260
  %286 = getelementptr inbounds i32, i32* %258, i64 %285
  %287 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %288 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %287, i32 0, i32 3
  %289 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %288, i32 0, i32 0
  store i32* %286, i32** %289, align 8
  br label %186
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.363
  %5 = load i32, i32* @y.364
  %6 = sub i32 %4, 1893410959
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1893410959
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -820761063, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -820761063, label %18
    i32 -433927014, label %38
    i32 -1444235282, label %57
    i32 -2033173459, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -433927014, i32 -2033173459
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %39, align 8
  %40 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %39, align 8
  %41 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %40 to %"class.std::allocator.10"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.10"* %41) #3
  %42 = load i32, i32* @x.363
  %43 = load i32, i32* @y.364
  %44 = sub i32 %42, 555411869
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 555411869
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1444235282, i32 -2033173459
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %59, align 8
  %60 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %59, align 8
  %61 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %60 to %"class.std::allocator.10"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.10"* %61) #3
  store i32 -433927014, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.365
  %5 = load i32, i32* @y.366
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -717721414, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %66
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -717721414, label %17
    i32 2115338921, label %25
    i32 -1417621066, label %58
    i32 -292134225, label %59
  ]

; <label>:16:                                     ; preds = %14
  br label %66

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 2115338921, i32 -292134225
  store i32 %24, i32* %13
  br label %66

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %26, align 8
  %27 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %26, align 8
  %28 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %27, i32 0, i32 0
  store i32* null, i32** %28, align 8
  %29 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %27, i32 0, i32 1
  store i32* null, i32** %29, align 8
  %30 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %27, i32 0, i32 2
  store i32* null, i32** %30, align 8
  %31 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %27, i32 0, i32 3
  store i32** null, i32*** %31, align 8
  %32 = load i32, i32* @x.365
  %33 = load i32, i32* @y.366
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -1417621066, i32 -292134225
  store i32 %57, i32* %13
  br label %66

; <label>:58:                                     ; preds = %14
  ret void

; <label>:59:                                     ; preds = %14
  %60 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %60, align 8
  %61 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %60, align 8
  %62 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %61, i32 0, i32 0
  store i32* null, i32** %62, align 8
  %63 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %61, i32 0, i32 1
  store i32* null, i32** %63, align 8
  %64 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %61, i32 0, i32 2
  store i32* null, i32** %64, align 8
  %65 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %61, i32 0, i32 3
  store i32** null, i32*** %65, align 8
  store i32 2115338921, i32* %13
  br label %66

; <label>:66:                                     ; preds = %59, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt16__deque_buf_sizem(i64) #4 comdat {
  %2 = alloca i1
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.367
  %7 = load i32, i32* @y.368
  %8 = sub i32 %6, 1629456751
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1629456751
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1661515529, i32* %16
  %17 = alloca i64
  br label %18

; <label>:18:                                     ; preds = %1, %75
  %19 = load i32, i32* %16
  switch i32 %19, label %20 [
    i32 -1661515529, label %21
    i32 -172735304, label %29
    i32 240813970, label %61
    i32 -474060774, label %64
    i32 1111900259, label %68
    i32 227706245, label %69
    i32 -455195474, label %71
  ]

; <label>:20:                                     ; preds = %18
  br label %75

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %5
  %23 = load volatile i1, i1* %4
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -172735304, i32 -455195474
  store i32 %28, i32* %16
  br label %75

; <label>:29:                                     ; preds = %18
  %30 = alloca i64, align 8
  store i64* %30, i64** %3
  %31 = load volatile i64*, i64** %3
  store i64 %0, i64* %31, align 8
  %32 = load volatile i64*, i64** %3
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, 512
  store i1 %34, i1* %2
  %35 = load i32, i32* @x.367
  %36 = load i32, i32* @y.368
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 240813970, i32 -455195474
  store i32 %60, i32* %16
  br label %75

; <label>:61:                                     ; preds = %18
  %62 = load volatile i1, i1* %2
  %63 = select i1 %62, i32 -474060774, i32 1111900259
  store i32 %63, i32* %16
  br label %75

; <label>:64:                                     ; preds = %18
  %65 = load volatile i64*, i64** %3
  %66 = load i64, i64* %65, align 8
  %67 = udiv i64 512, %66
  store i32 227706245, i32* %16
  store i64 %67, i64* %17
  br label %75

; <label>:68:                                     ; preds = %18
  store i32 227706245, i32* %16
  store i64 1, i64* %17
  br label %75

; <label>:69:                                     ; preds = %18
  %70 = load i64, i64* %17
  ret i64 %70

; <label>:71:                                     ; preds = %18
  %72 = alloca i64, align 8
  store i64 %0, i64* %72, align 8
  %73 = load i64, i64* %72, align 8
  %74 = icmp ult i64 %73, 512
  store i32 -172735304, i32* %16
  br label %75

; <label>:75:                                     ; preds = %71, %68, %64, %61, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::allocator.14", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.14"* sret %5, %"class.std::_Deque_base"* %8) #3
  %9 = load i64, i64* %4, align 8
  %10 = invoke i32** @_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m(%"class.std::allocator.14"* dereferenceable(1) %5, i64 %9)
          to label %11 unwind label %53

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* @x.369
  %13 = load i32, i32* @y.370
  %14 = sub i32 %12, -1412610625
  %15 = sub i32 %14, 1
  %16 = add i32 %15, -1412610625
  %17 = sub i32 %12, 1
  %18 = mul i32 %12, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %13, 10
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  br i1 %36, label %38, label %104

; <label>:38:                                     ; preds = %11, %104
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.14"* %5) #3
  %39 = load i32, i32* @x.369
  %40 = load i32, i32* @y.370
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %104

; <label>:52:                                     ; preds = %38
  ret i32** %10

; <label>:53:                                     ; preds = %2
  %54 = load i32, i32* @x.369
  %55 = load i32, i32* @y.370
  %56 = sub i32 %54, -1045489661
  %57 = sub i32 %56, 1
  %58 = add i32 %57, -1045489661
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 true, true
  %67 = and i1 %64, true
  %68 = and i1 %62, %66
  %69 = and i1 %65, true
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 true, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  br i1 %78, label %80, label %105

; <label>:80:                                     ; preds = %53, %105
  %81 = landingpad { i8*, i32 }
          cleanup
  %82 = extractvalue { i8*, i32 } %81, 0
  store i8* %82, i8** %6, align 8
  %83 = extractvalue { i8*, i32 } %81, 1
  store i32 %83, i32* %7, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.14"* %5) #3
  %84 = load i32, i32* @x.369
  %85 = load i32, i32* @y.370
  %86 = sub i32 %84, 1705566037
  %87 = sub i32 %86, 1
  %88 = add i32 %87, 1705566037
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = and i1 %92, %93
  %95 = xor i1 %92, %93
  %96 = or i1 %94, %95
  %97 = or i1 %92, %93
  br i1 %96, label %98, label %105

; <label>:98:                                     ; preds = %80
  br label %99

; <label>:99:                                     ; preds = %98
  %100 = load i8*, i8** %6, align 8
  %101 = load i32, i32* %7, align 4
  %102 = insertvalue { i8*, i32 } undef, i8* %100, 0
  %103 = insertvalue { i8*, i32 } %102, i32 %101, 1
  resume { i8*, i32 } %103

; <label>:104:                                    ; preds = %38, %11
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.14"* %5) #3
  br label %38

; <label>:105:                                    ; preds = %80, %53
  %106 = landingpad { i8*, i32 }
          cleanup
  %107 = extractvalue { i8*, i32 } %106, 0
  store i8* %107, i8** %6, align 8
  %108 = extractvalue { i8*, i32 } %106, 1
  store i32 %108, i32* %7, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.14"* %5) #3
  br label %80
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_(%"class.std::_Deque_base"*, i32**, i32**) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %11 = load i32**, i32*** %5, align 8
  store i32** %11, i32*** %7, align 8
  br label %12

; <label>:12:                                     ; preds = %135, %3
  %13 = load i32**, i32*** %7, align 8
  %14 = load i32**, i32*** %6, align 8
  %15 = icmp ult i32** %13, %14
  br i1 %15, label %16, label %145

; <label>:16:                                     ; preds = %12
  %17 = load i32, i32* @x.371
  %18 = load i32, i32* @y.372
  %19 = add i32 %17, -1885458785
  %20 = sub i32 %19, 1
  %21 = sub i32 %20, -1885458785
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  br i1 %29, label %31, label %322

; <label>:31:                                     ; preds = %16, %322
  %32 = load i32, i32* @x.371
  %33 = load i32, i32* @y.372
  %34 = sub i32 %32, -1112457993
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -1112457993
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  br i1 %56, label %58, label %322

; <label>:58:                                     ; preds = %31
  %59 = invoke i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %10)
          to label %60 unwind label %136

; <label>:60:                                     ; preds = %58
  %61 = load i32, i32* @x.371
  %62 = load i32, i32* @y.372
  %63 = add i32 %61, 2020690790
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, 2020690790
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  br i1 %73, label %75, label %323

; <label>:75:                                     ; preds = %60, %323
  %76 = load i32**, i32*** %7, align 8
  store i32* %59, i32** %76, align 8
  %77 = load i32, i32* @x.371
  %78 = load i32, i32* @y.372
  %79 = add i32 %77, -64869823
  %80 = sub i32 %79, 1
  %81 = sub i32 %80, -64869823
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = xor i1 %85, true
  %88 = xor i1 %86, true
  %89 = xor i1 false, true
  %90 = and i1 %87, false
  %91 = and i1 %85, %89
  %92 = and i1 %88, false
  %93 = and i1 %86, %89
  %94 = or i1 %90, %91
  %95 = or i1 %92, %93
  %96 = xor i1 %94, %95
  %97 = or i1 %87, %88
  %98 = xor i1 %97, true
  %99 = or i1 false, %89
  %100 = and i1 %98, %99
  %101 = or i1 %96, %100
  %102 = or i1 %85, %86
  br i1 %101, label %103, label %323

; <label>:103:                                    ; preds = %75
  br label %104

; <label>:104:                                    ; preds = %103
  %105 = load i32, i32* @x.371
  %106 = load i32, i32* @y.372
  %107 = sub i32 0, 1
  %108 = add i32 %105, %107
  %109 = sub i32 %105, 1
  %110 = mul i32 %105, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %106, 10
  %114 = and i1 %112, %113
  %115 = xor i1 %112, %113
  %116 = or i1 %114, %115
  %117 = or i1 %112, %113
  br i1 %116, label %118, label %325

; <label>:118:                                    ; preds = %104, %325
  %119 = load i32**, i32*** %7, align 8
  %120 = getelementptr inbounds i32*, i32** %119, i32 1
  store i32** %120, i32*** %7, align 8
  %121 = load i32, i32* @x.371
  %122 = load i32, i32* @y.372
  %123 = add i32 %121, -1410214967
  %124 = sub i32 %123, 1
  %125 = sub i32 %124, -1410214967
  %126 = sub i32 %121, 1
  %127 = mul i32 %121, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %122, 10
  %131 = and i1 %129, %130
  %132 = xor i1 %129, %130
  %133 = or i1 %131, %132
  %134 = or i1 %129, %130
  br i1 %133, label %135, label %325

; <label>:135:                                    ; preds = %118
  br label %12

; <label>:136:                                    ; preds = %58
  %137 = landingpad { i8*, i32 }
          catch i8* null
  %138 = extractvalue { i8*, i32 } %137, 0
  store i8* %138, i8** %8, align 8
  %139 = extractvalue { i8*, i32 } %137, 1
  store i32 %139, i32* %9, align 4
  br label %140

; <label>:140:                                    ; preds = %136
  %141 = load i8*, i8** %8, align 8
  %142 = call i8* @__cxa_begin_catch(i8* %141) #3
  %143 = load i32**, i32*** %5, align 8
  %144 = load i32**, i32*** %7, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %10, i32** %143, i32** %144) #3
  invoke void @__cxa_rethrow() #12
          to label %321 unwind label %146

; <label>:145:                                    ; preds = %12
  br label %204

; <label>:146:                                    ; preds = %140
  %147 = load i32, i32* @x.371
  %148 = load i32, i32* @y.372
  %149 = sub i32 0, 1
  %150 = add i32 %147, %149
  %151 = sub i32 %147, 1
  %152 = mul i32 %147, %150
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %148, 10
  %156 = xor i1 %154, true
  %157 = xor i1 %155, true
  %158 = xor i1 true, true
  %159 = and i1 %156, true
  %160 = and i1 %154, %158
  %161 = and i1 %157, true
  %162 = and i1 %155, %158
  %163 = or i1 %159, %160
  %164 = or i1 %161, %162
  %165 = xor i1 %163, %164
  %166 = or i1 %156, %157
  %167 = xor i1 %166, true
  %168 = or i1 true, %158
  %169 = and i1 %167, %168
  %170 = or i1 %165, %169
  %171 = or i1 %154, %155
  br i1 %170, label %172, label %328

; <label>:172:                                    ; preds = %146, %328
  %173 = landingpad { i8*, i32 }
          cleanup
  %174 = extractvalue { i8*, i32 } %173, 0
  store i8* %174, i8** %8, align 8
  %175 = extractvalue { i8*, i32 } %173, 1
  store i32 %175, i32* %9, align 4
  %176 = load i32, i32* @x.371
  %177 = load i32, i32* @y.372
  %178 = sub i32 %176, 889326314
  %179 = sub i32 %178, 1
  %180 = add i32 %179, 889326314
  %181 = sub i32 %176, 1
  %182 = mul i32 %176, %180
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %177, 10
  %186 = xor i1 %184, true
  %187 = xor i1 %185, true
  %188 = xor i1 true, true
  %189 = and i1 %186, true
  %190 = and i1 %184, %188
  %191 = and i1 %187, true
  %192 = and i1 %185, %188
  %193 = or i1 %189, %190
  %194 = or i1 %191, %192
  %195 = xor i1 %193, %194
  %196 = or i1 %186, %187
  %197 = xor i1 %196, true
  %198 = or i1 true, %188
  %199 = and i1 %197, %198
  %200 = or i1 %195, %199
  %201 = or i1 %184, %185
  br i1 %200, label %202, label %328

; <label>:202:                                    ; preds = %172
  invoke void @__cxa_end_catch()
          to label %203 unwind label %318

; <label>:203:                                    ; preds = %202
  br label %259

; <label>:204:                                    ; preds = %145
  %205 = load i32, i32* @x.371
  %206 = load i32, i32* @y.372
  %207 = sub i32 %205, 2009133479
  %208 = sub i32 %207, 1
  %209 = add i32 %208, 2009133479
  %210 = sub i32 %205, 1
  %211 = mul i32 %205, %209
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %206, 10
  %215 = xor i1 %213, true
  %216 = xor i1 %214, true
  %217 = xor i1 false, true
  %218 = and i1 %215, false
  %219 = and i1 %213, %217
  %220 = and i1 %216, false
  %221 = and i1 %214, %217
  %222 = or i1 %218, %219
  %223 = or i1 %220, %221
  %224 = xor i1 %222, %223
  %225 = or i1 %215, %216
  %226 = xor i1 %225, true
  %227 = or i1 false, %217
  %228 = and i1 %226, %227
  %229 = or i1 %224, %228
  %230 = or i1 %213, %214
  br i1 %229, label %231, label %332

; <label>:231:                                    ; preds = %204, %332
  %232 = load i32, i32* @x.371
  %233 = load i32, i32* @y.372
  %234 = add i32 %232, -1349337259
  %235 = sub i32 %234, 1
  %236 = sub i32 %235, -1349337259
  %237 = sub i32 %232, 1
  %238 = mul i32 %232, %236
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %233, 10
  %242 = xor i1 %240, true
  %243 = xor i1 %241, true
  %244 = xor i1 true, true
  %245 = and i1 %242, true
  %246 = and i1 %240, %244
  %247 = and i1 %243, true
  %248 = and i1 %241, %244
  %249 = or i1 %245, %246
  %250 = or i1 %247, %248
  %251 = xor i1 %249, %250
  %252 = or i1 %242, %243
  %253 = xor i1 %252, true
  %254 = or i1 true, %244
  %255 = and i1 %253, %254
  %256 = or i1 %251, %255
  %257 = or i1 %240, %241
  br i1 %256, label %258, label %332

; <label>:258:                                    ; preds = %231
  ret void

; <label>:259:                                    ; preds = %203
  %260 = load i32, i32* @x.371
  %261 = load i32, i32* @y.372
  %262 = add i32 %260, -930850106
  %263 = sub i32 %262, 1
  %264 = sub i32 %263, -930850106
  %265 = sub i32 %260, 1
  %266 = mul i32 %260, %264
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %261, 10
  %270 = xor i1 %268, true
  %271 = xor i1 %269, true
  %272 = xor i1 false, true
  %273 = and i1 %270, false
  %274 = and i1 %268, %272
  %275 = and i1 %271, false
  %276 = and i1 %269, %272
  %277 = or i1 %273, %274
  %278 = or i1 %275, %276
  %279 = xor i1 %277, %278
  %280 = or i1 %270, %271
  %281 = xor i1 %280, true
  %282 = or i1 false, %272
  %283 = and i1 %281, %282
  %284 = or i1 %279, %283
  %285 = or i1 %268, %269
  br i1 %284, label %286, label %333

; <label>:286:                                    ; preds = %259, %333
  %287 = load i8*, i8** %8, align 8
  %288 = load i32, i32* %9, align 4
  %289 = insertvalue { i8*, i32 } undef, i8* %287, 0
  %290 = insertvalue { i8*, i32 } %289, i32 %288, 1
  %291 = load i32, i32* @x.371
  %292 = load i32, i32* @y.372
  %293 = sub i32 %291, -2033700541
  %294 = sub i32 %293, 1
  %295 = add i32 %294, -2033700541
  %296 = sub i32 %291, 1
  %297 = mul i32 %291, %295
  %298 = urem i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %292, 10
  %301 = xor i1 %299, true
  %302 = xor i1 %300, true
  %303 = xor i1 true, true
  %304 = and i1 %301, true
  %305 = and i1 %299, %303
  %306 = and i1 %302, true
  %307 = and i1 %300, %303
  %308 = or i1 %304, %305
  %309 = or i1 %306, %307
  %310 = xor i1 %308, %309
  %311 = or i1 %301, %302
  %312 = xor i1 %311, true
  %313 = or i1 true, %303
  %314 = and i1 %312, %313
  %315 = or i1 %310, %314
  %316 = or i1 %299, %300
  br i1 %315, label %317, label %333

; <label>:317:                                    ; preds = %286
  resume { i8*, i32 } %290

; <label>:318:                                    ; preds = %202
  %319 = landingpad { i8*, i32 }
          catch i8* null
  %320 = extractvalue { i8*, i32 } %319, 0
  call void @__clang_call_terminate(i8* %320) #10
  unreachable

; <label>:321:                                    ; preds = %140
  unreachable

; <label>:322:                                    ; preds = %31, %16
  br label %31

; <label>:323:                                    ; preds = %75, %60
  %324 = load i32**, i32*** %7, align 8
  store i32* %59, i32** %324, align 8
  br label %75

; <label>:325:                                    ; preds = %118, %104
  %326 = load i32**, i32*** %7, align 8
  %327 = getelementptr inbounds i32*, i32** %326, i32 1
  store i32** %327, i32*** %7, align 8
  br label %118

; <label>:328:                                    ; preds = %172, %146
  %329 = landingpad { i8*, i32 }
          cleanup
  %330 = extractvalue { i8*, i32 } %329, 0
  store i8* %330, i8** %8, align 8
  %331 = extractvalue { i8*, i32 } %329, 1
  store i32 %331, i32* %9, align 4
  br label %172

; <label>:332:                                    ; preds = %231, %204
  br label %231

; <label>:333:                                    ; preds = %286, %259
  %334 = load i8*, i8** %8, align 8
  %335 = load i32, i32* %9, align 4
  %336 = insertvalue { i8*, i32 } undef, i8* %334, 0
  %337 = insertvalue { i8*, i32 } %336, i32 %335, 1
  br label %286
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"*, i32**, i64) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.373
  %5 = load i32, i32* @y.374
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %5, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %113

; <label>:29:                                     ; preds = %3, %113
  %30 = alloca %"class.std::_Deque_base"*, align 8
  %31 = alloca i32**, align 8
  %32 = alloca i64, align 8
  %33 = alloca %"class.std::allocator.14", align 1
  %34 = alloca i8*
  %35 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %30, align 8
  store i32** %1, i32*** %31, align 8
  store i64 %2, i64* %32, align 8
  %36 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %30, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.14"* sret %33, %"class.std::_Deque_base"* %36) #3
  %37 = load i32**, i32*** %31, align 8
  %38 = load i64, i64* %32, align 8
  %39 = load i32, i32* @x.373
  %40 = load i32, i32* @y.374
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  br i1 %62, label %64, label %113

; <label>:64:                                     ; preds = %29
  invoke void @_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m(%"class.std::allocator.14"* dereferenceable(1) %33, i32** %37, i64 %38)
          to label %65 unwind label %66

; <label>:65:                                     ; preds = %64
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.14"* %33) #3
  ret void

; <label>:66:                                     ; preds = %64
  %67 = load i32, i32* @x.373
  %68 = load i32, i32* @y.374
  %69 = sub i32 %67, 337375059
  %70 = sub i32 %69, 1
  %71 = add i32 %70, 337375059
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  br i1 %79, label %81, label %123

; <label>:81:                                     ; preds = %66, %123
  %82 = landingpad { i8*, i32 }
          catch i8* null
  %83 = extractvalue { i8*, i32 } %82, 0
  store i8* %83, i8** %34, align 8
  %84 = extractvalue { i8*, i32 } %82, 1
  store i32 %84, i32* %35, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.14"* %33) #3
  %85 = load i32, i32* @x.373
  %86 = load i32, i32* @y.374
  %87 = sub i32 0, 1
  %88 = add i32 %85, %87
  %89 = sub i32 %85, 1
  %90 = mul i32 %85, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %86, 10
  %94 = xor i1 %92, true
  %95 = xor i1 %93, true
  %96 = xor i1 true, true
  %97 = and i1 %94, true
  %98 = and i1 %92, %96
  %99 = and i1 %95, true
  %100 = and i1 %93, %96
  %101 = or i1 %97, %98
  %102 = or i1 %99, %100
  %103 = xor i1 %101, %102
  %104 = or i1 %94, %95
  %105 = xor i1 %104, true
  %106 = or i1 true, %96
  %107 = and i1 %105, %106
  %108 = or i1 %103, %107
  %109 = or i1 %92, %93
  br i1 %108, label %110, label %123

; <label>:110:                                    ; preds = %81
  br label %111

; <label>:111:                                    ; preds = %110
  %112 = load i8*, i8** %34, align 8
  call void @__clang_call_terminate(i8* %112) #10
  unreachable

; <label>:113:                                    ; preds = %29, %3
  %114 = alloca %"class.std::_Deque_base"*, align 8
  %115 = alloca i32**, align 8
  %116 = alloca i64, align 8
  %117 = alloca %"class.std::allocator.14", align 1
  %118 = alloca i8*
  %119 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %114, align 8
  store i32** %1, i32*** %115, align 8
  store i64 %2, i64* %116, align 8
  %120 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %114, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.14"* sret %117, %"class.std::_Deque_base"* %120) #3
  %121 = load i32**, i32*** %115, align 8
  %122 = load i64, i64* %116, align 8
  br label %29

; <label>:123:                                    ; preds = %81, %66
  %124 = landingpad { i8*, i32 }
          catch i8* null
  %125 = extractvalue { i8*, i32 } %124, 0
  store i8* %125, i8** %34, align 8
  %126 = extractvalue { i8*, i32 } %124, 1
  store i32 %126, i32* %35, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.14"* %33) #3
  br label %81
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"*, i32**) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca i32**, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store i32** %1, i32*** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = load i32**, i32*** %4, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 3
  store i32** %6, i32*** %7, align 8
  %8 = load i32**, i32*** %4, align 8
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  store i32* %9, i32** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  %12 = load i32*, i32** %11, align 8
  %13 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #3
  %14 = getelementptr inbounds i32, i32* %12, i64 %13
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 2
  store i32* %14, i32** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.14"* noalias sret, %"class.std::_Deque_base"*) #4 comdat align 2 {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %3, align 8
  %4 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %5 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %4) #3
  call void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.14"* %0, %"class.std::allocator.10"* dereferenceable(1) %5) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m(%"class.std::allocator.14"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.14"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %3, align 8
  %6 = bitcast %"class.std::allocator.14"* %5 to %"class.__gnu_cxx::new_allocator.15"*
  %7 = load i64, i64* %4, align 8
  %8 = call i32** @_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.15"* %6, i64 %7, i8* null)
  ret i32** %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPiED2Ev(%"class.std::allocator.14"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.381
  %5 = load i32, i32* @y.382
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1825539142, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %61
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1825539142, label %17
    i32 873413286, label %25
    i32 979853603, label %56
    i32 1014909819, label %57
  ]

; <label>:16:                                     ; preds = %14
  br label %61

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 873413286, i32 1014909819
  store i32 %24, i32* %13
  br label %61

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.std::allocator.14"*, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %26, align 8
  %27 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %26, align 8
  %28 = bitcast %"class.std::allocator.14"* %27 to %"class.__gnu_cxx::new_allocator.15"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.15"* %28) #3
  %29 = load i32, i32* @x.381
  %30 = load i32, i32* @y.382
  %31 = add i32 %29, 1212910903
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, 1212910903
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 979853603, i32 1014909819
  store i32 %55, i32* %13
  br label %61

; <label>:56:                                     ; preds = %14
  ret void

; <label>:57:                                     ; preds = %14
  %58 = alloca %"class.std::allocator.14"*, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %58, align 8
  %59 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %58, align 8
  %60 = bitcast %"class.std::allocator.14"* %59 to %"class.__gnu_cxx::new_allocator.15"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.15"* %60) #3
  store i32 873413286, i32* %13
  br label %61

; <label>:61:                                     ; preds = %57, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.10"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.10"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.383
  %6 = load i32, i32* @y.384
  %7 = sub i32 %5, 1675246539
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1675246539
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 167611747, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 167611747, label %19
    i32 -1966515337, label %27
    i32 418422484, label %58
    i32 598663501, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1966515337, i32 598663501
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %28, align 8
  %29 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %28, align 8
  %30 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %30 to %"class.std::allocator.10"*
  store %"class.std::allocator.10"* %31, %"class.std::allocator.10"** %2
  %32 = load i32, i32* @x.383
  %33 = load i32, i32* @y.384
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 418422484, i32 598663501
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"class.std::allocator.10"*, %"class.std::allocator.10"** %2
  ret %"class.std::allocator.10"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %61, align 8
  %62 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %61, align 8
  %63 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %63 to %"class.std::allocator.10"*
  store i32 -1966515337, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.14"*, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.385
  %6 = load i32, i32* @y.386
  %7 = add i32 %5, 911986477
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 911986477
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -666261420, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -666261420, label %19
    i32 -1852052908, label %27
    i32 1627721999, label %58
    i32 1730695647, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1852052908, i32 1730695647
  store i32 %26, i32* %15
  br label %64

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.14"*, align 8
  %29 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %28, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %29, align 8
  %30 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %28, align 8
  %31 = bitcast %"class.std::allocator.14"* %30 to %"class.__gnu_cxx::new_allocator.15"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiEC2Ev(%"class.__gnu_cxx::new_allocator.15"* %31) #3
  %32 = load i32, i32* @x.385
  %33 = load i32, i32* @y.386
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 1627721999, i32 1730695647
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  ret void

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.std::allocator.14"*, align 8
  %61 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %60, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %61, align 8
  %62 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %60, align 8
  %63 = bitcast %"class.std::allocator.14"* %62 to %"class.__gnu_cxx::new_allocator.15"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiEC2Ev(%"class.__gnu_cxx::new_allocator.15"* %63) #3
  store i32 -1852052908, i32* %15
  br label %64

; <label>:64:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiEC2Ev(%"class.__gnu_cxx::new_allocator.15"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.387
  %5 = load i32, i32* @y.388
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -936671051, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %58
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -936671051, label %17
    i32 1418008710, label %37
    i32 1604035411, label %54
    i32 1862428539, label %55
  ]

; <label>:16:                                     ; preds = %14
  br label %58

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 1418008710, i32 1862428539
  store i32 %36, i32* %13
  br label %58

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %38, align 8
  %40 = load i32, i32* @x.387
  %41 = load i32, i32* @y.388
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 1604035411, i32 1862428539
  store i32 %53, i32* %13
  br label %58

; <label>:54:                                     ; preds = %14
  ret void

; <label>:55:                                     ; preds = %14
  %56 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %56, align 8
  %57 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %56, align 8
  store i32 1418008710, i32* %13
  br label %58

; <label>:58:                                     ; preds = %55, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.15"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.389
  %9 = load i32, i32* @y.390
  %10 = sub i32 %8, -40712009
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -40712009
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -327305559, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %97
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -327305559, label %22
    i32 922046201, label %42
    i32 179733524, label %79
    i32 -815112959, label %82
    i32 320005577, label %83
    i32 -1624191456, label %89
  ]

; <label>:21:                                     ; preds = %19
  br label %97

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 922046201, i32 -1624191456
  store i32 %41, i32* %18
  br label %97

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  %44 = alloca i64, align 8
  store i64* %44, i64** %5
  %45 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %43, align 8
  %46 = load volatile i64*, i64** %5
  store i64 %1, i64* %46, align 8
  store i8* %2, i8** %45, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %43, align 8
  %48 = load volatile i64*, i64** %5
  %49 = load i64, i64* %48, align 8
  %50 = call i64 @_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.15"* %47) #3
  %51 = icmp ugt i64 %49, %50
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.389
  %53 = load i32, i32* @y.390
  %54 = add i32 %52, -854697173
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, -854697173
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 179733524, i32 -1624191456
  store i32 %78, i32* %18
  br label %97

; <label>:79:                                     ; preds = %19
  %80 = load volatile i1, i1* %4
  %81 = select i1 %80, i32 -815112959, i32 320005577
  store i32 %81, i32* %18
  br label %97

; <label>:82:                                     ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:83:                                     ; preds = %19
  %84 = load volatile i64*, i64** %5
  %85 = load i64, i64* %84, align 8
  %86 = mul i64 %85, 8
  %87 = call i8* @_Znwm(i64 %86)
  %88 = bitcast i8* %87 to i32**
  ret i32** %88

; <label>:89:                                     ; preds = %19
  %90 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  %91 = alloca i64, align 8
  %92 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %90, align 8
  store i64 %1, i64* %91, align 8
  store i8* %2, i8** %92, align 8
  %93 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %90, align 8
  %94 = load i64, i64* %91, align 8
  %95 = call i64 @_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.15"* %93) #3
  %96 = icmp ugt i64 %94, %95
  store i32 922046201, i32* %18
  br label %97

; <label>:97:                                     ; preds = %89, %79, %42, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.15"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.15"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"*) #0 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %4 to %"class.std::allocator.10"*
  %6 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %7 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.10"* dereferenceable(1) %5, i64 %6)
  ret i32* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"*, i32**, i32**) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"class.std::_Deque_base"*
  %6 = alloca i32***
  %7 = alloca i32***
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.397
  %11 = load i32, i32* @y.398
  %12 = sub i32 %10, -58477890
  %13 = sub i32 %12, 1
  %14 = add i32 %13, -58477890
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -1270326981, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %144
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -1270326981, label %24
    i32 758721595, label %44
    i32 -1064156236, label %80
    i32 291406441, label %81
    i32 -251079252, label %97
    i32 1473096438, label %117
    i32 1979066261, label %120
    i32 -543858574, label %125
    i32 1200511980, label %130
    i32 -895845554, label %131
    i32 912684982, label %138
  ]

; <label>:23:                                     ; preds = %21
  br label %144

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 758721595, i32 -895845554
  store i32 %43, i32* %20
  br label %144

; <label>:44:                                     ; preds = %21
  %45 = alloca %"class.std::_Deque_base"*, align 8
  %46 = alloca i32**, align 8
  %47 = alloca i32**, align 8
  store i32*** %47, i32**** %7
  %48 = alloca i32**, align 8
  store i32*** %48, i32**** %6
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %45, align 8
  store i32** %1, i32*** %46, align 8
  %49 = load volatile i32***, i32**** %7
  store i32** %2, i32*** %49, align 8
  %50 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %45, align 8
  store %"class.std::_Deque_base"* %50, %"class.std::_Deque_base"** %5
  %51 = load i32**, i32*** %46, align 8
  %52 = load volatile i32***, i32**** %6
  store i32** %51, i32*** %52, align 8
  %53 = load i32, i32* @x.397
  %54 = load i32, i32* @y.398
  %55 = sub i32 %53, -1090070829
  %56 = sub i32 %55, 1
  %57 = add i32 %56, -1090070829
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 -1064156236, i32 -895845554
  store i32 %79, i32* %20
  br label %144

; <label>:80:                                     ; preds = %21
  store i32 291406441, i32* %20
  br label %144

; <label>:81:                                     ; preds = %21
  %82 = load i32, i32* @x.397
  %83 = load i32, i32* @y.398
  %84 = sub i32 %82, -702408093
  %85 = sub i32 %84, 1
  %86 = add i32 %85, -702408093
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  %96 = select i1 %94, i32 -251079252, i32 912684982
  store i32 %96, i32* %20
  br label %144

; <label>:97:                                     ; preds = %21
  %98 = load volatile i32***, i32**** %6
  %99 = load i32**, i32*** %98, align 8
  %100 = load volatile i32***, i32**** %7
  %101 = load i32**, i32*** %100, align 8
  %102 = icmp ult i32** %99, %101
  store i1 %102, i1* %4
  %103 = load i32, i32* @x.397
  %104 = load i32, i32* @y.398
  %105 = sub i32 0, 1
  %106 = add i32 %103, %105
  %107 = sub i32 %103, 1
  %108 = mul i32 %103, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %104, 10
  %112 = and i1 %110, %111
  %113 = xor i1 %110, %111
  %114 = or i1 %112, %113
  %115 = or i1 %110, %111
  %116 = select i1 %114, i32 1473096438, i32 912684982
  store i32 %116, i32* %20
  br label %144

; <label>:117:                                    ; preds = %21
  %118 = load volatile i1, i1* %4
  %119 = select i1 %118, i32 1979066261, i32 1200511980
  store i32 %119, i32* %20
  br label %144

; <label>:120:                                    ; preds = %21
  %121 = load volatile i32***, i32**** %6
  %122 = load i32**, i32*** %121, align 8
  %123 = load i32*, i32** %122, align 8
  %124 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %124, i32* %123) #3
  store i32 -543858574, i32* %20
  br label %144

; <label>:125:                                    ; preds = %21
  %126 = load volatile i32***, i32**** %6
  %127 = load i32**, i32*** %126, align 8
  %128 = getelementptr inbounds i32*, i32** %127, i32 1
  %129 = load volatile i32***, i32**** %6
  store i32** %128, i32*** %129, align 8
  store i32 291406441, i32* %20
  br label %144

; <label>:130:                                    ; preds = %21
  ret void

; <label>:131:                                    ; preds = %21
  %132 = alloca %"class.std::_Deque_base"*, align 8
  %133 = alloca i32**, align 8
  %134 = alloca i32**, align 8
  %135 = alloca i32**, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %132, align 8
  store i32** %1, i32*** %133, align 8
  store i32** %2, i32*** %134, align 8
  %136 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %132, align 8
  %137 = load i32**, i32*** %133, align 8
  store i32** %137, i32*** %135, align 8
  store i32 758721595, i32* %20
  br label %144

; <label>:138:                                    ; preds = %21
  %139 = load volatile i32***, i32**** %6
  %140 = load i32**, i32*** %139, align 8
  %141 = load volatile i32***, i32**** %7
  %142 = load i32**, i32*** %141, align 8
  %143 = icmp ult i32** %140, %142
  store i32 -251079252, i32* %20
  br label %144

; <label>:144:                                    ; preds = %138, %131, %125, %120, %117, %97, %81, %80, %44, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.10"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.10"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %3, align 8
  %6 = bitcast %"class.std::allocator.10"* %5 to %"class.__gnu_cxx::new_allocator.11"*
  %7 = load i64, i64* %4, align 8
  %8 = call i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.11"* %6, i64 %7, i8* null)
  ret i32* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.11"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -633676951, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -633676951, label %16
    i32 -732974301, label %21
    i32 1304066600, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -732974301, i32 1304066600
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 4
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to i32*
  ret i32* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.403
  %5 = load i32, i32* @y.404
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 241691532, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %59
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 241691532, label %17
    i32 1913807137, label %25
    i32 270827512, label %55
    i32 -137875028, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %59

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 1913807137, i32 -137875028
  store i32 %24, i32* %13
  br label %59

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %26, align 8
  %28 = load i32, i32* @x.403
  %29 = load i32, i32* @y.404
  %30 = sub i32 %28, 264779715
  %31 = sub i32 %30, 1
  %32 = add i32 %31, 264779715
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 270827512, i32 -137875028
  store i32 %54, i32* %13
  br label %59

; <label>:55:                                     ; preds = %14
  ret i64 4611686018427387903

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %57, align 8
  store i32 1913807137, i32* %13
  br label %59

; <label>:59:                                     ; preds = %56, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"*, i32*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6 to %"class.std::allocator.10"*
  %8 = load i32*, i32** %4, align 8
  %9 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %10 unwind label %12

; <label>:10:                                     ; preds = %2
  invoke void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.10"* dereferenceable(1) %7, i32* %8, i64 %9)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %10
  ret void

; <label>:12:                                     ; preds = %10, %2
  %13 = load i32, i32* @x.405
  %14 = load i32, i32* @y.406
  %15 = add i32 %13, 384046586
  %16 = sub i32 %15, 1
  %17 = sub i32 %16, 384046586
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %14, 10
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  br i1 %37, label %39, label %57

; <label>:39:                                     ; preds = %12, %57
  %40 = landingpad { i8*, i32 }
          catch i8* null
  %41 = extractvalue { i8*, i32 } %40, 0
  call void @__clang_call_terminate(i8* %41) #10
  %42 = load i32, i32* @x.405
  %43 = load i32, i32* @y.406
  %44 = sub i32 %42, -279843149
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -279843149
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  br i1 %54, label %56, label %57

; <label>:56:                                     ; preds = %39
  unreachable

; <label>:57:                                     ; preds = %39, %12
  %58 = landingpad { i8*, i32 }
          catch i8* null
  %59 = extractvalue { i8*, i32 } %58, 0
  call void @__clang_call_terminate(i8* %59) #10
  br label %39
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m(%"class.std::allocator.14"* dereferenceable(1), i32**, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.14"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %4, align 8
  %8 = bitcast %"class.std::allocator.14"* %7 to %"class.__gnu_cxx::new_allocator.15"*
  %9 = load i32**, i32*** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.15"* %8, i32** %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.15"*, i32**, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.409
  %7 = load i32, i32* @y.410
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1596759752, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1596759752, label %19
    i32 -2075419556, label %27
    i32 914284088, label %60
    i32 -2125160063, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -2075419556, i32 -2125160063
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  %29 = alloca i32**, align 8
  %30 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %28, align 8
  store i32** %1, i32*** %29, align 8
  store i64 %2, i64* %30, align 8
  %31 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %28, align 8
  %32 = load i32**, i32*** %29, align 8
  %33 = bitcast i32** %32 to i8*
  call void @_ZdlPv(i8* %33) #3
  %34 = load i32, i32* @x.409
  %35 = load i32, i32* @y.410
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 914284088, i32 -2125160063
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  %63 = alloca i32**, align 8
  %64 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %62, align 8
  store i32** %1, i32*** %63, align 8
  store i64 %2, i64* %64, align 8
  %65 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %62, align 8
  %66 = load i32**, i32*** %63, align 8
  %67 = bitcast i32** %66 to i8*
  call void @_ZdlPv(i8* %67) #3
  store i32 -2075419556, i32* %15
  br label %68

; <label>:68:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %2 unwind label %56

; <label>:2:                                      ; preds = %0
  %3 = load i32, i32* @x.411
  %4 = load i32, i32* @y.412
  %5 = sub i32 %3, -1058629773
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -1058629773
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %59

; <label>:29:                                     ; preds = %2, %59
  %30 = load i32, i32* @x.411
  %31 = load i32, i32* @y.412
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  br i1 %53, label %55, label %59

; <label>:55:                                     ; preds = %29
  ret i64 %1

; <label>:56:                                     ; preds = %0
  %57 = landingpad { i8*, i32 }
          catch i8* null
  %58 = extractvalue { i8*, i32 } %57, 0
  call void @__clang_call_terminate(i8* %58) #10
  unreachable

; <label>:59:                                     ; preds = %29, %2
  br label %29
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80)) #4 comdat {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  ret %"class.std::deque"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEEC2EOS1_(%"class.std::deque"*, %"class.std::deque"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %4, align 8
  %5 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %6 = bitcast %"class.std::deque"* %5 to %"class.std::_Deque_base"*
  %7 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %8 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80) %7) #3
  %9 = bitcast %"class.std::deque"* %8 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_(%"class.std::_Deque_base"* %6, %"class.std::_Deque_base"* dereferenceable(80) %9)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_(%"class.std::_Deque_base"*, %"class.std::_Deque_base"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %"struct.std::integral_constant", align 1
  %6 = alloca %"struct.__gnu_cxx::__allocator_always_compares_equal", align 1
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %4, align 8
  %7 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %9 = call dereferenceable(80) %"class.std::_Deque_base"* @_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::_Deque_base"* dereferenceable(80) %8) #3
  %10 = bitcast %"struct.__gnu_cxx::__allocator_always_compares_equal"* %6 to %"struct.std::integral_constant"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE(%"class.std::_Deque_base"* %7, %"class.std::_Deque_base"* dereferenceable(80) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::_Deque_base"* @_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::_Deque_base"* dereferenceable(80)) #4 comdat {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  ret %"class.std::_Deque_base"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE(%"class.std::_Deque_base"*, %"class.std::_Deque_base"* dereferenceable(80)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %"class.std::_Deque_base"*, align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %5, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %9 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %8, i32 0, i32 0
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %11 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %10) #3
  %12 = call dereferenceable(1) %"class.std::allocator.10"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.10"* dereferenceable(1) %11) #3
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %9, %"class.std::allocator.10"* dereferenceable(1) %12) #3
  invoke void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"* %8, i64 0)
          to label %13 unwind label %53

; <label>:13:                                     ; preds = %2
  %14 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %15 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %15, i32 0, i32 0
  %17 = load i32**, i32*** %16, align 8
  %18 = icmp ne i32** %17, null
  br i1 %18, label %19, label %57

; <label>:19:                                     ; preds = %13
  %20 = load i32, i32* @x.421
  %21 = load i32, i32* @y.422
  %22 = sub i32 %20, -1357704961
  %23 = sub i32 %22, 1
  %24 = add i32 %23, -1357704961
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  br i1 %32, label %34, label %117

; <label>:34:                                     ; preds = %19, %117
  %35 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %8, i32 0, i32 0
  %36 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %37 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %36, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %35, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* dereferenceable(80) %37) #3
  %38 = load i32, i32* @x.421
  %39 = load i32, i32* @y.422
  %40 = add i32 %38, -23186069
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -23186069
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %117

; <label>:52:                                     ; preds = %34
  br label %57

; <label>:53:                                     ; preds = %2
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %6, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %7, align 4
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %9) #3
  br label %58

; <label>:57:                                     ; preds = %52, %13
  ret void

; <label>:58:                                     ; preds = %53
  %59 = load i32, i32* @x.421
  %60 = load i32, i32* @y.422
  %61 = add i32 %59, 678327573
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, 678327573
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 true, true
  %72 = and i1 %69, true
  %73 = and i1 %67, %71
  %74 = and i1 %70, true
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 true, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  br i1 %83, label %85, label %121

; <label>:85:                                     ; preds = %58, %121
  %86 = load i8*, i8** %6, align 8
  %87 = load i32, i32* %7, align 4
  %88 = insertvalue { i8*, i32 } undef, i8* %86, 0
  %89 = insertvalue { i8*, i32 } %88, i32 %87, 1
  %90 = load i32, i32* @x.421
  %91 = load i32, i32* @y.422
  %92 = sub i32 %90, -87664142
  %93 = sub i32 %92, 1
  %94 = add i32 %93, -87664142
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = xor i1 %98, true
  %101 = xor i1 %99, true
  %102 = xor i1 true, true
  %103 = and i1 %100, true
  %104 = and i1 %98, %102
  %105 = and i1 %101, true
  %106 = and i1 %99, %102
  %107 = or i1 %103, %104
  %108 = or i1 %105, %106
  %109 = xor i1 %107, %108
  %110 = or i1 %100, %101
  %111 = xor i1 %110, true
  %112 = or i1 true, %102
  %113 = and i1 %111, %112
  %114 = or i1 %109, %113
  %115 = or i1 %98, %99
  br i1 %114, label %116, label %121

; <label>:116:                                    ; preds = %85
  resume { i8*, i32 } %89

; <label>:117:                                    ; preds = %34, %19
  %118 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %8, i32 0, i32 0
  %119 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %120 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %119, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %118, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* dereferenceable(80) %120) #3
  br label %34

; <label>:121:                                    ; preds = %85, %58
  %122 = load i8*, i8** %6, align 8
  %123 = load i32, i32* %7, align 4
  %124 = insertvalue { i8*, i32 } undef, i8* %122, 0
  %125 = insertvalue { i8*, i32 } %124, i32 %123, 1
  br label %85
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.10"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.10"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %2, align 8
  %3 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %2, align 8
  ret %"class.std::allocator.10"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.10"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %4 to %"class.std::allocator.10"*
  ret %"class.std::allocator.10"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %4 = alloca %"class.std::allocator.10"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %4, align 8
  %5 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5 to %"class.std::allocator.10"*
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.10"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.10"* dereferenceable(1) %7) #3
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.10"* %6, %"class.std::allocator.10"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 0
  store i32** null, i32*** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 1
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %11) #3
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* dereferenceable(80)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %4 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %1, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %5 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 2
  %7 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %7, i32 0, i32 2
  call void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6, %"struct.std::_Deque_iterator"* dereferenceable(32) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 3
  %10 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %10, i32 0, i32 3
  call void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32) %9, %"struct.std::_Deque_iterator"* dereferenceable(32) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 0
  %13 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %13, i32 0, i32 0
  call void @_ZSt4swapIPPiEvRT_S3_(i32*** dereferenceable(8) %12, i32*** dereferenceable(8) %14) #3
  %15 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 1
  %16 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %17 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %16, i32 0, i32 1
  call void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8) %15, i64* dereferenceable(8) %17) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %1, %"class.__gnu_cxx::new_allocator.11"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #4 comdat {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  %5 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %6 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %7 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6) #3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %5, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  %8 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %9 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %8) #3
  %10 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %11 = bitcast %"struct.std::_Deque_iterator"* %10 to i8*
  %12 = bitcast %"struct.std::_Deque_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 32, i32 8, i1 false)
  %13 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %5) #3
  %14 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %15 = bitcast %"struct.std::_Deque_iterator"* %14 to i8*
  %16 = bitcast %"struct.std::_Deque_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 32, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPPiEvRT_S3_(i32*** dereferenceable(8), i32*** dereferenceable(8)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.435
  %6 = load i32, i32* @y.436
  %7 = sub i32 %5, 1811239307
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1811239307
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -245972028, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %71
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -245972028, label %19
    i32 534132494, label %27
    i32 166764625, label %56
    i32 585239342, label %57
  ]

; <label>:18:                                     ; preds = %16
  br label %71

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 534132494, i32 585239342
  store i32 %26, i32* %15
  br label %71

; <label>:27:                                     ; preds = %16
  %28 = alloca i32***, align 8
  %29 = alloca i32***, align 8
  %30 = alloca i32**, align 8
  store i32*** %0, i32**** %28, align 8
  store i32*** %1, i32**** %29, align 8
  %31 = load i32***, i32**** %28, align 8
  %32 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %31) #3
  %33 = load i32**, i32*** %32, align 8
  store i32** %33, i32*** %30, align 8
  %34 = load i32***, i32**** %29, align 8
  %35 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %34) #3
  %36 = load i32**, i32*** %35, align 8
  %37 = load i32***, i32**** %28, align 8
  store i32** %36, i32*** %37, align 8
  %38 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %30) #3
  %39 = load i32**, i32*** %38, align 8
  %40 = load i32***, i32**** %29, align 8
  store i32** %39, i32*** %40, align 8
  %41 = load i32, i32* @x.435
  %42 = load i32, i32* @y.436
  %43 = add i32 %41, 839597164
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 839597164
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 166764625, i32 585239342
  store i32 %55, i32* %15
  br label %71

; <label>:56:                                     ; preds = %16
  ret void

; <label>:57:                                     ; preds = %16
  %58 = alloca i32***, align 8
  %59 = alloca i32***, align 8
  %60 = alloca i32**, align 8
  store i32*** %0, i32**** %58, align 8
  store i32*** %1, i32**** %59, align 8
  %61 = load i32***, i32**** %58, align 8
  %62 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %61) #3
  %63 = load i32**, i32*** %62, align 8
  store i32** %63, i32*** %60, align 8
  %64 = load i32***, i32**** %59, align 8
  %65 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %64) #3
  %66 = load i32**, i32*** %65, align 8
  %67 = load i32***, i32**** %58, align 8
  store i32** %66, i32*** %67, align 8
  %68 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %60) #3
  %69 = load i32**, i32*** %68, align 8
  %70 = load i32***, i32**** %59, align 8
  store i32** %69, i32*** %70, align 8
  store i32 534132494, i32* %15
  br label %71

; <label>:71:                                     ; preds = %57, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.437
  %6 = load i32, i32* @y.438
  %7 = sub i32 %5, 1120104277
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1120104277
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1828272369, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1828272369, label %19
    i32 -1517972206, label %27
    i32 954649272, label %55
    i32 759019608, label %56
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1517972206, i32 759019608
  store i32 %26, i32* %15
  br label %70

; <label>:27:                                     ; preds = %16
  %28 = alloca i64*, align 8
  %29 = alloca i64*, align 8
  %30 = alloca i64, align 8
  store i64* %0, i64** %28, align 8
  store i64* %1, i64** %29, align 8
  %31 = load i64*, i64** %28, align 8
  %32 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %31) #3
  %33 = load i64, i64* %32, align 8
  store i64 %33, i64* %30, align 8
  %34 = load i64*, i64** %29, align 8
  %35 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %34) #3
  %36 = load i64, i64* %35, align 8
  %37 = load i64*, i64** %28, align 8
  store i64 %36, i64* %37, align 8
  %38 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %30) #3
  %39 = load i64, i64* %38, align 8
  %40 = load i64*, i64** %29, align 8
  store i64 %39, i64* %40, align 8
  %41 = load i32, i32* @x.437
  %42 = load i32, i32* @y.438
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 954649272, i32 759019608
  store i32 %54, i32* %15
  br label %70

; <label>:55:                                     ; preds = %16
  ret void

; <label>:56:                                     ; preds = %16
  %57 = alloca i64*, align 8
  %58 = alloca i64*, align 8
  %59 = alloca i64, align 8
  store i64* %0, i64** %57, align 8
  store i64* %1, i64** %58, align 8
  %60 = load i64*, i64** %57, align 8
  %61 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %60) #3
  %62 = load i64, i64* %61, align 8
  store i64 %62, i64* %59, align 8
  %63 = load i64*, i64** %58, align 8
  %64 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %63) #3
  %65 = load i64, i64* %64, align 8
  %66 = load i64*, i64** %57, align 8
  store i64 %65, i64* %66, align 8
  %67 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %59) #3
  %68 = load i64, i64* %67, align 8
  %69 = load i64*, i64** %58, align 8
  store i64 %68, i64* %69, align 8
  store i32 -1517972206, i32* %15
  br label %70

; <label>:70:                                     ; preds = %56, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32)) #4 comdat {
  %2 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2, align 8
  ret %"struct.std::_Deque_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"* dereferenceable(32)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  store i32* %9, i32** %6, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  %11 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %11, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  store i32* %13, i32** %10, align 8
  %14 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 2
  %15 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %16 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %15, i32 0, i32 2
  %17 = load i32*, i32** %16, align 8
  store i32* %17, i32** %14, align 8
  %18 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 3
  %19 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %20 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %19, i32 0, i32 3
  %21 = load i32**, i32*** %20, align 8
  store i32** %21, i32*** %18, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8)) #4 comdat {
  %2 = alloca i32***, align 8
  store i32*** %0, i32**** %2, align 8
  %3 = load i32***, i32**** %2, align 8
  ret i32*** %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_(%"class.std::deque"*, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*, %"class.std::allocator.10"* dereferenceable(1)) #4 comdat align 2 {
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.447
  %8 = load i32, i32* @y.448
  %9 = sub i32 %7, 1389323975
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 1389323975
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1677254320, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %77
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1677254320, label %21
    i32 254952960, label %41
    i32 1549452594, label %72
    i32 -518588976, label %73
  ]

; <label>:20:                                     ; preds = %18
  br label %77

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 254952960, i32 -518588976
  store i32 %40, i32* %17
  br label %77

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::deque"*, align 8
  %43 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %42, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %43, align 8
  %44 = load %"class.std::deque"*, %"class.std::deque"** %42, align 8
  %45 = load i32, i32* @x.447
  %46 = load i32, i32* @y.448
  %47 = sub i32 %45, -1260651971
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -1260651971
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 1549452594, i32 -518588976
  store i32 %71, i32* %17
  br label %77

; <label>:72:                                     ; preds = %18
  ret void

; <label>:73:                                     ; preds = %18
  %74 = alloca %"class.std::deque"*, align 8
  %75 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %74, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %75, align 8
  %76 = load %"class.std::deque"*, %"class.std::deque"** %74, align 8
  store i32 254952960, i32* %17
  br label %77

; <label>:77:                                     ; preds = %73, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*) #4 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %3, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %5 = bitcast %"class.std::deque"* %4 to %"class.std::_Deque_base"*
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*) #4 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %3, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %5 = bitcast %"class.std::deque"* %4 to %"class.std::_Deque_base"*
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i32**
  %3 = alloca %"class.std::_Deque_base"*
  %4 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  %5 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  store %"class.std::_Deque_base"* %5, %"class.std::_Deque_base"** %3
  %6 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %7 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %7, i32 0, i32 0
  %9 = load i32**, i32*** %8, align 8
  store i32** %9, i32*** %2
  %10 = alloca i32
  store i32 1143192214, i32* %10
  br label %11

; <label>:11:                                     ; preds = %1, %43
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 1143192214, label %14
    i32 916677058, label %18
    i32 -3405166, label %40
  ]

; <label>:13:                                     ; preds = %11
  br label %43

; <label>:14:                                     ; preds = %11
  %15 = load volatile i32**, i32*** %2
  %16 = icmp ne i32** %15, null
  %17 = select i1 %16, i32 916677058, i32 -3405166
  store i32 %17, i32* %10
  br label %43

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %20, i32 0, i32 2
  %22 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %21, i32 0, i32 3
  %23 = load i32**, i32*** %22, align 8
  %24 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %25 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %25, i32 0, i32 3
  %27 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %26, i32 0, i32 3
  %28 = load i32**, i32*** %27, align 8
  %29 = getelementptr inbounds i32*, i32** %28, i64 1
  %30 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %30, i32** %23, i32** %29) #3
  %31 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %32 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %32, i32 0, i32 0
  %34 = load i32**, i32*** %33, align 8
  %35 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %36 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %35, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %36, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %39, i32** %34, i64 %38) #3
  store i32 -3405166, i32* %10
  br label %43

; <label>:40:                                     ; preds = %11
  %41 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %42 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %41, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %42) #3
  ret void

; <label>:43:                                     ; preds = %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE9push_backERKi(%"class.std::deque"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i32*
  %5 = alloca %"class.std::deque"*
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca i32*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %6, align 8
  store i32* %1, i32** %7, align 8
  %8 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  store %"class.std::deque"* %8, %"class.std::deque"** %5
  %9 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %10 = bitcast %"class.std::deque"* %9 to %"class.std::_Deque_base"*
  %11 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %11, i32 0, i32 3
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %12, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  store i32* %14, i32** %4
  %15 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %16 = bitcast %"class.std::deque"* %15 to %"class.std::_Deque_base"*
  %17 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %16, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %17, i32 0, i32 3
  %19 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %18, i32 0, i32 2
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 -1
  store i32* %21, i32** %3
  %22 = alloca i32
  store i32 -2111710134, i32* %22
  br label %23

; <label>:23:                                     ; preds = %2, %86
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 -2111710134, label %26
    i32 1848007721, label %31
    i32 -1887043284, label %50
    i32 -1897372624, label %53
    i32 -1202815704, label %69
    i32 1120994184, label %84
    i32 817988673, label %85
  ]

; <label>:25:                                     ; preds = %23
  br label %86

; <label>:26:                                     ; preds = %23
  %27 = load volatile i32*, i32** %4
  %28 = load volatile i32*, i32** %3
  %29 = icmp ne i32* %27, %28
  %30 = select i1 %29, i32 1848007721, i32 -1887043284
  store i32 %30, i32* %22
  br label %86

; <label>:31:                                     ; preds = %23
  %32 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %33 = bitcast %"class.std::deque"* %32 to %"class.std::_Deque_base"*
  %34 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %33, i32 0, i32 0
  %35 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %34 to %"class.std::allocator.10"*
  %36 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %37 = bitcast %"class.std::deque"* %36 to %"class.std::_Deque_base"*
  %38 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %38, i32 0, i32 3
  %40 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %39, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = load i32*, i32** %7, align 8
  call void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.10"* dereferenceable(1) %35, i32* %41, i32* dereferenceable(4) %42)
  %43 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %44 = bitcast %"class.std::deque"* %43 to %"class.std::_Deque_base"*
  %45 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %45, i32 0, i32 3
  %47 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %46, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = getelementptr inbounds i32, i32* %48, i32 1
  store i32* %49, i32** %47, align 8
  store i32 -1897372624, i32* %22
  br label %86

; <label>:50:                                     ; preds = %23
  %51 = load i32*, i32** %7, align 8
  %52 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  call void @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_(%"class.std::deque"* %52, i32* dereferenceable(4) %51)
  store i32 -1897372624, i32* %22
  br label %86

; <label>:53:                                     ; preds = %23
  %54 = load i32, i32* @x.455
  %55 = load i32, i32* @y.456
  %56 = sub i32 %54, 2067371936
  %57 = sub i32 %56, 1
  %58 = add i32 %57, 2067371936
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 -1202815704, i32 817988673
  store i32 %68, i32* %22
  br label %86

; <label>:69:                                     ; preds = %23
  %70 = load i32, i32* @x.455
  %71 = load i32, i32* @y.456
  %72 = sub i32 0, 1
  %73 = add i32 %70, %72
  %74 = sub i32 %70, 1
  %75 = mul i32 %70, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %71, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  %83 = select i1 %81, i32 1120994184, i32 817988673
  store i32 %83, i32* %22
  br label %86

; <label>:84:                                     ; preds = %23
  ret void

; <label>:85:                                     ; preds = %23
  store i32 -1202815704, i32* %22
  br label %86

; <label>:86:                                     ; preds = %85, %69, %53, %50, %31, %26, %25
  br label %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.10"* dereferenceable(1), i32*, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.457
  %7 = load i32, i32* @y.458
  %8 = sub i32 %6, -1089040944
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1089040944
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1898662078, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %61
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1898662078, label %20
    i32 -835255546, label %28
    i32 28136844, label %51
    i32 -539086063, label %52
  ]

; <label>:19:                                     ; preds = %17
  br label %61

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -835255546, i32 -539086063
  store i32 %27, i32* %16
  br label %61

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.10"*, align 8
  %30 = alloca i32*, align 8
  %31 = alloca i32*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %29, align 8
  store i32* %1, i32** %30, align 8
  store i32* %2, i32** %31, align 8
  %32 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %29, align 8
  %33 = bitcast %"class.std::allocator.10"* %32 to %"class.__gnu_cxx::new_allocator.11"*
  %34 = load i32*, i32** %30, align 8
  %35 = load i32*, i32** %31, align 8
  %36 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %35) #3
  call void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.11"* %33, i32* %34, i32* dereferenceable(4) %36)
  %37 = load i32, i32* @x.457
  %38 = load i32, i32* @y.458
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 28136844, i32 -539086063
  store i32 %50, i32* %16
  br label %61

; <label>:51:                                     ; preds = %17
  ret void

; <label>:52:                                     ; preds = %17
  %53 = alloca %"class.std::allocator.10"*, align 8
  %54 = alloca i32*, align 8
  %55 = alloca i32*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %53, align 8
  store i32* %1, i32** %54, align 8
  store i32* %2, i32** %55, align 8
  %56 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %53, align 8
  %57 = bitcast %"class.std::allocator.10"* %56 to %"class.__gnu_cxx::new_allocator.11"*
  %58 = load i32*, i32** %54, align 8
  %59 = load i32*, i32** %55, align 8
  %60 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %59) #3
  call void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.11"* %57, i32* %58, i32* dereferenceable(4) %60)
  store i32 -835255546, i32* %16
  br label %61

; <label>:61:                                     ; preds = %52, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_(%"class.std::deque"*, i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.459
  %4 = load i32, i32* @y.460
  %5 = sub i32 %3, -105210352
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -105210352
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %270

; <label>:29:                                     ; preds = %2, %270
  %30 = alloca %"class.std::deque"*, align 8
  %31 = alloca i32*, align 8
  %32 = alloca i8*
  %33 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %30, align 8
  store i32* %1, i32** %31, align 8
  %34 = load %"class.std::deque"*, %"class.std::deque"** %30, align 8
  call void @_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm(%"class.std::deque"* %34, i64 1)
  %35 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  %36 = call i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %35)
  %37 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  %38 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %38, i32 0, i32 3
  %40 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %39, i32 0, i32 3
  %41 = load i32**, i32*** %40, align 8
  %42 = getelementptr inbounds i32*, i32** %41, i64 1
  store i32* %36, i32** %42, align 8
  %43 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  %44 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %43, i32 0, i32 0
  %45 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %44 to %"class.std::allocator.10"*
  %46 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  %47 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %46, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %47, i32 0, i32 3
  %49 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %48, i32 0, i32 0
  %50 = load i32*, i32** %49, align 8
  %51 = load i32*, i32** %31, align 8
  %52 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %51) #3
  %53 = load i32, i32* @x.459
  %54 = load i32, i32* @y.460
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  br i1 %64, label %66, label %270

; <label>:66:                                     ; preds = %29
  invoke void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.10"* dereferenceable(1) %45, i32* %50, i32* dereferenceable(4) %52)
          to label %67 unwind label %116

; <label>:67:                                     ; preds = %66
  %68 = load i32, i32* @x.459
  %69 = load i32, i32* @y.460
  %70 = add i32 %68, -190439722
  %71 = sub i32 %70, 1
  %72 = sub i32 %71, -190439722
  %73 = sub i32 %68, 1
  %74 = mul i32 %68, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %69, 10
  %78 = and i1 %76, %77
  %79 = xor i1 %76, %77
  %80 = or i1 %78, %79
  %81 = or i1 %76, %77
  br i1 %80, label %82, label %294

; <label>:82:                                     ; preds = %67, %294
  %83 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  %84 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %83, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %84, i32 0, i32 3
  %86 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  %87 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %86, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %87, i32 0, i32 3
  %89 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %88, i32 0, i32 3
  %90 = load i32**, i32*** %89, align 8
  %91 = getelementptr inbounds i32*, i32** %90, i64 1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %85, i32** %91) #3
  %92 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  %93 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %92, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %93, i32 0, i32 3
  %95 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %94, i32 0, i32 1
  %96 = load i32*, i32** %95, align 8
  %97 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  %98 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %97, i32 0, i32 0
  %99 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %98, i32 0, i32 3
  %100 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %99, i32 0, i32 0
  store i32* %96, i32** %100, align 8
  %101 = load i32, i32* @x.459
  %102 = load i32, i32* @y.460
  %103 = sub i32 %101, 590548090
  %104 = sub i32 %103, 1
  %105 = add i32 %104, 590548090
  %106 = sub i32 %101, 1
  %107 = mul i32 %101, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %102, 10
  %111 = and i1 %109, %110
  %112 = xor i1 %109, %110
  %113 = or i1 %111, %112
  %114 = or i1 %109, %110
  br i1 %113, label %115, label %294

; <label>:115:                                    ; preds = %82
  br label %136

; <label>:116:                                    ; preds = %66
  %117 = landingpad { i8*, i32 }
          catch i8* null
  %118 = extractvalue { i8*, i32 } %117, 0
  store i8* %118, i8** %32, align 8
  %119 = extractvalue { i8*, i32 } %117, 1
  store i32 %119, i32* %33, align 4
  br label %120

; <label>:120:                                    ; preds = %116
  %121 = load i8*, i8** %32, align 8
  %122 = call i8* @__cxa_begin_catch(i8* %121) #3
  %123 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  %124 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  %125 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %124, i32 0, i32 0
  %126 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %125, i32 0, i32 3
  %127 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %126, i32 0, i32 3
  %128 = load i32**, i32*** %127, align 8
  %129 = getelementptr inbounds i32*, i32** %128, i64 1
  %130 = load i32*, i32** %129, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %123, i32* %130) #3
  invoke void @__cxa_rethrow() #12
          to label %269 unwind label %131

; <label>:131:                                    ; preds = %120
  %132 = landingpad { i8*, i32 }
          cleanup
  %133 = extractvalue { i8*, i32 } %132, 0
  store i8* %133, i8** %32, align 8
  %134 = extractvalue { i8*, i32 } %132, 1
  store i32 %134, i32* %33, align 4
  invoke void @__cxa_end_catch()
          to label %135 unwind label %225

; <label>:135:                                    ; preds = %131
  br label %179

; <label>:136:                                    ; preds = %115
  %137 = load i32, i32* @x.459
  %138 = load i32, i32* @y.460
  %139 = add i32 %137, -914959578
  %140 = sub i32 %139, 1
  %141 = sub i32 %140, -914959578
  %142 = sub i32 %137, 1
  %143 = mul i32 %137, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %138, 10
  %147 = xor i1 %145, true
  %148 = xor i1 %146, true
  %149 = xor i1 true, true
  %150 = and i1 %147, true
  %151 = and i1 %145, %149
  %152 = and i1 %148, true
  %153 = and i1 %146, %149
  %154 = or i1 %150, %151
  %155 = or i1 %152, %153
  %156 = xor i1 %154, %155
  %157 = or i1 %147, %148
  %158 = xor i1 %157, true
  %159 = or i1 true, %149
  %160 = and i1 %158, %159
  %161 = or i1 %156, %160
  %162 = or i1 %145, %146
  br i1 %161, label %163, label %313

; <label>:163:                                    ; preds = %136, %313
  %164 = load i32, i32* @x.459
  %165 = load i32, i32* @y.460
  %166 = sub i32 %164, 1963368510
  %167 = sub i32 %166, 1
  %168 = add i32 %167, 1963368510
  %169 = sub i32 %164, 1
  %170 = mul i32 %164, %168
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %165, 10
  %174 = and i1 %172, %173
  %175 = xor i1 %172, %173
  %176 = or i1 %174, %175
  %177 = or i1 %172, %173
  br i1 %176, label %178, label %313

; <label>:178:                                    ; preds = %163
  ret void

; <label>:179:                                    ; preds = %135
  %180 = load i32, i32* @x.459
  %181 = load i32, i32* @y.460
  %182 = sub i32 0, 1
  %183 = add i32 %180, %182
  %184 = sub i32 %180, 1
  %185 = mul i32 %180, %183
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %181, 10
  %189 = xor i1 %187, true
  %190 = xor i1 %188, true
  %191 = xor i1 false, true
  %192 = and i1 %189, false
  %193 = and i1 %187, %191
  %194 = and i1 %190, false
  %195 = and i1 %188, %191
  %196 = or i1 %192, %193
  %197 = or i1 %194, %195
  %198 = xor i1 %196, %197
  %199 = or i1 %189, %190
  %200 = xor i1 %199, true
  %201 = or i1 false, %191
  %202 = and i1 %200, %201
  %203 = or i1 %198, %202
  %204 = or i1 %187, %188
  br i1 %203, label %205, label %314

; <label>:205:                                    ; preds = %179, %314
  %206 = load i8*, i8** %32, align 8
  %207 = load i32, i32* %33, align 4
  %208 = insertvalue { i8*, i32 } undef, i8* %206, 0
  %209 = insertvalue { i8*, i32 } %208, i32 %207, 1
  %210 = load i32, i32* @x.459
  %211 = load i32, i32* @y.460
  %212 = add i32 %210, 998813495
  %213 = sub i32 %212, 1
  %214 = sub i32 %213, 998813495
  %215 = sub i32 %210, 1
  %216 = mul i32 %210, %214
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %211, 10
  %220 = and i1 %218, %219
  %221 = xor i1 %218, %219
  %222 = or i1 %220, %221
  %223 = or i1 %218, %219
  br i1 %222, label %224, label %314

; <label>:224:                                    ; preds = %205
  resume { i8*, i32 } %209

; <label>:225:                                    ; preds = %131
  %226 = load i32, i32* @x.459
  %227 = load i32, i32* @y.460
  %228 = add i32 %226, -1729563887
  %229 = sub i32 %228, 1
  %230 = sub i32 %229, -1729563887
  %231 = sub i32 %226, 1
  %232 = mul i32 %226, %230
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %227, 10
  %236 = and i1 %234, %235
  %237 = xor i1 %234, %235
  %238 = or i1 %236, %237
  %239 = or i1 %234, %235
  br i1 %238, label %240, label %319

; <label>:240:                                    ; preds = %225, %319
  %241 = landingpad { i8*, i32 }
          catch i8* null
  %242 = extractvalue { i8*, i32 } %241, 0
  call void @__clang_call_terminate(i8* %242) #10
  %243 = load i32, i32* @x.459
  %244 = load i32, i32* @y.460
  %245 = sub i32 0, 1
  %246 = add i32 %243, %245
  %247 = sub i32 %243, 1
  %248 = mul i32 %243, %246
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %244, 10
  %252 = xor i1 %250, true
  %253 = xor i1 %251, true
  %254 = xor i1 true, true
  %255 = and i1 %252, true
  %256 = and i1 %250, %254
  %257 = and i1 %253, true
  %258 = and i1 %251, %254
  %259 = or i1 %255, %256
  %260 = or i1 %257, %258
  %261 = xor i1 %259, %260
  %262 = or i1 %252, %253
  %263 = xor i1 %262, true
  %264 = or i1 true, %254
  %265 = and i1 %263, %264
  %266 = or i1 %261, %265
  %267 = or i1 %250, %251
  br i1 %266, label %268, label %319

; <label>:268:                                    ; preds = %240
  unreachable

; <label>:269:                                    ; preds = %120
  unreachable

; <label>:270:                                    ; preds = %29, %2
  %271 = alloca %"class.std::deque"*, align 8
  %272 = alloca i32*, align 8
  %273 = alloca i8*
  %274 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %271, align 8
  store i32* %1, i32** %272, align 8
  %275 = load %"class.std::deque"*, %"class.std::deque"** %271, align 8
  call void @_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm(%"class.std::deque"* %275, i64 1)
  %276 = bitcast %"class.std::deque"* %275 to %"class.std::_Deque_base"*
  %277 = call i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %276)
  %278 = bitcast %"class.std::deque"* %275 to %"class.std::_Deque_base"*
  %279 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %278, i32 0, i32 0
  %280 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %279, i32 0, i32 3
  %281 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %280, i32 0, i32 3
  %282 = load i32**, i32*** %281, align 8
  %283 = getelementptr inbounds i32*, i32** %282, i64 1
  store i32* %277, i32** %283, align 8
  %284 = bitcast %"class.std::deque"* %275 to %"class.std::_Deque_base"*
  %285 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %284, i32 0, i32 0
  %286 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %285 to %"class.std::allocator.10"*
  %287 = bitcast %"class.std::deque"* %275 to %"class.std::_Deque_base"*
  %288 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %287, i32 0, i32 0
  %289 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %288, i32 0, i32 3
  %290 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %289, i32 0, i32 0
  %291 = load i32*, i32** %290, align 8
  %292 = load i32*, i32** %272, align 8
  %293 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %292) #3
  br label %29

; <label>:294:                                    ; preds = %82, %67
  %295 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  %296 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %295, i32 0, i32 0
  %297 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %296, i32 0, i32 3
  %298 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  %299 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %298, i32 0, i32 0
  %300 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %299, i32 0, i32 3
  %301 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %300, i32 0, i32 3
  %302 = load i32**, i32*** %301, align 8
  %303 = getelementptr inbounds i32*, i32** %302, i64 1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %297, i32** %303) #3
  %304 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  %305 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %304, i32 0, i32 0
  %306 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %305, i32 0, i32 3
  %307 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %306, i32 0, i32 1
  %308 = load i32*, i32** %307, align 8
  %309 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  %310 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %309, i32 0, i32 0
  %311 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %310, i32 0, i32 3
  %312 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %311, i32 0, i32 0
  store i32* %308, i32** %312, align 8
  br label %82

; <label>:313:                                    ; preds = %163, %136
  br label %163

; <label>:314:                                    ; preds = %205, %179
  %315 = load i8*, i8** %32, align 8
  %316 = load i32, i32* %33, align 4
  %317 = insertvalue { i8*, i32 } undef, i8* %315, 0
  %318 = insertvalue { i8*, i32 } %317, i32 %316, 1
  br label %205

; <label>:319:                                    ; preds = %240, %225
  %320 = landingpad { i8*, i32 }
          catch i8* null
  %321 = extractvalue { i8*, i32 } %320, 0
  call void @__clang_call_terminate(i8* %321) #10
  br label %240
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.11"*, i32*, i32* dereferenceable(4)) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.461
  %7 = load i32, i32* @y.462
  %8 = sub i32 %6, 788183587
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 788183587
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 79287118, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %78
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 79287118, label %20
    i32 -139457649, label %28
    i32 -52594093, label %66
    i32 323992151, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %78

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -139457649, i32 323992151
  store i32 %27, i32* %16
  br label %78

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %30 = alloca i32*, align 8
  %31 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %29, align 8
  store i32* %1, i32** %30, align 8
  store i32* %2, i32** %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %29, align 8
  %33 = load i32*, i32** %30, align 8
  %34 = bitcast i32* %33 to i8*
  %35 = bitcast i8* %34 to i32*
  %36 = load i32*, i32** %31, align 8
  %37 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %36) #3
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %35, align 4
  %39 = load i32, i32* @x.461
  %40 = load i32, i32* @y.462
  %41 = add i32 %39, 1860808975
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, 1860808975
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 -52594093, i32 323992151
  store i32 %65, i32* %16
  br label %78

; <label>:66:                                     ; preds = %17
  ret void

; <label>:67:                                     ; preds = %17
  %68 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %69 = alloca i32*, align 8
  %70 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %68, align 8
  store i32* %1, i32** %69, align 8
  store i32* %2, i32** %70, align 8
  %71 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %68, align 8
  %72 = load i32*, i32** %69, align 8
  %73 = bitcast i32* %72 to i8*
  %74 = bitcast i8* %73 to i32*
  %75 = load i32*, i32** %70, align 8
  %76 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %75) #3
  %77 = load i32, i32* %76, align 4
  store i32 %77, i32* %74, align 4
  store i32 -139457649, i32* %16
  br label %78

; <label>:78:                                     ; preds = %67, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4)) #4 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.463
  %6 = load i32, i32* @y.464
  %7 = sub i32 %5, 1260732460
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1260732460
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1831772061, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1831772061, label %19
    i32 1848123028, label %39
    i32 2016095007, label %57
    i32 884739565, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1848123028, i32 884739565
  store i32 %38, i32* %15
  br label %62

; <label>:39:                                     ; preds = %16
  %40 = alloca i32*, align 8
  store i32* %0, i32** %40, align 8
  %41 = load i32*, i32** %40, align 8
  store i32* %41, i32** %2
  %42 = load i32, i32* @x.463
  %43 = load i32, i32* @y.464
  %44 = sub i32 %42, -1343087562
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -1343087562
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 2016095007, i32 884739565
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile i32*, i32** %2
  ret i32* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca i32*, align 8
  store i32* %0, i32** %60, align 8
  %61 = load i32*, i32** %60, align 8
  store i32 1848123028, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm(%"class.std::deque"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca %"class.std::deque"*
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  store %"class.std::deque"* %8, %"class.std::deque"** %5
  %9 = load i64, i64* %7, align 8
  %10 = add i64 %9, 1584316414622749672
  %11 = add i64 %10, 1
  %12 = sub i64 %11, 1584316414622749672
  %13 = add i64 %9, 1
  store i64 %12, i64* %4
  %14 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %15 = bitcast %"class.std::deque"* %14 to %"class.std::_Deque_base"*
  %16 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %16, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %20 = bitcast %"class.std::deque"* %19 to %"class.std::_Deque_base"*
  %21 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %21, i32 0, i32 3
  %23 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %22, i32 0, i32 3
  %24 = load i32**, i32*** %23, align 8
  %25 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %26 = bitcast %"class.std::deque"* %25 to %"class.std::_Deque_base"*
  %27 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %27, i32 0, i32 0
  %29 = load i32**, i32*** %28, align 8
  %30 = ptrtoint i32** %24 to i64
  %31 = ptrtoint i32** %29 to i64
  %32 = sub i64 0, %31
  %33 = add i64 %30, %32
  %34 = sub i64 %30, %31
  %35 = sdiv exact i64 %33, 8
  %36 = add i64 %18, -2077517109323971214
  %37 = sub i64 %36, %35
  %38 = sub i64 %37, -2077517109323971214
  %39 = sub i64 %18, %35
  store i64 %38, i64* %3
  %40 = alloca i32
  store i32 512362400, i32* %40
  br label %41

; <label>:41:                                     ; preds = %2, %53
  %42 = load i32, i32* %40
  switch i32 %42, label %43 [
    i32 512362400, label %44
    i32 1269973321, label %49
    i32 -393746904, label %52
  ]

; <label>:43:                                     ; preds = %41
  br label %53

; <label>:44:                                     ; preds = %41
  %45 = load volatile i64, i64* %4
  %46 = load volatile i64, i64* %3
  %47 = icmp ugt i64 %45, %46
  %48 = select i1 %47, i32 1269973321, i32 -393746904
  store i32 %48, i32* %40
  br label %53

; <label>:49:                                     ; preds = %41
  %50 = load i64, i64* %7, align 8
  %51 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  call void @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb(%"class.std::deque"* %51, i64 %50, i1 zeroext false)
  store i32 -393746904, i32* %40
  br label %53

; <label>:52:                                     ; preds = %41
  ret void

; <label>:53:                                     ; preds = %49, %44, %43
  br label %41
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb(%"class.std::deque"*, i64, i1 zeroext) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i1
  %6 = alloca i32**
  %7 = alloca i32**
  %8 = alloca i64
  %9 = alloca i64
  %10 = alloca %"class.std::deque"*
  %11 = alloca %"class.std::deque"*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8, align 1
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i32**, align 8
  %17 = alloca i64, align 8
  %18 = alloca i32**, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %11, align 8
  store i64 %1, i64* %12, align 8
  %19 = zext i1 %2 to i8
  store i8 %19, i8* %13, align 1
  %20 = load %"class.std::deque"*, %"class.std::deque"** %11, align 8
  store %"class.std::deque"* %20, %"class.std::deque"** %10
  %21 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %22 = bitcast %"class.std::deque"* %21 to %"class.std::_Deque_base"*
  %23 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %22, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %23, i32 0, i32 3
  %25 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %24, i32 0, i32 3
  %26 = load i32**, i32*** %25, align 8
  %27 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %28 = bitcast %"class.std::deque"* %27 to %"class.std::_Deque_base"*
  %29 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %28, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %29, i32 0, i32 2
  %31 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %30, i32 0, i32 3
  %32 = load i32**, i32*** %31, align 8
  %33 = ptrtoint i32** %26 to i64
  %34 = ptrtoint i32** %32 to i64
  %35 = sub i64 0, %34
  %36 = add i64 %33, %35
  %37 = sub i64 %33, %34
  %38 = sdiv exact i64 %36, 8
  %39 = sub i64 %38, 8285536095838230760
  %40 = add i64 %39, 1
  %41 = add i64 %40, 8285536095838230760
  %42 = add nsw i64 %38, 1
  store i64 %41, i64* %14, align 8
  %43 = load i64, i64* %14, align 8
  %44 = load i64, i64* %12, align 8
  %45 = sub i64 0, %43
  %46 = sub i64 0, %44
  %47 = add i64 %45, %46
  %48 = sub i64 0, %47
  %49 = add i64 %43, %44
  store i64 %48, i64* %15, align 8
  %50 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %51 = bitcast %"class.std::deque"* %50 to %"class.std::_Deque_base"*
  %52 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %51, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %52, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  store i64 %54, i64* %9
  %55 = load i64, i64* %15, align 8
  %56 = mul i64 2, %55
  store i64 %56, i64* %8
  %57 = alloca i32
  store i32 -2116848258, i32* %57
  %58 = alloca i64
  %59 = alloca i64
  br label %60

; <label>:60:                                     ; preds = %3, %555
  %61 = load i32, i32* %57
  switch i32 %61, label %62 [
    i32 -2116848258, label %63
    i32 1798778293, label %68
    i32 -1337157127, label %89
    i32 2128006321, label %91
    i32 -114818231, label %92
    i32 -676128270, label %105
    i32 586611505, label %133
    i32 -1245357273, label %163
    i32 -1412189660, label %164
    i32 580841973, label %182
    i32 -11438653, label %183
    i32 -1546375419, label %210
    i32 155006370, label %272
    i32 -448687343, label %275
    i32 -1267830738, label %277
    i32 1355019188, label %293
    i32 540265315, label %320
    i32 -1551303986, label %321
    i32 -731175250, label %338
    i32 -2091925945, label %394
    i32 1182083906, label %395
    i32 -4389895, label %409
    i32 239522935, label %425
    i32 1234518762, label %513
    i32 85589339, label %514
  ]

; <label>:62:                                     ; preds = %60
  br label %555

; <label>:63:                                     ; preds = %60
  %64 = load volatile i64, i64* %9
  %65 = load volatile i64, i64* %8
  %66 = icmp ugt i64 %64, %65
  %67 = select i1 %66, i32 1798778293, i32 -11438653
  store i32 %67, i32* %57
  br label %555

; <label>:68:                                     ; preds = %60
  %69 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %70 = bitcast %"class.std::deque"* %69 to %"class.std::_Deque_base"*
  %71 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %71, i32 0, i32 0
  %73 = load i32**, i32*** %72, align 8
  %74 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %75 = bitcast %"class.std::deque"* %74 to %"class.std::_Deque_base"*
  %76 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %76, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = load i64, i64* %15, align 8
  %80 = add i64 %78, -7434955696884853173
  %81 = sub i64 %80, %79
  %82 = sub i64 %81, -7434955696884853173
  %83 = sub i64 %78, %79
  %84 = udiv i64 %82, 2
  %85 = getelementptr inbounds i32*, i32** %73, i64 %84
  store i32** %85, i32*** %7
  %86 = load i8, i8* %13, align 1
  %87 = trunc i8 %86 to i1
  %88 = select i1 %87, i32 -1337157127, i32 2128006321
  store i32 %88, i32* %57
  br label %555

; <label>:89:                                     ; preds = %60
  %90 = load i64, i64* %12, align 8
  store i32 -114818231, i32* %57
  store i64 %90, i64* %58
  br label %555

; <label>:91:                                     ; preds = %60
  store i32 -114818231, i32* %57
  store i64 0, i64* %58
  br label %555

; <label>:92:                                     ; preds = %60
  %93 = load i64, i64* %58
  %94 = load volatile i32**, i32*** %7
  %95 = getelementptr inbounds i32*, i32** %94, i64 %93
  store i32** %95, i32*** %16, align 8
  %96 = load i32**, i32*** %16, align 8
  %97 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %98 = bitcast %"class.std::deque"* %97 to %"class.std::_Deque_base"*
  %99 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %98, i32 0, i32 0
  %100 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %99, i32 0, i32 2
  %101 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %100, i32 0, i32 3
  %102 = load i32**, i32*** %101, align 8
  %103 = icmp ult i32** %96, %102
  %104 = select i1 %103, i32 -676128270, i32 -1412189660
  store i32 %104, i32* %57
  br label %555

; <label>:105:                                    ; preds = %60
  %106 = load i32, i32* @x.467
  %107 = load i32, i32* @y.468
  %108 = add i32 %106, -1642246582
  %109 = sub i32 %108, 1
  %110 = sub i32 %109, -1642246582
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = xor i1 %114, true
  %117 = xor i1 %115, true
  %118 = xor i1 true, true
  %119 = and i1 %116, true
  %120 = and i1 %114, %118
  %121 = and i1 %117, true
  %122 = and i1 %115, %118
  %123 = or i1 %119, %120
  %124 = or i1 %121, %122
  %125 = xor i1 %123, %124
  %126 = or i1 %116, %117
  %127 = xor i1 %126, true
  %128 = or i1 true, %118
  %129 = and i1 %127, %128
  %130 = or i1 %125, %129
  %131 = or i1 %114, %115
  %132 = select i1 %130, i32 586611505, i32 -4389895
  store i32 %132, i32* %57
  br label %555

; <label>:133:                                    ; preds = %60
  %134 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %135 = bitcast %"class.std::deque"* %134 to %"class.std::_Deque_base"*
  %136 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %135, i32 0, i32 0
  %137 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %136, i32 0, i32 2
  %138 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %137, i32 0, i32 3
  %139 = load i32**, i32*** %138, align 8
  %140 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %141 = bitcast %"class.std::deque"* %140 to %"class.std::_Deque_base"*
  %142 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %141, i32 0, i32 0
  %143 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %142, i32 0, i32 3
  %144 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %143, i32 0, i32 3
  %145 = load i32**, i32*** %144, align 8
  %146 = getelementptr inbounds i32*, i32** %145, i64 1
  %147 = load i32**, i32*** %16, align 8
  %148 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %139, i32** %146, i32** %147)
  %149 = load i32, i32* @x.467
  %150 = load i32, i32* @y.468
  %151 = sub i32 0, 1
  %152 = add i32 %149, %151
  %153 = sub i32 %149, 1
  %154 = mul i32 %149, %152
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %150, 10
  %158 = and i1 %156, %157
  %159 = xor i1 %156, %157
  %160 = or i1 %158, %159
  %161 = or i1 %156, %157
  %162 = select i1 %160, i32 -1245357273, i32 -4389895
  store i32 %162, i32* %57
  br label %555

; <label>:163:                                    ; preds = %60
  store i32 580841973, i32* %57
  br label %555

; <label>:164:                                    ; preds = %60
  %165 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %166 = bitcast %"class.std::deque"* %165 to %"class.std::_Deque_base"*
  %167 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %166, i32 0, i32 0
  %168 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %167, i32 0, i32 2
  %169 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %168, i32 0, i32 3
  %170 = load i32**, i32*** %169, align 8
  %171 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %172 = bitcast %"class.std::deque"* %171 to %"class.std::_Deque_base"*
  %173 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %172, i32 0, i32 0
  %174 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %173, i32 0, i32 3
  %175 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %174, i32 0, i32 3
  %176 = load i32**, i32*** %175, align 8
  %177 = getelementptr inbounds i32*, i32** %176, i64 1
  %178 = load i32**, i32*** %16, align 8
  %179 = load i64, i64* %14, align 8
  %180 = getelementptr inbounds i32*, i32** %178, i64 %179
  %181 = call i32** @_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_(i32** %170, i32** %177, i32** %180)
  store i32 580841973, i32* %57
  br label %555

; <label>:182:                                    ; preds = %60
  store i32 1182083906, i32* %57
  br label %555

; <label>:183:                                    ; preds = %60
  %184 = load i32, i32* @x.467
  %185 = load i32, i32* @y.468
  %186 = sub i32 0, 1
  %187 = add i32 %184, %186
  %188 = sub i32 %184, 1
  %189 = mul i32 %184, %187
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %185, 10
  %193 = xor i1 %191, true
  %194 = xor i1 %192, true
  %195 = xor i1 true, true
  %196 = and i1 %193, true
  %197 = and i1 %191, %195
  %198 = and i1 %194, true
  %199 = and i1 %192, %195
  %200 = or i1 %196, %197
  %201 = or i1 %198, %199
  %202 = xor i1 %200, %201
  %203 = or i1 %193, %194
  %204 = xor i1 %203, true
  %205 = or i1 true, %195
  %206 = and i1 %204, %205
  %207 = or i1 %202, %206
  %208 = or i1 %191, %192
  %209 = select i1 %207, i32 -1546375419, i32 239522935
  store i32 %209, i32* %57
  br label %555

; <label>:210:                                    ; preds = %60
  %211 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %212 = bitcast %"class.std::deque"* %211 to %"class.std::_Deque_base"*
  %213 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %212, i32 0, i32 0
  %214 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %213, i32 0, i32 1
  %215 = load i64, i64* %214, align 8
  %216 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %217 = bitcast %"class.std::deque"* %216 to %"class.std::_Deque_base"*
  %218 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %217, i32 0, i32 0
  %219 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %218, i32 0, i32 1
  %220 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %219, i64* dereferenceable(8) %12)
  %221 = load i64, i64* %220, align 8
  %222 = sub i64 0, %221
  %223 = sub i64 %215, %222
  %224 = add i64 %215, %221
  %225 = sub i64 0, %223
  %226 = sub i64 0, 2
  %227 = add i64 %225, %226
  %228 = sub i64 0, %227
  %229 = add i64 %223, 2
  store i64 %228, i64* %17, align 8
  %230 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %231 = bitcast %"class.std::deque"* %230 to %"class.std::_Deque_base"*
  %232 = load i64, i64* %17, align 8
  %233 = call i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"* %231, i64 %232)
  store i32** %233, i32*** %18, align 8
  %234 = load i32**, i32*** %18, align 8
  %235 = load i64, i64* %17, align 8
  %236 = load i64, i64* %15, align 8
  %237 = sub i64 %235, 7883775865200161609
  %238 = sub i64 %237, %236
  %239 = add i64 %238, 7883775865200161609
  %240 = sub i64 %235, %236
  %241 = udiv i64 %239, 2
  %242 = getelementptr inbounds i32*, i32** %234, i64 %241
  store i32** %242, i32*** %6
  %243 = load i8, i8* %13, align 1
  %244 = trunc i8 %243 to i1
  store i1 %244, i1* %5
  %245 = load i32, i32* @x.467
  %246 = load i32, i32* @y.468
  %247 = sub i32 %245, 455300720
  %248 = sub i32 %247, 1
  %249 = add i32 %248, 455300720
  %250 = sub i32 %245, 1
  %251 = mul i32 %245, %249
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %246, 10
  %255 = xor i1 %253, true
  %256 = xor i1 %254, true
  %257 = xor i1 true, true
  %258 = and i1 %255, true
  %259 = and i1 %253, %257
  %260 = and i1 %256, true
  %261 = and i1 %254, %257
  %262 = or i1 %258, %259
  %263 = or i1 %260, %261
  %264 = xor i1 %262, %263
  %265 = or i1 %255, %256
  %266 = xor i1 %265, true
  %267 = or i1 true, %257
  %268 = and i1 %266, %267
  %269 = or i1 %264, %268
  %270 = or i1 %253, %254
  %271 = select i1 %269, i32 155006370, i32 239522935
  store i32 %271, i32* %57
  br label %555

; <label>:272:                                    ; preds = %60
  %273 = load volatile i1, i1* %5
  %274 = select i1 %273, i32 -448687343, i32 -1267830738
  store i32 %274, i32* %57
  br label %555

; <label>:275:                                    ; preds = %60
  %276 = load i64, i64* %12, align 8
  store i32 -1551303986, i32* %57
  store i64 %276, i64* %59
  br label %555

; <label>:277:                                    ; preds = %60
  %278 = load i32, i32* @x.467
  %279 = load i32, i32* @y.468
  %280 = add i32 %278, -30321341
  %281 = sub i32 %280, 1
  %282 = sub i32 %281, -30321341
  %283 = sub i32 %278, 1
  %284 = mul i32 %278, %282
  %285 = urem i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %279, 10
  %288 = and i1 %286, %287
  %289 = xor i1 %286, %287
  %290 = or i1 %288, %289
  %291 = or i1 %286, %287
  %292 = select i1 %290, i32 1355019188, i32 1234518762
  store i32 %292, i32* %57
  br label %555

; <label>:293:                                    ; preds = %60
  %294 = load i32, i32* @x.467
  %295 = load i32, i32* @y.468
  %296 = sub i32 0, 1
  %297 = add i32 %294, %296
  %298 = sub i32 %294, 1
  %299 = mul i32 %294, %297
  %300 = urem i32 %299, 2
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %295, 10
  %303 = xor i1 %301, true
  %304 = xor i1 %302, true
  %305 = xor i1 false, true
  %306 = and i1 %303, false
  %307 = and i1 %301, %305
  %308 = and i1 %304, false
  %309 = and i1 %302, %305
  %310 = or i1 %306, %307
  %311 = or i1 %308, %309
  %312 = xor i1 %310, %311
  %313 = or i1 %303, %304
  %314 = xor i1 %313, true
  %315 = or i1 false, %305
  %316 = and i1 %314, %315
  %317 = or i1 %312, %316
  %318 = or i1 %301, %302
  %319 = select i1 %317, i32 540265315, i32 1234518762
  store i32 %319, i32* %57
  br label %555

; <label>:320:                                    ; preds = %60
  store i32 -1551303986, i32* %57
  store i64 0, i64* %59
  br label %555

; <label>:321:                                    ; preds = %60
  %322 = load i64, i64* %59
  store i64 %322, i64* %4
  %323 = load i32, i32* @x.467
  %324 = load i32, i32* @y.468
  %325 = sub i32 %323, 1346979278
  %326 = sub i32 %325, 1
  %327 = add i32 %326, 1346979278
  %328 = sub i32 %323, 1
  %329 = mul i32 %323, %327
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %324, 10
  %333 = and i1 %331, %332
  %334 = xor i1 %331, %332
  %335 = or i1 %333, %334
  %336 = or i1 %331, %332
  %337 = select i1 %335, i32 -731175250, i32 85589339
  store i32 %337, i32* %57
  br label %555

; <label>:338:                                    ; preds = %60
  %339 = load volatile i32**, i32*** %6
  %340 = load volatile i64, i64* %4
  %341 = getelementptr inbounds i32*, i32** %339, i64 %340
  store i32** %341, i32*** %16, align 8
  %342 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %343 = bitcast %"class.std::deque"* %342 to %"class.std::_Deque_base"*
  %344 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %343, i32 0, i32 0
  %345 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %344, i32 0, i32 2
  %346 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %345, i32 0, i32 3
  %347 = load i32**, i32*** %346, align 8
  %348 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %349 = bitcast %"class.std::deque"* %348 to %"class.std::_Deque_base"*
  %350 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %349, i32 0, i32 0
  %351 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %350, i32 0, i32 3
  %352 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %351, i32 0, i32 3
  %353 = load i32**, i32*** %352, align 8
  %354 = getelementptr inbounds i32*, i32** %353, i64 1
  %355 = load i32**, i32*** %16, align 8
  %356 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %347, i32** %354, i32** %355)
  %357 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %358 = bitcast %"class.std::deque"* %357 to %"class.std::_Deque_base"*
  %359 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %360 = bitcast %"class.std::deque"* %359 to %"class.std::_Deque_base"*
  %361 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %360, i32 0, i32 0
  %362 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %361, i32 0, i32 0
  %363 = load i32**, i32*** %362, align 8
  %364 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %365 = bitcast %"class.std::deque"* %364 to %"class.std::_Deque_base"*
  %366 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %365, i32 0, i32 0
  %367 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %366, i32 0, i32 1
  %368 = load i64, i64* %367, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %358, i32** %363, i64 %368) #3
  %369 = load i32**, i32*** %18, align 8
  %370 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %371 = bitcast %"class.std::deque"* %370 to %"class.std::_Deque_base"*
  %372 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %371, i32 0, i32 0
  %373 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %372, i32 0, i32 0
  store i32** %369, i32*** %373, align 8
  %374 = load i64, i64* %17, align 8
  %375 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %376 = bitcast %"class.std::deque"* %375 to %"class.std::_Deque_base"*
  %377 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %376, i32 0, i32 0
  %378 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %377, i32 0, i32 1
  store i64 %374, i64* %378, align 8
  %379 = load i32, i32* @x.467
  %380 = load i32, i32* @y.468
  %381 = add i32 %379, -700086992
  %382 = sub i32 %381, 1
  %383 = sub i32 %382, -700086992
  %384 = sub i32 %379, 1
  %385 = mul i32 %379, %383
  %386 = urem i32 %385, 2
  %387 = icmp eq i32 %386, 0
  %388 = icmp slt i32 %380, 10
  %389 = and i1 %387, %388
  %390 = xor i1 %387, %388
  %391 = or i1 %389, %390
  %392 = or i1 %387, %388
  %393 = select i1 %391, i32 -2091925945, i32 85589339
  store i32 %393, i32* %57
  br label %555

; <label>:394:                                    ; preds = %60
  store i32 1182083906, i32* %57
  br label %555

; <label>:395:                                    ; preds = %60
  %396 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %397 = bitcast %"class.std::deque"* %396 to %"class.std::_Deque_base"*
  %398 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %397, i32 0, i32 0
  %399 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %398, i32 0, i32 2
  %400 = load i32**, i32*** %16, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %399, i32** %400) #3
  %401 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %402 = bitcast %"class.std::deque"* %401 to %"class.std::_Deque_base"*
  %403 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %402, i32 0, i32 0
  %404 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %403, i32 0, i32 3
  %405 = load i32**, i32*** %16, align 8
  %406 = load i64, i64* %14, align 8
  %407 = getelementptr inbounds i32*, i32** %405, i64 %406
  %408 = getelementptr inbounds i32*, i32** %407, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %404, i32** %408) #3
  ret void

; <label>:409:                                    ; preds = %60
  %410 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %411 = bitcast %"class.std::deque"* %410 to %"class.std::_Deque_base"*
  %412 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %411, i32 0, i32 0
  %413 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %412, i32 0, i32 2
  %414 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %413, i32 0, i32 3
  %415 = load i32**, i32*** %414, align 8
  %416 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %417 = bitcast %"class.std::deque"* %416 to %"class.std::_Deque_base"*
  %418 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %417, i32 0, i32 0
  %419 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %418, i32 0, i32 3
  %420 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %419, i32 0, i32 3
  %421 = load i32**, i32*** %420, align 8
  %422 = getelementptr inbounds i32*, i32** %421, i64 1
  %423 = load i32**, i32*** %16, align 8
  %424 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %415, i32** %422, i32** %423)
  store i32 586611505, i32* %57
  br label %555

; <label>:425:                                    ; preds = %60
  %426 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %427 = bitcast %"class.std::deque"* %426 to %"class.std::_Deque_base"*
  %428 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %427, i32 0, i32 0
  %429 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %428, i32 0, i32 1
  %430 = load i64, i64* %429, align 8
  %431 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %432 = bitcast %"class.std::deque"* %431 to %"class.std::_Deque_base"*
  %433 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %432, i32 0, i32 0
  %434 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %433, i32 0, i32 1
  %435 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %434, i64* dereferenceable(8) %12)
  %436 = load i64, i64* %435, align 8
  %437 = shl i64 %430, %436
  %438 = sub i64 %430, 8936724404423227381
  %439 = add i64 %438, %436
  %440 = add i64 %439, 8936724404423227381
  %441 = add i64 %430, %436
  %442 = shl i64 %440, 2
  %443 = shl i64 %440, 2
  %444 = sub i64 0, 2
  %445 = add i64 %440, %444
  %446 = sub i64 %440, 2
  %447 = mul i64 %445, 2
  %448 = sub i64 0, 2
  %449 = add i64 %440, %448
  %450 = sub i64 %440, 2
  %451 = mul i64 %449, 2
  %452 = sub i64 %440, 33145693329272584
  %453 = sub i64 %452, 2
  %454 = add i64 %453, 33145693329272584
  %455 = sub i64 %440, 2
  %456 = mul i64 %454, 2
  %457 = sub i64 0, %440
  %458 = sub i64 0, 2
  %459 = add i64 %457, %458
  %460 = sub i64 0, %459
  %461 = add i64 %440, 2
  store i64 %460, i64* %17, align 8
  %462 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %463 = bitcast %"class.std::deque"* %462 to %"class.std::_Deque_base"*
  %464 = load i64, i64* %17, align 8
  %465 = call i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"* %463, i64 %464)
  store i32** %465, i32*** %18, align 8
  %466 = load i32**, i32*** %18, align 8
  %467 = load i64, i64* %17, align 8
  %468 = load i64, i64* %15, align 8
  %469 = shl i64 %467, %468
  %470 = sub i64 0, %467
  %471 = add i64 0, %470
  %472 = sub i64 0, %467
  %473 = sub i64 %471, -18427890861952703
  %474 = add i64 %473, %468
  %475 = add i64 %474, -18427890861952703
  %476 = add i64 %471, %468
  %477 = shl i64 %467, %468
  %478 = sub i64 0, -4764937887482429840
  %479 = sub i64 %478, %467
  %480 = add i64 %479, -4764937887482429840
  %481 = sub i64 0, %467
  %482 = sub i64 0, %480
  %483 = sub i64 0, %468
  %484 = add i64 %482, %483
  %485 = sub i64 0, %484
  %486 = add i64 %480, %468
  %487 = add i64 0, 3626968475381125255
  %488 = sub i64 %487, %467
  %489 = sub i64 %488, 3626968475381125255
  %490 = sub i64 0, %467
  %491 = sub i64 0, %489
  %492 = sub i64 0, %468
  %493 = add i64 %491, %492
  %494 = sub i64 0, %493
  %495 = add i64 %489, %468
  %496 = add i64 0, -5830997939236668472
  %497 = sub i64 %496, %467
  %498 = sub i64 %497, -5830997939236668472
  %499 = sub i64 0, %467
  %500 = add i64 %498, -2804349896545095164
  %501 = add i64 %500, %468
  %502 = sub i64 %501, -2804349896545095164
  %503 = add i64 %498, %468
  %504 = shl i64 %467, %468
  %505 = add i64 %467, -4199339604725602658
  %506 = sub i64 %505, %468
  %507 = sub i64 %506, -4199339604725602658
  %508 = sub i64 %467, %468
  %509 = udiv i64 %507, 2
  %510 = getelementptr inbounds i32*, i32** %466, i64 %509
  %511 = load i8, i8* %13, align 1
  %512 = trunc i8 %511 to i1
  store i32 -1546375419, i32* %57
  br label %555

; <label>:513:                                    ; preds = %60
  store i32 1355019188, i32* %57
  br label %555

; <label>:514:                                    ; preds = %60
  %515 = load volatile i32**, i32*** %6
  %516 = load volatile i64, i64* %4
  %517 = getelementptr inbounds i32*, i32** %515, i64 %516
  store i32** %517, i32*** %16, align 8
  %518 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %519 = bitcast %"class.std::deque"* %518 to %"class.std::_Deque_base"*
  %520 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %519, i32 0, i32 0
  %521 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %520, i32 0, i32 2
  %522 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %521, i32 0, i32 3
  %523 = load i32**, i32*** %522, align 8
  %524 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %525 = bitcast %"class.std::deque"* %524 to %"class.std::_Deque_base"*
  %526 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %525, i32 0, i32 0
  %527 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %526, i32 0, i32 3
  %528 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %527, i32 0, i32 3
  %529 = load i32**, i32*** %528, align 8
  %530 = getelementptr inbounds i32*, i32** %529, i64 1
  %531 = load i32**, i32*** %16, align 8
  %532 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %523, i32** %530, i32** %531)
  %533 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %534 = bitcast %"class.std::deque"* %533 to %"class.std::_Deque_base"*
  %535 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %536 = bitcast %"class.std::deque"* %535 to %"class.std::_Deque_base"*
  %537 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %536, i32 0, i32 0
  %538 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %537, i32 0, i32 0
  %539 = load i32**, i32*** %538, align 8
  %540 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %541 = bitcast %"class.std::deque"* %540 to %"class.std::_Deque_base"*
  %542 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %541, i32 0, i32 0
  %543 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %542, i32 0, i32 1
  %544 = load i64, i64* %543, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %534, i32** %539, i64 %544) #3
  %545 = load i32**, i32*** %18, align 8
  %546 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %547 = bitcast %"class.std::deque"* %546 to %"class.std::_Deque_base"*
  %548 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %547, i32 0, i32 0
  %549 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %548, i32 0, i32 0
  store i32** %545, i32*** %549, align 8
  %550 = load i64, i64* %17, align 8
  %551 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %552 = bitcast %"class.std::deque"* %551 to %"class.std::_Deque_base"*
  %553 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %552, i32 0, i32 0
  %554 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %553, i32 0, i32 1
  store i64 %550, i64* %554, align 8
  store i32 -731175250, i32* %57
  br label %555

; <label>:555:                                    ; preds = %514, %513, %425, %409, %394, %338, %321, %320, %293, %277, %275, %272, %210, %183, %182, %164, %163, %133, %105, %92, %91, %89, %68, %63, %62
  br label %60
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %11)
  ret i32** %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %11)
  ret i32** %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.473
  %8 = load i32, i32* @y.474
  %9 = sub i32 %7, 1541859061
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 1541859061
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 924823565, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %91
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 924823565, label %21
    i32 1652991297, label %41
    i32 397083997, label %78
    i32 -333955921, label %80
  ]

; <label>:20:                                     ; preds = %18
  br label %91

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1652991297, i32 -333955921
  store i32 %40, i32* %17
  br label %91

; <label>:41:                                     ; preds = %18
  %42 = alloca i32**, align 8
  %43 = alloca i32**, align 8
  %44 = alloca i32**, align 8
  store i32** %0, i32*** %42, align 8
  store i32** %1, i32*** %43, align 8
  store i32** %2, i32*** %44, align 8
  %45 = load i32**, i32*** %42, align 8
  %46 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %45)
  %47 = load i32**, i32*** %43, align 8
  %48 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %47)
  %49 = load i32**, i32*** %44, align 8
  %50 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %49)
  %51 = call i32** @_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %46, i32** %48, i32** %50)
  store i32** %51, i32*** %4
  %52 = load i32, i32* @x.473
  %53 = load i32, i32* @y.474
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 397083997, i32 -333955921
  store i32 %77, i32* %17
  br label %91

; <label>:78:                                     ; preds = %18
  %79 = load volatile i32**, i32*** %4
  ret i32** %79

; <label>:80:                                     ; preds = %18
  %81 = alloca i32**, align 8
  %82 = alloca i32**, align 8
  %83 = alloca i32**, align 8
  store i32** %0, i32*** %81, align 8
  store i32** %1, i32*** %82, align 8
  store i32** %2, i32*** %83, align 8
  %84 = load i32**, i32*** %81, align 8
  %85 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %84)
  %86 = load i32**, i32*** %82, align 8
  %87 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %86)
  %88 = load i32**, i32*** %83, align 8
  %89 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %88)
  %90 = call i32** @_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %85, i32** %87, i32** %89)
  store i32 1652991297, i32* %17
  br label %91

; <label>:91:                                     ; preds = %80, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32**) #4 comdat {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  %4 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %3)
  ret i32** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.477
  %8 = load i32, i32* @y.478
  %9 = sub i32 %7, -867918174
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -867918174
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 153227388, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %76
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 153227388, label %21
    i32 -1271747857, label %41
    i32 637676909, label %65
    i32 -1509965232, label %67
  ]

; <label>:20:                                     ; preds = %18
  br label %76

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1271747857, i32 -1509965232
  store i32 %40, i32* %17
  br label %76

; <label>:41:                                     ; preds = %18
  %42 = alloca i32**, align 8
  %43 = alloca i32**, align 8
  %44 = alloca i32**, align 8
  %45 = alloca i8, align 1
  store i32** %0, i32*** %42, align 8
  store i32** %1, i32*** %43, align 8
  store i32** %2, i32*** %44, align 8
  store i8 1, i8* %45, align 1
  %46 = load i32**, i32*** %42, align 8
  %47 = load i32**, i32*** %43, align 8
  %48 = load i32**, i32*** %44, align 8
  %49 = call i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32** %46, i32** %47, i32** %48)
  store i32** %49, i32*** %4
  %50 = load i32, i32* @x.477
  %51 = load i32, i32* @y.478
  %52 = sub i32 %50, -432175065
  %53 = sub i32 %52, 1
  %54 = add i32 %53, -432175065
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 637676909, i32 -1509965232
  store i32 %64, i32* %17
  br label %76

; <label>:65:                                     ; preds = %18
  %66 = load volatile i32**, i32*** %4
  ret i32** %66

; <label>:67:                                     ; preds = %18
  %68 = alloca i32**, align 8
  %69 = alloca i32**, align 8
  %70 = alloca i32**, align 8
  %71 = alloca i8, align 1
  store i32** %0, i32*** %68, align 8
  store i32** %1, i32*** %69, align 8
  store i32** %2, i32*** %70, align 8
  store i8 1, i8* %71, align 1
  %72 = load i32**, i32*** %68, align 8
  %73 = load i32**, i32*** %69, align 8
  %74 = load i32**, i32*** %70, align 8
  %75 = call i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32** %72, i32** %73, i32** %74)
  store i32 -1271747857, i32* %17
  br label %76

; <label>:76:                                     ; preds = %67, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32**) #0 comdat {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  %4 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %3)
  ret i32** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32**, i32**, i32**) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i32***
  %7 = alloca i32***
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.481
  %11 = load i32, i32* @y.482
  %12 = add i32 %10, -875698888
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, -875698888
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -1762996624, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %148
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -1762996624, label %24
    i32 -659980334, label %32
    i32 -554140319, label %79
    i32 -103733, label %82
    i32 -1130170382, label %92
    i32 -252825273, label %98
  ]

; <label>:23:                                     ; preds = %21
  br label %148

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 -659980334, i32 -252825273
  store i32 %31, i32* %20
  br label %148

; <label>:32:                                     ; preds = %21
  %33 = alloca i32**, align 8
  store i32*** %33, i32**** %7
  %34 = alloca i32**, align 8
  %35 = alloca i32**, align 8
  store i32*** %35, i32**** %6
  %36 = alloca i64, align 8
  store i64* %36, i64** %5
  %37 = load volatile i32***, i32**** %7
  store i32** %0, i32*** %37, align 8
  store i32** %1, i32*** %34, align 8
  %38 = load volatile i32***, i32**** %6
  store i32** %2, i32*** %38, align 8
  %39 = load i32**, i32*** %34, align 8
  %40 = load volatile i32***, i32**** %7
  %41 = load i32**, i32*** %40, align 8
  %42 = ptrtoint i32** %39 to i64
  %43 = ptrtoint i32** %41 to i64
  %44 = sub i64 0, %43
  %45 = add i64 %42, %44
  %46 = sub i64 %42, %43
  %47 = sdiv exact i64 %45, 8
  %48 = load volatile i64*, i64** %5
  store i64 %47, i64* %48, align 8
  %49 = load volatile i64*, i64** %5
  %50 = load i64, i64* %49, align 8
  %51 = icmp ne i64 %50, 0
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.481
  %53 = load i32, i32* @y.482
  %54 = add i32 %52, 29636378
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, 29636378
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 -554140319, i32 -252825273
  store i32 %78, i32* %20
  br label %148

; <label>:79:                                     ; preds = %21
  %80 = load volatile i1, i1* %4
  %81 = select i1 %80, i32 -103733, i32 -1130170382
  store i32 %81, i32* %20
  br label %148

; <label>:82:                                     ; preds = %21
  %83 = load volatile i32***, i32**** %6
  %84 = load i32**, i32*** %83, align 8
  %85 = bitcast i32** %84 to i8*
  %86 = load volatile i32***, i32**** %7
  %87 = load i32**, i32*** %86, align 8
  %88 = bitcast i32** %87 to i8*
  %89 = load volatile i64*, i64** %5
  %90 = load i64, i64* %89, align 8
  %91 = mul i64 8, %90
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %85, i8* %88, i64 %91, i32 8, i1 false)
  store i32 -1130170382, i32* %20
  br label %148

; <label>:92:                                     ; preds = %21
  %93 = load volatile i32***, i32**** %6
  %94 = load i32**, i32*** %93, align 8
  %95 = load volatile i64*, i64** %5
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds i32*, i32** %94, i64 %96
  ret i32** %97

; <label>:98:                                     ; preds = %21
  %99 = alloca i32**, align 8
  %100 = alloca i32**, align 8
  %101 = alloca i32**, align 8
  %102 = alloca i64, align 8
  store i32** %0, i32*** %99, align 8
  store i32** %1, i32*** %100, align 8
  store i32** %2, i32*** %101, align 8
  %103 = load i32**, i32*** %100, align 8
  %104 = load i32**, i32*** %99, align 8
  %105 = ptrtoint i32** %103 to i64
  %106 = ptrtoint i32** %104 to i64
  %107 = sub i64 %105, -4710008935466752702
  %108 = sub i64 %107, %106
  %109 = add i64 %108, -4710008935466752702
  %110 = sub i64 %105, %106
  %111 = mul i64 %109, %106
  %112 = sub i64 0, -2010179017817929426
  %113 = sub i64 %112, %105
  %114 = add i64 %113, -2010179017817929426
  %115 = sub i64 0, %105
  %116 = sub i64 %114, 5412846376868480040
  %117 = add i64 %116, %106
  %118 = add i64 %117, 5412846376868480040
  %119 = add i64 %114, %106
  %120 = shl i64 %105, %106
  %121 = shl i64 %105, %106
  %122 = sub i64 0, %106
  %123 = add i64 %105, %122
  %124 = sub i64 %105, %106
  %125 = mul i64 %123, %106
  %126 = shl i64 %105, %106
  %127 = sub i64 %105, 1749042727904090727
  %128 = sub i64 %127, %106
  %129 = add i64 %128, 1749042727904090727
  %130 = sub i64 %105, %106
  %131 = mul i64 %129, %106
  %132 = sub i64 0, %106
  %133 = add i64 %105, %132
  %134 = sub i64 %105, %106
  %135 = mul i64 %133, %106
  %136 = sub i64 %105, 7189741153123209844
  %137 = sub i64 %136, %106
  %138 = add i64 %137, 7189741153123209844
  %139 = sub i64 %105, %106
  %140 = add i64 %138, -7268369832915371417
  %141 = sub i64 %140, 8
  %142 = sub i64 %141, -7268369832915371417
  %143 = sub i64 %138, 8
  %144 = mul i64 %142, 8
  %145 = sdiv exact i64 %138, 8
  store i64 %145, i64* %102, align 8
  %146 = load i64, i64* %102, align 8
  %147 = icmp ne i64 %146, 0
  store i32 -659980334, i32* %20
  br label %148

; <label>:148:                                    ; preds = %98, %82, %79, %32, %24, %23
  br label %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #11

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32**) #4 comdat align 2 {
  %2 = alloca i32**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.483
  %6 = load i32, i32* @y.484
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1109412620, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1109412620, label %18
    i32 1895209130, label %26
    i32 1993815984, label %56
    i32 -2049487931, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1895209130, i32 -2049487931
  store i32 %25, i32* %14
  br label %61

; <label>:26:                                     ; preds = %15
  %27 = alloca i32**, align 8
  store i32** %0, i32*** %27, align 8
  %28 = load i32**, i32*** %27, align 8
  store i32** %28, i32*** %2
  %29 = load i32, i32* @x.483
  %30 = load i32, i32* @y.484
  %31 = sub i32 %29, 1741978691
  %32 = sub i32 %31, 1
  %33 = add i32 %32, 1741978691
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 1993815984, i32 -2049487931
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  %57 = load volatile i32**, i32*** %2
  ret i32** %57

; <label>:58:                                     ; preds = %15
  %59 = alloca i32**, align 8
  store i32** %0, i32*** %59, align 8
  %60 = load i32**, i32*** %59, align 8
  store i32 1895209130, i32* %14
  br label %61

; <label>:61:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %11)
  %13 = call i32** @_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %12)
  ret i32** %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i8, align 1
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32**, i32*** %4, align 8
  %9 = load i32**, i32*** %5, align 8
  %10 = load i32**, i32*** %6, align 8
  %11 = call i32** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_(i32** %8, i32** %9, i32** %10)
  ret i32** %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_(i32**, i32**, i32**) #4 comdat align 2 {
  %4 = alloca i32**
  %5 = alloca i64
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i32**, align 8
  %9 = alloca i64, align 8
  store i32** %0, i32*** %6, align 8
  store i32** %1, i32*** %7, align 8
  store i32** %2, i32*** %8, align 8
  %10 = load i32**, i32*** %7, align 8
  %11 = load i32**, i32*** %6, align 8
  %12 = ptrtoint i32** %10 to i64
  %13 = ptrtoint i32** %11 to i64
  %14 = sub i64 %12, -9156418231945992494
  %15 = sub i64 %14, %13
  %16 = add i64 %15, -9156418231945992494
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 8
  store i64 %18, i64* %9, align 8
  %19 = load i64, i64* %9, align 8
  store i64 %19, i64* %5
  %20 = alloca i32
  store i32 -1239451705, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %178
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -1239451705, label %24
    i32 1083986310, label %28
    i32 -1811842435, label %44
    i32 762133907, label %84
    i32 1260449331, label %85
    i32 -2096235497, label %101
    i32 -372043703, label %124
    i32 -274001950, label %126
    i32 -641828996, label %161
  ]

; <label>:23:                                     ; preds = %21
  br label %178

; <label>:24:                                     ; preds = %21
  %25 = load volatile i64, i64* %5
  %26 = icmp ne i64 %25, 0
  %27 = select i1 %26, i32 1083986310, i32 1260449331
  store i32 %27, i32* %20
  br label %178

; <label>:28:                                     ; preds = %21
  %29 = load i32, i32* @x.489
  %30 = load i32, i32* @y.490
  %31 = sub i32 %29, 309010540
  %32 = sub i32 %31, 1
  %33 = add i32 %32, 309010540
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -1811842435, i32 -274001950
  store i32 %43, i32* %20
  br label %178

; <label>:44:                                     ; preds = %21
  %45 = load i32**, i32*** %8, align 8
  %46 = load i64, i64* %9, align 8
  %47 = sub i64 0, 6963124463121382868
  %48 = sub i64 %47, %46
  %49 = add i64 %48, 6963124463121382868
  %50 = sub i64 0, %46
  %51 = getelementptr inbounds i32*, i32** %45, i64 %49
  %52 = bitcast i32** %51 to i8*
  %53 = load i32**, i32*** %6, align 8
  %54 = bitcast i32** %53 to i8*
  %55 = load i64, i64* %9, align 8
  %56 = mul i64 8, %55
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %52, i8* %54, i64 %56, i32 8, i1 false)
  %57 = load i32, i32* @x.489
  %58 = load i32, i32* @y.490
  %59 = add i32 %57, 2016922311
  %60 = sub i32 %59, 1
  %61 = sub i32 %60, 2016922311
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = xor i1 %65, true
  %68 = xor i1 %66, true
  %69 = xor i1 false, true
  %70 = and i1 %67, false
  %71 = and i1 %65, %69
  %72 = and i1 %68, false
  %73 = and i1 %66, %69
  %74 = or i1 %70, %71
  %75 = or i1 %72, %73
  %76 = xor i1 %74, %75
  %77 = or i1 %67, %68
  %78 = xor i1 %77, true
  %79 = or i1 false, %69
  %80 = and i1 %78, %79
  %81 = or i1 %76, %80
  %82 = or i1 %65, %66
  %83 = select i1 %81, i32 762133907, i32 -274001950
  store i32 %83, i32* %20
  br label %178

; <label>:84:                                     ; preds = %21
  store i32 1260449331, i32* %20
  br label %178

; <label>:85:                                     ; preds = %21
  %86 = load i32, i32* @x.489
  %87 = load i32, i32* @y.490
  %88 = sub i32 %86, -837235981
  %89 = sub i32 %88, 1
  %90 = add i32 %89, -837235981
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = and i1 %94, %95
  %97 = xor i1 %94, %95
  %98 = or i1 %96, %97
  %99 = or i1 %94, %95
  %100 = select i1 %98, i32 -2096235497, i32 -641828996
  store i32 %100, i32* %20
  br label %178

; <label>:101:                                    ; preds = %21
  %102 = load i32**, i32*** %8, align 8
  %103 = load i64, i64* %9, align 8
  %104 = sub i64 0, -7408857160825709697
  %105 = sub i64 %104, %103
  %106 = add i64 %105, -7408857160825709697
  %107 = sub i64 0, %103
  %108 = getelementptr inbounds i32*, i32** %102, i64 %106
  store i32** %108, i32*** %4
  %109 = load i32, i32* @x.489
  %110 = load i32, i32* @y.490
  %111 = sub i32 %109, -1146235497
  %112 = sub i32 %111, 1
  %113 = add i32 %112, -1146235497
  %114 = sub i32 %109, 1
  %115 = mul i32 %109, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %110, 10
  %119 = and i1 %117, %118
  %120 = xor i1 %117, %118
  %121 = or i1 %119, %120
  %122 = or i1 %117, %118
  %123 = select i1 %121, i32 -372043703, i32 -641828996
  store i32 %123, i32* %20
  br label %178

; <label>:124:                                    ; preds = %21
  %125 = load volatile i32**, i32*** %4
  ret i32** %125

; <label>:126:                                    ; preds = %21
  %127 = load i32**, i32*** %8, align 8
  %128 = load i64, i64* %9, align 8
  %129 = sub i64 0, %128
  %130 = add i64 0, %129
  %131 = sub i64 0, %128
  %132 = mul i64 %130, %128
  %133 = add i64 0, -4832238500148377582
  %134 = sub i64 %133, %128
  %135 = sub i64 %134, -4832238500148377582
  %136 = sub i64 0, %128
  %137 = getelementptr inbounds i32*, i32** %127, i64 %135
  %138 = bitcast i32** %137 to i8*
  %139 = load i32**, i32*** %6, align 8
  %140 = bitcast i32** %139 to i8*
  %141 = load i64, i64* %9, align 8
  %142 = shl i64 8, %141
  %143 = sub i64 8, 6806315211217122360
  %144 = sub i64 %143, %141
  %145 = add i64 %144, 6806315211217122360
  %146 = sub i64 8, %141
  %147 = mul i64 %145, %141
  %148 = sub i64 8, -8691476331781083607
  %149 = sub i64 %148, %141
  %150 = add i64 %149, -8691476331781083607
  %151 = sub i64 8, %141
  %152 = mul i64 %150, %141
  %153 = shl i64 8, %141
  %154 = sub i64 8, 3709995080646508514
  %155 = sub i64 %154, %141
  %156 = add i64 %155, 3709995080646508514
  %157 = sub i64 8, %141
  %158 = mul i64 %156, %141
  %159 = shl i64 8, %141
  %160 = mul i64 8, %141
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %138, i8* %140, i64 %160, i32 8, i1 false)
  store i32 -1811842435, i32* %20
  br label %178

; <label>:161:                                    ; preds = %21
  %162 = load i32**, i32*** %8, align 8
  %163 = load i64, i64* %9, align 8
  %164 = shl i64 0, %163
  %165 = sub i64 0, 5018300829175241423
  %166 = sub i64 %165, 0
  %167 = add i64 %166, 5018300829175241423
  %168 = sub i64 0, 0
  %169 = sub i64 0, %167
  %170 = sub i64 0, %163
  %171 = add i64 %169, %170
  %172 = sub i64 0, %171
  %173 = add i64 %167, %163
  %174 = sub i64 0, %163
  %175 = add i64 0, %174
  %176 = sub i64 0, %163
  %177 = getelementptr inbounds i32*, i32** %162, i64 %175
  store i32 -2096235497, i32* %20
  br label %178

; <label>:178:                                    ; preds = %161, %126, %101, %85, %84, %44, %28, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt5dequeIiSaIiEE5emptyEv(%"class.std::deque"*) #4 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %5 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 3
  %7 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %8 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %8, i32 0, i32 2
  %10 = call zeroext i1 @_ZSteqIiRiPiEbRKSt15_Deque_iteratorIT_T0_T1_ES8_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6, %"struct.std::_Deque_iterator"* dereferenceable(32) %9) #3
  ret i1 %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZSteqIiRiPiEbRKSt15_Deque_iteratorIT_T0_T1_ES8_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #4 comdat {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %8, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp eq i32* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEE5frontEv(%"class.std::deque"*) #4 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  %3 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  call void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* sret %3, %"class.std::deque"* %4) #3
  %5 = call dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"* %3) #3
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE9pop_frontEv(%"class.std::deque"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %5 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 2
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %6, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %10 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %9, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %10, i32 0, i32 2
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %11, i32 0, i32 2
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds i32, i32* %13, i64 -1
  %15 = icmp ne i32* %8, %14
  br i1 %15, label %16, label %32

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %18 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %17, i32 0, i32 0
  %19 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %18 to %"class.std::allocator.10"*
  %20 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %21 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %21, i32 0, i32 2
  %23 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %22, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  invoke void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.10"* dereferenceable(1) %19, i32* %24)
          to label %25 unwind label %35

; <label>:25:                                     ; preds = %16
  %26 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %27 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %27, i32 0, i32 2
  %29 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %28, i32 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = getelementptr inbounds i32, i32* %30, i32 1
  store i32* %31, i32** %29, align 8
  br label %34

; <label>:32:                                     ; preds = %1
  invoke void @_ZNSt5dequeIiSaIiEE16_M_pop_front_auxEv(%"class.std::deque"* %3)
          to label %33 unwind label %35

; <label>:33:                                     ; preds = %32
  br label %34

; <label>:34:                                     ; preds = %33, %25
  ret void

; <label>:35:                                     ; preds = %32, %16
  %36 = load i32, i32* @x.499
  %37 = load i32, i32* @y.500
  %38 = add i32 %36, 456879835
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, 456879835
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  br i1 %48, label %50, label %68

; <label>:50:                                     ; preds = %35, %68
  %51 = landingpad { i8*, i32 }
          catch i8* null
  %52 = extractvalue { i8*, i32 } %51, 0
  call void @__clang_call_terminate(i8* %52) #10
  %53 = load i32, i32* @x.499
  %54 = load i32, i32* @y.500
  %55 = add i32 %53, -237603777
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, -237603777
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  br i1 %65, label %67, label %68

; <label>:67:                                     ; preds = %50
  unreachable

; <label>:68:                                     ; preds = %50, %35
  %69 = landingpad { i8*, i32 }
          catch i8* null
  %70 = extractvalue { i8*, i32 } %69, 0
  call void @__clang_call_terminate(i8* %70) #10
  br label %50
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.10"* dereferenceable(1), i32*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.10"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %3, align 8
  %6 = bitcast %"class.std::allocator.10"* %5 to %"class.__gnu_cxx::new_allocator.11"*
  %7 = load i32*, i32** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator.11"* %6, i32* %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE16_M_pop_front_auxEv(%"class.std::deque"*) #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.503
  %5 = load i32, i32* @y.504
  %6 = add i32 %4, -1633644357
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1633644357
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 274075779, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %122
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 274075779, label %18
    i32 -805967332, label %26
    i32 -355058493, label %87
    i32 -1432827323, label %88
  ]

; <label>:17:                                     ; preds = %15
  br label %122

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -805967332, i32 -1432827323
  store i32 %25, i32* %14
  br label %122

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %27, align 8
  %28 = load %"class.std::deque"*, %"class.std::deque"** %27, align 8
  %29 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  %30 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %29) #3
  %31 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  %32 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %32, i32 0, i32 2
  %34 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %33, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  call void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.10"* dereferenceable(1) %30, i32* %35)
  %36 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  %37 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  %38 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %38, i32 0, i32 2
  %40 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %39, i32 0, i32 1
  %41 = load i32*, i32** %40, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %36, i32* %41) #3
  %42 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  %43 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %43, i32 0, i32 2
  %45 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  %46 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %46, i32 0, i32 2
  %48 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %47, i32 0, i32 3
  %49 = load i32**, i32*** %48, align 8
  %50 = getelementptr inbounds i32*, i32** %49, i64 1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %44, i32** %50) #3
  %51 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  %52 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %51, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %52, i32 0, i32 2
  %54 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %53, i32 0, i32 1
  %55 = load i32*, i32** %54, align 8
  %56 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  %57 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %56, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %57, i32 0, i32 2
  %59 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %58, i32 0, i32 0
  store i32* %55, i32** %59, align 8
  %60 = load i32, i32* @x.503
  %61 = load i32, i32* @y.504
  %62 = sub i32 %60, 709756162
  %63 = sub i32 %62, 1
  %64 = add i32 %63, 709756162
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 false, true
  %73 = and i1 %70, false
  %74 = and i1 %68, %72
  %75 = and i1 %71, false
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 false, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  %86 = select i1 %84, i32 -355058493, i32 -1432827323
  store i32 %86, i32* %14
  br label %122

; <label>:87:                                     ; preds = %15
  ret void

; <label>:88:                                     ; preds = %15
  %89 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %89, align 8
  %90 = load %"class.std::deque"*, %"class.std::deque"** %89, align 8
  %91 = bitcast %"class.std::deque"* %90 to %"class.std::_Deque_base"*
  %92 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %91) #3
  %93 = bitcast %"class.std::deque"* %90 to %"class.std::_Deque_base"*
  %94 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %93, i32 0, i32 0
  %95 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %94, i32 0, i32 2
  %96 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %95, i32 0, i32 0
  %97 = load i32*, i32** %96, align 8
  call void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.10"* dereferenceable(1) %92, i32* %97)
  %98 = bitcast %"class.std::deque"* %90 to %"class.std::_Deque_base"*
  %99 = bitcast %"class.std::deque"* %90 to %"class.std::_Deque_base"*
  %100 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %99, i32 0, i32 0
  %101 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %100, i32 0, i32 2
  %102 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %101, i32 0, i32 1
  %103 = load i32*, i32** %102, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %98, i32* %103) #3
  %104 = bitcast %"class.std::deque"* %90 to %"class.std::_Deque_base"*
  %105 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %104, i32 0, i32 0
  %106 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %105, i32 0, i32 2
  %107 = bitcast %"class.std::deque"* %90 to %"class.std::_Deque_base"*
  %108 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %107, i32 0, i32 0
  %109 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %108, i32 0, i32 2
  %110 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %109, i32 0, i32 3
  %111 = load i32**, i32*** %110, align 8
  %112 = getelementptr inbounds i32*, i32** %111, i64 1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %106, i32** %112) #3
  %113 = bitcast %"class.std::deque"* %90 to %"class.std::_Deque_base"*
  %114 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %113, i32 0, i32 0
  %115 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %114, i32 0, i32 2
  %116 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %115, i32 0, i32 1
  %117 = load i32*, i32** %116, align 8
  %118 = bitcast %"class.std::deque"* %90 to %"class.std::_Deque_base"*
  %119 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %118, i32 0, i32 0
  %120 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %119, i32 0, i32 2
  %121 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %120, i32 0, i32 0
  store i32* %117, i32** %121, align 8
  store i32 -805967332, i32* %14
  br label %122

; <label>:122:                                    ; preds = %88, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator.11"*, i32*) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %4 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.13"*, %"struct.MaxFlow::edge"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  %4 = alloca %"struct.MaxFlow::edge"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %0, %"class.__gnu_cxx::__normal_iterator.13"** %3, align 8
  store %"struct.MaxFlow::edge"** %1, %"struct.MaxFlow::edge"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %5, i32 0, i32 0
  %7 = load %"struct.MaxFlow::edge"**, %"struct.MaxFlow::edge"*** %4, align 8
  %8 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %7, align 8
  store %"struct.MaxFlow::edge"* %8, %"struct.MaxFlow::edge"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.MaxFlow::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN7MaxFlow4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.13"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %0, %"class.__gnu_cxx::__normal_iterator.13"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %3, i32 0, i32 0
  ret %"struct.MaxFlow::edge"** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.9"*, i64, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.9"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.10"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.10"* %2, %"class.std::allocator.10"** %6, align 8
  %9 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %6, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, %"class.std::allocator.10"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base.9"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i8*, i8** %7, align 8
  %20 = load i32, i32* %8, align 4
  %21 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi(%"class.std::vector.8"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %8 = bitcast %"class.std::vector.8"* %7 to %"struct.std::_Vector_base.9"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load i32*, i32** %6, align 8
  %14 = bitcast %"class.std::vector.8"* %7 to %"struct.std::_Vector_base.9"*
  %15 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %14) #3
  %16 = call i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32* %11, i64 %12, i32* dereferenceable(4) %13, %"class.std::allocator.10"* dereferenceable(1) %15)
  %17 = bitcast %"class.std::vector.8"* %7 to %"struct.std::_Vector_base.9"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %18, i32 0, i32 1
  store i32* %16, i32** %19, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.515
  %6 = load i32, i32* @y.516
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -474701466, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -474701466, label %18
    i32 801010585, label %26
    i32 1598352199, label %49
    i32 1441220407, label %50
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 801010585, i32 1441220407
  store i32 %25, i32* %14
  br label %59

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %28 = alloca %"class.std::allocator.10"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %27, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %28, align 8
  %29 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %27, align 8
  %30 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %29 to %"class.std::allocator.10"*
  %31 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %28, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.10"* %30, %"class.std::allocator.10"* dereferenceable(1) %31) #3
  %32 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %29, i32 0, i32 0
  store i32* null, i32** %32, align 8
  %33 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %29, i32 0, i32 1
  store i32* null, i32** %33, align 8
  %34 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %29, i32 0, i32 2
  store i32* null, i32** %34, align 8
  %35 = load i32, i32* @x.515
  %36 = load i32, i32* @y.516
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 1598352199, i32 1441220407
  store i32 %48, i32* %14
  br label %59

; <label>:49:                                     ; preds = %15
  ret void

; <label>:50:                                     ; preds = %15
  %51 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %52 = alloca %"class.std::allocator.10"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %51, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %52, align 8
  %53 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %51, align 8
  %54 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %53 to %"class.std::allocator.10"*
  %55 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %52, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.10"* %54, %"class.std::allocator.10"* dereferenceable(1) %55) #3
  %56 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %53, i32 0, i32 0
  store i32* null, i32** %56, align 8
  %57 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %53, i32 0, i32 1
  store i32* null, i32** %57, align 8
  %58 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %53, i32 0, i32 2
  store i32* null, i32** %58, align 8
  store i32 801010585, i32* %14
  br label %59

; <label>:59:                                     ; preds = %50, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base.9"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.9"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.9"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %8, i32 0, i32 0
  store i32* %7, i32** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %13, i32 0, i32 1
  store i32* %12, i32** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds i32, i32* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %20, i32 0, i32 2
  store i32* %19, i32** %21, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.9"*, i64) #0 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.9"*
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.519
  %10 = load i32, i32* @y.520
  %11 = sub i32 %9, -1723279545
  %12 = sub i32 %11, 1
  %13 = add i32 %12, -1723279545
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 -459096935, i32* %19
  %20 = alloca i32*
  br label %21

; <label>:21:                                     ; preds = %2, %170
  %22 = load i32, i32* %19
  switch i32 %22, label %23 [
    i32 -459096935, label %24
    i32 -1728861984, label %32
    i32 2063380440, label %67
    i32 1139742321, label %70
    i32 1449820568, label %86
    i32 540288691, label %119
    i32 -1625986434, label %121
    i32 -2123844751, label %137
    i32 1737633006, label %153
    i32 -727986689, label %154
    i32 -1239372327, label %156
    i32 269053231, label %162
    i32 330171436, label %169
  ]

; <label>:23:                                     ; preds = %21
  br label %170

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %8
  %26 = load volatile i1, i1* %7
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 -1728861984, i32 -1239372327
  store i32 %31, i32* %19
  br label %170

; <label>:32:                                     ; preds = %21
  %33 = alloca %"struct.std::_Vector_base.9"*, align 8
  %34 = alloca i64, align 8
  store i64* %34, i64** %6
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %33, align 8
  %35 = load volatile i64*, i64** %6
  store i64 %1, i64* %35, align 8
  %36 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %33, align 8
  store %"struct.std::_Vector_base.9"* %36, %"struct.std::_Vector_base.9"** %5
  %37 = load volatile i64*, i64** %6
  %38 = load i64, i64* %37, align 8
  %39 = icmp ne i64 %38, 0
  store i1 %39, i1* %4
  %40 = load i32, i32* @x.519
  %41 = load i32, i32* @y.520
  %42 = add i32 %40, -1995751815
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -1995751815
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 2063380440, i32 -1239372327
  store i32 %66, i32* %19
  br label %170

; <label>:67:                                     ; preds = %21
  %68 = load volatile i1, i1* %4
  %69 = select i1 %68, i32 1139742321, i32 -1625986434
  store i32 %69, i32* %19
  br label %170

; <label>:70:                                     ; preds = %21
  %71 = load i32, i32* @x.519
  %72 = load i32, i32* @y.520
  %73 = sub i32 %71, -744451776
  %74 = sub i32 %73, 1
  %75 = add i32 %74, -744451776
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  %85 = select i1 %83, i32 1449820568, i32 269053231
  store i32 %85, i32* %19
  br label %170

; <label>:86:                                     ; preds = %21
  %87 = load volatile %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %5
  %88 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %87, i32 0, i32 0
  %89 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %88 to %"class.std::allocator.10"*
  %90 = load volatile i64*, i64** %6
  %91 = load i64, i64* %90, align 8
  %92 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.10"* dereferenceable(1) %89, i64 %91)
  store i32* %92, i32** %3
  %93 = load i32, i32* @x.519
  %94 = load i32, i32* @y.520
  %95 = sub i32 0, 1
  %96 = add i32 %93, %95
  %97 = sub i32 %93, 1
  %98 = mul i32 %93, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %94, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 false, true
  %105 = and i1 %102, false
  %106 = and i1 %100, %104
  %107 = and i1 %103, false
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 false, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  %118 = select i1 %116, i32 540288691, i32 269053231
  store i32 %118, i32* %19
  br label %170

; <label>:119:                                    ; preds = %21
  store i32 -727986689, i32* %19
  %120 = load volatile i32*, i32** %3
  store i32* %120, i32** %20
  br label %170

; <label>:121:                                    ; preds = %21
  %122 = load i32, i32* @x.519
  %123 = load i32, i32* @y.520
  %124 = sub i32 %122, -1409252963
  %125 = sub i32 %124, 1
  %126 = add i32 %125, -1409252963
  %127 = sub i32 %122, 1
  %128 = mul i32 %122, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %123, 10
  %132 = and i1 %130, %131
  %133 = xor i1 %130, %131
  %134 = or i1 %132, %133
  %135 = or i1 %130, %131
  %136 = select i1 %134, i32 -2123844751, i32 330171436
  store i32 %136, i32* %19
  br label %170

; <label>:137:                                    ; preds = %21
  %138 = load i32, i32* @x.519
  %139 = load i32, i32* @y.520
  %140 = sub i32 %138, -607972613
  %141 = sub i32 %140, 1
  %142 = add i32 %141, -607972613
  %143 = sub i32 %138, 1
  %144 = mul i32 %138, %142
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %139, 10
  %148 = and i1 %146, %147
  %149 = xor i1 %146, %147
  %150 = or i1 %148, %149
  %151 = or i1 %146, %147
  %152 = select i1 %150, i32 1737633006, i32 330171436
  store i32 %152, i32* %19
  br label %170

; <label>:153:                                    ; preds = %21
  store i32 -727986689, i32* %19
  store i32* null, i32** %20
  br label %170

; <label>:154:                                    ; preds = %21
  %155 = load i32*, i32** %20
  ret i32* %155

; <label>:156:                                    ; preds = %21
  %157 = alloca %"struct.std::_Vector_base.9"*, align 8
  %158 = alloca i64, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %157, align 8
  store i64 %1, i64* %158, align 8
  %159 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %157, align 8
  %160 = load i64, i64* %158, align 8
  %161 = icmp ne i64 %160, 0
  store i32 -1728861984, i32* %19
  br label %170

; <label>:162:                                    ; preds = %21
  %163 = load volatile %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %5
  %164 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %163, i32 0, i32 0
  %165 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %164 to %"class.std::allocator.10"*
  %166 = load volatile i64*, i64** %6
  %167 = load i64, i64* %166, align 8
  %168 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.10"* dereferenceable(1) %165, i64 %167)
  store i32 1449820568, i32* %19
  br label %170

; <label>:169:                                    ; preds = %21
  store i32 -2123844751, i32* %19
  br label %170

; <label>:170:                                    ; preds = %169, %162, %156, %153, %137, %121, %119, %86, %70, %67, %32, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32*, i64, i32* dereferenceable(4), %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.521
  %9 = load i32, i32* @y.522
  %10 = add i32 %8, 1771114167
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 1771114167
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1954891298, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %64
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1954891298, label %22
    i32 -743667475, label %30
    i32 1815594689, label %53
    i32 -1842029394, label %55
  ]

; <label>:21:                                     ; preds = %19
  br label %64

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -743667475, i32 -1842029394
  store i32 %29, i32* %18
  br label %64

; <label>:30:                                     ; preds = %19
  %31 = alloca i32*, align 8
  %32 = alloca i64, align 8
  %33 = alloca i32*, align 8
  %34 = alloca %"class.std::allocator.10"*, align 8
  store i32* %0, i32** %31, align 8
  store i64 %1, i64* %32, align 8
  store i32* %2, i32** %33, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %34, align 8
  %35 = load i32*, i32** %31, align 8
  %36 = load i64, i64* %32, align 8
  %37 = load i32*, i32** %33, align 8
  %38 = call i32* @_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_(i32* %35, i64 %36, i32* dereferenceable(4) %37)
  store i32* %38, i32** %5
  %39 = load i32, i32* @x.521
  %40 = load i32, i32* @y.522
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 1815594689, i32 -1842029394
  store i32 %52, i32* %18
  br label %64

; <label>:53:                                     ; preds = %19
  %54 = load volatile i32*, i32** %5
  ret i32* %54

; <label>:55:                                     ; preds = %19
  %56 = alloca i32*, align 8
  %57 = alloca i64, align 8
  %58 = alloca i32*, align 8
  %59 = alloca %"class.std::allocator.10"*, align 8
  store i32* %0, i32** %56, align 8
  store i64 %1, i64* %57, align 8
  store i32* %2, i32** %58, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %59, align 8
  %60 = load i32*, i32** %56, align 8
  %61 = load i64, i64* %57, align 8
  %62 = load i32*, i32** %58, align 8
  %63 = call i32* @_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_(i32* %60, i64 %61, i32* dereferenceable(4) %62)
  store i32 -743667475, i32* %18
  br label %64

; <label>:64:                                     ; preds = %55, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %7, i64 %8, i32* dereferenceable(4) %9)
  ret i32* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.527
  %8 = load i32, i32* @y.528
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 2051280784, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %75
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 2051280784, label %20
    i32 -359895757, label %40
    i32 513108444, label %64
    i32 -1189006090, label %66
  ]

; <label>:19:                                     ; preds = %17
  br label %75

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -359895757, i32 -1189006090
  store i32 %39, i32* %16
  br label %75

; <label>:40:                                     ; preds = %17
  %41 = alloca i32*, align 8
  %42 = alloca i64, align 8
  %43 = alloca i32*, align 8
  store i32* %0, i32** %41, align 8
  store i64 %1, i64* %42, align 8
  store i32* %2, i32** %43, align 8
  %44 = load i32*, i32** %41, align 8
  %45 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %44)
  %46 = load i64, i64* %42, align 8
  %47 = load i32*, i32** %43, align 8
  %48 = call i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %45, i64 %46, i32* dereferenceable(4) %47)
  store i32* %48, i32** %4
  %49 = load i32, i32* @x.527
  %50 = load i32, i32* @y.528
  %51 = sub i32 %49, 1471329858
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 1471329858
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 513108444, i32 -1189006090
  store i32 %63, i32* %16
  br label %75

; <label>:64:                                     ; preds = %17
  %65 = load volatile i32*, i32** %4
  ret i32* %65

; <label>:66:                                     ; preds = %17
  %67 = alloca i32*, align 8
  %68 = alloca i64, align 8
  %69 = alloca i32*, align 8
  store i32* %0, i32** %67, align 8
  store i64 %1, i64* %68, align 8
  store i32* %2, i32** %69, align 8
  %70 = load i32*, i32** %67, align 8
  %71 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %70)
  %72 = load i64, i64* %68, align 8
  %73 = load i32*, i32** %69, align 8
  %74 = call i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %71, i64 %72, i32* dereferenceable(4) %73)
  store i32 -359895757, i32* %16
  br label %75

; <label>:75:                                     ; preds = %66, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32*, i64, i32* dereferenceable(4)) #4 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %7, align 4
  %11 = load i64, i64* %5, align 8
  store i64 %11, i64* %8, align 8
  %12 = alloca i32
  store i32 1355587588, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %34
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1355587588, label %16
    i32 -71329547, label %20
    i32 1654912642, label %23
    i32 -423170030, label %32
  ]

; <label>:15:                                     ; preds = %13
  br label %34

; <label>:16:                                     ; preds = %13
  %17 = load i64, i64* %8, align 8
  %18 = icmp ugt i64 %17, 0
  %19 = select i1 %18, i32 -71329547, i32 -423170030
  store i32 %19, i32* %12
  br label %34

; <label>:20:                                     ; preds = %13
  %21 = load i32, i32* %7, align 4
  %22 = load i32*, i32** %4, align 8
  store i32 %21, i32* %22, align 4
  store i32 1654912642, i32* %12
  br label %34

; <label>:23:                                     ; preds = %13
  %24 = load i64, i64* %8, align 8
  %25 = sub i64 0, %24
  %26 = sub i64 0, -1
  %27 = add i64 %25, %26
  %28 = sub i64 0, %27
  %29 = add i64 %24, -1
  store i64 %28, i64* %8, align 8
  %30 = load i32*, i32** %4, align 8
  %31 = getelementptr inbounds i32, i32* %30, i32 1
  store i32* %31, i32** %4, align 8
  store i32 1355587588, i32* %12
  br label %34

; <label>:32:                                     ; preds = %13
  %33 = load i32*, i32** %4, align 8
  ret i32* %33

; <label>:34:                                     ; preds = %23, %20, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32*) #0 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  %4 = call i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %3)
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32*) #4 comdat align 2 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE14_M_move_assignEOS1_St17integral_constantIbLb1EE(%"class.std::vector.8"*, %"class.std::vector.8"* dereferenceable(24)) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca %"class.std::vector.8", align 8
  %7 = alloca %"class.std::allocator.10", align 1
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %4, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %5, align 8
  %10 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %11 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  call void @_ZNKSt12_Vector_baseIiSaIiEE13get_allocatorEv(%"class.std::allocator.10"* sret %7, %"struct.std::_Vector_base.9"* %11) #3
  call void @_ZNSt6vectorIiSaIiEEC2ERKS0_(%"class.std::vector.8"* %6, %"class.std::allocator.10"* dereferenceable(1) %7) #3
  call void @_ZNSaIiED2Ev(%"class.std::allocator.10"* %7) #3
  %12 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %12, i32 0, i32 0
  %14 = bitcast %"class.std::vector.8"* %6 to %"struct.std::_Vector_base.9"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %14, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %13, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24) %15) #3
  %16 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %16, i32 0, i32 0
  %18 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %19 = bitcast %"class.std::vector.8"* %18 to %"struct.std::_Vector_base.9"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %19, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %17, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24) %20) #3
  %21 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %22 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %21) #3
  %23 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %24 = bitcast %"class.std::vector.8"* %23 to %"struct.std::_Vector_base.9"*
  %25 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %24) #3
  invoke void @_ZSt15__alloc_on_moveISaIiEEvRT_S2_(%"class.std::allocator.10"* dereferenceable(1) %22, %"class.std::allocator.10"* dereferenceable(1) %25)
          to label %26 unwind label %27

; <label>:26:                                     ; preds = %2
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.8"* %6) #3
  ret void

; <label>:27:                                     ; preds = %2
  %28 = landingpad { i8*, i32 }
          catch i8* null
  %29 = extractvalue { i8*, i32 } %28, 0
  store i8* %29, i8** %8, align 8
  %30 = extractvalue { i8*, i32 } %28, 1
  store i32 %30, i32* %9, align 4
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.8"* %6) #3
  br label %31

; <label>:31:                                     ; preds = %27
  %32 = load i32, i32* @x.535
  %33 = load i32, i32* @y.536
  %34 = add i32 %32, -888625908
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -888625908
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  br i1 %56, label %58, label %75

; <label>:58:                                     ; preds = %31, %75
  %59 = load i8*, i8** %8, align 8
  call void @__clang_call_terminate(i8* %59) #10
  %60 = load i32, i32* @x.535
  %61 = load i32, i32* @y.536
  %62 = add i32 %60, -541839353
  %63 = sub i32 %62, 1
  %64 = sub i32 %63, -541839353
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  br i1 %72, label %74, label %75

; <label>:74:                                     ; preds = %58
  unreachable

; <label>:75:                                     ; preds = %58, %31
  %76 = load i8*, i8** %8, align 8
  call void @__clang_call_terminate(i8* %76) #10
  br label %58
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.8"* @_ZSt4moveIRSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::vector.8"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.8"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.537
  %6 = load i32, i32* @y.538
  %7 = add i32 %5, 221089887
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 221089887
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1495856292, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1495856292, label %19
    i32 -1283709509, label %27
    i32 -365867166, label %57
    i32 1869067707, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1283709509, i32 1869067707
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %28, align 8
  %29 = load %"class.std::vector.8"*, %"class.std::vector.8"** %28, align 8
  store %"class.std::vector.8"* %29, %"class.std::vector.8"** %2
  %30 = load i32, i32* @x.537
  %31 = load i32, i32* @y.538
  %32 = add i32 %30, 1206693746
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 1206693746
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -365867166, i32 1869067707
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %2
  ret %"class.std::vector.8"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %60, align 8
  %61 = load %"class.std::vector.8"*, %"class.std::vector.8"** %60, align 8
  store i32 -1283709509, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt12_Vector_baseIiSaIiEE13get_allocatorEv(%"class.std::allocator.10"* noalias sret, %"struct.std::_Vector_base.9"*) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %1, %"struct.std::_Vector_base.9"** %3, align 8
  %4 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %3, align 8
  %5 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %4) #3
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.10"* %0, %"class.std::allocator.10"* dereferenceable(1) %5) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2ERKS0_(%"class.std::vector.8"*, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.541
  %6 = load i32, i32* @y.542
  %7 = sub i32 %5, -917959496
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -917959496
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1747754852, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1747754852, label %19
    i32 -1358211585, label %39
    i32 -37972147, label %71
    i32 679093535, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1358211585, i32 679093535
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.8"*, align 8
  %41 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %40, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %41, align 8
  %42 = load %"class.std::vector.8"*, %"class.std::vector.8"** %40, align 8
  %43 = bitcast %"class.std::vector.8"* %42 to %"struct.std::_Vector_base.9"*
  %44 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %41, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEEC2ERKS0_(%"struct.std::_Vector_base.9"* %43, %"class.std::allocator.10"* dereferenceable(1) %44) #3
  %45 = load i32, i32* @x.541
  %46 = load i32, i32* @y.542
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -37972147, i32 679093535
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  ret void

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.std::vector.8"*, align 8
  %74 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %73, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %74, align 8
  %75 = load %"class.std::vector.8"*, %"class.std::vector.8"** %73, align 8
  %76 = bitcast %"class.std::vector.8"* %75 to %"struct.std::_Vector_base.9"*
  %77 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %74, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEEC2ERKS0_(%"struct.std::_Vector_base.9"* %76, %"class.std::allocator.10"* dereferenceable(1) %77) #3
  store i32 -1358211585, i32* %15
  br label %78

; <label>:78:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %1, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %6, i32** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %9, i32** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %12, i32** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt15__alloc_on_moveISaIiEEvRT_S2_(%"class.std::allocator.10"* dereferenceable(1), %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.545
  %6 = load i32, i32* @y.546
  %7 = sub i32 %5, 290825040
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 290825040
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1458181991, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1458181991, label %19
    i32 112464312, label %27
    i32 345622772, label %60
    i32 -164160093, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 112464312, i32 -164160093
  store i32 %26, i32* %15
  br label %67

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.10"*, align 8
  %29 = alloca %"class.std::allocator.10"*, align 8
  %30 = alloca %"struct.std::integral_constant", align 1
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %28, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %29, align 8
  %31 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %28, align 8
  %32 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %29, align 8
  call void @_ZSt18__do_alloc_on_moveISaIiEEvRT_S2_St17integral_constantIbLb1EE(%"class.std::allocator.10"* dereferenceable(1) %31, %"class.std::allocator.10"* dereferenceable(1) %32)
  %33 = load i32, i32* @x.545
  %34 = load i32, i32* @y.546
  %35 = add i32 %33, 1590270469
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 1590270469
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 345622772, i32 -164160093
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::allocator.10"*, align 8
  %63 = alloca %"class.std::allocator.10"*, align 8
  %64 = alloca %"struct.std::integral_constant", align 1
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %62, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %63, align 8
  %65 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %62, align 8
  %66 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %63, align 8
  call void @_ZSt18__do_alloc_on_moveISaIiEEvRT_S2_St17integral_constantIbLb1EE(%"class.std::allocator.10"* dereferenceable(1) %65, %"class.std::allocator.10"* dereferenceable(1) %66)
  store i32 112464312, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.10"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %2, align 8
  %3 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4 to %"class.std::allocator.10"*
  ret %"class.std::allocator.10"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2ERKS_(%"class.std::allocator.10"*, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.10"*, align 8
  %4 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %3, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %4, align 8
  %5 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %3, align 8
  %6 = bitcast %"class.std::allocator.10"* %5 to %"class.__gnu_cxx::new_allocator.11"*
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  %8 = bitcast %"class.std::allocator.10"* %7 to %"class.__gnu_cxx::new_allocator.11"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.11"* %6, %"class.__gnu_cxx::new_allocator.11"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2ERKS0_(%"struct.std::_Vector_base.9"*, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.9"*, align 8
  %4 = alloca %"class.std::allocator.10"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %3, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %4, align 8
  %5 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, %"class.std::allocator.10"* dereferenceable(1) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8), i32** dereferenceable(8)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.553
  %6 = load i32, i32* @y.554
  %7 = sub i32 %5, 487378146
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 487378146
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 691943620, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %82
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 691943620, label %19
    i32 1657130785, label %39
    i32 1152695635, label %67
    i32 667858282, label %68
  ]

; <label>:18:                                     ; preds = %16
  br label %82

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1657130785, i32 667858282
  store i32 %38, i32* %15
  br label %82

; <label>:39:                                     ; preds = %16
  %40 = alloca i32**, align 8
  %41 = alloca i32**, align 8
  %42 = alloca i32*, align 8
  store i32** %0, i32*** %40, align 8
  store i32** %1, i32*** %41, align 8
  %43 = load i32**, i32*** %40, align 8
  %44 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %43) #3
  %45 = load i32*, i32** %44, align 8
  store i32* %45, i32** %42, align 8
  %46 = load i32**, i32*** %41, align 8
  %47 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %46) #3
  %48 = load i32*, i32** %47, align 8
  %49 = load i32**, i32*** %40, align 8
  store i32* %48, i32** %49, align 8
  %50 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %42) #3
  %51 = load i32*, i32** %50, align 8
  %52 = load i32**, i32*** %41, align 8
  store i32* %51, i32** %52, align 8
  %53 = load i32, i32* @x.553
  %54 = load i32, i32* @y.554
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 1152695635, i32 667858282
  store i32 %66, i32* %15
  br label %82

; <label>:67:                                     ; preds = %16
  ret void

; <label>:68:                                     ; preds = %16
  %69 = alloca i32**, align 8
  %70 = alloca i32**, align 8
  %71 = alloca i32*, align 8
  store i32** %0, i32*** %69, align 8
  store i32** %1, i32*** %70, align 8
  %72 = load i32**, i32*** %69, align 8
  %73 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %72) #3
  %74 = load i32*, i32** %73, align 8
  store i32* %74, i32** %71, align 8
  %75 = load i32**, i32*** %70, align 8
  %76 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %75) #3
  %77 = load i32*, i32** %76, align 8
  %78 = load i32**, i32*** %69, align 8
  store i32* %77, i32** %78, align 8
  %79 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %71) #3
  %80 = load i32*, i32** %79, align 8
  %81 = load i32**, i32*** %70, align 8
  store i32* %80, i32** %81, align 8
  store i32 1657130785, i32* %15
  br label %82

; <label>:82:                                     ; preds = %68, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8)) #4 comdat {
  %2 = alloca i32**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.555
  %6 = load i32, i32* @y.556
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1796466121, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1796466121, label %18
    i32 -1700044742, label %38
    i32 -215138037, label %68
    i32 1740688034, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1700044742, i32 1740688034
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca i32**, align 8
  store i32** %0, i32*** %39, align 8
  %40 = load i32**, i32*** %39, align 8
  store i32** %40, i32*** %2
  %41 = load i32, i32* @x.555
  %42 = load i32, i32* @y.556
  %43 = add i32 %41, 786285773
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 786285773
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -215138037, i32 1740688034
  store i32 %67, i32* %14
  br label %73

; <label>:68:                                     ; preds = %15
  %69 = load volatile i32**, i32*** %2
  ret i32** %69

; <label>:70:                                     ; preds = %15
  %71 = alloca i32**, align 8
  store i32** %0, i32*** %71, align 8
  %72 = load i32**, i32*** %71, align 8
  store i32 -1700044742, i32* %14
  br label %73

; <label>:73:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt18__do_alloc_on_moveISaIiEEvRT_S2_St17integral_constantIbLb1EE(%"class.std::allocator.10"* dereferenceable(1), %"class.std::allocator.10"* dereferenceable(1)) #4 comdat {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"class.std::allocator.10"*, align 8
  %5 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %4, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %5, align 8
  %6 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %5, align 8
  %7 = call dereferenceable(1) %"class.std::allocator.10"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.10"* dereferenceable(1) %6) #3
  %8 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.MaxFlow::edge"* @_ZNSt6vectorIN7MaxFlow4edgeESaIS1_EEixEm(%"class.std::vector.3"*, i64) #4 comdat align 2 {
  %3 = alloca %"struct.MaxFlow::edge"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.559
  %7 = load i32, i32* @y.560
  %8 = sub i32 %6, 458085577
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 458085577
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1250536516, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %88
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1250536516, label %20
    i32 -1384673216, label %40
    i32 -963420595, label %76
    i32 728853394, label %78
  ]

; <label>:19:                                     ; preds = %17
  br label %88

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1384673216, i32 728853394
  store i32 %39, i32* %16
  br label %88

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector.3"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %41, align 8
  store i64 %1, i64* %42, align 8
  %43 = load %"class.std::vector.3"*, %"class.std::vector.3"** %41, align 8
  %44 = bitcast %"class.std::vector.3"* %43 to %"struct.std::_Vector_base.4"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %45, i32 0, i32 0
  %47 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %46, align 8
  %48 = load i64, i64* %42, align 8
  %49 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %47, i64 %48
  store %"struct.MaxFlow::edge"* %49, %"struct.MaxFlow::edge"** %3
  %50 = load i32, i32* @x.559
  %51 = load i32, i32* @y.560
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -963420595, i32 728853394
  store i32 %75, i32* %16
  br label %88

; <label>:76:                                     ; preds = %17
  %77 = load volatile %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %3
  ret %"struct.MaxFlow::edge"* %77

; <label>:78:                                     ; preds = %17
  %79 = alloca %"class.std::vector.3"*, align 8
  %80 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %79, align 8
  store i64 %1, i64* %80, align 8
  %81 = load %"class.std::vector.3"*, %"class.std::vector.3"** %79, align 8
  %82 = bitcast %"class.std::vector.3"* %81 to %"struct.std::_Vector_base.4"*
  %83 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %82, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl", %"struct.std::_Vector_base<MaxFlow::edge, std::allocator<MaxFlow::edge> >::_Vector_impl"* %83, i32 0, i32 0
  %85 = load %"struct.MaxFlow::edge"*, %"struct.MaxFlow::edge"** %84, align 8
  %86 = load i64, i64* %80, align 8
  %87 = getelementptr inbounds %"struct.MaxFlow::edge", %"struct.MaxFlow::edge"* %85, i64 %86
  store i32 -1384673216, i32* %16
  br label %88

; <label>:88:                                     ; preds = %78, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat {
  %3 = alloca i64*
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  store i64* %0, i64** %7, align 8
  store i64* %1, i64** %8, align 8
  %9 = load i64*, i64** %8, align 8
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %5
  %11 = load i64*, i64** %7, align 8
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %4
  %13 = alloca i32
  store i32 -1866539716, i32* %13
  br label %14

; <label>:14:                                     ; preds = %2, %142
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1866539716, label %17
    i32 374098370, label %22
    i32 1663370685, label %38
    i32 635593545, label %54
    i32 1109307620, label %55
    i32 1052056788, label %83
    i32 1714934820, label %100
    i32 245772861, label %101
    i32 708971391, label %117
    i32 325939336, label %134
    i32 261317412, label %136
    i32 -669951198, label %138
    i32 -1513027643, label %140
  ]

; <label>:16:                                     ; preds = %14
  br label %142

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %5
  %19 = load volatile i64, i64* %4
  %20 = icmp slt i64 %18, %19
  %21 = select i1 %20, i32 374098370, i32 1109307620
  store i32 %21, i32* %13
  br label %142

; <label>:22:                                     ; preds = %14
  %23 = load i32, i32* @x.561
  %24 = load i32, i32* @y.562
  %25 = add i32 %23, -35187295
  %26 = sub i32 %25, 1
  %27 = sub i32 %26, -35187295
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  %37 = select i1 %35, i32 1663370685, i32 261317412
  store i32 %37, i32* %13
  br label %142

; <label>:38:                                     ; preds = %14
  %39 = load i64*, i64** %8, align 8
  store i64* %39, i64** %6, align 8
  %40 = load i32, i32* @x.561
  %41 = load i32, i32* @y.562
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 635593545, i32 261317412
  store i32 %53, i32* %13
  br label %142

; <label>:54:                                     ; preds = %14
  store i32 245772861, i32* %13
  br label %142

; <label>:55:                                     ; preds = %14
  %56 = load i32, i32* @x.561
  %57 = load i32, i32* @y.562
  %58 = add i32 %56, 967514565
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, 967514565
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 false, true
  %69 = and i1 %66, false
  %70 = and i1 %64, %68
  %71 = and i1 %67, false
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 false, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 1052056788, i32 -669951198
  store i32 %82, i32* %13
  br label %142

; <label>:83:                                     ; preds = %14
  %84 = load i64*, i64** %7, align 8
  store i64* %84, i64** %6, align 8
  %85 = load i32, i32* @x.561
  %86 = load i32, i32* @y.562
  %87 = sub i32 %85, -1290717468
  %88 = sub i32 %87, 1
  %89 = add i32 %88, -1290717468
  %90 = sub i32 %85, 1
  %91 = mul i32 %85, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %86, 10
  %95 = and i1 %93, %94
  %96 = xor i1 %93, %94
  %97 = or i1 %95, %96
  %98 = or i1 %93, %94
  %99 = select i1 %97, i32 1714934820, i32 -669951198
  store i32 %99, i32* %13
  br label %142

; <label>:100:                                    ; preds = %14
  store i32 245772861, i32* %13
  br label %142

; <label>:101:                                    ; preds = %14
  %102 = load i32, i32* @x.561
  %103 = load i32, i32* @y.562
  %104 = add i32 %102, 1999336906
  %105 = sub i32 %104, 1
  %106 = sub i32 %105, 1999336906
  %107 = sub i32 %102, 1
  %108 = mul i32 %102, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %103, 10
  %112 = and i1 %110, %111
  %113 = xor i1 %110, %111
  %114 = or i1 %112, %113
  %115 = or i1 %110, %111
  %116 = select i1 %114, i32 708971391, i32 -1513027643
  store i32 %116, i32* %13
  br label %142

; <label>:117:                                    ; preds = %14
  %118 = load i64*, i64** %6, align 8
  store i64* %118, i64** %3
  %119 = load i32, i32* @x.561
  %120 = load i32, i32* @y.562
  %121 = add i32 %119, 107163024
  %122 = sub i32 %121, 1
  %123 = sub i32 %122, 107163024
  %124 = sub i32 %119, 1
  %125 = mul i32 %119, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %120, 10
  %129 = and i1 %127, %128
  %130 = xor i1 %127, %128
  %131 = or i1 %129, %130
  %132 = or i1 %127, %128
  %133 = select i1 %131, i32 325939336, i32 -1513027643
  store i32 %133, i32* %13
  br label %142

; <label>:134:                                    ; preds = %14
  %135 = load volatile i64*, i64** %3
  ret i64* %135

; <label>:136:                                    ; preds = %14
  %137 = load i64*, i64** %8, align 8
  store i64* %137, i64** %6, align 8
  store i32 1663370685, i32* %13
  br label %142

; <label>:138:                                    ; preds = %14
  %139 = load i64*, i64** %7, align 8
  store i64* %139, i64** %6, align 8
  store i32 1052056788, i32* %13
  br label %142

; <label>:140:                                    ; preds = %14
  %141 = load i64*, i64** %6, align 8
  store i32 708971391, i32* %13
  br label %142

; <label>:142:                                    ; preds = %140, %138, %136, %117, %101, %100, %83, %55, %54, %38, %22, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s354826331.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  call void @__cxx_global_var_init.2()
  call void @__cxx_global_var_init.3()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline noreturn nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind }
attributes #11 = { argmemonly nounwind }
attributes #12 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
