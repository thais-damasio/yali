; ModuleID = 'Project_CodeNet_C++1400/p03833/s214490518.cpp'
source_filename = "Project_CodeNet_C++1400/p03833/s214490518.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl" = type { %"class.std::stack"*, %"class.std::stack"*, %"class.std::stack"* }
%"class.std::stack" = type { %"class.std::deque" }
%"class.std::deque" = type { %"class.std::_Deque_base" }
%"class.std::_Deque_base" = type { %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl" }
%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl" = type { i32**, i64, %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator" }
%"struct.std::_Deque_iterator" = type { i32*, i32*, i32*, i32** }
%"class.std::vector.3" = type { %"struct.std::_Vector_base.4" }
%"struct.std::_Vector_base.4" = type { %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl" }
%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl" = type { i64*, i64*, i64* }
%"class.std::vector.8" = type { %"struct.std::_Vector_base.9" }
%"struct.std::_Vector_base.9" = type { %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl" = type { %"class.std::vector.13"*, %"class.std::vector.13"*, %"class.std::vector.13"* }
%"class.std::vector.13" = type { %"struct.std::_Vector_base.14" }
%"struct.std::_Vector_base.14" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" = type { i32*, i32*, i32* }
%"class.std::move_iterator" = type { i64* }
%"class.std::allocator.5" = type { i8 }
%"class.std::allocator.0" = type { i8 }
%"class.std::allocator.10" = type { i8 }
%"class.std::allocator" = type { i8 }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.__gnu_cxx::new_allocator.6" = type { i8 }
%"class.__gnu_cxx::new_allocator.11" = type { i8 }
%"class.__gnu_cxx::new_allocator.1" = type { i8 }
%"class.__gnu_cxx::__normal_iterator" = type { %"class.std::vector.13"* }
%"class.__gnu_cxx::__normal_iterator.16" = type { i32* }
%"class.__gnu_cxx::__normal_iterator.15" = type { i32* }
%"class.std::allocator.17" = type { i8 }
%"class.__gnu_cxx::new_allocator.18" = type { i8 }
%"struct.std::integral_constant" = type { i8 }
%"struct.__gnu_cxx::__allocator_always_compares_equal" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.20" = type { %"class.std::stack"* }
%"struct.std::_Deque_iterator.21" = type { i32*, i32*, i32*, i32** }
%"struct.std::__false_type" = type { i8 }
%"struct.std::forward_iterator_tag" = type { i8 }
%"struct.std::random_access_iterator_tag" = type { i8 }
%"class.std::move_iterator.22" = type { %"struct.std::_Deque_iterator" }
%"class.std::move_iterator.23" = type { i32* }

$_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EEC2Ev = comdat any

$_ZNSt6vectorIxSaIxEEC2Ev = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2Ev = comdat any

$_Z4readv = comdat any

$_ZNSt6vectorIxSaIxEE7reserveEm = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE6assignEmRKS1_ = comdat any

$_ZNSt6vectorIiSaIiEEC2Ev = comdat any

$_ZNSt6vectorIiSaIiEED2Ev = comdat any

$_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EE6assignEmRKS4_ = comdat any

$_ZNSt5dequeIiSaIiEEC2Ev = comdat any

$_ZNSt5stackIiSt5dequeIiSaIiEEEC2EOS2_ = comdat any

$_ZNSt5stackIiSt5dequeIiSaIiEEED2Ev = comdat any

$_ZNSt5dequeIiSaIiEED2Ev = comdat any

$_ZNSt6vectorIxSaIxEE9push_backEOx = comdat any

$_Z4relov = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm = comdat any

$_ZNSt6vectorIiSaIiEE9push_backEOi = comdat any

$_ZNKSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EE4sizeEv = comdat any

$_ZNSt6vectorIiSaIiEEixEm = comdat any

$_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EEixEm = comdat any

$_ZNKSt5stackIiSt5dequeIiSaIiEEE5emptyEv = comdat any

$_ZNSt5stackIiSt5dequeIiSaIiEEE3topEv = comdat any

$_ZNSt6vectorIxSaIxEEixEm = comdat any

$_ZNSt5stackIiSt5dequeIiSaIiEEE3popEv = comdat any

$_ZNSt5stackIiSt5dequeIiSaIiEEE4pushERKi = comdat any

$_ZSt3maxIxERKT_S2_S2_ = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev = comdat any

$_ZNSt6vectorIxSaIxEED2Ev = comdat any

$_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EED2Ev = comdat any

$_Z3Getv = comdat any

$_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EEC2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt5stackIiSt5dequeIiSaIiEEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5stackIiSt5dequeIiSaIiEEEEC2Ev = comdat any

$_ZSt8_DestroyIPSt5stackIiSt5dequeIiSaIiEEES4_EvT_S6_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EED2Ev = comdat any

$_ZSt8_DestroyIPSt5stackIiSt5dequeIiSaIiEEEEvT_S6_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt5stackIiSt5dequeIiSaIiEEEEEvT_S8_ = comdat any

$_ZSt8_DestroyISt5stackIiSt5dequeIiSaIiEEEEvPT_ = comdat any

$_ZSt11__addressofISt5stackIiSt5dequeIiSaIiEEEEPT_RS5_ = comdat any

$_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE13_M_deallocateEPS4_m = comdat any

$_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaISt5stackIiSt5dequeIiSaIiEEEEE10deallocateERS5_PS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5stackIiSt5dequeIiSaIiEEEE10deallocateEPS5_m = comdat any

$_ZNSaISt5stackIiSt5dequeIiSaIiEEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5stackIiSt5dequeIiSaIiEEEED2Ev = comdat any

$_ZNSt12_Vector_baseIxSaIxEEC2Ev = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2Ev = comdat any

$_ZNSaIxEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIxEC2Ev = comdat any

$_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIxSaIxEED2Ev = comdat any

$_ZSt8_DestroyIPxEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm = comdat any

$_ZNSaIxED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIxED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt6vectorIiSaIiEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2Ev = comdat any

$_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev = comdat any

$_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_ = comdat any

$_ZSt8_DestroyISt6vectorIiSaIiEEEvPT_ = comdat any

$_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE10deallocateEPS3_m = comdat any

$_ZNSaISt6vectorIiSaIiEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev = comdat any

$_ZNKSt6vectorIxSaIxEE8max_sizeEv = comdat any

$_ZNKSt6vectorIxSaIxEE8capacityEv = comdat any

$_ZNKSt6vectorIxSaIxEE4sizeEv = comdat any

$_ZNSt6vectorIxSaIxEE20_M_allocate_and_copyISt13move_iteratorIPxEEES4_mT_S6_ = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_ = comdat any

$_ZNSt16allocator_traitsISaIxEE8max_sizeERKS0_ = comdat any

$_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv = comdat any

$_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPxES1_xET0_T_S4_S3_RSaIT1_E = comdat any

$_ZNSt16allocator_traitsISaIxEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPxES1_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPxES3_EET0_T_S6_S5_ = comdat any

$_ZSt4copyISt13move_iteratorIPxES1_ET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb1EPxS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb1EPxS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPxELb1EE7_S_baseES2_ = comdat any

$_ZNKSt13move_iteratorIPxE4baseEv = comdat any

$_ZNSt13move_iteratorIPxEC2ES0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev = comdat any

$_ZNSaIiEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2Ev = comdat any

$_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIiSaIiEED2Ev = comdat any

$_ZSt8_DestroyIPiEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim = comdat any

$_ZN9__gnu_cxx13new_allocatorIiED2Ev = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE14_M_fill_assignEmRKS1_ = comdat any

$_ZNKSt6vectorIS_IiSaIiEESaIS1_EE8capacityEv = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2EmRKS1_RKS2_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_impl12_M_swap_dataERS5_ = comdat any

$_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv = comdat any

$_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES2_IS4_SaIS4_EEEES4_EvT_S9_RKT0_ = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE5beginEv = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE3endEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPSt6vectorIiSaIiEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE15_M_erase_at_endEPS1_ = comdat any

$_ZSt6fill_nIPSt6vectorIiSaIiEEmS2_ET_S4_T0_RKT1_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2EmRKS3_ = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE18_M_fill_initializeEmRKS1_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE17_M_create_storageEm = comdat any

$_ZNSaISt6vectorIiSaIiEEEC2ERKS2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2ERKS4_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8max_sizeEv = comdat any

$_ZSt4swapIPSt6vectorIiSaIiEEEvRT_S5_ = comdat any

$_ZSt4moveIRPSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS6_ = comdat any

$_ZSt8__fill_aIPSt6vectorIiSaIiEES2_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S9_RKS6_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES2_IS4_SaIS4_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_ = comdat any

$_ZNSt6vectorIiSaIiEEaSERKS1_ = comdat any

$_ZNKSt6vectorIiSaIiEE4sizeEv = comdat any

$_ZNKSt6vectorIiSaIiEE8capacityEv = comdat any

$_ZNSt6vectorIiSaIiEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKiS1_EEEEPimT_S9_ = comdat any

$_ZNKSt6vectorIiSaIiEE5beginEv = comdat any

$_ZNKSt6vectorIiSaIiEE3endEv = comdat any

$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RSaIT0_E = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET0_T_SB_SA_ = comdat any

$_ZNSt6vectorIiSaIiEE5beginEv = comdat any

$_ZNSt6vectorIiSaIiEE3endEv = comdat any

$_ZSt4copyIPiS0_ET0_T_S2_S1_ = comdat any

$_ZSt22__uninitialized_copy_aIPiS0_iET0_T_S2_S1_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E = comdat any

$_ZNSt16allocator_traitsISaIiEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_ = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES9_ = comdat any

$_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES9_ = comdat any

$_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEELb1EE7_S_baseES7_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv = comdat any

$_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEELb0EE7_S_baseES7_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_ = comdat any

$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEEvT_S9_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET1_T0_SB_SA_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb1EE7_S_baseES6_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv = comdat any

$_ZSt14__copy_move_a2ILb0EPiS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseIPiENSt11_Miter_baseIT_E13iterator_typeES2_ = comdat any

$_ZSt13__copy_move_aILb0EPiS0_ET1_T0_S2_S1_ = comdat any

$_ZSt18uninitialized_copyIPiS0_ET0_T_S2_S1_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPiS2_EET0_T_S4_S3_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES2_IS4_SaIS4_EEEELb1EE7_S_baseES8_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEC2ERKS4_ = comdat any

$_ZSt20uninitialized_fill_nIPSt6vectorIiSaIiEEmS2_ET_S4_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIiSaIiEEmS4_EET_S6_T0_RKT1_ = comdat any

$_ZSt10_ConstructISt6vectorIiSaIiEEJRKS2_EEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKSt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS5_E4typeE = comdat any

$_ZNSt6vectorIiSaIiEEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_ = comdat any

$_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_ = comdat any

$_ZNSaIiED2Ev = comdat any

$_ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_ = comdat any

$_ZNSaIiEC2ERKS_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm = comdat any

$_ZSt10__fill_n_aIPSt6vectorIiSaIiEEmS2_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES7_T0_RKS6_ = comdat any

$_ZSt12__niter_baseIPSt6vectorIiSaIiEEENSt11_Niter_baseIT_E13iterator_typeES5_ = comdat any

$_ZNSt10_Iter_baseIPSt6vectorIiSaIiEELb0EE7_S_baseES3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEC2Ev = comdat any

$_ZSt16__deque_buf_sizem = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm = comdat any

$_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim = comdat any

$_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_ = comdat any

$_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m = comdat any

$_ZNSaIPiED2Ev = comdat any

$_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSaIPiEC2IiEERKSaIT_E = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiED2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi = comdat any

$_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m = comdat any

$_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv = comdat any

$_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_ = comdat any

$_ZNSt5dequeIiSaIiEE5beginEv = comdat any

$_ZNSt5dequeIiSaIiEE3endEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEED2Ev = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_ = comdat any

$_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt5dequeIiSaIiEEC2EOS1_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2EOS1_ = comdat any

$_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE = comdat any

$_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_ = comdat any

$_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_ = comdat any

$_ZSt4swapIPPiEvRT_S3_ = comdat any

$_ZSt4swapImEvRT_S1_ = comdat any

$_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_ = comdat any

$_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EE14_M_fill_assignEmRKS4_ = comdat any

$_ZNKSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EE8capacityEv = comdat any

$_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EEC2EmRKS4_RKS5_ = comdat any

$_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE12_Vector_impl12_M_swap_dataERS7_ = comdat any

$_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPSt5stackIiSt5dequeIiSaIiEEESt6vectorIS6_SaIS6_EEEES6_EvT_SC_RKT0_ = comdat any

$_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EE5beginEv = comdat any

$_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EE3endEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPSt5stackIiSt5dequeIiSaIiEEEmS4_S4_ET_S6_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EE15_M_erase_at_endEPS4_ = comdat any

$_ZSt6fill_nIPSt5stackIiSt5dequeIiSaIiEEEmS4_ET_S6_T0_RKT1_ = comdat any

$_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EEC2EmRKS5_ = comdat any

$_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EE18_M_fill_initializeEmRKS4_ = comdat any

$_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE12_Vector_implC2ERKS5_ = comdat any

$_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE17_M_create_storageEm = comdat any

$_ZNSaISt5stackIiSt5dequeIiSaIiEEEEC2ERKS4_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5stackIiSt5dequeIiSaIiEEEEC2ERKS6_ = comdat any

$_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt5stackIiSt5dequeIiSaIiEEEEE8allocateERS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5stackIiSt5dequeIiSaIiEEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt5stackIiSt5dequeIiSaIiEEEE8max_sizeEv = comdat any

$_ZSt4swapIPSt5stackIiSt5dequeIiSaIiEEEEvRT_S7_ = comdat any

$_ZSt4moveIRPSt5stackIiSt5dequeIiSaIiEEEEONSt16remove_referenceIT_E4typeEOS8_ = comdat any

$_ZSt8__fill_aIPSt5stackIiSt5dequeIiSaIiEEES4_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SB_RKS8_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt5stackIiSt5dequeIiSaIiEEESt6vectorIS6_SaIS6_EEEEENSt11_Niter_baseIT_E13iterator_typeESD_ = comdat any

$_ZNSt5stackIiSt5dequeIiSaIiEEEaSERKS3_ = comdat any

$_ZNSt5dequeIiSaIiEEaSERKS1_ = comdat any

$_ZNKSt5dequeIiSaIiEE4sizeEv = comdat any

$_ZNSt5dequeIiSaIiEE15_M_erase_at_endESt15_Deque_iteratorIiRiPiE = comdat any

$_ZSt4copyIiESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_ = comdat any

$_ZNKSt5dequeIiSaIiEE5beginEv = comdat any

$_ZNKSt5dequeIiSaIiEE3endEv = comdat any

$_ZNKSt15_Deque_iteratorIiRKiPS0_EplEl = comdat any

$_ZNSt5dequeIiSaIiEE6insertISt15_Deque_iteratorIiRKiPS4_EvEES3_IiRiPiES7_T_SB_ = comdat any

$_ZNSt15_Deque_iteratorIiRKiPS0_EC2ERKS_IiRiPiE = comdat any

$_ZStmiIiRiPiENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS6_S9_ = comdat any

$_ZStmiIiRKiPS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_ = comdat any

$_ZSt3minIlERKT_S2_S2_ = comdat any

$_ZNSt15_Deque_iteratorIiRKiPS0_EpLEl = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEpLEl = comdat any

$_ZNSt15_Deque_iteratorIiRKiPS0_E14_S_buffer_sizeEv = comdat any

$_ZNSt15_Deque_iteratorIiRKiPS0_E11_M_set_nodeEPPi = comdat any

$_ZNKSt5dequeIiSaIiEE6cbeginEv = comdat any

$_ZNSt5dequeIiSaIiEE18_M_insert_dispatchISt15_Deque_iteratorIiRKiPS4_EEEvS3_IiRiPiET_SB_St12__false_type = comdat any

$_ZNKSt15_Deque_iteratorIiRKiPS0_E13_M_const_castEv = comdat any

$_ZNKSt15_Deque_iteratorIiRiPiEplEl = comdat any

$_ZNSt5dequeIiSaIiEE19_M_range_insert_auxISt15_Deque_iteratorIiRKiPS4_EEEvS3_IiRiPiET_SB_St20forward_iterator_tag = comdat any

$_ZSt8distanceISt15_Deque_iteratorIiRKiPS1_EENSt15iterator_traitsIT_E15difference_typeES6_S6_ = comdat any

$_ZNSt5dequeIiSaIiEE28_M_reserve_elements_at_frontEm = comdat any

$_ZSt22__uninitialized_copy_aISt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEiET0_T_S9_S8_RSaIT1_E = comdat any

$_ZNSt5dequeIiSaIiEE27_M_reserve_elements_at_backEm = comdat any

$_ZNSt5dequeIiSaIiEE13_M_insert_auxISt15_Deque_iteratorIiRKiPS4_EEEvS3_IiRiPiET_SB_m = comdat any

$_ZSt10__distanceISt15_Deque_iteratorIiRKiPS1_EENSt15iterator_traitsIT_E15difference_typeES6_S6_St26random_access_iterator_tag = comdat any

$_ZSt19__iterator_categoryISt15_Deque_iteratorIiRKiPS1_EENSt15iterator_traitsIT_E17iterator_categoryERKS6_ = comdat any

$_ZNSt5dequeIiSaIiEE24_M_new_elements_at_frontEm = comdat any

$_ZNKSt15_Deque_iteratorIiRiPiEmiEl = comdat any

$_ZNKSt5dequeIiSaIiEE8max_sizeEv = comdat any

$_ZNSt5dequeIiSaIiEE14_S_buffer_sizeEv = comdat any

$_ZNSt5dequeIiSaIiEE23_M_reserve_map_at_frontEm = comdat any

$_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_ = comdat any

$_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb = comdat any

$_ZSt4copyIPPiS1_ET0_T_S3_S2_ = comdat any

$_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_ = comdat any

$_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_ = comdat any

$_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_ = comdat any

$_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_ = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEmIEl = comdat any

$_ZSt18uninitialized_copyISt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEET0_T_S9_S8_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt15_Deque_iteratorIiRKiPS3_ES2_IiRiPiEEET0_T_SB_SA_ = comdat any

$_ZSt4copyISt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEET0_T_S9_S8_ = comdat any

$_ZSt14__copy_move_a2ILb0ESt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEET1_T0_S9_S8_ = comdat any

$_ZSt12__miter_baseISt15_Deque_iteratorIiRKiPS1_EENSt11_Miter_baseIT_E13iterator_typeES6_ = comdat any

$_ZSt13__copy_move_aILb0ESt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEET1_T0_S9_S8_ = comdat any

$_ZSt12__niter_baseISt15_Deque_iteratorIiRKiPS1_EENSt11_Niter_baseIT_E13iterator_typeES6_ = comdat any

$_ZSt12__niter_baseISt15_Deque_iteratorIiRiPiEENSt11_Niter_baseIT_E13iterator_typeES5_ = comdat any

$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt15_Deque_iteratorIiRKiPS4_ES3_IiRiPiEEET0_T_SC_SB_ = comdat any

$_ZNKSt15_Deque_iteratorIiRKiPS0_EdeEv = comdat any

$_ZNKSt15_Deque_iteratorIiRiPiEdeEv = comdat any

$_ZNSt15_Deque_iteratorIiRKiPS0_EppEv = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEppEv = comdat any

$_ZNSt10_Iter_baseISt15_Deque_iteratorIiRKiPS1_ELb0EE7_S_baseES4_ = comdat any

$_ZNSt10_Iter_baseISt15_Deque_iteratorIiRiPiELb0EE7_S_baseES3_ = comdat any

$_ZNSt5dequeIiSaIiEE23_M_new_elements_at_backEm = comdat any

$_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm = comdat any

$_ZSt22__uninitialized_move_aISt15_Deque_iteratorIiRiPiES3_SaIiEET0_T_S6_S5_RT1_ = comdat any

$_ZSt4moveIiESt15_Deque_iteratorIT_RS1_PS1_ES4_S4_S4_ = comdat any

$_ZSt7advanceISt15_Deque_iteratorIiRKiPS1_ElEvRT_T0_ = comdat any

$_ZSt25__uninitialized_move_copyISt15_Deque_iteratorIiRiPiES0_IiRKiPS4_ES3_SaIiEET1_T_SA_T0_SB_S9_RT2_ = comdat any

$_ZSt13move_backwardIiESt15_Deque_iteratorIT_RS1_PS1_ES4_S4_S4_ = comdat any

$_ZSt25__uninitialized_copy_moveISt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiES7_SaIiEET1_T_SA_T0_SB_S9_RT2_ = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorISt15_Deque_iteratorIiRiPiEES4_iET0_T_S7_S6_RSaIT1_E = comdat any

$_ZSt18make_move_iteratorISt15_Deque_iteratorIiRiPiEESt13move_iteratorIT_ES5_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorISt15_Deque_iteratorIiRiPiEES4_ET0_T_S7_S6_ = comdat any

$_ZNSt13move_iteratorISt15_Deque_iteratorIiRiPiEEC2ERKS4_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorISt15_Deque_iteratorIiRiPiEES6_EET0_T_S9_S8_ = comdat any

$_ZSt4copyISt13move_iteratorISt15_Deque_iteratorIiRiPiEES4_ET0_T_S7_S6_ = comdat any

$_ZSt14__copy_move_a2ILb1ESt15_Deque_iteratorIiRiPiES3_ET1_T0_S5_S4_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorISt15_Deque_iteratorIiRiPiEEENSt11_Miter_baseIT_E13iterator_typeES7_ = comdat any

$_ZSt13__copy_move_aILb1ESt15_Deque_iteratorIiRiPiES3_ET1_T0_S5_S4_ = comdat any

$_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mISt15_Deque_iteratorIiRiPiES6_EET0_T_S8_S7_ = comdat any

$_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorISt15_Deque_iteratorIiRiPiEELb1EE7_S_baseES5_ = comdat any

$_ZNKSt13move_iteratorISt15_Deque_iteratorIiRiPiEE4baseEv = comdat any

$_ZNSt13move_iteratorISt15_Deque_iteratorIiRiPiEEC2ES3_ = comdat any

$_ZSt4moveIiESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_ = comdat any

$_ZSt4moveIPiS0_ET0_T_S2_S1_ = comdat any

$_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_ = comdat any

$_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_ = comdat any

$_ZSt9__advanceISt15_Deque_iteratorIiRKiPS1_ElEvRT_T0_St26random_access_iterator_tag = comdat any

$_ZSt8_DestroyISt15_Deque_iteratorIiRiPiEiEvT_S4_RSaIT0_E = comdat any

$_ZSt8_DestroyISt15_Deque_iteratorIiRiPiEEvT_S4_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyISt15_Deque_iteratorIiRiPiEEEvT_S6_ = comdat any

$_ZSt13move_backwardIiESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_ = comdat any

$_ZSt13move_backwardIPiS0_ET0_T_S2_S1_ = comdat any

$_ZNSt15_Deque_iteratorIiRKiPS0_EmIEl = comdat any

$_ZSt23__copy_move_backward_a2ILb1EPiS0_ET1_T0_S2_S1_ = comdat any

$_ZSt22__copy_move_backward_aILb1EPiS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIiEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEC2ES1_PS1_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt5stackIiSt5dequeIiSaIiEEESt6vectorIS6_SaIS6_EEEELb1EE7_S_baseESB_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt5stackIiSt5dequeIiSaIiEEESt6vectorIS5_SaIS5_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt5stackIiSt5dequeIiSaIiEEESt6vectorIS5_SaIS5_EEEC2ERKS6_ = comdat any

$_ZSt20uninitialized_fill_nIPSt5stackIiSt5dequeIiSaIiEEEmS4_ET_S6_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt5stackIiSt5dequeIiSaIiEEEmS6_EET_S8_T0_RKT1_ = comdat any

$_ZSt10_ConstructISt5stackIiSt5dequeIiSaIiEEEJRKS4_EEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKSt5stackIiSt5dequeIiSaIiEEEEOT_RNSt16remove_referenceIS7_E4typeE = comdat any

$_ZNSt5stackIiSt5dequeIiSaIiEEEC2ERKS3_ = comdat any

$_ZNSt5dequeIiSaIiEEC2ERKS1_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2ERKS0_m = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2ERKS0_ = comdat any

$_ZSt10__fill_n_aIPSt5stackIiSt5dequeIiSaIiEEEmS4_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES9_T0_RKS8_ = comdat any

$_ZSt12__niter_baseIPSt5stackIiSt5dequeIiSaIiEEEENSt11_Niter_baseIT_E13iterator_typeES7_ = comdat any

$_ZNSt10_Iter_baseIPSt5stackIiSt5dequeIiSaIiEEELb0EE7_S_baseES5_ = comdat any

$_ZNSt6vectorIxSaIxEE12emplace_backIJxEEEvDpOT_ = comdat any

$_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNSt16allocator_traitsISaIxEE9constructIxJxEEEvRS0_PT_DpOT0_ = comdat any

$_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZNSt6vectorIxSaIxEE19_M_emplace_back_auxIJxEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE9constructIxJxEEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPxS0_SaIxEET0_T_S3_S2_RT1_ = comdat any

$_ZNSt16allocator_traitsISaIxEE7destroyIxEEvRS0_PT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE7destroyIxEEvPT_ = comdat any

$_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_ = comdat any

$_ZNSt16allocator_traitsISaIiEE9constructIiJiEEEvRS0_PT_DpOT0_ = comdat any

$_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJiEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE9constructIiJiEEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_ = comdat any

$_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_ = comdat any

$_ZNKSt6vectorIiSaIiEE8max_sizeEv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_ = comdat any

$_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_ = comdat any

$_ZNKSt13move_iteratorIPiE4baseEv = comdat any

$_ZNSt13move_iteratorIPiEC2ES0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_ = comdat any

$_ZNKSt5dequeIiSaIiEE5emptyEv = comdat any

$_ZSteqIiRiPiEbRKSt15_Deque_iteratorIT_T0_T1_ES8_ = comdat any

$_ZNSt5dequeIiSaIiEE4backEv = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEmmEv = comdat any

$_ZNSt5dequeIiSaIiEE8pop_backEv = comdat any

$_ZNSt5dequeIiSaIiEE15_M_pop_back_auxEv = comdat any

$_ZNSt5dequeIiSaIiEE9push_backERKi = comdat any

$_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_ = comdat any

$_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

@buf = global [2000000000 x i8] zeroinitializer, align 16
@H = global i8* null, align 8
@T = global i8* null, align 8
@.str = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@stdin = external global %struct._IO_FILE*, align 8
@.str.1 = private unnamed_addr constant [16 x i8] c"vector::reserve\00", align 1
@.str.2 = private unnamed_addr constant [32 x i8] c"deque::_M_new_elements_at_front\00", align 1
@.str.3 = private unnamed_addr constant [31 x i8] c"deque::_M_new_elements_at_back\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"vector::_M_emplace_back_aux\00", align 1
@x = common global i32 0
@y = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0
@x.159 = common global i32 0
@y.160 = common global i32 0
@x.161 = common global i32 0
@y.162 = common global i32 0
@x.163 = common global i32 0
@y.164 = common global i32 0
@x.165 = common global i32 0
@y.166 = common global i32 0
@x.167 = common global i32 0
@y.168 = common global i32 0
@x.169 = common global i32 0
@y.170 = common global i32 0
@x.171 = common global i32 0
@y.172 = common global i32 0
@x.173 = common global i32 0
@y.174 = common global i32 0
@x.175 = common global i32 0
@y.176 = common global i32 0
@x.177 = common global i32 0
@y.178 = common global i32 0
@x.179 = common global i32 0
@y.180 = common global i32 0
@x.181 = common global i32 0
@y.182 = common global i32 0
@x.183 = common global i32 0
@y.184 = common global i32 0
@x.185 = common global i32 0
@y.186 = common global i32 0
@x.187 = common global i32 0
@y.188 = common global i32 0
@x.189 = common global i32 0
@y.190 = common global i32 0
@x.191 = common global i32 0
@y.192 = common global i32 0
@x.193 = common global i32 0
@y.194 = common global i32 0
@x.195 = common global i32 0
@y.196 = common global i32 0
@x.197 = common global i32 0
@y.198 = common global i32 0
@x.199 = common global i32 0
@y.200 = common global i32 0
@x.201 = common global i32 0
@y.202 = common global i32 0
@x.203 = common global i32 0
@y.204 = common global i32 0
@x.205 = common global i32 0
@y.206 = common global i32 0
@x.207 = common global i32 0
@y.208 = common global i32 0
@x.209 = common global i32 0
@y.210 = common global i32 0
@x.211 = common global i32 0
@y.212 = common global i32 0
@x.213 = common global i32 0
@y.214 = common global i32 0
@x.215 = common global i32 0
@y.216 = common global i32 0
@x.217 = common global i32 0
@y.218 = common global i32 0
@x.219 = common global i32 0
@y.220 = common global i32 0
@x.221 = common global i32 0
@y.222 = common global i32 0
@x.223 = common global i32 0
@y.224 = common global i32 0
@x.225 = common global i32 0
@y.226 = common global i32 0
@x.227 = common global i32 0
@y.228 = common global i32 0
@x.229 = common global i32 0
@y.230 = common global i32 0
@x.231 = common global i32 0
@y.232 = common global i32 0
@x.233 = common global i32 0
@y.234 = common global i32 0
@x.235 = common global i32 0
@y.236 = common global i32 0
@x.237 = common global i32 0
@y.238 = common global i32 0
@x.239 = common global i32 0
@y.240 = common global i32 0
@x.241 = common global i32 0
@y.242 = common global i32 0
@x.243 = common global i32 0
@y.244 = common global i32 0
@x.245 = common global i32 0
@y.246 = common global i32 0
@x.247 = common global i32 0
@y.248 = common global i32 0
@x.249 = common global i32 0
@y.250 = common global i32 0
@x.251 = common global i32 0
@y.252 = common global i32 0
@x.253 = common global i32 0
@y.254 = common global i32 0
@x.255 = common global i32 0
@y.256 = common global i32 0
@x.257 = common global i32 0
@y.258 = common global i32 0
@x.259 = common global i32 0
@y.260 = common global i32 0
@x.261 = common global i32 0
@y.262 = common global i32 0
@x.263 = common global i32 0
@y.264 = common global i32 0
@x.265 = common global i32 0
@y.266 = common global i32 0
@x.267 = common global i32 0
@y.268 = common global i32 0
@x.269 = common global i32 0
@y.270 = common global i32 0
@x.271 = common global i32 0
@y.272 = common global i32 0
@x.273 = common global i32 0
@y.274 = common global i32 0
@x.275 = common global i32 0
@y.276 = common global i32 0
@x.277 = common global i32 0
@y.278 = common global i32 0
@x.279 = common global i32 0
@y.280 = common global i32 0
@x.281 = common global i32 0
@y.282 = common global i32 0
@x.283 = common global i32 0
@y.284 = common global i32 0
@x.285 = common global i32 0
@y.286 = common global i32 0
@x.287 = common global i32 0
@y.288 = common global i32 0
@x.289 = common global i32 0
@y.290 = common global i32 0
@x.291 = common global i32 0
@y.292 = common global i32 0
@x.293 = common global i32 0
@y.294 = common global i32 0
@x.295 = common global i32 0
@y.296 = common global i32 0
@x.297 = common global i32 0
@y.298 = common global i32 0
@x.299 = common global i32 0
@y.300 = common global i32 0
@x.301 = common global i32 0
@y.302 = common global i32 0
@x.303 = common global i32 0
@y.304 = common global i32 0
@x.305 = common global i32 0
@y.306 = common global i32 0
@x.307 = common global i32 0
@y.308 = common global i32 0
@x.309 = common global i32 0
@y.310 = common global i32 0
@x.311 = common global i32 0
@y.312 = common global i32 0
@x.313 = common global i32 0
@y.314 = common global i32 0
@x.315 = common global i32 0
@y.316 = common global i32 0
@x.317 = common global i32 0
@y.318 = common global i32 0
@x.319 = common global i32 0
@y.320 = common global i32 0
@x.321 = common global i32 0
@y.322 = common global i32 0
@x.323 = common global i32 0
@y.324 = common global i32 0
@x.325 = common global i32 0
@y.326 = common global i32 0
@x.327 = common global i32 0
@y.328 = common global i32 0
@x.329 = common global i32 0
@y.330 = common global i32 0
@x.331 = common global i32 0
@y.332 = common global i32 0
@x.333 = common global i32 0
@y.334 = common global i32 0
@x.335 = common global i32 0
@y.336 = common global i32 0
@x.337 = common global i32 0
@y.338 = common global i32 0
@x.339 = common global i32 0
@y.340 = common global i32 0
@x.341 = common global i32 0
@y.342 = common global i32 0
@x.343 = common global i32 0
@y.344 = common global i32 0
@x.345 = common global i32 0
@y.346 = common global i32 0
@x.347 = common global i32 0
@y.348 = common global i32 0
@x.349 = common global i32 0
@y.350 = common global i32 0
@x.351 = common global i32 0
@y.352 = common global i32 0
@x.353 = common global i32 0
@y.354 = common global i32 0
@x.355 = common global i32 0
@y.356 = common global i32 0
@x.357 = common global i32 0
@y.358 = common global i32 0
@x.359 = common global i32 0
@y.360 = common global i32 0
@x.361 = common global i32 0
@y.362 = common global i32 0
@x.363 = common global i32 0
@y.364 = common global i32 0
@x.365 = common global i32 0
@y.366 = common global i32 0
@x.367 = common global i32 0
@y.368 = common global i32 0
@x.369 = common global i32 0
@y.370 = common global i32 0
@x.371 = common global i32 0
@y.372 = common global i32 0
@x.373 = common global i32 0
@y.374 = common global i32 0
@x.375 = common global i32 0
@y.376 = common global i32 0
@x.377 = common global i32 0
@y.378 = common global i32 0
@x.379 = common global i32 0
@y.380 = common global i32 0
@x.381 = common global i32 0
@y.382 = common global i32 0
@x.383 = common global i32 0
@y.384 = common global i32 0
@x.385 = common global i32 0
@y.386 = common global i32 0
@x.387 = common global i32 0
@y.388 = common global i32 0
@x.389 = common global i32 0
@y.390 = common global i32 0
@x.391 = common global i32 0
@y.392 = common global i32 0
@x.393 = common global i32 0
@y.394 = common global i32 0
@x.395 = common global i32 0
@y.396 = common global i32 0
@x.397 = common global i32 0
@y.398 = common global i32 0
@x.399 = common global i32 0
@y.400 = common global i32 0
@x.401 = common global i32 0
@y.402 = common global i32 0
@x.403 = common global i32 0
@y.404 = common global i32 0
@x.405 = common global i32 0
@y.406 = common global i32 0
@x.407 = common global i32 0
@y.408 = common global i32 0
@x.409 = common global i32 0
@y.410 = common global i32 0
@x.411 = common global i32 0
@y.412 = common global i32 0
@x.413 = common global i32 0
@y.414 = common global i32 0
@x.415 = common global i32 0
@y.416 = common global i32 0
@x.417 = common global i32 0
@y.418 = common global i32 0
@x.419 = common global i32 0
@y.420 = common global i32 0
@x.421 = common global i32 0
@y.422 = common global i32 0
@x.423 = common global i32 0
@y.424 = common global i32 0
@x.425 = common global i32 0
@y.426 = common global i32 0
@x.427 = common global i32 0
@y.428 = common global i32 0
@x.429 = common global i32 0
@y.430 = common global i32 0
@x.431 = common global i32 0
@y.432 = common global i32 0
@x.433 = common global i32 0
@y.434 = common global i32 0
@x.435 = common global i32 0
@y.436 = common global i32 0
@x.437 = common global i32 0
@y.438 = common global i32 0
@x.439 = common global i32 0
@y.440 = common global i32 0
@x.441 = common global i32 0
@y.442 = common global i32 0
@x.443 = common global i32 0
@y.444 = common global i32 0
@x.445 = common global i32 0
@y.446 = common global i32 0
@x.447 = common global i32 0
@y.448 = common global i32 0
@x.449 = common global i32 0
@y.450 = common global i32 0
@x.451 = common global i32 0
@y.452 = common global i32 0
@x.453 = common global i32 0
@y.454 = common global i32 0
@x.455 = common global i32 0
@y.456 = common global i32 0
@x.457 = common global i32 0
@y.458 = common global i32 0
@x.459 = common global i32 0
@y.460 = common global i32 0
@x.461 = common global i32 0
@y.462 = common global i32 0
@x.463 = common global i32 0
@y.464 = common global i32 0
@x.465 = common global i32 0
@y.466 = common global i32 0
@x.467 = common global i32 0
@y.468 = common global i32 0
@x.469 = common global i32 0
@y.470 = common global i32 0
@x.471 = common global i32 0
@y.472 = common global i32 0
@x.473 = common global i32 0
@y.474 = common global i32 0
@x.475 = common global i32 0
@y.476 = common global i32 0
@x.477 = common global i32 0
@y.478 = common global i32 0
@x.479 = common global i32 0
@y.480 = common global i32 0
@x.481 = common global i32 0
@y.482 = common global i32 0
@x.483 = common global i32 0
@y.484 = common global i32 0
@x.485 = common global i32 0
@y.486 = common global i32 0
@x.487 = common global i32 0
@y.488 = common global i32 0
@x.489 = common global i32 0
@y.490 = common global i32 0
@x.491 = common global i32 0
@y.492 = common global i32 0
@x.493 = common global i32 0
@y.494 = common global i32 0
@x.495 = common global i32 0
@y.496 = common global i32 0
@x.497 = common global i32 0
@y.498 = common global i32 0
@x.499 = common global i32 0
@y.500 = common global i32 0
@x.501 = common global i32 0
@y.502 = common global i32 0
@x.503 = common global i32 0
@y.504 = common global i32 0
@x.505 = common global i32 0
@y.506 = common global i32 0
@x.507 = common global i32 0
@y.508 = common global i32 0
@x.509 = common global i32 0
@y.510 = common global i32 0
@x.511 = common global i32 0
@y.512 = common global i32 0
@x.513 = common global i32 0
@y.514 = common global i32 0
@x.515 = common global i32 0
@y.516 = common global i32 0
@x.517 = common global i32 0
@y.518 = common global i32 0
@x.519 = common global i32 0
@y.520 = common global i32 0
@x.521 = common global i32 0
@y.522 = common global i32 0
@x.523 = common global i32 0
@y.524 = common global i32 0
@x.525 = common global i32 0
@y.526 = common global i32 0
@x.527 = common global i32 0
@y.528 = common global i32 0
@x.529 = common global i32 0
@y.530 = common global i32 0
@x.531 = common global i32 0
@y.532 = common global i32 0
@x.533 = common global i32 0
@y.534 = common global i32 0
@x.535 = common global i32 0
@y.536 = common global i32 0
@x.537 = common global i32 0
@y.538 = common global i32 0
@x.539 = common global i32 0
@y.540 = common global i32 0
@x.541 = common global i32 0
@y.542 = common global i32 0
@x.543 = common global i32 0
@y.544 = common global i32 0
@x.545 = common global i32 0
@y.546 = common global i32 0
@x.547 = common global i32 0
@y.548 = common global i32 0
@x.549 = common global i32 0
@y.550 = common global i32 0
@x.551 = common global i32 0
@y.552 = common global i32 0
@x.553 = common global i32 0
@y.554 = common global i32 0
@x.555 = common global i32 0
@y.556 = common global i32 0
@x.557 = common global i32 0
@y.558 = common global i32 0
@x.559 = common global i32 0
@y.560 = common global i32 0
@x.561 = common global i32 0
@y.562 = common global i32 0
@x.563 = common global i32 0
@y.564 = common global i32 0
@x.565 = common global i32 0
@y.566 = common global i32 0
@x.567 = common global i32 0
@y.568 = common global i32 0
@x.569 = common global i32 0
@y.570 = common global i32 0
@x.571 = common global i32 0
@y.572 = common global i32 0
@x.573 = common global i32 0
@y.574 = common global i32 0
@x.575 = common global i32 0
@y.576 = common global i32 0
@x.577 = common global i32 0
@y.578 = common global i32 0
@x.579 = common global i32 0
@y.580 = common global i32 0
@x.581 = common global i32 0
@y.582 = common global i32 0
@x.583 = common global i32 0
@y.584 = common global i32 0
@x.585 = common global i32 0
@y.586 = common global i32 0
@x.587 = common global i32 0
@y.588 = common global i32 0
@x.589 = common global i32 0
@y.590 = common global i32 0
@x.591 = common global i32 0
@y.592 = common global i32 0
@x.593 = common global i32 0
@y.594 = common global i32 0
@x.595 = common global i32 0
@y.596 = common global i32 0
@x.597 = common global i32 0
@y.598 = common global i32 0
@x.599 = common global i32 0
@y.600 = common global i32 0
@x.601 = common global i32 0
@y.602 = common global i32 0
@x.603 = common global i32 0
@y.604 = common global i32 0
@x.605 = common global i32 0
@y.606 = common global i32 0
@x.607 = common global i32 0
@y.608 = common global i32 0
@x.609 = common global i32 0
@y.610 = common global i32 0
@x.611 = common global i32 0
@y.612 = common global i32 0
@x.613 = common global i32 0
@y.614 = common global i32 0
@x.615 = common global i32 0
@y.616 = common global i32 0
@x.617 = common global i32 0
@y.618 = common global i32 0
@x.619 = common global i32 0
@y.620 = common global i32 0
@x.621 = common global i32 0
@y.622 = common global i32 0
@x.623 = common global i32 0
@y.624 = common global i32 0
@x.625 = common global i32 0
@y.626 = common global i32 0
@x.627 = common global i32 0
@y.628 = common global i32 0
@x.629 = common global i32 0
@y.630 = common global i32 0
@x.631 = common global i32 0
@y.632 = common global i32 0
@x.633 = common global i32 0
@y.634 = common global i32 0
@x.635 = common global i32 0
@y.636 = common global i32 0
@x.637 = common global i32 0
@y.638 = common global i32 0
@x.639 = common global i32 0
@y.640 = common global i32 0
@x.641 = common global i32 0
@y.642 = common global i32 0
@x.643 = common global i32 0
@y.644 = common global i32 0
@x.645 = common global i32 0
@y.646 = common global i32 0
@x.647 = common global i32 0
@y.648 = common global i32 0
@x.649 = common global i32 0
@y.650 = common global i32 0
@x.651 = common global i32 0
@y.652 = common global i32 0
@x.653 = common global i32 0
@y.654 = common global i32 0
@x.655 = common global i32 0
@y.656 = common global i32 0
@x.657 = common global i32 0
@y.658 = common global i32 0
@x.659 = common global i32 0
@y.660 = common global i32 0
@x.661 = common global i32 0
@y.662 = common global i32 0
@x.663 = common global i32 0
@y.664 = common global i32 0
@x.665 = common global i32 0
@y.666 = common global i32 0
@x.667 = common global i32 0
@y.668 = common global i32 0
@x.669 = common global i32 0
@y.670 = common global i32 0
@x.671 = common global i32 0
@y.672 = common global i32 0
@x.673 = common global i32 0
@y.674 = common global i32 0
@x.675 = common global i32 0
@y.676 = common global i32 0
@x.677 = common global i32 0
@y.678 = common global i32 0
@x.679 = common global i32 0
@y.680 = common global i32 0
@x.681 = common global i32 0
@y.682 = common global i32 0
@x.683 = common global i32 0
@y.684 = common global i32 0
@x.685 = common global i32 0
@y.686 = common global i32 0
@x.687 = common global i32 0
@y.688 = common global i32 0
@x.689 = common global i32 0
@y.690 = common global i32 0
@x.691 = common global i32 0
@y.692 = common global i32 0
@x.693 = common global i32 0
@y.694 = common global i32 0
@x.695 = common global i32 0
@y.696 = common global i32 0
@x.697 = common global i32 0
@y.698 = common global i32 0
@x.699 = common global i32 0
@y.700 = common global i32 0
@x.701 = common global i32 0
@y.702 = common global i32 0
@x.703 = common global i32 0
@y.704 = common global i32 0
@x.705 = common global i32 0
@y.706 = common global i32 0
@x.707 = common global i32 0
@y.708 = common global i32 0
@x.709 = common global i32 0
@y.710 = common global i32 0
@x.711 = common global i32 0
@y.712 = common global i32 0
@x.713 = common global i32 0
@y.714 = common global i32 0
@x.715 = common global i32 0
@y.716 = common global i32 0
@x.717 = common global i32 0
@y.718 = common global i32 0
@x.719 = common global i32 0
@y.720 = common global i32 0
@x.721 = common global i32 0
@y.722 = common global i32 0
@x.723 = common global i32 0
@y.724 = common global i32 0
@x.725 = common global i32 0
@y.726 = common global i32 0
@x.727 = common global i32 0
@y.728 = common global i32 0
@x.729 = common global i32 0
@y.730 = common global i32 0
@x.731 = common global i32 0
@y.732 = common global i32 0
@x.733 = common global i32 0
@y.734 = common global i32 0
@x.735 = common global i32 0
@y.736 = common global i32 0
@x.737 = common global i32 0
@y.738 = common global i32 0
@x.739 = common global i32 0
@y.740 = common global i32 0
@x.741 = common global i32 0
@y.742 = common global i32 0
@x.743 = common global i32 0
@y.744 = common global i32 0
@x.745 = common global i32 0
@y.746 = common global i32 0
@x.747 = common global i32 0
@y.748 = common global i32 0
@x.749 = common global i32 0
@y.750 = common global i32 0
@x.751 = common global i32 0
@y.752 = common global i32 0
@x.753 = common global i32 0
@y.754 = common global i32 0
@x.755 = common global i32 0
@y.756 = common global i32 0
@x.757 = common global i32 0
@y.758 = common global i32 0
@x.759 = common global i32 0
@y.760 = common global i32 0
@x.761 = common global i32 0
@y.762 = common global i32 0
@x.763 = common global i32 0
@y.764 = common global i32 0
@x.765 = common global i32 0
@y.766 = common global i32 0
@x.767 = common global i32 0
@y.768 = common global i32 0
@x.769 = common global i32 0
@y.770 = common global i32 0
@x.771 = common global i32 0
@y.772 = common global i32 0
@x.773 = common global i32 0
@y.774 = common global i32 0
@x.775 = common global i32 0
@y.776 = common global i32 0
@x.777 = common global i32 0
@y.778 = common global i32 0
@x.779 = common global i32 0
@y.780 = common global i32 0
@x.781 = common global i32 0
@y.782 = common global i32 0
@x.783 = common global i32 0
@y.784 = common global i32 0
@x.785 = common global i32 0
@y.786 = common global i32 0
@x.787 = common global i32 0
@y.788 = common global i32 0
@x.789 = common global i32 0
@y.790 = common global i32 0
@x.791 = common global i32 0
@y.792 = common global i32 0
@x.793 = common global i32 0
@y.794 = common global i32 0
@x.795 = common global i32 0
@y.796 = common global i32 0
@x.797 = common global i32 0
@y.798 = common global i32 0
@x.799 = common global i32 0
@y.800 = common global i32 0
@x.801 = common global i32 0
@y.802 = common global i32 0
@x.803 = common global i32 0
@y.804 = common global i32 0
@x.805 = common global i32 0
@y.806 = common global i32 0
@x.807 = common global i32 0
@y.808 = common global i32 0
@x.809 = common global i32 0
@y.810 = common global i32 0
@x.811 = common global i32 0
@y.812 = common global i32 0
@x.813 = common global i32 0
@y.814 = common global i32 0
@x.815 = common global i32 0
@y.816 = common global i32 0
@x.817 = common global i32 0
@y.818 = common global i32 0
@x.819 = common global i32 0
@y.820 = common global i32 0
@x.821 = common global i32 0
@y.822 = common global i32 0
@x.823 = common global i32 0
@y.824 = common global i32 0
@x.825 = common global i32 0
@y.826 = common global i32 0
@x.827 = common global i32 0
@y.828 = common global i32 0
@x.829 = common global i32 0
@y.830 = common global i32 0
@x.831 = common global i32 0
@y.832 = common global i32 0
@x.833 = common global i32 0
@y.834 = common global i32 0
@x.835 = common global i32 0
@y.836 = common global i32 0
@x.837 = common global i32 0
@y.838 = common global i32 0
@x.839 = common global i32 0
@y.840 = common global i32 0
@x.841 = common global i32 0
@y.842 = common global i32 0
@x.843 = common global i32 0
@y.844 = common global i32 0
@x.845 = common global i32 0
@y.846 = common global i32 0
@x.847 = common global i32 0
@y.848 = common global i32 0
@x.849 = common global i32 0
@y.850 = common global i32 0
@x.851 = common global i32 0
@y.852 = common global i32 0
@x.853 = common global i32 0
@y.854 = common global i32 0
@x.855 = common global i32 0
@y.856 = common global i32 0
@x.857 = common global i32 0
@y.858 = common global i32 0
@x.859 = common global i32 0
@y.860 = common global i32 0
@x.861 = common global i32 0
@y.862 = common global i32 0
@x.863 = common global i32 0
@y.864 = common global i32 0
@x.865 = common global i32 0
@y.866 = common global i32 0

; Function Attrs: noinline norecurse uwtable
define i32 @main() #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = load i32, i32* @x
  %2 = load i32, i32* @y
  %3 = add i32 %1, 1013751256
  %4 = sub i32 %3, 1
  %5 = sub i32 %4, 1013751256
  %6 = sub i32 %1, 1
  %7 = mul i32 %1, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %2, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 false, true
  %14 = and i1 %11, false
  %15 = and i1 %9, %13
  %16 = and i1 %12, false
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 false, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %973

; <label>:27:                                     ; preds = %0, %973
  %28 = alloca i32, align 4
  %29 = alloca i64, align 8
  %30 = alloca %"class.std::vector", align 8
  %31 = alloca %"class.std::vector.3", align 8
  %32 = alloca %"class.std::vector.8", align 8
  %33 = alloca i32, align 4
  %34 = alloca i8*
  %35 = alloca i32
  %36 = alloca i32, align 4
  %37 = alloca %"class.std::vector.13", align 8
  %38 = alloca %"class.std::stack", align 8
  %39 = alloca %"class.std::deque", align 8
  %40 = alloca i32, align 4
  %41 = alloca i64, align 8
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca i64, align 8
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  %49 = alloca i32, align 4
  %50 = alloca i32, align 4
  store i32 0, i32* %28, align 4
  store i64 -10000000000000, i64* %29, align 8
  call void @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EEC2Ev(%"class.std::vector"* %30) #11
  call void @_ZNSt6vectorIxSaIxEEC2Ev(%"class.std::vector.3"* %31) #11
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2Ev(%"class.std::vector.8"* %32) #11
  %51 = load i32, i32* @x
  %52 = load i32, i32* @y
  %53 = add i32 %51, -709324036
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, -709324036
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  br i1 %63, label %65, label %973

; <label>:65:                                     ; preds = %27
  %66 = invoke i32 @_Z4readv()
          to label %67 unwind label %223

; <label>:67:                                     ; preds = %65
  store i32 %66, i32* %33, align 4
  %68 = invoke i32 @_Z4readv()
          to label %69 unwind label %223

; <label>:69:                                     ; preds = %67
  store i32 %68, i32* %36, align 4
  %70 = load i32, i32* %33, align 4
  %71 = sub i32 0, 1
  %72 = add i32 %70, %71
  %73 = sub nsw i32 %70, 1
  %74 = sext i32 %72 to i64
  invoke void @_ZNSt6vectorIxSaIxEE7reserveEm(%"class.std::vector.3"* %31, i64 %74)
          to label %75 unwind label %223

; <label>:75:                                     ; preds = %69
  %76 = load i32, i32* @x
  %77 = load i32, i32* @y
  %78 = add i32 %76, -129925181
  %79 = sub i32 %78, 1
  %80 = sub i32 %79, -129925181
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = xor i1 %84, true
  %87 = xor i1 %85, true
  %88 = xor i1 true, true
  %89 = and i1 %86, true
  %90 = and i1 %84, %88
  %91 = and i1 %87, true
  %92 = and i1 %85, %88
  %93 = or i1 %89, %90
  %94 = or i1 %91, %92
  %95 = xor i1 %93, %94
  %96 = or i1 %86, %87
  %97 = xor i1 %96, true
  %98 = or i1 true, %88
  %99 = and i1 %97, %98
  %100 = or i1 %95, %99
  %101 = or i1 %84, %85
  br i1 %100, label %102, label %997

; <label>:102:                                    ; preds = %75, %997
  %103 = load i32, i32* %36, align 4
  %104 = sext i32 %103 to i64
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.13"* %37) #11
  %105 = load i32, i32* @x
  %106 = load i32, i32* @y
  %107 = sub i32 0, 1
  %108 = add i32 %105, %107
  %109 = sub i32 %105, 1
  %110 = mul i32 %105, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %106, 10
  %114 = xor i1 %112, true
  %115 = xor i1 %113, true
  %116 = xor i1 true, true
  %117 = and i1 %114, true
  %118 = and i1 %112, %116
  %119 = and i1 %115, true
  %120 = and i1 %113, %116
  %121 = or i1 %117, %118
  %122 = or i1 %119, %120
  %123 = xor i1 %121, %122
  %124 = or i1 %114, %115
  %125 = xor i1 %124, true
  %126 = or i1 true, %116
  %127 = and i1 %125, %126
  %128 = or i1 %123, %127
  %129 = or i1 %112, %113
  br i1 %128, label %130, label %997

; <label>:130:                                    ; preds = %102
  invoke void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE6assignEmRKS1_(%"class.std::vector.8"* %32, i64 %104, %"class.std::vector.13"* dereferenceable(24) %37)
          to label %131 unwind label %227

; <label>:131:                                    ; preds = %130
  %132 = load i32, i32* @x
  %133 = load i32, i32* @y
  %134 = sub i32 0, 1
  %135 = add i32 %132, %134
  %136 = sub i32 %132, 1
  %137 = mul i32 %132, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %133, 10
  %141 = and i1 %139, %140
  %142 = xor i1 %139, %140
  %143 = or i1 %141, %142
  %144 = or i1 %139, %140
  br i1 %143, label %145, label %1000

; <label>:145:                                    ; preds = %131, %1000
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.13"* %37) #11
  %146 = load i32, i32* %36, align 4
  %147 = sext i32 %146 to i64
  %148 = load i32, i32* @x
  %149 = load i32, i32* @y
  %150 = sub i32 %148, -954793347
  %151 = sub i32 %150, 1
  %152 = add i32 %151, -954793347
  %153 = sub i32 %148, 1
  %154 = mul i32 %148, %152
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %149, 10
  %158 = xor i1 %156, true
  %159 = xor i1 %157, true
  %160 = xor i1 false, true
  %161 = and i1 %158, false
  %162 = and i1 %156, %160
  %163 = and i1 %159, false
  %164 = and i1 %157, %160
  %165 = or i1 %161, %162
  %166 = or i1 %163, %164
  %167 = xor i1 %165, %166
  %168 = or i1 %158, %159
  %169 = xor i1 %168, true
  %170 = or i1 false, %160
  %171 = and i1 %169, %170
  %172 = or i1 %167, %171
  %173 = or i1 %156, %157
  br i1 %172, label %174, label %1000

; <label>:174:                                    ; preds = %145
  invoke void @_ZNSt5dequeIiSaIiEEC2Ev(%"class.std::deque"* %39)
          to label %175 unwind label %223

; <label>:175:                                    ; preds = %174
  invoke void @_ZNSt5stackIiSt5dequeIiSaIiEEEC2EOS2_(%"class.std::stack"* %38, %"class.std::deque"* dereferenceable(80) %39)
          to label %176 unwind label %231

; <label>:176:                                    ; preds = %175
  invoke void @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EE6assignEmRKS4_(%"class.std::vector"* %30, i64 %147, %"class.std::stack"* dereferenceable(80) %38)
          to label %177 unwind label %235

; <label>:177:                                    ; preds = %176
  call void @_ZNSt5stackIiSt5dequeIiSaIiEEED2Ev(%"class.std::stack"* %38) #11
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %39) #11
  store i32 1, i32* %40, align 4
  br label %178

; <label>:178:                                    ; preds = %217, %177
  %179 = load i32, i32* %40, align 4
  %180 = load i32, i32* %33, align 4
  %181 = icmp slt i32 %179, %180
  br i1 %181, label %182, label %240

; <label>:182:                                    ; preds = %178
  %183 = invoke i64 @_Z4relov()
          to label %184 unwind label %223

; <label>:184:                                    ; preds = %182
  %185 = load i32, i32* @x
  %186 = load i32, i32* @y
  %187 = sub i32 0, 1
  %188 = add i32 %185, %187
  %189 = sub i32 %185, 1
  %190 = mul i32 %185, %188
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %186, 10
  %194 = and i1 %192, %193
  %195 = xor i1 %192, %193
  %196 = or i1 %194, %195
  %197 = or i1 %192, %193
  br i1 %196, label %198, label %1003

; <label>:198:                                    ; preds = %184, %1003
  %199 = sub i64 0, %183
  %200 = add i64 0, %199
  %201 = sub nsw i64 0, %183
  store i64 %200, i64* %41, align 8
  %202 = load i32, i32* @x
  %203 = load i32, i32* @y
  %204 = sub i32 0, 1
  %205 = add i32 %202, %204
  %206 = sub i32 %202, 1
  %207 = mul i32 %202, %205
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %203, 10
  %211 = and i1 %209, %210
  %212 = xor i1 %209, %210
  %213 = or i1 %211, %212
  %214 = or i1 %209, %210
  br i1 %213, label %215, label %1003

; <label>:215:                                    ; preds = %198
  invoke void @_ZNSt6vectorIxSaIxEE9push_backEOx(%"class.std::vector.3"* %31, i64* dereferenceable(8) %41)
          to label %216 unwind label %223

; <label>:216:                                    ; preds = %215
  br label %217

; <label>:217:                                    ; preds = %216
  %218 = load i32, i32* %40, align 4
  %219 = add i32 %218, 327832196
  %220 = add i32 %219, 1
  %221 = sub i32 %220, 327832196
  %222 = add nsw i32 %218, 1
  store i32 %221, i32* %40, align 4
  br label %178

; <label>:223:                                    ; preds = %962, %863, %758, %706, %615, %606, %587, %585, %536, %521, %479, %296, %291, %215, %182, %174, %69, %67, %65
  %224 = landingpad { i8*, i32 }
          cleanup
  %225 = extractvalue { i8*, i32 } %224, 0
  store i8* %225, i8** %34, align 8
  %226 = extractvalue { i8*, i32 } %224, 1
  store i32 %226, i32* %35, align 4
  br label %967

; <label>:227:                                    ; preds = %130
  %228 = landingpad { i8*, i32 }
          cleanup
  %229 = extractvalue { i8*, i32 } %228, 0
  store i8* %229, i8** %34, align 8
  %230 = extractvalue { i8*, i32 } %228, 1
  store i32 %230, i32* %35, align 4
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.13"* %37) #11
  br label %967

; <label>:231:                                    ; preds = %175
  %232 = landingpad { i8*, i32 }
          cleanup
  %233 = extractvalue { i8*, i32 } %232, 0
  store i8* %233, i8** %34, align 8
  %234 = extractvalue { i8*, i32 } %232, 1
  store i32 %234, i32* %35, align 4
  br label %239

; <label>:235:                                    ; preds = %176
  %236 = landingpad { i8*, i32 }
          cleanup
  %237 = extractvalue { i8*, i32 } %236, 0
  store i8* %237, i8** %34, align 8
  %238 = extractvalue { i8*, i32 } %236, 1
  store i32 %238, i32* %35, align 4
  call void @_ZNSt5stackIiSt5dequeIiSaIiEEED2Ev(%"class.std::stack"* %38) #11
  br label %239

; <label>:239:                                    ; preds = %235, %231
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %39) #11
  br label %967

; <label>:240:                                    ; preds = %178
  store i32 0, i32* %42, align 4
  br label %241

; <label>:241:                                    ; preds = %358, %240
  %242 = load i32, i32* %42, align 4
  %243 = load i32, i32* %33, align 4
  %244 = icmp slt i32 %242, %243
  br i1 %244, label %245, label %363

; <label>:245:                                    ; preds = %241
  store i32 0, i32* %43, align 4
  br label %246

; <label>:246:                                    ; preds = %351, %245
  %247 = load i32, i32* @x
  %248 = load i32, i32* @y
  %249 = sub i32 0, 1
  %250 = add i32 %247, %249
  %251 = sub i32 %247, 1
  %252 = mul i32 %247, %250
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %248, 10
  %256 = and i1 %254, %255
  %257 = xor i1 %254, %255
  %258 = or i1 %256, %257
  %259 = or i1 %254, %255
  br i1 %258, label %260, label %1017

; <label>:260:                                    ; preds = %246, %1017
  %261 = load i32, i32* %43, align 4
  %262 = load i32, i32* %36, align 4
  %263 = icmp slt i32 %261, %262
  %264 = load i32, i32* @x
  %265 = load i32, i32* @y
  %266 = add i32 %264, 1296995825
  %267 = sub i32 %266, 1
  %268 = sub i32 %267, 1296995825
  %269 = sub i32 %264, 1
  %270 = mul i32 %264, %268
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %265, 10
  %274 = xor i1 %272, true
  %275 = xor i1 %273, true
  %276 = xor i1 true, true
  %277 = and i1 %274, true
  %278 = and i1 %272, %276
  %279 = and i1 %275, true
  %280 = and i1 %273, %276
  %281 = or i1 %277, %278
  %282 = or i1 %279, %280
  %283 = xor i1 %281, %282
  %284 = or i1 %274, %275
  %285 = xor i1 %284, true
  %286 = or i1 true, %276
  %287 = and i1 %285, %286
  %288 = or i1 %283, %287
  %289 = or i1 %272, %273
  br i1 %288, label %290, label %1017

; <label>:290:                                    ; preds = %260
  br i1 %263, label %291, label %357

; <label>:291:                                    ; preds = %290
  %292 = load i32, i32* %43, align 4
  %293 = sext i32 %292 to i64
  %294 = call dereferenceable(24) %"class.std::vector.13"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.8"* %32, i64 %293) #11
  %295 = invoke i32 @_Z4readv()
          to label %296 unwind label %223

; <label>:296:                                    ; preds = %291
  store i32 %295, i32* %44, align 4
  invoke void @_ZNSt6vectorIiSaIiEE9push_backEOi(%"class.std::vector.13"* %294, i32* dereferenceable(4) %44)
          to label %297 unwind label %223

; <label>:297:                                    ; preds = %296
  %298 = load i32, i32* @x
  %299 = load i32, i32* @y
  %300 = add i32 %298, 1266091612
  %301 = sub i32 %300, 1
  %302 = sub i32 %301, 1266091612
  %303 = sub i32 %298, 1
  %304 = mul i32 %298, %302
  %305 = urem i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %299, 10
  %308 = xor i1 %306, true
  %309 = xor i1 %307, true
  %310 = xor i1 true, true
  %311 = and i1 %308, true
  %312 = and i1 %306, %310
  %313 = and i1 %309, true
  %314 = and i1 %307, %310
  %315 = or i1 %311, %312
  %316 = or i1 %313, %314
  %317 = xor i1 %315, %316
  %318 = or i1 %308, %309
  %319 = xor i1 %318, true
  %320 = or i1 true, %310
  %321 = and i1 %319, %320
  %322 = or i1 %317, %321
  %323 = or i1 %306, %307
  br i1 %322, label %324, label %1021

; <label>:324:                                    ; preds = %297, %1021
  %325 = load i32, i32* @x
  %326 = load i32, i32* @y
  %327 = sub i32 0, 1
  %328 = add i32 %325, %327
  %329 = sub i32 %325, 1
  %330 = mul i32 %325, %328
  %331 = urem i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %326, 10
  %334 = xor i1 %332, true
  %335 = xor i1 %333, true
  %336 = xor i1 true, true
  %337 = and i1 %334, true
  %338 = and i1 %332, %336
  %339 = and i1 %335, true
  %340 = and i1 %333, %336
  %341 = or i1 %337, %338
  %342 = or i1 %339, %340
  %343 = xor i1 %341, %342
  %344 = or i1 %334, %335
  %345 = xor i1 %344, true
  %346 = or i1 true, %336
  %347 = and i1 %345, %346
  %348 = or i1 %343, %347
  %349 = or i1 %332, %333
  br i1 %348, label %350, label %1021

; <label>:350:                                    ; preds = %324
  br label %351

; <label>:351:                                    ; preds = %350
  %352 = load i32, i32* %43, align 4
  %353 = sub i32 %352, 1239945235
  %354 = add i32 %353, 1
  %355 = add i32 %354, 1239945235
  %356 = add nsw i32 %352, 1
  store i32 %355, i32* %43, align 4
  br label %246

; <label>:357:                                    ; preds = %290
  br label %358

; <label>:358:                                    ; preds = %357
  %359 = load i32, i32* %42, align 4
  %360 = sub i32 0, 1
  %361 = sub i32 %359, %360
  %362 = add nsw i32 %359, 1
  store i32 %361, i32* %42, align 4
  br label %241

; <label>:363:                                    ; preds = %241
  %364 = load i32, i32* %33, align 4
  %365 = sub i32 0, 1
  %366 = add i32 %364, %365
  %367 = sub nsw i32 %364, 1
  store i32 %366, i32* %45, align 4
  br label %368

; <label>:368:                                    ; preds = %957, %363
  %369 = load i32, i32* @x
  %370 = load i32, i32* @y
  %371 = add i32 %369, -147579253
  %372 = sub i32 %371, 1
  %373 = sub i32 %372, -147579253
  %374 = sub i32 %369, 1
  %375 = mul i32 %369, %373
  %376 = urem i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %370, 10
  %379 = xor i1 %377, true
  %380 = xor i1 %378, true
  %381 = xor i1 true, true
  %382 = and i1 %379, true
  %383 = and i1 %377, %381
  %384 = and i1 %380, true
  %385 = and i1 %378, %381
  %386 = or i1 %382, %383
  %387 = or i1 %384, %385
  %388 = xor i1 %386, %387
  %389 = or i1 %379, %380
  %390 = xor i1 %389, true
  %391 = or i1 true, %381
  %392 = and i1 %390, %391
  %393 = or i1 %388, %392
  %394 = or i1 %377, %378
  br i1 %393, label %395, label %1022

; <label>:395:                                    ; preds = %368, %1022
  %396 = load i32, i32* %45, align 4
  %397 = icmp sge i32 %396, 0
  %398 = load i32, i32* @x
  %399 = load i32, i32* @y
  %400 = sub i32 %398, -1096601879
  %401 = sub i32 %400, 1
  %402 = add i32 %401, -1096601879
  %403 = sub i32 %398, 1
  %404 = mul i32 %398, %402
  %405 = urem i32 %404, 2
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %399, 10
  %408 = xor i1 %406, true
  %409 = xor i1 %407, true
  %410 = xor i1 false, true
  %411 = and i1 %408, false
  %412 = and i1 %406, %410
  %413 = and i1 %409, false
  %414 = and i1 %407, %410
  %415 = or i1 %411, %412
  %416 = or i1 %413, %414
  %417 = xor i1 %415, %416
  %418 = or i1 %408, %409
  %419 = xor i1 %418, true
  %420 = or i1 false, %410
  %421 = and i1 %419, %420
  %422 = or i1 %417, %421
  %423 = or i1 %406, %407
  br i1 %422, label %424, label %1022

; <label>:424:                                    ; preds = %395
  br i1 %397, label %425, label %962

; <label>:425:                                    ; preds = %424
  %426 = load i32, i32* @x
  %427 = load i32, i32* @y
  %428 = sub i32 0, 1
  %429 = add i32 %426, %428
  %430 = sub i32 %426, 1
  %431 = mul i32 %426, %429
  %432 = urem i32 %431, 2
  %433 = icmp eq i32 %432, 0
  %434 = icmp slt i32 %427, 10
  %435 = and i1 %433, %434
  %436 = xor i1 %433, %434
  %437 = or i1 %435, %436
  %438 = or i1 %433, %434
  br i1 %437, label %439, label %1025

; <label>:439:                                    ; preds = %425, %1025
  store i64 0, i64* %46, align 8
  store i32 0, i32* %47, align 4
  %440 = load i32, i32* @x
  %441 = load i32, i32* @y
  %442 = sub i32 0, 1
  %443 = add i32 %440, %442
  %444 = sub i32 %440, 1
  %445 = mul i32 %440, %443
  %446 = urem i32 %445, 2
  %447 = icmp eq i32 %446, 0
  %448 = icmp slt i32 %441, 10
  %449 = xor i1 %447, true
  %450 = xor i1 %448, true
  %451 = xor i1 true, true
  %452 = and i1 %449, true
  %453 = and i1 %447, %451
  %454 = and i1 %450, true
  %455 = and i1 %448, %451
  %456 = or i1 %452, %453
  %457 = or i1 %454, %455
  %458 = xor i1 %456, %457
  %459 = or i1 %449, %450
  %460 = xor i1 %459, true
  %461 = or i1 true, %451
  %462 = and i1 %460, %461
  %463 = or i1 %458, %462
  %464 = or i1 %447, %448
  br i1 %463, label %465, label %1025

; <label>:465:                                    ; preds = %439
  br label %466

; <label>:466:                                    ; preds = %711, %465
  %467 = load i32, i32* %47, align 4
  %468 = sext i32 %467 to i64
  %469 = call i64 @_ZNKSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EE4sizeEv(%"class.std::vector"* %30) #11
  %470 = icmp ult i64 %468, %469
  br i1 %470, label %471, label %717

; <label>:471:                                    ; preds = %466
  %472 = load i32, i32* %47, align 4
  %473 = sext i32 %472 to i64
  %474 = call dereferenceable(24) %"class.std::vector.13"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.8"* %32, i64 %473) #11
  %475 = load i32, i32* %45, align 4
  %476 = sext i32 %475 to i64
  %477 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.13"* %474, i64 %476) #11
  %478 = load i32, i32* %477, align 4
  store i32 %478, i32* %48, align 4
  store i32 0, i32* %49, align 4
  br label %479

; <label>:479:                                    ; preds = %680, %471
  %480 = load i32, i32* %47, align 4
  %481 = sext i32 %480 to i64
  %482 = call dereferenceable(80) %"class.std::stack"* @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EEixEm(%"class.std::vector"* %30, i64 %481) #11
  %483 = invoke zeroext i1 @_ZNKSt5stackIiSt5dequeIiSaIiEEE5emptyEv(%"class.std::stack"* %482)
          to label %484 unwind label %223

; <label>:484:                                    ; preds = %479
  %485 = load i32, i32* @x
  %486 = load i32, i32* @y
  %487 = add i32 %485, 1529890877
  %488 = sub i32 %487, 1
  %489 = sub i32 %488, 1529890877
  %490 = sub i32 %485, 1
  %491 = mul i32 %485, %489
  %492 = urem i32 %491, 2
  %493 = icmp eq i32 %492, 0
  %494 = icmp slt i32 %486, 10
  %495 = and i1 %493, %494
  %496 = xor i1 %493, %494
  %497 = or i1 %495, %496
  %498 = or i1 %493, %494
  br i1 %497, label %499, label %1026

; <label>:499:                                    ; preds = %484, %1026
  %500 = xor i1 %483, true
  %501 = and i1 true, %500
  %502 = xor i1 true, true
  %503 = and i1 %483, %502
  %504 = or i1 %501, %503
  %505 = xor i1 %483, true
  %506 = load i32, i32* @x
  %507 = load i32, i32* @y
  %508 = sub i32 %506, -2077473450
  %509 = sub i32 %508, 1
  %510 = add i32 %509, -2077473450
  %511 = sub i32 %506, 1
  %512 = mul i32 %506, %510
  %513 = urem i32 %512, 2
  %514 = icmp eq i32 %513, 0
  %515 = icmp slt i32 %507, 10
  %516 = and i1 %514, %515
  %517 = xor i1 %514, %515
  %518 = or i1 %516, %517
  %519 = or i1 %514, %515
  br i1 %518, label %520, label %1026

; <label>:520:                                    ; preds = %499
  br i1 %504, label %521, label %681

; <label>:521:                                    ; preds = %520
  %522 = load i32, i32* %48, align 4
  %523 = load i32, i32* %47, align 4
  %524 = sext i32 %523 to i64
  %525 = call dereferenceable(24) %"class.std::vector.13"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.8"* %32, i64 %524) #11
  %526 = load i32, i32* %47, align 4
  %527 = sext i32 %526 to i64
  %528 = call dereferenceable(80) %"class.std::stack"* @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EEixEm(%"class.std::vector"* %30, i64 %527) #11
  %529 = invoke dereferenceable(4) i32* @_ZNSt5stackIiSt5dequeIiSaIiEEE3topEv(%"class.std::stack"* %528)
          to label %530 unwind label %223

; <label>:530:                                    ; preds = %521
  %531 = load i32, i32* %529, align 4
  %532 = sext i32 %531 to i64
  %533 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.13"* %525, i64 %532) #11
  %534 = load i32, i32* %533, align 4
  %535 = icmp sgt i32 %522, %534
  br i1 %535, label %536, label %615

; <label>:536:                                    ; preds = %530
  %537 = load i32, i32* %47, align 4
  %538 = sext i32 %537 to i64
  %539 = call dereferenceable(24) %"class.std::vector.13"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.8"* %32, i64 %538) #11
  %540 = load i32, i32* %47, align 4
  %541 = sext i32 %540 to i64
  %542 = call dereferenceable(80) %"class.std::stack"* @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EEixEm(%"class.std::vector"* %30, i64 %541) #11
  %543 = invoke dereferenceable(4) i32* @_ZNSt5stackIiSt5dequeIiSaIiEEE3topEv(%"class.std::stack"* %542)
          to label %544 unwind label %223

; <label>:544:                                    ; preds = %536
  %545 = load i32, i32* @x
  %546 = load i32, i32* @y
  %547 = add i32 %545, 1816244322
  %548 = sub i32 %547, 1
  %549 = sub i32 %548, 1816244322
  %550 = sub i32 %545, 1
  %551 = mul i32 %545, %549
  %552 = urem i32 %551, 2
  %553 = icmp eq i32 %552, 0
  %554 = icmp slt i32 %546, 10
  %555 = and i1 %553, %554
  %556 = xor i1 %553, %554
  %557 = or i1 %555, %556
  %558 = or i1 %553, %554
  br i1 %557, label %559, label %1063

; <label>:559:                                    ; preds = %544, %1063
  %560 = load i32, i32* %543, align 4
  %561 = sext i32 %560 to i64
  %562 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.13"* %539, i64 %561) #11
  %563 = load i32, i32* %562, align 4
  %564 = load i32, i32* %49, align 4
  %565 = sub i32 0, %564
  %566 = add i32 %563, %565
  %567 = sub nsw i32 %563, %564
  %568 = sext i32 %566 to i64
  %569 = load i32, i32* %47, align 4
  %570 = sext i32 %569 to i64
  %571 = call dereferenceable(80) %"class.std::stack"* @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EEixEm(%"class.std::vector"* %30, i64 %570) #11
  %572 = load i32, i32* @x
  %573 = load i32, i32* @y
  %574 = sub i32 0, 1
  %575 = add i32 %572, %574
  %576 = sub i32 %572, 1
  %577 = mul i32 %572, %575
  %578 = urem i32 %577, 2
  %579 = icmp eq i32 %578, 0
  %580 = icmp slt i32 %573, 10
  %581 = and i1 %579, %580
  %582 = xor i1 %579, %580
  %583 = or i1 %581, %582
  %584 = or i1 %579, %580
  br i1 %583, label %585, label %1063

; <label>:585:                                    ; preds = %559
  %586 = invoke dereferenceable(4) i32* @_ZNSt5stackIiSt5dequeIiSaIiEEE3topEv(%"class.std::stack"* %571)
          to label %587 unwind label %223

; <label>:587:                                    ; preds = %585
  %588 = load i32, i32* %586, align 4
  %589 = sub i32 0, 1
  %590 = add i32 %588, %589
  %591 = sub nsw i32 %588, 1
  %592 = sext i32 %590 to i64
  %593 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.3"* %31, i64 %592) #11
  %594 = load i64, i64* %593, align 8
  %595 = sub i64 %594, 2955509486209397081
  %596 = sub i64 %595, %568
  %597 = add i64 %596, 2955509486209397081
  %598 = sub nsw i64 %594, %568
  store i64 %597, i64* %593, align 8
  %599 = load i32, i32* %47, align 4
  %600 = sext i32 %599 to i64
  %601 = call dereferenceable(24) %"class.std::vector.13"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.8"* %32, i64 %600) #11
  %602 = load i32, i32* %47, align 4
  %603 = sext i32 %602 to i64
  %604 = call dereferenceable(80) %"class.std::stack"* @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EEixEm(%"class.std::vector"* %30, i64 %603) #11
  %605 = invoke dereferenceable(4) i32* @_ZNSt5stackIiSt5dequeIiSaIiEEE3topEv(%"class.std::stack"* %604)
          to label %606 unwind label %223

; <label>:606:                                    ; preds = %587
  %607 = load i32, i32* %605, align 4
  %608 = sext i32 %607 to i64
  %609 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.13"* %601, i64 %608) #11
  %610 = load i32, i32* %609, align 4
  store i32 %610, i32* %49, align 4
  %611 = load i32, i32* %47, align 4
  %612 = sext i32 %611 to i64
  %613 = call dereferenceable(80) %"class.std::stack"* @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EEixEm(%"class.std::vector"* %30, i64 %612) #11
  invoke void @_ZNSt5stackIiSt5dequeIiSaIiEEE3popEv(%"class.std::stack"* %613)
          to label %614 unwind label %223

; <label>:614:                                    ; preds = %606
  br label %639

; <label>:615:                                    ; preds = %530
  %616 = load i32, i32* %48, align 4
  %617 = load i32, i32* %49, align 4
  %618 = add i32 %616, -385749765
  %619 = sub i32 %618, %617
  %620 = sub i32 %619, -385749765
  %621 = sub nsw i32 %616, %617
  %622 = sext i32 %620 to i64
  %623 = load i32, i32* %47, align 4
  %624 = sext i32 %623 to i64
  %625 = call dereferenceable(80) %"class.std::stack"* @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EEixEm(%"class.std::vector"* %30, i64 %624) #11
  %626 = invoke dereferenceable(4) i32* @_ZNSt5stackIiSt5dequeIiSaIiEEE3topEv(%"class.std::stack"* %625)
          to label %627 unwind label %223

; <label>:627:                                    ; preds = %615
  %628 = load i32, i32* %626, align 4
  %629 = add i32 %628, -2100650812
  %630 = sub i32 %629, 1
  %631 = sub i32 %630, -2100650812
  %632 = sub nsw i32 %628, 1
  %633 = sext i32 %631 to i64
  %634 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.3"* %31, i64 %633) #11
  %635 = load i64, i64* %634, align 8
  %636 = sub i64 0, %622
  %637 = add i64 %635, %636
  %638 = sub nsw i64 %635, %622
  store i64 %637, i64* %634, align 8
  br label %681

; <label>:639:                                    ; preds = %614
  %640 = load i32, i32* @x
  %641 = load i32, i32* @y
  %642 = add i32 %640, 701865238
  %643 = sub i32 %642, 1
  %644 = sub i32 %643, 701865238
  %645 = sub i32 %640, 1
  %646 = mul i32 %640, %644
  %647 = urem i32 %646, 2
  %648 = icmp eq i32 %647, 0
  %649 = icmp slt i32 %641, 10
  %650 = and i1 %648, %649
  %651 = xor i1 %648, %649
  %652 = or i1 %650, %651
  %653 = or i1 %648, %649
  br i1 %652, label %654, label %1077

; <label>:654:                                    ; preds = %639, %1077
  %655 = load i32, i32* @x
  %656 = load i32, i32* @y
  %657 = sub i32 0, 1
  %658 = add i32 %655, %657
  %659 = sub i32 %655, 1
  %660 = mul i32 %655, %658
  %661 = urem i32 %660, 2
  %662 = icmp eq i32 %661, 0
  %663 = icmp slt i32 %656, 10
  %664 = xor i1 %662, true
  %665 = xor i1 %663, true
  %666 = xor i1 true, true
  %667 = and i1 %664, true
  %668 = and i1 %662, %666
  %669 = and i1 %665, true
  %670 = and i1 %663, %666
  %671 = or i1 %667, %668
  %672 = or i1 %669, %670
  %673 = xor i1 %671, %672
  %674 = or i1 %664, %665
  %675 = xor i1 %674, true
  %676 = or i1 true, %666
  %677 = and i1 %675, %676
  %678 = or i1 %673, %677
  %679 = or i1 %662, %663
  br i1 %678, label %680, label %1077

; <label>:680:                                    ; preds = %654
  br label %479

; <label>:681:                                    ; preds = %627, %520
  %682 = load i32, i32* %48, align 4
  %683 = sext i32 %682 to i64
  %684 = load i64, i64* %46, align 8
  %685 = sub i64 0, %684
  %686 = sub i64 0, %683
  %687 = add i64 %685, %686
  %688 = sub i64 0, %687
  %689 = add nsw i64 %684, %683
  store i64 %688, i64* %46, align 8
  %690 = load i32, i32* %45, align 4
  %691 = icmp ne i32 %690, 0
  br i1 %691, label %692, label %706

; <label>:692:                                    ; preds = %681
  %693 = load i32, i32* %48, align 4
  %694 = sext i32 %693 to i64
  %695 = load i32, i32* %45, align 4
  %696 = add i32 %695, -1890661015
  %697 = sub i32 %696, 1
  %698 = sub i32 %697, -1890661015
  %699 = sub nsw i32 %695, 1
  %700 = sext i32 %698 to i64
  %701 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.3"* %31, i64 %700) #11
  %702 = load i64, i64* %701, align 8
  %703 = sub i64 0, %694
  %704 = sub i64 %702, %703
  %705 = add nsw i64 %702, %694
  store i64 %704, i64* %701, align 8
  br label %706

; <label>:706:                                    ; preds = %692, %681
  %707 = load i32, i32* %47, align 4
  %708 = sext i32 %707 to i64
  %709 = call dereferenceable(80) %"class.std::stack"* @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EEixEm(%"class.std::vector"* %30, i64 %708) #11
  invoke void @_ZNSt5stackIiSt5dequeIiSaIiEEE4pushERKi(%"class.std::stack"* %709, i32* dereferenceable(4) %45)
          to label %710 unwind label %223

; <label>:710:                                    ; preds = %706
  br label %711

; <label>:711:                                    ; preds = %710
  %712 = load i32, i32* %47, align 4
  %713 = sub i32 %712, -1654247334
  %714 = add i32 %713, 1
  %715 = add i32 %714, -1654247334
  %716 = add nsw i32 %712, 1
  store i32 %715, i32* %47, align 4
  br label %466

; <label>:717:                                    ; preds = %466
  %718 = load i32, i32* @x
  %719 = load i32, i32* @y
  %720 = sub i32 0, 1
  %721 = add i32 %718, %720
  %722 = sub i32 %718, 1
  %723 = mul i32 %718, %721
  %724 = urem i32 %723, 2
  %725 = icmp eq i32 %724, 0
  %726 = icmp slt i32 %719, 10
  %727 = xor i1 %725, true
  %728 = xor i1 %726, true
  %729 = xor i1 false, true
  %730 = and i1 %727, false
  %731 = and i1 %725, %729
  %732 = and i1 %728, false
  %733 = and i1 %726, %729
  %734 = or i1 %730, %731
  %735 = or i1 %732, %733
  %736 = xor i1 %734, %735
  %737 = or i1 %727, %728
  %738 = xor i1 %737, true
  %739 = or i1 false, %729
  %740 = and i1 %738, %739
  %741 = or i1 %736, %740
  %742 = or i1 %725, %726
  br i1 %741, label %743, label %1078

; <label>:743:                                    ; preds = %717, %1078
  %744 = load i32, i32* @x
  %745 = load i32, i32* @y
  %746 = sub i32 %744, 1958006302
  %747 = sub i32 %746, 1
  %748 = add i32 %747, 1958006302
  %749 = sub i32 %744, 1
  %750 = mul i32 %744, %748
  %751 = urem i32 %750, 2
  %752 = icmp eq i32 %751, 0
  %753 = icmp slt i32 %745, 10
  %754 = and i1 %752, %753
  %755 = xor i1 %752, %753
  %756 = or i1 %754, %755
  %757 = or i1 %752, %753
  br i1 %756, label %758, label %1078

; <label>:758:                                    ; preds = %743
  %759 = invoke dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* dereferenceable(8) %29, i64* dereferenceable(8) %46)
          to label %760 unwind label %223

; <label>:760:                                    ; preds = %758
  %761 = load i64, i64* %759, align 8
  store i64 %761, i64* %29, align 8
  %762 = load i32, i32* %45, align 4
  store i32 %762, i32* %50, align 4
  br label %763

; <label>:763:                                    ; preds = %914, %760
  %764 = load i32, i32* @x
  %765 = load i32, i32* @y
  %766 = sub i32 0, 1
  %767 = add i32 %764, %766
  %768 = sub i32 %764, 1
  %769 = mul i32 %764, %767
  %770 = urem i32 %769, 2
  %771 = icmp eq i32 %770, 0
  %772 = icmp slt i32 %765, 10
  %773 = and i1 %771, %772
  %774 = xor i1 %771, %772
  %775 = or i1 %773, %774
  %776 = or i1 %771, %772
  br i1 %775, label %777, label %1079

; <label>:777:                                    ; preds = %763, %1079
  %778 = load i32, i32* %50, align 4
  %779 = load i32, i32* %33, align 4
  %780 = sub i32 %779, -134143024
  %781 = sub i32 %780, 1
  %782 = add i32 %781, -134143024
  %783 = sub nsw i32 %779, 1
  %784 = icmp slt i32 %778, %782
  %785 = load i32, i32* @x
  %786 = load i32, i32* @y
  %787 = sub i32 %785, -1290446916
  %788 = sub i32 %787, 1
  %789 = add i32 %788, -1290446916
  %790 = sub i32 %785, 1
  %791 = mul i32 %785, %789
  %792 = urem i32 %791, 2
  %793 = icmp eq i32 %792, 0
  %794 = icmp slt i32 %786, 10
  %795 = xor i1 %793, true
  %796 = xor i1 %794, true
  %797 = xor i1 true, true
  %798 = and i1 %795, true
  %799 = and i1 %793, %797
  %800 = and i1 %796, true
  %801 = and i1 %794, %797
  %802 = or i1 %798, %799
  %803 = or i1 %800, %801
  %804 = xor i1 %802, %803
  %805 = or i1 %795, %796
  %806 = xor i1 %805, true
  %807 = or i1 true, %797
  %808 = and i1 %806, %807
  %809 = or i1 %804, %808
  %810 = or i1 %793, %794
  br i1 %809, label %811, label %1079

; <label>:811:                                    ; preds = %777
  br i1 %784, label %812, label %915

; <label>:812:                                    ; preds = %811
  %813 = load i32, i32* @x
  %814 = load i32, i32* @y
  %815 = add i32 %813, -1682389392
  %816 = sub i32 %815, 1
  %817 = sub i32 %816, -1682389392
  %818 = sub i32 %813, 1
  %819 = mul i32 %813, %817
  %820 = urem i32 %819, 2
  %821 = icmp eq i32 %820, 0
  %822 = icmp slt i32 %814, 10
  %823 = and i1 %821, %822
  %824 = xor i1 %821, %822
  %825 = or i1 %823, %824
  %826 = or i1 %821, %822
  br i1 %825, label %827, label %1118

; <label>:827:                                    ; preds = %812, %1118
  %828 = load i32, i32* %50, align 4
  %829 = sext i32 %828 to i64
  %830 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.3"* %31, i64 %829) #11
  %831 = load i64, i64* %830, align 8
  %832 = load i64, i64* %46, align 8
  %833 = add i64 %832, 3998168322815395644
  %834 = add i64 %833, %831
  %835 = sub i64 %834, 3998168322815395644
  %836 = add nsw i64 %832, %831
  store i64 %835, i64* %46, align 8
  %837 = load i32, i32* @x
  %838 = load i32, i32* @y
  %839 = sub i32 %837, 2010309567
  %840 = sub i32 %839, 1
  %841 = add i32 %840, 2010309567
  %842 = sub i32 %837, 1
  %843 = mul i32 %837, %841
  %844 = urem i32 %843, 2
  %845 = icmp eq i32 %844, 0
  %846 = icmp slt i32 %838, 10
  %847 = xor i1 %845, true
  %848 = xor i1 %846, true
  %849 = xor i1 true, true
  %850 = and i1 %847, true
  %851 = and i1 %845, %849
  %852 = and i1 %848, true
  %853 = and i1 %846, %849
  %854 = or i1 %850, %851
  %855 = or i1 %852, %853
  %856 = xor i1 %854, %855
  %857 = or i1 %847, %848
  %858 = xor i1 %857, true
  %859 = or i1 true, %849
  %860 = and i1 %858, %859
  %861 = or i1 %856, %860
  %862 = or i1 %845, %846
  br i1 %861, label %863, label %1118

; <label>:863:                                    ; preds = %827
  %864 = invoke dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* dereferenceable(8) %29, i64* dereferenceable(8) %46)
          to label %865 unwind label %223

; <label>:865:                                    ; preds = %863
  %866 = load i64, i64* %864, align 8
  store i64 %866, i64* %29, align 8
  br label %867

; <label>:867:                                    ; preds = %865
  %868 = load i32, i32* @x
  %869 = load i32, i32* @y
  %870 = add i32 %868, -1464062082
  %871 = sub i32 %870, 1
  %872 = sub i32 %871, -1464062082
  %873 = sub i32 %868, 1
  %874 = mul i32 %868, %872
  %875 = urem i32 %874, 2
  %876 = icmp eq i32 %875, 0
  %877 = icmp slt i32 %869, 10
  %878 = and i1 %876, %877
  %879 = xor i1 %876, %877
  %880 = or i1 %878, %879
  %881 = or i1 %876, %877
  br i1 %880, label %882, label %1135

; <label>:882:                                    ; preds = %867, %1135
  %883 = load i32, i32* %50, align 4
  %884 = sub i32 0, %883
  %885 = sub i32 0, 1
  %886 = add i32 %884, %885
  %887 = sub i32 0, %886
  %888 = add nsw i32 %883, 1
  store i32 %887, i32* %50, align 4
  %889 = load i32, i32* @x
  %890 = load i32, i32* @y
  %891 = sub i32 0, 1
  %892 = add i32 %889, %891
  %893 = sub i32 %889, 1
  %894 = mul i32 %889, %892
  %895 = urem i32 %894, 2
  %896 = icmp eq i32 %895, 0
  %897 = icmp slt i32 %890, 10
  %898 = xor i1 %896, true
  %899 = xor i1 %897, true
  %900 = xor i1 true, true
  %901 = and i1 %898, true
  %902 = and i1 %896, %900
  %903 = and i1 %899, true
  %904 = and i1 %897, %900
  %905 = or i1 %901, %902
  %906 = or i1 %903, %904
  %907 = xor i1 %905, %906
  %908 = or i1 %898, %899
  %909 = xor i1 %908, true
  %910 = or i1 true, %900
  %911 = and i1 %909, %910
  %912 = or i1 %907, %911
  %913 = or i1 %896, %897
  br i1 %912, label %914, label %1135

; <label>:914:                                    ; preds = %882
  br label %763

; <label>:915:                                    ; preds = %811
  %916 = load i32, i32* @x
  %917 = load i32, i32* @y
  %918 = sub i32 0, 1
  %919 = add i32 %916, %918
  %920 = sub i32 %916, 1
  %921 = mul i32 %916, %919
  %922 = urem i32 %921, 2
  %923 = icmp eq i32 %922, 0
  %924 = icmp slt i32 %917, 10
  %925 = and i1 %923, %924
  %926 = xor i1 %923, %924
  %927 = or i1 %925, %926
  %928 = or i1 %923, %924
  br i1 %927, label %929, label %1163

; <label>:929:                                    ; preds = %915, %1163
  %930 = load i32, i32* @x
  %931 = load i32, i32* @y
  %932 = add i32 %930, -1660361230
  %933 = sub i32 %932, 1
  %934 = sub i32 %933, -1660361230
  %935 = sub i32 %930, 1
  %936 = mul i32 %930, %934
  %937 = urem i32 %936, 2
  %938 = icmp eq i32 %937, 0
  %939 = icmp slt i32 %931, 10
  %940 = xor i1 %938, true
  %941 = xor i1 %939, true
  %942 = xor i1 true, true
  %943 = and i1 %940, true
  %944 = and i1 %938, %942
  %945 = and i1 %941, true
  %946 = and i1 %939, %942
  %947 = or i1 %943, %944
  %948 = or i1 %945, %946
  %949 = xor i1 %947, %948
  %950 = or i1 %940, %941
  %951 = xor i1 %950, true
  %952 = or i1 true, %942
  %953 = and i1 %951, %952
  %954 = or i1 %949, %953
  %955 = or i1 %938, %939
  br i1 %954, label %956, label %1163

; <label>:956:                                    ; preds = %929
  br label %957

; <label>:957:                                    ; preds = %956
  %958 = load i32, i32* %45, align 4
  %959 = sub i32 0, -1
  %960 = sub i32 %958, %959
  %961 = add nsw i32 %958, -1
  store i32 %960, i32* %45, align 4
  br label %368

; <label>:962:                                    ; preds = %424
  %963 = load i64, i64* %29, align 8
  %964 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i64 %963)
          to label %965 unwind label %223

; <label>:965:                                    ; preds = %962
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.8"* %32) #11
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.3"* %31) #11
  call void @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EED2Ev(%"class.std::vector"* %30) #11
  %966 = load i32, i32* %28, align 4
  ret i32 %966

; <label>:967:                                    ; preds = %239, %227, %223
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.8"* %32) #11
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.3"* %31) #11
  call void @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EED2Ev(%"class.std::vector"* %30) #11
  br label %968

; <label>:968:                                    ; preds = %967
  %969 = load i8*, i8** %34, align 8
  %970 = load i32, i32* %35, align 4
  %971 = insertvalue { i8*, i32 } undef, i8* %969, 0
  %972 = insertvalue { i8*, i32 } %971, i32 %970, 1
  resume { i8*, i32 } %972

; <label>:973:                                    ; preds = %27, %0
  %974 = alloca i32, align 4
  %975 = alloca i64, align 8
  %976 = alloca %"class.std::vector", align 8
  %977 = alloca %"class.std::vector.3", align 8
  %978 = alloca %"class.std::vector.8", align 8
  %979 = alloca i32, align 4
  %980 = alloca i8*
  %981 = alloca i32
  %982 = alloca i32, align 4
  %983 = alloca %"class.std::vector.13", align 8
  %984 = alloca %"class.std::stack", align 8
  %985 = alloca %"class.std::deque", align 8
  %986 = alloca i32, align 4
  %987 = alloca i64, align 8
  %988 = alloca i32, align 4
  %989 = alloca i32, align 4
  %990 = alloca i32, align 4
  %991 = alloca i32, align 4
  %992 = alloca i64, align 8
  %993 = alloca i32, align 4
  %994 = alloca i32, align 4
  %995 = alloca i32, align 4
  %996 = alloca i32, align 4
  store i32 0, i32* %974, align 4
  store i64 -10000000000000, i64* %975, align 8
  call void @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EEC2Ev(%"class.std::vector"* %976) #11
  call void @_ZNSt6vectorIxSaIxEEC2Ev(%"class.std::vector.3"* %977) #11
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2Ev(%"class.std::vector.8"* %978) #11
  br label %27

; <label>:997:                                    ; preds = %102, %75
  %998 = load i32, i32* %36, align 4
  %999 = sext i32 %998 to i64
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.13"* %37) #11
  br label %102

; <label>:1000:                                   ; preds = %145, %131
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.13"* %37) #11
  %1001 = load i32, i32* %36, align 4
  %1002 = sext i32 %1001 to i64
  br label %145

; <label>:1003:                                   ; preds = %198, %184
  %1004 = sub i64 0, -6859176604602221832
  %1005 = sub i64 %1004, 0
  %1006 = add i64 %1005, -6859176604602221832
  %1007 = sub i64 0, 0
  %1008 = sub i64 %1006, 6751698929402490379
  %1009 = add i64 %1008, %183
  %1010 = add i64 %1009, 6751698929402490379
  %1011 = add i64 %1006, %183
  %1012 = shl i64 0, %183
  %1013 = add i64 0, -5945945408810588982
  %1014 = sub i64 %1013, %183
  %1015 = sub i64 %1014, -5945945408810588982
  %1016 = sub nsw i64 0, %183
  store i64 %1015, i64* %41, align 8
  br label %198

; <label>:1017:                                   ; preds = %260, %246
  %1018 = load i32, i32* %43, align 4
  %1019 = load i32, i32* %36, align 4
  %1020 = icmp slt i32 %1018, %1019
  br label %260

; <label>:1021:                                   ; preds = %324, %297
  br label %324

; <label>:1022:                                   ; preds = %395, %368
  %1023 = load i32, i32* %45, align 4
  %1024 = icmp sge i32 %1023, 0
  br label %395

; <label>:1025:                                   ; preds = %439, %425
  store i64 0, i64* %46, align 8
  store i32 0, i32* %47, align 4
  br label %439

; <label>:1026:                                   ; preds = %499, %484
  %1027 = add i1 false, true
  %1028 = sub i1 %1027, %483
  %1029 = sub i1 %1028, true
  %1030 = sub i1 false, %483
  %1031 = sub i1 false, true
  %1032 = sub i1 %1029, %1031
  %1033 = add i1 %1029, true
  %1034 = sub i1 false, false
  %1035 = sub i1 %1034, %483
  %1036 = add i1 %1035, false
  %1037 = sub i1 false, %483
  %1038 = sub i1 false, %1036
  %1039 = sub i1 false, true
  %1040 = add i1 %1038, %1039
  %1041 = sub i1 false, %1040
  %1042 = add i1 %1036, true
  %1043 = shl i1 %483, true
  %1044 = add i1 false, true
  %1045 = sub i1 %1044, %483
  %1046 = sub i1 %1045, true
  %1047 = sub i1 false, %483
  %1048 = sub i1 false, true
  %1049 = sub i1 %1046, %1048
  %1050 = add i1 %1046, true
  %1051 = shl i1 %483, true
  %1052 = xor i1 %483, true
  %1053 = and i1 false, %1052
  %1054 = xor i1 false, true
  %1055 = and i1 %483, %1054
  %1056 = xor i1 true, true
  %1057 = and i1 %1056, false
  %1058 = and i1 true, %1054
  %1059 = or i1 %1053, %1055
  %1060 = or i1 %1057, %1058
  %1061 = xor i1 %1059, %1060
  %1062 = xor i1 %483, true
  br label %499

; <label>:1063:                                   ; preds = %559, %544
  %1064 = load i32, i32* %543, align 4
  %1065 = sext i32 %1064 to i64
  %1066 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.13"* %539, i64 %1065) #11
  %1067 = load i32, i32* %1066, align 4
  %1068 = load i32, i32* %49, align 4
  %1069 = shl i32 %1067, %1068
  %1070 = sub i32 0, %1068
  %1071 = add i32 %1067, %1070
  %1072 = sub nsw i32 %1067, %1068
  %1073 = sext i32 %1071 to i64
  %1074 = load i32, i32* %47, align 4
  %1075 = sext i32 %1074 to i64
  %1076 = call dereferenceable(80) %"class.std::stack"* @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EEixEm(%"class.std::vector"* %30, i64 %1075) #11
  br label %559

; <label>:1077:                                   ; preds = %654, %639
  br label %654

; <label>:1078:                                   ; preds = %743, %717
  br label %743

; <label>:1079:                                   ; preds = %777, %763
  %1080 = load i32, i32* %50, align 4
  %1081 = load i32, i32* %33, align 4
  %1082 = sub i32 %1081, -1892180590
  %1083 = sub i32 %1082, 1
  %1084 = add i32 %1083, -1892180590
  %1085 = sub i32 %1081, 1
  %1086 = mul i32 %1084, 1
  %1087 = shl i32 %1081, 1
  %1088 = shl i32 %1081, 1
  %1089 = add i32 %1081, -978512063
  %1090 = sub i32 %1089, 1
  %1091 = sub i32 %1090, -978512063
  %1092 = sub i32 %1081, 1
  %1093 = mul i32 %1091, 1
  %1094 = sub i32 0, 1
  %1095 = add i32 %1081, %1094
  %1096 = sub i32 %1081, 1
  %1097 = mul i32 %1095, 1
  %1098 = sub i32 0, 1
  %1099 = add i32 %1081, %1098
  %1100 = sub i32 %1081, 1
  %1101 = mul i32 %1099, 1
  %1102 = add i32 %1081, 612539625
  %1103 = sub i32 %1102, 1
  %1104 = sub i32 %1103, 612539625
  %1105 = sub i32 %1081, 1
  %1106 = mul i32 %1104, 1
  %1107 = sub i32 %1081, -294546593
  %1108 = sub i32 %1107, 1
  %1109 = add i32 %1108, -294546593
  %1110 = sub i32 %1081, 1
  %1111 = mul i32 %1109, 1
  %1112 = shl i32 %1081, 1
  %1113 = add i32 %1081, -1115174920
  %1114 = sub i32 %1113, 1
  %1115 = sub i32 %1114, -1115174920
  %1116 = sub nsw i32 %1081, 1
  %1117 = icmp slt i32 %1080, %1115
  br label %777

; <label>:1118:                                   ; preds = %827, %812
  %1119 = load i32, i32* %50, align 4
  %1120 = sext i32 %1119 to i64
  %1121 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.3"* %31, i64 %1120) #11
  %1122 = load i64, i64* %1121, align 8
  %1123 = load i64, i64* %46, align 8
  %1124 = shl i64 %1123, %1122
  %1125 = shl i64 %1123, %1122
  %1126 = sub i64 %1123, -4516620282643668452
  %1127 = sub i64 %1126, %1122
  %1128 = add i64 %1127, -4516620282643668452
  %1129 = sub i64 %1123, %1122
  %1130 = mul i64 %1128, %1122
  %1131 = add i64 %1123, -3636036460096715295
  %1132 = add i64 %1131, %1122
  %1133 = sub i64 %1132, -3636036460096715295
  %1134 = add nsw i64 %1123, %1122
  store i64 %1133, i64* %46, align 8
  br label %827

; <label>:1135:                                   ; preds = %882, %867
  %1136 = load i32, i32* %50, align 4
  %1137 = sub i32 0, %1136
  %1138 = add i32 0, %1137
  %1139 = sub i32 0, %1136
  %1140 = sub i32 0, 1
  %1141 = sub i32 %1138, %1140
  %1142 = add i32 %1138, 1
  %1143 = shl i32 %1136, 1
  %1144 = shl i32 %1136, 1
  %1145 = sub i32 %1136, 1428548993
  %1146 = sub i32 %1145, 1
  %1147 = add i32 %1146, 1428548993
  %1148 = sub i32 %1136, 1
  %1149 = mul i32 %1147, 1
  %1150 = shl i32 %1136, 1
  %1151 = add i32 %1136, -956263597
  %1152 = sub i32 %1151, 1
  %1153 = sub i32 %1152, -956263597
  %1154 = sub i32 %1136, 1
  %1155 = mul i32 %1153, 1
  %1156 = sub i32 0, 1
  %1157 = add i32 %1136, %1156
  %1158 = sub i32 %1136, 1
  %1159 = mul i32 %1157, 1
  %1160 = sub i32 0, 1
  %1161 = sub i32 %1136, %1160
  %1162 = add nsw i32 %1136, 1
  store i32 %1161, i32* %50, align 4
  br label %882

; <label>:1163:                                   ; preds = %929, %915
  br label %929
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EEC2Ev(%"class.std::vector"*) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.5
  %3 = load i32, i32* @y.6
  %4 = sub i32 %2, -1490349809
  %5 = sub i32 %4, 1
  %6 = add i32 %5, -1490349809
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %51

; <label>:28:                                     ; preds = %1, %51
  %29 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %29, align 8
  %30 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8
  %31 = bitcast %"class.std::vector"* %30 to %"struct.std::_Vector_base"*
  %32 = load i32, i32* @x.5
  %33 = load i32, i32* @y.6
  %34 = add i32 %32, 343880380
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 343880380
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %51

; <label>:46:                                     ; preds = %28
  invoke void @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EEC2Ev(%"struct.std::_Vector_base"* %31)
          to label %47 unwind label %48

; <label>:47:                                     ; preds = %46
  ret void

; <label>:48:                                     ; preds = %46
  %49 = landingpad { i8*, i32 }
          catch i8* null
  %50 = extractvalue { i8*, i32 } %49, 0
  call void @__clang_call_terminate(i8* %50) #9
  unreachable

; <label>:51:                                     ; preds = %28, %1
  %52 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %52, align 8
  %53 = load %"class.std::vector"*, %"class.std::vector"** %52, align 8
  %54 = bitcast %"class.std::vector"* %53 to %"struct.std::_Vector_base"*
  br label %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEEC2Ev(%"class.std::vector.3"*) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %4 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  invoke void @_ZNSt12_Vector_baseIxSaIxEEC2Ev(%"struct.std::_Vector_base.4"* %4)
          to label %5 unwind label %60

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.7
  %7 = load i32, i32* @y.8
  %8 = sub i32 %6, -1398680556
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1398680556
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %7, 10
  %16 = xor i1 %14, true
  %17 = xor i1 %15, true
  %18 = xor i1 true, true
  %19 = and i1 %16, true
  %20 = and i1 %14, %18
  %21 = and i1 %17, true
  %22 = and i1 %15, %18
  %23 = or i1 %19, %20
  %24 = or i1 %21, %22
  %25 = xor i1 %23, %24
  %26 = or i1 %16, %17
  %27 = xor i1 %26, true
  %28 = or i1 true, %18
  %29 = and i1 %27, %28
  %30 = or i1 %25, %29
  %31 = or i1 %14, %15
  br i1 %30, label %32, label %63

; <label>:32:                                     ; preds = %5, %63
  %33 = load i32, i32* @x.7
  %34 = load i32, i32* @y.8
  %35 = sub i32 %33, -2025644629
  %36 = sub i32 %35, 1
  %37 = add i32 %36, -2025644629
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %63

; <label>:59:                                     ; preds = %32
  ret void

; <label>:60:                                     ; preds = %1
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  call void @__clang_call_terminate(i8* %62) #9
  unreachable

; <label>:63:                                     ; preds = %32, %5
  br label %32
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2Ev(%"class.std::vector.8"*) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %4 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  invoke void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2Ev(%"struct.std::_Vector_base.9"* %4)
          to label %5 unwind label %60

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.9
  %7 = load i32, i32* @y.10
  %8 = sub i32 %6, 1923840658
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1923840658
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %7, 10
  %16 = xor i1 %14, true
  %17 = xor i1 %15, true
  %18 = xor i1 true, true
  %19 = and i1 %16, true
  %20 = and i1 %14, %18
  %21 = and i1 %17, true
  %22 = and i1 %15, %18
  %23 = or i1 %19, %20
  %24 = or i1 %21, %22
  %25 = xor i1 %23, %24
  %26 = or i1 %16, %17
  %27 = xor i1 %26, true
  %28 = or i1 true, %18
  %29 = and i1 %27, %28
  %30 = or i1 %25, %29
  %31 = or i1 %14, %15
  br i1 %30, label %32, label %63

; <label>:32:                                     ; preds = %5, %63
  %33 = load i32, i32* @x.9
  %34 = load i32, i32* @y.10
  %35 = sub i32 %33, -1735132367
  %36 = sub i32 %35, 1
  %37 = add i32 %36, -1735132367
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %63

; <label>:59:                                     ; preds = %32
  ret void

; <label>:60:                                     ; preds = %1
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  call void @__clang_call_terminate(i8* %62) #9
  unreachable

; <label>:63:                                     ; preds = %32, %5
  br label %32
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_Z4readv() #2 comdat {
  %1 = alloca i32
  %2 = alloca i1
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  store i32 0, i32* %3, align 4
  %5 = call signext i8 @_Z3Getv()
  store i8 %5, i8* %4, align 1
  %6 = alloca i32
  store i32 -70696864, i32* %6
  br label %7

; <label>:7:                                      ; preds = %0, %290
  %8 = load i32, i32* %6
  switch i32 %8, label %9 [
    i32 -70696864, label %10
    i32 332611099, label %25
    i32 1966322007, label %56
    i32 1505304239, label %59
    i32 1728982757, label %61
    i32 -458227190, label %62
    i32 1718473944, label %68
    i32 -165721436, label %84
    i32 905130988, label %124
    i32 -821717813, label %125
    i32 -1292888287, label %140
    i32 476630610, label %169
    i32 1223531339, label %171
    i32 -671786663, label %218
    i32 -294750470, label %288
  ]

; <label>:9:                                      ; preds = %7
  br label %290

; <label>:10:                                     ; preds = %7
  %11 = load i32, i32* @x.11
  %12 = load i32, i32* @y.12
  %13 = sub i32 0, 1
  %14 = add i32 %11, %13
  %15 = sub i32 %11, 1
  %16 = mul i32 %11, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %12, 10
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 332611099, i32 1223531339
  store i32 %24, i32* %6
  br label %290

; <label>:25:                                     ; preds = %7
  %26 = load i8, i8* %4, align 1
  %27 = sext i8 %26 to i32
  %28 = call i32 @isdigit(i32 %27) #12
  %29 = icmp ne i32 %28, 0
  %30 = xor i1 %29, true
  %31 = and i1 true, %30
  %32 = xor i1 true, true
  %33 = and i1 %29, %32
  %34 = xor i1 true, true
  %35 = and i1 %34, true
  %36 = and i1 true, %32
  %37 = or i1 %31, %33
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = xor i1 %29, true
  store i1 %39, i1* %2
  %41 = load i32, i32* @x.11
  %42 = load i32, i32* @y.12
  %43 = sub i32 %41, 197865431
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 197865431
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 1966322007, i32 1223531339
  store i32 %55, i32* %6
  br label %290

; <label>:56:                                     ; preds = %7
  %57 = load volatile i1, i1* %2
  %58 = select i1 %57, i32 1505304239, i32 1728982757
  store i32 %58, i32* %6
  br label %290

; <label>:59:                                     ; preds = %7
  %60 = call signext i8 @_Z3Getv()
  store i8 %60, i8* %4, align 1
  store i32 -70696864, i32* %6
  br label %290

; <label>:61:                                     ; preds = %7
  store i32 -458227190, i32* %6
  br label %290

; <label>:62:                                     ; preds = %7
  %63 = load i8, i8* %4, align 1
  %64 = sext i8 %63 to i32
  %65 = call i32 @isdigit(i32 %64) #12
  %66 = icmp ne i32 %65, 0
  %67 = select i1 %66, i32 1718473944, i32 -821717813
  store i32 %67, i32* %6
  br label %290

; <label>:68:                                     ; preds = %7
  %69 = load i32, i32* @x.11
  %70 = load i32, i32* @y.12
  %71 = add i32 %69, -1594401677
  %72 = sub i32 %71, 1
  %73 = sub i32 %72, -1594401677
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  %83 = select i1 %81, i32 -165721436, i32 -671786663
  store i32 %83, i32* %6
  br label %290

; <label>:84:                                     ; preds = %7
  %85 = load i32, i32* %3, align 4
  %86 = mul nsw i32 %85, 10
  %87 = load i8, i8* %4, align 1
  %88 = sext i8 %87 to i32
  %89 = sub i32 %86, -457351345
  %90 = add i32 %89, %88
  %91 = add i32 %90, -457351345
  %92 = add nsw i32 %86, %88
  %93 = sub i32 %91, -712825145
  %94 = sub i32 %93, 48
  %95 = add i32 %94, -712825145
  %96 = sub nsw i32 %91, 48
  store i32 %95, i32* %3, align 4
  %97 = call signext i8 @_Z3Getv()
  store i8 %97, i8* %4, align 1
  %98 = load i32, i32* @x.11
  %99 = load i32, i32* @y.12
  %100 = sub i32 0, 1
  %101 = add i32 %98, %100
  %102 = sub i32 %98, 1
  %103 = mul i32 %98, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %99, 10
  %107 = xor i1 %105, true
  %108 = xor i1 %106, true
  %109 = xor i1 true, true
  %110 = and i1 %107, true
  %111 = and i1 %105, %109
  %112 = and i1 %108, true
  %113 = and i1 %106, %109
  %114 = or i1 %110, %111
  %115 = or i1 %112, %113
  %116 = xor i1 %114, %115
  %117 = or i1 %107, %108
  %118 = xor i1 %117, true
  %119 = or i1 true, %109
  %120 = and i1 %118, %119
  %121 = or i1 %116, %120
  %122 = or i1 %105, %106
  %123 = select i1 %121, i32 905130988, i32 -671786663
  store i32 %123, i32* %6
  br label %290

; <label>:124:                                    ; preds = %7
  store i32 -458227190, i32* %6
  br label %290

; <label>:125:                                    ; preds = %7
  %126 = load i32, i32* @x.11
  %127 = load i32, i32* @y.12
  %128 = sub i32 0, 1
  %129 = add i32 %126, %128
  %130 = sub i32 %126, 1
  %131 = mul i32 %126, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %127, 10
  %135 = and i1 %133, %134
  %136 = xor i1 %133, %134
  %137 = or i1 %135, %136
  %138 = or i1 %133, %134
  %139 = select i1 %137, i32 -1292888287, i32 -294750470
  store i32 %139, i32* %6
  br label %290

; <label>:140:                                    ; preds = %7
  %141 = load i32, i32* %3, align 4
  store i32 %141, i32* %1
  %142 = load i32, i32* @x.11
  %143 = load i32, i32* @y.12
  %144 = sub i32 %142, 1671391362
  %145 = sub i32 %144, 1
  %146 = add i32 %145, 1671391362
  %147 = sub i32 %142, 1
  %148 = mul i32 %142, %146
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %143, 10
  %152 = xor i1 %150, true
  %153 = xor i1 %151, true
  %154 = xor i1 true, true
  %155 = and i1 %152, true
  %156 = and i1 %150, %154
  %157 = and i1 %153, true
  %158 = and i1 %151, %154
  %159 = or i1 %155, %156
  %160 = or i1 %157, %158
  %161 = xor i1 %159, %160
  %162 = or i1 %152, %153
  %163 = xor i1 %162, true
  %164 = or i1 true, %154
  %165 = and i1 %163, %164
  %166 = or i1 %161, %165
  %167 = or i1 %150, %151
  %168 = select i1 %166, i32 476630610, i32 -294750470
  store i32 %168, i32* %6
  br label %290

; <label>:169:                                    ; preds = %7
  %170 = load volatile i32, i32* %1
  ret i32 %170

; <label>:171:                                    ; preds = %7
  %172 = load i8, i8* %4, align 1
  %173 = sext i8 %172 to i32
  %174 = call i32 @isdigit(i32 %173) #12
  %175 = icmp ne i32 %174, 0
  %176 = add i1 false, true
  %177 = sub i1 %176, %175
  %178 = sub i1 %177, true
  %179 = sub i1 false, %175
  %180 = add i1 %178, true
  %181 = add i1 %180, true
  %182 = sub i1 %181, true
  %183 = add i1 %178, true
  %184 = shl i1 %175, true
  %185 = sub i1 false, true
  %186 = sub i1 %185, %175
  %187 = add i1 %186, true
  %188 = sub i1 false, %175
  %189 = add i1 %187, false
  %190 = add i1 %189, true
  %191 = sub i1 %190, false
  %192 = add i1 %187, true
  %193 = add i1 %175, false
  %194 = sub i1 %193, true
  %195 = sub i1 %194, false
  %196 = sub i1 %175, true
  %197 = mul i1 %195, true
  %198 = shl i1 %175, true
  %199 = shl i1 %175, true
  %200 = sub i1 false, %175
  %201 = add i1 false, %200
  %202 = sub i1 false, %175
  %203 = sub i1 false, true
  %204 = sub i1 %201, %203
  %205 = add i1 %201, true
  %206 = shl i1 %175, true
  %207 = xor i1 %175, true
  %208 = and i1 true, %207
  %209 = xor i1 true, true
  %210 = and i1 %175, %209
  %211 = xor i1 true, true
  %212 = and i1 %211, true
  %213 = and i1 true, %209
  %214 = or i1 %208, %210
  %215 = or i1 %212, %213
  %216 = xor i1 %214, %215
  %217 = xor i1 %175, true
  store i32 332611099, i32* %6
  br label %290

; <label>:218:                                    ; preds = %7
  %219 = load i32, i32* %3, align 4
  %220 = shl i32 %219, 10
  %221 = add i32 %219, -83110955
  %222 = sub i32 %221, 10
  %223 = sub i32 %222, -83110955
  %224 = sub i32 %219, 10
  %225 = mul i32 %223, 10
  %226 = shl i32 %219, 10
  %227 = shl i32 %219, 10
  %228 = mul nsw i32 %219, 10
  %229 = load i8, i8* %4, align 1
  %230 = sext i8 %229 to i32
  %231 = sub i32 %228, -401328869
  %232 = sub i32 %231, %230
  %233 = add i32 %232, -401328869
  %234 = sub i32 %228, %230
  %235 = mul i32 %233, %230
  %236 = sub i32 0, %228
  %237 = add i32 0, %236
  %238 = sub i32 0, %228
  %239 = sub i32 0, %237
  %240 = sub i32 0, %230
  %241 = add i32 %239, %240
  %242 = sub i32 0, %241
  %243 = add i32 %237, %230
  %244 = add i32 0, -993174269
  %245 = sub i32 %244, %228
  %246 = sub i32 %245, -993174269
  %247 = sub i32 0, %228
  %248 = sub i32 0, %230
  %249 = sub i32 %246, %248
  %250 = add i32 %246, %230
  %251 = add i32 %228, -522049404
  %252 = sub i32 %251, %230
  %253 = sub i32 %252, -522049404
  %254 = sub i32 %228, %230
  %255 = mul i32 %253, %230
  %256 = add i32 0, -1014066763
  %257 = sub i32 %256, %228
  %258 = sub i32 %257, -1014066763
  %259 = sub i32 0, %228
  %260 = sub i32 %258, 1677069746
  %261 = add i32 %260, %230
  %262 = add i32 %261, 1677069746
  %263 = add i32 %258, %230
  %264 = add i32 %228, -2029840895
  %265 = sub i32 %264, %230
  %266 = sub i32 %265, -2029840895
  %267 = sub i32 %228, %230
  %268 = mul i32 %266, %230
  %269 = sub i32 0, %228
  %270 = add i32 0, %269
  %271 = sub i32 0, %228
  %272 = sub i32 0, %270
  %273 = sub i32 0, %230
  %274 = add i32 %272, %273
  %275 = sub i32 0, %274
  %276 = add i32 %270, %230
  %277 = sub i32 0, %230
  %278 = sub i32 %228, %277
  %279 = add nsw i32 %228, %230
  %280 = sub i32 0, 48
  %281 = add i32 %278, %280
  %282 = sub i32 %278, 48
  %283 = mul i32 %281, 48
  %284 = sub i32 0, 48
  %285 = add i32 %278, %284
  %286 = sub nsw i32 %278, 48
  store i32 %285, i32* %3, align 4
  %287 = call signext i8 @_Z3Getv()
  store i8 %287, i8* %4, align 1
  store i32 -165721436, i32* %6
  br label %290

; <label>:288:                                    ; preds = %7
  %289 = load i32, i32* %3, align 4
  store i32 -1292888287, i32* %6
  br label %290

; <label>:290:                                    ; preds = %288, %218, %171, %140, %125, %124, %84, %68, %62, %61, %59, %56, %25, %10, %9
  br label %7
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE7reserveEm(%"class.std::vector.3"*, i64) #2 comdat align 2 {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca %"class.std::vector.3"*
  %6 = alloca %"class.std::vector.3"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64*, align 8
  %10 = alloca %"class.std::move_iterator", align 8
  %11 = alloca %"class.std::move_iterator", align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %6, align 8
  store i64 %1, i64* %7, align 8
  %12 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  store %"class.std::vector.3"* %12, %"class.std::vector.3"** %5
  %13 = load i64, i64* %7, align 8
  store i64 %13, i64* %4
  %14 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %15 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector.3"* %14) #11
  store i64 %15, i64* %3
  %16 = alloca i32
  store i32 337385689, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %308
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 337385689, label %20
    i32 -305738111, label %25
    i32 -1049445811, label %40
    i32 1975379688, label %68
    i32 -1720047072, label %69
    i32 660984163, label %75
    i32 -417501187, label %103
    i32 -414959913, label %200
    i32 -2126174422, label %201
    i32 669741004, label %202
    i32 1913294180, label %203
  ]

; <label>:19:                                     ; preds = %17
  br label %308

; <label>:20:                                     ; preds = %17
  %21 = load volatile i64, i64* %4
  %22 = load volatile i64, i64* %3
  %23 = icmp ugt i64 %21, %22
  %24 = select i1 %23, i32 -305738111, i32 -1720047072
  store i32 %24, i32* %16
  br label %308

; <label>:25:                                     ; preds = %17
  %26 = load i32, i32* @x.13
  %27 = load i32, i32* @y.14
  %28 = sub i32 0, 1
  %29 = add i32 %26, %28
  %30 = sub i32 %26, 1
  %31 = mul i32 %26, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %27, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  %39 = select i1 %37, i32 -1049445811, i32 669741004
  store i32 %39, i32* %16
  br label %308

; <label>:40:                                     ; preds = %17
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i32 0, i32 0)) #13
  %41 = load i32, i32* @x.13
  %42 = load i32, i32* @y.14
  %43 = add i32 %41, -695305079
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -695305079
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1975379688, i32 669741004
  store i32 %67, i32* %16
  br label %308

; <label>:68:                                     ; preds = %17
  unreachable

; <label>:69:                                     ; preds = %17
  %70 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %71 = call i64 @_ZNKSt6vectorIxSaIxEE8capacityEv(%"class.std::vector.3"* %70) #11
  %72 = load i64, i64* %7, align 8
  %73 = icmp ult i64 %71, %72
  %74 = select i1 %73, i32 660984163, i32 -2126174422
  store i32 %74, i32* %16
  br label %308

; <label>:75:                                     ; preds = %17
  %76 = load i32, i32* @x.13
  %77 = load i32, i32* @y.14
  %78 = sub i32 %76, -1278319015
  %79 = sub i32 %78, 1
  %80 = add i32 %79, -1278319015
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = xor i1 %84, true
  %87 = xor i1 %85, true
  %88 = xor i1 false, true
  %89 = and i1 %86, false
  %90 = and i1 %84, %88
  %91 = and i1 %87, false
  %92 = and i1 %85, %88
  %93 = or i1 %89, %90
  %94 = or i1 %91, %92
  %95 = xor i1 %93, %94
  %96 = or i1 %86, %87
  %97 = xor i1 %96, true
  %98 = or i1 false, %88
  %99 = and i1 %97, %98
  %100 = or i1 %95, %99
  %101 = or i1 %84, %85
  %102 = select i1 %100, i32 -417501187, i32 1913294180
  store i32 %102, i32* %16
  br label %308

; <label>:103:                                    ; preds = %17
  %104 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %105 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.3"* %104) #11
  store i64 %105, i64* %8, align 8
  %106 = load i64, i64* %7, align 8
  %107 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %108 = bitcast %"class.std::vector.3"* %107 to %"struct.std::_Vector_base.4"*
  %109 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %108, i32 0, i32 0
  %110 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %109, i32 0, i32 0
  %111 = load i64*, i64** %110, align 8
  %112 = call i64* @_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_(i64* %111)
  %113 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  store i64* %112, i64** %113, align 8
  %114 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %115 = bitcast %"class.std::vector.3"* %114 to %"struct.std::_Vector_base.4"*
  %116 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %115, i32 0, i32 0
  %117 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %116, i32 0, i32 1
  %118 = load i64*, i64** %117, align 8
  %119 = call i64* @_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_(i64* %118)
  %120 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %11, i32 0, i32 0
  store i64* %119, i64** %120, align 8
  %121 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %122 = load i64*, i64** %121, align 8
  %123 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %11, i32 0, i32 0
  %124 = load i64*, i64** %123, align 8
  %125 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %126 = call i64* @_ZNSt6vectorIxSaIxEE20_M_allocate_and_copyISt13move_iteratorIPxEEES4_mT_S6_(%"class.std::vector.3"* %125, i64 %106, i64* %122, i64* %124)
  store i64* %126, i64** %9, align 8
  %127 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %128 = bitcast %"class.std::vector.3"* %127 to %"struct.std::_Vector_base.4"*
  %129 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %128, i32 0, i32 0
  %130 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %129, i32 0, i32 0
  %131 = load i64*, i64** %130, align 8
  %132 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %133 = bitcast %"class.std::vector.3"* %132 to %"struct.std::_Vector_base.4"*
  %134 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %133, i32 0, i32 0
  %135 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %134, i32 0, i32 1
  %136 = load i64*, i64** %135, align 8
  %137 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %138 = bitcast %"class.std::vector.3"* %137 to %"struct.std::_Vector_base.4"*
  %139 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %138) #11
  call void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %131, i64* %136, %"class.std::allocator.5"* dereferenceable(1) %139)
  %140 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %141 = bitcast %"class.std::vector.3"* %140 to %"struct.std::_Vector_base.4"*
  %142 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %143 = bitcast %"class.std::vector.3"* %142 to %"struct.std::_Vector_base.4"*
  %144 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %143, i32 0, i32 0
  %145 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %144, i32 0, i32 0
  %146 = load i64*, i64** %145, align 8
  %147 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %148 = bitcast %"class.std::vector.3"* %147 to %"struct.std::_Vector_base.4"*
  %149 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %148, i32 0, i32 0
  %150 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %149, i32 0, i32 2
  %151 = load i64*, i64** %150, align 8
  %152 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %153 = bitcast %"class.std::vector.3"* %152 to %"struct.std::_Vector_base.4"*
  %154 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %153, i32 0, i32 0
  %155 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %154, i32 0, i32 0
  %156 = load i64*, i64** %155, align 8
  %157 = ptrtoint i64* %151 to i64
  %158 = ptrtoint i64* %156 to i64
  %159 = sub i64 0, %158
  %160 = add i64 %157, %159
  %161 = sub i64 %157, %158
  %162 = sdiv exact i64 %160, 8
  call void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.4"* %141, i64* %146, i64 %162)
  %163 = load i64*, i64** %9, align 8
  %164 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %165 = bitcast %"class.std::vector.3"* %164 to %"struct.std::_Vector_base.4"*
  %166 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %165, i32 0, i32 0
  %167 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %166, i32 0, i32 0
  store i64* %163, i64** %167, align 8
  %168 = load i64*, i64** %9, align 8
  %169 = load i64, i64* %8, align 8
  %170 = getelementptr inbounds i64, i64* %168, i64 %169
  %171 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %172 = bitcast %"class.std::vector.3"* %171 to %"struct.std::_Vector_base.4"*
  %173 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %172, i32 0, i32 0
  %174 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %173, i32 0, i32 1
  store i64* %170, i64** %174, align 8
  %175 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %176 = bitcast %"class.std::vector.3"* %175 to %"struct.std::_Vector_base.4"*
  %177 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %176, i32 0, i32 0
  %178 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %177, i32 0, i32 0
  %179 = load i64*, i64** %178, align 8
  %180 = load i64, i64* %7, align 8
  %181 = getelementptr inbounds i64, i64* %179, i64 %180
  %182 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %183 = bitcast %"class.std::vector.3"* %182 to %"struct.std::_Vector_base.4"*
  %184 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %183, i32 0, i32 0
  %185 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %184, i32 0, i32 2
  store i64* %181, i64** %185, align 8
  %186 = load i32, i32* @x.13
  %187 = load i32, i32* @y.14
  %188 = sub i32 0, 1
  %189 = add i32 %186, %188
  %190 = sub i32 %186, 1
  %191 = mul i32 %186, %189
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %187, 10
  %195 = and i1 %193, %194
  %196 = xor i1 %193, %194
  %197 = or i1 %195, %196
  %198 = or i1 %193, %194
  %199 = select i1 %197, i32 -414959913, i32 1913294180
  store i32 %199, i32* %16
  br label %308

; <label>:200:                                    ; preds = %17
  store i32 -2126174422, i32* %16
  br label %308

; <label>:201:                                    ; preds = %17
  ret void

; <label>:202:                                    ; preds = %17
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i32 0, i32 0)) #13
  store i32 -1049445811, i32* %16
  br label %308

; <label>:203:                                    ; preds = %17
  %204 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %205 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.3"* %204) #11
  store i64 %205, i64* %8, align 8
  %206 = load i64, i64* %7, align 8
  %207 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %208 = bitcast %"class.std::vector.3"* %207 to %"struct.std::_Vector_base.4"*
  %209 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %208, i32 0, i32 0
  %210 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %209, i32 0, i32 0
  %211 = load i64*, i64** %210, align 8
  %212 = call i64* @_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_(i64* %211)
  %213 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  store i64* %212, i64** %213, align 8
  %214 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %215 = bitcast %"class.std::vector.3"* %214 to %"struct.std::_Vector_base.4"*
  %216 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %215, i32 0, i32 0
  %217 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %216, i32 0, i32 1
  %218 = load i64*, i64** %217, align 8
  %219 = call i64* @_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_(i64* %218)
  %220 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %11, i32 0, i32 0
  store i64* %219, i64** %220, align 8
  %221 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %222 = load i64*, i64** %221, align 8
  %223 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %11, i32 0, i32 0
  %224 = load i64*, i64** %223, align 8
  %225 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %226 = call i64* @_ZNSt6vectorIxSaIxEE20_M_allocate_and_copyISt13move_iteratorIPxEEES4_mT_S6_(%"class.std::vector.3"* %225, i64 %206, i64* %222, i64* %224)
  store i64* %226, i64** %9, align 8
  %227 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %228 = bitcast %"class.std::vector.3"* %227 to %"struct.std::_Vector_base.4"*
  %229 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %228, i32 0, i32 0
  %230 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %229, i32 0, i32 0
  %231 = load i64*, i64** %230, align 8
  %232 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %233 = bitcast %"class.std::vector.3"* %232 to %"struct.std::_Vector_base.4"*
  %234 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %233, i32 0, i32 0
  %235 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %234, i32 0, i32 1
  %236 = load i64*, i64** %235, align 8
  %237 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %238 = bitcast %"class.std::vector.3"* %237 to %"struct.std::_Vector_base.4"*
  %239 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %238) #11
  call void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %231, i64* %236, %"class.std::allocator.5"* dereferenceable(1) %239)
  %240 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %241 = bitcast %"class.std::vector.3"* %240 to %"struct.std::_Vector_base.4"*
  %242 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %243 = bitcast %"class.std::vector.3"* %242 to %"struct.std::_Vector_base.4"*
  %244 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %243, i32 0, i32 0
  %245 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %244, i32 0, i32 0
  %246 = load i64*, i64** %245, align 8
  %247 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %248 = bitcast %"class.std::vector.3"* %247 to %"struct.std::_Vector_base.4"*
  %249 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %248, i32 0, i32 0
  %250 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %249, i32 0, i32 2
  %251 = load i64*, i64** %250, align 8
  %252 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %253 = bitcast %"class.std::vector.3"* %252 to %"struct.std::_Vector_base.4"*
  %254 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %253, i32 0, i32 0
  %255 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %254, i32 0, i32 0
  %256 = load i64*, i64** %255, align 8
  %257 = ptrtoint i64* %251 to i64
  %258 = ptrtoint i64* %256 to i64
  %259 = shl i64 %257, %258
  %260 = shl i64 %257, %258
  %261 = add i64 %257, -8072840235544883465
  %262 = sub i64 %261, %258
  %263 = sub i64 %262, -8072840235544883465
  %264 = sub i64 %257, %258
  %265 = mul i64 %263, %258
  %266 = shl i64 %257, %258
  %267 = sub i64 0, %257
  %268 = add i64 0, %267
  %269 = sub i64 0, %257
  %270 = sub i64 %268, -7876147236552649629
  %271 = add i64 %270, %258
  %272 = add i64 %271, -7876147236552649629
  %273 = add i64 %268, %258
  %274 = shl i64 %257, %258
  %275 = sub i64 %257, -7012498112477461284
  %276 = sub i64 %275, %258
  %277 = add i64 %276, -7012498112477461284
  %278 = sub i64 %257, %258
  %279 = sub i64 %277, -5203469556725618547
  %280 = sub i64 %279, 8
  %281 = add i64 %280, -5203469556725618547
  %282 = sub i64 %277, 8
  %283 = mul i64 %281, 8
  %284 = sdiv exact i64 %277, 8
  call void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.4"* %241, i64* %246, i64 %284)
  %285 = load i64*, i64** %9, align 8
  %286 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %287 = bitcast %"class.std::vector.3"* %286 to %"struct.std::_Vector_base.4"*
  %288 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %287, i32 0, i32 0
  %289 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %288, i32 0, i32 0
  store i64* %285, i64** %289, align 8
  %290 = load i64*, i64** %9, align 8
  %291 = load i64, i64* %8, align 8
  %292 = getelementptr inbounds i64, i64* %290, i64 %291
  %293 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %294 = bitcast %"class.std::vector.3"* %293 to %"struct.std::_Vector_base.4"*
  %295 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %294, i32 0, i32 0
  %296 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %295, i32 0, i32 1
  store i64* %292, i64** %296, align 8
  %297 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %298 = bitcast %"class.std::vector.3"* %297 to %"struct.std::_Vector_base.4"*
  %299 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %298, i32 0, i32 0
  %300 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %299, i32 0, i32 0
  %301 = load i64*, i64** %300, align 8
  %302 = load i64, i64* %7, align 8
  %303 = getelementptr inbounds i64, i64* %301, i64 %302
  %304 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %305 = bitcast %"class.std::vector.3"* %304 to %"struct.std::_Vector_base.4"*
  %306 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %305, i32 0, i32 0
  %307 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %306, i32 0, i32 2
  store i64* %303, i64** %307, align 8
  store i32 -417501187, i32* %16
  br label %308

; <label>:308:                                    ; preds = %203, %202, %200, %103, %75, %69, %40, %25, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE6assignEmRKS1_(%"class.std::vector.8"*, i64, %"class.std::vector.13"* dereferenceable(24)) #2 comdat align 2 {
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.13"* %2, %"class.std::vector.13"** %6, align 8
  %7 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load %"class.std::vector.13"*, %"class.std::vector.13"** %6, align 8
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE14_M_fill_assignEmRKS1_(%"class.std::vector.8"* %7, i64 %8, %"class.std::vector.13"* dereferenceable(24) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.13"*) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %2, align 8
  %3 = load %"class.std::vector.13"*, %"class.std::vector.13"** %2, align 8
  %4 = bitcast %"class.std::vector.13"* %3 to %"struct.std::_Vector_base.14"*
  invoke void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base.14"* %4)
          to label %5 unwind label %46

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.17
  %7 = load i32, i32* @y.18
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %7, 10
  %15 = and i1 %13, %14
  %16 = xor i1 %13, %14
  %17 = or i1 %15, %16
  %18 = or i1 %13, %14
  br i1 %17, label %19, label %49

; <label>:19:                                     ; preds = %5, %49
  %20 = load i32, i32* @x.17
  %21 = load i32, i32* @y.18
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 true, true
  %32 = and i1 %29, true
  %33 = and i1 %27, %31
  %34 = and i1 %30, true
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 true, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  br i1 %43, label %45, label %49

; <label>:45:                                     ; preds = %19
  ret void

; <label>:46:                                     ; preds = %1
  %47 = landingpad { i8*, i32 }
          catch i8* null
  %48 = extractvalue { i8*, i32 } %47, 0
  call void @__clang_call_terminate(i8* %48) #9
  unreachable

; <label>:49:                                     ; preds = %19, %5
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.13"*) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.19
  %3 = load i32, i32* @y.20
  %4 = sub i32 %2, 886324500
  %5 = sub i32 %4, 1
  %6 = add i32 %5, 886324500
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %67

; <label>:16:                                     ; preds = %1, %67
  %17 = alloca %"class.std::vector.13"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %17, align 8
  %20 = load %"class.std::vector.13"*, %"class.std::vector.13"** %17, align 8
  %21 = bitcast %"class.std::vector.13"* %20 to %"struct.std::_Vector_base.14"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %22, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = bitcast %"class.std::vector.13"* %20 to %"struct.std::_Vector_base.14"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %26, i32 0, i32 1
  %28 = load i32*, i32** %27, align 8
  %29 = bitcast %"class.std::vector.13"* %20 to %"struct.std::_Vector_base.14"*
  %30 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %29) #11
  %31 = load i32, i32* @x.19
  %32 = load i32, i32* @y.20
  %33 = sub i32 %31, -2096160896
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -2096160896
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  br i1 %55, label %57, label %67

; <label>:57:                                     ; preds = %16
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %24, i32* %28, %"class.std::allocator.0"* dereferenceable(1) %30)
          to label %58 unwind label %60

; <label>:58:                                     ; preds = %57
  %59 = bitcast %"class.std::vector.13"* %20 to %"struct.std::_Vector_base.14"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.14"* %59) #11
  ret void

; <label>:60:                                     ; preds = %57
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %18, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %19, align 4
  %64 = bitcast %"class.std::vector.13"* %20 to %"struct.std::_Vector_base.14"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.14"* %64) #11
  br label %65

; <label>:65:                                     ; preds = %60
  %66 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %66) #9
  unreachable

; <label>:67:                                     ; preds = %16, %1
  %68 = alloca %"class.std::vector.13"*, align 8
  %69 = alloca i8*
  %70 = alloca i32
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %68, align 8
  %71 = load %"class.std::vector.13"*, %"class.std::vector.13"** %68, align 8
  %72 = bitcast %"class.std::vector.13"* %71 to %"struct.std::_Vector_base.14"*
  %73 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %72, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %73, i32 0, i32 0
  %75 = load i32*, i32** %74, align 8
  %76 = bitcast %"class.std::vector.13"* %71 to %"struct.std::_Vector_base.14"*
  %77 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %77, i32 0, i32 1
  %79 = load i32*, i32** %78, align 8
  %80 = bitcast %"class.std::vector.13"* %71 to %"struct.std::_Vector_base.14"*
  %81 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %80) #11
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EE6assignEmRKS4_(%"class.std::vector"*, i64, %"class.std::stack"* dereferenceable(80)) #2 comdat align 2 {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::stack"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::stack"* %2, %"class.std::stack"** %6, align 8
  %7 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load %"class.std::stack"*, %"class.std::stack"** %6, align 8
  call void @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EE14_M_fill_assignEmRKS4_(%"class.std::vector"* %7, i64 %8, %"class.std::stack"* dereferenceable(80) %9)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEEC2Ev(%"class.std::deque"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2Ev(%"class.std::_Deque_base"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5stackIiSt5dequeIiSaIiEEEC2EOS2_(%"class.std::stack"*, %"class.std::deque"* dereferenceable(80)) unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.std::stack"*, align 8
  %4 = alloca %"class.std::deque"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %3, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %4, align 8
  %5 = load %"class.std::stack"*, %"class.std::stack"** %3, align 8
  %6 = getelementptr inbounds %"class.std::stack", %"class.std::stack"* %5, i32 0, i32 0
  %7 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %8 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80) %7) #11
  call void @_ZNSt5dequeIiSaIiEEC2EOS1_(%"class.std::deque"* %6, %"class.std::deque"* dereferenceable(80) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5stackIiSt5dequeIiSaIiEEED2Ev(%"class.std::stack"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::stack"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %2, align 8
  %3 = load %"class.std::stack"*, %"class.std::stack"** %2, align 8
  %4 = getelementptr inbounds %"class.std::stack", %"class.std::stack"* %3, i32 0, i32 0
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %4) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"*) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::deque"*, align 8
  %3 = alloca %"struct.std::_Deque_iterator", align 8
  %4 = alloca %"struct.std::_Deque_iterator", align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  call void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* sret %3, %"class.std::deque"* %7) #11
  call void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator"* sret %4, %"class.std::deque"* %7) #11
  %8 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %9 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %8) #11
  invoke void @_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_(%"class.std::deque"* %7, %"struct.std::_Deque_iterator"* %3, %"struct.std::_Deque_iterator"* %4, %"class.std::allocator.0"* dereferenceable(1) %9)
          to label %10 unwind label %53

; <label>:10:                                     ; preds = %1
  %11 = load i32, i32* @x.29
  %12 = load i32, i32* @y.30
  %13 = sub i32 0, 1
  %14 = add i32 %11, %13
  %15 = sub i32 %11, 1
  %16 = mul i32 %11, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %12, 10
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  br i1 %22, label %24, label %60

; <label>:24:                                     ; preds = %10, %60
  %25 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %25) #11
  %26 = load i32, i32* @x.29
  %27 = load i32, i32* @y.30
  %28 = sub i32 %26, -943883015
  %29 = sub i32 %28, 1
  %30 = add i32 %29, -943883015
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 false, true
  %39 = and i1 %36, false
  %40 = and i1 %34, %38
  %41 = and i1 %37, false
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 false, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  br i1 %50, label %52, label %60

; <label>:52:                                     ; preds = %24
  ret void

; <label>:53:                                     ; preds = %1
  %54 = landingpad { i8*, i32 }
          catch i8* null
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %5, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %6, align 4
  %57 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %57) #11
  br label %58

; <label>:58:                                     ; preds = %53
  %59 = load i8*, i8** %5, align 8
  call void @__clang_call_terminate(i8* %59) #9
  unreachable

; <label>:60:                                     ; preds = %24, %10
  %61 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %61) #11
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE9push_backEOx(%"class.std::vector.3"*, i64* dereferenceable(8)) #2 comdat align 2 {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %6 = load i64*, i64** %4, align 8
  %7 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %6) #11
  call void @_ZNSt6vectorIxSaIxEE12emplace_backIJxEEEvDpOT_(%"class.std::vector.3"* %5, i64* dereferenceable(8) %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_Z4relov() #2 comdat {
  %1 = alloca i64, align 8
  %2 = alloca i8, align 1
  store i64 0, i64* %1, align 8
  %3 = call signext i8 @_Z3Getv()
  store i8 %3, i8* %2, align 1
  %4 = alloca i32
  store i32 180320557, i32* %4
  br label %5

; <label>:5:                                      ; preds = %0, %105
  %6 = load i32, i32* %4
  switch i32 %6, label %7 [
    i32 180320557, label %8
    i32 -674225886, label %25
    i32 -1278696845, label %52
    i32 1011243305, label %80
    i32 -235421599, label %81
    i32 -1434292100, label %82
    i32 -1697343146, label %88
    i32 -1627573107, label %101
    i32 1945108300, label %103
  ]

; <label>:7:                                      ; preds = %5
  br label %105

; <label>:8:                                      ; preds = %5
  %9 = load i8, i8* %2, align 1
  %10 = sext i8 %9 to i32
  %11 = call i32 @isdigit(i32 %10) #12
  %12 = icmp ne i32 %11, 0
  %13 = xor i1 %12, true
  %14 = and i1 true, %13
  %15 = xor i1 true, true
  %16 = and i1 %12, %15
  %17 = xor i1 true, true
  %18 = and i1 %17, true
  %19 = and i1 true, %15
  %20 = or i1 %14, %16
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = xor i1 %12, true
  %24 = select i1 %22, i32 -674225886, i32 -235421599
  store i32 %24, i32* %4
  br label %105

; <label>:25:                                     ; preds = %5
  %26 = load i32, i32* @x.33
  %27 = load i32, i32* @y.34
  %28 = sub i32 0, 1
  %29 = add i32 %26, %28
  %30 = sub i32 %26, 1
  %31 = mul i32 %26, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %27, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 true, true
  %38 = and i1 %35, true
  %39 = and i1 %33, %37
  %40 = and i1 %36, true
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 true, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  %51 = select i1 %49, i32 -1278696845, i32 1945108300
  store i32 %51, i32* %4
  br label %105

; <label>:52:                                     ; preds = %5
  %53 = call signext i8 @_Z3Getv()
  store i8 %53, i8* %2, align 1
  %54 = load i32, i32* @x.33
  %55 = load i32, i32* @y.34
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 1011243305, i32 1945108300
  store i32 %79, i32* %4
  br label %105

; <label>:80:                                     ; preds = %5
  store i32 180320557, i32* %4
  br label %105

; <label>:81:                                     ; preds = %5
  store i32 -1434292100, i32* %4
  br label %105

; <label>:82:                                     ; preds = %5
  %83 = load i8, i8* %2, align 1
  %84 = sext i8 %83 to i32
  %85 = call i32 @isdigit(i32 %84) #12
  %86 = icmp ne i32 %85, 0
  %87 = select i1 %86, i32 -1697343146, i32 -1627573107
  store i32 %87, i32* %4
  br label %105

; <label>:88:                                     ; preds = %5
  %89 = load i64, i64* %1, align 8
  %90 = mul nsw i64 %89, 10
  %91 = load i8, i8* %2, align 1
  %92 = sext i8 %91 to i64
  %93 = add i64 %90, 5424735117553023949
  %94 = add i64 %93, %92
  %95 = sub i64 %94, 5424735117553023949
  %96 = add nsw i64 %90, %92
  %97 = sub i64 0, 48
  %98 = add i64 %95, %97
  %99 = sub nsw i64 %95, 48
  store i64 %98, i64* %1, align 8
  %100 = call signext i8 @_Z3Getv()
  store i8 %100, i8* %2, align 1
  store i32 -1434292100, i32* %4
  br label %105

; <label>:101:                                    ; preds = %5
  %102 = load i64, i64* %1, align 8
  ret i64 %102

; <label>:103:                                    ; preds = %5
  %104 = call signext i8 @_Z3Getv()
  store i8 %104, i8* %2, align 1
  store i32 -1278696845, i32* %4
  br label %105

; <label>:105:                                    ; preds = %103, %88, %82, %81, %80, %52, %25, %8, %7
  br label %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.13"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.8"*, i64) #1 comdat align 2 {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %6 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.13"*, %"class.std::vector.13"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::vector.13", %"class.std::vector.13"* %9, i64 %10
  ret %"class.std::vector.13"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE9push_backEOi(%"class.std::vector.13"*, i32* dereferenceable(4)) #2 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.37
  %6 = load i32, i32* @y.38
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1945837778, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %54
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1945837778, label %18
    i32 -788852611, label %26
    i32 572710240, label %47
    i32 589856385, label %48
  ]

; <label>:17:                                     ; preds = %15
  br label %54

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -788852611, i32 589856385
  store i32 %25, i32* %14
  br label %54

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.13"*, align 8
  %28 = alloca i32*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %27, align 8
  store i32* %1, i32** %28, align 8
  %29 = load %"class.std::vector.13"*, %"class.std::vector.13"** %27, align 8
  %30 = load i32*, i32** %28, align 8
  %31 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %30) #11
  call void @_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_(%"class.std::vector.13"* %29, i32* dereferenceable(4) %31)
  %32 = load i32, i32* @x.37
  %33 = load i32, i32* @y.38
  %34 = sub i32 %32, -947250632
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -947250632
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 572710240, i32 589856385
  store i32 %46, i32* %14
  br label %54

; <label>:47:                                     ; preds = %15
  ret void

; <label>:48:                                     ; preds = %15
  %49 = alloca %"class.std::vector.13"*, align 8
  %50 = alloca i32*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %49, align 8
  store i32* %1, i32** %50, align 8
  %51 = load %"class.std::vector.13"*, %"class.std::vector.13"** %49, align 8
  %52 = load i32*, i32** %50, align 8
  %53 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %52) #11
  call void @_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_(%"class.std::vector.13"* %51, i32* dereferenceable(4) %53)
  store i32 -788852611, i32* %14
  br label %54

; <label>:54:                                     ; preds = %48, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EE4sizeEv(%"class.std::vector"*) #1 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"class.std::stack"*, %"class.std::stack"** %6, align 8
  %8 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::stack"*, %"class.std::stack"** %10, align 8
  %12 = ptrtoint %"class.std::stack"* %7 to i64
  %13 = ptrtoint %"class.std::stack"* %11 to i64
  %14 = add i64 %12, 1102221386728940462
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, 1102221386728940462
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 80
  ret i64 %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.13"*, i64) #1 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.41
  %7 = load i32, i32* @y.42
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1341063489, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %88
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1341063489, label %19
    i32 1253950628, label %39
    i32 -1003243363, label %76
    i32 1034035243, label %78
  ]

; <label>:18:                                     ; preds = %16
  br label %88

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1253950628, i32 1034035243
  store i32 %38, i32* %15
  br label %88

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.13"*, align 8
  %41 = alloca i64, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"class.std::vector.13"*, %"class.std::vector.13"** %40, align 8
  %43 = bitcast %"class.std::vector.13"* %42 to %"struct.std::_Vector_base.14"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %44, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  %47 = load i64, i64* %41, align 8
  %48 = getelementptr inbounds i32, i32* %46, i64 %47
  store i32* %48, i32** %3
  %49 = load i32, i32* @x.41
  %50 = load i32, i32* @y.42
  %51 = sub i32 %49, -780836074
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -780836074
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -1003243363, i32 1034035243
  store i32 %75, i32* %15
  br label %88

; <label>:76:                                     ; preds = %16
  %77 = load volatile i32*, i32** %3
  ret i32* %77

; <label>:78:                                     ; preds = %16
  %79 = alloca %"class.std::vector.13"*, align 8
  %80 = alloca i64, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %79, align 8
  store i64 %1, i64* %80, align 8
  %81 = load %"class.std::vector.13"*, %"class.std::vector.13"** %79, align 8
  %82 = bitcast %"class.std::vector.13"* %81 to %"struct.std::_Vector_base.14"*
  %83 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %82, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %83, i32 0, i32 0
  %85 = load i32*, i32** %84, align 8
  %86 = load i64, i64* %80, align 8
  %87 = getelementptr inbounds i32, i32* %85, i64 %86
  store i32 1253950628, i32* %15
  br label %88

; <label>:88:                                     ; preds = %78, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::stack"* @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EEixEm(%"class.std::vector"*, i64) #1 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::stack"*, %"class.std::stack"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::stack", %"class.std::stack"* %9, i64 %10
  ret %"class.std::stack"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt5stackIiSt5dequeIiSaIiEEE5emptyEv(%"class.std::stack"*) #1 comdat align 2 {
  %2 = alloca %"class.std::stack"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %2, align 8
  %3 = load %"class.std::stack"*, %"class.std::stack"** %2, align 8
  %4 = getelementptr inbounds %"class.std::stack", %"class.std::stack"* %3, i32 0, i32 0
  %5 = call zeroext i1 @_ZNKSt5dequeIiSaIiEE5emptyEv(%"class.std::deque"* %4) #11
  ret i1 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt5stackIiSt5dequeIiSaIiEEE3topEv(%"class.std::stack"*) #1 comdat align 2 {
  %2 = alloca %"class.std::stack"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %2, align 8
  %3 = load %"class.std::stack"*, %"class.std::stack"** %2, align 8
  %4 = getelementptr inbounds %"class.std::stack", %"class.std::stack"* %3, i32 0, i32 0
  %5 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEE4backEv(%"class.std::deque"* %4) #11
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.3"*, i64) #1 comdat align 2 {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %6 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds i64, i64* %9, i64 %10
  ret i64* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5stackIiSt5dequeIiSaIiEEE3popEv(%"class.std::stack"*) #1 comdat align 2 {
  %2 = alloca %"class.std::stack"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %2, align 8
  %3 = load %"class.std::stack"*, %"class.std::stack"** %2, align 8
  %4 = getelementptr inbounds %"class.std::stack", %"class.std::stack"* %3, i32 0, i32 0
  call void @_ZNSt5dequeIiSaIiEE8pop_backEv(%"class.std::deque"* %4) #11
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5stackIiSt5dequeIiSaIiEEE4pushERKi(%"class.std::stack"*, i32* dereferenceable(4)) #2 comdat align 2 {
  %3 = alloca %"class.std::stack"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::stack"*, %"class.std::stack"** %3, align 8
  %6 = getelementptr inbounds %"class.std::stack", %"class.std::stack"* %5, i32 0, i32 0
  %7 = load i32*, i32** %4, align 8
  call void @_ZNSt5dequeIiSaIiEE9push_backERKi(%"class.std::deque"* %6, i32* dereferenceable(4) %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #1 comdat {
  %3 = alloca i64*
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  store i64* %0, i64** %7, align 8
  store i64* %1, i64** %8, align 8
  %9 = load i64*, i64** %7, align 8
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %5
  %11 = load i64*, i64** %8, align 8
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %4
  %13 = alloca i32
  store i32 -344130064, i32* %13
  br label %14

; <label>:14:                                     ; preds = %2, %120
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -344130064, label %17
    i32 -2115487241, label %22
    i32 380626265, label %38
    i32 1022452533, label %54
    i32 250953884, label %55
    i32 1813270900, label %57
    i32 -1826647804, label %85
    i32 454750276, label %114
    i32 410298972, label %116
    i32 1262192547, label %118
  ]

; <label>:16:                                     ; preds = %14
  br label %120

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %5
  %19 = load volatile i64, i64* %4
  %20 = icmp slt i64 %18, %19
  %21 = select i1 %20, i32 -2115487241, i32 250953884
  store i32 %21, i32* %13
  br label %120

; <label>:22:                                     ; preds = %14
  %23 = load i32, i32* @x.55
  %24 = load i32, i32* @y.56
  %25 = add i32 %23, 799814181
  %26 = sub i32 %25, 1
  %27 = sub i32 %26, 799814181
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  %37 = select i1 %35, i32 380626265, i32 410298972
  store i32 %37, i32* %13
  br label %120

; <label>:38:                                     ; preds = %14
  %39 = load i64*, i64** %8, align 8
  store i64* %39, i64** %6, align 8
  %40 = load i32, i32* @x.55
  %41 = load i32, i32* @y.56
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 1022452533, i32 410298972
  store i32 %53, i32* %13
  br label %120

; <label>:54:                                     ; preds = %14
  store i32 1813270900, i32* %13
  br label %120

; <label>:55:                                     ; preds = %14
  %56 = load i64*, i64** %7, align 8
  store i64* %56, i64** %6, align 8
  store i32 1813270900, i32* %13
  br label %120

; <label>:57:                                     ; preds = %14
  %58 = load i32, i32* @x.55
  %59 = load i32, i32* @y.56
  %60 = add i32 %58, -279477168
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, -279477168
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 true, true
  %71 = and i1 %68, true
  %72 = and i1 %66, %70
  %73 = and i1 %69, true
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 true, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 -1826647804, i32 1262192547
  store i32 %84, i32* %13
  br label %120

; <label>:85:                                     ; preds = %14
  %86 = load i64*, i64** %6, align 8
  store i64* %86, i64** %3
  %87 = load i32, i32* @x.55
  %88 = load i32, i32* @y.56
  %89 = add i32 %87, -23716018
  %90 = sub i32 %89, 1
  %91 = sub i32 %90, -23716018
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 true, true
  %100 = and i1 %97, true
  %101 = and i1 %95, %99
  %102 = and i1 %98, true
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 true, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  %113 = select i1 %111, i32 454750276, i32 1262192547
  store i32 %113, i32* %13
  br label %120

; <label>:114:                                    ; preds = %14
  %115 = load volatile i64*, i64** %3
  ret i64* %115

; <label>:116:                                    ; preds = %14
  %117 = load i64*, i64** %8, align 8
  store i64* %117, i64** %6, align 8
  store i32 380626265, i32* %13
  br label %120

; <label>:118:                                    ; preds = %14
  %119 = load i64*, i64** %6, align 8
  store i32 -1826647804, i32* %13
  br label %120

; <label>:120:                                    ; preds = %118, %116, %85, %57, %55, %54, %38, %22, %17, %16
  br label %14
}

declare i32 @printf(i8*, ...) #3

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.8"*) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.57
  %3 = load i32, i32* @y.58
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %94

; <label>:15:                                     ; preds = %1, %94
  %16 = alloca %"class.std::vector.8"*, align 8
  %17 = alloca i8*
  %18 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %16, align 8
  %19 = load %"class.std::vector.8"*, %"class.std::vector.8"** %16, align 8
  %20 = bitcast %"class.std::vector.8"* %19 to %"struct.std::_Vector_base.9"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %21, i32 0, i32 0
  %23 = load %"class.std::vector.13"*, %"class.std::vector.13"** %22, align 8
  %24 = bitcast %"class.std::vector.8"* %19 to %"struct.std::_Vector_base.9"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %25, i32 0, i32 1
  %27 = load %"class.std::vector.13"*, %"class.std::vector.13"** %26, align 8
  %28 = bitcast %"class.std::vector.8"* %19 to %"struct.std::_Vector_base.9"*
  %29 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %28) #11
  %30 = load i32, i32* @x.57
  %31 = load i32, i32* @y.58
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  br i1 %41, label %43, label %94

; <label>:43:                                     ; preds = %15
  invoke void @_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::vector.13"* %23, %"class.std::vector.13"* %27, %"class.std::allocator.10"* dereferenceable(1) %29)
          to label %44 unwind label %46

; <label>:44:                                     ; preds = %43
  %45 = bitcast %"class.std::vector.8"* %19 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.9"* %45) #11
  ret void

; <label>:46:                                     ; preds = %43
  %47 = landingpad { i8*, i32 }
          catch i8* null
  %48 = extractvalue { i8*, i32 } %47, 0
  store i8* %48, i8** %17, align 8
  %49 = extractvalue { i8*, i32 } %47, 1
  store i32 %49, i32* %18, align 4
  %50 = bitcast %"class.std::vector.8"* %19 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.9"* %50) #11
  br label %51

; <label>:51:                                     ; preds = %46
  %52 = load i32, i32* @x.57
  %53 = load i32, i32* @y.58
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  br i1 %63, label %65, label %109

; <label>:65:                                     ; preds = %51, %109
  %66 = load i8*, i8** %17, align 8
  call void @__clang_call_terminate(i8* %66) #9
  %67 = load i32, i32* @x.57
  %68 = load i32, i32* @y.58
  %69 = add i32 %67, -167858785
  %70 = sub i32 %69, 1
  %71 = sub i32 %70, -167858785
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 true, true
  %80 = and i1 %77, true
  %81 = and i1 %75, %79
  %82 = and i1 %78, true
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 true, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  br i1 %91, label %93, label %109

; <label>:93:                                     ; preds = %65
  unreachable

; <label>:94:                                     ; preds = %15, %1
  %95 = alloca %"class.std::vector.8"*, align 8
  %96 = alloca i8*
  %97 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %95, align 8
  %98 = load %"class.std::vector.8"*, %"class.std::vector.8"** %95, align 8
  %99 = bitcast %"class.std::vector.8"* %98 to %"struct.std::_Vector_base.9"*
  %100 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %99, i32 0, i32 0
  %101 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %100, i32 0, i32 0
  %102 = load %"class.std::vector.13"*, %"class.std::vector.13"** %101, align 8
  %103 = bitcast %"class.std::vector.8"* %98 to %"struct.std::_Vector_base.9"*
  %104 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %103, i32 0, i32 0
  %105 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %104, i32 0, i32 1
  %106 = load %"class.std::vector.13"*, %"class.std::vector.13"** %105, align 8
  %107 = bitcast %"class.std::vector.8"* %98 to %"struct.std::_Vector_base.9"*
  %108 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %107) #11
  br label %15

; <label>:109:                                    ; preds = %65, %51
  %110 = load i8*, i8** %17, align 8
  call void @__clang_call_terminate(i8* %110) #9
  br label %65
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.3"*) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.3"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %6 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %15 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %14) #11
  invoke void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %9, i64* %13, %"class.std::allocator.5"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.4"* %17) #11
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.4"* %22) #11
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i32, i32* @x.59
  %25 = load i32, i32* @y.60
  %26 = sub i32 0, 1
  %27 = add i32 %24, %26
  %28 = sub i32 %24, 1
  %29 = mul i32 %24, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %25, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 false, true
  %36 = and i1 %33, false
  %37 = and i1 %31, %35
  %38 = and i1 %34, false
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 false, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  br i1 %47, label %49, label %66

; <label>:49:                                     ; preds = %23, %66
  %50 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %50) #9
  %51 = load i32, i32* @x.59
  %52 = load i32, i32* @y.60
  %53 = sub i32 %51, -616804692
  %54 = sub i32 %53, 1
  %55 = add i32 %54, -616804692
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  br i1 %63, label %65, label %66

; <label>:65:                                     ; preds = %49
  unreachable

; <label>:66:                                     ; preds = %49, %23
  %67 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %67) #9
  br label %49
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EED2Ev(%"class.std::vector"*) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.61
  %3 = load i32, i32* @y.62
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 true, true
  %14 = and i1 %11, true
  %15 = and i1 %9, %13
  %16 = and i1 %12, true
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 true, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %66

; <label>:27:                                     ; preds = %1, %66
  %28 = alloca %"class.std::vector"*, align 8
  %29 = alloca i8*
  %30 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %28, align 8
  %31 = load %"class.std::vector"*, %"class.std::vector"** %28, align 8
  %32 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load %"class.std::stack"*, %"class.std::stack"** %34, align 8
  %36 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %37, i32 0, i32 1
  %39 = load %"class.std::stack"*, %"class.std::stack"** %38, align 8
  %40 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  %41 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %40) #11
  %42 = load i32, i32* @x.61
  %43 = load i32, i32* @y.62
  %44 = add i32 %42, 959625461
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 959625461
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  br i1 %54, label %56, label %66

; <label>:56:                                     ; preds = %27
  invoke void @_ZSt8_DestroyIPSt5stackIiSt5dequeIiSaIiEEES4_EvT_S6_RSaIT0_E(%"class.std::stack"* %35, %"class.std::stack"* %39, %"class.std::allocator"* dereferenceable(1) %41)
          to label %57 unwind label %59

; <label>:57:                                     ; preds = %56
  %58 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EED2Ev(%"struct.std::_Vector_base"* %58) #11
  ret void

; <label>:59:                                     ; preds = %56
  %60 = landingpad { i8*, i32 }
          catch i8* null
  %61 = extractvalue { i8*, i32 } %60, 0
  store i8* %61, i8** %29, align 8
  %62 = extractvalue { i8*, i32 } %60, 1
  store i32 %62, i32* %30, align 4
  %63 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EED2Ev(%"struct.std::_Vector_base"* %63) #11
  br label %64

; <label>:64:                                     ; preds = %59
  %65 = load i8*, i8** %29, align 8
  call void @__clang_call_terminate(i8* %65) #9
  unreachable

; <label>:66:                                     ; preds = %27, %1
  %67 = alloca %"class.std::vector"*, align 8
  %68 = alloca i8*
  %69 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %67, align 8
  %70 = load %"class.std::vector"*, %"class.std::vector"** %67, align 8
  %71 = bitcast %"class.std::vector"* %70 to %"struct.std::_Vector_base"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %72, i32 0, i32 0
  %74 = load %"class.std::stack"*, %"class.std::stack"** %73, align 8
  %75 = bitcast %"class.std::vector"* %70 to %"struct.std::_Vector_base"*
  %76 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %76, i32 0, i32 1
  %78 = load %"class.std::stack"*, %"class.std::stack"** %77, align 8
  %79 = bitcast %"class.std::vector"* %70 to %"struct.std::_Vector_base"*
  %80 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %79) #11
  br label %27
}

; Function Attrs: noinline uwtable
define linkonce_odr signext i8 @_Z3Getv() #2 comdat {
  %1 = alloca i1
  %2 = alloca i8*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.63
  %6 = load i32, i32* @y.64
  %7 = add i32 %5, -543298606
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -543298606
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1628600160, i32* %15
  br label %16

; <label>:16:                                     ; preds = %0, %107
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1628600160, label %19
    i32 -691063522, label %27
    i32 -2101558636, label %46
    i32 -483697330, label %49
    i32 1321630221, label %64
    i32 1210184289, label %82
    i32 -980992320, label %83
    i32 -1761524577, label %88
    i32 -116404098, label %90
    i32 1697213983, label %95
    i32 -790715104, label %98
    i32 -1347013578, label %103
  ]

; <label>:18:                                     ; preds = %16
  br label %107

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -691063522, i32 -790715104
  store i32 %26, i32* %15
  br label %107

; <label>:27:                                     ; preds = %16
  %28 = alloca i8, align 1
  store i8* %28, i8** %2
  %29 = load i8*, i8** @H, align 8
  %30 = load i8*, i8** @T, align 8
  %31 = icmp eq i8* %29, %30
  store i1 %31, i1* %1
  %32 = load i32, i32* @x.63
  %33 = load i32, i32* @y.64
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -2101558636, i32 -790715104
  store i32 %45, i32* %15
  br label %107

; <label>:46:                                     ; preds = %16
  %47 = load volatile i1, i1* %1
  %48 = select i1 %47, i32 -483697330, i32 -980992320
  store i32 %48, i32* %15
  br label %107

; <label>:49:                                     ; preds = %16
  %50 = load i32, i32* @x.63
  %51 = load i32, i32* @y.64
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 1321630221, i32 -1347013578
  store i32 %63, i32* %15
  br label %107

; <label>:64:                                     ; preds = %16
  store i8* getelementptr inbounds ([2000000000 x i8], [2000000000 x i8]* @buf, i32 0, i32 0), i8** @H, align 8
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %66 = call i64 @fread(i8* getelementptr inbounds ([2000000000 x i8], [2000000000 x i8]* @buf, i32 0, i32 0), i64 1, i64 2000000000, %struct._IO_FILE* %65)
  %67 = getelementptr inbounds i8, i8* getelementptr inbounds ([2000000000 x i8], [2000000000 x i8]* @buf, i32 0, i32 0), i64 %66
  store i8* %67, i8** @T, align 8
  %68 = load i32, i32* @x.63
  %69 = load i32, i32* @y.64
  %70 = sub i32 0, 1
  %71 = add i32 %68, %70
  %72 = sub i32 %68, 1
  %73 = mul i32 %68, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %69, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  %81 = select i1 %79, i32 1210184289, i32 -1347013578
  store i32 %81, i32* %15
  br label %107

; <label>:82:                                     ; preds = %16
  store i32 -980992320, i32* %15
  br label %107

; <label>:83:                                     ; preds = %16
  %84 = load i8*, i8** @H, align 8
  %85 = load i8*, i8** @T, align 8
  %86 = icmp eq i8* %84, %85
  %87 = select i1 %86, i32 -1761524577, i32 -116404098
  store i32 %87, i32* %15
  br label %107

; <label>:88:                                     ; preds = %16
  %89 = load volatile i8*, i8** %2
  store i8 -1, i8* %89, align 1
  store i32 1697213983, i32* %15
  br label %107

; <label>:90:                                     ; preds = %16
  %91 = load i8*, i8** @H, align 8
  %92 = getelementptr inbounds i8, i8* %91, i32 1
  store i8* %92, i8** @H, align 8
  %93 = load i8, i8* %91, align 1
  %94 = load volatile i8*, i8** %2
  store i8 %93, i8* %94, align 1
  store i32 1697213983, i32* %15
  br label %107

; <label>:95:                                     ; preds = %16
  %96 = load volatile i8*, i8** %2
  %97 = load i8, i8* %96, align 1
  ret i8 %97

; <label>:98:                                     ; preds = %16
  %99 = alloca i8, align 1
  %100 = load i8*, i8** @H, align 8
  %101 = load i8*, i8** @T, align 8
  %102 = icmp eq i8* %100, %101
  store i32 -691063522, i32* %15
  br label %107

; <label>:103:                                    ; preds = %16
  store i8* getelementptr inbounds ([2000000000 x i8], [2000000000 x i8]* @buf, i32 0, i32 0), i8** @H, align 8
  %104 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %105 = call i64 @fread(i8* getelementptr inbounds ([2000000000 x i8], [2000000000 x i8]* @buf, i32 0, i32 0), i64 1, i64 2000000000, %struct._IO_FILE* %104)
  %106 = getelementptr inbounds i8, i8* getelementptr inbounds ([2000000000 x i8], [2000000000 x i8]* @buf, i32 0, i32 0), i64 %105
  store i8* %106, i8** @T, align 8
  store i32 1321630221, i32* %15
  br label %107

; <label>:107:                                    ; preds = %103, %98, %90, %88, %83, %82, %64, %49, %46, %27, %19, %18
  br label %16
}

; Function Attrs: nounwind readonly
declare i32 @isdigit(i32) #4

declare i64 @fread(i8*, i64, i64, %struct._IO_FILE*) #3

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EEC2Ev(%"struct.std::_Vector_base"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #5 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.67
  %5 = load i32, i32* @y.68
  %6 = add i32 %4, 2122911956
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 2122911956
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1274960638, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %57
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1274960638, label %18
    i32 1314302063, label %38
    i32 -1907992554, label %54
    i32 272615506, label %55
  ]

; <label>:17:                                     ; preds = %15
  br label %57

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1314302063, i32 272615506
  store i32 %37, i32* %14
  br label %57

; <label>:38:                                     ; preds = %15
  %39 = call i8* @__cxa_begin_catch(i8* %0) #11
  call void @_ZSt9terminatev() #9
  %40 = load i32, i32* @x.67
  %41 = load i32, i32* @y.68
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -1907992554, i32 272615506
  store i32 %53, i32* %14
  br label %57

; <label>:54:                                     ; preds = %15
  unreachable

; <label>:55:                                     ; preds = %15
  %56 = call i8* @__cxa_begin_catch(i8* %0) #11
  call void @_ZSt9terminatev() #9
  store i32 1314302063, i32* %14
  br label %57

; <label>:57:                                     ; preds = %55, %38, %18, %17
  br label %15
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaISt5stackIiSt5dequeIiSaIiEEEEC2Ev(%"class.std::allocator"* %4) #11
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %3, i32 0, i32 0
  store %"class.std::stack"* null, %"class.std::stack"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %3, i32 0, i32 1
  store %"class.std::stack"* null, %"class.std::stack"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %3, i32 0, i32 2
  store %"class.std::stack"* null, %"class.std::stack"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt5stackIiSt5dequeIiSaIiEEEEC2Ev(%"class.std::allocator"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5stackIiSt5dequeIiSaIiEEEEC2Ev(%"class.__gnu_cxx::new_allocator"* %4) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5stackIiSt5dequeIiSaIiEEEEC2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.73
  %5 = load i32, i32* @y.74
  %6 = sub i32 %4, 1628752267
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1628752267
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1546391629, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1546391629, label %18
    i32 366838881, label %38
    i32 -1837100848, label %55
    i32 393112571, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 366838881, i32 393112571
  store i32 %37, i32* %14
  br label %59

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %39, align 8
  %41 = load i32, i32* @x.73
  %42 = load i32, i32* @y.74
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -1837100848, i32 393112571
  store i32 %54, i32* %14
  br label %59

; <label>:55:                                     ; preds = %15
  ret void

; <label>:56:                                     ; preds = %15
  %57 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %57, align 8
  store i32 366838881, i32* %14
  br label %59

; <label>:59:                                     ; preds = %56, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt5stackIiSt5dequeIiSaIiEEES4_EvT_S6_RSaIT0_E(%"class.std::stack"*, %"class.std::stack"*, %"class.std::allocator"* dereferenceable(1)) #2 comdat {
  %4 = alloca %"class.std::stack"*, align 8
  %5 = alloca %"class.std::stack"*, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %4, align 8
  store %"class.std::stack"* %1, %"class.std::stack"** %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %7 = load %"class.std::stack"*, %"class.std::stack"** %4, align 8
  %8 = load %"class.std::stack"*, %"class.std::stack"** %5, align 8
  call void @_ZSt8_DestroyIPSt5stackIiSt5dequeIiSaIiEEEEvT_S6_(%"class.std::stack"* %7, %"class.std::stack"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.79
  %3 = load i32, i32* @y.80
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 true, true
  %14 = and i1 %11, true
  %15 = and i1 %9, %13
  %16 = and i1 %12, true
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 true, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %72

; <label>:27:                                     ; preds = %1, %72
  %28 = alloca %"struct.std::_Vector_base"*, align 8
  %29 = alloca i8*
  %30 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %28, align 8
  %31 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %28, align 8
  %32 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %32, i32 0, i32 0
  %34 = load %"class.std::stack"*, %"class.std::stack"** %33, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %35, i32 0, i32 2
  %37 = load %"class.std::stack"*, %"class.std::stack"** %36, align 8
  %38 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %38, i32 0, i32 0
  %40 = load %"class.std::stack"*, %"class.std::stack"** %39, align 8
  %41 = ptrtoint %"class.std::stack"* %37 to i64
  %42 = ptrtoint %"class.std::stack"* %40 to i64
  %43 = sub i64 %41, -2259888151889109850
  %44 = sub i64 %43, %42
  %45 = add i64 %44, -2259888151889109850
  %46 = sub i64 %41, %42
  %47 = sdiv exact i64 %45, 80
  %48 = load i32, i32* @x.79
  %49 = load i32, i32* @y.80
  %50 = sub i32 %48, -416155699
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -416155699
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  br i1 %60, label %62, label %72

; <label>:62:                                     ; preds = %27
  invoke void @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base"* %31, %"class.std::stack"* %34, i64 %47)
          to label %63 unwind label %65

; <label>:63:                                     ; preds = %62
  %64 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %64) #11
  ret void

; <label>:65:                                     ; preds = %62
  %66 = landingpad { i8*, i32 }
          catch i8* null
  %67 = extractvalue { i8*, i32 } %66, 0
  store i8* %67, i8** %29, align 8
  %68 = extractvalue { i8*, i32 } %66, 1
  store i32 %68, i32* %30, align 4
  %69 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %69) #11
  br label %70

; <label>:70:                                     ; preds = %65
  %71 = load i8*, i8** %29, align 8
  call void @__clang_call_terminate(i8* %71) #9
  unreachable

; <label>:72:                                     ; preds = %27, %1
  %73 = alloca %"struct.std::_Vector_base"*, align 8
  %74 = alloca i8*
  %75 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %73, align 8
  %76 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %73, align 8
  %77 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %77, i32 0, i32 0
  %79 = load %"class.std::stack"*, %"class.std::stack"** %78, align 8
  %80 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %76, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %80, i32 0, i32 2
  %82 = load %"class.std::stack"*, %"class.std::stack"** %81, align 8
  %83 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %76, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %83, i32 0, i32 0
  %85 = load %"class.std::stack"*, %"class.std::stack"** %84, align 8
  %86 = ptrtoint %"class.std::stack"* %82 to i64
  %87 = ptrtoint %"class.std::stack"* %85 to i64
  %88 = add i64 0, -6843660588407517508
  %89 = sub i64 %88, %86
  %90 = sub i64 %89, -6843660588407517508
  %91 = sub i64 0, %86
  %92 = sub i64 0, %90
  %93 = sub i64 0, %87
  %94 = add i64 %92, %93
  %95 = sub i64 0, %94
  %96 = add i64 %90, %87
  %97 = shl i64 %86, %87
  %98 = sub i64 0, -1340545271421217853
  %99 = sub i64 %98, %86
  %100 = add i64 %99, -1340545271421217853
  %101 = sub i64 0, %86
  %102 = add i64 %100, -8441084299979083832
  %103 = add i64 %102, %87
  %104 = sub i64 %103, -8441084299979083832
  %105 = add i64 %100, %87
  %106 = shl i64 %86, %87
  %107 = shl i64 %86, %87
  %108 = sub i64 %86, -6282753790490739474
  %109 = sub i64 %108, %87
  %110 = add i64 %109, -6282753790490739474
  %111 = sub i64 %86, %87
  %112 = mul i64 %110, %87
  %113 = shl i64 %86, %87
  %114 = sub i64 0, %87
  %115 = add i64 %86, %114
  %116 = sub i64 %86, %87
  %117 = sub i64 0, 80
  %118 = add i64 %115, %117
  %119 = sub i64 %115, 80
  %120 = mul i64 %118, 80
  %121 = sub i64 0, 80
  %122 = add i64 %115, %121
  %123 = sub i64 %115, 80
  %124 = mul i64 %122, 80
  %125 = shl i64 %115, 80
  %126 = sub i64 0, %115
  %127 = add i64 0, %126
  %128 = sub i64 0, %115
  %129 = sub i64 %127, 7361453011618588419
  %130 = add i64 %129, 80
  %131 = add i64 %130, 7361453011618588419
  %132 = add i64 %127, 80
  %133 = add i64 0, -1248738987650991129
  %134 = sub i64 %133, %115
  %135 = sub i64 %134, -1248738987650991129
  %136 = sub i64 0, %115
  %137 = sub i64 0, 80
  %138 = sub i64 %135, %137
  %139 = add i64 %135, 80
  %140 = sub i64 0, %115
  %141 = add i64 0, %140
  %142 = sub i64 0, %115
  %143 = sub i64 %141, 9151096044985279192
  %144 = add i64 %143, 80
  %145 = add i64 %144, 9151096044985279192
  %146 = add i64 %141, 80
  %147 = sdiv exact i64 %115, 80
  br label %27
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt5stackIiSt5dequeIiSaIiEEEEvT_S6_(%"class.std::stack"*, %"class.std::stack"*) #2 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.81
  %6 = load i32, i32* @y.82
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1885377910, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %52
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1885377910, label %18
    i32 962205108, label %26
    i32 -1684572254, label %46
    i32 -1980520586, label %47
  ]

; <label>:17:                                     ; preds = %15
  br label %52

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 962205108, i32 -1980520586
  store i32 %25, i32* %14
  br label %52

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::stack"*, align 8
  %28 = alloca %"class.std::stack"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %27, align 8
  store %"class.std::stack"* %1, %"class.std::stack"** %28, align 8
  %29 = load %"class.std::stack"*, %"class.std::stack"** %27, align 8
  %30 = load %"class.std::stack"*, %"class.std::stack"** %28, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt5stackIiSt5dequeIiSaIiEEEEEvT_S8_(%"class.std::stack"* %29, %"class.std::stack"* %30)
  %31 = load i32, i32* @x.81
  %32 = load i32, i32* @y.82
  %33 = add i32 %31, 1669879005
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 1669879005
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -1684572254, i32 -1980520586
  store i32 %45, i32* %14
  br label %52

; <label>:46:                                     ; preds = %15
  ret void

; <label>:47:                                     ; preds = %15
  %48 = alloca %"class.std::stack"*, align 8
  %49 = alloca %"class.std::stack"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %48, align 8
  store %"class.std::stack"* %1, %"class.std::stack"** %49, align 8
  %50 = load %"class.std::stack"*, %"class.std::stack"** %48, align 8
  %51 = load %"class.std::stack"*, %"class.std::stack"** %49, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt5stackIiSt5dequeIiSaIiEEEEEvT_S8_(%"class.std::stack"* %50, %"class.std::stack"* %51)
  store i32 962205108, i32* %14
  br label %52

; <label>:52:                                     ; preds = %47, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt5stackIiSt5dequeIiSaIiEEEEEvT_S8_(%"class.std::stack"*, %"class.std::stack"*) #2 comdat align 2 {
  %3 = alloca %"class.std::stack"*, align 8
  %4 = alloca %"class.std::stack"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %3, align 8
  store %"class.std::stack"* %1, %"class.std::stack"** %4, align 8
  %5 = alloca i32
  store i32 432344457, i32* %5
  br label %6

; <label>:6:                                      ; preds = %2, %67
  %7 = load i32, i32* %5
  switch i32 %7, label %8 [
    i32 432344457, label %9
    i32 1681199023, label %14
    i32 -771788610, label %41
    i32 -1575234830, label %59
    i32 -1425134835, label %60
    i32 -1900222406, label %63
    i32 495634208, label %64
  ]

; <label>:8:                                      ; preds = %6
  br label %67

; <label>:9:                                      ; preds = %6
  %10 = load %"class.std::stack"*, %"class.std::stack"** %3, align 8
  %11 = load %"class.std::stack"*, %"class.std::stack"** %4, align 8
  %12 = icmp ne %"class.std::stack"* %10, %11
  %13 = select i1 %12, i32 1681199023, i32 -1900222406
  store i32 %13, i32* %5
  br label %67

; <label>:14:                                     ; preds = %6
  %15 = load i32, i32* @x.83
  %16 = load i32, i32* @y.84
  %17 = sub i32 0, 1
  %18 = add i32 %15, %17
  %19 = sub i32 %15, 1
  %20 = mul i32 %15, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %16, 10
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -771788610, i32 495634208
  store i32 %40, i32* %5
  br label %67

; <label>:41:                                     ; preds = %6
  %42 = load %"class.std::stack"*, %"class.std::stack"** %3, align 8
  %43 = call %"class.std::stack"* @_ZSt11__addressofISt5stackIiSt5dequeIiSaIiEEEEPT_RS5_(%"class.std::stack"* dereferenceable(80) %42) #11
  call void @_ZSt8_DestroyISt5stackIiSt5dequeIiSaIiEEEEvPT_(%"class.std::stack"* %43)
  %44 = load i32, i32* @x.83
  %45 = load i32, i32* @y.84
  %46 = sub i32 %44, 1767212615
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1767212615
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -1575234830, i32 495634208
  store i32 %58, i32* %5
  br label %67

; <label>:59:                                     ; preds = %6
  store i32 -1425134835, i32* %5
  br label %67

; <label>:60:                                     ; preds = %6
  %61 = load %"class.std::stack"*, %"class.std::stack"** %3, align 8
  %62 = getelementptr inbounds %"class.std::stack", %"class.std::stack"* %61, i32 1
  store %"class.std::stack"* %62, %"class.std::stack"** %3, align 8
  store i32 432344457, i32* %5
  br label %67

; <label>:63:                                     ; preds = %6
  ret void

; <label>:64:                                     ; preds = %6
  %65 = load %"class.std::stack"*, %"class.std::stack"** %3, align 8
  %66 = call %"class.std::stack"* @_ZSt11__addressofISt5stackIiSt5dequeIiSaIiEEEEPT_RS5_(%"class.std::stack"* dereferenceable(80) %65) #11
  call void @_ZSt8_DestroyISt5stackIiSt5dequeIiSaIiEEEEvPT_(%"class.std::stack"* %66)
  store i32 -771788610, i32* %5
  br label %67

; <label>:67:                                     ; preds = %64, %60, %59, %41, %14, %9, %8
  br label %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt5stackIiSt5dequeIiSaIiEEEEvPT_(%"class.std::stack"*) #1 comdat {
  %2 = alloca %"class.std::stack"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %2, align 8
  %3 = load %"class.std::stack"*, %"class.std::stack"** %2, align 8
  call void @_ZNSt5stackIiSt5dequeIiSaIiEEED2Ev(%"class.std::stack"* %3) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::stack"* @_ZSt11__addressofISt5stackIiSt5dequeIiSaIiEEEEPT_RS5_(%"class.std::stack"* dereferenceable(80)) #1 comdat {
  %2 = alloca %"class.std::stack"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.87
  %6 = load i32, i32* @y.88
  %7 = add i32 %5, -2097491243
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -2097491243
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2123042318, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2123042318, label %19
    i32 381048824, label %27
    i32 1622590675, label %59
    i32 -68738009, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 381048824, i32 -68738009
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::stack"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %28, align 8
  %29 = load %"class.std::stack"*, %"class.std::stack"** %28, align 8
  %30 = bitcast %"class.std::stack"* %29 to i8*
  %31 = bitcast i8* %30 to %"class.std::stack"*
  store %"class.std::stack"* %31, %"class.std::stack"** %2
  %32 = load i32, i32* @x.87
  %33 = load i32, i32* @y.88
  %34 = sub i32 %32, -687376265
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -687376265
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 1622590675, i32 -68738009
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"class.std::stack"*, %"class.std::stack"** %2
  ret %"class.std::stack"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::stack"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %62, align 8
  %63 = load %"class.std::stack"*, %"class.std::stack"** %62, align 8
  %64 = bitcast %"class.std::stack"* %63 to i8*
  %65 = bitcast i8* %64 to %"class.std::stack"*
  store i32 381048824, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base"*, %"class.std::stack"*, i64) #2 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca i64*
  %7 = alloca %"class.std::stack"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.89
  %11 = load i32, i32* @y.90
  %12 = sub i32 %10, 2009038006
  %13 = sub i32 %12, 1
  %14 = add i32 %13, 2009038006
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 1312752559, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %88
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 1312752559, label %24
    i32 1689565829, label %44
    i32 -1672584934, label %69
    i32 -1743821199, label %72
    i32 1100944657, label %80
    i32 -1003031941, label %81
  ]

; <label>:23:                                     ; preds = %21
  br label %88

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 1689565829, i32 -1003031941
  store i32 %43, i32* %20
  br label %88

; <label>:44:                                     ; preds = %21
  %45 = alloca %"struct.std::_Vector_base"*, align 8
  %46 = alloca %"class.std::stack"*, align 8
  store %"class.std::stack"** %46, %"class.std::stack"*** %7
  %47 = alloca i64, align 8
  store i64* %47, i64** %6
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %45, align 8
  %48 = load volatile %"class.std::stack"**, %"class.std::stack"*** %7
  store %"class.std::stack"* %1, %"class.std::stack"** %48, align 8
  %49 = load volatile i64*, i64** %6
  store i64 %2, i64* %49, align 8
  %50 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %45, align 8
  store %"struct.std::_Vector_base"* %50, %"struct.std::_Vector_base"** %5
  %51 = load volatile %"class.std::stack"**, %"class.std::stack"*** %7
  %52 = load %"class.std::stack"*, %"class.std::stack"** %51, align 8
  %53 = icmp ne %"class.std::stack"* %52, null
  store i1 %53, i1* %4
  %54 = load i32, i32* @x.89
  %55 = load i32, i32* @y.90
  %56 = sub i32 %54, -1047034100
  %57 = sub i32 %56, 1
  %58 = add i32 %57, -1047034100
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 -1672584934, i32 -1003031941
  store i32 %68, i32* %20
  br label %88

; <label>:69:                                     ; preds = %21
  %70 = load volatile i1, i1* %4
  %71 = select i1 %70, i32 -1743821199, i32 1100944657
  store i32 %71, i32* %20
  br label %88

; <label>:72:                                     ; preds = %21
  %73 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %74 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %73, i32 0, i32 0
  %75 = bitcast %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %74 to %"class.std::allocator"*
  %76 = load volatile %"class.std::stack"**, %"class.std::stack"*** %7
  %77 = load %"class.std::stack"*, %"class.std::stack"** %76, align 8
  %78 = load volatile i64*, i64** %6
  %79 = load i64, i64* %78, align 8
  call void @_ZNSt16allocator_traitsISaISt5stackIiSt5dequeIiSaIiEEEEE10deallocateERS5_PS4_m(%"class.std::allocator"* dereferenceable(1) %75, %"class.std::stack"* %77, i64 %79)
  store i32 1100944657, i32* %20
  br label %88

; <label>:80:                                     ; preds = %21
  ret void

; <label>:81:                                     ; preds = %21
  %82 = alloca %"struct.std::_Vector_base"*, align 8
  %83 = alloca %"class.std::stack"*, align 8
  %84 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %82, align 8
  store %"class.std::stack"* %1, %"class.std::stack"** %83, align 8
  store i64 %2, i64* %84, align 8
  %85 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %82, align 8
  %86 = load %"class.std::stack"*, %"class.std::stack"** %83, align 8
  %87 = icmp ne %"class.std::stack"* %86, null
  store i32 1689565829, i32* %20
  br label %88

; <label>:88:                                     ; preds = %81, %72, %69, %44, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaISt5stackIiSt5dequeIiSaIiEEEED2Ev(%"class.std::allocator"* %4) #11
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt5stackIiSt5dequeIiSaIiEEEEE10deallocateERS5_PS4_m(%"class.std::allocator"* dereferenceable(1), %"class.std::stack"*, i64) #2 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.93
  %7 = load i32, i32* @y.94
  %8 = sub i32 %6, 2063061026
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 2063061026
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 537147945, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %84
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 537147945, label %20
    i32 301501398, label %40
    i32 160567122, label %75
    i32 1110488435, label %76
  ]

; <label>:19:                                     ; preds = %17
  br label %84

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 301501398, i32 1110488435
  store i32 %39, i32* %16
  br label %84

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator"*, align 8
  %42 = alloca %"class.std::stack"*, align 8
  %43 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %41, align 8
  store %"class.std::stack"* %1, %"class.std::stack"** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.std::allocator"*, %"class.std::allocator"** %41, align 8
  %45 = bitcast %"class.std::allocator"* %44 to %"class.__gnu_cxx::new_allocator"*
  %46 = load %"class.std::stack"*, %"class.std::stack"** %42, align 8
  %47 = load i64, i64* %43, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt5stackIiSt5dequeIiSaIiEEEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator"* %45, %"class.std::stack"* %46, i64 %47)
  %48 = load i32, i32* @x.93
  %49 = load i32, i32* @y.94
  %50 = sub i32 %48, -1471024873
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -1471024873
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 160567122, i32 1110488435
  store i32 %74, i32* %16
  br label %84

; <label>:75:                                     ; preds = %17
  ret void

; <label>:76:                                     ; preds = %17
  %77 = alloca %"class.std::allocator"*, align 8
  %78 = alloca %"class.std::stack"*, align 8
  %79 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %77, align 8
  store %"class.std::stack"* %1, %"class.std::stack"** %78, align 8
  store i64 %2, i64* %79, align 8
  %80 = load %"class.std::allocator"*, %"class.std::allocator"** %77, align 8
  %81 = bitcast %"class.std::allocator"* %80 to %"class.__gnu_cxx::new_allocator"*
  %82 = load %"class.std::stack"*, %"class.std::stack"** %78, align 8
  %83 = load i64, i64* %79, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt5stackIiSt5dequeIiSaIiEEEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator"* %81, %"class.std::stack"* %82, i64 %83)
  store i32 301501398, i32* %16
  br label %84

; <label>:84:                                     ; preds = %76, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5stackIiSt5dequeIiSaIiEEEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator"*, %"class.std::stack"*, i64) #1 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca %"class.std::stack"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store %"class.std::stack"* %1, %"class.std::stack"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load %"class.std::stack"*, %"class.std::stack"** %5, align 8
  %9 = bitcast %"class.std::stack"* %8 to i8*
  call void @_ZdlPv(i8* %9) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #6

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt5stackIiSt5dequeIiSaIiEEEED2Ev(%"class.std::allocator"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5stackIiSt5dequeIiSaIiEEEED2Ev(%"class.__gnu_cxx::new_allocator"* %4) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5stackIiSt5dequeIiSaIiEEEED2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEEC2Ev(%"struct.std::_Vector_base.4"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.101
  %5 = load i32, i32* @y.102
  %6 = sub i32 %4, -924284113
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -924284113
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1495417818, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1495417818, label %18
    i32 807801225, label %26
    i32 687251697, label %56
    i32 535926258, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 807801225, i32 535926258
  store i32 %25, i32* %14
  br label %61

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %27, align 8
  %28 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %28, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %29)
  %30 = load i32, i32* @x.101
  %31 = load i32, i32* @y.102
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 687251697, i32 535926258
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %58, align 8
  %59 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %58, align 8
  %60 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %59, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %60)
  store i32 807801225, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %3 to %"class.std::allocator.5"*
  call void @_ZNSaIxEC2Ev(%"class.std::allocator.5"* %4) #11
  %5 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %3, i32 0, i32 0
  store i64* null, i64** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %3, i32 0, i32 1
  store i64* null, i64** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %3, i32 0, i32 2
  store i64* null, i64** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxEC2Ev(%"class.std::allocator.5"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.105
  %5 = load i32, i32* @y.106
  %6 = sub i32 %4, 1751094201
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1751094201
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1901858797, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1901858797, label %18
    i32 2073161726, label %38
    i32 -1305608907, label %57
    i32 -636514592, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 2073161726, i32 -636514592
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %39, align 8
  %40 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %39, align 8
  %41 = bitcast %"class.std::allocator.5"* %40 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorIxEC2Ev(%"class.__gnu_cxx::new_allocator.6"* %41) #11
  %42 = load i32, i32* @x.105
  %43 = load i32, i32* @y.106
  %44 = add i32 %42, 641751948
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 641751948
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1305608907, i32 -636514592
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %59, align 8
  %60 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %59, align 8
  %61 = bitcast %"class.std::allocator.5"* %60 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorIxEC2Ev(%"class.__gnu_cxx::new_allocator.6"* %61) #11
  store i32 2073161726, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxEC2Ev(%"class.__gnu_cxx::new_allocator.6"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64*, i64*, %"class.std::allocator.5"* dereferenceable(1)) #2 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca %"class.std::allocator.5"*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = load i64*, i64** %5, align 8
  call void @_ZSt8_DestroyIPxEvT_S1_(i64* %7, i64* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"*) #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %2, align 8
  %3 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %4 to %"class.std::allocator.5"*
  ret %"class.std::allocator.5"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.4"*) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.113
  %3 = load i32, i32* @y.114
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %111

; <label>:15:                                     ; preds = %1, %111
  %16 = alloca %"struct.std::_Vector_base.4"*, align 8
  %17 = alloca i8*
  %18 = alloca i32
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %16, align 8
  %19 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %16, align 8
  %20 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %20, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %19, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %23, i32 0, i32 2
  %25 = load i64*, i64** %24, align 8
  %26 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %19, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %26, i32 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = ptrtoint i64* %25 to i64
  %30 = ptrtoint i64* %28 to i64
  %31 = sub i64 0, %30
  %32 = add i64 %29, %31
  %33 = sub i64 %29, %30
  %34 = sdiv exact i64 %32, 8
  %35 = load i32, i32* @x.113
  %36 = load i32, i32* @y.114
  %37 = add i32 %35, 26789964
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 26789964
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  br i1 %59, label %61, label %111

; <label>:61:                                     ; preds = %15
  invoke void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.4"* %19, i64* %22, i64 %34)
          to label %62 unwind label %64

; <label>:62:                                     ; preds = %61
  %63 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %19, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %63) #11
  ret void

; <label>:64:                                     ; preds = %61
  %65 = load i32, i32* @x.113
  %66 = load i32, i32* @y.114
  %67 = sub i32 0, 1
  %68 = add i32 %65, %67
  %69 = sub i32 %65, 1
  %70 = mul i32 %65, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %66, 10
  %74 = and i1 %72, %73
  %75 = xor i1 %72, %73
  %76 = or i1 %74, %75
  %77 = or i1 %72, %73
  br i1 %76, label %78, label %186

; <label>:78:                                     ; preds = %64, %186
  %79 = landingpad { i8*, i32 }
          catch i8* null
  %80 = extractvalue { i8*, i32 } %79, 0
  store i8* %80, i8** %17, align 8
  %81 = extractvalue { i8*, i32 } %79, 1
  store i32 %81, i32* %18, align 4
  %82 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %19, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %82) #11
  %83 = load i32, i32* @x.113
  %84 = load i32, i32* @y.114
  %85 = sub i32 0, 1
  %86 = add i32 %83, %85
  %87 = sub i32 %83, 1
  %88 = mul i32 %83, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %84, 10
  %92 = xor i1 %90, true
  %93 = xor i1 %91, true
  %94 = xor i1 false, true
  %95 = and i1 %92, false
  %96 = and i1 %90, %94
  %97 = and i1 %93, false
  %98 = and i1 %91, %94
  %99 = or i1 %95, %96
  %100 = or i1 %97, %98
  %101 = xor i1 %99, %100
  %102 = or i1 %92, %93
  %103 = xor i1 %102, true
  %104 = or i1 false, %94
  %105 = and i1 %103, %104
  %106 = or i1 %101, %105
  %107 = or i1 %90, %91
  br i1 %106, label %108, label %186

; <label>:108:                                    ; preds = %78
  br label %109

; <label>:109:                                    ; preds = %108
  %110 = load i8*, i8** %17, align 8
  call void @__clang_call_terminate(i8* %110) #9
  unreachable

; <label>:111:                                    ; preds = %15, %1
  %112 = alloca %"struct.std::_Vector_base.4"*, align 8
  %113 = alloca i8*
  %114 = alloca i32
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %112, align 8
  %115 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %112, align 8
  %116 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %115, i32 0, i32 0
  %117 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %116, i32 0, i32 0
  %118 = load i64*, i64** %117, align 8
  %119 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %115, i32 0, i32 0
  %120 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %119, i32 0, i32 2
  %121 = load i64*, i64** %120, align 8
  %122 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %115, i32 0, i32 0
  %123 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %122, i32 0, i32 0
  %124 = load i64*, i64** %123, align 8
  %125 = ptrtoint i64* %121 to i64
  %126 = ptrtoint i64* %124 to i64
  %127 = add i64 0, -1101164926420712604
  %128 = sub i64 %127, %125
  %129 = sub i64 %128, -1101164926420712604
  %130 = sub i64 0, %125
  %131 = sub i64 0, %129
  %132 = sub i64 0, %126
  %133 = add i64 %131, %132
  %134 = sub i64 0, %133
  %135 = add i64 %129, %126
  %136 = shl i64 %125, %126
  %137 = shl i64 %125, %126
  %138 = sub i64 0, 7816067336877631839
  %139 = sub i64 %138, %125
  %140 = add i64 %139, 7816067336877631839
  %141 = sub i64 0, %125
  %142 = sub i64 0, %140
  %143 = sub i64 0, %126
  %144 = add i64 %142, %143
  %145 = sub i64 0, %144
  %146 = add i64 %140, %126
  %147 = shl i64 %125, %126
  %148 = sub i64 0, 3716996268280882085
  %149 = sub i64 %148, %125
  %150 = add i64 %149, 3716996268280882085
  %151 = sub i64 0, %125
  %152 = add i64 %150, 8404497438222452247
  %153 = add i64 %152, %126
  %154 = sub i64 %153, 8404497438222452247
  %155 = add i64 %150, %126
  %156 = sub i64 0, %125
  %157 = add i64 0, %156
  %158 = sub i64 0, %125
  %159 = sub i64 0, %157
  %160 = sub i64 0, %126
  %161 = add i64 %159, %160
  %162 = sub i64 0, %161
  %163 = add i64 %157, %126
  %164 = sub i64 0, %126
  %165 = add i64 %125, %164
  %166 = sub i64 %125, %126
  %167 = mul i64 %165, %126
  %168 = add i64 %125, -3304231411752611860
  %169 = sub i64 %168, %126
  %170 = sub i64 %169, -3304231411752611860
  %171 = sub i64 %125, %126
  %172 = sub i64 0, %170
  %173 = add i64 0, %172
  %174 = sub i64 0, %170
  %175 = sub i64 0, 8
  %176 = sub i64 %173, %175
  %177 = add i64 %173, 8
  %178 = sub i64 0, 8
  %179 = add i64 %170, %178
  %180 = sub i64 %170, 8
  %181 = mul i64 %179, 8
  %182 = shl i64 %170, 8
  %183 = shl i64 %170, 8
  %184 = shl i64 %170, 8
  %185 = sdiv exact i64 %170, 8
  br label %15

; <label>:186:                                    ; preds = %78, %64
  %187 = landingpad { i8*, i32 }
          catch i8* null
  %188 = extractvalue { i8*, i32 } %187, 0
  store i8* %188, i8** %17, align 8
  %189 = extractvalue { i8*, i32 } %187, 1
  store i32 %189, i32* %18, align 4
  %190 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %19, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %190) #11
  br label %78
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPxEvT_S1_(i64*, i64*) #2 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load i64*, i64** %3, align 8
  %6 = load i64*, i64** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i64* %5, i64* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i64*, i64*) #1 comdat align 2 {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.4"*, i64*, i64) #2 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca %"struct.std::_Vector_base.4"*
  %6 = alloca %"struct.std::_Vector_base.4"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %6, align 8
  store i64* %1, i64** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %6, align 8
  store %"struct.std::_Vector_base.4"* %9, %"struct.std::_Vector_base.4"** %5
  %10 = load i64*, i64** %7, align 8
  store i64* %10, i64** %4
  %11 = alloca i32
  store i32 1698392756, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1698392756, label %15
    i32 2123013080, label %19
    i32 -731970361, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64*, i64** %4
  %17 = icmp ne i64* %16, null
  %18 = select i1 %17, i32 2123013080, i32 -731970361
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %21 to %"class.std::allocator.5"*
  %23 = load i64*, i64** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator.5"* dereferenceable(1) %22, i64* %23, i64 %24)
  store i32 -731970361, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.121
  %5 = load i32, i32* @y.122
  %6 = sub i32 %4, -1107601871
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1107601871
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1481721732, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %50
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1481721732, label %18
    i32 1789016191, label %26
    i32 -731124973, label %45
    i32 139777571, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %50

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1789016191, i32 139777571
  store i32 %25, i32* %14
  br label %50

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %27, align 8
  %28 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %27, align 8
  %29 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %28 to %"class.std::allocator.5"*
  call void @_ZNSaIxED2Ev(%"class.std::allocator.5"* %29) #11
  %30 = load i32, i32* @x.121
  %31 = load i32, i32* @y.122
  %32 = sub i32 %30, -2049066443
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -2049066443
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -731124973, i32 139777571
  store i32 %44, i32* %14
  br label %50

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %47, align 8
  %48 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %47, align 8
  %49 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %48 to %"class.std::allocator.5"*
  call void @_ZNSaIxED2Ev(%"class.std::allocator.5"* %49) #11
  store i32 1789016191, i32* %14
  br label %50

; <label>:50:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator.5"* dereferenceable(1), i64*, i64) #2 comdat align 2 {
  %4 = alloca %"class.std::allocator.5"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %4, align 8
  %8 = bitcast %"class.std::allocator.5"* %7 to %"class.__gnu_cxx::new_allocator.6"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator.6"* %8, i64* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator.6"*, i64*, i64) #1 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = bitcast i64* %8 to i8*
  call void @_ZdlPv(i8* %9) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxED2Ev(%"class.std::allocator.5"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %2, align 8
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %2, align 8
  %4 = bitcast %"class.std::allocator.5"* %3 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorIxED2Ev(%"class.__gnu_cxx::new_allocator.6"* %4) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxED2Ev(%"class.__gnu_cxx::new_allocator.6"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.129
  %5 = load i32, i32* @y.130
  %6 = add i32 %4, 785501216
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 785501216
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1451723351, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1451723351, label %18
    i32 -443765892, label %26
    i32 -1525696828, label %56
    i32 2011467437, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -443765892, i32 2011467437
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %27, align 8
  %29 = load i32, i32* @x.129
  %30 = load i32, i32* @y.130
  %31 = sub i32 %29, -588682299
  %32 = sub i32 %31, 1
  %33 = add i32 %32, -588682299
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -1525696828, i32 2011467437
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %58, align 8
  store i32 -443765892, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2Ev(%"struct.std::_Vector_base.9"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.131
  %5 = load i32, i32* @y.132
  %6 = add i32 %4, -1911794551
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1911794551
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1089341862, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1089341862, label %18
    i32 -1612181535, label %38
    i32 470010729, label %69
    i32 -341668770, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1612181535, i32 -341668770
  store i32 %37, i32* %14
  br label %74

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %39, align 8
  %40 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %40, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %41)
  %42 = load i32, i32* @x.131
  %43 = load i32, i32* @y.132
  %44 = sub i32 %42, 219637796
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 219637796
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 470010729, i32 -341668770
  store i32 %68, i32* %14
  br label %74

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %71, align 8
  %72 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %71, align 8
  %73 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %72, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %73)
  store i32 -1612181535, i32* %14
  br label %74

; <label>:74:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %3 to %"class.std::allocator.10"*
  call void @_ZNSaISt6vectorIiSaIiEEEC2Ev(%"class.std::allocator.10"* %4) #11
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %3, i32 0, i32 0
  store %"class.std::vector.13"* null, %"class.std::vector.13"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %3, i32 0, i32 1
  store %"class.std::vector.13"* null, %"class.std::vector.13"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %3, i32 0, i32 2
  store %"class.std::vector.13"* null, %"class.std::vector.13"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIiSaIiEEEC2Ev(%"class.std::allocator.10"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %2, align 8
  %3 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %2, align 8
  %4 = bitcast %"class.std::allocator.10"* %3 to %"class.__gnu_cxx::new_allocator.11"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2Ev(%"class.__gnu_cxx::new_allocator.11"* %4) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2Ev(%"class.__gnu_cxx::new_allocator.11"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::vector.13"*, %"class.std::vector.13"*, %"class.std::allocator.10"* dereferenceable(1)) #2 comdat {
  %4 = alloca %"class.std::vector.13"*, align 8
  %5 = alloca %"class.std::vector.13"*, align 8
  %6 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %4, align 8
  store %"class.std::vector.13"* %1, %"class.std::vector.13"** %5, align 8
  store %"class.std::allocator.10"* %2, %"class.std::allocator.10"** %6, align 8
  %7 = load %"class.std::vector.13"*, %"class.std::vector.13"** %4, align 8
  %8 = load %"class.std::vector.13"*, %"class.std::vector.13"** %5, align 8
  call void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector.13"* %7, %"class.std::vector.13"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"*) #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %2, align 8
  %3 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %4 to %"class.std::allocator.10"*
  ret %"class.std::allocator.10"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.9"*) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.9"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %2, align 8
  %5 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::vector.13"*, %"class.std::vector.13"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::vector.13"*, %"class.std::vector.13"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::vector.13"*, %"class.std::vector.13"** %13, align 8
  %15 = ptrtoint %"class.std::vector.13"* %11 to i64
  %16 = ptrtoint %"class.std::vector.13"* %14 to i64
  %17 = add i64 %15, 4665528349523211607
  %18 = sub i64 %17, %16
  %19 = sub i64 %18, 4665528349523211607
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 24
  invoke void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.9"* %5, %"class.std::vector.13"* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %23) #11
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %28) #11
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i32, i32* @x.143
  %31 = load i32, i32* @y.144
  %32 = sub i32 %30, -1679413443
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -1679413443
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  br i1 %54, label %56, label %73

; <label>:56:                                     ; preds = %29, %73
  %57 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %57) #9
  %58 = load i32, i32* @x.143
  %59 = load i32, i32* @y.144
  %60 = sub i32 %58, -1613624529
  %61 = sub i32 %60, 1
  %62 = add i32 %61, -1613624529
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  br i1 %70, label %72, label %73

; <label>:72:                                     ; preds = %56
  unreachable

; <label>:73:                                     ; preds = %56, %29
  %74 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %74) #9
  br label %56
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector.13"*, %"class.std::vector.13"*) #2 comdat {
  %3 = alloca %"class.std::vector.13"*, align 8
  %4 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %3, align 8
  store %"class.std::vector.13"* %1, %"class.std::vector.13"** %4, align 8
  %5 = load %"class.std::vector.13"*, %"class.std::vector.13"** %3, align 8
  %6 = load %"class.std::vector.13"*, %"class.std::vector.13"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_(%"class.std::vector.13"* %5, %"class.std::vector.13"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_(%"class.std::vector.13"*, %"class.std::vector.13"*) #2 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.13"**
  %5 = alloca %"class.std::vector.13"**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.147
  %9 = load i32, i32* @y.148
  %10 = sub i32 %8, -912538230
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -912538230
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 626378840, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %140
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 626378840, label %22
    i32 1948132390, label %30
    i32 -2034108666, label %50
    i32 -1026834040, label %51
    i32 -1393194713, label %67
    i32 -2055680006, label %87
    i32 -2003811084, label %90
    i32 -632531589, label %94
    i32 521232324, label %99
    i32 -2132096514, label %114
    i32 2135864290, label %129
    i32 1018567873, label %130
    i32 1103474732, label %133
    i32 -909050411, label %139
  ]

; <label>:21:                                     ; preds = %19
  br label %140

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 1948132390, i32 1018567873
  store i32 %29, i32* %18
  br label %140

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"** %31, %"class.std::vector.13"*** %5
  %32 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"** %32, %"class.std::vector.13"*** %4
  %33 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %5
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %33, align 8
  %34 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %4
  store %"class.std::vector.13"* %1, %"class.std::vector.13"** %34, align 8
  %35 = load i32, i32* @x.147
  %36 = load i32, i32* @y.148
  %37 = add i32 %35, -966601988
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -966601988
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -2034108666, i32 1018567873
  store i32 %49, i32* %18
  br label %140

; <label>:50:                                     ; preds = %19
  store i32 -1026834040, i32* %18
  br label %140

; <label>:51:                                     ; preds = %19
  %52 = load i32, i32* @x.147
  %53 = load i32, i32* @y.148
  %54 = sub i32 %52, -1142451549
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -1142451549
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 -1393194713, i32 1103474732
  store i32 %66, i32* %18
  br label %140

; <label>:67:                                     ; preds = %19
  %68 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %5
  %69 = load %"class.std::vector.13"*, %"class.std::vector.13"** %68, align 8
  %70 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %4
  %71 = load %"class.std::vector.13"*, %"class.std::vector.13"** %70, align 8
  %72 = icmp ne %"class.std::vector.13"* %69, %71
  store i1 %72, i1* %3
  %73 = load i32, i32* @x.147
  %74 = load i32, i32* @y.148
  %75 = sub i32 0, 1
  %76 = add i32 %73, %75
  %77 = sub i32 %73, 1
  %78 = mul i32 %73, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %74, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  %86 = select i1 %84, i32 -2055680006, i32 1103474732
  store i32 %86, i32* %18
  br label %140

; <label>:87:                                     ; preds = %19
  %88 = load volatile i1, i1* %3
  %89 = select i1 %88, i32 -2003811084, i32 521232324
  store i32 %89, i32* %18
  br label %140

; <label>:90:                                     ; preds = %19
  %91 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %5
  %92 = load %"class.std::vector.13"*, %"class.std::vector.13"** %91, align 8
  %93 = call %"class.std::vector.13"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector.13"* dereferenceable(24) %92) #11
  call void @_ZSt8_DestroyISt6vectorIiSaIiEEEvPT_(%"class.std::vector.13"* %93)
  store i32 -632531589, i32* %18
  br label %140

; <label>:94:                                     ; preds = %19
  %95 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %5
  %96 = load %"class.std::vector.13"*, %"class.std::vector.13"** %95, align 8
  %97 = getelementptr inbounds %"class.std::vector.13", %"class.std::vector.13"* %96, i32 1
  %98 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %5
  store %"class.std::vector.13"* %97, %"class.std::vector.13"** %98, align 8
  store i32 -1026834040, i32* %18
  br label %140

; <label>:99:                                     ; preds = %19
  %100 = load i32, i32* @x.147
  %101 = load i32, i32* @y.148
  %102 = sub i32 0, 1
  %103 = add i32 %100, %102
  %104 = sub i32 %100, 1
  %105 = mul i32 %100, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %101, 10
  %109 = and i1 %107, %108
  %110 = xor i1 %107, %108
  %111 = or i1 %109, %110
  %112 = or i1 %107, %108
  %113 = select i1 %111, i32 -2132096514, i32 -909050411
  store i32 %113, i32* %18
  br label %140

; <label>:114:                                    ; preds = %19
  %115 = load i32, i32* @x.147
  %116 = load i32, i32* @y.148
  %117 = sub i32 0, 1
  %118 = add i32 %115, %117
  %119 = sub i32 %115, 1
  %120 = mul i32 %115, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %116, 10
  %124 = and i1 %122, %123
  %125 = xor i1 %122, %123
  %126 = or i1 %124, %125
  %127 = or i1 %122, %123
  %128 = select i1 %126, i32 2135864290, i32 -909050411
  store i32 %128, i32* %18
  br label %140

; <label>:129:                                    ; preds = %19
  ret void

; <label>:130:                                    ; preds = %19
  %131 = alloca %"class.std::vector.13"*, align 8
  %132 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %131, align 8
  store %"class.std::vector.13"* %1, %"class.std::vector.13"** %132, align 8
  store i32 1948132390, i32* %18
  br label %140

; <label>:133:                                    ; preds = %19
  %134 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %5
  %135 = load %"class.std::vector.13"*, %"class.std::vector.13"** %134, align 8
  %136 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %4
  %137 = load %"class.std::vector.13"*, %"class.std::vector.13"** %136, align 8
  %138 = icmp ne %"class.std::vector.13"* %135, %137
  store i32 -1393194713, i32* %18
  br label %140

; <label>:139:                                    ; preds = %19
  store i32 -2132096514, i32* %18
  br label %140

; <label>:140:                                    ; preds = %139, %133, %130, %114, %99, %94, %90, %87, %67, %51, %50, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIiSaIiEEEvPT_(%"class.std::vector.13"*) #1 comdat {
  %2 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %2, align 8
  %3 = load %"class.std::vector.13"*, %"class.std::vector.13"** %2, align 8
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.13"* %3) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.13"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector.13"* dereferenceable(24)) #1 comdat {
  %2 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %2, align 8
  %3 = load %"class.std::vector.13"*, %"class.std::vector.13"** %2, align 8
  %4 = bitcast %"class.std::vector.13"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.13"*
  ret %"class.std::vector.13"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.9"*, %"class.std::vector.13"*, i64) #2 comdat align 2 {
  %4 = alloca %"class.std::vector.13"*
  %5 = alloca %"struct.std::_Vector_base.9"*
  %6 = alloca %"struct.std::_Vector_base.9"*, align 8
  %7 = alloca %"class.std::vector.13"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %6, align 8
  store %"class.std::vector.13"* %1, %"class.std::vector.13"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %6, align 8
  store %"struct.std::_Vector_base.9"* %9, %"struct.std::_Vector_base.9"** %5
  %10 = load %"class.std::vector.13"*, %"class.std::vector.13"** %7, align 8
  store %"class.std::vector.13"* %10, %"class.std::vector.13"** %4
  %11 = alloca i32
  store i32 1782079099, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %81
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1782079099, label %15
    i32 232539548, label %19
    i32 761152943, label %25
    i32 1221815101, label %52
    i32 122874938, label %79
    i32 -1505048099, label %80
  ]

; <label>:14:                                     ; preds = %12
  br label %81

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %17 = icmp ne %"class.std::vector.13"* %16, null
  %18 = select i1 %17, i32 232539548, i32 761152943
  store i32 %18, i32* %11
  br label %81

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %21 to %"class.std::allocator.10"*
  %23 = load %"class.std::vector.13"*, %"class.std::vector.13"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE10deallocateERS3_PS2_m(%"class.std::allocator.10"* dereferenceable(1) %22, %"class.std::vector.13"* %23, i64 %24)
  store i32 761152943, i32* %11
  br label %81

; <label>:25:                                     ; preds = %12
  %26 = load i32, i32* @x.153
  %27 = load i32, i32* @y.154
  %28 = sub i32 0, 1
  %29 = add i32 %26, %28
  %30 = sub i32 %26, 1
  %31 = mul i32 %26, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %27, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 true, true
  %38 = and i1 %35, true
  %39 = and i1 %33, %37
  %40 = and i1 %36, true
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 true, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  %51 = select i1 %49, i32 1221815101, i32 -1505048099
  store i32 %51, i32* %11
  br label %81

; <label>:52:                                     ; preds = %12
  %53 = load i32, i32* @x.153
  %54 = load i32, i32* @y.154
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 122874938, i32 -1505048099
  store i32 %78, i32* %11
  br label %81

; <label>:79:                                     ; preds = %12
  ret void

; <label>:80:                                     ; preds = %12
  store i32 1221815101, i32* %11
  br label %81

; <label>:81:                                     ; preds = %80, %52, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.155
  %5 = load i32, i32* @y.156
  %6 = sub i32 %4, 498459336
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 498459336
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 21556625, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 21556625, label %18
    i32 -1969474191, label %26
    i32 -905032557, label %57
    i32 -147433577, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1969474191, i32 -147433577
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %27, align 8
  %28 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %27, align 8
  %29 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %28 to %"class.std::allocator.10"*
  call void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.10"* %29) #11
  %30 = load i32, i32* @x.155
  %31 = load i32, i32* @y.156
  %32 = sub i32 %30, -1862452656
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -1862452656
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -905032557, i32 -147433577
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %59, align 8
  %60 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %59, align 8
  %61 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %60 to %"class.std::allocator.10"*
  call void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.10"* %61) #11
  store i32 -1969474191, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE10deallocateERS3_PS2_m(%"class.std::allocator.10"* dereferenceable(1), %"class.std::vector.13"*, i64) #2 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.157
  %7 = load i32, i32* @y.158
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 214787180, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %82
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 214787180, label %19
    i32 -1620003896, label %39
    i32 -1052651659, label %73
    i32 -518863947, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %82

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1620003896, i32 -518863947
  store i32 %38, i32* %15
  br label %82

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.10"*, align 8
  %41 = alloca %"class.std::vector.13"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %40, align 8
  store %"class.std::vector.13"* %1, %"class.std::vector.13"** %41, align 8
  store i64 %2, i64* %42, align 8
  %43 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %40, align 8
  %44 = bitcast %"class.std::allocator.10"* %43 to %"class.__gnu_cxx::new_allocator.11"*
  %45 = load %"class.std::vector.13"*, %"class.std::vector.13"** %41, align 8
  %46 = load i64, i64* %42, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.11"* %44, %"class.std::vector.13"* %45, i64 %46)
  %47 = load i32, i32* @x.157
  %48 = load i32, i32* @y.158
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -1052651659, i32 -518863947
  store i32 %72, i32* %15
  br label %82

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.std::allocator.10"*, align 8
  %76 = alloca %"class.std::vector.13"*, align 8
  %77 = alloca i64, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %75, align 8
  store %"class.std::vector.13"* %1, %"class.std::vector.13"** %76, align 8
  store i64 %2, i64* %77, align 8
  %78 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %75, align 8
  %79 = bitcast %"class.std::allocator.10"* %78 to %"class.__gnu_cxx::new_allocator.11"*
  %80 = load %"class.std::vector.13"*, %"class.std::vector.13"** %76, align 8
  %81 = load i64, i64* %77, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.11"* %79, %"class.std::vector.13"* %80, i64 %81)
  store i32 -1620003896, i32* %15
  br label %82

; <label>:82:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.11"*, %"class.std::vector.13"*, i64) #1 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.159
  %7 = load i32, i32* @y.160
  %8 = add i32 %6, 1935768858
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1935768858
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -406166434, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -406166434, label %20
    i32 1287128468, label %28
    i32 1090248451, label %62
    i32 1014231829, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1287128468, i32 1014231829
  store i32 %27, i32* %16
  br label %70

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %30 = alloca %"class.std::vector.13"*, align 8
  %31 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %29, align 8
  store %"class.std::vector.13"* %1, %"class.std::vector.13"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %29, align 8
  %33 = load %"class.std::vector.13"*, %"class.std::vector.13"** %30, align 8
  %34 = bitcast %"class.std::vector.13"* %33 to i8*
  call void @_ZdlPv(i8* %34) #11
  %35 = load i32, i32* @x.159
  %36 = load i32, i32* @y.160
  %37 = add i32 %35, 1124505653
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 1124505653
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 1090248451, i32 1014231829
  store i32 %61, i32* %16
  br label %70

; <label>:62:                                     ; preds = %17
  ret void

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %65 = alloca %"class.std::vector.13"*, align 8
  %66 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %64, align 8
  store %"class.std::vector.13"* %1, %"class.std::vector.13"** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %64, align 8
  %68 = load %"class.std::vector.13"*, %"class.std::vector.13"** %65, align 8
  %69 = bitcast %"class.std::vector.13"* %68 to i8*
  call void @_ZdlPv(i8* %69) #11
  store i32 1287128468, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.10"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.161
  %5 = load i32, i32* @y.162
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1492378642, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %61
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1492378642, label %17
    i32 2004758852, label %25
    i32 1408372977, label %56
    i32 -1829367198, label %57
  ]

; <label>:16:                                     ; preds = %14
  br label %61

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 2004758852, i32 -1829367198
  store i32 %24, i32* %13
  br label %61

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %26, align 8
  %27 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %26, align 8
  %28 = bitcast %"class.std::allocator.10"* %27 to %"class.__gnu_cxx::new_allocator.11"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev(%"class.__gnu_cxx::new_allocator.11"* %28) #11
  %29 = load i32, i32* @x.161
  %30 = load i32, i32* @y.162
  %31 = sub i32 %29, -1967063621
  %32 = sub i32 %31, 1
  %33 = add i32 %32, -1967063621
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 1408372977, i32 -1829367198
  store i32 %55, i32* %13
  br label %61

; <label>:56:                                     ; preds = %14
  ret void

; <label>:57:                                     ; preds = %14
  %58 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %58, align 8
  %59 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %58, align 8
  %60 = bitcast %"class.std::allocator.10"* %59 to %"class.__gnu_cxx::new_allocator.11"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev(%"class.__gnu_cxx::new_allocator.11"* %60) #11
  store i32 2004758852, i32* %13
  br label %61

; <label>:61:                                     ; preds = %57, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev(%"class.__gnu_cxx::new_allocator.11"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector.3"*) #1 comdat align 2 {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %4 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  %5 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %4) #11
  %6 = call i64 @_ZNSt16allocator_traitsISaIxEE8max_sizeERKS0_(%"class.std::allocator.5"* dereferenceable(1) %5) #11
  ret i64 %6
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #7

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE8capacityEv(%"class.std::vector.3"*) #1 comdat align 2 {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %4 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 2
  %7 = load i64*, i64** %6, align 8
  %8 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = ptrtoint i64* %7 to i64
  %13 = ptrtoint i64* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 8
  ret i64 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.3"*) #1 comdat align 2 {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %4 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8
  %8 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = ptrtoint i64* %7 to i64
  %13 = ptrtoint i64* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 8
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt6vectorIxSaIxEE20_M_allocate_and_copyISt13move_iteratorIPxEEES4_mT_S6_(%"class.std::vector.3"*, i64, i64*, i64*) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::move_iterator", align 8
  %7 = alloca %"class.std::vector.3"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64*, align 8
  %10 = alloca %"class.std::move_iterator", align 8
  %11 = alloca %"class.std::move_iterator", align 8
  %12 = alloca i8*
  %13 = alloca i32
  %14 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store i64* %2, i64** %14, align 8
  %15 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %6, i32 0, i32 0
  store i64* %3, i64** %15, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %7, align 8
  store i64 %1, i64* %8, align 8
  %16 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  %17 = bitcast %"class.std::vector.3"* %16 to %"struct.std::_Vector_base.4"*
  %18 = load i64, i64* %8, align 8
  %19 = call i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base.4"* %17, i64 %18)
  store i64* %19, i64** %9, align 8
  %20 = bitcast %"class.std::move_iterator"* %10 to i8*
  %21 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = bitcast %"class.std::move_iterator"* %11 to i8*
  %23 = bitcast %"class.std::move_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = load i64*, i64** %9, align 8
  %25 = bitcast %"class.std::vector.3"* %16 to %"struct.std::_Vector_base.4"*
  %26 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %25) #11
  %27 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %11, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = invoke i64* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPxES1_xET0_T_S4_S3_RSaIT1_E(i64* %28, i64* %30, i64* %24, %"class.std::allocator.5"* dereferenceable(1) %26)
          to label %32 unwind label %62

; <label>:32:                                     ; preds = %4
  %33 = load i32, i32* @x.171
  %34 = load i32, i32* @y.172
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %214

; <label>:46:                                     ; preds = %32, %214
  %47 = load i64*, i64** %9, align 8
  %48 = load i32, i32* @x.171
  %49 = load i32, i32* @y.172
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  br i1 %59, label %61, label %214

; <label>:61:                                     ; preds = %46
  ret i64* %47

; <label>:62:                                     ; preds = %4
  %63 = load i32, i32* @x.171
  %64 = load i32, i32* @y.172
  %65 = add i32 %63, -1989330636
  %66 = sub i32 %65, 1
  %67 = sub i32 %66, -1989330636
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = and i1 %71, %72
  %74 = xor i1 %71, %72
  %75 = or i1 %73, %74
  %76 = or i1 %71, %72
  br i1 %75, label %77, label %216

; <label>:77:                                     ; preds = %62, %216
  %78 = landingpad { i8*, i32 }
          catch i8* null
  %79 = extractvalue { i8*, i32 } %78, 0
  store i8* %79, i8** %12, align 8
  %80 = extractvalue { i8*, i32 } %78, 1
  store i32 %80, i32* %13, align 4
  %81 = load i32, i32* @x.171
  %82 = load i32, i32* @y.172
  %83 = sub i32 %81, 1870677309
  %84 = sub i32 %83, 1
  %85 = add i32 %84, 1870677309
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  br i1 %93, label %95, label %216

; <label>:95:                                     ; preds = %77
  br label %96

; <label>:96:                                     ; preds = %95
  %97 = load i8*, i8** %12, align 8
  %98 = call i8* @__cxa_begin_catch(i8* %97) #11
  %99 = bitcast %"class.std::vector.3"* %16 to %"struct.std::_Vector_base.4"*
  %100 = load i64*, i64** %9, align 8
  %101 = load i64, i64* %8, align 8
  invoke void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.4"* %99, i64* %100, i64 %101)
          to label %102 unwind label %103

; <label>:102:                                    ; preds = %96
  invoke void @__cxa_rethrow() #13
          to label %171 unwind label %103

; <label>:103:                                    ; preds = %102, %96
  %104 = landingpad { i8*, i32 }
          cleanup
  %105 = extractvalue { i8*, i32 } %104, 0
  store i8* %105, i8** %12, align 8
  %106 = extractvalue { i8*, i32 } %104, 1
  store i32 %106, i32* %13, align 4
  invoke void @__cxa_end_catch()
          to label %107 unwind label %168

; <label>:107:                                    ; preds = %103
  br label %109
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:109:                                    ; preds = %107
  %110 = load i32, i32* @x.171
  %111 = load i32, i32* @y.172
  %112 = sub i32 %110, -244097602
  %113 = sub i32 %112, 1
  %114 = add i32 %113, -244097602
  %115 = sub i32 %110, 1
  %116 = mul i32 %110, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %111, 10
  %120 = xor i1 %118, true
  %121 = xor i1 %119, true
  %122 = xor i1 true, true
  %123 = and i1 %120, true
  %124 = and i1 %118, %122
  %125 = and i1 %121, true
  %126 = and i1 %119, %122
  %127 = or i1 %123, %124
  %128 = or i1 %125, %126
  %129 = xor i1 %127, %128
  %130 = or i1 %120, %121
  %131 = xor i1 %130, true
  %132 = or i1 true, %122
  %133 = and i1 %131, %132
  %134 = or i1 %129, %133
  %135 = or i1 %118, %119
  br i1 %134, label %136, label %220

; <label>:136:                                    ; preds = %109, %220
  %137 = load i8*, i8** %12, align 8
  %138 = load i32, i32* %13, align 4
  %139 = insertvalue { i8*, i32 } undef, i8* %137, 0
  %140 = insertvalue { i8*, i32 } %139, i32 %138, 1
  %141 = load i32, i32* @x.171
  %142 = load i32, i32* @y.172
  %143 = add i32 %141, -35323625
  %144 = sub i32 %143, 1
  %145 = sub i32 %144, -35323625
  %146 = sub i32 %141, 1
  %147 = mul i32 %141, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %142, 10
  %151 = xor i1 %149, true
  %152 = xor i1 %150, true
  %153 = xor i1 false, true
  %154 = and i1 %151, false
  %155 = and i1 %149, %153
  %156 = and i1 %152, false
  %157 = and i1 %150, %153
  %158 = or i1 %154, %155
  %159 = or i1 %156, %157
  %160 = xor i1 %158, %159
  %161 = or i1 %151, %152
  %162 = xor i1 %161, true
  %163 = or i1 false, %153
  %164 = and i1 %162, %163
  %165 = or i1 %160, %164
  %166 = or i1 %149, %150
  br i1 %165, label %167, label %220

; <label>:167:                                    ; preds = %136
  resume { i8*, i32 } %140

; <label>:168:                                    ; preds = %103
  %169 = landingpad { i8*, i32 }
          catch i8* null
  %170 = extractvalue { i8*, i32 } %169, 0
  call void @__clang_call_terminate(i8* %170) #9
  unreachable

; <label>:171:                                    ; preds = %102
  %172 = load i32, i32* @x.171
  %173 = load i32, i32* @y.172
  %174 = sub i32 %172, 1033283439
  %175 = sub i32 %174, 1
  %176 = add i32 %175, 1033283439
  %177 = sub i32 %172, 1
  %178 = mul i32 %172, %176
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %173, 10
  %182 = xor i1 %180, true
  %183 = xor i1 %181, true
  %184 = xor i1 false, true
  %185 = and i1 %182, false
  %186 = and i1 %180, %184
  %187 = and i1 %183, false
  %188 = and i1 %181, %184
  %189 = or i1 %185, %186
  %190 = or i1 %187, %188
  %191 = xor i1 %189, %190
  %192 = or i1 %182, %183
  %193 = xor i1 %192, true
  %194 = or i1 false, %184
  %195 = and i1 %193, %194
  %196 = or i1 %191, %195
  %197 = or i1 %180, %181
  br i1 %196, label %198, label %225

; <label>:198:                                    ; preds = %171, %225
  %199 = load i32, i32* @x.171
  %200 = load i32, i32* @y.172
  %201 = sub i32 %199, 1023096759
  %202 = sub i32 %201, 1
  %203 = add i32 %202, 1023096759
  %204 = sub i32 %199, 1
  %205 = mul i32 %199, %203
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %200, 10
  %209 = and i1 %207, %208
  %210 = xor i1 %207, %208
  %211 = or i1 %209, %210
  %212 = or i1 %207, %208
  br i1 %211, label %213, label %225

; <label>:213:                                    ; preds = %198
  unreachable

; <label>:214:                                    ; preds = %46, %32
  %215 = load i64*, i64** %9, align 8
  br label %46

; <label>:216:                                    ; preds = %77, %62
  %217 = landingpad { i8*, i32 }
          catch i8* null
  %218 = extractvalue { i8*, i32 } %217, 0
  store i8* %218, i8** %12, align 8
  %219 = extractvalue { i8*, i32 } %217, 1
  store i32 %219, i32* %13, align 4
  br label %77

; <label>:220:                                    ; preds = %136, %109
  %221 = load i8*, i8** %12, align 8
  %222 = load i32, i32* %13, align 4
  %223 = insertvalue { i8*, i32 } undef, i8* %221, 0
  %224 = insertvalue { i8*, i32 } %223, i32 %222, 1
  br label %136

; <label>:225:                                    ; preds = %198, %171
  br label %198
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_(i64*) #2 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  %4 = load i64*, i64** %3, align 8
  call void @_ZNSt13move_iteratorIPxEC2ES0_(%"class.std::move_iterator"* %2, i64* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  ret i64* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIxEE8max_sizeERKS0_(%"class.std::allocator.5"* dereferenceable(1)) #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %2, align 8
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %2, align 8
  %4 = bitcast %"class.std::allocator.5"* %3 to %"class.__gnu_cxx::new_allocator.6"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* %4) #11
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"*) #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.177
  %6 = load i32, i32* @y.178
  %7 = sub i32 %5, -946325654
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -946325654
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2132872012, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2132872012, label %19
    i32 -1506438856, label %27
    i32 -1446996177, label %47
    i32 -1971330730, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1506438856, i32 -1971330730
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %28, align 8
  %29 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %30 to %"class.std::allocator.5"*
  store %"class.std::allocator.5"* %31, %"class.std::allocator.5"** %2
  %32 = load i32, i32* @x.177
  %33 = load i32, i32* @y.178
  %34 = add i32 %32, -525830535
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -525830535
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -1446996177, i32 -1971330730
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile %"class.std::allocator.5"*, %"class.std::allocator.5"** %2
  ret %"class.std::allocator.5"* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %50, align 8
  %51 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %50, align 8
  %52 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %51, i32 0, i32 0
  %53 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %52 to %"class.std::allocator.5"*
  store i32 -1506438856, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base.4"*, i64) #2 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base.4"*
  %5 = alloca %"struct.std::_Vector_base.4"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %5, align 8
  store %"struct.std::_Vector_base.4"* %7, %"struct.std::_Vector_base.4"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 1514165567, i32* %9
  %10 = alloca i64*
  br label %11

; <label>:11:                                     ; preds = %2, %27
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 1514165567, label %14
    i32 1431410058, label %18
    i32 -1551235824, label %24
    i32 1083340466, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %27

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 1431410058, i32 -1551235824
  store i32 %17, i32* %9
  br label %27

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %20 to %"class.std::allocator.5"*
  %22 = load i64, i64* %6, align 8
  %23 = call i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator.5"* dereferenceable(1) %21, i64 %22)
  store i32 1083340466, i32* %9
  store i64* %23, i64** %10
  br label %27

; <label>:24:                                     ; preds = %11
  store i32 1083340466, i32* %9
  store i64* null, i64** %10
  br label %27

; <label>:25:                                     ; preds = %11
  %26 = load i64*, i64** %10
  ret i64* %26

; <label>:27:                                     ; preds = %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPxES1_xET0_T_S4_S3_RSaIT1_E(i64*, i64*, i64*, %"class.std::allocator.5"* dereferenceable(1)) #2 comdat {
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.183
  %9 = load i32, i32* @y.184
  %10 = sub i32 %8, -1384296378
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -1384296378
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -113537478, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %109
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -113537478, label %22
    i32 2062333607, label %42
    i32 1435204912, label %88
    i32 1234246397, label %90
  ]

; <label>:21:                                     ; preds = %19
  br label %109

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 2062333607, i32 1234246397
  store i32 %41, i32* %18
  br label %109

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.std::move_iterator", align 8
  %44 = alloca %"class.std::move_iterator", align 8
  %45 = alloca i64*, align 8
  %46 = alloca %"class.std::allocator.5"*, align 8
  %47 = alloca %"class.std::move_iterator", align 8
  %48 = alloca %"class.std::move_iterator", align 8
  %49 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %43, i32 0, i32 0
  store i64* %0, i64** %49, align 8
  %50 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %44, i32 0, i32 0
  store i64* %1, i64** %50, align 8
  store i64* %2, i64** %45, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %46, align 8
  %51 = bitcast %"class.std::move_iterator"* %47 to i8*
  %52 = bitcast %"class.std::move_iterator"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = bitcast %"class.std::move_iterator"* %48 to i8*
  %54 = bitcast %"class.std::move_iterator"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 8, i32 8, i1 false)
  %55 = load i64*, i64** %45, align 8
  %56 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %47, i32 0, i32 0
  %57 = load i64*, i64** %56, align 8
  %58 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %48, i32 0, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = call i64* @_ZSt18uninitialized_copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64* %57, i64* %59, i64* %55)
  store i64* %60, i64** %5
  %61 = load i32, i32* @x.183
  %62 = load i32, i32* @y.184
  %63 = add i32 %61, 2039251578
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, 2039251578
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 false, true
  %74 = and i1 %71, false
  %75 = and i1 %69, %73
  %76 = and i1 %72, false
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 false, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  %87 = select i1 %85, i32 1435204912, i32 1234246397
  store i32 %87, i32* %18
  br label %109

; <label>:88:                                     ; preds = %19
  %89 = load volatile i64*, i64** %5
  ret i64* %89

; <label>:90:                                     ; preds = %19
  %91 = alloca %"class.std::move_iterator", align 8
  %92 = alloca %"class.std::move_iterator", align 8
  %93 = alloca i64*, align 8
  %94 = alloca %"class.std::allocator.5"*, align 8
  %95 = alloca %"class.std::move_iterator", align 8
  %96 = alloca %"class.std::move_iterator", align 8
  %97 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %91, i32 0, i32 0
  store i64* %0, i64** %97, align 8
  %98 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %92, i32 0, i32 0
  store i64* %1, i64** %98, align 8
  store i64* %2, i64** %93, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %94, align 8
  %99 = bitcast %"class.std::move_iterator"* %95 to i8*
  %100 = bitcast %"class.std::move_iterator"* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %99, i8* %100, i64 8, i32 8, i1 false)
  %101 = bitcast %"class.std::move_iterator"* %96 to i8*
  %102 = bitcast %"class.std::move_iterator"* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %101, i8* %102, i64 8, i32 8, i1 false)
  %103 = load i64*, i64** %93, align 8
  %104 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %95, i32 0, i32 0
  %105 = load i64*, i64** %104, align 8
  %106 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %96, i32 0, i32 0
  %107 = load i64*, i64** %106, align 8
  %108 = call i64* @_ZSt18uninitialized_copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64* %105, i64* %107, i64* %103)
  store i32 2062333607, i32* %18
  br label %109

; <label>:109:                                    ; preds = %90, %42, %22, %21
  br label %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #8

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator.5"* dereferenceable(1), i64) #2 comdat align 2 {
  %3 = alloca %"class.std::allocator.5"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %3, align 8
  %6 = bitcast %"class.std::allocator.5"* %5 to %"class.__gnu_cxx::new_allocator.6"*
  %7 = load i64, i64* %4, align 8
  %8 = call i64* @_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"* %6, i64 %7, i8* null)
  ret i64* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"*, i64, i8*) #2 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* %9) #11
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -1952707185, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1952707185, label %16
    i32 1282174311, label %21
    i32 796774802, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 1282174311, i32 796774802
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 8
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to i64*
  ret i64* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #7

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #10

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt18uninitialized_copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64*, i64*, i64*) #2 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.189
  %8 = load i32, i32* @y.190
  %9 = add i32 %7, 854810376
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 854810376
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 602283537, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %83
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 602283537, label %21
    i32 -377419702, label %29
    i32 -888023582, label %62
    i32 1464826050, label %64
  ]

; <label>:20:                                     ; preds = %18
  br label %83

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -377419702, i32 1464826050
  store i32 %28, i32* %17
  br label %83

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::move_iterator", align 8
  %31 = alloca %"class.std::move_iterator", align 8
  %32 = alloca i64*, align 8
  %33 = alloca i8, align 1
  %34 = alloca %"class.std::move_iterator", align 8
  %35 = alloca %"class.std::move_iterator", align 8
  %36 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %30, i32 0, i32 0
  store i64* %0, i64** %36, align 8
  %37 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %31, i32 0, i32 0
  store i64* %1, i64** %37, align 8
  store i64* %2, i64** %32, align 8
  store i8 1, i8* %33, align 1
  %38 = bitcast %"class.std::move_iterator"* %34 to i8*
  %39 = bitcast %"class.std::move_iterator"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 8, i1 false)
  %40 = bitcast %"class.std::move_iterator"* %35 to i8*
  %41 = bitcast %"class.std::move_iterator"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 8, i32 8, i1 false)
  %42 = load i64*, i64** %32, align 8
  %43 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %34, i32 0, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %35, i32 0, i32 0
  %46 = load i64*, i64** %45, align 8
  %47 = call i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPxES3_EET0_T_S6_S5_(i64* %44, i64* %46, i64* %42)
  store i64* %47, i64** %4
  %48 = load i32, i32* @x.189
  %49 = load i32, i32* @y.190
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -888023582, i32 1464826050
  store i32 %61, i32* %17
  br label %83

; <label>:62:                                     ; preds = %18
  %63 = load volatile i64*, i64** %4
  ret i64* %63

; <label>:64:                                     ; preds = %18
  %65 = alloca %"class.std::move_iterator", align 8
  %66 = alloca %"class.std::move_iterator", align 8
  %67 = alloca i64*, align 8
  %68 = alloca i8, align 1
  %69 = alloca %"class.std::move_iterator", align 8
  %70 = alloca %"class.std::move_iterator", align 8
  %71 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %65, i32 0, i32 0
  store i64* %0, i64** %71, align 8
  %72 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %66, i32 0, i32 0
  store i64* %1, i64** %72, align 8
  store i64* %2, i64** %67, align 8
  store i8 1, i8* %68, align 1
  %73 = bitcast %"class.std::move_iterator"* %69 to i8*
  %74 = bitcast %"class.std::move_iterator"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 8, i32 8, i1 false)
  %75 = bitcast %"class.std::move_iterator"* %70 to i8*
  %76 = bitcast %"class.std::move_iterator"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %75, i8* %76, i64 8, i32 8, i1 false)
  %77 = load i64*, i64** %67, align 8
  %78 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %69, i32 0, i32 0
  %79 = load i64*, i64** %78, align 8
  %80 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %70, i32 0, i32 0
  %81 = load i64*, i64** %80, align 8
  %82 = call i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPxES3_EET0_T_S6_S5_(i64* %79, i64* %81, i64* %77)
  store i32 -377419702, i32* %17
  br label %83

; <label>:83:                                     ; preds = %64, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPxES3_EET0_T_S6_S5_(i64*, i64*, i64*) #2 comdat align 2 {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.std::move_iterator", align 8
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store i64* %0, i64** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %6, align 8
  %11 = bitcast %"class.std::move_iterator"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.std::move_iterator"* %8 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load i64*, i64** %6, align 8
  %16 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %7, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = call i64* @_ZSt4copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64* %17, i64* %19, i64* %15)
  ret i64* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt4copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64*, i64*, i64*) #2 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.193
  %8 = load i32, i32* @y.194
  %9 = add i32 %7, -632801088
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -632801088
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -763915444, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %98
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -763915444, label %21
    i32 -1489394087, label %41
    i32 -81544672, label %76
    i32 1229243402, label %78
  ]

; <label>:20:                                     ; preds = %18
  br label %98

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1489394087, i32 1229243402
  store i32 %40, i32* %17
  br label %98

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::move_iterator", align 8
  %43 = alloca %"class.std::move_iterator", align 8
  %44 = alloca i64*, align 8
  %45 = alloca %"class.std::move_iterator", align 8
  %46 = alloca %"class.std::move_iterator", align 8
  %47 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %42, i32 0, i32 0
  store i64* %0, i64** %47, align 8
  %48 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %43, i32 0, i32 0
  store i64* %1, i64** %48, align 8
  store i64* %2, i64** %44, align 8
  %49 = bitcast %"class.std::move_iterator"* %45 to i8*
  %50 = bitcast %"class.std::move_iterator"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %45, i32 0, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = call i64* @_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_(i64* %52)
  %54 = bitcast %"class.std::move_iterator"* %46 to i8*
  %55 = bitcast %"class.std::move_iterator"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 8, i32 8, i1 false)
  %56 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %46, i32 0, i32 0
  %57 = load i64*, i64** %56, align 8
  %58 = call i64* @_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_(i64* %57)
  %59 = load i64*, i64** %44, align 8
  %60 = call i64* @_ZSt14__copy_move_a2ILb1EPxS0_ET1_T0_S2_S1_(i64* %53, i64* %58, i64* %59)
  store i64* %60, i64** %4
  %61 = load i32, i32* @x.193
  %62 = load i32, i32* @y.194
  %63 = add i32 %61, -1231579997
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, -1231579997
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  %75 = select i1 %73, i32 -81544672, i32 1229243402
  store i32 %75, i32* %17
  br label %98

; <label>:76:                                     ; preds = %18
  %77 = load volatile i64*, i64** %4
  ret i64* %77

; <label>:78:                                     ; preds = %18
  %79 = alloca %"class.std::move_iterator", align 8
  %80 = alloca %"class.std::move_iterator", align 8
  %81 = alloca i64*, align 8
  %82 = alloca %"class.std::move_iterator", align 8
  %83 = alloca %"class.std::move_iterator", align 8
  %84 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %79, i32 0, i32 0
  store i64* %0, i64** %84, align 8
  %85 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %80, i32 0, i32 0
  store i64* %1, i64** %85, align 8
  store i64* %2, i64** %81, align 8
  %86 = bitcast %"class.std::move_iterator"* %82 to i8*
  %87 = bitcast %"class.std::move_iterator"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 8, i1 false)
  %88 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %82, i32 0, i32 0
  %89 = load i64*, i64** %88, align 8
  %90 = call i64* @_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_(i64* %89)
  %91 = bitcast %"class.std::move_iterator"* %83 to i8*
  %92 = bitcast %"class.std::move_iterator"* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %91, i8* %92, i64 8, i32 8, i1 false)
  %93 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %83, i32 0, i32 0
  %94 = load i64*, i64** %93, align 8
  %95 = call i64* @_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_(i64* %94)
  %96 = load i64*, i64** %81, align 8
  %97 = call i64* @_ZSt14__copy_move_a2ILb1EPxS0_ET1_T0_S2_S1_(i64* %90, i64* %95, i64* %96)
  store i32 -1489394087, i32* %17
  br label %98

; <label>:98:                                     ; preds = %78, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt14__copy_move_a2ILb1EPxS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #2 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %7)
  %9 = load i64*, i64** %5, align 8
  %10 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %9)
  %11 = load i64*, i64** %6, align 8
  %12 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %11)
  %13 = call i64* @_ZSt13__copy_move_aILb1EPxS0_ET1_T0_S2_S1_(i64* %8, i64* %10, i64* %12)
  ret i64* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_(i64*) #2 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca %"class.std::move_iterator", align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  store i64* %0, i64** %4, align 8
  %5 = bitcast %"class.std::move_iterator"* %3 to i8*
  %6 = bitcast %"class.std::move_iterator"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = call i64* @_ZNSt10_Iter_baseISt13move_iteratorIPxELb1EE7_S_baseES2_(i64* %8)
  ret i64* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt13__copy_move_aILb1EPxS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #2 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i64*, i64** %4, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64* %8, i64* %9, i64* %10)
  ret i64* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64*) #2 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  %4 = call i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64* %3)
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64*, i64*, i64*) #1 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64, align 8
  store i64* %0, i64** %5, align 8
  store i64* %1, i64** %6, align 8
  store i64* %2, i64** %7, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = load i64*, i64** %5, align 8
  %11 = ptrtoint i64* %9 to i64
  %12 = ptrtoint i64* %10 to i64
  %13 = add i64 %11, -7222918575853634555
  %14 = sub i64 %13, %12
  %15 = sub i64 %14, -7222918575853634555
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 8
  store i64 %17, i64* %8, align 8
  %18 = load i64, i64* %8, align 8
  store i64 %18, i64* %4
  %19 = alloca i32
  store i32 -470869196, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %120
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -470869196, label %23
    i32 1727493645, label %27
    i32 -1930509629, label %55
    i32 -1574513132, label %88
    i32 -1199663500, label %89
    i32 -178923692, label %93
  ]

; <label>:22:                                     ; preds = %20
  br label %120

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %4
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 1727493645, i32 -1199663500
  store i32 %26, i32* %19
  br label %120

; <label>:27:                                     ; preds = %20
  %28 = load i32, i32* @x.203
  %29 = load i32, i32* @y.204
  %30 = sub i32 %28, 1786986641
  %31 = sub i32 %30, 1
  %32 = add i32 %31, 1786986641
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 -1930509629, i32 -178923692
  store i32 %54, i32* %19
  br label %120

; <label>:55:                                     ; preds = %20
  %56 = load i64*, i64** %7, align 8
  %57 = bitcast i64* %56 to i8*
  %58 = load i64*, i64** %5, align 8
  %59 = bitcast i64* %58 to i8*
  %60 = load i64, i64* %8, align 8
  %61 = mul i64 8, %60
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %57, i8* %59, i64 %61, i32 8, i1 false)
  %62 = load i32, i32* @x.203
  %63 = load i32, i32* @y.204
  %64 = sub i32 0, 1
  %65 = add i32 %62, %64
  %66 = sub i32 %62, 1
  %67 = mul i32 %62, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %63, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 true, true
  %74 = and i1 %71, true
  %75 = and i1 %69, %73
  %76 = and i1 %72, true
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 true, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  %87 = select i1 %85, i32 -1574513132, i32 -178923692
  store i32 %87, i32* %19
  br label %120

; <label>:88:                                     ; preds = %20
  store i32 -1199663500, i32* %19
  br label %120

; <label>:89:                                     ; preds = %20
  %90 = load i64*, i64** %7, align 8
  %91 = load i64, i64* %8, align 8
  %92 = getelementptr inbounds i64, i64* %90, i64 %91
  ret i64* %92

; <label>:93:                                     ; preds = %20
  %94 = load i64*, i64** %7, align 8
  %95 = bitcast i64* %94 to i8*
  %96 = load i64*, i64** %5, align 8
  %97 = bitcast i64* %96 to i8*
  %98 = load i64, i64* %8, align 8
  %99 = sub i64 8, 6702510022031216494
  %100 = sub i64 %99, %98
  %101 = add i64 %100, 6702510022031216494
  %102 = sub i64 8, %98
  %103 = mul i64 %101, %98
  %104 = shl i64 8, %98
  %105 = shl i64 8, %98
  %106 = sub i64 8, 4750697577000681953
  %107 = sub i64 %106, %98
  %108 = add i64 %107, 4750697577000681953
  %109 = sub i64 8, %98
  %110 = mul i64 %108, %98
  %111 = add i64 0, -4322558055801989436
  %112 = sub i64 %111, 8
  %113 = sub i64 %112, -4322558055801989436
  %114 = sub i64 0, 8
  %115 = sub i64 %113, -8691660447302422389
  %116 = add i64 %115, %98
  %117 = add i64 %116, -8691660447302422389
  %118 = add i64 %113, %98
  %119 = mul i64 8, %98
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %95, i8* %97, i64 %119, i32 8, i1 false)
  store i32 -1930509629, i32* %19
  br label %120

; <label>:120:                                    ; preds = %93, %88, %55, %27, %23, %22
  br label %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64*) #1 comdat align 2 {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseISt13move_iteratorIPxELb1EE7_S_baseES2_(i64*) #2 comdat align 2 {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  store i64* %0, i64** %3, align 8
  %4 = call i64* @_ZNKSt13move_iteratorIPxE4baseEv(%"class.std::move_iterator"* %2)
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt13move_iteratorIPxE4baseEv(%"class.std::move_iterator"*) #1 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.209
  %6 = load i32, i32* @y.210
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1495670829, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %53
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1495670829, label %18
    i32 -649887917, label %26
    i32 26407456, label %46
    i32 350544126, label %48
  ]

; <label>:17:                                     ; preds = %15
  br label %53

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -649887917, i32 350544126
  store i32 %25, i32* %14
  br label %53

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %27, align 8
  %28 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %27, align 8
  %29 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %28, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  store i64* %30, i64** %2
  %31 = load i32, i32* @x.209
  %32 = load i32, i32* @y.210
  %33 = sub i32 %31, 168054549
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 168054549
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 26407456, i32 350544126
  store i32 %45, i32* %14
  br label %53

; <label>:46:                                     ; preds = %15
  %47 = load volatile i64*, i64** %2
  ret i64* %47

; <label>:48:                                     ; preds = %15
  %49 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %49, align 8
  %50 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %49, align 8
  %51 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %50, i32 0, i32 0
  %52 = load i64*, i64** %51, align 8
  store i32 -649887917, i32* %14
  br label %53

; <label>:53:                                     ; preds = %48, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPxEC2ES0_(%"class.std::move_iterator"*, i64*) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  %7 = load i64*, i64** %4, align 8
  store i64* %7, i64** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base.14"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.213
  %5 = load i32, i32* @y.214
  %6 = add i32 %4, -1903119961
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1903119961
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1744069362, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1744069362, label %18
    i32 -2009420644, label %38
    i32 -1807543095, label %56
    i32 -1747034199, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -2009420644, i32 -1747034199
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base.14"*, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %39, align 8
  %40 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %40, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %41)
  %42 = load i32, i32* @x.213
  %43 = load i32, i32* @y.214
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -1807543095, i32 -1747034199
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"struct.std::_Vector_base.14"*, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %58, align 8
  %59 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %58, align 8
  %60 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %59, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %60)
  store i32 -2009420644, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3 to %"class.std::allocator.0"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.0"* %4) #11
  %5 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3, i32 0, i32 0
  store i32* null, i32** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3, i32 0, i32 1
  store i32* null, i32** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3, i32 0, i32 2
  store i32* null, i32** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2Ev(%"class.std::allocator.0"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %2, align 8
  %3 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %2, align 8
  %4 = bitcast %"class.std::allocator.0"* %3 to %"class.__gnu_cxx::new_allocator.1"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.1"* %4) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.1"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32*, i32*, %"class.std::allocator.0"* dereferenceable(1)) #2 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca %"class.std::allocator.0"*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store %"class.std::allocator.0"* %2, %"class.std::allocator.0"** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i32*, i32** %5, align 8
  call void @_ZSt8_DestroyIPiEvT_S1_(i32* %7, i32* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"*) #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.0"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.223
  %6 = load i32, i32* @y.224
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -743591101, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -743591101, label %18
    i32 100606927, label %38
    i32 -387326962, label %58
    i32 1626317169, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 100606927, i32 1626317169
  store i32 %37, i32* %14
  br label %65

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base.14"*, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %39, align 8
  %40 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %40, i32 0, i32 0
  %42 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %41 to %"class.std::allocator.0"*
  store %"class.std::allocator.0"* %42, %"class.std::allocator.0"** %2
  %43 = load i32, i32* @x.223
  %44 = load i32, i32* @y.224
  %45 = add i32 %43, -1122029323
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -1122029323
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -387326962, i32 1626317169
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile %"class.std::allocator.0"*, %"class.std::allocator.0"** %2
  ret %"class.std::allocator.0"* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"struct.std::_Vector_base.14"*, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %61, align 8
  %62 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %61, align 8
  %63 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %63 to %"class.std::allocator.0"*
  store i32 100606927, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.14"*) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.14"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %2, align 8
  %5 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = ptrtoint i32* %11 to i64
  %16 = ptrtoint i32* %14 to i64
  %17 = sub i64 0, %16
  %18 = add i64 %15, %17
  %19 = sub i64 %15, %16
  %20 = sdiv exact i64 %18, 4
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.14"* %5, i32* %8, i64 %20)
          to label %21 unwind label %23

; <label>:21:                                     ; preds = %1
  %22 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %22) #11
  ret void

; <label>:23:                                     ; preds = %1
  %24 = landingpad { i8*, i32 }
          catch i8* null
  %25 = extractvalue { i8*, i32 } %24, 0
  store i8* %25, i8** %3, align 8
  %26 = extractvalue { i8*, i32 } %24, 1
  store i32 %26, i32* %4, align 4
  %27 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %27) #11
  br label %28

; <label>:28:                                     ; preds = %23
  %29 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %29) #9
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiEvT_S1_(i32*, i32*) #2 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load i32*, i32** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32* %5, i32* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32*, i32*) #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.229
  %6 = load i32, i32* @y.230
  %7 = sub i32 %5, -1224411513
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1224411513
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1531056647, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1531056647, label %19
    i32 -1675889579, label %39
    i32 1731309502, label %68
    i32 1345964268, label %69
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1675889579, i32 1345964268
  store i32 %38, i32* %15
  br label %72

; <label>:39:                                     ; preds = %16
  %40 = alloca i32*, align 8
  %41 = alloca i32*, align 8
  store i32* %0, i32** %40, align 8
  store i32* %1, i32** %41, align 8
  %42 = load i32, i32* @x.229
  %43 = load i32, i32* @y.230
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1731309502, i32 1345964268
  store i32 %67, i32* %15
  br label %72

; <label>:68:                                     ; preds = %16
  ret void

; <label>:69:                                     ; preds = %16
  %70 = alloca i32*, align 8
  %71 = alloca i32*, align 8
  store i32* %0, i32** %70, align 8
  store i32* %1, i32** %71, align 8
  store i32 -1675889579, i32* %15
  br label %72

; <label>:72:                                     ; preds = %69, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.14"*, i32*, i64) #2 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca %"struct.std::_Vector_base.14"*
  %6 = alloca %"struct.std::_Vector_base.14"*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %6, align 8
  store i32* %1, i32** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %6, align 8
  store %"struct.std::_Vector_base.14"* %9, %"struct.std::_Vector_base.14"** %5
  %10 = load i32*, i32** %7, align 8
  store i32* %10, i32** %4
  %11 = alloca i32
  store i32 -649557322, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %120
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -649557322, label %15
    i32 1896103849, label %19
    i32 -2037419864, label %35
    i32 -297310146, label %56
    i32 1757008654, label %57
    i32 -1875631861, label %85
    i32 1008626128, label %112
    i32 1218945020, label %113
    i32 499548838, label %119
  ]

; <label>:14:                                     ; preds = %12
  br label %120

; <label>:15:                                     ; preds = %12
  %16 = load volatile i32*, i32** %4
  %17 = icmp ne i32* %16, null
  %18 = select i1 %17, i32 1896103849, i32 1757008654
  store i32 %18, i32* %11
  br label %120

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.231
  %21 = load i32, i32* @y.232
  %22 = sub i32 %20, -1536925082
  %23 = sub i32 %22, 1
  %24 = add i32 %23, -1536925082
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  %34 = select i1 %32, i32 -2037419864, i32 1218945020
  store i32 %34, i32* %11
  br label %120

; <label>:35:                                     ; preds = %12
  %36 = load volatile %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %5
  %37 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %37 to %"class.std::allocator.0"*
  %39 = load i32*, i32** %7, align 8
  %40 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.0"* dereferenceable(1) %38, i32* %39, i64 %40)
  %41 = load i32, i32* @x.231
  %42 = load i32, i32* @y.232
  %43 = add i32 %41, 1208964606
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 1208964606
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -297310146, i32 1218945020
  store i32 %55, i32* %11
  br label %120

; <label>:56:                                     ; preds = %12
  store i32 1757008654, i32* %11
  br label %120

; <label>:57:                                     ; preds = %12
  %58 = load i32, i32* @x.231
  %59 = load i32, i32* @y.232
  %60 = add i32 %58, -2093846932
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, -2093846932
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 true, true
  %71 = and i1 %68, true
  %72 = and i1 %66, %70
  %73 = and i1 %69, true
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 true, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 -1875631861, i32 499548838
  store i32 %84, i32* %11
  br label %120

; <label>:85:                                     ; preds = %12
  %86 = load i32, i32* @x.231
  %87 = load i32, i32* @y.232
  %88 = sub i32 0, 1
  %89 = add i32 %86, %88
  %90 = sub i32 %86, 1
  %91 = mul i32 %86, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %87, 10
  %95 = xor i1 %93, true
  %96 = xor i1 %94, true
  %97 = xor i1 false, true
  %98 = and i1 %95, false
  %99 = and i1 %93, %97
  %100 = and i1 %96, false
  %101 = and i1 %94, %97
  %102 = or i1 %98, %99
  %103 = or i1 %100, %101
  %104 = xor i1 %102, %103
  %105 = or i1 %95, %96
  %106 = xor i1 %105, true
  %107 = or i1 false, %97
  %108 = and i1 %106, %107
  %109 = or i1 %104, %108
  %110 = or i1 %93, %94
  %111 = select i1 %109, i32 1008626128, i32 499548838
  store i32 %111, i32* %11
  br label %120

; <label>:112:                                    ; preds = %12
  ret void

; <label>:113:                                    ; preds = %12
  %114 = load volatile %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %5
  %115 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %114, i32 0, i32 0
  %116 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %115 to %"class.std::allocator.0"*
  %117 = load i32*, i32** %7, align 8
  %118 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.0"* dereferenceable(1) %116, i32* %117, i64 %118)
  store i32 -2037419864, i32* %11
  br label %120

; <label>:119:                                    ; preds = %12
  store i32 -1875631861, i32* %11
  br label %120

; <label>:120:                                    ; preds = %119, %113, %85, %57, %56, %35, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3 to %"class.std::allocator.0"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.0"* %4) #11
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.0"* dereferenceable(1), i32*, i64) #2 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.235
  %7 = load i32, i32* @y.236
  %8 = add i32 %6, -554847393
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -554847393
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1413989326, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %83
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1413989326, label %20
    i32 -1017498716, label %40
    i32 -1502973576, label %74
    i32 -1812183015, label %75
  ]

; <label>:19:                                     ; preds = %17
  br label %83

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1017498716, i32 -1812183015
  store i32 %39, i32* %16
  br label %83

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.0"*, align 8
  %42 = alloca i32*, align 8
  %43 = alloca i64, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %41, align 8
  store i32* %1, i32** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %41, align 8
  %45 = bitcast %"class.std::allocator.0"* %44 to %"class.__gnu_cxx::new_allocator.1"*
  %46 = load i32*, i32** %42, align 8
  %47 = load i64, i64* %43, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.1"* %45, i32* %46, i64 %47)
  %48 = load i32, i32* @x.235
  %49 = load i32, i32* @y.236
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -1502973576, i32 -1812183015
  store i32 %73, i32* %16
  br label %83

; <label>:74:                                     ; preds = %17
  ret void

; <label>:75:                                     ; preds = %17
  %76 = alloca %"class.std::allocator.0"*, align 8
  %77 = alloca i32*, align 8
  %78 = alloca i64, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %76, align 8
  store i32* %1, i32** %77, align 8
  store i64 %2, i64* %78, align 8
  %79 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %76, align 8
  %80 = bitcast %"class.std::allocator.0"* %79 to %"class.__gnu_cxx::new_allocator.1"*
  %81 = load i32*, i32** %77, align 8
  %82 = load i64, i64* %78, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.1"* %80, i32* %81, i64 %82)
  store i32 -1017498716, i32* %16
  br label %83

; <label>:83:                                     ; preds = %75, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.1"*, i32*, i64) #1 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = bitcast i32* %8 to i8*
  call void @_ZdlPv(i8* %9) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.1"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE14_M_fill_assignEmRKS1_(%"class.std::vector.8"*, i64, %"class.std::vector.13"* dereferenceable(24)) #2 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"class.std::vector.8"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %8 = alloca %"class.std::vector.8"*
  %9 = alloca %"class.std::vector.13"**
  %10 = alloca i64*
  %11 = alloca i1
  %12 = alloca i1
  %13 = load i32, i32* @x.241
  %14 = load i32, i32* @y.242
  %15 = sub i32 0, 1
  %16 = add i32 %13, %15
  %17 = sub i32 %13, 1
  %18 = mul i32 %13, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  store i1 %20, i1* %12
  %21 = icmp slt i32 %14, 10
  store i1 %21, i1* %11
  %22 = alloca i32
  store i32 -2127075659, i32* %22
  br label %23

; <label>:23:                                     ; preds = %3, %178
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 -2127075659, label %26
    i32 156248117, label %46
    i32 -952234986, label %88
    i32 -1051425174, label %91
    i32 -589046666, label %107
    i32 -120492038, label %114
    i32 -602552000, label %153
    i32 -1056439315, label %165
    i32 137937468, label %166
    i32 366348023, label %167
  ]

; <label>:25:                                     ; preds = %23
  br label %178

; <label>:26:                                     ; preds = %23
  %27 = load volatile i1, i1* %12
  %28 = load volatile i1, i1* %11
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 true, true
  %32 = and i1 %29, true
  %33 = and i1 %27, %31
  %34 = and i1 %30, true
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 true, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  %45 = select i1 %43, i32 156248117, i32 366348023
  store i32 %45, i32* %22
  br label %178

; <label>:46:                                     ; preds = %23
  %47 = alloca %"class.std::vector.8"*, align 8
  %48 = alloca i64, align 8
  store i64* %48, i64** %10
  %49 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"** %49, %"class.std::vector.13"*** %9
  %50 = alloca %"class.std::vector.8", align 8
  store %"class.std::vector.8"* %50, %"class.std::vector.8"** %8
  %51 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %51, %"class.__gnu_cxx::__normal_iterator"** %7
  %52 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %52, %"class.__gnu_cxx::__normal_iterator"** %6
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %47, align 8
  %53 = load volatile i64*, i64** %10
  store i64 %1, i64* %53, align 8
  %54 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %9
  store %"class.std::vector.13"* %2, %"class.std::vector.13"** %54, align 8
  %55 = load %"class.std::vector.8"*, %"class.std::vector.8"** %47, align 8
  store %"class.std::vector.8"* %55, %"class.std::vector.8"** %5
  %56 = load volatile i64*, i64** %10
  %57 = load i64, i64* %56, align 8
  %58 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %59 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE8capacityEv(%"class.std::vector.8"* %58) #11
  %60 = icmp ugt i64 %57, %59
  store i1 %60, i1* %4
  %61 = load i32, i32* @x.241
  %62 = load i32, i32* @y.242
  %63 = sub i32 %61, -1464942316
  %64 = sub i32 %63, 1
  %65 = add i32 %64, -1464942316
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 false, true
  %74 = and i1 %71, false
  %75 = and i1 %69, %73
  %76 = and i1 %72, false
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 false, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  %87 = select i1 %85, i32 -952234986, i32 366348023
  store i32 %87, i32* %22
  br label %178

; <label>:88:                                     ; preds = %23
  %89 = load volatile i1, i1* %4
  %90 = select i1 %89, i32 -1051425174, i32 -589046666
  store i32 %90, i32* %22
  br label %178

; <label>:91:                                     ; preds = %23
  %92 = load volatile i64*, i64** %10
  %93 = load i64, i64* %92, align 8
  %94 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %9
  %95 = load %"class.std::vector.13"*, %"class.std::vector.13"** %94, align 8
  %96 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %97 = bitcast %"class.std::vector.8"* %96 to %"struct.std::_Vector_base.9"*
  %98 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %97) #11
  %99 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %8
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.8"* %99, i64 %93, %"class.std::vector.13"* dereferenceable(24) %95, %"class.std::allocator.10"* dereferenceable(1) %98)
  %100 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %8
  %101 = bitcast %"class.std::vector.8"* %100 to %"struct.std::_Vector_base.9"*
  %102 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %101, i32 0, i32 0
  %103 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %104 = bitcast %"class.std::vector.8"* %103 to %"struct.std::_Vector_base.9"*
  %105 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %104, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_impl12_M_swap_dataERS5_(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %102, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* dereferenceable(24) %105) #11
  %106 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %8
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.8"* %106) #11
  store i32 137937468, i32* %22
  br label %178

; <label>:107:                                    ; preds = %23
  %108 = load volatile i64*, i64** %10
  %109 = load i64, i64* %108, align 8
  %110 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %111 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.8"* %110) #11
  %112 = icmp ugt i64 %109, %111
  %113 = select i1 %112, i32 -120492038, i32 -602552000
  store i32 %113, i32* %22
  br label %178

; <label>:114:                                    ; preds = %23
  %115 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %116 = call %"class.std::vector.13"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EE5beginEv(%"class.std::vector.8"* %115) #11
  %117 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %118 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %117, i32 0, i32 0
  store %"class.std::vector.13"* %116, %"class.std::vector.13"** %118, align 8
  %119 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %120 = call %"class.std::vector.13"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EE3endEv(%"class.std::vector.8"* %119) #11
  %121 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %122 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %121, i32 0, i32 0
  store %"class.std::vector.13"* %120, %"class.std::vector.13"** %122, align 8
  %123 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %9
  %124 = load %"class.std::vector.13"*, %"class.std::vector.13"** %123, align 8
  %125 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %126 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %125, i32 0, i32 0
  %127 = load %"class.std::vector.13"*, %"class.std::vector.13"** %126, align 8
  %128 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %129 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %128, i32 0, i32 0
  %130 = load %"class.std::vector.13"*, %"class.std::vector.13"** %129, align 8
  call void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES2_IS4_SaIS4_EEEES4_EvT_S9_RKT0_(%"class.std::vector.13"* %127, %"class.std::vector.13"* %130, %"class.std::vector.13"* dereferenceable(24) %124)
  %131 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %132 = bitcast %"class.std::vector.8"* %131 to %"struct.std::_Vector_base.9"*
  %133 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %132, i32 0, i32 0
  %134 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %133, i32 0, i32 1
  %135 = load %"class.std::vector.13"*, %"class.std::vector.13"** %134, align 8
  %136 = load volatile i64*, i64** %10
  %137 = load i64, i64* %136, align 8
  %138 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %139 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.8"* %138) #11
  %140 = sub i64 0, %139
  %141 = add i64 %137, %140
  %142 = sub i64 %137, %139
  %143 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %9
  %144 = load %"class.std::vector.13"*, %"class.std::vector.13"** %143, align 8
  %145 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %146 = bitcast %"class.std::vector.8"* %145 to %"struct.std::_Vector_base.9"*
  %147 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %146) #11
  %148 = call %"class.std::vector.13"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIiSaIiEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.13"* %135, i64 %141, %"class.std::vector.13"* dereferenceable(24) %144, %"class.std::allocator.10"* dereferenceable(1) %147)
  %149 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %150 = bitcast %"class.std::vector.8"* %149 to %"struct.std::_Vector_base.9"*
  %151 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %150, i32 0, i32 0
  %152 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %151, i32 0, i32 1
  store %"class.std::vector.13"* %148, %"class.std::vector.13"** %152, align 8
  store i32 -1056439315, i32* %22
  br label %178

; <label>:153:                                    ; preds = %23
  %154 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %155 = bitcast %"class.std::vector.8"* %154 to %"struct.std::_Vector_base.9"*
  %156 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %155, i32 0, i32 0
  %157 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %156, i32 0, i32 0
  %158 = load %"class.std::vector.13"*, %"class.std::vector.13"** %157, align 8
  %159 = load volatile i64*, i64** %10
  %160 = load i64, i64* %159, align 8
  %161 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %9
  %162 = load %"class.std::vector.13"*, %"class.std::vector.13"** %161, align 8
  %163 = call %"class.std::vector.13"* @_ZSt6fill_nIPSt6vectorIiSaIiEEmS2_ET_S4_T0_RKT1_(%"class.std::vector.13"* %158, i64 %160, %"class.std::vector.13"* dereferenceable(24) %162)
  %164 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.8"* %164, %"class.std::vector.13"* %163) #11
  store i32 -1056439315, i32* %22
  br label %178

; <label>:165:                                    ; preds = %23
  store i32 137937468, i32* %22
  br label %178

; <label>:166:                                    ; preds = %23
  ret void

; <label>:167:                                    ; preds = %23
  %168 = alloca %"class.std::vector.8"*, align 8
  %169 = alloca i64, align 8
  %170 = alloca %"class.std::vector.13"*, align 8
  %171 = alloca %"class.std::vector.8", align 8
  %172 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %173 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %168, align 8
  store i64 %1, i64* %169, align 8
  store %"class.std::vector.13"* %2, %"class.std::vector.13"** %170, align 8
  %174 = load %"class.std::vector.8"*, %"class.std::vector.8"** %168, align 8
  %175 = load i64, i64* %169, align 8
  %176 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE8capacityEv(%"class.std::vector.8"* %174) #11
  %177 = icmp ugt i64 %175, %176
  store i32 156248117, i32* %22
  br label %178

; <label>:178:                                    ; preds = %167, %165, %153, %114, %107, %91, %88, %46, %26, %25
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE8capacityEv(%"class.std::vector.8"*) #1 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %4 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %5, i32 0, i32 2
  %7 = load %"class.std::vector.13"*, %"class.std::vector.13"** %6, align 8
  %8 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::vector.13"*, %"class.std::vector.13"** %10, align 8
  %12 = ptrtoint %"class.std::vector.13"* %7 to i64
  %13 = ptrtoint %"class.std::vector.13"* %11 to i64
  %14 = add i64 %12, -4214678438372200532
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, -4214678438372200532
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 24
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.8"*, i64, %"class.std::vector.13"* dereferenceable(24), %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.13"*, align 8
  %8 = alloca %"class.std::allocator.10"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector.13"* %2, %"class.std::vector.13"** %7, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %8, align 8
  %11 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %12 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %8, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.9"* %12, i64 %13, %"class.std::allocator.10"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load %"class.std::vector.13"*, %"class.std::vector.13"** %7, align 8
  invoke void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.8"* %11, i64 %15, %"class.std::vector.13"* dereferenceable(24) %16)
          to label %17 unwind label %46

; <label>:17:                                     ; preds = %4
  %18 = load i32, i32* @x.245
  %19 = load i32, i32* @y.246
  %20 = sub i32 0, 1
  %21 = add i32 %18, %20
  %22 = sub i32 %18, 1
  %23 = mul i32 %18, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %19, 10
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  br i1 %29, label %31, label %86

; <label>:31:                                     ; preds = %17, %86
  %32 = load i32, i32* @x.245
  %33 = load i32, i32* @y.246
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  br i1 %43, label %45, label %86

; <label>:45:                                     ; preds = %31
  ret void

; <label>:46:                                     ; preds = %4
  %47 = load i32, i32* @x.245
  %48 = load i32, i32* @y.246
  %49 = sub i32 %47, -411180833
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -411180833
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  br i1 %59, label %61, label %87

; <label>:61:                                     ; preds = %46, %87
  %62 = landingpad { i8*, i32 }
          cleanup
  %63 = extractvalue { i8*, i32 } %62, 0
  store i8* %63, i8** %9, align 8
  %64 = extractvalue { i8*, i32 } %62, 1
  store i32 %64, i32* %10, align 4
  %65 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.9"* %65) #11
  %66 = load i32, i32* @x.245
  %67 = load i32, i32* @y.246
  %68 = add i32 %66, 694652499
  %69 = sub i32 %68, 1
  %70 = sub i32 %69, 694652499
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  br i1 %78, label %80, label %87

; <label>:80:                                     ; preds = %61
  br label %81

; <label>:81:                                     ; preds = %80
  %82 = load i8*, i8** %9, align 8
  %83 = load i32, i32* %10, align 4
  %84 = insertvalue { i8*, i32 } undef, i8* %82, 0
  %85 = insertvalue { i8*, i32 } %84, i32 %83, 1
  resume { i8*, i32 } %85

; <label>:86:                                     ; preds = %31, %17
  br label %31

; <label>:87:                                     ; preds = %61, %46
  %88 = landingpad { i8*, i32 }
          cleanup
  %89 = extractvalue { i8*, i32 } %88, 0
  store i8* %89, i8** %9, align 8
  %90 = extractvalue { i8*, i32 } %88, 1
  store i32 %90, i32* %10, align 4
  %91 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.9"* %91) #11
  br label %61
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_impl12_M_swap_dataERS5_(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* dereferenceable(24)) #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.247
  %6 = load i32, i32* @y.248
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 574995438, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %80
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 574995438, label %18
    i32 831567461, label %38
    i32 768033073, label %66
    i32 663028703, label %67
  ]

; <label>:17:                                     ; preds = %15
  br label %80

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 831567461, i32 663028703
  store i32 %37, i32* %14
  br label %80

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, align 8
  %40 = alloca %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %39, align 8
  store %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %1, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %40, align 8
  %41 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %39, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %41, i32 0, i32 0
  %43 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %40, align 8
  %44 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %43, i32 0, i32 0
  call void @_ZSt4swapIPSt6vectorIiSaIiEEEvRT_S5_(%"class.std::vector.13"** dereferenceable(8) %42, %"class.std::vector.13"** dereferenceable(8) %44) #11
  %45 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %41, i32 0, i32 1
  %46 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %40, align 8
  %47 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %46, i32 0, i32 1
  call void @_ZSt4swapIPSt6vectorIiSaIiEEEvRT_S5_(%"class.std::vector.13"** dereferenceable(8) %45, %"class.std::vector.13"** dereferenceable(8) %47) #11
  %48 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %41, i32 0, i32 2
  %49 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %40, align 8
  %50 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %49, i32 0, i32 2
  call void @_ZSt4swapIPSt6vectorIiSaIiEEEvRT_S5_(%"class.std::vector.13"** dereferenceable(8) %48, %"class.std::vector.13"** dereferenceable(8) %50) #11
  %51 = load i32, i32* @x.247
  %52 = load i32, i32* @y.248
  %53 = sub i32 %51, -1986158651
  %54 = sub i32 %53, 1
  %55 = add i32 %54, -1986158651
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 768033073, i32 663028703
  store i32 %65, i32* %14
  br label %80

; <label>:66:                                     ; preds = %15
  ret void

; <label>:67:                                     ; preds = %15
  %68 = alloca %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, align 8
  %69 = alloca %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %68, align 8
  store %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %1, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %69, align 8
  %70 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %68, align 8
  %71 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %70, i32 0, i32 0
  %72 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %69, align 8
  %73 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %72, i32 0, i32 0
  call void @_ZSt4swapIPSt6vectorIiSaIiEEEvRT_S5_(%"class.std::vector.13"** dereferenceable(8) %71, %"class.std::vector.13"** dereferenceable(8) %73) #11
  %74 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %70, i32 0, i32 1
  %75 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %69, align 8
  %76 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %75, i32 0, i32 1
  call void @_ZSt4swapIPSt6vectorIiSaIiEEEvRT_S5_(%"class.std::vector.13"** dereferenceable(8) %74, %"class.std::vector.13"** dereferenceable(8) %76) #11
  %77 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %70, i32 0, i32 2
  %78 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %69, align 8
  %79 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %78, i32 0, i32 2
  call void @_ZSt4swapIPSt6vectorIiSaIiEEEvRT_S5_(%"class.std::vector.13"** dereferenceable(8) %77, %"class.std::vector.13"** dereferenceable(8) %79) #11
  store i32 831567461, i32* %14
  br label %80

; <label>:80:                                     ; preds = %67, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.8"*) #1 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %4 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"class.std::vector.13"*, %"class.std::vector.13"** %6, align 8
  %8 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::vector.13"*, %"class.std::vector.13"** %10, align 8
  %12 = ptrtoint %"class.std::vector.13"* %7 to i64
  %13 = ptrtoint %"class.std::vector.13"* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 24
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES2_IS4_SaIS4_EEEES4_EvT_S9_RKT0_(%"class.std::vector.13"*, %"class.std::vector.13"*, %"class.std::vector.13"* dereferenceable(24)) #2 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.std::vector.13"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"class.std::vector.13"* %1, %"class.std::vector.13"** %10, align 8
  store %"class.std::vector.13"* %2, %"class.std::vector.13"** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %14 = load %"class.std::vector.13"*, %"class.std::vector.13"** %13, align 8
  %15 = call %"class.std::vector.13"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES2_IS4_SaIS4_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"class.std::vector.13"* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %19 = load %"class.std::vector.13"*, %"class.std::vector.13"** %18, align 8
  %20 = call %"class.std::vector.13"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES2_IS4_SaIS4_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"class.std::vector.13"* %19)
  %21 = load %"class.std::vector.13"*, %"class.std::vector.13"** %6, align 8
  call void @_ZSt8__fill_aIPSt6vectorIiSaIiEES2_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S9_RKS6_(%"class.std::vector.13"* %15, %"class.std::vector.13"* %20, %"class.std::vector.13"* dereferenceable(24) %21)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.13"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EE5beginEv(%"class.std::vector.8"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  %4 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %5 = bitcast %"class.std::vector.8"* %4 to %"struct.std::_Vector_base.9"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator"* %2, %"class.std::vector.13"** dereferenceable(8) %7) #11
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %"class.std::vector.13"*, %"class.std::vector.13"** %8, align 8
  ret %"class.std::vector.13"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.13"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EE3endEv(%"class.std::vector.8"*) #1 comdat align 2 {
  %2 = alloca %"class.std::vector.13"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.255
  %6 = load i32, i32* @y.256
  %7 = add i32 %5, 1636565807
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1636565807
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1632778294, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1632778294, label %19
    i32 -701811068, label %39
    i32 1269163566, label %63
    i32 -1452700361, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -701811068, i32 -1452700361
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %41 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %41, align 8
  %42 = load %"class.std::vector.8"*, %"class.std::vector.8"** %41, align 8
  %43 = bitcast %"class.std::vector.8"* %42 to %"struct.std::_Vector_base.9"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %44, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator"* %40, %"class.std::vector.13"** dereferenceable(8) %45) #11
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  %47 = load %"class.std::vector.13"*, %"class.std::vector.13"** %46, align 8
  store %"class.std::vector.13"* %47, %"class.std::vector.13"** %2
  %48 = load i32, i32* @x.255
  %49 = load i32, i32* @y.256
  %50 = add i32 %48, -1760119872
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, -1760119872
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 1269163566, i32 -1452700361
  store i32 %62, i32* %15
  br label %74

; <label>:63:                                     ; preds = %16
  %64 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %2
  ret %"class.std::vector.13"* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %67 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %67, align 8
  %68 = load %"class.std::vector.8"*, %"class.std::vector.8"** %67, align 8
  %69 = bitcast %"class.std::vector.8"* %68 to %"struct.std::_Vector_base.9"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %70, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator"* %66, %"class.std::vector.13"** dereferenceable(8) %71) #11
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %66, i32 0, i32 0
  %73 = load %"class.std::vector.13"*, %"class.std::vector.13"** %72, align 8
  store i32 -701811068, i32* %15
  br label %74

; <label>:74:                                     ; preds = %65, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.13"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIiSaIiEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.13"*, i64, %"class.std::vector.13"* dereferenceable(24), %"class.std::allocator.10"* dereferenceable(1)) #2 comdat {
  %5 = alloca %"class.std::vector.13"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.257
  %9 = load i32, i32* @y.258
  %10 = add i32 %8, 2033993108
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 2033993108
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 495066929, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %64
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 495066929, label %22
    i32 -1882568851, label %30
    i32 -780413818, label %53
    i32 759814381, label %55
  ]

; <label>:21:                                     ; preds = %19
  br label %64

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -1882568851, i32 759814381
  store i32 %29, i32* %18
  br label %64

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::vector.13"*, align 8
  %32 = alloca i64, align 8
  %33 = alloca %"class.std::vector.13"*, align 8
  %34 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %31, align 8
  store i64 %1, i64* %32, align 8
  store %"class.std::vector.13"* %2, %"class.std::vector.13"** %33, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %34, align 8
  %35 = load %"class.std::vector.13"*, %"class.std::vector.13"** %31, align 8
  %36 = load i64, i64* %32, align 8
  %37 = load %"class.std::vector.13"*, %"class.std::vector.13"** %33, align 8
  %38 = call %"class.std::vector.13"* @_ZSt20uninitialized_fill_nIPSt6vectorIiSaIiEEmS2_ET_S4_T0_RKT1_(%"class.std::vector.13"* %35, i64 %36, %"class.std::vector.13"* dereferenceable(24) %37)
  store %"class.std::vector.13"* %38, %"class.std::vector.13"** %5
  %39 = load i32, i32* @x.257
  %40 = load i32, i32* @y.258
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -780413818, i32 759814381
  store i32 %52, i32* %18
  br label %64

; <label>:53:                                     ; preds = %19
  %54 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %5
  ret %"class.std::vector.13"* %54

; <label>:55:                                     ; preds = %19
  %56 = alloca %"class.std::vector.13"*, align 8
  %57 = alloca i64, align 8
  %58 = alloca %"class.std::vector.13"*, align 8
  %59 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %56, align 8
  store i64 %1, i64* %57, align 8
  store %"class.std::vector.13"* %2, %"class.std::vector.13"** %58, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %59, align 8
  %60 = load %"class.std::vector.13"*, %"class.std::vector.13"** %56, align 8
  %61 = load i64, i64* %57, align 8
  %62 = load %"class.std::vector.13"*, %"class.std::vector.13"** %58, align 8
  %63 = call %"class.std::vector.13"* @_ZSt20uninitialized_fill_nIPSt6vectorIiSaIiEEmS2_ET_S4_T0_RKT1_(%"class.std::vector.13"* %60, i64 %61, %"class.std::vector.13"* dereferenceable(24) %62)
  store i32 -1882568851, i32* %18
  br label %64

; <label>:64:                                     ; preds = %55, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.8"*, %"class.std::vector.13"*) #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"class.std::vector.13"* %1, %"class.std::vector.13"** %4, align 8
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %6 = load %"class.std::vector.13"*, %"class.std::vector.13"** %4, align 8
  %7 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %8, i32 0, i32 1
  %10 = load %"class.std::vector.13"*, %"class.std::vector.13"** %9, align 8
  %11 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %12 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %11) #11
  invoke void @_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::vector.13"* %6, %"class.std::vector.13"* %10, %"class.std::allocator.10"* dereferenceable(1) %12)
          to label %13 unwind label %18

; <label>:13:                                     ; preds = %2
  %14 = load %"class.std::vector.13"*, %"class.std::vector.13"** %4, align 8
  %15 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %16, i32 0, i32 1
  store %"class.std::vector.13"* %14, %"class.std::vector.13"** %17, align 8
  ret void

; <label>:18:                                     ; preds = %2
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  call void @__clang_call_terminate(i8* %20) #9
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.13"* @_ZSt6fill_nIPSt6vectorIiSaIiEEmS2_ET_S4_T0_RKT1_(%"class.std::vector.13"*, i64, %"class.std::vector.13"* dereferenceable(24)) #2 comdat {
  %4 = alloca %"class.std::vector.13"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.261
  %8 = load i32, i32* @y.262
  %9 = add i32 %7, -548185025
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -548185025
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 373908472, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %87
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 373908472, label %21
    i32 -116188940, label %41
    i32 352238892, label %76
    i32 1443968637, label %78
  ]

; <label>:20:                                     ; preds = %18
  br label %87

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -116188940, i32 1443968637
  store i32 %40, i32* %17
  br label %87

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::vector.13"*, align 8
  %43 = alloca i64, align 8
  %44 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %42, align 8
  store i64 %1, i64* %43, align 8
  store %"class.std::vector.13"* %2, %"class.std::vector.13"** %44, align 8
  %45 = load %"class.std::vector.13"*, %"class.std::vector.13"** %42, align 8
  %46 = call %"class.std::vector.13"* @_ZSt12__niter_baseIPSt6vectorIiSaIiEEENSt11_Niter_baseIT_E13iterator_typeES5_(%"class.std::vector.13"* %45)
  %47 = load i64, i64* %43, align 8
  %48 = load %"class.std::vector.13"*, %"class.std::vector.13"** %44, align 8
  %49 = call %"class.std::vector.13"* @_ZSt10__fill_n_aIPSt6vectorIiSaIiEEmS2_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES7_T0_RKS6_(%"class.std::vector.13"* %46, i64 %47, %"class.std::vector.13"* dereferenceable(24) %48)
  store %"class.std::vector.13"* %49, %"class.std::vector.13"** %4
  %50 = load i32, i32* @x.261
  %51 = load i32, i32* @y.262
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 352238892, i32 1443968637
  store i32 %75, i32* %17
  br label %87

; <label>:76:                                     ; preds = %18
  %77 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  ret %"class.std::vector.13"* %77

; <label>:78:                                     ; preds = %18
  %79 = alloca %"class.std::vector.13"*, align 8
  %80 = alloca i64, align 8
  %81 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %79, align 8
  store i64 %1, i64* %80, align 8
  store %"class.std::vector.13"* %2, %"class.std::vector.13"** %81, align 8
  %82 = load %"class.std::vector.13"*, %"class.std::vector.13"** %79, align 8
  %83 = call %"class.std::vector.13"* @_ZSt12__niter_baseIPSt6vectorIiSaIiEEENSt11_Niter_baseIT_E13iterator_typeES5_(%"class.std::vector.13"* %82)
  %84 = load i64, i64* %80, align 8
  %85 = load %"class.std::vector.13"*, %"class.std::vector.13"** %81, align 8
  %86 = call %"class.std::vector.13"* @_ZSt10__fill_n_aIPSt6vectorIiSaIiEEmS2_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES7_T0_RKS6_(%"class.std::vector.13"* %83, i64 %84, %"class.std::vector.13"* dereferenceable(24) %85)
  store i32 -116188940, i32* %17
  br label %87

; <label>:87:                                     ; preds = %78, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.9"*, i64, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.9"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.10"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.10"* %2, %"class.std::allocator.10"** %6, align 8
  %9 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %6, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %10, %"class.std::allocator.10"* dereferenceable(1) %11) #11
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.9"* %9, i64 %12)
          to label %13 unwind label %55

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @x.263
  %15 = load i32, i32* @y.264
  %16 = add i32 %14, 32655547
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, 32655547
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  br i1 %26, label %28, label %93

; <label>:28:                                     ; preds = %13, %93
  %29 = load i32, i32* @x.263
  %30 = load i32, i32* @y.264
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  br i1 %52, label %54, label %93

; <label>:54:                                     ; preds = %28
  ret void

; <label>:55:                                     ; preds = %3
  %56 = load i32, i32* @x.263
  %57 = load i32, i32* @y.264
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  br i1 %67, label %69, label %94

; <label>:69:                                     ; preds = %55, %94
  %70 = landingpad { i8*, i32 }
          cleanup
  %71 = extractvalue { i8*, i32 } %70, 0
  store i8* %71, i8** %7, align 8
  %72 = extractvalue { i8*, i32 } %70, 1
  store i32 %72, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %10) #11
  %73 = load i32, i32* @x.263
  %74 = load i32, i32* @y.264
  %75 = add i32 %73, -1556756465
  %76 = sub i32 %75, 1
  %77 = sub i32 %76, -1556756465
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  br i1 %85, label %87, label %94

; <label>:87:                                     ; preds = %69
  br label %88

; <label>:88:                                     ; preds = %87
  %89 = load i8*, i8** %7, align 8
  %90 = load i32, i32* %8, align 4
  %91 = insertvalue { i8*, i32 } undef, i8* %89, 0
  %92 = insertvalue { i8*, i32 } %91, i32 %90, 1
  resume { i8*, i32 } %92

; <label>:93:                                     ; preds = %28, %13
  br label %28

; <label>:94:                                     ; preds = %69, %55
  %95 = landingpad { i8*, i32 }
          cleanup
  %96 = extractvalue { i8*, i32 } %95, 0
  store i8* %96, i8** %7, align 8
  %97 = extractvalue { i8*, i32 } %95, 1
  store i32 %97, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %10) #11
  br label %69
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.8"*, i64, %"class.std::vector.13"* dereferenceable(24)) #2 comdat align 2 {
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.13"* %2, %"class.std::vector.13"** %6, align 8
  %7 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %8 = bitcast %"class.std::vector.8"* %7 to %"struct.std::_Vector_base.9"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::vector.13"*, %"class.std::vector.13"** %10, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load %"class.std::vector.13"*, %"class.std::vector.13"** %6, align 8
  %14 = bitcast %"class.std::vector.8"* %7 to %"struct.std::_Vector_base.9"*
  %15 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %14) #11
  %16 = call %"class.std::vector.13"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIiSaIiEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.13"* %11, i64 %12, %"class.std::vector.13"* dereferenceable(24) %13, %"class.std::allocator.10"* dereferenceable(1) %15)
  %17 = bitcast %"class.std::vector.8"* %7 to %"struct.std::_Vector_base.9"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %18, i32 0, i32 1
  store %"class.std::vector.13"* %16, %"class.std::vector.13"** %19, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.267
  %6 = load i32, i32* @y.268
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1357241169, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1357241169, label %18
    i32 -546854587, label %38
    i32 2124728583, label %62
    i32 -246631031, label %63
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -546854587, i32 -246631031
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, align 8
  %40 = alloca %"class.std::allocator.10"*, align 8
  store %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %39, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %40, align 8
  %41 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %39, align 8
  %42 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %41 to %"class.std::allocator.10"*
  %43 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %40, align 8
  call void @_ZNSaISt6vectorIiSaIiEEEC2ERKS2_(%"class.std::allocator.10"* %42, %"class.std::allocator.10"* dereferenceable(1) %43) #11
  %44 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %41, i32 0, i32 0
  store %"class.std::vector.13"* null, %"class.std::vector.13"** %44, align 8
  %45 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %41, i32 0, i32 1
  store %"class.std::vector.13"* null, %"class.std::vector.13"** %45, align 8
  %46 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %41, i32 0, i32 2
  store %"class.std::vector.13"* null, %"class.std::vector.13"** %46, align 8
  %47 = load i32, i32* @x.267
  %48 = load i32, i32* @y.268
  %49 = add i32 %47, -649139920
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -649139920
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 2124728583, i32 -246631031
  store i32 %61, i32* %14
  br label %72

; <label>:62:                                     ; preds = %15
  ret void

; <label>:63:                                     ; preds = %15
  %64 = alloca %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, align 8
  %65 = alloca %"class.std::allocator.10"*, align 8
  store %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %64, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %65, align 8
  %66 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %64, align 8
  %67 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %66 to %"class.std::allocator.10"*
  %68 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %65, align 8
  call void @_ZNSaISt6vectorIiSaIiEEEC2ERKS2_(%"class.std::allocator.10"* %67, %"class.std::allocator.10"* dereferenceable(1) %68) #11
  %69 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %66, i32 0, i32 0
  store %"class.std::vector.13"* null, %"class.std::vector.13"** %69, align 8
  %70 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %66, i32 0, i32 1
  store %"class.std::vector.13"* null, %"class.std::vector.13"** %70, align 8
  %71 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %66, i32 0, i32 2
  store %"class.std::vector.13"* null, %"class.std::vector.13"** %71, align 8
  store i32 -546854587, i32* %14
  br label %72

; <label>:72:                                     ; preds = %63, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.9"*, i64) #2 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.9"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"class.std::vector.13"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.9"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %8, i32 0, i32 0
  store %"class.std::vector.13"* %7, %"class.std::vector.13"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"class.std::vector.13"*, %"class.std::vector.13"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %13, i32 0, i32 1
  store %"class.std::vector.13"* %12, %"class.std::vector.13"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"class.std::vector.13"*, %"class.std::vector.13"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"class.std::vector.13", %"class.std::vector.13"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %20, i32 0, i32 2
  store %"class.std::vector.13"* %19, %"class.std::vector.13"** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIiSaIiEEEC2ERKS2_(%"class.std::allocator.10"*, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::allocator.10"*, align 8
  %4 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %3, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %4, align 8
  %5 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %3, align 8
  %6 = bitcast %"class.std::allocator.10"* %5 to %"class.__gnu_cxx::new_allocator.11"*
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  %8 = bitcast %"class.std::allocator.10"* %7 to %"class.__gnu_cxx::new_allocator.11"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.11"* %6, %"class.__gnu_cxx::new_allocator.11"* dereferenceable(1) %8) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.273
  %6 = load i32, i32* @y.274
  %7 = add i32 %5, 1982625886
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1982625886
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -260079801, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %75
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -260079801, label %19
    i32 365974539, label %39
    i32 968353668, label %70
    i32 -1885246757, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %75

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 365974539, i32 -1885246757
  store i32 %38, i32* %15
  br label %75

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %41 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %40, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %1, %"class.__gnu_cxx::new_allocator.11"** %41, align 8
  %42 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %40, align 8
  %43 = load i32, i32* @x.273
  %44 = load i32, i32* @y.274
  %45 = add i32 %43, -1318468699
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -1318468699
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 968353668, i32 -1885246757
  store i32 %69, i32* %15
  br label %75

; <label>:70:                                     ; preds = %16
  ret void

; <label>:71:                                     ; preds = %16
  %72 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %73 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %72, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %1, %"class.__gnu_cxx::new_allocator.11"** %73, align 8
  %74 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %72, align 8
  store i32 365974539, i32* %15
  br label %75

; <label>:75:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.13"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.9"*, i64) #2 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base.9"*
  %5 = alloca %"struct.std::_Vector_base.9"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %5, align 8
  store %"struct.std::_Vector_base.9"* %7, %"struct.std::_Vector_base.9"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 1999822107, i32* %9
  %10 = alloca %"class.std::vector.13"*
  br label %11

; <label>:11:                                     ; preds = %2, %27
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 1999822107, label %14
    i32 -1035176817, label %18
    i32 -1327811474, label %24
    i32 1169948701, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %27

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 -1035176817, i32 -1327811474
  store i32 %17, i32* %9
  br label %27

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %20 to %"class.std::allocator.10"*
  %22 = load i64, i64* %6, align 8
  %23 = call %"class.std::vector.13"* @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8allocateERS3_m(%"class.std::allocator.10"* dereferenceable(1) %21, i64 %22)
  store i32 1169948701, i32* %9
  store %"class.std::vector.13"* %23, %"class.std::vector.13"** %10
  br label %27

; <label>:24:                                     ; preds = %11
  store i32 1169948701, i32* %9
  store %"class.std::vector.13"* null, %"class.std::vector.13"** %10
  br label %27

; <label>:25:                                     ; preds = %11
  %26 = load %"class.std::vector.13"*, %"class.std::vector.13"** %10
  ret %"class.std::vector.13"* %26

; <label>:27:                                     ; preds = %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.13"* @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8allocateERS3_m(%"class.std::allocator.10"* dereferenceable(1), i64) #2 comdat align 2 {
  %3 = alloca %"class.std::allocator.10"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %3, align 8
  %6 = bitcast %"class.std::allocator.10"* %5 to %"class.__gnu_cxx::new_allocator.11"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector.13"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.11"* %6, i64 %7, i8* null)
  ret %"class.std::vector.13"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.13"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.11"*, i64, i8*) #2 comdat align 2 {
  %4 = alloca %"class.std::vector.13"*
  %5 = alloca i1
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.279
  %10 = load i32, i32* @y.280
  %11 = add i32 %9, 1475459944
  %12 = sub i32 %11, 1
  %13 = sub i32 %12, 1475459944
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 -1491418439, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %124
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1491418439, label %23
    i32 -402028856, label %31
    i32 -454568394, label %55
    i32 -402728124, label %58
    i32 1952417351, label %59
    i32 865911887, label %75
    i32 495048940, label %96
    i32 -1183486291, label %98
    i32 -1455497653, label %106
  ]

; <label>:22:                                     ; preds = %20
  br label %124

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 -402028856, i32 -1183486291
  store i32 %30, i32* %19
  br label %124

; <label>:31:                                     ; preds = %20
  %32 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %33 = alloca i64, align 8
  store i64* %33, i64** %6
  %34 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %32, align 8
  %35 = load volatile i64*, i64** %6
  store i64 %1, i64* %35, align 8
  store i8* %2, i8** %34, align 8
  %36 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %32, align 8
  %37 = load volatile i64*, i64** %6
  %38 = load i64, i64* %37, align 8
  %39 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"* %36) #11
  %40 = icmp ugt i64 %38, %39
  store i1 %40, i1* %5
  %41 = load i32, i32* @x.279
  %42 = load i32, i32* @y.280
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -454568394, i32 -1183486291
  store i32 %54, i32* %19
  br label %124

; <label>:55:                                     ; preds = %20
  %56 = load volatile i1, i1* %5
  %57 = select i1 %56, i32 -402728124, i32 1952417351
  store i32 %57, i32* %19
  br label %124

; <label>:58:                                     ; preds = %20
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:59:                                     ; preds = %20
  %60 = load i32, i32* @x.279
  %61 = load i32, i32* @y.280
  %62 = add i32 %60, -331511356
  %63 = sub i32 %62, 1
  %64 = sub i32 %63, -331511356
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  %74 = select i1 %72, i32 865911887, i32 -1455497653
  store i32 %74, i32* %19
  br label %124

; <label>:75:                                     ; preds = %20
  %76 = load volatile i64*, i64** %6
  %77 = load i64, i64* %76, align 8
  %78 = mul i64 %77, 24
  %79 = call i8* @_Znwm(i64 %78)
  %80 = bitcast i8* %79 to %"class.std::vector.13"*
  store %"class.std::vector.13"* %80, %"class.std::vector.13"** %4
  %81 = load i32, i32* @x.279
  %82 = load i32, i32* @y.280
  %83 = sub i32 %81, -1180354886
  %84 = sub i32 %83, 1
  %85 = add i32 %84, -1180354886
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  %95 = select i1 %93, i32 495048940, i32 -1455497653
  store i32 %95, i32* %19
  br label %124

; <label>:96:                                     ; preds = %20
  %97 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  ret %"class.std::vector.13"* %97

; <label>:98:                                     ; preds = %20
  %99 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %100 = alloca i64, align 8
  %101 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %99, align 8
  store i64 %1, i64* %100, align 8
  store i8* %2, i8** %101, align 8
  %102 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %99, align 8
  %103 = load i64, i64* %100, align 8
  %104 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"* %102) #11
  %105 = icmp ugt i64 %103, %104
  store i32 -402028856, i32* %19
  br label %124

; <label>:106:                                    ; preds = %20
  %107 = load volatile i64*, i64** %6
  %108 = load i64, i64* %107, align 8
  %109 = add i64 %108, 1074680561438691217
  %110 = sub i64 %109, 24
  %111 = sub i64 %110, 1074680561438691217
  %112 = sub i64 %108, 24
  %113 = mul i64 %111, 24
  %114 = shl i64 %108, 24
  %115 = sub i64 %108, -789736186236523754
  %116 = sub i64 %115, 24
  %117 = add i64 %116, -789736186236523754
  %118 = sub i64 %108, 24
  %119 = mul i64 %117, 24
  %120 = shl i64 %108, 24
  %121 = mul i64 %108, 24
  %122 = call i8* @_Znwm(i64 %121)
  %123 = bitcast i8* %122 to %"class.std::vector.13"*
  store i32 865911887, i32* %19
  br label %124

; <label>:124:                                    ; preds = %106, %98, %75, %59, %55, %31, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"*) #1 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.281
  %5 = load i32, i32* @y.282
  %6 = add i32 %4, -1625863029
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1625863029
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1300460643, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %48
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1300460643, label %18
    i32 2014329370, label %26
    i32 -1963546282, label %44
    i32 155433301, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %48

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 2014329370, i32 155433301
  store i32 %25, i32* %14
  br label %48

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %27, align 8
  %29 = load i32, i32* @x.281
  %30 = load i32, i32* @y.282
  %31 = sub i32 %29, -498730505
  %32 = sub i32 %31, 1
  %33 = add i32 %32, -498730505
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -1963546282, i32 155433301
  store i32 %43, i32* %14
  br label %48

; <label>:44:                                     ; preds = %15
  ret i64 768614336404564650

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %46, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %46, align 8
  store i32 2014329370, i32* %14
  br label %48

; <label>:48:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPSt6vectorIiSaIiEEEvRT_S5_(%"class.std::vector.13"** dereferenceable(8), %"class.std::vector.13"** dereferenceable(8)) #1 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.283
  %6 = load i32, i32* @y.284
  %7 = add i32 %5, 1492006274
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1492006274
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 670660667, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 670660667, label %19
    i32 -1010990917, label %27
    i32 419975967, label %55
    i32 84509064, label %56
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1010990917, i32 84509064
  store i32 %26, i32* %15
  br label %70

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.13"**, align 8
  %29 = alloca %"class.std::vector.13"**, align 8
  %30 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"** %0, %"class.std::vector.13"*** %28, align 8
  store %"class.std::vector.13"** %1, %"class.std::vector.13"*** %29, align 8
  %31 = load %"class.std::vector.13"**, %"class.std::vector.13"*** %28, align 8
  %32 = call dereferenceable(8) %"class.std::vector.13"** @_ZSt4moveIRPSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::vector.13"** dereferenceable(8) %31) #11
  %33 = load %"class.std::vector.13"*, %"class.std::vector.13"** %32, align 8
  store %"class.std::vector.13"* %33, %"class.std::vector.13"** %30, align 8
  %34 = load %"class.std::vector.13"**, %"class.std::vector.13"*** %29, align 8
  %35 = call dereferenceable(8) %"class.std::vector.13"** @_ZSt4moveIRPSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::vector.13"** dereferenceable(8) %34) #11
  %36 = load %"class.std::vector.13"*, %"class.std::vector.13"** %35, align 8
  %37 = load %"class.std::vector.13"**, %"class.std::vector.13"*** %28, align 8
  store %"class.std::vector.13"* %36, %"class.std::vector.13"** %37, align 8
  %38 = call dereferenceable(8) %"class.std::vector.13"** @_ZSt4moveIRPSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::vector.13"** dereferenceable(8) %30) #11
  %39 = load %"class.std::vector.13"*, %"class.std::vector.13"** %38, align 8
  %40 = load %"class.std::vector.13"**, %"class.std::vector.13"*** %29, align 8
  store %"class.std::vector.13"* %39, %"class.std::vector.13"** %40, align 8
  %41 = load i32, i32* @x.283
  %42 = load i32, i32* @y.284
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 419975967, i32 84509064
  store i32 %54, i32* %15
  br label %70

; <label>:55:                                     ; preds = %16
  ret void

; <label>:56:                                     ; preds = %16
  %57 = alloca %"class.std::vector.13"**, align 8
  %58 = alloca %"class.std::vector.13"**, align 8
  %59 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"** %0, %"class.std::vector.13"*** %57, align 8
  store %"class.std::vector.13"** %1, %"class.std::vector.13"*** %58, align 8
  %60 = load %"class.std::vector.13"**, %"class.std::vector.13"*** %57, align 8
  %61 = call dereferenceable(8) %"class.std::vector.13"** @_ZSt4moveIRPSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::vector.13"** dereferenceable(8) %60) #11
  %62 = load %"class.std::vector.13"*, %"class.std::vector.13"** %61, align 8
  store %"class.std::vector.13"* %62, %"class.std::vector.13"** %59, align 8
  %63 = load %"class.std::vector.13"**, %"class.std::vector.13"*** %58, align 8
  %64 = call dereferenceable(8) %"class.std::vector.13"** @_ZSt4moveIRPSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::vector.13"** dereferenceable(8) %63) #11
  %65 = load %"class.std::vector.13"*, %"class.std::vector.13"** %64, align 8
  %66 = load %"class.std::vector.13"**, %"class.std::vector.13"*** %57, align 8
  store %"class.std::vector.13"* %65, %"class.std::vector.13"** %66, align 8
  %67 = call dereferenceable(8) %"class.std::vector.13"** @_ZSt4moveIRPSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::vector.13"** dereferenceable(8) %59) #11
  %68 = load %"class.std::vector.13"*, %"class.std::vector.13"** %67, align 8
  %69 = load %"class.std::vector.13"**, %"class.std::vector.13"*** %58, align 8
  store %"class.std::vector.13"* %68, %"class.std::vector.13"** %69, align 8
  store i32 -1010990917, i32* %15
  br label %70

; <label>:70:                                     ; preds = %56, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.13"** @_ZSt4moveIRPSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::vector.13"** dereferenceable(8)) #1 comdat {
  %2 = alloca %"class.std::vector.13"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.285
  %6 = load i32, i32* @y.286
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1342041215, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %48
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1342041215, label %18
    i32 1035545532, label %26
    i32 341573325, label %43
    i32 -1231828941, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %48

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1035545532, i32 -1231828941
  store i32 %25, i32* %14
  br label %48

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.13"**, align 8
  store %"class.std::vector.13"** %0, %"class.std::vector.13"*** %27, align 8
  %28 = load %"class.std::vector.13"**, %"class.std::vector.13"*** %27, align 8
  store %"class.std::vector.13"** %28, %"class.std::vector.13"*** %2
  %29 = load i32, i32* @x.285
  %30 = load i32, i32* @y.286
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 341573325, i32 -1231828941
  store i32 %42, i32* %14
  br label %48

; <label>:43:                                     ; preds = %15
  %44 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %2
  ret %"class.std::vector.13"** %44

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.std::vector.13"**, align 8
  store %"class.std::vector.13"** %0, %"class.std::vector.13"*** %46, align 8
  %47 = load %"class.std::vector.13"**, %"class.std::vector.13"*** %46, align 8
  store i32 1035545532, i32* %14
  br label %48

; <label>:48:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8__fill_aIPSt6vectorIiSaIiEES2_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S9_RKS6_(%"class.std::vector.13"*, %"class.std::vector.13"*, %"class.std::vector.13"* dereferenceable(24)) #2 comdat {
  %4 = alloca %"class.std::vector.13"**
  %5 = alloca %"class.std::vector.13"**
  %6 = alloca %"class.std::vector.13"**
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.287
  %10 = load i32, i32* @y.288
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 931345133, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %179
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 931345133, label %22
    i32 -454301729, label %30
    i32 -942150128, label %64
    i32 1537072523, label %65
    i32 -861471395, label %72
    i32 444217183, label %87
    i32 1778192152, label %119
    i32 -1512568917, label %120
    i32 1072896502, label %125
    i32 128776257, label %140
    i32 1127732568, label %167
    i32 1710176435, label %168
    i32 312813424, label %172
    i32 648064580, label %178
  ]

; <label>:21:                                     ; preds = %19
  br label %179

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %8
  %24 = load volatile i1, i1* %7
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -454301729, i32 1710176435
  store i32 %29, i32* %18
  br label %179

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"** %31, %"class.std::vector.13"*** %6
  %32 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"** %32, %"class.std::vector.13"*** %5
  %33 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"** %33, %"class.std::vector.13"*** %4
  %34 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %6
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %34, align 8
  %35 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %5
  store %"class.std::vector.13"* %1, %"class.std::vector.13"** %35, align 8
  %36 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %4
  store %"class.std::vector.13"* %2, %"class.std::vector.13"** %36, align 8
  %37 = load i32, i32* @x.287
  %38 = load i32, i32* @y.288
  %39 = add i32 %37, -1464290078
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, -1464290078
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -942150128, i32 1710176435
  store i32 %63, i32* %18
  br label %179

; <label>:64:                                     ; preds = %19
  store i32 1537072523, i32* %18
  br label %179

; <label>:65:                                     ; preds = %19
  %66 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %6
  %67 = load %"class.std::vector.13"*, %"class.std::vector.13"** %66, align 8
  %68 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %5
  %69 = load %"class.std::vector.13"*, %"class.std::vector.13"** %68, align 8
  %70 = icmp ne %"class.std::vector.13"* %67, %69
  %71 = select i1 %70, i32 -861471395, i32 1072896502
  store i32 %71, i32* %18
  br label %179

; <label>:72:                                     ; preds = %19
  %73 = load i32, i32* @x.287
  %74 = load i32, i32* @y.288
  %75 = sub i32 0, 1
  %76 = add i32 %73, %75
  %77 = sub i32 %73, 1
  %78 = mul i32 %73, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %74, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  %86 = select i1 %84, i32 444217183, i32 312813424
  store i32 %86, i32* %18
  br label %179

; <label>:87:                                     ; preds = %19
  %88 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %4
  %89 = load %"class.std::vector.13"*, %"class.std::vector.13"** %88, align 8
  %90 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %6
  %91 = load %"class.std::vector.13"*, %"class.std::vector.13"** %90, align 8
  %92 = call dereferenceable(24) %"class.std::vector.13"* @_ZNSt6vectorIiSaIiEEaSERKS1_(%"class.std::vector.13"* %91, %"class.std::vector.13"* dereferenceable(24) %89)
  %93 = load i32, i32* @x.287
  %94 = load i32, i32* @y.288
  %95 = sub i32 0, 1
  %96 = add i32 %93, %95
  %97 = sub i32 %93, 1
  %98 = mul i32 %93, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %94, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 true, true
  %105 = and i1 %102, true
  %106 = and i1 %100, %104
  %107 = and i1 %103, true
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 true, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  %118 = select i1 %116, i32 1778192152, i32 312813424
  store i32 %118, i32* %18
  br label %179

; <label>:119:                                    ; preds = %19
  store i32 -1512568917, i32* %18
  br label %179

; <label>:120:                                    ; preds = %19
  %121 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %6
  %122 = load %"class.std::vector.13"*, %"class.std::vector.13"** %121, align 8
  %123 = getelementptr inbounds %"class.std::vector.13", %"class.std::vector.13"* %122, i32 1
  %124 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %6
  store %"class.std::vector.13"* %123, %"class.std::vector.13"** %124, align 8
  store i32 1537072523, i32* %18
  br label %179

; <label>:125:                                    ; preds = %19
  %126 = load i32, i32* @x.287
  %127 = load i32, i32* @y.288
  %128 = sub i32 0, 1
  %129 = add i32 %126, %128
  %130 = sub i32 %126, 1
  %131 = mul i32 %126, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %127, 10
  %135 = and i1 %133, %134
  %136 = xor i1 %133, %134
  %137 = or i1 %135, %136
  %138 = or i1 %133, %134
  %139 = select i1 %137, i32 128776257, i32 648064580
  store i32 %139, i32* %18
  br label %179

; <label>:140:                                    ; preds = %19
  %141 = load i32, i32* @x.287
  %142 = load i32, i32* @y.288
  %143 = sub i32 0, 1
  %144 = add i32 %141, %143
  %145 = sub i32 %141, 1
  %146 = mul i32 %141, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %142, 10
  %150 = xor i1 %148, true
  %151 = xor i1 %149, true
  %152 = xor i1 true, true
  %153 = and i1 %150, true
  %154 = and i1 %148, %152
  %155 = and i1 %151, true
  %156 = and i1 %149, %152
  %157 = or i1 %153, %154
  %158 = or i1 %155, %156
  %159 = xor i1 %157, %158
  %160 = or i1 %150, %151
  %161 = xor i1 %160, true
  %162 = or i1 true, %152
  %163 = and i1 %161, %162
  %164 = or i1 %159, %163
  %165 = or i1 %148, %149
  %166 = select i1 %164, i32 1127732568, i32 648064580
  store i32 %166, i32* %18
  br label %179

; <label>:167:                                    ; preds = %19
  ret void

; <label>:168:                                    ; preds = %19
  %169 = alloca %"class.std::vector.13"*, align 8
  %170 = alloca %"class.std::vector.13"*, align 8
  %171 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %169, align 8
  store %"class.std::vector.13"* %1, %"class.std::vector.13"** %170, align 8
  store %"class.std::vector.13"* %2, %"class.std::vector.13"** %171, align 8
  store i32 -454301729, i32* %18
  br label %179

; <label>:172:                                    ; preds = %19
  %173 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %4
  %174 = load %"class.std::vector.13"*, %"class.std::vector.13"** %173, align 8
  %175 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %6
  %176 = load %"class.std::vector.13"*, %"class.std::vector.13"** %175, align 8
  %177 = call dereferenceable(24) %"class.std::vector.13"* @_ZNSt6vectorIiSaIiEEaSERKS1_(%"class.std::vector.13"* %176, %"class.std::vector.13"* dereferenceable(24) %174)
  store i32 444217183, i32* %18
  br label %179

; <label>:178:                                    ; preds = %19
  store i32 128776257, i32* %18
  br label %179

; <label>:179:                                    ; preds = %178, %172, %168, %140, %125, %120, %119, %87, %72, %65, %64, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.13"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES2_IS4_SaIS4_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"class.std::vector.13"*) #2 comdat {
  %2 = alloca %"class.std::vector.13"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.289
  %6 = load i32, i32* @y.290
  %7 = sub i32 %5, 1579230407
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1579230407
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 42273587, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 42273587, label %19
    i32 821199510, label %27
    i32 450454378, label %50
    i32 1070698059, label %52
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 821199510, i32 1070698059
  store i32 %26, i32* %15
  br label %61

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %28, i32 0, i32 0
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %30, align 8
  %31 = bitcast %"class.__gnu_cxx::__normal_iterator"* %29 to i8*
  %32 = bitcast %"class.__gnu_cxx::__normal_iterator"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 8, i32 8, i1 false)
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %29, i32 0, i32 0
  %34 = load %"class.std::vector.13"*, %"class.std::vector.13"** %33, align 8
  %35 = call %"class.std::vector.13"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES2_IS4_SaIS4_EEEELb1EE7_S_baseES8_(%"class.std::vector.13"* %34)
  store %"class.std::vector.13"* %35, %"class.std::vector.13"** %2
  %36 = load i32, i32* @x.289
  %37 = load i32, i32* @y.290
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 450454378, i32 1070698059
  store i32 %49, i32* %15
  br label %61

; <label>:50:                                     ; preds = %16
  %51 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %2
  ret %"class.std::vector.13"* %51

; <label>:52:                                     ; preds = %16
  %53 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %54 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %53, i32 0, i32 0
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %55, align 8
  %56 = bitcast %"class.__gnu_cxx::__normal_iterator"* %54 to i8*
  %57 = bitcast %"class.__gnu_cxx::__normal_iterator"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %57, i64 8, i32 8, i1 false)
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %54, i32 0, i32 0
  %59 = load %"class.std::vector.13"*, %"class.std::vector.13"** %58, align 8
  %60 = call %"class.std::vector.13"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES2_IS4_SaIS4_EEEELb1EE7_S_baseES8_(%"class.std::vector.13"* %59)
  store i32 821199510, i32* %15
  br label %61

; <label>:61:                                     ; preds = %52, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.13"* @_ZNSt6vectorIiSaIiEEaSERKS1_(%"class.std::vector.13"*, %"class.std::vector.13"* dereferenceable(24)) #2 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.13"*
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.16"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.16"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.15"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.15"*
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.16"*
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.15"*
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.15"*
  %12 = alloca i32**
  %13 = alloca i64*
  %14 = alloca %"class.std::vector.13"**
  %15 = alloca i1
  %16 = alloca i1
  %17 = load i32, i32* @x.291
  %18 = load i32, i32* @y.292
  %19 = sub i32 0, 1
  %20 = add i32 %17, %19
  %21 = sub i32 %17, 1
  %22 = mul i32 %17, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  store i1 %24, i1* %16
  %25 = icmp slt i32 %18, 10
  store i1 %25, i1* %15
  %26 = alloca i32
  store i32 -711020940, i32* %26
  br label %27

; <label>:27:                                     ; preds = %2, %444
  %28 = load i32, i32* %26
  switch i32 %28, label %29 [
    i32 -711020940, label %30
    i32 119808732, label %50
    i32 1197531384, label %83
    i32 1292014751, label %86
    i32 -359965719, label %97
    i32 192758898, label %174
    i32 -331495759, label %181
    i32 790652418, label %221
    i32 -2112520183, label %237
    i32 -157499677, label %310
    i32 -1532627395, label %311
    i32 408634912, label %312
    i32 -1343575998, label %325
    i32 1473885463, label %353
    i32 -1732005263, label %380
    i32 -1301999629, label %382
    i32 -873636296, label %397
    i32 1017304727, label %443
  ]

; <label>:29:                                     ; preds = %27
  br label %444

; <label>:30:                                     ; preds = %27
  %31 = load volatile i1, i1* %16
  %32 = load volatile i1, i1* %15
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 false, true
  %36 = and i1 %33, false
  %37 = and i1 %31, %35
  %38 = and i1 %34, false
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 false, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  %49 = select i1 %47, i32 119808732, i32 -1301999629
  store i32 %49, i32* %26
  br label %444

; <label>:50:                                     ; preds = %27
  %51 = alloca %"class.std::vector.13"*, align 8
  %52 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"** %52, %"class.std::vector.13"*** %14
  %53 = alloca i64, align 8
  store i64* %53, i64** %13
  %54 = alloca i32*, align 8
  store i32** %54, i32*** %12
  %55 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %55, %"class.__gnu_cxx::__normal_iterator.15"** %11
  %56 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %56, %"class.__gnu_cxx::__normal_iterator.15"** %10
  %57 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %57, %"class.__gnu_cxx::__normal_iterator.16"** %9
  %58 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %58, %"class.__gnu_cxx::__normal_iterator.15"** %8
  %59 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %59, %"class.__gnu_cxx::__normal_iterator.15"** %7
  %60 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %60, %"class.__gnu_cxx::__normal_iterator.16"** %6
  %61 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %61, %"class.__gnu_cxx::__normal_iterator.16"** %5
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %51, align 8
  %62 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %14
  store %"class.std::vector.13"* %1, %"class.std::vector.13"** %62, align 8
  %63 = load %"class.std::vector.13"*, %"class.std::vector.13"** %51, align 8
  store %"class.std::vector.13"* %63, %"class.std::vector.13"** %4
  %64 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %14
  %65 = load %"class.std::vector.13"*, %"class.std::vector.13"** %64, align 8
  %66 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %67 = icmp ne %"class.std::vector.13"* %65, %66
  store i1 %67, i1* %3
  %68 = load i32, i32* @x.291
  %69 = load i32, i32* @y.292
  %70 = add i32 %68, -661393396
  %71 = sub i32 %70, 1
  %72 = sub i32 %71, -661393396
  %73 = sub i32 %68, 1
  %74 = mul i32 %68, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %69, 10
  %78 = and i1 %76, %77
  %79 = xor i1 %76, %77
  %80 = or i1 %78, %79
  %81 = or i1 %76, %77
  %82 = select i1 %80, i32 1197531384, i32 -1301999629
  store i32 %82, i32* %26
  br label %444

; <label>:83:                                     ; preds = %27
  %84 = load volatile i1, i1* %3
  %85 = select i1 %84, i32 1292014751, i32 -1343575998
  store i32 %85, i32* %26
  br label %444

; <label>:86:                                     ; preds = %27
  %87 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %14
  %88 = load %"class.std::vector.13"*, %"class.std::vector.13"** %87, align 8
  %89 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.13"* %88) #11
  %90 = load volatile i64*, i64** %13
  store i64 %89, i64* %90, align 8
  %91 = load volatile i64*, i64** %13
  %92 = load i64, i64* %91, align 8
  %93 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %94 = call i64 @_ZNKSt6vectorIiSaIiEE8capacityEv(%"class.std::vector.13"* %93) #11
  %95 = icmp ugt i64 %92, %94
  %96 = select i1 %95, i32 -359965719, i32 192758898
  store i32 %96, i32* %26
  br label %444

; <label>:97:                                     ; preds = %27
  %98 = load volatile i64*, i64** %13
  %99 = load i64, i64* %98, align 8
  %100 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %14
  %101 = load %"class.std::vector.13"*, %"class.std::vector.13"** %100, align 8
  %102 = call i32* @_ZNKSt6vectorIiSaIiEE5beginEv(%"class.std::vector.13"* %101) #11
  %103 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %11
  %104 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %103, i32 0, i32 0
  store i32* %102, i32** %104, align 8
  %105 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %14
  %106 = load %"class.std::vector.13"*, %"class.std::vector.13"** %105, align 8
  %107 = call i32* @_ZNKSt6vectorIiSaIiEE3endEv(%"class.std::vector.13"* %106) #11
  %108 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %10
  %109 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %108, i32 0, i32 0
  store i32* %107, i32** %109, align 8
  %110 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %11
  %111 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %110, i32 0, i32 0
  %112 = load i32*, i32** %111, align 8
  %113 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %10
  %114 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %113, i32 0, i32 0
  %115 = load i32*, i32** %114, align 8
  %116 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %117 = call i32* @_ZNSt6vectorIiSaIiEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKiS1_EEEEPimT_S9_(%"class.std::vector.13"* %116, i64 %99, i32* %112, i32* %115)
  %118 = load volatile i32**, i32*** %12
  store i32* %117, i32** %118, align 8
  %119 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %120 = bitcast %"class.std::vector.13"* %119 to %"struct.std::_Vector_base.14"*
  %121 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %120, i32 0, i32 0
  %122 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %121, i32 0, i32 0
  %123 = load i32*, i32** %122, align 8
  %124 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %125 = bitcast %"class.std::vector.13"* %124 to %"struct.std::_Vector_base.14"*
  %126 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %125, i32 0, i32 0
  %127 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %126, i32 0, i32 1
  %128 = load i32*, i32** %127, align 8
  %129 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %130 = bitcast %"class.std::vector.13"* %129 to %"struct.std::_Vector_base.14"*
  %131 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %130) #11
  call void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %123, i32* %128, %"class.std::allocator.0"* dereferenceable(1) %131)
  %132 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %133 = bitcast %"class.std::vector.13"* %132 to %"struct.std::_Vector_base.14"*
  %134 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %135 = bitcast %"class.std::vector.13"* %134 to %"struct.std::_Vector_base.14"*
  %136 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %135, i32 0, i32 0
  %137 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %136, i32 0, i32 0
  %138 = load i32*, i32** %137, align 8
  %139 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %140 = bitcast %"class.std::vector.13"* %139 to %"struct.std::_Vector_base.14"*
  %141 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %140, i32 0, i32 0
  %142 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %141, i32 0, i32 2
  %143 = load i32*, i32** %142, align 8
  %144 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %145 = bitcast %"class.std::vector.13"* %144 to %"struct.std::_Vector_base.14"*
  %146 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %145, i32 0, i32 0
  %147 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %146, i32 0, i32 0
  %148 = load i32*, i32** %147, align 8
  %149 = ptrtoint i32* %143 to i64
  %150 = ptrtoint i32* %148 to i64
  %151 = sub i64 %149, 3077307117544539757
  %152 = sub i64 %151, %150
  %153 = add i64 %152, 3077307117544539757
  %154 = sub i64 %149, %150
  %155 = sdiv exact i64 %153, 4
  call void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.14"* %133, i32* %138, i64 %155)
  %156 = load volatile i32**, i32*** %12
  %157 = load i32*, i32** %156, align 8
  %158 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %159 = bitcast %"class.std::vector.13"* %158 to %"struct.std::_Vector_base.14"*
  %160 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %159, i32 0, i32 0
  %161 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %160, i32 0, i32 0
  store i32* %157, i32** %161, align 8
  %162 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %163 = bitcast %"class.std::vector.13"* %162 to %"struct.std::_Vector_base.14"*
  %164 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %163, i32 0, i32 0
  %165 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %164, i32 0, i32 0
  %166 = load i32*, i32** %165, align 8
  %167 = load volatile i64*, i64** %13
  %168 = load i64, i64* %167, align 8
  %169 = getelementptr inbounds i32, i32* %166, i64 %168
  %170 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %171 = bitcast %"class.std::vector.13"* %170 to %"struct.std::_Vector_base.14"*
  %172 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %171, i32 0, i32 0
  %173 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %172, i32 0, i32 2
  store i32* %169, i32** %173, align 8
  store i32 408634912, i32* %26
  br label %444

; <label>:174:                                    ; preds = %27
  %175 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %176 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.13"* %175) #11
  %177 = load volatile i64*, i64** %13
  %178 = load i64, i64* %177, align 8
  %179 = icmp uge i64 %176, %178
  %180 = select i1 %179, i32 -331495759, i32 790652418
  store i32 %180, i32* %26
  br label %444

; <label>:181:                                    ; preds = %27
  %182 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %14
  %183 = load %"class.std::vector.13"*, %"class.std::vector.13"** %182, align 8
  %184 = call i32* @_ZNKSt6vectorIiSaIiEE5beginEv(%"class.std::vector.13"* %183) #11
  %185 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %8
  %186 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %185, i32 0, i32 0
  store i32* %184, i32** %186, align 8
  %187 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %14
  %188 = load %"class.std::vector.13"*, %"class.std::vector.13"** %187, align 8
  %189 = call i32* @_ZNKSt6vectorIiSaIiEE3endEv(%"class.std::vector.13"* %188) #11
  %190 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %7
  %191 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %190, i32 0, i32 0
  store i32* %189, i32** %191, align 8
  %192 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %193 = call i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector.13"* %192) #11
  %194 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %6
  %195 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %194, i32 0, i32 0
  store i32* %193, i32** %195, align 8
  %196 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %8
  %197 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %196, i32 0, i32 0
  %198 = load i32*, i32** %197, align 8
  %199 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %7
  %200 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %199, i32 0, i32 0
  %201 = load i32*, i32** %200, align 8
  %202 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %6
  %203 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %202, i32 0, i32 0
  %204 = load i32*, i32** %203, align 8
  %205 = call i32* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET0_T_SB_SA_(i32* %198, i32* %201, i32* %204)
  %206 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %9
  %207 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %206, i32 0, i32 0
  store i32* %205, i32** %207, align 8
  %208 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %209 = call i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.13"* %208) #11
  %210 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %5
  %211 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %210, i32 0, i32 0
  store i32* %209, i32** %211, align 8
  %212 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %213 = bitcast %"class.std::vector.13"* %212 to %"struct.std::_Vector_base.14"*
  %214 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %213) #11
  %215 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %9
  %216 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %215, i32 0, i32 0
  %217 = load i32*, i32** %216, align 8
  %218 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %5
  %219 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %218, i32 0, i32 0
  %220 = load i32*, i32** %219, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RSaIT0_E(i32* %217, i32* %220, %"class.std::allocator.0"* dereferenceable(1) %214)
  store i32 -1532627395, i32* %26
  br label %444

; <label>:221:                                    ; preds = %27
  %222 = load i32, i32* @x.291
  %223 = load i32, i32* @y.292
  %224 = add i32 %222, -2070795278
  %225 = sub i32 %224, 1
  %226 = sub i32 %225, -2070795278
  %227 = sub i32 %222, 1
  %228 = mul i32 %222, %226
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %223, 10
  %232 = and i1 %230, %231
  %233 = xor i1 %230, %231
  %234 = or i1 %232, %233
  %235 = or i1 %230, %231
  %236 = select i1 %234, i32 -2112520183, i32 -873636296
  store i32 %236, i32* %26
  br label %444

; <label>:237:                                    ; preds = %27
  %238 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %14
  %239 = load %"class.std::vector.13"*, %"class.std::vector.13"** %238, align 8
  %240 = bitcast %"class.std::vector.13"* %239 to %"struct.std::_Vector_base.14"*
  %241 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %240, i32 0, i32 0
  %242 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %241, i32 0, i32 0
  %243 = load i32*, i32** %242, align 8
  %244 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %14
  %245 = load %"class.std::vector.13"*, %"class.std::vector.13"** %244, align 8
  %246 = bitcast %"class.std::vector.13"* %245 to %"struct.std::_Vector_base.14"*
  %247 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %246, i32 0, i32 0
  %248 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %247, i32 0, i32 0
  %249 = load i32*, i32** %248, align 8
  %250 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %251 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.13"* %250) #11
  %252 = getelementptr inbounds i32, i32* %249, i64 %251
  %253 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %254 = bitcast %"class.std::vector.13"* %253 to %"struct.std::_Vector_base.14"*
  %255 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %254, i32 0, i32 0
  %256 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %255, i32 0, i32 0
  %257 = load i32*, i32** %256, align 8
  %258 = call i32* @_ZSt4copyIPiS0_ET0_T_S2_S1_(i32* %243, i32* %252, i32* %257)
  %259 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %14
  %260 = load %"class.std::vector.13"*, %"class.std::vector.13"** %259, align 8
  %261 = bitcast %"class.std::vector.13"* %260 to %"struct.std::_Vector_base.14"*
  %262 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %261, i32 0, i32 0
  %263 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %262, i32 0, i32 0
  %264 = load i32*, i32** %263, align 8
  %265 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %266 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.13"* %265) #11
  %267 = getelementptr inbounds i32, i32* %264, i64 %266
  %268 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %14
  %269 = load %"class.std::vector.13"*, %"class.std::vector.13"** %268, align 8
  %270 = bitcast %"class.std::vector.13"* %269 to %"struct.std::_Vector_base.14"*
  %271 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %270, i32 0, i32 0
  %272 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %271, i32 0, i32 1
  %273 = load i32*, i32** %272, align 8
  %274 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %275 = bitcast %"class.std::vector.13"* %274 to %"struct.std::_Vector_base.14"*
  %276 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %275, i32 0, i32 0
  %277 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %276, i32 0, i32 1
  %278 = load i32*, i32** %277, align 8
  %279 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %280 = bitcast %"class.std::vector.13"* %279 to %"struct.std::_Vector_base.14"*
  %281 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %280) #11
  %282 = call i32* @_ZSt22__uninitialized_copy_aIPiS0_iET0_T_S2_S1_RSaIT1_E(i32* %267, i32* %273, i32* %278, %"class.std::allocator.0"* dereferenceable(1) %281)
  %283 = load i32, i32* @x.291
  %284 = load i32, i32* @y.292
  %285 = add i32 %283, 467346879
  %286 = sub i32 %285, 1
  %287 = sub i32 %286, 467346879
  %288 = sub i32 %283, 1
  %289 = mul i32 %283, %287
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %284, 10
  %293 = xor i1 %291, true
  %294 = xor i1 %292, true
  %295 = xor i1 true, true
  %296 = and i1 %293, true
  %297 = and i1 %291, %295
  %298 = and i1 %294, true
  %299 = and i1 %292, %295
  %300 = or i1 %296, %297
  %301 = or i1 %298, %299
  %302 = xor i1 %300, %301
  %303 = or i1 %293, %294
  %304 = xor i1 %303, true
  %305 = or i1 true, %295
  %306 = and i1 %304, %305
  %307 = or i1 %302, %306
  %308 = or i1 %291, %292
  %309 = select i1 %307, i32 -157499677, i32 -873636296
  store i32 %309, i32* %26
  br label %444

; <label>:310:                                    ; preds = %27
  store i32 -1532627395, i32* %26
  br label %444

; <label>:311:                                    ; preds = %27
  store i32 408634912, i32* %26
  br label %444

; <label>:312:                                    ; preds = %27
  %313 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %314 = bitcast %"class.std::vector.13"* %313 to %"struct.std::_Vector_base.14"*
  %315 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %314, i32 0, i32 0
  %316 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %315, i32 0, i32 0
  %317 = load i32*, i32** %316, align 8
  %318 = load volatile i64*, i64** %13
  %319 = load i64, i64* %318, align 8
  %320 = getelementptr inbounds i32, i32* %317, i64 %319
  %321 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %322 = bitcast %"class.std::vector.13"* %321 to %"struct.std::_Vector_base.14"*
  %323 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %322, i32 0, i32 0
  %324 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %323, i32 0, i32 1
  store i32* %320, i32** %324, align 8
  store i32 -1343575998, i32* %26
  br label %444

; <label>:325:                                    ; preds = %27
  %326 = load i32, i32* @x.291
  %327 = load i32, i32* @y.292
  %328 = add i32 %326, -1408409234
  %329 = sub i32 %328, 1
  %330 = sub i32 %329, -1408409234
  %331 = sub i32 %326, 1
  %332 = mul i32 %326, %330
  %333 = urem i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %327, 10
  %336 = xor i1 %334, true
  %337 = xor i1 %335, true
  %338 = xor i1 true, true
  %339 = and i1 %336, true
  %340 = and i1 %334, %338
  %341 = and i1 %337, true
  %342 = and i1 %335, %338
  %343 = or i1 %339, %340
  %344 = or i1 %341, %342
  %345 = xor i1 %343, %344
  %346 = or i1 %336, %337
  %347 = xor i1 %346, true
  %348 = or i1 true, %338
  %349 = and i1 %347, %348
  %350 = or i1 %345, %349
  %351 = or i1 %334, %335
  %352 = select i1 %350, i32 1473885463, i32 1017304727
  store i32 %352, i32* %26
  br label %444

; <label>:353:                                    ; preds = %27
  %354 = load i32, i32* @x.291
  %355 = load i32, i32* @y.292
  %356 = sub i32 0, 1
  %357 = add i32 %354, %356
  %358 = sub i32 %354, 1
  %359 = mul i32 %354, %357
  %360 = urem i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %355, 10
  %363 = xor i1 %361, true
  %364 = xor i1 %362, true
  %365 = xor i1 false, true
  %366 = and i1 %363, false
  %367 = and i1 %361, %365
  %368 = and i1 %364, false
  %369 = and i1 %362, %365
  %370 = or i1 %366, %367
  %371 = or i1 %368, %369
  %372 = xor i1 %370, %371
  %373 = or i1 %363, %364
  %374 = xor i1 %373, true
  %375 = or i1 false, %365
  %376 = and i1 %374, %375
  %377 = or i1 %372, %376
  %378 = or i1 %361, %362
  %379 = select i1 %377, i32 -1732005263, i32 1017304727
  store i32 %379, i32* %26
  br label %444

; <label>:380:                                    ; preds = %27
  %381 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  ret %"class.std::vector.13"* %381

; <label>:382:                                    ; preds = %27
  %383 = alloca %"class.std::vector.13"*, align 8
  %384 = alloca %"class.std::vector.13"*, align 8
  %385 = alloca i64, align 8
  %386 = alloca i32*, align 8
  %387 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %388 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %389 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %390 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %391 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %392 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %393 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %383, align 8
  store %"class.std::vector.13"* %1, %"class.std::vector.13"** %384, align 8
  %394 = load %"class.std::vector.13"*, %"class.std::vector.13"** %383, align 8
  %395 = load %"class.std::vector.13"*, %"class.std::vector.13"** %384, align 8
  %396 = icmp ne %"class.std::vector.13"* %395, %394
  store i32 119808732, i32* %26
  br label %444

; <label>:397:                                    ; preds = %27
  %398 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %14
  %399 = load %"class.std::vector.13"*, %"class.std::vector.13"** %398, align 8
  %400 = bitcast %"class.std::vector.13"* %399 to %"struct.std::_Vector_base.14"*
  %401 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %400, i32 0, i32 0
  %402 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %401, i32 0, i32 0
  %403 = load i32*, i32** %402, align 8
  %404 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %14
  %405 = load %"class.std::vector.13"*, %"class.std::vector.13"** %404, align 8
  %406 = bitcast %"class.std::vector.13"* %405 to %"struct.std::_Vector_base.14"*
  %407 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %406, i32 0, i32 0
  %408 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %407, i32 0, i32 0
  %409 = load i32*, i32** %408, align 8
  %410 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %411 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.13"* %410) #11
  %412 = getelementptr inbounds i32, i32* %409, i64 %411
  %413 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %414 = bitcast %"class.std::vector.13"* %413 to %"struct.std::_Vector_base.14"*
  %415 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %414, i32 0, i32 0
  %416 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %415, i32 0, i32 0
  %417 = load i32*, i32** %416, align 8
  %418 = call i32* @_ZSt4copyIPiS0_ET0_T_S2_S1_(i32* %403, i32* %412, i32* %417)
  %419 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %14
  %420 = load %"class.std::vector.13"*, %"class.std::vector.13"** %419, align 8
  %421 = bitcast %"class.std::vector.13"* %420 to %"struct.std::_Vector_base.14"*
  %422 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %421, i32 0, i32 0
  %423 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %422, i32 0, i32 0
  %424 = load i32*, i32** %423, align 8
  %425 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %426 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.13"* %425) #11
  %427 = getelementptr inbounds i32, i32* %424, i64 %426
  %428 = load volatile %"class.std::vector.13"**, %"class.std::vector.13"*** %14
  %429 = load %"class.std::vector.13"*, %"class.std::vector.13"** %428, align 8
  %430 = bitcast %"class.std::vector.13"* %429 to %"struct.std::_Vector_base.14"*
  %431 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %430, i32 0, i32 0
  %432 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %431, i32 0, i32 1
  %433 = load i32*, i32** %432, align 8
  %434 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %435 = bitcast %"class.std::vector.13"* %434 to %"struct.std::_Vector_base.14"*
  %436 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %435, i32 0, i32 0
  %437 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %436, i32 0, i32 1
  %438 = load i32*, i32** %437, align 8
  %439 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %440 = bitcast %"class.std::vector.13"* %439 to %"struct.std::_Vector_base.14"*
  %441 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %440) #11
  %442 = call i32* @_ZSt22__uninitialized_copy_aIPiS0_iET0_T_S2_S1_RSaIT1_E(i32* %427, i32* %433, i32* %438, %"class.std::allocator.0"* dereferenceable(1) %441)
  store i32 -2112520183, i32* %26
  br label %444

; <label>:443:                                    ; preds = %27
  store i32 1473885463, i32* %26
  br label %444

; <label>:444:                                    ; preds = %443, %397, %382, %353, %325, %312, %311, %310, %237, %221, %181, %174, %97, %86, %83, %50, %30, %29
  br label %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.13"*) #1 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.293
  %6 = load i32, i32* @y.294
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -678826154, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %119
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -678826154, label %18
    i32 529465666, label %26
    i32 -194973435, label %58
    i32 -1336324246, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %119

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 529465666, i32 -1336324246
  store i32 %25, i32* %14
  br label %119

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %27, align 8
  %28 = load %"class.std::vector.13"*, %"class.std::vector.13"** %27, align 8
  %29 = bitcast %"class.std::vector.13"* %28 to %"struct.std::_Vector_base.14"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %30, i32 0, i32 1
  %32 = load i32*, i32** %31, align 8
  %33 = bitcast %"class.std::vector.13"* %28 to %"struct.std::_Vector_base.14"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = ptrtoint i32* %32 to i64
  %38 = ptrtoint i32* %36 to i64
  %39 = sub i64 0, %38
  %40 = add i64 %37, %39
  %41 = sub i64 %37, %38
  %42 = sdiv exact i64 %40, 4
  store i64 %42, i64* %2
  %43 = load i32, i32* @x.293
  %44 = load i32, i32* @y.294
  %45 = add i32 %43, -1780183190
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -1780183190
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -194973435, i32 -1336324246
  store i32 %57, i32* %14
  br label %119

; <label>:58:                                     ; preds = %15
  %59 = load volatile i64, i64* %2
  ret i64 %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %61, align 8
  %62 = load %"class.std::vector.13"*, %"class.std::vector.13"** %61, align 8
  %63 = bitcast %"class.std::vector.13"* %62 to %"struct.std::_Vector_base.14"*
  %64 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %64, i32 0, i32 1
  %66 = load i32*, i32** %65, align 8
  %67 = bitcast %"class.std::vector.13"* %62 to %"struct.std::_Vector_base.14"*
  %68 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %67, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %68, i32 0, i32 0
  %70 = load i32*, i32** %69, align 8
  %71 = ptrtoint i32* %66 to i64
  %72 = ptrtoint i32* %70 to i64
  %73 = shl i64 %71, %72
  %74 = sub i64 0, %72
  %75 = add i64 %71, %74
  %76 = sub i64 %71, %72
  %77 = sub i64 0, -1912703114085696061
  %78 = sub i64 %77, %75
  %79 = add i64 %78, -1912703114085696061
  %80 = sub i64 0, %75
  %81 = sub i64 0, 4
  %82 = sub i64 %79, %81
  %83 = add i64 %79, 4
  %84 = sub i64 0, 4
  %85 = add i64 %75, %84
  %86 = sub i64 %75, 4
  %87 = mul i64 %85, 4
  %88 = sub i64 0, %75
  %89 = add i64 0, %88
  %90 = sub i64 0, %75
  %91 = sub i64 0, %89
  %92 = sub i64 0, 4
  %93 = add i64 %91, %92
  %94 = sub i64 0, %93
  %95 = add i64 %89, 4
  %96 = sub i64 %75, -3227447934452264383
  %97 = sub i64 %96, 4
  %98 = add i64 %97, -3227447934452264383
  %99 = sub i64 %75, 4
  %100 = mul i64 %98, 4
  %101 = sub i64 0, -8402605968650652682
  %102 = sub i64 %101, %75
  %103 = add i64 %102, -8402605968650652682
  %104 = sub i64 0, %75
  %105 = sub i64 %103, -2626125148805827775
  %106 = add i64 %105, 4
  %107 = add i64 %106, -2626125148805827775
  %108 = add i64 %103, 4
  %109 = sub i64 0, -1141342788896463852
  %110 = sub i64 %109, %75
  %111 = add i64 %110, -1141342788896463852
  %112 = sub i64 0, %75
  %113 = sub i64 0, %111
  %114 = sub i64 0, 4
  %115 = add i64 %113, %114
  %116 = sub i64 0, %115
  %117 = add i64 %111, 4
  %118 = sdiv exact i64 %75, 4
  store i32 529465666, i32* %14
  br label %119

; <label>:119:                                    ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE8capacityEv(%"class.std::vector.13"*) #1 comdat align 2 {
  %2 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %2, align 8
  %3 = load %"class.std::vector.13"*, %"class.std::vector.13"** %2, align 8
  %4 = bitcast %"class.std::vector.13"* %3 to %"struct.std::_Vector_base.14"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 2
  %7 = load i32*, i32** %6, align 8
  %8 = bitcast %"class.std::vector.13"* %3 to %"struct.std::_Vector_base.14"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = ptrtoint i32* %7 to i64
  %13 = ptrtoint i32* %11 to i64
  %14 = add i64 %12, 1939429235951780337
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, 1939429235951780337
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 4
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt6vectorIiSaIiEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKiS1_EEEEPimT_S9_(%"class.std::vector.13"*, i64, i32*, i32*) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.297
  %6 = load i32, i32* @y.298
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %6, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %184

; <label>:18:                                     ; preds = %4, %184
  %19 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %20 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %21 = alloca %"class.std::vector.13"*, align 8
  %22 = alloca i64, align 8
  %23 = alloca i32*, align 8
  %24 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %25 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %26 = alloca i8*
  %27 = alloca i32
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %19, i32 0, i32 0
  store i32* %2, i32** %28, align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %20, i32 0, i32 0
  store i32* %3, i32** %29, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %21, align 8
  store i64 %1, i64* %22, align 8
  %30 = load %"class.std::vector.13"*, %"class.std::vector.13"** %21, align 8
  %31 = bitcast %"class.std::vector.13"* %30 to %"struct.std::_Vector_base.14"*
  %32 = load i64, i64* %22, align 8
  %33 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.14"* %31, i64 %32)
  store i32* %33, i32** %23, align 8
  %34 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %24 to i8*
  %35 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 8, i32 8, i1 false)
  %36 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %25 to i8*
  %37 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 8, i32 8, i1 false)
  %38 = load i32*, i32** %23, align 8
  %39 = bitcast %"class.std::vector.13"* %30 to %"struct.std::_Vector_base.14"*
  %40 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %39) #11
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %24, i32 0, i32 0
  %42 = load i32*, i32** %41, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %25, i32 0, i32 0
  %44 = load i32*, i32** %43, align 8
  %45 = load i32, i32* @x.297
  %46 = load i32, i32* @y.298
  %47 = sub i32 %45, 659693859
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 659693859
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  br i1 %69, label %71, label %184

; <label>:71:                                     ; preds = %18
  %72 = invoke i32* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E(i32* %42, i32* %44, i32* %38, %"class.std::allocator.0"* dereferenceable(1) %40)
          to label %73 unwind label %75

; <label>:73:                                     ; preds = %71
  %74 = load i32*, i32** %23, align 8
  ret i32* %74

; <label>:75:                                     ; preds = %71
  %76 = load i32, i32* @x.297
  %77 = load i32, i32* @y.298
  %78 = sub i32 0, 1
  %79 = add i32 %76, %78
  %80 = sub i32 %76, 1
  %81 = mul i32 %76, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %77, 10
  %85 = and i1 %83, %84
  %86 = xor i1 %83, %84
  %87 = or i1 %85, %86
  %88 = or i1 %83, %84
  br i1 %87, label %89, label %211

; <label>:89:                                     ; preds = %75, %211
  %90 = landingpad { i8*, i32 }
          catch i8* null
  %91 = extractvalue { i8*, i32 } %90, 0
  store i8* %91, i8** %26, align 8
  %92 = extractvalue { i8*, i32 } %90, 1
  store i32 %92, i32* %27, align 4
  %93 = load i32, i32* @x.297
  %94 = load i32, i32* @y.298
  %95 = add i32 %93, -1286727996
  %96 = sub i32 %95, 1
  %97 = sub i32 %96, -1286727996
  %98 = sub i32 %93, 1
  %99 = mul i32 %93, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %94, 10
  %103 = xor i1 %101, true
  %104 = xor i1 %102, true
  %105 = xor i1 false, true
  %106 = and i1 %103, false
  %107 = and i1 %101, %105
  %108 = and i1 %104, false
  %109 = and i1 %102, %105
  %110 = or i1 %106, %107
  %111 = or i1 %108, %109
  %112 = xor i1 %110, %111
  %113 = or i1 %103, %104
  %114 = xor i1 %113, true
  %115 = or i1 false, %105
  %116 = and i1 %114, %115
  %117 = or i1 %112, %116
  %118 = or i1 %101, %102
  br i1 %117, label %119, label %211

; <label>:119:                                    ; preds = %89
  br label %120

; <label>:120:                                    ; preds = %119
  %121 = load i8*, i8** %26, align 8
  %122 = call i8* @__cxa_begin_catch(i8* %121) #11
  %123 = bitcast %"class.std::vector.13"* %30 to %"struct.std::_Vector_base.14"*
  %124 = load i32*, i32** %23, align 8
  %125 = load i64, i64* %22, align 8
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.14"* %123, i32* %124, i64 %125)
          to label %126 unwind label %127

; <label>:126:                                    ; preds = %120
  invoke void @__cxa_rethrow() #13
          to label %183 unwind label %127

; <label>:127:                                    ; preds = %126, %120
  %128 = load i32, i32* @x.297
  %129 = load i32, i32* @y.298
  %130 = sub i32 %128, 1102506572
  %131 = sub i32 %130, 1
  %132 = add i32 %131, 1102506572
  %133 = sub i32 %128, 1
  %134 = mul i32 %128, %132
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %129, 10
  %138 = and i1 %136, %137
  %139 = xor i1 %136, %137
  %140 = or i1 %138, %139
  %141 = or i1 %136, %137
  br i1 %140, label %142, label %215

; <label>:142:                                    ; preds = %127, %215
  %143 = landingpad { i8*, i32 }
          cleanup
  %144 = extractvalue { i8*, i32 } %143, 0
  store i8* %144, i8** %26, align 8
  %145 = extractvalue { i8*, i32 } %143, 1
  store i32 %145, i32* %27, align 4
  %146 = load i32, i32* @x.297
  %147 = load i32, i32* @y.298
  %148 = add i32 %146, 1562958679
  %149 = sub i32 %148, 1
  %150 = sub i32 %149, 1562958679
  %151 = sub i32 %146, 1
  %152 = mul i32 %146, %150
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %147, 10
  %156 = xor i1 %154, true
  %157 = xor i1 %155, true
  %158 = xor i1 true, true
  %159 = and i1 %156, true
  %160 = and i1 %154, %158
  %161 = and i1 %157, true
  %162 = and i1 %155, %158
  %163 = or i1 %159, %160
  %164 = or i1 %161, %162
  %165 = xor i1 %163, %164
  %166 = or i1 %156, %157
  %167 = xor i1 %166, true
  %168 = or i1 true, %158
  %169 = and i1 %167, %168
  %170 = or i1 %165, %169
  %171 = or i1 %154, %155
  br i1 %170, label %172, label %215

; <label>:172:                                    ; preds = %142
  invoke void @__cxa_end_catch()
          to label %173 unwind label %180

; <label>:173:                                    ; preds = %172
  br label %175
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:175:                                    ; preds = %173
  %176 = load i8*, i8** %26, align 8
  %177 = load i32, i32* %27, align 4
  %178 = insertvalue { i8*, i32 } undef, i8* %176, 0
  %179 = insertvalue { i8*, i32 } %178, i32 %177, 1
  resume { i8*, i32 } %179

; <label>:180:                                    ; preds = %172
  %181 = landingpad { i8*, i32 }
          catch i8* null
  %182 = extractvalue { i8*, i32 } %181, 0
  call void @__clang_call_terminate(i8* %182) #9
  unreachable

; <label>:183:                                    ; preds = %126
  unreachable

; <label>:184:                                    ; preds = %18, %4
  %185 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %186 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %187 = alloca %"class.std::vector.13"*, align 8
  %188 = alloca i64, align 8
  %189 = alloca i32*, align 8
  %190 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %191 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %192 = alloca i8*
  %193 = alloca i32
  %194 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %185, i32 0, i32 0
  store i32* %2, i32** %194, align 8
  %195 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %186, i32 0, i32 0
  store i32* %3, i32** %195, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %187, align 8
  store i64 %1, i64* %188, align 8
  %196 = load %"class.std::vector.13"*, %"class.std::vector.13"** %187, align 8
  %197 = bitcast %"class.std::vector.13"* %196 to %"struct.std::_Vector_base.14"*
  %198 = load i64, i64* %188, align 8
  %199 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.14"* %197, i64 %198)
  store i32* %199, i32** %189, align 8
  %200 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %190 to i8*
  %201 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %185 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %200, i8* %201, i64 8, i32 8, i1 false)
  %202 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %191 to i8*
  %203 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %186 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %202, i8* %203, i64 8, i32 8, i1 false)
  %204 = load i32*, i32** %189, align 8
  %205 = bitcast %"class.std::vector.13"* %196 to %"struct.std::_Vector_base.14"*
  %206 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %205) #11
  %207 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %190, i32 0, i32 0
  %208 = load i32*, i32** %207, align 8
  %209 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %191, i32 0, i32 0
  %210 = load i32*, i32** %209, align 8
  br label %18

; <label>:211:                                    ; preds = %89, %75
  %212 = landingpad { i8*, i32 }
          catch i8* null
  %213 = extractvalue { i8*, i32 } %212, 0
  store i8* %213, i8** %26, align 8
  %214 = extractvalue { i8*, i32 } %212, 1
  store i32 %214, i32* %27, align 4
  br label %89

; <label>:215:                                    ; preds = %142, %127
  %216 = landingpad { i8*, i32 }
          cleanup
  %217 = extractvalue { i8*, i32 } %216, 0
  store i8* %217, i8** %26, align 8
  %218 = extractvalue { i8*, i32 } %216, 1
  store i32 %218, i32* %27, align 4
  br label %142
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNKSt6vectorIiSaIiEE5beginEv(%"class.std::vector.13"*) #1 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.299
  %6 = load i32, i32* @y.300
  %7 = add i32 %5, 1196500826
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1196500826
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1812194174, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1812194174, label %19
    i32 293117356, label %27
    i32 1161010778, label %52
    i32 771212391, label %54
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 293117356, i32 771212391
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %29 = alloca %"class.std::vector.13"*, align 8
  %30 = alloca i32*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %29, align 8
  %31 = load %"class.std::vector.13"*, %"class.std::vector.13"** %29, align 8
  %32 = bitcast %"class.std::vector.13"* %31 to %"struct.std::_Vector_base.14"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  store i32* %35, i32** %30, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.15"* %28, i32** dereferenceable(8) %30) #11
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %28, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  store i32* %37, i32** %2
  %38 = load i32, i32* @x.299
  %39 = load i32, i32* @y.300
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 1161010778, i32 771212391
  store i32 %51, i32* %15
  br label %65

; <label>:52:                                     ; preds = %16
  %53 = load volatile i32*, i32** %2
  ret i32* %53

; <label>:54:                                     ; preds = %16
  %55 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %56 = alloca %"class.std::vector.13"*, align 8
  %57 = alloca i32*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %56, align 8
  %58 = load %"class.std::vector.13"*, %"class.std::vector.13"** %56, align 8
  %59 = bitcast %"class.std::vector.13"* %58 to %"struct.std::_Vector_base.14"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %60, i32 0, i32 0
  %62 = load i32*, i32** %61, align 8
  store i32* %62, i32** %57, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.15"* %55, i32** dereferenceable(8) %57) #11
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %55, i32 0, i32 0
  %64 = load i32*, i32** %63, align 8
  store i32 293117356, i32* %15
  br label %65

; <label>:65:                                     ; preds = %54, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNKSt6vectorIiSaIiEE3endEv(%"class.std::vector.13"*) #1 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.301
  %6 = load i32, i32* @y.302
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1330473831, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1330473831, label %18
    i32 1983866200, label %26
    i32 -1286903415, label %52
    i32 825327035, label %54
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1983866200, i32 825327035
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %28 = alloca %"class.std::vector.13"*, align 8
  %29 = alloca i32*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %28, align 8
  %30 = load %"class.std::vector.13"*, %"class.std::vector.13"** %28, align 8
  %31 = bitcast %"class.std::vector.13"* %30 to %"struct.std::_Vector_base.14"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %32, i32 0, i32 1
  %34 = load i32*, i32** %33, align 8
  store i32* %34, i32** %29, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.15"* %27, i32** dereferenceable(8) %29) #11
  %35 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %27, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  store i32* %36, i32** %2
  %37 = load i32, i32* @x.301
  %38 = load i32, i32* @y.302
  %39 = add i32 %37, 1443448740
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, 1443448740
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 -1286903415, i32 825327035
  store i32 %51, i32* %14
  br label %65

; <label>:52:                                     ; preds = %15
  %53 = load volatile i32*, i32** %2
  ret i32* %53

; <label>:54:                                     ; preds = %15
  %55 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %56 = alloca %"class.std::vector.13"*, align 8
  %57 = alloca i32*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %56, align 8
  %58 = load %"class.std::vector.13"*, %"class.std::vector.13"** %56, align 8
  %59 = bitcast %"class.std::vector.13"* %58 to %"struct.std::_Vector_base.14"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %60, i32 0, i32 1
  %62 = load i32*, i32** %61, align 8
  store i32* %62, i32** %57, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.15"* %55, i32** dereferenceable(8) %57) #11
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %55, i32 0, i32 0
  %64 = load i32*, i32** %63, align 8
  store i32 1983866200, i32* %14
  br label %65

; <label>:65:                                     ; preds = %54, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RSaIT0_E(i32*, i32*, %"class.std::allocator.0"* dereferenceable(1)) #2 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %6 = alloca %"class.std::allocator.0"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %4, i32 0, i32 0
  store i32* %0, i32** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %5, i32 0, i32 0
  store i32* %1, i32** %10, align 8
  store %"class.std::allocator.0"* %2, %"class.std::allocator.0"** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %7, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %8, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_(i32* %16, i32* %18)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET0_T_SB_SA_(i32*, i32*, i32*) #2 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.305
  %8 = load i32, i32* @y.306
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -2101445954, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %143
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -2101445954, label %20
    i32 1759395781, label %40
    i32 925271169, label %104
    i32 -178595187, label %106
  ]

; <label>:19:                                     ; preds = %17
  br label %143

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1759395781, i32 -178595187
  store i32 %39, i32* %16
  br label %143

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %48 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %49 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %42, i32 0, i32 0
  store i32* %0, i32** %50, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %43, i32 0, i32 0
  store i32* %1, i32** %51, align 8
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %44, i32 0, i32 0
  store i32* %2, i32** %52, align 8
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %46 to i8*
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 8, i32 8, i1 false)
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %46, i32 0, i32 0
  %56 = load i32*, i32** %55, align 8
  %57 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i32* %56)
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %45, i32 0, i32 0
  store i32* %57, i32** %58, align 8
  %59 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %48 to i8*
  %60 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %59, i8* %60, i64 8, i32 8, i1 false)
  %61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %48, i32 0, i32 0
  %62 = load i32*, i32** %61, align 8
  %63 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i32* %62)
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %47, i32 0, i32 0
  store i32* %63, i32** %64, align 8
  %65 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %49 to i8*
  %66 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 8, i32 8, i1 false)
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %45, i32 0, i32 0
  %68 = load i32*, i32** %67, align 8
  %69 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %47, i32 0, i32 0
  %70 = load i32*, i32** %69, align 8
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %49, i32 0, i32 0
  %72 = load i32*, i32** %71, align 8
  %73 = call i32* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET1_T0_SB_SA_(i32* %68, i32* %70, i32* %72)
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %41, i32 0, i32 0
  store i32* %73, i32** %74, align 8
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %41, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  store i32* %76, i32** %4
  %77 = load i32, i32* @x.305
  %78 = load i32, i32* @y.306
  %79 = sub i32 %77, -1182090101
  %80 = sub i32 %79, 1
  %81 = add i32 %80, -1182090101
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = xor i1 %85, true
  %88 = xor i1 %86, true
  %89 = xor i1 true, true
  %90 = and i1 %87, true
  %91 = and i1 %85, %89
  %92 = and i1 %88, true
  %93 = and i1 %86, %89
  %94 = or i1 %90, %91
  %95 = or i1 %92, %93
  %96 = xor i1 %94, %95
  %97 = or i1 %87, %88
  %98 = xor i1 %97, true
  %99 = or i1 true, %89
  %100 = and i1 %98, %99
  %101 = or i1 %96, %100
  %102 = or i1 %85, %86
  %103 = select i1 %101, i32 925271169, i32 -178595187
  store i32 %103, i32* %16
  br label %143

; <label>:104:                                    ; preds = %17
  %105 = load volatile i32*, i32** %4
  ret i32* %105

; <label>:106:                                    ; preds = %17
  %107 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %108 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %109 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %110 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %111 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %112 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %113 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %114 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %115 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %116 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %108, i32 0, i32 0
  store i32* %0, i32** %116, align 8
  %117 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %109, i32 0, i32 0
  store i32* %1, i32** %117, align 8
  %118 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %110, i32 0, i32 0
  store i32* %2, i32** %118, align 8
  %119 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %112 to i8*
  %120 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %108 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %119, i8* %120, i64 8, i32 8, i1 false)
  %121 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %112, i32 0, i32 0
  %122 = load i32*, i32** %121, align 8
  %123 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i32* %122)
  %124 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %111, i32 0, i32 0
  store i32* %123, i32** %124, align 8
  %125 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %114 to i8*
  %126 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %125, i8* %126, i64 8, i32 8, i1 false)
  %127 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %114, i32 0, i32 0
  %128 = load i32*, i32** %127, align 8
  %129 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i32* %128)
  %130 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %113, i32 0, i32 0
  store i32* %129, i32** %130, align 8
  %131 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %115 to i8*
  %132 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %110 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %131, i8* %132, i64 8, i32 8, i1 false)
  %133 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %111, i32 0, i32 0
  %134 = load i32*, i32** %133, align 8
  %135 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %113, i32 0, i32 0
  %136 = load i32*, i32** %135, align 8
  %137 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %115, i32 0, i32 0
  %138 = load i32*, i32** %137, align 8
  %139 = call i32* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET1_T0_SB_SA_(i32* %134, i32* %136, i32* %138)
  %140 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %107, i32 0, i32 0
  store i32* %139, i32** %140, align 8
  %141 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %107, i32 0, i32 0
  %142 = load i32*, i32** %141, align 8
  store i32 1759395781, i32* %16
  br label %143

; <label>:143:                                    ; preds = %106, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector.13"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %3 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %3, align 8
  %4 = load %"class.std::vector.13"*, %"class.std::vector.13"** %3, align 8
  %5 = bitcast %"class.std::vector.13"* %4 to %"struct.std::_Vector_base.14"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.16"* %2, i32** dereferenceable(8) %7) #11
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %2, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  ret i32* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.13"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %3 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %3, align 8
  %4 = load %"class.std::vector.13"*, %"class.std::vector.13"** %3, align 8
  %5 = bitcast %"class.std::vector.13"* %4 to %"struct.std::_Vector_base.14"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.16"* %2, i32** dereferenceable(8) %7) #11
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %2, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  ret i32* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt4copyIPiS0_ET0_T_S2_S1_(i32*, i32*, i32*) #2 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.311
  %8 = load i32, i32* @y.312
  %9 = add i32 %7, 462350421
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 462350421
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1992876318, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %90
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1992876318, label %21
    i32 -1817539267, label %41
    i32 -417216966, label %78
    i32 1495802208, label %80
  ]

; <label>:20:                                     ; preds = %18
  br label %90

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1817539267, i32 1495802208
  store i32 %40, i32* %17
  br label %90

; <label>:41:                                     ; preds = %18
  %42 = alloca i32*, align 8
  %43 = alloca i32*, align 8
  %44 = alloca i32*, align 8
  store i32* %0, i32** %42, align 8
  store i32* %1, i32** %43, align 8
  store i32* %2, i32** %44, align 8
  %45 = load i32*, i32** %42, align 8
  %46 = call i32* @_ZSt12__miter_baseIPiENSt11_Miter_baseIT_E13iterator_typeES2_(i32* %45)
  %47 = load i32*, i32** %43, align 8
  %48 = call i32* @_ZSt12__miter_baseIPiENSt11_Miter_baseIT_E13iterator_typeES2_(i32* %47)
  %49 = load i32*, i32** %44, align 8
  %50 = call i32* @_ZSt14__copy_move_a2ILb0EPiS0_ET1_T0_S2_S1_(i32* %46, i32* %48, i32* %49)
  store i32* %50, i32** %4
  %51 = load i32, i32* @x.311
  %52 = load i32, i32* @y.312
  %53 = add i32 %51, 2095992082
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, 2095992082
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 -417216966, i32 1495802208
  store i32 %77, i32* %17
  br label %90

; <label>:78:                                     ; preds = %18
  %79 = load volatile i32*, i32** %4
  ret i32* %79

; <label>:80:                                     ; preds = %18
  %81 = alloca i32*, align 8
  %82 = alloca i32*, align 8
  %83 = alloca i32*, align 8
  store i32* %0, i32** %81, align 8
  store i32* %1, i32** %82, align 8
  store i32* %2, i32** %83, align 8
  %84 = load i32*, i32** %81, align 8
  %85 = call i32* @_ZSt12__miter_baseIPiENSt11_Miter_baseIT_E13iterator_typeES2_(i32* %84)
  %86 = load i32*, i32** %82, align 8
  %87 = call i32* @_ZSt12__miter_baseIPiENSt11_Miter_baseIT_E13iterator_typeES2_(i32* %86)
  %88 = load i32*, i32** %83, align 8
  %89 = call i32* @_ZSt14__copy_move_a2ILb0EPiS0_ET1_T0_S2_S1_(i32* %85, i32* %87, i32* %88)
  store i32 -1817539267, i32* %17
  br label %90

; <label>:90:                                     ; preds = %80, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__uninitialized_copy_aIPiS0_iET0_T_S2_S1_RSaIT1_E(i32*, i32*, i32*, %"class.std::allocator.0"* dereferenceable(1)) #2 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.0"*, align 8
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %8, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = call i32* @_ZSt18uninitialized_copyIPiS0_ET0_T_S2_S1_(i32* %9, i32* %10, i32* %11)
  ret i32* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.14"*, i64) #2 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.14"*
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.315
  %10 = load i32, i32* @y.316
  %11 = add i32 %9, 557721578
  %12 = sub i32 %11, 1
  %13 = sub i32 %12, 557721578
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 850777950, i32* %19
  %20 = alloca i32*
  br label %21

; <label>:21:                                     ; preds = %2, %149
  %22 = load i32, i32* %19
  switch i32 %22, label %23 [
    i32 850777950, label %24
    i32 345700278, label %44
    i32 106899144, label %78
    i32 1331876430, label %81
    i32 -1061749194, label %109
    i32 1849527706, label %131
    i32 -1244073608, label %133
    i32 -1387545091, label %134
    i32 1369972241, label %136
    i32 309202824, label %142
  ]

; <label>:23:                                     ; preds = %21
  br label %149

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %8
  %26 = load volatile i1, i1* %7
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 345700278, i32 1369972241
  store i32 %43, i32* %19
  br label %149

; <label>:44:                                     ; preds = %21
  %45 = alloca %"struct.std::_Vector_base.14"*, align 8
  %46 = alloca i64, align 8
  store i64* %46, i64** %6
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %45, align 8
  %47 = load volatile i64*, i64** %6
  store i64 %1, i64* %47, align 8
  %48 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %45, align 8
  store %"struct.std::_Vector_base.14"* %48, %"struct.std::_Vector_base.14"** %5
  %49 = load volatile i64*, i64** %6
  %50 = load i64, i64* %49, align 8
  %51 = icmp ne i64 %50, 0
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.315
  %53 = load i32, i32* @y.316
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 106899144, i32 1369972241
  store i32 %77, i32* %19
  br label %149

; <label>:78:                                     ; preds = %21
  %79 = load volatile i1, i1* %4
  %80 = select i1 %79, i32 1331876430, i32 -1244073608
  store i32 %80, i32* %19
  br label %149

; <label>:81:                                     ; preds = %21
  %82 = load i32, i32* @x.315
  %83 = load i32, i32* @y.316
  %84 = add i32 %82, -1544264869
  %85 = sub i32 %84, 1
  %86 = sub i32 %85, -1544264869
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = xor i1 %90, true
  %93 = xor i1 %91, true
  %94 = xor i1 false, true
  %95 = and i1 %92, false
  %96 = and i1 %90, %94
  %97 = and i1 %93, false
  %98 = and i1 %91, %94
  %99 = or i1 %95, %96
  %100 = or i1 %97, %98
  %101 = xor i1 %99, %100
  %102 = or i1 %92, %93
  %103 = xor i1 %102, true
  %104 = or i1 false, %94
  %105 = and i1 %103, %104
  %106 = or i1 %101, %105
  %107 = or i1 %90, %91
  %108 = select i1 %106, i32 -1061749194, i32 309202824
  store i32 %108, i32* %19
  br label %149

; <label>:109:                                    ; preds = %21
  %110 = load volatile %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %5
  %111 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %110, i32 0, i32 0
  %112 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %111 to %"class.std::allocator.0"*
  %113 = load volatile i64*, i64** %6
  %114 = load i64, i64* %113, align 8
  %115 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.0"* dereferenceable(1) %112, i64 %114)
  store i32* %115, i32** %3
  %116 = load i32, i32* @x.315
  %117 = load i32, i32* @y.316
  %118 = sub i32 %116, -1130832309
  %119 = sub i32 %118, 1
  %120 = add i32 %119, -1130832309
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = and i1 %124, %125
  %127 = xor i1 %124, %125
  %128 = or i1 %126, %127
  %129 = or i1 %124, %125
  %130 = select i1 %128, i32 1849527706, i32 309202824
  store i32 %130, i32* %19
  br label %149

; <label>:131:                                    ; preds = %21
  store i32 -1387545091, i32* %19
  %132 = load volatile i32*, i32** %3
  store i32* %132, i32** %20
  br label %149

; <label>:133:                                    ; preds = %21
  store i32 -1387545091, i32* %19
  store i32* null, i32** %20
  br label %149

; <label>:134:                                    ; preds = %21
  %135 = load i32*, i32** %20
  ret i32* %135

; <label>:136:                                    ; preds = %21
  %137 = alloca %"struct.std::_Vector_base.14"*, align 8
  %138 = alloca i64, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %137, align 8
  store i64 %1, i64* %138, align 8
  %139 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %137, align 8
  %140 = load i64, i64* %138, align 8
  %141 = icmp ne i64 %140, 0
  store i32 345700278, i32* %19
  br label %149

; <label>:142:                                    ; preds = %21
  %143 = load volatile %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %5
  %144 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %143, i32 0, i32 0
  %145 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %144 to %"class.std::allocator.0"*
  %146 = load volatile i64*, i64** %6
  %147 = load i64, i64* %146, align 8
  %148 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.0"* dereferenceable(1) %145, i64 %147)
  store i32 -1061749194, i32* %19
  br label %149

; <label>:149:                                    ; preds = %142, %136, %133, %131, %109, %81, %78, %44, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E(i32*, i32*, i32*, %"class.std::allocator.0"* dereferenceable(1)) #2 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.0"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %5, i32 0, i32 0
  store i32* %0, i32** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %6, i32 0, i32 0
  store i32* %1, i32** %12, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %8, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %9 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %10 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load i32*, i32** %7, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %9, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %10, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = call i32* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_(i32* %19, i32* %21, i32* %17)
  ret i32* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.0"* dereferenceable(1), i64) #2 comdat align 2 {
  %3 = alloca %"class.std::allocator.0"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %3, align 8
  %6 = bitcast %"class.std::allocator.0"* %5 to %"class.__gnu_cxx::new_allocator.1"*
  %7 = load i64, i64* %4, align 8
  %8 = call i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.1"* %6, i64 %7, i8* null)
  ret i32* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.1"*, i64, i8*) #2 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.1"* %10) #11
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 1517497421, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %110
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1517497421, label %17
    i32 -1503262145, label %22
    i32 -1297605689, label %38
    i32 1114473825, label %66
    i32 322753309, label %67
    i32 1497800722, label %82
    i32 1441629882, label %102
    i32 -275394196, label %104
    i32 -1137775087, label %105
  ]

; <label>:16:                                     ; preds = %14
  br label %110

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 -1503262145, i32 322753309
  store i32 %21, i32* %13
  br label %110

; <label>:22:                                     ; preds = %14
  %23 = load i32, i32* @x.321
  %24 = load i32, i32* @y.322
  %25 = sub i32 %23, 1938930120
  %26 = sub i32 %25, 1
  %27 = add i32 %26, 1938930120
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  %37 = select i1 %35, i32 -1297605689, i32 -275394196
  store i32 %37, i32* %13
  br label %110

; <label>:38:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #13
  %39 = load i32, i32* @x.321
  %40 = load i32, i32* @y.322
  %41 = sub i32 %39, -26432480
  %42 = sub i32 %41, 1
  %43 = add i32 %42, -26432480
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 1114473825, i32 -275394196
  store i32 %65, i32* %13
  br label %110

; <label>:66:                                     ; preds = %14
  unreachable

; <label>:67:                                     ; preds = %14
  %68 = load i32, i32* @x.321
  %69 = load i32, i32* @y.322
  %70 = sub i32 0, 1
  %71 = add i32 %68, %70
  %72 = sub i32 %68, 1
  %73 = mul i32 %68, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %69, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  %81 = select i1 %79, i32 1497800722, i32 -1137775087
  store i32 %81, i32* %13
  br label %110

; <label>:82:                                     ; preds = %14
  %83 = load i64, i64* %8, align 8
  %84 = mul i64 %83, 4
  %85 = call i8* @_Znwm(i64 %84)
  %86 = bitcast i8* %85 to i32*
  store i32* %86, i32** %4
  %87 = load i32, i32* @x.321
  %88 = load i32, i32* @y.322
  %89 = add i32 %87, 1959973174
  %90 = sub i32 %89, 1
  %91 = sub i32 %90, 1959973174
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = and i1 %95, %96
  %98 = xor i1 %95, %96
  %99 = or i1 %97, %98
  %100 = or i1 %95, %96
  %101 = select i1 %99, i32 1441629882, i32 -1137775087
  store i32 %101, i32* %13
  br label %110

; <label>:102:                                    ; preds = %14
  %103 = load volatile i32*, i32** %4
  ret i32* %103

; <label>:104:                                    ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #13
  store i32 -1297605689, i32* %13
  br label %110

; <label>:105:                                    ; preds = %14
  %106 = load i64, i64* %8, align 8
  %107 = mul i64 %106, 4
  %108 = call i8* @_Znwm(i64 %107)
  %109 = bitcast i8* %108 to i32*
  store i32 1497800722, i32* %13
  br label %110

; <label>:110:                                    ; preds = %105, %104, %82, %67, %38, %22, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.1"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  ret i64 4611686018427387903
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_(i32*, i32*, i32*) #2 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %4, i32 0, i32 0
  store i32* %0, i32** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %5, i32 0, i32 0
  store i32* %1, i32** %11, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %8 to i8*
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %9 to i8*
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load i32*, i32** %6, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %8, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %9, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_(i32* %18, i32* %20, i32* %16)
  ret i32* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_(i32*, i32*, i32*) #2 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %4, i32 0, i32 0
  store i32* %0, i32** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %5, i32 0, i32 0
  store i32* %1, i32** %10, align 8
  store i32* %2, i32** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load i32*, i32** %6, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %7, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %8, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = call i32* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_(i32* %17, i32* %19, i32* %15)
  ret i32* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_(i32*, i32*, i32*) #2 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.329
  %8 = load i32, i32* @y.330
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 169607273, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %113
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 169607273, label %20
    i32 1593614881, label %28
    i32 -1447381655, label %83
    i32 -1015966268, label %85
  ]

; <label>:19:                                     ; preds = %17
  br label %113

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1593614881, i32 -1015966268
  store i32 %27, i32* %16
  br label %113

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %31 = alloca i32*, align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %33 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %34 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %35 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %29, i32 0, i32 0
  store i32* %0, i32** %36, align 8
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %30, i32 0, i32 0
  store i32* %1, i32** %37, align 8
  store i32* %2, i32** %31, align 8
  %38 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %33 to i8*
  %39 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 8, i1 false)
  %40 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %33, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i32* %41)
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %32, i32 0, i32 0
  store i32* %42, i32** %43, align 8
  %44 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %35 to i8*
  %45 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %44, i8* %45, i64 8, i32 8, i1 false)
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %35, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  %48 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i32* %47)
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %34, i32 0, i32 0
  store i32* %48, i32** %49, align 8
  %50 = load i32*, i32** %31, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %32, i32 0, i32 0
  %52 = load i32*, i32** %51, align 8
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %34, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = call i32* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_(i32* %52, i32* %54, i32* %50)
  store i32* %55, i32** %4
  %56 = load i32, i32* @x.329
  %57 = load i32, i32* @y.330
  %58 = add i32 %56, 1140035979
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, 1140035979
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 false, true
  %69 = and i1 %66, false
  %70 = and i1 %64, %68
  %71 = and i1 %67, false
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 false, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 -1447381655, i32 -1015966268
  store i32 %82, i32* %16
  br label %113

; <label>:83:                                     ; preds = %17
  %84 = load volatile i32*, i32** %4
  ret i32* %84

; <label>:85:                                     ; preds = %17
  %86 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %87 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %88 = alloca i32*, align 8
  %89 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %90 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %91 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %92 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %93 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %86, i32 0, i32 0
  store i32* %0, i32** %93, align 8
  %94 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %87, i32 0, i32 0
  store i32* %1, i32** %94, align 8
  store i32* %2, i32** %88, align 8
  %95 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %90 to i8*
  %96 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %96, i64 8, i32 8, i1 false)
  %97 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %90, i32 0, i32 0
  %98 = load i32*, i32** %97, align 8
  %99 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i32* %98)
  %100 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %89, i32 0, i32 0
  store i32* %99, i32** %100, align 8
  %101 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %92 to i8*
  %102 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %101, i8* %102, i64 8, i32 8, i1 false)
  %103 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %92, i32 0, i32 0
  %104 = load i32*, i32** %103, align 8
  %105 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i32* %104)
  %106 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %91, i32 0, i32 0
  store i32* %105, i32** %106, align 8
  %107 = load i32*, i32** %88, align 8
  %108 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %89, i32 0, i32 0
  %109 = load i32*, i32** %108, align 8
  %110 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %91, i32 0, i32 0
  %111 = load i32*, i32** %110, align 8
  %112 = call i32* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_(i32* %109, i32* %111, i32* %107)
  store i32 1593614881, i32* %16
  br label %113

; <label>:113:                                    ; preds = %85, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_(i32*, i32*, i32*) #2 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %4, i32 0, i32 0
  store i32* %0, i32** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %5, i32 0, i32 0
  store i32* %1, i32** %10, align 8
  store i32* %2, i32** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %7, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i32* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %8, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i32* %19)
  %21 = load i32*, i32** %6, align 8
  %22 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %21)
  %23 = call i32* @_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_(i32* %15, i32* %20, i32* %22)
  ret i32* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i32*) #2 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %3, i32 0, i32 0
  store i32* %0, i32** %5, align 8
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %4 to i8*
  %7 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 8, i32 8, i1 false)
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %4, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = call i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEELb0EE7_S_baseES7_(i32* %9)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %2, i32 0, i32 0
  store i32* %10, i32** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %2, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  ret i32* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_(i32*, i32*, i32*) #2 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32* %8, i32* %9, i32* %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i32*) #2 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %2, i32 0, i32 0
  store i32* %0, i32** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %3, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = call i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEELb1EE7_S_baseES7_(i32* %8)
  ret i32* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32*) #2 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  %4 = call i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %3)
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32*, i32*, i32*) #1 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i32**
  %7 = alloca i32**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.341
  %11 = load i32, i32* @y.342
  %12 = sub i32 %10, -343600485
  %13 = sub i32 %12, 1
  %14 = add i32 %13, -343600485
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -181749940, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %151
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -181749940, label %24
    i32 2117940109, label %32
    i32 1097354411, label %80
    i32 1783024963, label %83
    i32 1534813018, label %93
    i32 -1037787100, label %99
  ]

; <label>:23:                                     ; preds = %21
  br label %151

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 2117940109, i32 -1037787100
  store i32 %31, i32* %20
  br label %151

; <label>:32:                                     ; preds = %21
  %33 = alloca i32*, align 8
  store i32** %33, i32*** %7
  %34 = alloca i32*, align 8
  %35 = alloca i32*, align 8
  store i32** %35, i32*** %6
  %36 = alloca i64, align 8
  store i64* %36, i64** %5
  %37 = load volatile i32**, i32*** %7
  store i32* %0, i32** %37, align 8
  store i32* %1, i32** %34, align 8
  %38 = load volatile i32**, i32*** %6
  store i32* %2, i32** %38, align 8
  %39 = load i32*, i32** %34, align 8
  %40 = load volatile i32**, i32*** %7
  %41 = load i32*, i32** %40, align 8
  %42 = ptrtoint i32* %39 to i64
  %43 = ptrtoint i32* %41 to i64
  %44 = sub i64 %42, -8542712809463669949
  %45 = sub i64 %44, %43
  %46 = add i64 %45, -8542712809463669949
  %47 = sub i64 %42, %43
  %48 = sdiv exact i64 %46, 4
  %49 = load volatile i64*, i64** %5
  store i64 %48, i64* %49, align 8
  %50 = load volatile i64*, i64** %5
  %51 = load i64, i64* %50, align 8
  %52 = icmp ne i64 %51, 0
  store i1 %52, i1* %4
  %53 = load i32, i32* @x.341
  %54 = load i32, i32* @y.342
  %55 = add i32 %53, -204255142
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, -204255142
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 1097354411, i32 -1037787100
  store i32 %79, i32* %20
  br label %151

; <label>:80:                                     ; preds = %21
  %81 = load volatile i1, i1* %4
  %82 = select i1 %81, i32 1783024963, i32 1534813018
  store i32 %82, i32* %20
  br label %151

; <label>:83:                                     ; preds = %21
  %84 = load volatile i32**, i32*** %6
  %85 = load i32*, i32** %84, align 8
  %86 = bitcast i32* %85 to i8*
  %87 = load volatile i32**, i32*** %7
  %88 = load i32*, i32** %87, align 8
  %89 = bitcast i32* %88 to i8*
  %90 = load volatile i64*, i64** %5
  %91 = load i64, i64* %90, align 8
  %92 = mul i64 4, %91
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %86, i8* %89, i64 %92, i32 4, i1 false)
  store i32 1534813018, i32* %20
  br label %151

; <label>:93:                                     ; preds = %21
  %94 = load volatile i32**, i32*** %6
  %95 = load i32*, i32** %94, align 8
  %96 = load volatile i64*, i64** %5
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds i32, i32* %95, i64 %97
  ret i32* %98

; <label>:99:                                     ; preds = %21
  %100 = alloca i32*, align 8
  %101 = alloca i32*, align 8
  %102 = alloca i32*, align 8
  %103 = alloca i64, align 8
  store i32* %0, i32** %100, align 8
  store i32* %1, i32** %101, align 8
  store i32* %2, i32** %102, align 8
  %104 = load i32*, i32** %101, align 8
  %105 = load i32*, i32** %100, align 8
  %106 = ptrtoint i32* %104 to i64
  %107 = ptrtoint i32* %105 to i64
  %108 = add i64 %106, 2966124010028548911
  %109 = sub i64 %108, %107
  %110 = sub i64 %109, 2966124010028548911
  %111 = sub i64 %106, %107
  %112 = mul i64 %110, %107
  %113 = sub i64 0, 2891993936469579440
  %114 = sub i64 %113, %106
  %115 = add i64 %114, 2891993936469579440
  %116 = sub i64 0, %106
  %117 = sub i64 0, %107
  %118 = sub i64 %115, %117
  %119 = add i64 %115, %107
  %120 = shl i64 %106, %107
  %121 = sub i64 %106, -799612096349071110
  %122 = sub i64 %121, %107
  %123 = add i64 %122, -799612096349071110
  %124 = sub i64 %106, %107
  %125 = shl i64 %123, 4
  %126 = sub i64 %123, -1168283332273637361
  %127 = sub i64 %126, 4
  %128 = add i64 %127, -1168283332273637361
  %129 = sub i64 %123, 4
  %130 = mul i64 %128, 4
  %131 = add i64 %123, 356580289942101793
  %132 = sub i64 %131, 4
  %133 = sub i64 %132, 356580289942101793
  %134 = sub i64 %123, 4
  %135 = mul i64 %133, 4
  %136 = sub i64 0, %123
  %137 = add i64 0, %136
  %138 = sub i64 0, %123
  %139 = add i64 %137, -7998935002445731036
  %140 = add i64 %139, 4
  %141 = sub i64 %140, -7998935002445731036
  %142 = add i64 %137, 4
  %143 = add i64 %123, 7922623705423067694
  %144 = sub i64 %143, 4
  %145 = sub i64 %144, 7922623705423067694
  %146 = sub i64 %123, 4
  %147 = mul i64 %145, 4
  %148 = sdiv exact i64 %123, 4
  store i64 %148, i64* %103, align 8
  %149 = load i64, i64* %103, align 8
  %150 = icmp ne i64 %149, 0
  store i32 2117940109, i32* %20
  br label %151

; <label>:151:                                    ; preds = %99, %83, %80, %32, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEELb1EE7_S_baseES7_(i32*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %2, i32 0, i32 0
  store i32* %0, i32** %3, align 8
  %4 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"* %2) #11
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"*) #1 comdat align 2 {
  %2 = alloca i32**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.345
  %6 = load i32, i32* @y.346
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1789582924, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %63
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1789582924, label %18
    i32 143390167, label %26
    i32 -1625217412, label %57
    i32 -1688547433, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %63

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 143390167, i32 -1688547433
  store i32 %25, i32* %14
  br label %63

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %27, align 8
  %28 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %27, align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %28, i32 0, i32 0
  store i32** %29, i32*** %2
  %30 = load i32, i32* @x.345
  %31 = load i32, i32* @y.346
  %32 = sub i32 %30, 1452634478
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 1452634478
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1625217412, i32 -1688547433
  store i32 %56, i32* %14
  br label %63

; <label>:57:                                     ; preds = %15
  %58 = load volatile i32**, i32*** %2
  ret i32** %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %60, align 8
  %61 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %60, align 8
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %61, i32 0, i32 0
  store i32 143390167, i32* %14
  br label %63

; <label>:63:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32*) #1 comdat align 2 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEELb0EE7_S_baseES7_(i32*) #1 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.349
  %6 = load i32, i32* @y.350
  %7 = add i32 %5, 1833273291
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1833273291
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 213050502, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %71
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 213050502, label %19
    i32 -1535642969, label %39
    i32 1740907570, label %61
    i32 1661725914, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %71

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1535642969, i32 1661725914
  store i32 %38, i32* %15
  br label %71

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %41, i32 0, i32 0
  store i32* %0, i32** %42, align 8
  %43 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %40 to i8*
  %44 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 8, i32 8, i1 false)
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %40, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  store i32* %46, i32** %2
  %47 = load i32, i32* @x.349
  %48 = load i32, i32* @y.350
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 1740907570, i32 1661725914
  store i32 %60, i32* %15
  br label %71

; <label>:61:                                     ; preds = %16
  %62 = load volatile i32*, i32** %2
  ret i32* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %65 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %65, i32 0, i32 0
  store i32* %0, i32** %66, align 8
  %67 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %64 to i8*
  %68 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %67, i8* %68, i64 8, i32 8, i1 false)
  %69 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %64, i32 0, i32 0
  %70 = load i32*, i32** %69, align 8
  store i32 -1535642969, i32* %15
  br label %71

; <label>:71:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.15"*, i32** dereferenceable(8)) unnamed_addr #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.351
  %6 = load i32, i32* @y.352
  %7 = sub i32 %5, -1553171814
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1553171814
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1698994946, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1698994946, label %19
    i32 1107333351, label %39
    i32 -312119520, label %61
    i32 -1746440336, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1107333351, i32 -1746440336
  store i32 %38, i32* %15
  br label %69

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  %41 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %40, align 8
  store i32** %1, i32*** %41, align 8
  %42 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %40, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %42, i32 0, i32 0
  %44 = load i32**, i32*** %41, align 8
  %45 = load i32*, i32** %44, align 8
  store i32* %45, i32** %43, align 8
  %46 = load i32, i32* @x.351
  %47 = load i32, i32* @y.352
  %48 = sub i32 %46, 1201307712
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 1201307712
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -312119520, i32 -1746440336
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  %64 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %63, align 8
  store i32** %1, i32*** %64, align 8
  %65 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %63, align 8
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %65, i32 0, i32 0
  %67 = load i32**, i32*** %64, align 8
  %68 = load i32*, i32** %67, align 8
  store i32* %68, i32** %66, align 8
  store i32 1107333351, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_(i32*, i32*) #2 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %3, i32 0, i32 0
  store i32* %0, i32** %7, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %4, i32 0, i32 0
  store i32* %1, i32** %8, align 8
  %9 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %5 to i8*
  %10 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 8, i32 8, i1 false)
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %6 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %5, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %6, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEEvT_S9_(i32* %14, i32* %16)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEEvT_S9_(i32*, i32*) #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.355
  %6 = load i32, i32* @y.356
  %7 = add i32 %5, -2115541638
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -2115541638
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1511831055, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1511831055, label %19
    i32 992159932, label %27
    i32 -985004133, label %59
    i32 1392169793, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 992159932, i32 1392169793
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %28, i32 0, i32 0
  store i32* %0, i32** %30, align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %29, i32 0, i32 0
  store i32* %1, i32** %31, align 8
  %32 = load i32, i32* @x.355
  %33 = load i32, i32* @y.356
  %34 = sub i32 %32, 603464799
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 603464799
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -985004133, i32 1392169793
  store i32 %58, i32* %15
  br label %65

; <label>:59:                                     ; preds = %16
  ret void

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %62 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %61, i32 0, i32 0
  store i32* %0, i32** %63, align 8
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %62, i32 0, i32 0
  store i32* %1, i32** %64, align 8
  store i32 992159932, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET1_T0_SB_SA_(i32*, i32*, i32*) #2 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %8 = alloca i32*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %5, i32 0, i32 0
  store i32* %0, i32** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %6, i32 0, i32 0
  store i32* %1, i32** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %7, i32 0, i32 0
  store i32* %2, i32** %14, align 8
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %9 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %9, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i32* %18)
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %10 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %10, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i32* %23)
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %11 to i8*
  %26 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 8, i1 false)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %11, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32* %28)
  %30 = call i32* @_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_(i32* %19, i32* %24, i32* %29)
  store i32* %30, i32** %8, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.16"* %4, i32** dereferenceable(8) %8) #11
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %4, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  ret i32* %32
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32*) #2 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.359
  %6 = load i32, i32* @y.360
  %7 = sub i32 %5, -557580049
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -557580049
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -303587528, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -303587528, label %19
    i32 -1144415478, label %27
    i32 744635968, label %51
    i32 -386337766, label %53
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1144415478, i32 -386337766
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %28, i32 0, i32 0
  store i32* %0, i32** %30, align 8
  %31 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %29 to i8*
  %32 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 8, i32 8, i1 false)
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %29, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  %35 = call i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb1EE7_S_baseES6_(i32* %34)
  store i32* %35, i32** %2
  %36 = load i32, i32* @x.359
  %37 = load i32, i32* @y.360
  %38 = sub i32 %36, -1850746339
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -1850746339
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 744635968, i32 -386337766
  store i32 %50, i32* %15
  br label %62

; <label>:51:                                     ; preds = %16
  %52 = load volatile i32*, i32** %2
  ret i32* %52

; <label>:53:                                     ; preds = %16
  %54 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %55 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %54, i32 0, i32 0
  store i32* %0, i32** %56, align 8
  %57 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %55 to i8*
  %58 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %58, i64 8, i32 8, i1 false)
  %59 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %55, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8
  %61 = call i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb1EE7_S_baseES6_(i32* %60)
  store i32 -1144415478, i32* %15
  br label %62

; <label>:62:                                     ; preds = %53, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.16"*, i32** dereferenceable(8)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  %4 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %0, %"class.__gnu_cxx::__normal_iterator.16"** %3, align 8
  store i32** %1, i32*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %5, i32 0, i32 0
  %7 = load i32**, i32*** %4, align 8
  %8 = load i32*, i32** %7, align 8
  store i32* %8, i32** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb1EE7_S_baseES6_(i32*) #1 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.363
  %6 = load i32, i32* @y.364
  %7 = sub i32 %5, 1636321126
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1636321126
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 597182086, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %53
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 597182086, label %19
    i32 -1604613641, label %27
    i32 -323222108, label %46
    i32 798879700, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %53

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1604613641, i32 798879700
  store i32 %26, i32* %15
  br label %53

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %28, i32 0, i32 0
  store i32* %0, i32** %29, align 8
  %30 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.16"* %28) #11
  %31 = load i32*, i32** %30, align 8
  store i32* %31, i32** %2
  %32 = load i32, i32* @x.363
  %33 = load i32, i32* @y.364
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -323222108, i32 798879700
  store i32 %45, i32* %15
  br label %53

; <label>:46:                                     ; preds = %16
  %47 = load volatile i32*, i32** %2
  ret i32* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %49, i32 0, i32 0
  store i32* %0, i32** %50, align 8
  %51 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.16"* %49) #11
  %52 = load i32*, i32** %51, align 8
  store i32 -1604613641, i32* %15
  br label %53

; <label>:53:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.16"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %0, %"class.__gnu_cxx::__normal_iterator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %3, i32 0, i32 0
  ret i32** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt14__copy_move_a2ILb0EPiS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #2 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %7)
  %9 = load i32*, i32** %5, align 8
  %10 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %9)
  %11 = load i32*, i32** %6, align 8
  %12 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %11)
  %13 = call i32* @_ZSt13__copy_move_aILb0EPiS0_ET1_T0_S2_S1_(i32* %8, i32* %10, i32* %12)
  ret i32* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt12__miter_baseIPiENSt11_Miter_baseIT_E13iterator_typeES2_(i32*) #1 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  %4 = call i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %3)
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt13__copy_move_aILb0EPiS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #1 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32* %8, i32* %9, i32* %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt18uninitialized_copyIPiS0_ET0_T_S2_S1_(i32*, i32*, i32*) #2 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPiS2_EET0_T_S4_S3_(i32* %8, i32* %9, i32* %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPiS2_EET0_T_S4_S3_(i32*, i32*, i32*) #2 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.375
  %8 = load i32, i32* @y.376
  %9 = sub i32 %7, -317954037
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -317954037
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 693887818, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %74
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 693887818, label %21
    i32 979851890, label %29
    i32 -1801284748, label %64
    i32 -890544830, label %66
  ]

; <label>:20:                                     ; preds = %18
  br label %74

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 979851890, i32 -890544830
  store i32 %28, i32* %17
  br label %74

; <label>:29:                                     ; preds = %18
  %30 = alloca i32*, align 8
  %31 = alloca i32*, align 8
  %32 = alloca i32*, align 8
  store i32* %0, i32** %30, align 8
  store i32* %1, i32** %31, align 8
  store i32* %2, i32** %32, align 8
  %33 = load i32*, i32** %30, align 8
  %34 = load i32*, i32** %31, align 8
  %35 = load i32*, i32** %32, align 8
  %36 = call i32* @_ZSt4copyIPiS0_ET0_T_S2_S1_(i32* %33, i32* %34, i32* %35)
  store i32* %36, i32** %4
  %37 = load i32, i32* @x.375
  %38 = load i32, i32* @y.376
  %39 = add i32 %37, 1415378055
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, 1415378055
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -1801284748, i32 -890544830
  store i32 %63, i32* %17
  br label %74

; <label>:64:                                     ; preds = %18
  %65 = load volatile i32*, i32** %4
  ret i32* %65

; <label>:66:                                     ; preds = %18
  %67 = alloca i32*, align 8
  %68 = alloca i32*, align 8
  %69 = alloca i32*, align 8
  store i32* %0, i32** %67, align 8
  store i32* %1, i32** %68, align 8
  store i32* %2, i32** %69, align 8
  %70 = load i32*, i32** %67, align 8
  %71 = load i32*, i32** %68, align 8
  %72 = load i32*, i32** %69, align 8
  %73 = call i32* @_ZSt4copyIPiS0_ET0_T_S2_S1_(i32* %70, i32* %71, i32* %72)
  store i32 979851890, i32* %17
  br label %74

; <label>:74:                                     ; preds = %66, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.13"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES2_IS4_SaIS4_EEEELb1EE7_S_baseES8_(%"class.std::vector.13"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %3, align 8
  %4 = call dereferenceable(8) %"class.std::vector.13"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %2) #11
  %5 = load %"class.std::vector.13"*, %"class.std::vector.13"** %4, align 8
  ret %"class.std::vector.13"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.13"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret %"class.std::vector.13"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator"*, %"class.std::vector.13"** dereferenceable(8)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.std::vector.13"**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.std::vector.13"** %1, %"class.std::vector.13"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.13"**, %"class.std::vector.13"*** %4, align 8
  %8 = load %"class.std::vector.13"*, %"class.std::vector.13"** %7, align 8
  store %"class.std::vector.13"* %8, %"class.std::vector.13"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.13"* @_ZSt20uninitialized_fill_nIPSt6vectorIiSaIiEEmS2_ET_S4_T0_RKT1_(%"class.std::vector.13"*, i64, %"class.std::vector.13"* dereferenceable(24)) #2 comdat {
  %4 = alloca %"class.std::vector.13"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.13"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.13"* %2, %"class.std::vector.13"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"class.std::vector.13"*, %"class.std::vector.13"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %"class.std::vector.13"*, %"class.std::vector.13"** %6, align 8
  %11 = call %"class.std::vector.13"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIiSaIiEEmS4_EET_S6_T0_RKT1_(%"class.std::vector.13"* %8, i64 %9, %"class.std::vector.13"* dereferenceable(24) %10)
  ret %"class.std::vector.13"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.13"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIiSaIiEEmS4_EET_S6_T0_RKT1_(%"class.std::vector.13"*, i64, %"class.std::vector.13"* dereferenceable(24)) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.13"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.13"*, align 8
  %7 = alloca %"class.std::vector.13"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.13"* %2, %"class.std::vector.13"** %6, align 8
  %10 = load %"class.std::vector.13"*, %"class.std::vector.13"** %4, align 8
  store %"class.std::vector.13"* %10, %"class.std::vector.13"** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %89, %3
  %12 = load i32, i32* @x.385
  %13 = load i32, i32* @y.386
  %14 = sub i32 0, 1
  %15 = add i32 %12, %14
  %16 = sub i32 %12, 1
  %17 = mul i32 %12, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %13, 10
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  br i1 %23, label %25, label %317

; <label>:25:                                     ; preds = %11, %317
  %26 = load i64, i64* %5, align 8
  %27 = icmp ugt i64 %26, 0
  %28 = load i32, i32* @x.385
  %29 = load i32, i32* @y.386
  %30 = add i32 %28, -1056386275
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, -1056386275
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  br i1 %40, label %42, label %317

; <label>:42:                                     ; preds = %25
  br i1 %27, label %43, label %188

; <label>:43:                                     ; preds = %42
  %44 = load %"class.std::vector.13"*, %"class.std::vector.13"** %7, align 8
  %45 = call %"class.std::vector.13"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector.13"* dereferenceable(24) %44) #11
  %46 = load %"class.std::vector.13"*, %"class.std::vector.13"** %6, align 8
  invoke void @_ZSt10_ConstructISt6vectorIiSaIiEEJRKS2_EEvPT_DpOT0_(%"class.std::vector.13"* %45, %"class.std::vector.13"* dereferenceable(24) %46)
          to label %47 unwind label %97

; <label>:47:                                     ; preds = %43
  %48 = load i32, i32* @x.385
  %49 = load i32, i32* @y.386
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  br i1 %59, label %61, label %320

; <label>:61:                                     ; preds = %47, %320
  %62 = load i32, i32* @x.385
  %63 = load i32, i32* @y.386
  %64 = sub i32 %62, -331006415
  %65 = sub i32 %64, 1
  %66 = add i32 %65, -331006415
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 false, true
  %75 = and i1 %72, false
  %76 = and i1 %70, %74
  %77 = and i1 %73, false
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 false, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  br i1 %86, label %88, label %320

; <label>:88:                                     ; preds = %61
  br label %89

; <label>:89:                                     ; preds = %88
  %90 = load i64, i64* %5, align 8
  %91 = sub i64 %90, 9178866720987444494
  %92 = add i64 %91, -1
  %93 = add i64 %92, 9178866720987444494
  %94 = add i64 %90, -1
  store i64 %93, i64* %5, align 8
  %95 = load %"class.std::vector.13"*, %"class.std::vector.13"** %7, align 8
  %96 = getelementptr inbounds %"class.std::vector.13", %"class.std::vector.13"* %95, i32 1
  store %"class.std::vector.13"* %96, %"class.std::vector.13"** %7, align 8
  br label %11

; <label>:97:                                     ; preds = %43
  %98 = load i32, i32* @x.385
  %99 = load i32, i32* @y.386
  %100 = sub i32 %98, -1716196449
  %101 = sub i32 %100, 1
  %102 = add i32 %101, -1716196449
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = and i1 %106, %107
  %109 = xor i1 %106, %107
  %110 = or i1 %108, %109
  %111 = or i1 %106, %107
  br i1 %110, label %112, label %321

; <label>:112:                                    ; preds = %97, %321
  %113 = landingpad { i8*, i32 }
          catch i8* null
  %114 = extractvalue { i8*, i32 } %113, 0
  store i8* %114, i8** %8, align 8
  %115 = extractvalue { i8*, i32 } %113, 1
  store i32 %115, i32* %9, align 4
  %116 = load i32, i32* @x.385
  %117 = load i32, i32* @y.386
  %118 = sub i32 0, 1
  %119 = add i32 %116, %118
  %120 = sub i32 %116, 1
  %121 = mul i32 %116, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %117, 10
  %125 = xor i1 %123, true
  %126 = xor i1 %124, true
  %127 = xor i1 true, true
  %128 = and i1 %125, true
  %129 = and i1 %123, %127
  %130 = and i1 %126, true
  %131 = and i1 %124, %127
  %132 = or i1 %128, %129
  %133 = or i1 %130, %131
  %134 = xor i1 %132, %133
  %135 = or i1 %125, %126
  %136 = xor i1 %135, true
  %137 = or i1 true, %127
  %138 = and i1 %136, %137
  %139 = or i1 %134, %138
  %140 = or i1 %123, %124
  br i1 %139, label %141, label %321

; <label>:141:                                    ; preds = %112
  br label %142

; <label>:142:                                    ; preds = %141
  %143 = load i32, i32* @x.385
  %144 = load i32, i32* @y.386
  %145 = sub i32 0, 1
  %146 = add i32 %143, %145
  %147 = sub i32 %143, 1
  %148 = mul i32 %143, %146
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %144, 10
  %152 = xor i1 %150, true
  %153 = xor i1 %151, true
  %154 = xor i1 false, true
  %155 = and i1 %152, false
  %156 = and i1 %150, %154
  %157 = and i1 %153, false
  %158 = and i1 %151, %154
  %159 = or i1 %155, %156
  %160 = or i1 %157, %158
  %161 = xor i1 %159, %160
  %162 = or i1 %152, %153
  %163 = xor i1 %162, true
  %164 = or i1 false, %154
  %165 = and i1 %163, %164
  %166 = or i1 %161, %165
  %167 = or i1 %150, %151
  br i1 %166, label %168, label %325

; <label>:168:                                    ; preds = %142, %325
  %169 = load i8*, i8** %8, align 8
  %170 = call i8* @__cxa_begin_catch(i8* %169) #11
  %171 = load %"class.std::vector.13"*, %"class.std::vector.13"** %4, align 8
  %172 = load %"class.std::vector.13"*, %"class.std::vector.13"** %7, align 8
  %173 = load i32, i32* @x.385
  %174 = load i32, i32* @y.386
  %175 = sub i32 0, 1
  %176 = add i32 %173, %175
  %177 = sub i32 %173, 1
  %178 = mul i32 %173, %176
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %174, 10
  %182 = and i1 %180, %181
  %183 = xor i1 %180, %181
  %184 = or i1 %182, %183
  %185 = or i1 %180, %181
  br i1 %184, label %186, label %325

; <label>:186:                                    ; preds = %168
  invoke void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector.13"* %171, %"class.std::vector.13"* %172)
          to label %187 unwind label %232

; <label>:187:                                    ; preds = %186
  invoke void @__cxa_rethrow() #13
          to label %316 unwind label %232

; <label>:188:                                    ; preds = %42
  %189 = load i32, i32* @x.385
  %190 = load i32, i32* @y.386
  %191 = add i32 %189, -203067473
  %192 = sub i32 %191, 1
  %193 = sub i32 %192, -203067473
  %194 = sub i32 %189, 1
  %195 = mul i32 %189, %193
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %190, 10
  %199 = xor i1 %197, true
  %200 = xor i1 %198, true
  %201 = xor i1 false, true
  %202 = and i1 %199, false
  %203 = and i1 %197, %201
  %204 = and i1 %200, false
  %205 = and i1 %198, %201
  %206 = or i1 %202, %203
  %207 = or i1 %204, %205
  %208 = xor i1 %206, %207
  %209 = or i1 %199, %200
  %210 = xor i1 %209, true
  %211 = or i1 false, %201
  %212 = and i1 %210, %211
  %213 = or i1 %208, %212
  %214 = or i1 %197, %198
  br i1 %213, label %215, label %330

; <label>:215:                                    ; preds = %188, %330
  %216 = load %"class.std::vector.13"*, %"class.std::vector.13"** %7, align 8
  %217 = load i32, i32* @x.385
  %218 = load i32, i32* @y.386
  %219 = sub i32 %217, -2124840914
  %220 = sub i32 %219, 1
  %221 = add i32 %220, -2124840914
  %222 = sub i32 %217, 1
  %223 = mul i32 %217, %221
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %218, 10
  %227 = and i1 %225, %226
  %228 = xor i1 %225, %226
  %229 = or i1 %227, %228
  %230 = or i1 %225, %226
  br i1 %229, label %231, label %330

; <label>:231:                                    ; preds = %215
  ret %"class.std::vector.13"* %216

; <label>:232:                                    ; preds = %187, %186
  %233 = landingpad { i8*, i32 }
          cleanup
  %234 = extractvalue { i8*, i32 } %233, 0
  store i8* %234, i8** %8, align 8
  %235 = extractvalue { i8*, i32 } %233, 1
  store i32 %235, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %236 unwind label %313

; <label>:236:                                    ; preds = %232
  br label %267
                                                  ; No predecessors!
  %238 = load i32, i32* @x.385
  %239 = load i32, i32* @y.386
  %240 = add i32 %238, 1183143034
  %241 = sub i32 %240, 1
  %242 = sub i32 %241, 1183143034
  %243 = sub i32 %238, 1
  %244 = mul i32 %238, %242
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %239, 10
  %248 = and i1 %246, %247
  %249 = xor i1 %246, %247
  %250 = or i1 %248, %249
  %251 = or i1 %246, %247
  br i1 %250, label %252, label %332

; <label>:252:                                    ; preds = %237, %332
  call void @llvm.trap()
  %253 = load i32, i32* @x.385
  %254 = load i32, i32* @y.386
  %255 = sub i32 0, 1
  %256 = add i32 %253, %255
  %257 = sub i32 %253, 1
  %258 = mul i32 %253, %256
  %259 = urem i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %254, 10
  %262 = and i1 %260, %261
  %263 = xor i1 %260, %261
  %264 = or i1 %262, %263
  %265 = or i1 %260, %261
  br i1 %264, label %266, label %332

; <label>:266:                                    ; preds = %252
  unreachable

; <label>:267:                                    ; preds = %236
  %268 = load i32, i32* @x.385
  %269 = load i32, i32* @y.386
  %270 = sub i32 0, 1
  %271 = add i32 %268, %270
  %272 = sub i32 %268, 1
  %273 = mul i32 %268, %271
  %274 = urem i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %269, 10
  %277 = and i1 %275, %276
  %278 = xor i1 %275, %276
  %279 = or i1 %277, %278
  %280 = or i1 %275, %276
  br i1 %279, label %281, label %333

; <label>:281:                                    ; preds = %267, %333
  %282 = load i8*, i8** %8, align 8
  %283 = load i32, i32* %9, align 4
  %284 = insertvalue { i8*, i32 } undef, i8* %282, 0
  %285 = insertvalue { i8*, i32 } %284, i32 %283, 1
  %286 = load i32, i32* @x.385
  %287 = load i32, i32* @y.386
  %288 = sub i32 %286, -656136167
  %289 = sub i32 %288, 1
  %290 = add i32 %289, -656136167
  %291 = sub i32 %286, 1
  %292 = mul i32 %286, %290
  %293 = urem i32 %292, 2
  %294 = icmp eq i32 %293, 0
  %295 = icmp slt i32 %287, 10
  %296 = xor i1 %294, true
  %297 = xor i1 %295, true
  %298 = xor i1 false, true
  %299 = and i1 %296, false
  %300 = and i1 %294, %298
  %301 = and i1 %297, false
  %302 = and i1 %295, %298
  %303 = or i1 %299, %300
  %304 = or i1 %301, %302
  %305 = xor i1 %303, %304
  %306 = or i1 %296, %297
  %307 = xor i1 %306, true
  %308 = or i1 false, %298
  %309 = and i1 %307, %308
  %310 = or i1 %305, %309
  %311 = or i1 %294, %295
  br i1 %310, label %312, label %333

; <label>:312:                                    ; preds = %281
  resume { i8*, i32 } %285

; <label>:313:                                    ; preds = %232
  %314 = landingpad { i8*, i32 }
          catch i8* null
  %315 = extractvalue { i8*, i32 } %314, 0
  call void @__clang_call_terminate(i8* %315) #9
  unreachable

; <label>:316:                                    ; preds = %187
  unreachable

; <label>:317:                                    ; preds = %25, %11
  %318 = load i64, i64* %5, align 8
  %319 = icmp ugt i64 %318, 0
  br label %25

; <label>:320:                                    ; preds = %61, %47
  br label %61

; <label>:321:                                    ; preds = %112, %97
  %322 = landingpad { i8*, i32 }
          catch i8* null
  %323 = extractvalue { i8*, i32 } %322, 0
  store i8* %323, i8** %8, align 8
  %324 = extractvalue { i8*, i32 } %322, 1
  store i32 %324, i32* %9, align 4
  br label %112

; <label>:325:                                    ; preds = %168, %142
  %326 = load i8*, i8** %8, align 8
  %327 = call i8* @__cxa_begin_catch(i8* %326) #11
  %328 = load %"class.std::vector.13"*, %"class.std::vector.13"** %4, align 8
  %329 = load %"class.std::vector.13"*, %"class.std::vector.13"** %7, align 8
  br label %168

; <label>:330:                                    ; preds = %215, %188
  %331 = load %"class.std::vector.13"*, %"class.std::vector.13"** %7, align 8
  br label %215

; <label>:332:                                    ; preds = %252, %237
  call void @llvm.trap()
  br label %252

; <label>:333:                                    ; preds = %281, %267
  %334 = load i8*, i8** %8, align 8
  %335 = load i32, i32* %9, align 4
  %336 = insertvalue { i8*, i32 } undef, i8* %334, 0
  %337 = insertvalue { i8*, i32 } %336, i32 %335, 1
  br label %281
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIiSaIiEEJRKS2_EEvPT_DpOT0_(%"class.std::vector.13"*, %"class.std::vector.13"* dereferenceable(24)) #2 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.387
  %6 = load i32, i32* @y.388
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 568762671, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %70
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 568762671, label %18
    i32 1484024302, label %38
    i32 2022231645, label %61
    i32 1855110229, label %62
  ]

; <label>:17:                                     ; preds = %15
  br label %70

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1484024302, i32 1855110229
  store i32 %37, i32* %14
  br label %70

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::vector.13"*, align 8
  %40 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %39, align 8
  store %"class.std::vector.13"* %1, %"class.std::vector.13"** %40, align 8
  %41 = load %"class.std::vector.13"*, %"class.std::vector.13"** %39, align 8
  %42 = bitcast %"class.std::vector.13"* %41 to i8*
  %43 = bitcast i8* %42 to %"class.std::vector.13"*
  %44 = load %"class.std::vector.13"*, %"class.std::vector.13"** %40, align 8
  %45 = call dereferenceable(24) %"class.std::vector.13"* @_ZSt7forwardIRKSt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.13"* dereferenceable(24) %44) #11
  call void @_ZNSt6vectorIiSaIiEEC2ERKS1_(%"class.std::vector.13"* %43, %"class.std::vector.13"* dereferenceable(24) %45)
  %46 = load i32, i32* @x.387
  %47 = load i32, i32* @y.388
  %48 = add i32 %46, -1760844750
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -1760844750
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 2022231645, i32 1855110229
  store i32 %60, i32* %14
  br label %70

; <label>:61:                                     ; preds = %15
  ret void

; <label>:62:                                     ; preds = %15
  %63 = alloca %"class.std::vector.13"*, align 8
  %64 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %63, align 8
  store %"class.std::vector.13"* %1, %"class.std::vector.13"** %64, align 8
  %65 = load %"class.std::vector.13"*, %"class.std::vector.13"** %63, align 8
  %66 = bitcast %"class.std::vector.13"* %65 to i8*
  %67 = bitcast i8* %66 to %"class.std::vector.13"*
  %68 = load %"class.std::vector.13"*, %"class.std::vector.13"** %64, align 8
  %69 = call dereferenceable(24) %"class.std::vector.13"* @_ZSt7forwardIRKSt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.13"* dereferenceable(24) %68) #11
  call void @_ZNSt6vectorIiSaIiEEC2ERKS1_(%"class.std::vector.13"* %67, %"class.std::vector.13"* dereferenceable(24) %69)
  store i32 1484024302, i32* %14
  br label %70

; <label>:70:                                     ; preds = %62, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.13"* @_ZSt7forwardIRKSt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.13"* dereferenceable(24)) #1 comdat {
  %2 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %2, align 8
  %3 = load %"class.std::vector.13"*, %"class.std::vector.13"** %2, align 8
  ret %"class.std::vector.13"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2ERKS1_(%"class.std::vector.13"*, %"class.std::vector.13"* dereferenceable(24)) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.13"*, align 8
  %4 = alloca %"class.std::vector.13"*, align 8
  %5 = alloca %"class.std::allocator.0", align 1
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %3, align 8
  store %"class.std::vector.13"* %1, %"class.std::vector.13"** %4, align 8
  %10 = load %"class.std::vector.13"*, %"class.std::vector.13"** %3, align 8
  %11 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %12 = load %"class.std::vector.13"*, %"class.std::vector.13"** %4, align 8
  %13 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.13"* %12) #11
  %14 = load %"class.std::vector.13"*, %"class.std::vector.13"** %4, align 8
  %15 = bitcast %"class.std::vector.13"* %14 to %"struct.std::_Vector_base.14"*
  %16 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %15) #11
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_(%"class.std::allocator.0"* sret %5, %"class.std::allocator.0"* dereferenceable(1) %16)
  invoke void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.14"* %11, i64 %13, %"class.std::allocator.0"* dereferenceable(1) %5)
          to label %17 unwind label %81

; <label>:17:                                     ; preds = %2
  %18 = load i32, i32* @x.391
  %19 = load i32, i32* @y.392
  %20 = sub i32 %18, 1758589750
  %21 = sub i32 %20, 1
  %22 = add i32 %21, 1758589750
  %23 = sub i32 %18, 1
  %24 = mul i32 %18, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %19, 10
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 false, true
  %31 = and i1 %28, false
  %32 = and i1 %26, %30
  %33 = and i1 %29, false
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 false, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  br i1 %42, label %44, label %124

; <label>:44:                                     ; preds = %17, %124
  call void @_ZNSaIiED2Ev(%"class.std::allocator.0"* %5) #11
  %45 = load %"class.std::vector.13"*, %"class.std::vector.13"** %4, align 8
  %46 = call i32* @_ZNKSt6vectorIiSaIiEE5beginEv(%"class.std::vector.13"* %45) #11
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %8, i32 0, i32 0
  store i32* %46, i32** %47, align 8
  %48 = load %"class.std::vector.13"*, %"class.std::vector.13"** %4, align 8
  %49 = call i32* @_ZNKSt6vectorIiSaIiEE3endEv(%"class.std::vector.13"* %48) #11
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %9, i32 0, i32 0
  store i32* %49, i32** %50, align 8
  %51 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %52 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %51, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %52, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %56 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %55) #11
  %57 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %8, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %9, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8
  %61 = load i32, i32* @x.391
  %62 = load i32, i32* @y.392
  %63 = add i32 %61, 1157728606
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, 1157728606
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  br i1 %73, label %75, label %124

; <label>:75:                                     ; preds = %44
  %76 = invoke i32* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E(i32* %58, i32* %60, i32* %54, %"class.std::allocator.0"* dereferenceable(1) %56)
          to label %77 unwind label %114

; <label>:77:                                     ; preds = %75
  %78 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %79 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %78, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %79, i32 0, i32 1
  store i32* %76, i32** %80, align 8
  ret void

; <label>:81:                                     ; preds = %2
  %82 = load i32, i32* @x.391
  %83 = load i32, i32* @y.392
  %84 = sub i32 %82, -1155988552
  %85 = sub i32 %84, 1
  %86 = add i32 %85, -1155988552
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  br i1 %94, label %96, label %141

; <label>:96:                                     ; preds = %81, %141
  %97 = landingpad { i8*, i32 }
          cleanup
  %98 = extractvalue { i8*, i32 } %97, 0
  store i8* %98, i8** %6, align 8
  %99 = extractvalue { i8*, i32 } %97, 1
  store i32 %99, i32* %7, align 4
  call void @_ZNSaIiED2Ev(%"class.std::allocator.0"* %5) #11
  %100 = load i32, i32* @x.391
  %101 = load i32, i32* @y.392
  %102 = sub i32 0, 1
  %103 = add i32 %100, %102
  %104 = sub i32 %100, 1
  %105 = mul i32 %100, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %101, 10
  %109 = and i1 %107, %108
  %110 = xor i1 %107, %108
  %111 = or i1 %109, %110
  %112 = or i1 %107, %108
  br i1 %111, label %113, label %141

; <label>:113:                                    ; preds = %96
  br label %119

; <label>:114:                                    ; preds = %75
  %115 = landingpad { i8*, i32 }
          cleanup
  %116 = extractvalue { i8*, i32 } %115, 0
  store i8* %116, i8** %6, align 8
  %117 = extractvalue { i8*, i32 } %115, 1
  store i32 %117, i32* %7, align 4
  %118 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.14"* %118) #11
  br label %119

; <label>:119:                                    ; preds = %114, %113
  %120 = load i8*, i8** %6, align 8
  %121 = load i32, i32* %7, align 4
  %122 = insertvalue { i8*, i32 } undef, i8* %120, 0
  %123 = insertvalue { i8*, i32 } %122, i32 %121, 1
  resume { i8*, i32 } %123

; <label>:124:                                    ; preds = %44, %17
  call void @_ZNSaIiED2Ev(%"class.std::allocator.0"* %5) #11
  %125 = load %"class.std::vector.13"*, %"class.std::vector.13"** %4, align 8
  %126 = call i32* @_ZNKSt6vectorIiSaIiEE5beginEv(%"class.std::vector.13"* %125) #11
  %127 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %8, i32 0, i32 0
  store i32* %126, i32** %127, align 8
  %128 = load %"class.std::vector.13"*, %"class.std::vector.13"** %4, align 8
  %129 = call i32* @_ZNKSt6vectorIiSaIiEE3endEv(%"class.std::vector.13"* %128) #11
  %130 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %9, i32 0, i32 0
  store i32* %129, i32** %130, align 8
  %131 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %132 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %131, i32 0, i32 0
  %133 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %132, i32 0, i32 0
  %134 = load i32*, i32** %133, align 8
  %135 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %136 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %135) #11
  %137 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %8, i32 0, i32 0
  %138 = load i32*, i32** %137, align 8
  %139 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %9, i32 0, i32 0
  %140 = load i32*, i32** %139, align 8
  br label %44

; <label>:141:                                    ; preds = %96, %81
  %142 = landingpad { i8*, i32 }
          cleanup
  %143 = extractvalue { i8*, i32 } %142, 0
  store i8* %143, i8** %6, align 8
  %144 = extractvalue { i8*, i32 } %142, 1
  store i32 %144, i32* %7, align 4
  call void @_ZNSaIiED2Ev(%"class.std::allocator.0"* %5) #11
  br label %96
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_(%"class.std::allocator.0"* noalias sret, %"class.std::allocator.0"* dereferenceable(1)) #2 comdat align 2 {
  %3 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %3, align 8
  %4 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %3, align 8
  call void @_ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.0"* sret %0, %"class.std::allocator.0"* dereferenceable(1) %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"*) #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.14"*, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %2, align 8
  %3 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4 to %"class.std::allocator.0"*
  ret %"class.std::allocator.0"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.14"*, i64, %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.14"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.0"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.0"* %2, %"class.std::allocator.0"** %6, align 8
  %9 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %6, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, %"class.std::allocator.0"* dereferenceable(1) %11) #11
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base.14"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = load i32, i32* @x.397
  %16 = load i32, i32* @y.398
  %17 = add i32 %15, 458847856
  %18 = sub i32 %17, 1
  %19 = sub i32 %18, 458847856
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %16, 10
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  br i1 %27, label %29, label %53

; <label>:29:                                     ; preds = %14, %53
  %30 = landingpad { i8*, i32 }
          cleanup
  %31 = extractvalue { i8*, i32 } %30, 0
  store i8* %31, i8** %7, align 8
  %32 = extractvalue { i8*, i32 } %30, 1
  store i32 %32, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10) #11
  %33 = load i32, i32* @x.397
  %34 = load i32, i32* @y.398
  %35 = sub i32 %33, 953848765
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 953848765
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  br i1 %45, label %47, label %53

; <label>:47:                                     ; preds = %29
  br label %48

; <label>:48:                                     ; preds = %47
  %49 = load i8*, i8** %7, align 8
  %50 = load i32, i32* %8, align 4
  %51 = insertvalue { i8*, i32 } undef, i8* %49, 0
  %52 = insertvalue { i8*, i32 } %51, i32 %50, 1
  resume { i8*, i32 } %52

; <label>:53:                                     ; preds = %29, %14
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %7, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10) #11
  br label %29
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiED2Ev(%"class.std::allocator.0"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.399
  %5 = load i32, i32* @y.400
  %6 = sub i32 %4, 1307850374
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1307850374
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1409953663, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1409953663, label %18
    i32 -1560516821, label %26
    i32 352092329, label %56
    i32 -1179545084, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1560516821, i32 -1179545084
  store i32 %25, i32* %14
  br label %61

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %27, align 8
  %28 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %27, align 8
  %29 = bitcast %"class.std::allocator.0"* %28 to %"class.__gnu_cxx::new_allocator.1"*
  call void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.1"* %29) #11
  %30 = load i32, i32* @x.399
  %31 = load i32, i32* @y.400
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 352092329, i32 -1179545084
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %58, align 8
  %59 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %58, align 8
  %60 = bitcast %"class.std::allocator.0"* %59 to %"class.__gnu_cxx::new_allocator.1"*
  call void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.1"* %60) #11
  store i32 -1560516821, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.0"* noalias sret, %"class.std::allocator.0"* dereferenceable(1)) #1 comdat align 2 {
  %3 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %3, align 8
  %4 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %3, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.0"* %0, %"class.std::allocator.0"* dereferenceable(1) %4) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2ERKS_(%"class.std::allocator.0"*, %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::allocator.0"*, align 8
  %4 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %3, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %4, align 8
  %5 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %3, align 8
  %6 = bitcast %"class.std::allocator.0"* %5 to %"class.__gnu_cxx::new_allocator.1"*
  %7 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %4, align 8
  %8 = bitcast %"class.std::allocator.0"* %7 to %"class.__gnu_cxx::new_allocator.1"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.1"* %6, %"class.__gnu_cxx::new_allocator.1"* dereferenceable(1) %8) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %1, %"class.__gnu_cxx::new_allocator.1"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.407
  %6 = load i32, i32* @y.408
  %7 = add i32 %5, -502761533
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -502761533
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1935274956, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1935274956, label %19
    i32 -277990888, label %39
    i32 137145222, label %62
    i32 -1398046682, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -277990888, i32 -1398046682
  store i32 %38, i32* %15
  br label %72

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %41 = alloca %"class.std::allocator.0"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %40, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %41, align 8
  %42 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %40, align 8
  %43 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %42 to %"class.std::allocator.0"*
  %44 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %41, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.0"* %43, %"class.std::allocator.0"* dereferenceable(1) %44) #11
  %45 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %42, i32 0, i32 0
  store i32* null, i32** %45, align 8
  %46 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %42, i32 0, i32 1
  store i32* null, i32** %46, align 8
  %47 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %42, i32 0, i32 2
  store i32* null, i32** %47, align 8
  %48 = load i32, i32* @x.407
  %49 = load i32, i32* @y.408
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 137145222, i32 -1398046682
  store i32 %61, i32* %15
  br label %72

; <label>:62:                                     ; preds = %16
  ret void

; <label>:63:                                     ; preds = %16
  %64 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %65 = alloca %"class.std::allocator.0"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %64, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %65, align 8
  %66 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %64, align 8
  %67 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %66 to %"class.std::allocator.0"*
  %68 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %65, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.0"* %67, %"class.std::allocator.0"* dereferenceable(1) %68) #11
  %69 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %66, i32 0, i32 0
  store i32* null, i32** %69, align 8
  %70 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %66, i32 0, i32 1
  store i32* null, i32** %70, align 8
  %71 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %66, i32 0, i32 2
  store i32* null, i32** %71, align 8
  store i32 -277990888, i32* %15
  br label %72

; <label>:72:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base.14"*, i64) #2 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.409
  %6 = load i32, i32* @y.410
  %7 = sub i32 %5, 50960995
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 50960995
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -928759993, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %94
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -928759993, label %19
    i32 -277178245, label %39
    i32 -1708472827, label %73
    i32 -928183088, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %94

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -277178245, i32 -928183088
  store i32 %38, i32* %15
  br label %94

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.14"*, align 8
  %41 = alloca i64, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %40, align 8
  %43 = load i64, i64* %41, align 8
  %44 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.14"* %42, i64 %43)
  %45 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %42, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %45, i32 0, i32 0
  store i32* %44, i32** %46, align 8
  %47 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %42, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %47, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %42, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %50, i32 0, i32 1
  store i32* %49, i32** %51, align 8
  %52 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %42, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %52, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = load i64, i64* %41, align 8
  %56 = getelementptr inbounds i32, i32* %54, i64 %55
  %57 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %42, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %57, i32 0, i32 2
  store i32* %56, i32** %58, align 8
  %59 = load i32, i32* @x.409
  %60 = load i32, i32* @y.410
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  %72 = select i1 %70, i32 -1708472827, i32 -928183088
  store i32 %72, i32* %15
  br label %94

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"struct.std::_Vector_base.14"*, align 8
  %76 = alloca i64, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %75, align 8
  store i64 %1, i64* %76, align 8
  %77 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %75, align 8
  %78 = load i64, i64* %76, align 8
  %79 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.14"* %77, i64 %78)
  %80 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %77, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %80, i32 0, i32 0
  store i32* %79, i32** %81, align 8
  %82 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %77, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %82, i32 0, i32 0
  %84 = load i32*, i32** %83, align 8
  %85 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %77, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %85, i32 0, i32 1
  store i32* %84, i32** %86, align 8
  %87 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %77, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %87, i32 0, i32 0
  %89 = load i32*, i32** %88, align 8
  %90 = load i64, i64* %76, align 8
  %91 = getelementptr inbounds i32, i32* %89, i64 %90
  %92 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %77, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %92, i32 0, i32 2
  store i32* %91, i32** %93, align 8
  store i32 -277178245, i32* %15
  br label %94

; <label>:94:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.13"* @_ZSt10__fill_n_aIPSt6vectorIiSaIiEEmS2_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES7_T0_RKS6_(%"class.std::vector.13"*, i64, %"class.std::vector.13"* dereferenceable(24)) #2 comdat {
  %4 = alloca %"class.std::vector.13"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.13"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.13"* %2, %"class.std::vector.13"** %6, align 8
  %8 = load i64, i64* %5, align 8
  store i64 %8, i64* %7, align 8
  %9 = alloca i32
  store i32 2035280506, i32* %9
  br label %10

; <label>:10:                                     ; preds = %3, %31
  %11 = load i32, i32* %9
  switch i32 %11, label %12 [
    i32 2035280506, label %13
    i32 -21005286, label %17
    i32 -220444393, label %21
    i32 -52675023, label %29
  ]

; <label>:12:                                     ; preds = %10
  br label %31

; <label>:13:                                     ; preds = %10
  %14 = load i64, i64* %7, align 8
  %15 = icmp ugt i64 %14, 0
  %16 = select i1 %15, i32 -21005286, i32 -52675023
  store i32 %16, i32* %9
  br label %31

; <label>:17:                                     ; preds = %10
  %18 = load %"class.std::vector.13"*, %"class.std::vector.13"** %6, align 8
  %19 = load %"class.std::vector.13"*, %"class.std::vector.13"** %4, align 8
  %20 = call dereferenceable(24) %"class.std::vector.13"* @_ZNSt6vectorIiSaIiEEaSERKS1_(%"class.std::vector.13"* %19, %"class.std::vector.13"* dereferenceable(24) %18)
  store i32 -220444393, i32* %9
  br label %31

; <label>:21:                                     ; preds = %10
  %22 = load i64, i64* %7, align 8
  %23 = sub i64 %22, 8113556277930512247
  %24 = add i64 %23, -1
  %25 = add i64 %24, 8113556277930512247
  %26 = add i64 %22, -1
  store i64 %25, i64* %7, align 8
  %27 = load %"class.std::vector.13"*, %"class.std::vector.13"** %4, align 8
  %28 = getelementptr inbounds %"class.std::vector.13", %"class.std::vector.13"* %27, i32 1
  store %"class.std::vector.13"* %28, %"class.std::vector.13"** %4, align 8
  store i32 2035280506, i32* %9
  br label %31

; <label>:29:                                     ; preds = %10
  %30 = load %"class.std::vector.13"*, %"class.std::vector.13"** %4, align 8
  ret %"class.std::vector.13"* %30

; <label>:31:                                     ; preds = %21, %17, %13, %12
  br label %10
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.13"* @_ZSt12__niter_baseIPSt6vectorIiSaIiEEENSt11_Niter_baseIT_E13iterator_typeES5_(%"class.std::vector.13"*) #2 comdat {
  %2 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %2, align 8
  %3 = load %"class.std::vector.13"*, %"class.std::vector.13"** %2, align 8
  %4 = call %"class.std::vector.13"* @_ZNSt10_Iter_baseIPSt6vectorIiSaIiEELb0EE7_S_baseES3_(%"class.std::vector.13"* %3)
  ret %"class.std::vector.13"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.13"* @_ZNSt10_Iter_baseIPSt6vectorIiSaIiEELb0EE7_S_baseES3_(%"class.std::vector.13"*) #1 comdat align 2 {
  %2 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %2, align 8
  %3 = load %"class.std::vector.13"*, %"class.std::vector.13"** %2, align 8
  ret %"class.std::vector.13"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2Ev(%"class.std::_Deque_base"*) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %5 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6)
  invoke void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"* %5, i64 0)
          to label %7 unwind label %8

; <label>:7:                                      ; preds = %1
  ret void

; <label>:8:                                      ; preds = %1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  store i8* %10, i8** %3, align 8
  %11 = extractvalue { i8*, i32 } %9, 1
  store i32 %11, i32* %4, align 4
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6) #11
  br label %12

; <label>:12:                                     ; preds = %8
  %13 = load i32, i32* @x.417
  %14 = load i32, i32* @y.418
  %15 = sub i32 0, 1
  %16 = add i32 %13, %15
  %17 = sub i32 %13, 1
  %18 = mul i32 %13, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %14, 10
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  br i1 %24, label %26, label %58

; <label>:26:                                     ; preds = %12, %58
  %27 = load i8*, i8** %3, align 8
  %28 = load i32, i32* %4, align 4
  %29 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %30 = insertvalue { i8*, i32 } %29, i32 %28, 1
  %31 = load i32, i32* @x.417
  %32 = load i32, i32* @y.418
  %33 = sub i32 %31, 264549507
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 264549507
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  br i1 %55, label %57, label %58

; <label>:57:                                     ; preds = %26
  resume { i8*, i32 } %30

; <label>:58:                                     ; preds = %26, %12
  %59 = load i8*, i8** %3, align 8
  %60 = load i32, i32* %4, align 4
  %61 = insertvalue { i8*, i32 } undef, i8* %59, 0
  %62 = insertvalue { i8*, i32 } %61, i32 %60, 1
  br label %26
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %2, align 8
  %3 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3 to %"class.std::allocator.0"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.0"* %4) #11
  %5 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3, i32 0, i32 0
  store i32** null, i32*** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3, i32 0, i32 1
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %7) #11
  %8 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %8) #11
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"*, i64) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.421
  %4 = load i32, i32* @y.422
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %251

; <label>:16:                                     ; preds = %2, %251
  %17 = alloca %"class.std::_Deque_base"*, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i32**, align 8
  %23 = alloca i32**, align 8
  %24 = alloca i8*
  %25 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %17, align 8
  store i64 %1, i64* %18, align 8
  %26 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %17, align 8
  %27 = load i64, i64* %18, align 8
  %28 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %29 = udiv i64 %27, %28
  %30 = sub i64 0, %29
  %31 = sub i64 0, 1
  %32 = add i64 %30, %31
  %33 = sub i64 0, %32
  %34 = add i64 %29, 1
  store i64 %33, i64* %19, align 8
  store i64 8, i64* %20, align 8
  %35 = load i64, i64* %19, align 8
  %36 = add i64 %35, -2412056655756513181
  %37 = add i64 %36, 2
  %38 = sub i64 %37, -2412056655756513181
  %39 = add i64 %35, 2
  store i64 %38, i64* %21, align 8
  %40 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %20, i64* dereferenceable(8) %21)
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %42, i32 0, i32 1
  store i64 %41, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %44, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = call i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"* %26, i64 %46)
  %48 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %49 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %48, i32 0, i32 0
  store i32** %47, i32*** %49, align 8
  %50 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %50, i32 0, i32 0
  %52 = load i32**, i32*** %51, align 8
  %53 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %53, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = load i64, i64* %19, align 8
  %57 = add i64 %55, 2916964131834143461
  %58 = sub i64 %57, %56
  %59 = sub i64 %58, 2916964131834143461
  %60 = sub i64 %55, %56
  %61 = udiv i64 %59, 2
  %62 = getelementptr inbounds i32*, i32** %52, i64 %61
  store i32** %62, i32*** %22, align 8
  %63 = load i32**, i32*** %22, align 8
  %64 = load i64, i64* %19, align 8
  %65 = getelementptr inbounds i32*, i32** %63, i64 %64
  store i32** %65, i32*** %23, align 8
  %66 = load i32**, i32*** %22, align 8
  %67 = load i32**, i32*** %23, align 8
  %68 = load i32, i32* @x.421
  %69 = load i32, i32* @y.422
  %70 = sub i32 0, 1
  %71 = add i32 %68, %70
  %72 = sub i32 %68, 1
  %73 = mul i32 %68, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %69, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  br i1 %79, label %81, label %251

; <label>:81:                                     ; preds = %16
  invoke void @_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_(%"class.std::_Deque_base"* %26, i32** %66, i32** %67)
          to label %82 unwind label %112

; <label>:82:                                     ; preds = %81
  %83 = load i32, i32* @x.421
  %84 = load i32, i32* @y.422
  %85 = sub i32 0, 1
  %86 = add i32 %83, %85
  %87 = sub i32 %83, 1
  %88 = mul i32 %83, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %84, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  br i1 %94, label %96, label %397

; <label>:96:                                     ; preds = %82, %397
  %97 = load i32, i32* @x.421
  %98 = load i32, i32* @y.422
  %99 = sub i32 %97, -1427089949
  %100 = sub i32 %99, 1
  %101 = add i32 %100, -1427089949
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  br i1 %109, label %111, label %397

; <label>:111:                                    ; preds = %96
  br label %216

; <label>:112:                                    ; preds = %81
  %113 = load i32, i32* @x.421
  %114 = load i32, i32* @y.422
  %115 = sub i32 0, 1
  %116 = add i32 %113, %115
  %117 = sub i32 %113, 1
  %118 = mul i32 %113, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %114, 10
  %122 = xor i1 %120, true
  %123 = xor i1 %121, true
  %124 = xor i1 false, true
  %125 = and i1 %122, false
  %126 = and i1 %120, %124
  %127 = and i1 %123, false
  %128 = and i1 %121, %124
  %129 = or i1 %125, %126
  %130 = or i1 %127, %128
  %131 = xor i1 %129, %130
  %132 = or i1 %122, %123
  %133 = xor i1 %132, true
  %134 = or i1 false, %124
  %135 = and i1 %133, %134
  %136 = or i1 %131, %135
  %137 = or i1 %120, %121
  br i1 %136, label %138, label %398

; <label>:138:                                    ; preds = %112, %398
  %139 = landingpad { i8*, i32 }
          catch i8* null
  %140 = extractvalue { i8*, i32 } %139, 0
  store i8* %140, i8** %24, align 8
  %141 = extractvalue { i8*, i32 } %139, 1
  store i32 %141, i32* %25, align 4
  %142 = load i32, i32* @x.421
  %143 = load i32, i32* @y.422
  %144 = sub i32 0, 1
  %145 = add i32 %142, %144
  %146 = sub i32 %142, 1
  %147 = mul i32 %142, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %143, 10
  %151 = and i1 %149, %150
  %152 = xor i1 %149, %150
  %153 = or i1 %151, %152
  %154 = or i1 %149, %150
  br i1 %153, label %155, label %398

; <label>:155:                                    ; preds = %138
  br label %156

; <label>:156:                                    ; preds = %155
  %157 = load i32, i32* @x.421
  %158 = load i32, i32* @y.422
  %159 = add i32 %157, -857350879
  %160 = sub i32 %159, 1
  %161 = sub i32 %160, -857350879
  %162 = sub i32 %157, 1
  %163 = mul i32 %157, %161
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %158, 10
  %167 = and i1 %165, %166
  %168 = xor i1 %165, %166
  %169 = or i1 %167, %168
  %170 = or i1 %165, %166
  br i1 %169, label %171, label %402

; <label>:171:                                    ; preds = %156, %402
  %172 = load i8*, i8** %24, align 8
  %173 = call i8* @__cxa_begin_catch(i8* %172) #11
  %174 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %175 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %174, i32 0, i32 0
  %176 = load i32**, i32*** %175, align 8
  %177 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %178 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %177, i32 0, i32 1
  %179 = load i64, i64* %178, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %26, i32** %176, i64 %179) #11
  %180 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %181 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %180, i32 0, i32 0
  store i32** null, i32*** %181, align 8
  %182 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %183 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %182, i32 0, i32 1
  store i64 0, i64* %183, align 8
  %184 = load i32, i32* @x.421
  %185 = load i32, i32* @y.422
  %186 = sub i32 %184, 1318779865
  %187 = sub i32 %186, 1
  %188 = add i32 %187, 1318779865
  %189 = sub i32 %184, 1
  %190 = mul i32 %184, %188
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %185, 10
  %194 = xor i1 %192, true
  %195 = xor i1 %193, true
  %196 = xor i1 true, true
  %197 = and i1 %194, true
  %198 = and i1 %192, %196
  %199 = and i1 %195, true
  %200 = and i1 %193, %196
  %201 = or i1 %197, %198
  %202 = or i1 %199, %200
  %203 = xor i1 %201, %202
  %204 = or i1 %194, %195
  %205 = xor i1 %204, true
  %206 = or i1 true, %196
  %207 = and i1 %205, %206
  %208 = or i1 %203, %207
  %209 = or i1 %192, %193
  br i1 %208, label %210, label %402

; <label>:210:                                    ; preds = %171
  invoke void @__cxa_rethrow() #13
          to label %250 unwind label %211

; <label>:211:                                    ; preds = %210
  %212 = landingpad { i8*, i32 }
          cleanup
  %213 = extractvalue { i8*, i32 } %212, 0
  store i8* %213, i8** %24, align 8
  %214 = extractvalue { i8*, i32 } %212, 1
  store i32 %214, i32* %25, align 4
  invoke void @__cxa_end_catch()
          to label %215 unwind label %247

; <label>:215:                                    ; preds = %211
  br label %242

; <label>:216:                                    ; preds = %111
  %217 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %218 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %217, i32 0, i32 2
  %219 = load i32**, i32*** %22, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %218, i32** %219) #11
  %220 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %221 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %220, i32 0, i32 3
  %222 = load i32**, i32*** %23, align 8
  %223 = getelementptr inbounds i32*, i32** %222, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %221, i32** %223) #11
  %224 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %225 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %224, i32 0, i32 2
  %226 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %225, i32 0, i32 1
  %227 = load i32*, i32** %226, align 8
  %228 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %229 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %228, i32 0, i32 2
  %230 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %229, i32 0, i32 0
  store i32* %227, i32** %230, align 8
  %231 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %232 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %231, i32 0, i32 3
  %233 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %232, i32 0, i32 1
  %234 = load i32*, i32** %233, align 8
  %235 = load i64, i64* %18, align 8
  %236 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %237 = urem i64 %235, %236
  %238 = getelementptr inbounds i32, i32* %234, i64 %237
  %239 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %240 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %239, i32 0, i32 3
  %241 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %240, i32 0, i32 0
  store i32* %238, i32** %241, align 8
  ret void

; <label>:242:                                    ; preds = %215
  %243 = load i8*, i8** %24, align 8
  %244 = load i32, i32* %25, align 4
  %245 = insertvalue { i8*, i32 } undef, i8* %243, 0
  %246 = insertvalue { i8*, i32 } %245, i32 %244, 1
  resume { i8*, i32 } %246

; <label>:247:                                    ; preds = %211
  %248 = landingpad { i8*, i32 }
          catch i8* null
  %249 = extractvalue { i8*, i32 } %248, 0
  call void @__clang_call_terminate(i8* %249) #9
  unreachable

; <label>:250:                                    ; preds = %210
  unreachable

; <label>:251:                                    ; preds = %16, %2
  %252 = alloca %"class.std::_Deque_base"*, align 8
  %253 = alloca i64, align 8
  %254 = alloca i64, align 8
  %255 = alloca i64, align 8
  %256 = alloca i64, align 8
  %257 = alloca i32**, align 8
  %258 = alloca i32**, align 8
  %259 = alloca i8*
  %260 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %252, align 8
  store i64 %1, i64* %253, align 8
  %261 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %252, align 8
  %262 = load i64, i64* %253, align 8
  %263 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %264 = sub i64 0, 7725879908334865506
  %265 = sub i64 %264, %262
  %266 = add i64 %265, 7725879908334865506
  %267 = sub i64 0, %262
  %268 = sub i64 %266, -4017239691613256675
  %269 = add i64 %268, %263
  %270 = add i64 %269, -4017239691613256675
  %271 = add i64 %266, %263
  %272 = sub i64 0, 9082881075202918665
  %273 = sub i64 %272, %262
  %274 = add i64 %273, 9082881075202918665
  %275 = sub i64 0, %262
  %276 = sub i64 %274, -707894357250267585
  %277 = add i64 %276, %263
  %278 = add i64 %277, -707894357250267585
  %279 = add i64 %274, %263
  %280 = sub i64 0, 606945630563789937
  %281 = sub i64 %280, %262
  %282 = add i64 %281, 606945630563789937
  %283 = sub i64 0, %262
  %284 = sub i64 %282, 2768869344324779515
  %285 = add i64 %284, %263
  %286 = add i64 %285, 2768869344324779515
  %287 = add i64 %282, %263
  %288 = sub i64 0, %262
  %289 = add i64 0, %288
  %290 = sub i64 0, %262
  %291 = sub i64 0, %289
  %292 = sub i64 0, %263
  %293 = add i64 %291, %292
  %294 = sub i64 0, %293
  %295 = add i64 %289, %263
  %296 = udiv i64 %262, %263
  %297 = sub i64 %296, 2325740697520838405
  %298 = sub i64 %297, 1
  %299 = add i64 %298, 2325740697520838405
  %300 = sub i64 %296, 1
  %301 = mul i64 %299, 1
  %302 = sub i64 0, 1
  %303 = sub i64 %296, %302
  %304 = add i64 %296, 1
  store i64 %303, i64* %254, align 8
  store i64 8, i64* %255, align 8
  %305 = load i64, i64* %254, align 8
  %306 = sub i64 0, -4268744744698665965
  %307 = sub i64 %306, %305
  %308 = add i64 %307, -4268744744698665965
  %309 = sub i64 0, %305
  %310 = sub i64 %308, -1233743751451801441
  %311 = add i64 %310, 2
  %312 = add i64 %311, -1233743751451801441
  %313 = add i64 %308, 2
  %314 = add i64 %305, 6712165574301805698
  %315 = sub i64 %314, 2
  %316 = sub i64 %315, 6712165574301805698
  %317 = sub i64 %305, 2
  %318 = mul i64 %316, 2
  %319 = sub i64 0, %305
  %320 = add i64 0, %319
  %321 = sub i64 0, %305
  %322 = sub i64 %320, 8819032658277266630
  %323 = add i64 %322, 2
  %324 = add i64 %323, 8819032658277266630
  %325 = add i64 %320, 2
  %326 = sub i64 %305, -4662362456851574772
  %327 = sub i64 %326, 2
  %328 = add i64 %327, -4662362456851574772
  %329 = sub i64 %305, 2
  %330 = mul i64 %328, 2
  %331 = sub i64 0, 2
  %332 = sub i64 %305, %331
  %333 = add i64 %305, 2
  store i64 %332, i64* %256, align 8
  %334 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %255, i64* dereferenceable(8) %256)
  %335 = load i64, i64* %334, align 8
  %336 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %261, i32 0, i32 0
  %337 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %336, i32 0, i32 1
  store i64 %335, i64* %337, align 8
  %338 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %261, i32 0, i32 0
  %339 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %338, i32 0, i32 1
  %340 = load i64, i64* %339, align 8
  %341 = call i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"* %261, i64 %340)
  %342 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %261, i32 0, i32 0
  %343 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %342, i32 0, i32 0
  store i32** %341, i32*** %343, align 8
  %344 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %261, i32 0, i32 0
  %345 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %344, i32 0, i32 0
  %346 = load i32**, i32*** %345, align 8
  %347 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %261, i32 0, i32 0
  %348 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %347, i32 0, i32 1
  %349 = load i64, i64* %348, align 8
  %350 = load i64, i64* %254, align 8
  %351 = shl i64 %349, %350
  %352 = sub i64 %349, -4368974641309729572
  %353 = sub i64 %352, %350
  %354 = add i64 %353, -4368974641309729572
  %355 = sub i64 %349, %350
  %356 = mul i64 %354, %350
  %357 = sub i64 %349, 7638164589974195692
  %358 = sub i64 %357, %350
  %359 = add i64 %358, 7638164589974195692
  %360 = sub i64 %349, %350
  %361 = sub i64 %359, -4890744250491783609
  %362 = sub i64 %361, 2
  %363 = add i64 %362, -4890744250491783609
  %364 = sub i64 %359, 2
  %365 = mul i64 %363, 2
  %366 = add i64 0, 470882689587403363
  %367 = sub i64 %366, %359
  %368 = sub i64 %367, 470882689587403363
  %369 = sub i64 0, %359
  %370 = sub i64 0, %368
  %371 = sub i64 0, 2
  %372 = add i64 %370, %371
  %373 = sub i64 0, %372
  %374 = add i64 %368, 2
  %375 = sub i64 0, -3656478253635422560
  %376 = sub i64 %375, %359
  %377 = add i64 %376, -3656478253635422560
  %378 = sub i64 0, %359
  %379 = sub i64 0, 2
  %380 = sub i64 %377, %379
  %381 = add i64 %377, 2
  %382 = sub i64 0, -1203116084379851104
  %383 = sub i64 %382, %359
  %384 = add i64 %383, -1203116084379851104
  %385 = sub i64 0, %359
  %386 = add i64 %384, -5334494555192982948
  %387 = add i64 %386, 2
  %388 = sub i64 %387, -5334494555192982948
  %389 = add i64 %384, 2
  %390 = udiv i64 %359, 2
  %391 = getelementptr inbounds i32*, i32** %346, i64 %390
  store i32** %391, i32*** %257, align 8
  %392 = load i32**, i32*** %257, align 8
  %393 = load i64, i64* %254, align 8
  %394 = getelementptr inbounds i32*, i32** %392, i64 %393
  store i32** %394, i32*** %258, align 8
  %395 = load i32**, i32*** %257, align 8
  %396 = load i32**, i32*** %258, align 8
  br label %16

; <label>:397:                                    ; preds = %96, %82
  br label %96

; <label>:398:                                    ; preds = %138, %112
  %399 = landingpad { i8*, i32 }
          catch i8* null
  %400 = extractvalue { i8*, i32 } %399, 0
  store i8* %400, i8** %24, align 8
  %401 = extractvalue { i8*, i32 } %399, 1
  store i32 %401, i32* %25, align 4
  br label %138

; <label>:402:                                    ; preds = %171, %156
  %403 = load i8*, i8** %24, align 8
  %404 = call i8* @__cxa_begin_catch(i8* %403) #11
  %405 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %406 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %405, i32 0, i32 0
  %407 = load i32**, i32*** %406, align 8
  %408 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %409 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %408, i32 0, i32 1
  %410 = load i64, i64* %409, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %26, i32** %407, i64 %410) #11
  %411 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %412 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %411, i32 0, i32 0
  store i32** null, i32*** %412, align 8
  %413 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %414 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %413, i32 0, i32 1
  store i64 0, i64* %414, align 8
  br label %171
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.423
  %5 = load i32, i32* @y.424
  %6 = sub i32 %4, -2128756458
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -2128756458
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1499396783, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1499396783, label %18
    i32 1430566424, label %38
    i32 297778634, label %57
    i32 1649595085, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1430566424, i32 1649595085
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %39, align 8
  %40 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %39, align 8
  %41 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %40 to %"class.std::allocator.0"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.0"* %41) #11
  %42 = load i32, i32* @x.423
  %43 = load i32, i32* @y.424
  %44 = add i32 %42, -2104749520
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -2104749520
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 297778634, i32 1649595085
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %59, align 8
  %60 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %59, align 8
  %61 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %60 to %"class.std::allocator.0"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.0"* %61) #11
  store i32 1430566424, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  store i32* null, i32** %4, align 8
  %5 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 1
  store i32* null, i32** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 2
  store i32* null, i32** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 3
  store i32** null, i32*** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt16__deque_buf_sizem(i64) #1 comdat {
  %2 = alloca i1
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.427
  %7 = load i32, i32* @y.428
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1696353350, i32* %15
  %16 = alloca i64
  br label %17

; <label>:17:                                     ; preds = %1, %118
  %18 = load i32, i32* %15
  switch i32 %18, label %19 [
    i32 -1696353350, label %20
    i32 -136444781, label %28
    i32 1264147081, label %49
    i32 1199060119, label %52
    i32 733667072, label %56
    i32 -1305367378, label %83
    i32 -599357350, label %110
    i32 -241050402, label %111
    i32 341194807, label %113
    i32 1205709509, label %117
  ]

; <label>:19:                                     ; preds = %17
  br label %118

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -136444781, i32 341194807
  store i32 %27, i32* %15
  br label %118

; <label>:28:                                     ; preds = %17
  %29 = alloca i64, align 8
  store i64* %29, i64** %3
  %30 = load volatile i64*, i64** %3
  store i64 %0, i64* %30, align 8
  %31 = load volatile i64*, i64** %3
  %32 = load i64, i64* %31, align 8
  %33 = icmp ult i64 %32, 512
  store i1 %33, i1* %2
  %34 = load i32, i32* @x.427
  %35 = load i32, i32* @y.428
  %36 = add i32 %34, -1336896396
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, -1336896396
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 1264147081, i32 341194807
  store i32 %48, i32* %15
  br label %118

; <label>:49:                                     ; preds = %17
  %50 = load volatile i1, i1* %2
  %51 = select i1 %50, i32 1199060119, i32 733667072
  store i32 %51, i32* %15
  br label %118

; <label>:52:                                     ; preds = %17
  %53 = load volatile i64*, i64** %3
  %54 = load i64, i64* %53, align 8
  %55 = udiv i64 512, %54
  store i32 -241050402, i32* %15
  store i64 %55, i64* %16
  br label %118

; <label>:56:                                     ; preds = %17
  %57 = load i32, i32* @x.427
  %58 = load i32, i32* @y.428
  %59 = sub i32 0, 1
  %60 = add i32 %57, %59
  %61 = sub i32 %57, 1
  %62 = mul i32 %57, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %58, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 false, true
  %69 = and i1 %66, false
  %70 = and i1 %64, %68
  %71 = and i1 %67, false
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 false, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 -1305367378, i32 1205709509
  store i32 %82, i32* %15
  br label %118

; <label>:83:                                     ; preds = %17
  %84 = load i32, i32* @x.427
  %85 = load i32, i32* @y.428
  %86 = sub i32 0, 1
  %87 = add i32 %84, %86
  %88 = sub i32 %84, 1
  %89 = mul i32 %84, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %85, 10
  %93 = xor i1 %91, true
  %94 = xor i1 %92, true
  %95 = xor i1 false, true
  %96 = and i1 %93, false
  %97 = and i1 %91, %95
  %98 = and i1 %94, false
  %99 = and i1 %92, %95
  %100 = or i1 %96, %97
  %101 = or i1 %98, %99
  %102 = xor i1 %100, %101
  %103 = or i1 %93, %94
  %104 = xor i1 %103, true
  %105 = or i1 false, %95
  %106 = and i1 %104, %105
  %107 = or i1 %102, %106
  %108 = or i1 %91, %92
  %109 = select i1 %107, i32 -599357350, i32 1205709509
  store i32 %109, i32* %15
  br label %118

; <label>:110:                                    ; preds = %17
  store i32 -241050402, i32* %15
  store i64 1, i64* %16
  br label %118

; <label>:111:                                    ; preds = %17
  %112 = load i64, i64* %16
  ret i64 %112

; <label>:113:                                    ; preds = %17
  %114 = alloca i64, align 8
  store i64 %0, i64* %114, align 8
  %115 = load i64, i64* %114, align 8
  %116 = icmp ult i64 %115, 512
  store i32 -136444781, i32* %15
  br label %118

; <label>:117:                                    ; preds = %17
  store i32 -1305367378, i32* %15
  br label %118

; <label>:118:                                    ; preds = %117, %113, %110, %83, %56, %52, %49, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #1 comdat {
  %3 = alloca i64*
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  store i64* %0, i64** %7, align 8
  store i64* %1, i64** %8, align 8
  %9 = load i64*, i64** %7, align 8
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %5
  %11 = load i64*, i64** %8, align 8
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %4
  %13 = alloca i32
  store i32 346301403, i32* %13
  br label %14

; <label>:14:                                     ; preds = %2, %165
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 346301403, label %17
    i32 1109932463, label %22
    i32 -730651549, label %50
    i32 515147917, label %79
    i32 -582183655, label %80
    i32 1214190488, label %95
    i32 1941556829, label %111
    i32 1838254093, label %112
    i32 -278312683, label %128
    i32 -1235471369, label %157
    i32 -1872726762, label %159
    i32 1647465987, label %161
    i32 2110384503, label %163
  ]

; <label>:16:                                     ; preds = %14
  br label %165

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %5
  %19 = load volatile i64, i64* %4
  %20 = icmp ult i64 %18, %19
  %21 = select i1 %20, i32 1109932463, i32 -582183655
  store i32 %21, i32* %13
  br label %165

; <label>:22:                                     ; preds = %14
  %23 = load i32, i32* @x.429
  %24 = load i32, i32* @y.430
  %25 = add i32 %23, 885930277
  %26 = sub i32 %25, 1
  %27 = sub i32 %26, 885930277
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 false, true
  %36 = and i1 %33, false
  %37 = and i1 %31, %35
  %38 = and i1 %34, false
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 false, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  %49 = select i1 %47, i32 -730651549, i32 -1872726762
  store i32 %49, i32* %13
  br label %165

; <label>:50:                                     ; preds = %14
  %51 = load i64*, i64** %8, align 8
  store i64* %51, i64** %6, align 8
  %52 = load i32, i32* @x.429
  %53 = load i32, i32* @y.430
  %54 = sub i32 %52, 1522658936
  %55 = sub i32 %54, 1
  %56 = add i32 %55, 1522658936
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 515147917, i32 -1872726762
  store i32 %78, i32* %13
  br label %165

; <label>:79:                                     ; preds = %14
  store i32 1838254093, i32* %13
  br label %165

; <label>:80:                                     ; preds = %14
  %81 = load i32, i32* @x.429
  %82 = load i32, i32* @y.430
  %83 = sub i32 0, 1
  %84 = add i32 %81, %83
  %85 = sub i32 %81, 1
  %86 = mul i32 %81, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %82, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  %94 = select i1 %92, i32 1214190488, i32 1647465987
  store i32 %94, i32* %13
  br label %165

; <label>:95:                                     ; preds = %14
  %96 = load i64*, i64** %7, align 8
  store i64* %96, i64** %6, align 8
  %97 = load i32, i32* @x.429
  %98 = load i32, i32* @y.430
  %99 = sub i32 0, 1
  %100 = add i32 %97, %99
  %101 = sub i32 %97, 1
  %102 = mul i32 %97, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %98, 10
  %106 = and i1 %104, %105
  %107 = xor i1 %104, %105
  %108 = or i1 %106, %107
  %109 = or i1 %104, %105
  %110 = select i1 %108, i32 1941556829, i32 1647465987
  store i32 %110, i32* %13
  br label %165

; <label>:111:                                    ; preds = %14
  store i32 1838254093, i32* %13
  br label %165

; <label>:112:                                    ; preds = %14
  %113 = load i32, i32* @x.429
  %114 = load i32, i32* @y.430
  %115 = add i32 %113, -1845061623
  %116 = sub i32 %115, 1
  %117 = sub i32 %116, -1845061623
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  %127 = select i1 %125, i32 -278312683, i32 2110384503
  store i32 %127, i32* %13
  br label %165

; <label>:128:                                    ; preds = %14
  %129 = load i64*, i64** %6, align 8
  store i64* %129, i64** %3
  %130 = load i32, i32* @x.429
  %131 = load i32, i32* @y.430
  %132 = add i32 %130, -1793564700
  %133 = sub i32 %132, 1
  %134 = sub i32 %133, -1793564700
  %135 = sub i32 %130, 1
  %136 = mul i32 %130, %134
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %131, 10
  %140 = xor i1 %138, true
  %141 = xor i1 %139, true
  %142 = xor i1 false, true
  %143 = and i1 %140, false
  %144 = and i1 %138, %142
  %145 = and i1 %141, false
  %146 = and i1 %139, %142
  %147 = or i1 %143, %144
  %148 = or i1 %145, %146
  %149 = xor i1 %147, %148
  %150 = or i1 %140, %141
  %151 = xor i1 %150, true
  %152 = or i1 false, %142
  %153 = and i1 %151, %152
  %154 = or i1 %149, %153
  %155 = or i1 %138, %139
  %156 = select i1 %154, i32 -1235471369, i32 2110384503
  store i32 %156, i32* %13
  br label %165

; <label>:157:                                    ; preds = %14
  %158 = load volatile i64*, i64** %3
  ret i64* %158

; <label>:159:                                    ; preds = %14
  %160 = load i64*, i64** %8, align 8
  store i64* %160, i64** %6, align 8
  store i32 -730651549, i32* %13
  br label %165

; <label>:161:                                    ; preds = %14
  %162 = load i64*, i64** %7, align 8
  store i64* %162, i64** %6, align 8
  store i32 1214190488, i32* %13
  br label %165

; <label>:163:                                    ; preds = %14
  %164 = load i64*, i64** %6, align 8
  store i32 -278312683, i32* %13
  br label %165

; <label>:165:                                    ; preds = %163, %161, %159, %128, %112, %111, %95, %80, %79, %50, %22, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"*, i64) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::allocator.17", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.17"* sret %5, %"class.std::_Deque_base"* %8) #11
  %9 = load i64, i64* %4, align 8
  %10 = invoke i32** @_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m(%"class.std::allocator.17"* dereferenceable(1) %5, i64 %9)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %2
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.17"* %5) #11
  ret i32** %10

; <label>:12:                                     ; preds = %2
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %6, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %7, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.17"* %5) #11
  br label %16

; <label>:16:                                     ; preds = %12
  %17 = load i8*, i8** %6, align 8
  %18 = load i32, i32* %7, align 4
  %19 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1
  resume { i8*, i32 } %20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_(%"class.std::_Deque_base"*, i32**, i32**) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %11 = load i32**, i32*** %5, align 8
  store i32** %11, i32*** %7, align 8
  br label %12

; <label>:12:                                     ; preds = %64, %3
  %13 = load i32**, i32*** %7, align 8
  %14 = load i32**, i32*** %6, align 8
  %15 = icmp ult i32** %13, %14
  br i1 %15, label %16, label %74

; <label>:16:                                     ; preds = %12
  %17 = invoke i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %10)
          to label %18 unwind label %65

; <label>:18:                                     ; preds = %16
  %19 = load i32**, i32*** %7, align 8
  store i32* %17, i32** %19, align 8
  br label %20

; <label>:20:                                     ; preds = %18
  %21 = load i32, i32* @x.433
  %22 = load i32, i32* @y.434
  %23 = add i32 %21, -140661670
  %24 = sub i32 %23, 1
  %25 = sub i32 %24, -140661670
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  br i1 %33, label %35, label %184

; <label>:35:                                     ; preds = %20, %184
  %36 = load i32**, i32*** %7, align 8
  %37 = getelementptr inbounds i32*, i32** %36, i32 1
  store i32** %37, i32*** %7, align 8
  %38 = load i32, i32* @x.433
  %39 = load i32, i32* @y.434
  %40 = add i32 %38, -1979401025
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -1979401025
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  br i1 %62, label %64, label %184

; <label>:64:                                     ; preds = %35
  br label %12

; <label>:65:                                     ; preds = %16
  %66 = landingpad { i8*, i32 }
          catch i8* null
  %67 = extractvalue { i8*, i32 } %66, 0
  store i8* %67, i8** %8, align 8
  %68 = extractvalue { i8*, i32 } %66, 1
  store i32 %68, i32* %9, align 4
  br label %69

; <label>:69:                                     ; preds = %65
  %70 = load i8*, i8** %8, align 8
  %71 = call i8* @__cxa_begin_catch(i8* %70) #11
  %72 = load i32**, i32*** %5, align 8
  %73 = load i32**, i32*** %7, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %10, i32** %72, i32** %73) #11
  invoke void @__cxa_rethrow() #13
          to label %143 unwind label %129

; <label>:74:                                     ; preds = %12
  %75 = load i32, i32* @x.433
  %76 = load i32, i32* @y.434
  %77 = sub i32 %75, -1655492391
  %78 = sub i32 %77, 1
  %79 = add i32 %78, -1655492391
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 true, true
  %88 = and i1 %85, true
  %89 = and i1 %83, %87
  %90 = and i1 %86, true
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 true, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  br i1 %99, label %101, label %187

; <label>:101:                                    ; preds = %74, %187
  %102 = load i32, i32* @x.433
  %103 = load i32, i32* @y.434
  %104 = sub i32 %102, -1835363090
  %105 = sub i32 %104, 1
  %106 = add i32 %105, -1835363090
  %107 = sub i32 %102, 1
  %108 = mul i32 %102, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %103, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 false, true
  %115 = and i1 %112, false
  %116 = and i1 %110, %114
  %117 = and i1 %113, false
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 false, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  br i1 %126, label %128, label %187

; <label>:128:                                    ; preds = %101
  br label %134

; <label>:129:                                    ; preds = %69
  %130 = landingpad { i8*, i32 }
          cleanup
  %131 = extractvalue { i8*, i32 } %130, 0
  store i8* %131, i8** %8, align 8
  %132 = extractvalue { i8*, i32 } %130, 1
  store i32 %132, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %133 unwind label %140

; <label>:133:                                    ; preds = %129
  br label %135

; <label>:134:                                    ; preds = %128
  ret void

; <label>:135:                                    ; preds = %133
  %136 = load i8*, i8** %8, align 8
  %137 = load i32, i32* %9, align 4
  %138 = insertvalue { i8*, i32 } undef, i8* %136, 0
  %139 = insertvalue { i8*, i32 } %138, i32 %137, 1
  resume { i8*, i32 } %139

; <label>:140:                                    ; preds = %129
  %141 = landingpad { i8*, i32 }
          catch i8* null
  %142 = extractvalue { i8*, i32 } %141, 0
  call void @__clang_call_terminate(i8* %142) #9
  unreachable

; <label>:143:                                    ; preds = %69
  %144 = load i32, i32* @x.433
  %145 = load i32, i32* @y.434
  %146 = sub i32 0, 1
  %147 = add i32 %144, %146
  %148 = sub i32 %144, 1
  %149 = mul i32 %144, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %145, 10
  %153 = xor i1 %151, true
  %154 = xor i1 %152, true
  %155 = xor i1 false, true
  %156 = and i1 %153, false
  %157 = and i1 %151, %155
  %158 = and i1 %154, false
  %159 = and i1 %152, %155
  %160 = or i1 %156, %157
  %161 = or i1 %158, %159
  %162 = xor i1 %160, %161
  %163 = or i1 %153, %154
  %164 = xor i1 %163, true
  %165 = or i1 false, %155
  %166 = and i1 %164, %165
  %167 = or i1 %162, %166
  %168 = or i1 %151, %152
  br i1 %167, label %169, label %188

; <label>:169:                                    ; preds = %143, %188
  %170 = load i32, i32* @x.433
  %171 = load i32, i32* @y.434
  %172 = sub i32 0, 1
  %173 = add i32 %170, %172
  %174 = sub i32 %170, 1
  %175 = mul i32 %170, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %171, 10
  %179 = and i1 %177, %178
  %180 = xor i1 %177, %178
  %181 = or i1 %179, %180
  %182 = or i1 %177, %178
  br i1 %181, label %183, label %188

; <label>:183:                                    ; preds = %169
  unreachable

; <label>:184:                                    ; preds = %35, %20
  %185 = load i32**, i32*** %7, align 8
  %186 = getelementptr inbounds i32*, i32** %185, i32 1
  store i32** %186, i32*** %7, align 8
  br label %35

; <label>:187:                                    ; preds = %101, %74
  br label %101

; <label>:188:                                    ; preds = %169, %143
  br label %169
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"*, i32**, i64) #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.435
  %5 = load i32, i32* @y.436
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %5, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %130

; <label>:17:                                     ; preds = %3, %130
  %18 = alloca %"class.std::_Deque_base"*, align 8
  %19 = alloca i32**, align 8
  %20 = alloca i64, align 8
  %21 = alloca %"class.std::allocator.17", align 1
  %22 = alloca i8*
  %23 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %18, align 8
  store i32** %1, i32*** %19, align 8
  store i64 %2, i64* %20, align 8
  %24 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %18, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.17"* sret %21, %"class.std::_Deque_base"* %24) #11
  %25 = load i32**, i32*** %19, align 8
  %26 = load i64, i64* %20, align 8
  %27 = load i32, i32* @x.435
  %28 = load i32, i32* @y.436
  %29 = sub i32 %27, -724762627
  %30 = sub i32 %29, 1
  %31 = add i32 %30, -724762627
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  br i1 %39, label %41, label %130

; <label>:41:                                     ; preds = %17
  invoke void @_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m(%"class.std::allocator.17"* dereferenceable(1) %21, i32** %25, i64 %26)
          to label %42 unwind label %83

; <label>:42:                                     ; preds = %41
  %43 = load i32, i32* @x.435
  %44 = load i32, i32* @y.436
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  br i1 %54, label %56, label %140

; <label>:56:                                     ; preds = %42, %140
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.17"* %21) #11
  %57 = load i32, i32* @x.435
  %58 = load i32, i32* @y.436
  %59 = sub i32 0, 1
  %60 = add i32 %57, %59
  %61 = sub i32 %57, 1
  %62 = mul i32 %57, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %58, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 false, true
  %69 = and i1 %66, false
  %70 = and i1 %64, %68
  %71 = and i1 %67, false
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 false, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  br i1 %80, label %82, label %140

; <label>:82:                                     ; preds = %56
  ret void

; <label>:83:                                     ; preds = %41
  %84 = landingpad { i8*, i32 }
          catch i8* null
  %85 = extractvalue { i8*, i32 } %84, 0
  store i8* %85, i8** %22, align 8
  %86 = extractvalue { i8*, i32 } %84, 1
  store i32 %86, i32* %23, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.17"* %21) #11
  br label %87

; <label>:87:                                     ; preds = %83
  %88 = load i32, i32* @x.435
  %89 = load i32, i32* @y.436
  %90 = sub i32 %88, -1728774901
  %91 = sub i32 %90, 1
  %92 = add i32 %91, -1728774901
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = and i1 %96, %97
  %99 = xor i1 %96, %97
  %100 = or i1 %98, %99
  %101 = or i1 %96, %97
  br i1 %100, label %102, label %141

; <label>:102:                                    ; preds = %87, %141
  %103 = load i8*, i8** %22, align 8
  call void @__clang_call_terminate(i8* %103) #9
  %104 = load i32, i32* @x.435
  %105 = load i32, i32* @y.436
  %106 = sub i32 0, 1
  %107 = add i32 %104, %106
  %108 = sub i32 %104, 1
  %109 = mul i32 %104, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %105, 10
  %113 = xor i1 %111, true
  %114 = xor i1 %112, true
  %115 = xor i1 false, true
  %116 = and i1 %113, false
  %117 = and i1 %111, %115
  %118 = and i1 %114, false
  %119 = and i1 %112, %115
  %120 = or i1 %116, %117
  %121 = or i1 %118, %119
  %122 = xor i1 %120, %121
  %123 = or i1 %113, %114
  %124 = xor i1 %123, true
  %125 = or i1 false, %115
  %126 = and i1 %124, %125
  %127 = or i1 %122, %126
  %128 = or i1 %111, %112
  br i1 %127, label %129, label %141

; <label>:129:                                    ; preds = %102
  unreachable

; <label>:130:                                    ; preds = %17, %3
  %131 = alloca %"class.std::_Deque_base"*, align 8
  %132 = alloca i32**, align 8
  %133 = alloca i64, align 8
  %134 = alloca %"class.std::allocator.17", align 1
  %135 = alloca i8*
  %136 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %131, align 8
  store i32** %1, i32*** %132, align 8
  store i64 %2, i64* %133, align 8
  %137 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %131, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.17"* sret %134, %"class.std::_Deque_base"* %137) #11
  %138 = load i32**, i32*** %132, align 8
  %139 = load i64, i64* %133, align 8
  br label %17

; <label>:140:                                    ; preds = %56, %42
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.17"* %21) #11
  br label %56

; <label>:141:                                    ; preds = %102, %87
  %142 = load i8*, i8** %22, align 8
  call void @__clang_call_terminate(i8* %142) #9
  br label %102
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"*, i32**) #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.437
  %6 = load i32, i32* @y.438
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 690284953, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %82
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 690284953, label %18
    i32 -812735258, label %26
    i32 -230047189, label %67
    i32 2073889749, label %68
  ]

; <label>:17:                                     ; preds = %15
  br label %82

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -812735258, i32 2073889749
  store i32 %25, i32* %14
  br label %82

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Deque_iterator"*, align 8
  %28 = alloca i32**, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %27, align 8
  store i32** %1, i32*** %28, align 8
  %29 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %27, align 8
  %30 = load i32**, i32*** %28, align 8
  %31 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %29, i32 0, i32 3
  store i32** %30, i32*** %31, align 8
  %32 = load i32**, i32*** %28, align 8
  %33 = load i32*, i32** %32, align 8
  %34 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %29, i32 0, i32 1
  store i32* %33, i32** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %29, i32 0, i32 1
  %36 = load i32*, i32** %35, align 8
  %37 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #11
  %38 = getelementptr inbounds i32, i32* %36, i64 %37
  %39 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %29, i32 0, i32 2
  store i32* %38, i32** %39, align 8
  %40 = load i32, i32* @x.437
  %41 = load i32, i32* @y.438
  %42 = sub i32 %40, -592059780
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -592059780
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -230047189, i32 2073889749
  store i32 %66, i32* %14
  br label %82

; <label>:67:                                     ; preds = %15
  ret void

; <label>:68:                                     ; preds = %15
  %69 = alloca %"struct.std::_Deque_iterator"*, align 8
  %70 = alloca i32**, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %69, align 8
  store i32** %1, i32*** %70, align 8
  %71 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %69, align 8
  %72 = load i32**, i32*** %70, align 8
  %73 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %71, i32 0, i32 3
  store i32** %72, i32*** %73, align 8
  %74 = load i32**, i32*** %70, align 8
  %75 = load i32*, i32** %74, align 8
  %76 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %71, i32 0, i32 1
  store i32* %75, i32** %76, align 8
  %77 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %71, i32 0, i32 1
  %78 = load i32*, i32** %77, align 8
  %79 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #11
  %80 = getelementptr inbounds i32, i32* %78, i64 %79
  %81 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %71, i32 0, i32 2
  store i32* %80, i32** %81, align 8
  store i32 -812735258, i32* %14
  br label %82

; <label>:82:                                     ; preds = %68, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.17"* noalias sret, %"class.std::_Deque_base"*) #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.439
  %6 = load i32, i32* @y.440
  %7 = sub i32 %5, -2055537079
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -2055537079
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -39062201, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -39062201, label %19
    i32 -1359236466, label %27
    i32 -1354945615, label %57
    i32 -1718079950, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1359236466, i32 -1718079950
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %28, align 8
  %29 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %28, align 8
  %30 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %29) #11
  call void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.17"* %0, %"class.std::allocator.0"* dereferenceable(1) %30) #11
  %31 = load i32, i32* @x.439
  %32 = load i32, i32* @y.440
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1354945615, i32 -1718079950
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  ret void

; <label>:58:                                     ; preds = %16
  %59 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %59, align 8
  %60 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %59, align 8
  %61 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %60) #11
  call void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.17"* %0, %"class.std::allocator.0"* dereferenceable(1) %61) #11
  store i32 -1359236466, i32* %15
  br label %62

; <label>:62:                                     ; preds = %58, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m(%"class.std::allocator.17"* dereferenceable(1), i64) #2 comdat align 2 {
  %3 = alloca %"class.std::allocator.17"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %3, align 8
  %6 = bitcast %"class.std::allocator.17"* %5 to %"class.__gnu_cxx::new_allocator.18"*
  %7 = load i64, i64* %4, align 8
  %8 = call i32** @_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.18"* %6, i64 %7, i8* null)
  ret i32** %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPiED2Ev(%"class.std::allocator.17"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.17"*, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %2, align 8
  %3 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %2, align 8
  %4 = bitcast %"class.std::allocator.17"* %3 to %"class.__gnu_cxx::new_allocator.18"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.18"* %4) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.0"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.445
  %6 = load i32, i32* @y.446
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1812392239, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1812392239, label %18
    i32 -1015566220, label %38
    i32 -1956104940, label %58
    i32 1625270779, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1015566220, i32 1625270779
  store i32 %37, i32* %14
  br label %65

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %39, align 8
  %40 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %39, align 8
  %41 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %40, i32 0, i32 0
  %42 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %41 to %"class.std::allocator.0"*
  store %"class.std::allocator.0"* %42, %"class.std::allocator.0"** %2
  %43 = load i32, i32* @x.445
  %44 = load i32, i32* @y.446
  %45 = add i32 %43, 382748529
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 382748529
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -1956104940, i32 1625270779
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile %"class.std::allocator.0"*, %"class.std::allocator.0"** %2
  ret %"class.std::allocator.0"* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %61, align 8
  %62 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %61, align 8
  %63 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %63 to %"class.std::allocator.0"*
  store i32 -1015566220, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.17"*, %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::allocator.17"*, align 8
  %4 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %3, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %4, align 8
  %5 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %3, align 8
  %6 = bitcast %"class.std::allocator.17"* %5 to %"class.__gnu_cxx::new_allocator.18"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiEC2Ev(%"class.__gnu_cxx::new_allocator.18"* %6) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiEC2Ev(%"class.__gnu_cxx::new_allocator.18"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.18"*, i64, i8*) #2 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.451
  %9 = load i32, i32* @y.452
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -1328482313, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %84
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1328482313, label %21
    i32 602341783, label %29
    i32 -656175015, label %66
    i32 2034109231, label %69
    i32 -1121560916, label %70
    i32 328526766, label %76
  ]

; <label>:20:                                     ; preds = %18
  br label %84

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 602341783, i32 328526766
  store i32 %28, i32* %17
  br label %84

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  %31 = alloca i64, align 8
  store i64* %31, i64** %5
  %32 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %30, align 8
  %33 = load volatile i64*, i64** %5
  store i64 %1, i64* %33, align 8
  store i8* %2, i8** %32, align 8
  %34 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %30, align 8
  %35 = load volatile i64*, i64** %5
  %36 = load i64, i64* %35, align 8
  %37 = call i64 @_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.18"* %34) #11
  %38 = icmp ugt i64 %36, %37
  store i1 %38, i1* %4
  %39 = load i32, i32* @x.451
  %40 = load i32, i32* @y.452
  %41 = sub i32 %39, 1833518342
  %42 = sub i32 %41, 1
  %43 = add i32 %42, 1833518342
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 -656175015, i32 328526766
  store i32 %65, i32* %17
  br label %84

; <label>:66:                                     ; preds = %18
  %67 = load volatile i1, i1* %4
  %68 = select i1 %67, i32 2034109231, i32 -1121560916
  store i32 %68, i32* %17
  br label %84

; <label>:69:                                     ; preds = %18
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:70:                                     ; preds = %18
  %71 = load volatile i64*, i64** %5
  %72 = load i64, i64* %71, align 8
  %73 = mul i64 %72, 8
  %74 = call i8* @_Znwm(i64 %73)
  %75 = bitcast i8* %74 to i32**
  ret i32** %75

; <label>:76:                                     ; preds = %18
  %77 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  %78 = alloca i64, align 8
  %79 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %77, align 8
  store i64 %1, i64* %78, align 8
  store i8* %2, i8** %79, align 8
  %80 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %77, align 8
  %81 = load i64, i64* %78, align 8
  %82 = call i64 @_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.18"* %80) #11
  %83 = icmp ugt i64 %81, %82
  store i32 602341783, i32* %17
  br label %84

; <label>:84:                                     ; preds = %76, %66, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.18"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.18"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"*) #2 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.457
  %6 = load i32, i32* @y.458
  %7 = add i32 %5, 983576402
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 983576402
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1462933257, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1462933257, label %19
    i32 998553034, label %39
    i32 1253104456, label %61
    i32 -1280672982, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 998553034, i32 -1280672982
  store i32 %38, i32* %15
  br label %70

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %40, align 8
  %41 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %40, align 8
  %42 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %42 to %"class.std::allocator.0"*
  %44 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %45 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.0"* dereferenceable(1) %43, i64 %44)
  store i32* %45, i32** %2
  %46 = load i32, i32* @x.457
  %47 = load i32, i32* @y.458
  %48 = sub i32 %46, 194408774
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 194408774
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 1253104456, i32 -1280672982
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  %62 = load volatile i32*, i32** %2
  ret i32* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %64, align 8
  %65 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %64, align 8
  %66 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %65, i32 0, i32 0
  %67 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %66 to %"class.std::allocator.0"*
  %68 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %69 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.0"* dereferenceable(1) %67, i64 %68)
  store i32 998553034, i32* %15
  br label %70

; <label>:70:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"*, i32**, i32**) #1 comdat align 2 {
  %4 = alloca %"class.std::_Deque_base"*
  %5 = alloca i32***
  %6 = alloca i32***
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.459
  %10 = load i32, i32* @y.460
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 -211021568, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %139
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -211021568, label %22
    i32 -623452601, label %42
    i32 -1380457281, label %78
    i32 567911540, label %79
    i32 -28741161, label %86
    i32 1563718858, label %101
    i32 792176655, label %120
    i32 996890421, label %121
    i32 -1819916610, label %126
    i32 -837629119, label %127
    i32 1729637018, label %134
  ]

; <label>:21:                                     ; preds = %19
  br label %139

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %8
  %24 = load volatile i1, i1* %7
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -623452601, i32 -837629119
  store i32 %41, i32* %18
  br label %139

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.std::_Deque_base"*, align 8
  %44 = alloca i32**, align 8
  %45 = alloca i32**, align 8
  store i32*** %45, i32**** %6
  %46 = alloca i32**, align 8
  store i32*** %46, i32**** %5
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %43, align 8
  store i32** %1, i32*** %44, align 8
  %47 = load volatile i32***, i32**** %6
  store i32** %2, i32*** %47, align 8
  %48 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %43, align 8
  store %"class.std::_Deque_base"* %48, %"class.std::_Deque_base"** %4
  %49 = load i32**, i32*** %44, align 8
  %50 = load volatile i32***, i32**** %5
  store i32** %49, i32*** %50, align 8
  %51 = load i32, i32* @x.459
  %52 = load i32, i32* @y.460
  %53 = sub i32 %51, -1539612925
  %54 = sub i32 %53, 1
  %55 = add i32 %54, -1539612925
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 -1380457281, i32 -837629119
  store i32 %77, i32* %18
  br label %139

; <label>:78:                                     ; preds = %19
  store i32 567911540, i32* %18
  br label %139

; <label>:79:                                     ; preds = %19
  %80 = load volatile i32***, i32**** %5
  %81 = load i32**, i32*** %80, align 8
  %82 = load volatile i32***, i32**** %6
  %83 = load i32**, i32*** %82, align 8
  %84 = icmp ult i32** %81, %83
  %85 = select i1 %84, i32 -28741161, i32 -1819916610
  store i32 %85, i32* %18
  br label %139

; <label>:86:                                     ; preds = %19
  %87 = load i32, i32* @x.459
  %88 = load i32, i32* @y.460
  %89 = sub i32 0, 1
  %90 = add i32 %87, %89
  %91 = sub i32 %87, 1
  %92 = mul i32 %87, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %88, 10
  %96 = and i1 %94, %95
  %97 = xor i1 %94, %95
  %98 = or i1 %96, %97
  %99 = or i1 %94, %95
  %100 = select i1 %98, i32 1563718858, i32 1729637018
  store i32 %100, i32* %18
  br label %139

; <label>:101:                                    ; preds = %19
  %102 = load volatile i32***, i32**** %5
  %103 = load i32**, i32*** %102, align 8
  %104 = load i32*, i32** %103, align 8
  %105 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %105, i32* %104) #11
  %106 = load i32, i32* @x.459
  %107 = load i32, i32* @y.460
  %108 = sub i32 0, 1
  %109 = add i32 %106, %108
  %110 = sub i32 %106, 1
  %111 = mul i32 %106, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %107, 10
  %115 = and i1 %113, %114
  %116 = xor i1 %113, %114
  %117 = or i1 %115, %116
  %118 = or i1 %113, %114
  %119 = select i1 %117, i32 792176655, i32 1729637018
  store i32 %119, i32* %18
  br label %139

; <label>:120:                                    ; preds = %19
  store i32 996890421, i32* %18
  br label %139

; <label>:121:                                    ; preds = %19
  %122 = load volatile i32***, i32**** %5
  %123 = load i32**, i32*** %122, align 8
  %124 = getelementptr inbounds i32*, i32** %123, i32 1
  %125 = load volatile i32***, i32**** %5
  store i32** %124, i32*** %125, align 8
  store i32 567911540, i32* %18
  br label %139

; <label>:126:                                    ; preds = %19
  ret void

; <label>:127:                                    ; preds = %19
  %128 = alloca %"class.std::_Deque_base"*, align 8
  %129 = alloca i32**, align 8
  %130 = alloca i32**, align 8
  %131 = alloca i32**, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %128, align 8
  store i32** %1, i32*** %129, align 8
  store i32** %2, i32*** %130, align 8
  %132 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %128, align 8
  %133 = load i32**, i32*** %129, align 8
  store i32** %133, i32*** %131, align 8
  store i32 -623452601, i32* %18
  br label %139

; <label>:134:                                    ; preds = %19
  %135 = load volatile i32***, i32**** %5
  %136 = load i32**, i32*** %135, align 8
  %137 = load i32*, i32** %136, align 8
  %138 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %138, i32* %137) #11
  store i32 1563718858, i32* %18
  br label %139

; <label>:139:                                    ; preds = %134, %127, %121, %120, %101, %86, %79, %78, %42, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"*, i32*) #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.461
  %4 = load i32, i32* @y.462
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %55

; <label>:16:                                     ; preds = %2, %55
  %17 = alloca %"class.std::_Deque_base"*, align 8
  %18 = alloca i32*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %17, align 8
  store i32* %1, i32** %18, align 8
  %19 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %17, align 8
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %20 to %"class.std::allocator.0"*
  %22 = load i32*, i32** %18, align 8
  %23 = load i32, i32* @x.461
  %24 = load i32, i32* @y.462
  %25 = sub i32 0, 1
  %26 = add i32 %23, %25
  %27 = sub i32 %23, 1
  %28 = mul i32 %23, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %24, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 true, true
  %35 = and i1 %32, true
  %36 = and i1 %30, %34
  %37 = and i1 %33, true
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 true, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  br i1 %46, label %48, label %55

; <label>:48:                                     ; preds = %16
  %49 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %50 unwind label %52

; <label>:50:                                     ; preds = %48
  invoke void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.0"* dereferenceable(1) %21, i32* %22, i64 %49)
          to label %51 unwind label %52

; <label>:51:                                     ; preds = %50
  ret void

; <label>:52:                                     ; preds = %50, %48
  %53 = landingpad { i8*, i32 }
          catch i8* null
  %54 = extractvalue { i8*, i32 } %53, 0
  call void @__clang_call_terminate(i8* %54) #9
  unreachable

; <label>:55:                                     ; preds = %16, %2
  %56 = alloca %"class.std::_Deque_base"*, align 8
  %57 = alloca i32*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %56, align 8
  store i32* %1, i32** %57, align 8
  %58 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %56, align 8
  %59 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %58, i32 0, i32 0
  %60 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %59 to %"class.std::allocator.0"*
  %61 = load i32*, i32** %57, align 8
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m(%"class.std::allocator.17"* dereferenceable(1), i32**, i64) #2 comdat align 2 {
  %4 = alloca %"class.std::allocator.17"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %4, align 8
  %8 = bitcast %"class.std::allocator.17"* %7 to %"class.__gnu_cxx::new_allocator.18"*
  %9 = load i32**, i32*** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.18"* %8, i32** %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.18"*, i32**, i64) #1 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.465
  %7 = load i32, i32* @y.466
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -30855151, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -30855151, label %19
    i32 -1437137762, label %39
    i32 167303914, label %73
    i32 -1813368910, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1437137762, i32 -1813368910
  store i32 %38, i32* %15
  br label %81

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  %41 = alloca i32**, align 8
  %42 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %40, align 8
  store i32** %1, i32*** %41, align 8
  store i64 %2, i64* %42, align 8
  %43 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %40, align 8
  %44 = load i32**, i32*** %41, align 8
  %45 = bitcast i32** %44 to i8*
  call void @_ZdlPv(i8* %45) #11
  %46 = load i32, i32* @x.465
  %47 = load i32, i32* @y.466
  %48 = sub i32 %46, -682146245
  %49 = sub i32 %48, 1
  %50 = add i32 %49, -682146245
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 167303914, i32 -1813368910
  store i32 %72, i32* %15
  br label %81

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  %76 = alloca i32**, align 8
  %77 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %75, align 8
  store i32** %1, i32*** %76, align 8
  store i64 %2, i64* %77, align 8
  %78 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %75, align 8
  %79 = load i32**, i32*** %76, align 8
  %80 = bitcast i32** %79 to i8*
  call void @_ZdlPv(i8* %80) #11
  store i32 -1437137762, i32* %15
  br label %81

; <label>:81:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %2 unwind label %3

; <label>:2:                                      ; preds = %0
  ret i64 %1

; <label>:3:                                      ; preds = %0
  %4 = landingpad { i8*, i32 }
          catch i8* null
  %5 = extractvalue { i8*, i32 } %4, 0
  call void @__clang_call_terminate(i8* %5) #9
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_(%"class.std::deque"*, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*, %"class.std::allocator.0"* dereferenceable(1)) #1 comdat align 2 {
  %5 = alloca %"class.std::deque"*, align 8
  %6 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %5, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %6, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %5, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*) #1 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %3, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %5 = bitcast %"class.std::deque"* %4 to %"class.std::_Deque_base"*
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*) #1 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %3, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %5 = bitcast %"class.std::deque"* %4 to %"class.std::_Deque_base"*
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.0"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.0"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.475
  %6 = load i32, i32* @y.476
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1112737898, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %77
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1112737898, label %18
    i32 -290057147, label %38
    i32 1647453900, label %70
    i32 1233764865, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %77

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -290057147, i32 1233764865
  store i32 %37, i32* %14
  br label %77

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %39, align 8
  %40 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %39, align 8
  %41 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %40, i32 0, i32 0
  %42 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %41 to %"class.std::allocator.0"*
  store %"class.std::allocator.0"* %42, %"class.std::allocator.0"** %2
  %43 = load i32, i32* @x.475
  %44 = load i32, i32* @y.476
  %45 = add i32 %43, 1249708727
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 1249708727
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 1647453900, i32 1233764865
  store i32 %69, i32* %14
  br label %77

; <label>:70:                                     ; preds = %15
  %71 = load volatile %"class.std::allocator.0"*, %"class.std::allocator.0"** %2
  ret %"class.std::allocator.0"* %71

; <label>:72:                                     ; preds = %15
  %73 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %73, align 8
  %74 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %73, align 8
  %75 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %74, i32 0, i32 0
  %76 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %75 to %"class.std::allocator.0"*
  store i32 -290057147, i32* %14
  br label %77

; <label>:77:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca i1
  %3 = alloca %"class.std::_Deque_base"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.477
  %7 = load i32, i32* @y.478
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 534125617, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %144
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 534125617, label %19
    i32 1979525862, label %27
    i32 -1865018030, label %62
    i32 -1166643720, label %65
    i32 -360762720, label %87
    i32 -940369922, label %103
    i32 1034469338, label %133
    i32 574940542, label %134
    i32 982049069, label %141
  ]

; <label>:18:                                     ; preds = %16
  br label %144

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1979525862, i32 574940542
  store i32 %26, i32* %15
  br label %144

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %28, align 8
  %29 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %28, align 8
  store %"class.std::_Deque_base"* %29, %"class.std::_Deque_base"** %3
  %30 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %31 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %31, i32 0, i32 0
  %33 = load i32**, i32*** %32, align 8
  %34 = icmp ne i32** %33, null
  store i1 %34, i1* %2
  %35 = load i32, i32* @x.477
  %36 = load i32, i32* @y.478
  %37 = sub i32 %35, -806682168
  %38 = sub i32 %37, 1
  %39 = add i32 %38, -806682168
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 -1865018030, i32 574940542
  store i32 %61, i32* %15
  br label %144

; <label>:62:                                     ; preds = %16
  %63 = load volatile i1, i1* %2
  %64 = select i1 %63, i32 -1166643720, i32 -360762720
  store i32 %64, i32* %15
  br label %144

; <label>:65:                                     ; preds = %16
  %66 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %67 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %66, i32 0, i32 0
  %68 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %67, i32 0, i32 2
  %69 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %68, i32 0, i32 3
  %70 = load i32**, i32*** %69, align 8
  %71 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %72 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %72, i32 0, i32 3
  %74 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %73, i32 0, i32 3
  %75 = load i32**, i32*** %74, align 8
  %76 = getelementptr inbounds i32*, i32** %75, i64 1
  %77 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %77, i32** %70, i32** %76) #11
  %78 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %79 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %78, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %79, i32 0, i32 0
  %81 = load i32**, i32*** %80, align 8
  %82 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %83 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %82, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %83, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %86, i32** %81, i64 %85) #11
  store i32 -360762720, i32* %15
  br label %144

; <label>:87:                                     ; preds = %16
  %88 = load i32, i32* @x.477
  %89 = load i32, i32* @y.478
  %90 = add i32 %88, -741787982
  %91 = sub i32 %90, 1
  %92 = sub i32 %91, -741787982
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = and i1 %96, %97
  %99 = xor i1 %96, %97
  %100 = or i1 %98, %99
  %101 = or i1 %96, %97
  %102 = select i1 %100, i32 -940369922, i32 982049069
  store i32 %102, i32* %15
  br label %144

; <label>:103:                                    ; preds = %16
  %104 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %105 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %104, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %105) #11
  %106 = load i32, i32* @x.477
  %107 = load i32, i32* @y.478
  %108 = sub i32 %106, 1611571184
  %109 = sub i32 %108, 1
  %110 = add i32 %109, 1611571184
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = xor i1 %114, true
  %117 = xor i1 %115, true
  %118 = xor i1 true, true
  %119 = and i1 %116, true
  %120 = and i1 %114, %118
  %121 = and i1 %117, true
  %122 = and i1 %115, %118
  %123 = or i1 %119, %120
  %124 = or i1 %121, %122
  %125 = xor i1 %123, %124
  %126 = or i1 %116, %117
  %127 = xor i1 %126, true
  %128 = or i1 true, %118
  %129 = and i1 %127, %128
  %130 = or i1 %125, %129
  %131 = or i1 %114, %115
  %132 = select i1 %130, i32 1034469338, i32 982049069
  store i32 %132, i32* %15
  br label %144

; <label>:133:                                    ; preds = %16
  ret void

; <label>:134:                                    ; preds = %16
  %135 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %135, align 8
  %136 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %135, align 8
  %137 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %136, i32 0, i32 0
  %138 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %137, i32 0, i32 0
  %139 = load i32**, i32*** %138, align 8
  %140 = icmp ne i32** %139, null
  store i32 1979525862, i32* %15
  br label %144

; <label>:141:                                    ; preds = %16
  %142 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %143 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %142, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %143) #11
  store i32 -940369922, i32* %15
  br label %144

; <label>:144:                                    ; preds = %141, %134, %103, %87, %65, %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"* dereferenceable(32)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  store i32* %9, i32** %6, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  %11 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %11, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  store i32* %13, i32** %10, align 8
  %14 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 2
  %15 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %16 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %15, i32 0, i32 2
  %17 = load i32*, i32** %16, align 8
  store i32* %17, i32** %14, align 8
  %18 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 3
  %19 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %20 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %19, i32 0, i32 3
  %21 = load i32**, i32*** %20, align 8
  store i32** %21, i32*** %18, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80)) #1 comdat {
  %2 = alloca %"class.std::deque"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.481
  %6 = load i32, i32* @y.482
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1642621849, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %49
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1642621849, label %18
    i32 2003474071, label %26
    i32 1376553124, label %44
    i32 1315226618, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %49

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 2003474071, i32 1315226618
  store i32 %25, i32* %14
  br label %49

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %27, align 8
  %28 = load %"class.std::deque"*, %"class.std::deque"** %27, align 8
  store %"class.std::deque"* %28, %"class.std::deque"** %2
  %29 = load i32, i32* @x.481
  %30 = load i32, i32* @y.482
  %31 = add i32 %29, 78058403
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, 78058403
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 1376553124, i32 1315226618
  store i32 %43, i32* %14
  br label %49

; <label>:44:                                     ; preds = %15
  %45 = load volatile %"class.std::deque"*, %"class.std::deque"** %2
  ret %"class.std::deque"* %45

; <label>:46:                                     ; preds = %15
  %47 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %47, align 8
  %48 = load %"class.std::deque"*, %"class.std::deque"** %47, align 8
  store i32 2003474071, i32* %14
  br label %49

; <label>:49:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEEC2EOS1_(%"class.std::deque"*, %"class.std::deque"* dereferenceable(80)) unnamed_addr #2 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.483
  %6 = load i32, i32* @y.484
  %7 = add i32 %5, -2015726962
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -2015726962
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1435897772, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1435897772, label %19
    i32 -1073603176, label %39
    i32 -901226653, label %61
    i32 1544391523, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1073603176, i32 1544391523
  store i32 %38, i32* %15
  br label %70

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::deque"*, align 8
  %41 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %40, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %41, align 8
  %42 = load %"class.std::deque"*, %"class.std::deque"** %40, align 8
  %43 = bitcast %"class.std::deque"* %42 to %"class.std::_Deque_base"*
  %44 = load %"class.std::deque"*, %"class.std::deque"** %41, align 8
  %45 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80) %44) #11
  %46 = bitcast %"class.std::deque"* %45 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_(%"class.std::_Deque_base"* %43, %"class.std::_Deque_base"* dereferenceable(80) %46)
  %47 = load i32, i32* @x.483
  %48 = load i32, i32* @y.484
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -901226653, i32 1544391523
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::deque"*, align 8
  %64 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %63, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %64, align 8
  %65 = load %"class.std::deque"*, %"class.std::deque"** %63, align 8
  %66 = bitcast %"class.std::deque"* %65 to %"class.std::_Deque_base"*
  %67 = load %"class.std::deque"*, %"class.std::deque"** %64, align 8
  %68 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80) %67) #11
  %69 = bitcast %"class.std::deque"* %68 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_(%"class.std::_Deque_base"* %66, %"class.std::_Deque_base"* dereferenceable(80) %69)
  store i32 -1073603176, i32* %15
  br label %70

; <label>:70:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_(%"class.std::_Deque_base"*, %"class.std::_Deque_base"* dereferenceable(80)) unnamed_addr #2 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.485
  %6 = load i32, i32* @y.486
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 68334422, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 68334422, label %18
    i32 -431689349, label %26
    i32 723658836, label %62
    i32 977309262, label %63
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -431689349, i32 977309262
  store i32 %25, i32* %14
  br label %72

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::_Deque_base"*, align 8
  %28 = alloca %"class.std::_Deque_base"*, align 8
  %29 = alloca %"struct.std::integral_constant", align 1
  %30 = alloca %"struct.__gnu_cxx::__allocator_always_compares_equal", align 1
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %27, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %28, align 8
  %31 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %27, align 8
  %32 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %28, align 8
  %33 = call dereferenceable(80) %"class.std::_Deque_base"* @_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::_Deque_base"* dereferenceable(80) %32) #11
  %34 = bitcast %"struct.__gnu_cxx::__allocator_always_compares_equal"* %30 to %"struct.std::integral_constant"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE(%"class.std::_Deque_base"* %31, %"class.std::_Deque_base"* dereferenceable(80) %33)
  %35 = load i32, i32* @x.485
  %36 = load i32, i32* @y.486
  %37 = sub i32 %35, 58810507
  %38 = sub i32 %37, 1
  %39 = add i32 %38, 58810507
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 723658836, i32 977309262
  store i32 %61, i32* %14
  br label %72

; <label>:62:                                     ; preds = %15
  ret void

; <label>:63:                                     ; preds = %15
  %64 = alloca %"class.std::_Deque_base"*, align 8
  %65 = alloca %"class.std::_Deque_base"*, align 8
  %66 = alloca %"struct.std::integral_constant", align 1
  %67 = alloca %"struct.__gnu_cxx::__allocator_always_compares_equal", align 1
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %64, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %65, align 8
  %68 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %64, align 8
  %69 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %65, align 8
  %70 = call dereferenceable(80) %"class.std::_Deque_base"* @_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::_Deque_base"* dereferenceable(80) %69) #11
  %71 = bitcast %"struct.__gnu_cxx::__allocator_always_compares_equal"* %67 to %"struct.std::integral_constant"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE(%"class.std::_Deque_base"* %68, %"class.std::_Deque_base"* dereferenceable(80) %70)
  store i32 -431689349, i32* %14
  br label %72

; <label>:72:                                     ; preds = %63, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::_Deque_base"* @_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::_Deque_base"* dereferenceable(80)) #1 comdat {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  ret %"class.std::_Deque_base"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE(%"class.std::_Deque_base"*, %"class.std::_Deque_base"* dereferenceable(80)) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %"class.std::_Deque_base"*, align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %5, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %9 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %8, i32 0, i32 0
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %11 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %10) #11
  %12 = call dereferenceable(1) %"class.std::allocator.0"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.0"* dereferenceable(1) %11) #11
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %9, %"class.std::allocator.0"* dereferenceable(1) %12) #11
  invoke void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"* %8, i64 0)
          to label %13 unwind label %65

; <label>:13:                                     ; preds = %2
  %14 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %15 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %15, i32 0, i32 0
  %17 = load i32**, i32*** %16, align 8
  %18 = icmp ne i32** %17, null
  br i1 %18, label %19, label %110

; <label>:19:                                     ; preds = %13
  %20 = load i32, i32* @x.489
  %21 = load i32, i32* @y.490
  %22 = add i32 %20, 5437086
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, 5437086
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 false, true
  %33 = and i1 %30, false
  %34 = and i1 %28, %32
  %35 = and i1 %31, false
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 false, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  br i1 %44, label %46, label %116

; <label>:46:                                     ; preds = %19, %116
  %47 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %8, i32 0, i32 0
  %48 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %49 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %48, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %47, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* dereferenceable(80) %49) #11
  %50 = load i32, i32* @x.489
  %51 = load i32, i32* @y.490
  %52 = sub i32 %50, 1219136643
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 1219136643
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  br i1 %62, label %64, label %116

; <label>:64:                                     ; preds = %46
  br label %110

; <label>:65:                                     ; preds = %2
  %66 = load i32, i32* @x.489
  %67 = load i32, i32* @y.490
  %68 = sub i32 0, 1
  %69 = add i32 %66, %68
  %70 = sub i32 %66, 1
  %71 = mul i32 %66, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %67, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  br i1 %77, label %79, label %120

; <label>:79:                                     ; preds = %65, %120
  %80 = landingpad { i8*, i32 }
          cleanup
  %81 = extractvalue { i8*, i32 } %80, 0
  store i8* %81, i8** %6, align 8
  %82 = extractvalue { i8*, i32 } %80, 1
  store i32 %82, i32* %7, align 4
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %9) #11
  %83 = load i32, i32* @x.489
  %84 = load i32, i32* @y.490
  %85 = add i32 %83, 595347325
  %86 = sub i32 %85, 1
  %87 = sub i32 %86, 595347325
  %88 = sub i32 %83, 1
  %89 = mul i32 %83, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %84, 10
  %93 = xor i1 %91, true
  %94 = xor i1 %92, true
  %95 = xor i1 false, true
  %96 = and i1 %93, false
  %97 = and i1 %91, %95
  %98 = and i1 %94, false
  %99 = and i1 %92, %95
  %100 = or i1 %96, %97
  %101 = or i1 %98, %99
  %102 = xor i1 %100, %101
  %103 = or i1 %93, %94
  %104 = xor i1 %103, true
  %105 = or i1 false, %95
  %106 = and i1 %104, %105
  %107 = or i1 %102, %106
  %108 = or i1 %91, %92
  br i1 %107, label %109, label %120

; <label>:109:                                    ; preds = %79
  br label %111

; <label>:110:                                    ; preds = %64, %13
  ret void

; <label>:111:                                    ; preds = %109
  %112 = load i8*, i8** %6, align 8
  %113 = load i32, i32* %7, align 4
  %114 = insertvalue { i8*, i32 } undef, i8* %112, 0
  %115 = insertvalue { i8*, i32 } %114, i32 %113, 1
  resume { i8*, i32 } %115

; <label>:116:                                    ; preds = %46, %19
  %117 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %8, i32 0, i32 0
  %118 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %119 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %118, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %117, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* dereferenceable(80) %119) #11
  br label %46

; <label>:120:                                    ; preds = %79, %65
  %121 = landingpad { i8*, i32 }
          cleanup
  %122 = extractvalue { i8*, i32 } %121, 0
  store i8* %122, i8** %6, align 8
  %123 = extractvalue { i8*, i32 } %121, 1
  store i32 %123, i32* %7, align 4
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %9) #11
  br label %79
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.0"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.0"* dereferenceable(1)) #1 comdat {
  %2 = alloca %"class.std::allocator.0"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.491
  %6 = load i32, i32* @y.492
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1757498603, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %48
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1757498603, label %18
    i32 1703827859, label %26
    i32 161580942, label %43
    i32 -526543843, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %48

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1703827859, i32 -526543843
  store i32 %25, i32* %14
  br label %48

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %27, align 8
  %28 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %27, align 8
  store %"class.std::allocator.0"* %28, %"class.std::allocator.0"** %2
  %29 = load i32, i32* @x.491
  %30 = load i32, i32* @y.492
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 161580942, i32 -526543843
  store i32 %42, i32* %14
  br label %48

; <label>:43:                                     ; preds = %15
  %44 = load volatile %"class.std::allocator.0"*, %"class.std::allocator.0"** %2
  ret %"class.std::allocator.0"* %44

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %46, align 8
  %47 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %46, align 8
  store i32 1703827859, i32* %14
  br label %48

; <label>:48:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.493
  %6 = load i32, i32* @y.494
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 685484710, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %75
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 685484710, label %18
    i32 529894488, label %26
    i32 -56431650, label %63
    i32 1410085321, label %64
  ]

; <label>:17:                                     ; preds = %15
  br label %75

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 529894488, i32 1410085321
  store i32 %25, i32* %14
  br label %75

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %28 = alloca %"class.std::allocator.0"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %27, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %28, align 8
  %29 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %27, align 8
  %30 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %29 to %"class.std::allocator.0"*
  %31 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %28, align 8
  %32 = call dereferenceable(1) %"class.std::allocator.0"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.0"* dereferenceable(1) %31) #11
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.0"* %30, %"class.std::allocator.0"* dereferenceable(1) %32) #11
  %33 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %29, i32 0, i32 0
  store i32** null, i32*** %33, align 8
  %34 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %29, i32 0, i32 1
  store i64 0, i64* %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %29, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %35) #11
  %36 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %29, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %36) #11
  %37 = load i32, i32* @x.493
  %38 = load i32, i32* @y.494
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 -56431650, i32 1410085321
  store i32 %62, i32* %14
  br label %75

; <label>:63:                                     ; preds = %15
  ret void

; <label>:64:                                     ; preds = %15
  %65 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %66 = alloca %"class.std::allocator.0"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %65, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %66, align 8
  %67 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %65, align 8
  %68 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %67 to %"class.std::allocator.0"*
  %69 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %66, align 8
  %70 = call dereferenceable(1) %"class.std::allocator.0"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.0"* dereferenceable(1) %69) #11
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.0"* %68, %"class.std::allocator.0"* dereferenceable(1) %70) #11
  %71 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %67, i32 0, i32 0
  store i32** null, i32*** %71, align 8
  %72 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %67, i32 0, i32 1
  store i64 0, i64* %72, align 8
  %73 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %67, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %73) #11
  %74 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %67, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %74) #11
  store i32 529894488, i32* %14
  br label %75

; <label>:75:                                     ; preds = %64, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* dereferenceable(80)) #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.495
  %6 = load i32, i32* @y.496
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 864232148, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %85
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 864232148, label %18
    i32 -1996205615, label %38
    i32 1428355290, label %68
    i32 1836588269, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %85

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1996205615, i32 1836588269
  store i32 %37, i32* %14
  br label %85

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %40 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %39, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %1, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %40, align 8
  %41 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %39, align 8
  %42 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %41, i32 0, i32 2
  %43 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %40, align 8
  %44 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %43, i32 0, i32 2
  call void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32) %42, %"struct.std::_Deque_iterator"* dereferenceable(32) %44) #11
  %45 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %41, i32 0, i32 3
  %46 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %40, align 8
  %47 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %46, i32 0, i32 3
  call void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32) %45, %"struct.std::_Deque_iterator"* dereferenceable(32) %47) #11
  %48 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %41, i32 0, i32 0
  %49 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %40, align 8
  %50 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %49, i32 0, i32 0
  call void @_ZSt4swapIPPiEvRT_S3_(i32*** dereferenceable(8) %48, i32*** dereferenceable(8) %50) #11
  %51 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %41, i32 0, i32 1
  %52 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %40, align 8
  %53 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %52, i32 0, i32 1
  call void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8) %51, i64* dereferenceable(8) %53) #11
  %54 = load i32, i32* @x.495
  %55 = load i32, i32* @y.496
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 1428355290, i32 1836588269
  store i32 %67, i32* %14
  br label %85

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %71 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %70, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %1, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %71, align 8
  %72 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %70, align 8
  %73 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %72, i32 0, i32 2
  %74 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %71, align 8
  %75 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %74, i32 0, i32 2
  call void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32) %73, %"struct.std::_Deque_iterator"* dereferenceable(32) %75) #11
  %76 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %72, i32 0, i32 3
  %77 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %71, align 8
  %78 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %77, i32 0, i32 3
  call void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32) %76, %"struct.std::_Deque_iterator"* dereferenceable(32) %78) #11
  %79 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %72, i32 0, i32 0
  %80 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %71, align 8
  %81 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %80, i32 0, i32 0
  call void @_ZSt4swapIPPiEvRT_S3_(i32*** dereferenceable(8) %79, i32*** dereferenceable(8) %81) #11
  %82 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %72, i32 0, i32 1
  %83 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %71, align 8
  %84 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %83, i32 0, i32 1
  call void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8) %82, i64* dereferenceable(8) %84) #11
  store i32 -1996205615, i32* %14
  br label %85

; <label>:85:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #1 comdat {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  %5 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %6 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %7 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %5, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #11
  %8 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %9 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %8) #11
  %10 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %11 = bitcast %"struct.std::_Deque_iterator"* %10 to i8*
  %12 = bitcast %"struct.std::_Deque_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 32, i32 8, i1 false)
  %13 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %5) #11
  %14 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %15 = bitcast %"struct.std::_Deque_iterator"* %14 to i8*
  %16 = bitcast %"struct.std::_Deque_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 32, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPPiEvRT_S3_(i32*** dereferenceable(8), i32*** dereferenceable(8)) #1 comdat {
  %3 = alloca i32***, align 8
  %4 = alloca i32***, align 8
  %5 = alloca i32**, align 8
  store i32*** %0, i32**** %3, align 8
  store i32*** %1, i32**** %4, align 8
  %6 = load i32***, i32**** %3, align 8
  %7 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %6) #11
  %8 = load i32**, i32*** %7, align 8
  store i32** %8, i32*** %5, align 8
  %9 = load i32***, i32**** %4, align 8
  %10 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %9) #11
  %11 = load i32**, i32*** %10, align 8
  %12 = load i32***, i32**** %3, align 8
  store i32** %11, i32*** %12, align 8
  %13 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %5) #11
  %14 = load i32**, i32*** %13, align 8
  %15 = load i32***, i32**** %4, align 8
  store i32** %14, i32*** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8), i64* dereferenceable(8)) #1 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.501
  %6 = load i32, i32* @y.502
  %7 = sub i32 %5, -1774930605
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1774930605
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2029332482, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %83
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2029332482, label %19
    i32 -1110492006, label %27
    i32 -1676018516, label %68
    i32 -895862190, label %69
  ]

; <label>:18:                                     ; preds = %16
  br label %83

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1110492006, i32 -895862190
  store i32 %26, i32* %15
  br label %83

; <label>:27:                                     ; preds = %16
  %28 = alloca i64*, align 8
  %29 = alloca i64*, align 8
  %30 = alloca i64, align 8
  store i64* %0, i64** %28, align 8
  store i64* %1, i64** %29, align 8
  %31 = load i64*, i64** %28, align 8
  %32 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %31) #11
  %33 = load i64, i64* %32, align 8
  store i64 %33, i64* %30, align 8
  %34 = load i64*, i64** %29, align 8
  %35 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %34) #11
  %36 = load i64, i64* %35, align 8
  %37 = load i64*, i64** %28, align 8
  store i64 %36, i64* %37, align 8
  %38 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %30) #11
  %39 = load i64, i64* %38, align 8
  %40 = load i64*, i64** %29, align 8
  store i64 %39, i64* %40, align 8
  %41 = load i32, i32* @x.501
  %42 = load i32, i32* @y.502
  %43 = sub i32 %41, 478293190
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 478293190
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -1676018516, i32 -895862190
  store i32 %67, i32* %15
  br label %83

; <label>:68:                                     ; preds = %16
  ret void

; <label>:69:                                     ; preds = %16
  %70 = alloca i64*, align 8
  %71 = alloca i64*, align 8
  %72 = alloca i64, align 8
  store i64* %0, i64** %70, align 8
  store i64* %1, i64** %71, align 8
  %73 = load i64*, i64** %70, align 8
  %74 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %73) #11
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %72, align 8
  %76 = load i64*, i64** %71, align 8
  %77 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %76) #11
  %78 = load i64, i64* %77, align 8
  %79 = load i64*, i64** %70, align 8
  store i64 %78, i64* %79, align 8
  %80 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %72) #11
  %81 = load i64, i64* %80, align 8
  %82 = load i64*, i64** %71, align 8
  store i64 %81, i64* %82, align 8
  store i32 -1110492006, i32* %15
  br label %83

; <label>:83:                                     ; preds = %69, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32)) #1 comdat {
  %2 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2, align 8
  ret %"struct.std::_Deque_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8)) #1 comdat {
  %2 = alloca i32***, align 8
  store i32*** %0, i32**** %2, align 8
  %3 = load i32***, i32**** %2, align 8
  ret i32*** %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8)) #1 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EE14_M_fill_assignEmRKS4_(%"class.std::vector"*, i64, %"class.std::stack"* dereferenceable(80)) #2 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"class.std::vector"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.20"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.20"*
  %8 = alloca %"class.std::vector"*
  %9 = alloca %"class.std::stack"**
  %10 = alloca i64*
  %11 = alloca i1
  %12 = alloca i1
  %13 = load i32, i32* @x.509
  %14 = load i32, i32* @y.510
  %15 = add i32 %13, -83731023
  %16 = sub i32 %15, 1
  %17 = sub i32 %16, -83731023
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  store i1 %21, i1* %12
  %22 = icmp slt i32 %14, 10
  store i1 %22, i1* %11
  %23 = alloca i32
  store i32 -1487134411, i32* %23
  br label %24

; <label>:24:                                     ; preds = %3, %281
  %25 = load i32, i32* %23
  switch i32 %25, label %26 [
    i32 -1487134411, label %27
    i32 266570685, label %35
    i32 1851970275, label %77
    i32 1125742987, label %80
    i32 1276998841, label %96
    i32 -1591563741, label %103
    i32 -2025143647, label %143
    i32 -931126586, label %159
    i32 -1258165984, label %198
    i32 -143028387, label %199
    i32 1408607934, label %227
    i32 1261676263, label %255
    i32 2018840593, label %256
    i32 -2028909615, label %257
    i32 -223812175, label %268
    i32 575708145, label %280
  ]

; <label>:26:                                     ; preds = %24
  br label %281

; <label>:27:                                     ; preds = %24
  %28 = load volatile i1, i1* %12
  %29 = load volatile i1, i1* %11
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  %34 = select i1 %32, i32 266570685, i32 -2028909615
  store i32 %34, i32* %23
  br label %281

; <label>:35:                                     ; preds = %24
  %36 = alloca %"class.std::vector"*, align 8
  %37 = alloca i64, align 8
  store i64* %37, i64** %10
  %38 = alloca %"class.std::stack"*, align 8
  store %"class.std::stack"** %38, %"class.std::stack"*** %9
  %39 = alloca %"class.std::vector", align 8
  store %"class.std::vector"* %39, %"class.std::vector"** %8
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  store %"class.__gnu_cxx::__normal_iterator.20"* %40, %"class.__gnu_cxx::__normal_iterator.20"** %7
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  store %"class.__gnu_cxx::__normal_iterator.20"* %41, %"class.__gnu_cxx::__normal_iterator.20"** %6
  store %"class.std::vector"* %0, %"class.std::vector"** %36, align 8
  %42 = load volatile i64*, i64** %10
  store i64 %1, i64* %42, align 8
  %43 = load volatile %"class.std::stack"**, %"class.std::stack"*** %9
  store %"class.std::stack"* %2, %"class.std::stack"** %43, align 8
  %44 = load %"class.std::vector"*, %"class.std::vector"** %36, align 8
  store %"class.std::vector"* %44, %"class.std::vector"** %5
  %45 = load volatile i64*, i64** %10
  %46 = load i64, i64* %45, align 8
  %47 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %48 = call i64 @_ZNKSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EE8capacityEv(%"class.std::vector"* %47) #11
  %49 = icmp ugt i64 %46, %48
  store i1 %49, i1* %4
  %50 = load i32, i32* @x.509
  %51 = load i32, i32* @y.510
  %52 = add i32 %50, 768779866
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 768779866
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 1851970275, i32 -2028909615
  store i32 %76, i32* %23
  br label %281

; <label>:77:                                     ; preds = %24
  %78 = load volatile i1, i1* %4
  %79 = select i1 %78, i32 1125742987, i32 1276998841
  store i32 %79, i32* %23
  br label %281

; <label>:80:                                     ; preds = %24
  %81 = load volatile i64*, i64** %10
  %82 = load i64, i64* %81, align 8
  %83 = load volatile %"class.std::stack"**, %"class.std::stack"*** %9
  %84 = load %"class.std::stack"*, %"class.std::stack"** %83, align 8
  %85 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %86 = bitcast %"class.std::vector"* %85 to %"struct.std::_Vector_base"*
  %87 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %86) #11
  %88 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  call void @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EEC2EmRKS4_RKS5_(%"class.std::vector"* %88, i64 %82, %"class.std::stack"* dereferenceable(80) %84, %"class.std::allocator"* dereferenceable(1) %87)
  %89 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %90 = bitcast %"class.std::vector"* %89 to %"struct.std::_Vector_base"*
  %91 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %90, i32 0, i32 0
  %92 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %93 = bitcast %"class.std::vector"* %92 to %"struct.std::_Vector_base"*
  %94 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %93, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE12_Vector_impl12_M_swap_dataERS7_(%"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %91, %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* dereferenceable(24) %94) #11
  %95 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  call void @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EED2Ev(%"class.std::vector"* %95) #11
  store i32 2018840593, i32* %23
  br label %281

; <label>:96:                                     ; preds = %24
  %97 = load volatile i64*, i64** %10
  %98 = load i64, i64* %97, align 8
  %99 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %100 = call i64 @_ZNKSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EE4sizeEv(%"class.std::vector"* %99) #11
  %101 = icmp ugt i64 %98, %100
  %102 = select i1 %101, i32 -1591563741, i32 -2025143647
  store i32 %102, i32* %23
  br label %281

; <label>:103:                                    ; preds = %24
  %104 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %105 = call %"class.std::stack"* @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EE5beginEv(%"class.std::vector"* %104) #11
  %106 = load volatile %"class.__gnu_cxx::__normal_iterator.20"*, %"class.__gnu_cxx::__normal_iterator.20"** %7
  %107 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %106, i32 0, i32 0
  store %"class.std::stack"* %105, %"class.std::stack"** %107, align 8
  %108 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %109 = call %"class.std::stack"* @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EE3endEv(%"class.std::vector"* %108) #11
  %110 = load volatile %"class.__gnu_cxx::__normal_iterator.20"*, %"class.__gnu_cxx::__normal_iterator.20"** %6
  %111 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %110, i32 0, i32 0
  store %"class.std::stack"* %109, %"class.std::stack"** %111, align 8
  %112 = load volatile %"class.std::stack"**, %"class.std::stack"*** %9
  %113 = load %"class.std::stack"*, %"class.std::stack"** %112, align 8
  %114 = load volatile %"class.__gnu_cxx::__normal_iterator.20"*, %"class.__gnu_cxx::__normal_iterator.20"** %7
  %115 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %114, i32 0, i32 0
  %116 = load %"class.std::stack"*, %"class.std::stack"** %115, align 8
  %117 = load volatile %"class.__gnu_cxx::__normal_iterator.20"*, %"class.__gnu_cxx::__normal_iterator.20"** %6
  %118 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %117, i32 0, i32 0
  %119 = load %"class.std::stack"*, %"class.std::stack"** %118, align 8
  call void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPSt5stackIiSt5dequeIiSaIiEEESt6vectorIS6_SaIS6_EEEES6_EvT_SC_RKT0_(%"class.std::stack"* %116, %"class.std::stack"* %119, %"class.std::stack"* dereferenceable(80) %113)
  %120 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %121 = bitcast %"class.std::vector"* %120 to %"struct.std::_Vector_base"*
  %122 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %121, i32 0, i32 0
  %123 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %122, i32 0, i32 1
  %124 = load %"class.std::stack"*, %"class.std::stack"** %123, align 8
  %125 = load volatile i64*, i64** %10
  %126 = load i64, i64* %125, align 8
  %127 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %128 = call i64 @_ZNKSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EE4sizeEv(%"class.std::vector"* %127) #11
  %129 = sub i64 %126, 5306227758409702395
  %130 = sub i64 %129, %128
  %131 = add i64 %130, 5306227758409702395
  %132 = sub i64 %126, %128
  %133 = load volatile %"class.std::stack"**, %"class.std::stack"*** %9
  %134 = load %"class.std::stack"*, %"class.std::stack"** %133, align 8
  %135 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %136 = bitcast %"class.std::vector"* %135 to %"struct.std::_Vector_base"*
  %137 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %136) #11
  %138 = call %"class.std::stack"* @_ZSt24__uninitialized_fill_n_aIPSt5stackIiSt5dequeIiSaIiEEEmS4_S4_ET_S6_T0_RKT1_RSaIT2_E(%"class.std::stack"* %124, i64 %131, %"class.std::stack"* dereferenceable(80) %134, %"class.std::allocator"* dereferenceable(1) %137)
  %139 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %140 = bitcast %"class.std::vector"* %139 to %"struct.std::_Vector_base"*
  %141 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %140, i32 0, i32 0
  %142 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %141, i32 0, i32 1
  store %"class.std::stack"* %138, %"class.std::stack"** %142, align 8
  store i32 -143028387, i32* %23
  br label %281

; <label>:143:                                    ; preds = %24
  %144 = load i32, i32* @x.509
  %145 = load i32, i32* @y.510
  %146 = sub i32 %144, 509275047
  %147 = sub i32 %146, 1
  %148 = add i32 %147, 509275047
  %149 = sub i32 %144, 1
  %150 = mul i32 %144, %148
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %145, 10
  %154 = and i1 %152, %153
  %155 = xor i1 %152, %153
  %156 = or i1 %154, %155
  %157 = or i1 %152, %153
  %158 = select i1 %156, i32 -931126586, i32 -223812175
  store i32 %158, i32* %23
  br label %281

; <label>:159:                                    ; preds = %24
  %160 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %161 = bitcast %"class.std::vector"* %160 to %"struct.std::_Vector_base"*
  %162 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %161, i32 0, i32 0
  %163 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %162, i32 0, i32 0
  %164 = load %"class.std::stack"*, %"class.std::stack"** %163, align 8
  %165 = load volatile i64*, i64** %10
  %166 = load i64, i64* %165, align 8
  %167 = load volatile %"class.std::stack"**, %"class.std::stack"*** %9
  %168 = load %"class.std::stack"*, %"class.std::stack"** %167, align 8
  %169 = call %"class.std::stack"* @_ZSt6fill_nIPSt5stackIiSt5dequeIiSaIiEEEmS4_ET_S6_T0_RKT1_(%"class.std::stack"* %164, i64 %166, %"class.std::stack"* dereferenceable(80) %168)
  %170 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  call void @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EE15_M_erase_at_endEPS4_(%"class.std::vector"* %170, %"class.std::stack"* %169) #11
  %171 = load i32, i32* @x.509
  %172 = load i32, i32* @y.510
  %173 = add i32 %171, 643274204
  %174 = sub i32 %173, 1
  %175 = sub i32 %174, 643274204
  %176 = sub i32 %171, 1
  %177 = mul i32 %171, %175
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %172, 10
  %181 = xor i1 %179, true
  %182 = xor i1 %180, true
  %183 = xor i1 false, true
  %184 = and i1 %181, false
  %185 = and i1 %179, %183
  %186 = and i1 %182, false
  %187 = and i1 %180, %183
  %188 = or i1 %184, %185
  %189 = or i1 %186, %187
  %190 = xor i1 %188, %189
  %191 = or i1 %181, %182
  %192 = xor i1 %191, true
  %193 = or i1 false, %183
  %194 = and i1 %192, %193
  %195 = or i1 %190, %194
  %196 = or i1 %179, %180
  %197 = select i1 %195, i32 -1258165984, i32 -223812175
  store i32 %197, i32* %23
  br label %281

; <label>:198:                                    ; preds = %24
  store i32 -143028387, i32* %23
  br label %281

; <label>:199:                                    ; preds = %24
  %200 = load i32, i32* @x.509
  %201 = load i32, i32* @y.510
  %202 = sub i32 %200, -1303388152
  %203 = sub i32 %202, 1
  %204 = add i32 %203, -1303388152
  %205 = sub i32 %200, 1
  %206 = mul i32 %200, %204
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %201, 10
  %210 = xor i1 %208, true
  %211 = xor i1 %209, true
  %212 = xor i1 true, true
  %213 = and i1 %210, true
  %214 = and i1 %208, %212
  %215 = and i1 %211, true
  %216 = and i1 %209, %212
  %217 = or i1 %213, %214
  %218 = or i1 %215, %216
  %219 = xor i1 %217, %218
  %220 = or i1 %210, %211
  %221 = xor i1 %220, true
  %222 = or i1 true, %212
  %223 = and i1 %221, %222
  %224 = or i1 %219, %223
  %225 = or i1 %208, %209
  %226 = select i1 %224, i32 1408607934, i32 575708145
  store i32 %226, i32* %23
  br label %281

; <label>:227:                                    ; preds = %24
  %228 = load i32, i32* @x.509
  %229 = load i32, i32* @y.510
  %230 = add i32 %228, 1090106511
  %231 = sub i32 %230, 1
  %232 = sub i32 %231, 1090106511
  %233 = sub i32 %228, 1
  %234 = mul i32 %228, %232
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %229, 10
  %238 = xor i1 %236, true
  %239 = xor i1 %237, true
  %240 = xor i1 true, true
  %241 = and i1 %238, true
  %242 = and i1 %236, %240
  %243 = and i1 %239, true
  %244 = and i1 %237, %240
  %245 = or i1 %241, %242
  %246 = or i1 %243, %244
  %247 = xor i1 %245, %246
  %248 = or i1 %238, %239
  %249 = xor i1 %248, true
  %250 = or i1 true, %240
  %251 = and i1 %249, %250
  %252 = or i1 %247, %251
  %253 = or i1 %236, %237
  %254 = select i1 %252, i32 1261676263, i32 575708145
  store i32 %254, i32* %23
  br label %281

; <label>:255:                                    ; preds = %24
  store i32 2018840593, i32* %23
  br label %281

; <label>:256:                                    ; preds = %24
  ret void

; <label>:257:                                    ; preds = %24
  %258 = alloca %"class.std::vector"*, align 8
  %259 = alloca i64, align 8
  %260 = alloca %"class.std::stack"*, align 8
  %261 = alloca %"class.std::vector", align 8
  %262 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %263 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %258, align 8
  store i64 %1, i64* %259, align 8
  store %"class.std::stack"* %2, %"class.std::stack"** %260, align 8
  %264 = load %"class.std::vector"*, %"class.std::vector"** %258, align 8
  %265 = load i64, i64* %259, align 8
  %266 = call i64 @_ZNKSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EE8capacityEv(%"class.std::vector"* %264) #11
  %267 = icmp ugt i64 %265, %266
  store i32 266570685, i32* %23
  br label %281

; <label>:268:                                    ; preds = %24
  %269 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %270 = bitcast %"class.std::vector"* %269 to %"struct.std::_Vector_base"*
  %271 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %270, i32 0, i32 0
  %272 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %271, i32 0, i32 0
  %273 = load %"class.std::stack"*, %"class.std::stack"** %272, align 8
  %274 = load volatile i64*, i64** %10
  %275 = load i64, i64* %274, align 8
  %276 = load volatile %"class.std::stack"**, %"class.std::stack"*** %9
  %277 = load %"class.std::stack"*, %"class.std::stack"** %276, align 8
  %278 = call %"class.std::stack"* @_ZSt6fill_nIPSt5stackIiSt5dequeIiSaIiEEEmS4_ET_S6_T0_RKT1_(%"class.std::stack"* %273, i64 %275, %"class.std::stack"* dereferenceable(80) %277)
  %279 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  call void @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EE15_M_erase_at_endEPS4_(%"class.std::vector"* %279, %"class.std::stack"* %278) #11
  store i32 -931126586, i32* %23
  br label %281

; <label>:280:                                    ; preds = %24
  store i32 1408607934, i32* %23
  br label %281

; <label>:281:                                    ; preds = %280, %268, %257, %255, %227, %199, %198, %159, %143, %103, %96, %80, %77, %35, %27, %26
  br label %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EE8capacityEv(%"class.std::vector"*) #1 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %5, i32 0, i32 2
  %7 = load %"class.std::stack"*, %"class.std::stack"** %6, align 8
  %8 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::stack"*, %"class.std::stack"** %10, align 8
  %12 = ptrtoint %"class.std::stack"* %7 to i64
  %13 = ptrtoint %"class.std::stack"* %11 to i64
  %14 = add i64 %12, 8468844103930011790
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, 8468844103930011790
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 80
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EEC2EmRKS4_RKS5_(%"class.std::vector"*, i64, %"class.std::stack"* dereferenceable(80), %"class.std::allocator"* dereferenceable(1)) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.513
  %6 = load i32, i32* @y.514
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %6, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %110

; <label>:18:                                     ; preds = %4, %110
  %19 = alloca %"class.std::vector"*, align 8
  %20 = alloca i64, align 8
  %21 = alloca %"class.std::stack"*, align 8
  %22 = alloca %"class.std::allocator"*, align 8
  %23 = alloca i8*
  %24 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %19, align 8
  store i64 %1, i64* %20, align 8
  store %"class.std::stack"* %2, %"class.std::stack"** %21, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %22, align 8
  %25 = load %"class.std::vector"*, %"class.std::vector"** %19, align 8
  %26 = bitcast %"class.std::vector"* %25 to %"struct.std::_Vector_base"*
  %27 = load i64, i64* %20, align 8
  %28 = load %"class.std::allocator"*, %"class.std::allocator"** %22, align 8
  call void @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EEC2EmRKS5_(%"struct.std::_Vector_base"* %26, i64 %27, %"class.std::allocator"* dereferenceable(1) %28)
  %29 = load i64, i64* %20, align 8
  %30 = load %"class.std::stack"*, %"class.std::stack"** %21, align 8
  %31 = load i32, i32* @x.513
  %32 = load i32, i32* @y.514
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  br i1 %42, label %44, label %110

; <label>:44:                                     ; preds = %18
  invoke void @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EE18_M_fill_initializeEmRKS4_(%"class.std::vector"* %25, i64 %29, %"class.std::stack"* dereferenceable(80) %30)
          to label %45 unwind label %46

; <label>:45:                                     ; preds = %44
  ret void

; <label>:46:                                     ; preds = %44
  %47 = load i32, i32* @x.513
  %48 = load i32, i32* @y.514
  %49 = add i32 %47, -1673191474
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -1673191474
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  br i1 %71, label %73, label %123

; <label>:73:                                     ; preds = %46, %123
  %74 = landingpad { i8*, i32 }
          cleanup
  %75 = extractvalue { i8*, i32 } %74, 0
  store i8* %75, i8** %23, align 8
  %76 = extractvalue { i8*, i32 } %74, 1
  store i32 %76, i32* %24, align 4
  %77 = bitcast %"class.std::vector"* %25 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EED2Ev(%"struct.std::_Vector_base"* %77) #11
  %78 = load i32, i32* @x.513
  %79 = load i32, i32* @y.514
  %80 = add i32 %78, -1287479249
  %81 = sub i32 %80, 1
  %82 = sub i32 %81, -1287479249
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 false, true
  %91 = and i1 %88, false
  %92 = and i1 %86, %90
  %93 = and i1 %89, false
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 false, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  br i1 %102, label %104, label %123

; <label>:104:                                    ; preds = %73
  br label %105

; <label>:105:                                    ; preds = %104
  %106 = load i8*, i8** %23, align 8
  %107 = load i32, i32* %24, align 4
  %108 = insertvalue { i8*, i32 } undef, i8* %106, 0
  %109 = insertvalue { i8*, i32 } %108, i32 %107, 1
  resume { i8*, i32 } %109

; <label>:110:                                    ; preds = %18, %4
  %111 = alloca %"class.std::vector"*, align 8
  %112 = alloca i64, align 8
  %113 = alloca %"class.std::stack"*, align 8
  %114 = alloca %"class.std::allocator"*, align 8
  %115 = alloca i8*
  %116 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %111, align 8
  store i64 %1, i64* %112, align 8
  store %"class.std::stack"* %2, %"class.std::stack"** %113, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %114, align 8
  %117 = load %"class.std::vector"*, %"class.std::vector"** %111, align 8
  %118 = bitcast %"class.std::vector"* %117 to %"struct.std::_Vector_base"*
  %119 = load i64, i64* %112, align 8
  %120 = load %"class.std::allocator"*, %"class.std::allocator"** %114, align 8
  call void @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EEC2EmRKS5_(%"struct.std::_Vector_base"* %118, i64 %119, %"class.std::allocator"* dereferenceable(1) %120)
  %121 = load i64, i64* %112, align 8
  %122 = load %"class.std::stack"*, %"class.std::stack"** %113, align 8
  br label %18

; <label>:123:                                    ; preds = %73, %46
  %124 = landingpad { i8*, i32 }
          cleanup
  %125 = extractvalue { i8*, i32 } %124, 0
  store i8* %125, i8** %23, align 8
  %126 = extractvalue { i8*, i32 } %124, 1
  store i32 %126, i32* %24, align 4
  %127 = bitcast %"class.std::vector"* %25 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EED2Ev(%"struct.std::_Vector_base"* %127) #11
  br label %73
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE12_Vector_impl12_M_swap_dataERS7_(%"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* dereferenceable(24)) #1 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %1, %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPSt5stackIiSt5dequeIiSaIiEEEEvRT_S7_(%"class.std::stack"** dereferenceable(8) %6, %"class.std::stack"** dereferenceable(8) %8) #11
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPSt5stackIiSt5dequeIiSaIiEEEEvRT_S7_(%"class.std::stack"** dereferenceable(8) %9, %"class.std::stack"** dereferenceable(8) %11) #11
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPSt5stackIiSt5dequeIiSaIiEEEEvRT_S7_(%"class.std::stack"** dereferenceable(8) %12, %"class.std::stack"** dereferenceable(8) %14) #11
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPSt5stackIiSt5dequeIiSaIiEEESt6vectorIS6_SaIS6_EEEES6_EvT_SC_RKT0_(%"class.std::stack"*, %"class.std::stack"*, %"class.std::stack"* dereferenceable(80)) #2 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %6 = alloca %"class.std::stack"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %4, i32 0, i32 0
  store %"class.std::stack"* %0, %"class.std::stack"** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %5, i32 0, i32 0
  store %"class.std::stack"* %1, %"class.std::stack"** %10, align 8
  store %"class.std::stack"* %2, %"class.std::stack"** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %7, i32 0, i32 0
  %14 = load %"class.std::stack"*, %"class.std::stack"** %13, align 8
  %15 = call %"class.std::stack"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt5stackIiSt5dequeIiSaIiEEESt6vectorIS6_SaIS6_EEEEENSt11_Niter_baseIT_E13iterator_typeESD_(%"class.std::stack"* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %8, i32 0, i32 0
  %19 = load %"class.std::stack"*, %"class.std::stack"** %18, align 8
  %20 = call %"class.std::stack"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt5stackIiSt5dequeIiSaIiEEESt6vectorIS6_SaIS6_EEEEENSt11_Niter_baseIT_E13iterator_typeESD_(%"class.std::stack"* %19)
  %21 = load %"class.std::stack"*, %"class.std::stack"** %6, align 8
  call void @_ZSt8__fill_aIPSt5stackIiSt5dequeIiSaIiEEES4_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SB_RKS8_(%"class.std::stack"* %15, %"class.std::stack"* %20, %"class.std::stack"* dereferenceable(80) %21)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::stack"* @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EE5beginEv(%"class.std::vector"*) #1 comdat align 2 {
  %2 = alloca %"class.std::stack"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.519
  %6 = load i32, i32* @y.520
  %7 = add i32 %5, -2147475392
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -2147475392
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1753253823, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1753253823, label %19
    i32 1601797571, label %27
    i32 -1518474793, label %63
    i32 971925454, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1601797571, i32 971925454
  store i32 %26, i32* %15
  br label %74

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %29 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %29, align 8
  %30 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8
  %31 = bitcast %"class.std::vector"* %30 to %"struct.std::_Vector_base"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %32, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt5stackIiSt5dequeIiSaIiEEESt6vectorIS5_SaIS5_EEEC2ERKS6_(%"class.__gnu_cxx::__normal_iterator.20"* %28, %"class.std::stack"** dereferenceable(8) %33) #11
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %28, i32 0, i32 0
  %35 = load %"class.std::stack"*, %"class.std::stack"** %34, align 8
  store %"class.std::stack"* %35, %"class.std::stack"** %2
  %36 = load i32, i32* @x.519
  %37 = load i32, i32* @y.520
  %38 = sub i32 %36, 1696194129
  %39 = sub i32 %38, 1
  %40 = add i32 %39, 1696194129
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 -1518474793, i32 971925454
  store i32 %62, i32* %15
  br label %74

; <label>:63:                                     ; preds = %16
  %64 = load volatile %"class.std::stack"*, %"class.std::stack"** %2
  ret %"class.std::stack"* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %67 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %67, align 8
  %68 = load %"class.std::vector"*, %"class.std::vector"** %67, align 8
  %69 = bitcast %"class.std::vector"* %68 to %"struct.std::_Vector_base"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %70, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt5stackIiSt5dequeIiSaIiEEESt6vectorIS5_SaIS5_EEEC2ERKS6_(%"class.__gnu_cxx::__normal_iterator.20"* %66, %"class.std::stack"** dereferenceable(8) %71) #11
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %66, i32 0, i32 0
  %73 = load %"class.std::stack"*, %"class.std::stack"** %72, align 8
  store i32 1601797571, i32* %15
  br label %74

; <label>:74:                                     ; preds = %65, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::stack"* @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EE3endEv(%"class.std::vector"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %3 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %4 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %5 = bitcast %"class.std::vector"* %4 to %"struct.std::_Vector_base"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt5stackIiSt5dequeIiSaIiEEESt6vectorIS5_SaIS5_EEEC2ERKS6_(%"class.__gnu_cxx::__normal_iterator.20"* %2, %"class.std::stack"** dereferenceable(8) %7) #11
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %2, i32 0, i32 0
  %9 = load %"class.std::stack"*, %"class.std::stack"** %8, align 8
  ret %"class.std::stack"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::stack"* @_ZSt24__uninitialized_fill_n_aIPSt5stackIiSt5dequeIiSaIiEEEmS4_S4_ET_S6_T0_RKT1_RSaIT2_E(%"class.std::stack"*, i64, %"class.std::stack"* dereferenceable(80), %"class.std::allocator"* dereferenceable(1)) #2 comdat {
  %5 = alloca %"class.std::stack"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::stack"*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::stack"* %2, %"class.std::stack"** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %9 = load %"class.std::stack"*, %"class.std::stack"** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %"class.std::stack"*, %"class.std::stack"** %7, align 8
  %12 = call %"class.std::stack"* @_ZSt20uninitialized_fill_nIPSt5stackIiSt5dequeIiSaIiEEEmS4_ET_S6_T0_RKT1_(%"class.std::stack"* %9, i64 %10, %"class.std::stack"* dereferenceable(80) %11)
  ret %"class.std::stack"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EE15_M_erase_at_endEPS4_(%"class.std::vector"*, %"class.std::stack"*) #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.525
  %4 = load i32, i32* @y.526
  %5 = sub i32 %3, 880440647
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 880440647
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %103

; <label>:17:                                     ; preds = %2, %103
  %18 = alloca %"class.std::vector"*, align 8
  %19 = alloca %"class.std::stack"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %18, align 8
  store %"class.std::stack"* %1, %"class.std::stack"** %19, align 8
  %20 = load %"class.std::vector"*, %"class.std::vector"** %18, align 8
  %21 = load %"class.std::stack"*, %"class.std::stack"** %19, align 8
  %22 = bitcast %"class.std::vector"* %20 to %"struct.std::_Vector_base"*
  %23 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %22, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %23, i32 0, i32 1
  %25 = load %"class.std::stack"*, %"class.std::stack"** %24, align 8
  %26 = bitcast %"class.std::vector"* %20 to %"struct.std::_Vector_base"*
  %27 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %26) #11
  %28 = load i32, i32* @x.525
  %29 = load i32, i32* @y.526
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 false, true
  %40 = and i1 %37, false
  %41 = and i1 %35, %39
  %42 = and i1 %38, false
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 false, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  br i1 %51, label %53, label %103

; <label>:53:                                     ; preds = %17
  invoke void @_ZSt8_DestroyIPSt5stackIiSt5dequeIiSaIiEEES4_EvT_S6_RSaIT0_E(%"class.std::stack"* %21, %"class.std::stack"* %25, %"class.std::allocator"* dereferenceable(1) %27)
          to label %54 unwind label %100

; <label>:54:                                     ; preds = %53
  %55 = load i32, i32* @x.525
  %56 = load i32, i32* @y.526
  %57 = add i32 %55, 2110741511
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, 2110741511
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 false, true
  %68 = and i1 %65, false
  %69 = and i1 %63, %67
  %70 = and i1 %66, false
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 false, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  br i1 %79, label %81, label %114

; <label>:81:                                     ; preds = %54, %114
  %82 = load %"class.std::stack"*, %"class.std::stack"** %19, align 8
  %83 = bitcast %"class.std::vector"* %20 to %"struct.std::_Vector_base"*
  %84 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %83, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %84, i32 0, i32 1
  store %"class.std::stack"* %82, %"class.std::stack"** %85, align 8
  %86 = load i32, i32* @x.525
  %87 = load i32, i32* @y.526
  %88 = sub i32 0, 1
  %89 = add i32 %86, %88
  %90 = sub i32 %86, 1
  %91 = mul i32 %86, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %87, 10
  %95 = and i1 %93, %94
  %96 = xor i1 %93, %94
  %97 = or i1 %95, %96
  %98 = or i1 %93, %94
  br i1 %97, label %99, label %114

; <label>:99:                                     ; preds = %81
  ret void

; <label>:100:                                    ; preds = %53
  %101 = landingpad { i8*, i32 }
          catch i8* null
  %102 = extractvalue { i8*, i32 } %101, 0
  call void @__clang_call_terminate(i8* %102) #9
  unreachable

; <label>:103:                                    ; preds = %17, %2
  %104 = alloca %"class.std::vector"*, align 8
  %105 = alloca %"class.std::stack"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %104, align 8
  store %"class.std::stack"* %1, %"class.std::stack"** %105, align 8
  %106 = load %"class.std::vector"*, %"class.std::vector"** %104, align 8
  %107 = load %"class.std::stack"*, %"class.std::stack"** %105, align 8
  %108 = bitcast %"class.std::vector"* %106 to %"struct.std::_Vector_base"*
  %109 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %108, i32 0, i32 0
  %110 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %109, i32 0, i32 1
  %111 = load %"class.std::stack"*, %"class.std::stack"** %110, align 8
  %112 = bitcast %"class.std::vector"* %106 to %"struct.std::_Vector_base"*
  %113 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %112) #11
  br label %17

; <label>:114:                                    ; preds = %81, %54
  %115 = load %"class.std::stack"*, %"class.std::stack"** %19, align 8
  %116 = bitcast %"class.std::vector"* %20 to %"struct.std::_Vector_base"*
  %117 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %116, i32 0, i32 0
  %118 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %117, i32 0, i32 1
  store %"class.std::stack"* %115, %"class.std::stack"** %118, align 8
  br label %81
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::stack"* @_ZSt6fill_nIPSt5stackIiSt5dequeIiSaIiEEEmS4_ET_S6_T0_RKT1_(%"class.std::stack"*, i64, %"class.std::stack"* dereferenceable(80)) #2 comdat {
  %4 = alloca %"class.std::stack"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.527
  %8 = load i32, i32* @y.528
  %9 = add i32 %7, 759410985
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 759410985
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 602567073, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %75
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 602567073, label %21
    i32 609587699, label %29
    i32 -2007359306, label %64
    i32 246547572, label %66
  ]

; <label>:20:                                     ; preds = %18
  br label %75

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 609587699, i32 246547572
  store i32 %28, i32* %17
  br label %75

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::stack"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.std::stack"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %30, align 8
  store i64 %1, i64* %31, align 8
  store %"class.std::stack"* %2, %"class.std::stack"** %32, align 8
  %33 = load %"class.std::stack"*, %"class.std::stack"** %30, align 8
  %34 = call %"class.std::stack"* @_ZSt12__niter_baseIPSt5stackIiSt5dequeIiSaIiEEEENSt11_Niter_baseIT_E13iterator_typeES7_(%"class.std::stack"* %33)
  %35 = load i64, i64* %31, align 8
  %36 = load %"class.std::stack"*, %"class.std::stack"** %32, align 8
  %37 = call %"class.std::stack"* @_ZSt10__fill_n_aIPSt5stackIiSt5dequeIiSaIiEEEmS4_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES9_T0_RKS8_(%"class.std::stack"* %34, i64 %35, %"class.std::stack"* dereferenceable(80) %36)
  store %"class.std::stack"* %37, %"class.std::stack"** %4
  %38 = load i32, i32* @x.527
  %39 = load i32, i32* @y.528
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -2007359306, i32 246547572
  store i32 %63, i32* %17
  br label %75

; <label>:64:                                     ; preds = %18
  %65 = load volatile %"class.std::stack"*, %"class.std::stack"** %4
  ret %"class.std::stack"* %65

; <label>:66:                                     ; preds = %18
  %67 = alloca %"class.std::stack"*, align 8
  %68 = alloca i64, align 8
  %69 = alloca %"class.std::stack"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %67, align 8
  store i64 %1, i64* %68, align 8
  store %"class.std::stack"* %2, %"class.std::stack"** %69, align 8
  %70 = load %"class.std::stack"*, %"class.std::stack"** %67, align 8
  %71 = call %"class.std::stack"* @_ZSt12__niter_baseIPSt5stackIiSt5dequeIiSaIiEEEENSt11_Niter_baseIT_E13iterator_typeES7_(%"class.std::stack"* %70)
  %72 = load i64, i64* %68, align 8
  %73 = load %"class.std::stack"*, %"class.std::stack"** %69, align 8
  %74 = call %"class.std::stack"* @_ZSt10__fill_n_aIPSt5stackIiSt5dequeIiSaIiEEEmS4_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES9_T0_RKS8_(%"class.std::stack"* %71, i64 %72, %"class.std::stack"* dereferenceable(80) %73)
  store i32 609587699, i32* %17
  br label %75

; <label>:75:                                     ; preds = %66, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EEC2EmRKS5_(%"struct.std::_Vector_base"*, i64, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator"*, %"class.std::allocator"** %6, align 8
  call void @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE12_Vector_implC2ERKS5_(%"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %10, %"class.std::allocator"* dereferenceable(1) %11) #11
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE17_M_create_storageEm(%"struct.std::_Vector_base"* %9, i64 %12)
          to label %13 unwind label %43

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @x.529
  %15 = load i32, i32* @y.530
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %15, 10
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  br i1 %25, label %27, label %52

; <label>:27:                                     ; preds = %13, %52
  %28 = load i32, i32* @x.529
  %29 = load i32, i32* @y.530
  %30 = sub i32 %28, -1209943243
  %31 = sub i32 %30, 1
  %32 = add i32 %31, -1209943243
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  br i1 %40, label %42, label %52

; <label>:42:                                     ; preds = %27
  ret void

; <label>:43:                                     ; preds = %3
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = extractvalue { i8*, i32 } %44, 0
  store i8* %45, i8** %7, align 8
  %46 = extractvalue { i8*, i32 } %44, 1
  store i32 %46, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %10) #11
  br label %47

; <label>:47:                                     ; preds = %43
  %48 = load i8*, i8** %7, align 8
  %49 = load i32, i32* %8, align 4
  %50 = insertvalue { i8*, i32 } undef, i8* %48, 0
  %51 = insertvalue { i8*, i32 } %50, i32 %49, 1
  resume { i8*, i32 } %51

; <label>:52:                                     ; preds = %27, %13
  br label %27
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt5stackIiSt5dequeIiSaIiEEESaIS4_EE18_M_fill_initializeEmRKS4_(%"class.std::vector"*, i64, %"class.std::stack"* dereferenceable(80)) #2 comdat align 2 {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::stack"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::stack"* %2, %"class.std::stack"** %6, align 8
  %7 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %8 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::stack"*, %"class.std::stack"** %10, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load %"class.std::stack"*, %"class.std::stack"** %6, align 8
  %14 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14) #11
  %16 = call %"class.std::stack"* @_ZSt24__uninitialized_fill_n_aIPSt5stackIiSt5dequeIiSaIiEEEmS4_S4_ET_S6_T0_RKT1_RSaIT2_E(%"class.std::stack"* %11, i64 %12, %"class.std::stack"* dereferenceable(80) %13, %"class.std::allocator"* dereferenceable(1) %15)
  %17 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %18, i32 0, i32 1
  store %"class.std::stack"* %16, %"class.std::stack"** %19, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE12_Vector_implC2ERKS5_(%"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %5 to %"class.std::allocator"*
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  call void @_ZNSaISt5stackIiSt5dequeIiSaIiEEEEC2ERKS4_(%"class.std::allocator"* %6, %"class.std::allocator"* dereferenceable(1) %7) #11
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %5, i32 0, i32 0
  store %"class.std::stack"* null, %"class.std::stack"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %5, i32 0, i32 1
  store %"class.std::stack"* null, %"class.std::stack"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %5, i32 0, i32 2
  store %"class.std::stack"* null, %"class.std::stack"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE17_M_create_storageEm(%"struct.std::_Vector_base"*, i64) #2 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"class.std::stack"* @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE11_M_allocateEm(%"struct.std::_Vector_base"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %8, i32 0, i32 0
  store %"class.std::stack"* %7, %"class.std::stack"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"class.std::stack"*, %"class.std::stack"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %13, i32 0, i32 1
  store %"class.std::stack"* %12, %"class.std::stack"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"class.std::stack"*, %"class.std::stack"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"class.std::stack", %"class.std::stack"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %20, i32 0, i32 2
  store %"class.std::stack"* %19, %"class.std::stack"** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt5stackIiSt5dequeIiSaIiEEEEC2ERKS4_(%"class.std::allocator"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5stackIiSt5dequeIiSaIiEEEEC2ERKS6_(%"class.__gnu_cxx::new_allocator"* %6, %"class.__gnu_cxx::new_allocator"* dereferenceable(1) %8) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5stackIiSt5dequeIiSaIiEEEEC2ERKS6_(%"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %3, align 8
  store %"class.__gnu_cxx::new_allocator"* %1, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::stack"* @_ZNSt12_Vector_baseISt5stackIiSt5dequeIiSaIiEEESaIS4_EE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #2 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"struct.std::_Vector_base"*
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.541
  %9 = load i32, i32* @y.542
  %10 = add i32 %8, -1373060948
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -1373060948
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -1239127798, i32* %18
  %19 = alloca %"class.std::stack"*
  br label %20

; <label>:20:                                     ; preds = %2, %84
  %21 = load i32, i32* %18
  switch i32 %21, label %22 [
    i32 -1239127798, label %23
    i32 -366743973, label %43
    i32 433647987, label %65
    i32 -2141873200, label %68
    i32 -1467849446, label %75
    i32 -1161476677, label %76
    i32 -4185518, label %78
  ]

; <label>:22:                                     ; preds = %20
  br label %84

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %7
  %25 = load volatile i1, i1* %6
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 false, true
  %29 = and i1 %26, false
  %30 = and i1 %24, %28
  %31 = and i1 %27, false
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 false, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 -366743973, i32 -4185518
  store i32 %42, i32* %18
  br label %84

; <label>:43:                                     ; preds = %20
  %44 = alloca %"struct.std::_Vector_base"*, align 8
  %45 = alloca i64, align 8
  store i64* %45, i64** %5
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %44, align 8
  %46 = load volatile i64*, i64** %5
  store i64 %1, i64* %46, align 8
  %47 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %44, align 8
  store %"struct.std::_Vector_base"* %47, %"struct.std::_Vector_base"** %4
  %48 = load volatile i64*, i64** %5
  %49 = load i64, i64* %48, align 8
  %50 = icmp ne i64 %49, 0
  store i1 %50, i1* %3
  %51 = load i32, i32* @x.541
  %52 = load i32, i32* @y.542
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 433647987, i32 -4185518
  store i32 %64, i32* %18
  br label %84

; <label>:65:                                     ; preds = %20
  %66 = load volatile i1, i1* %3
  %67 = select i1 %66, i32 -2141873200, i32 -1467849446
  store i32 %67, i32* %18
  br label %84

; <label>:68:                                     ; preds = %20
  %69 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4
  %70 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %69, i32 0, i32 0
  %71 = bitcast %"struct.std::_Vector_base<std::stack<int, std::deque<int, std::allocator<int> > >, std::allocator<std::stack<int, std::deque<int, std::allocator<int> > > > >::_Vector_impl"* %70 to %"class.std::allocator"*
  %72 = load volatile i64*, i64** %5
  %73 = load i64, i64* %72, align 8
  %74 = call %"class.std::stack"* @_ZNSt16allocator_traitsISaISt5stackIiSt5dequeIiSaIiEEEEE8allocateERS5_m(%"class.std::allocator"* dereferenceable(1) %71, i64 %73)
  store i32 -1161476677, i32* %18
  store %"class.std::stack"* %74, %"class.std::stack"** %19
  br label %84

; <label>:75:                                     ; preds = %20
  store i32 -1161476677, i32* %18
  store %"class.std::stack"* null, %"class.std::stack"** %19
  br label %84

; <label>:76:                                     ; preds = %20
  %77 = load %"class.std::stack"*, %"class.std::stack"** %19
  ret %"class.std::stack"* %77

; <label>:78:                                     ; preds = %20
  %79 = alloca %"struct.std::_Vector_base"*, align 8
  %80 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %79, align 8
  store i64 %1, i64* %80, align 8
  %81 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %79, align 8
  %82 = load i64, i64* %80, align 8
  %83 = icmp ne i64 %82, 0
  store i32 -366743973, i32* %18
  br label %84

; <label>:84:                                     ; preds = %78, %75, %68, %65, %43, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::stack"* @_ZNSt16allocator_traitsISaISt5stackIiSt5dequeIiSaIiEEEEE8allocateERS5_m(%"class.std::allocator"* dereferenceable(1), i64) #2 comdat align 2 {
  %3 = alloca %"class.std::stack"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.543
  %7 = load i32, i32* @y.544
  %8 = sub i32 %6, -1565805110
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1565805110
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1466171919, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1466171919, label %20
    i32 846188069, label %40
    i32 -1294229675, label %61
    i32 792634072, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 846188069, i32 792634072
  store i32 %39, i32* %16
  br label %70

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %41, align 8
  store i64 %1, i64* %42, align 8
  %43 = load %"class.std::allocator"*, %"class.std::allocator"** %41, align 8
  %44 = bitcast %"class.std::allocator"* %43 to %"class.__gnu_cxx::new_allocator"*
  %45 = load i64, i64* %42, align 8
  %46 = call %"class.std::stack"* @_ZN9__gnu_cxx13new_allocatorISt5stackIiSt5dequeIiSaIiEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %44, i64 %45, i8* null)
  store %"class.std::stack"* %46, %"class.std::stack"** %3
  %47 = load i32, i32* @x.543
  %48 = load i32, i32* @y.544
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -1294229675, i32 792634072
  store i32 %60, i32* %16
  br label %70

; <label>:61:                                     ; preds = %17
  %62 = load volatile %"class.std::stack"*, %"class.std::stack"** %3
  ret %"class.std::stack"* %62

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.std::allocator"*, align 8
  %65 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %64, align 8
  store i64 %1, i64* %65, align 8
  %66 = load %"class.std::allocator"*, %"class.std::allocator"** %64, align 8
  %67 = bitcast %"class.std::allocator"* %66 to %"class.__gnu_cxx::new_allocator"*
  %68 = load i64, i64* %65, align 8
  %69 = call %"class.std::stack"* @_ZN9__gnu_cxx13new_allocatorISt5stackIiSt5dequeIiSaIiEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %67, i64 %68, i8* null)
  store i32 846188069, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::stack"* @_ZN9__gnu_cxx13new_allocatorISt5stackIiSt5dequeIiSaIiEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"*, i64, i8*) #2 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.545
  %9 = load i32, i32* @y.546
  %10 = add i32 %8, -1386387568
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -1386387568
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -356515847, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %85
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -356515847, label %22
    i32 -392645734, label %30
    i32 -752078906, label %67
    i32 716835306, label %70
    i32 -690017407, label %71
    i32 2051578477, label %77
  ]

; <label>:21:                                     ; preds = %19
  br label %85

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -392645734, i32 2051578477
  store i32 %29, i32* %18
  br label %85

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %32 = alloca i64, align 8
  store i64* %32, i64** %5
  %33 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %31, align 8
  %34 = load volatile i64*, i64** %5
  store i64 %1, i64* %34, align 8
  store i8* %2, i8** %33, align 8
  %35 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %31, align 8
  %36 = load volatile i64*, i64** %5
  %37 = load i64, i64* %36, align 8
  %38 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt5stackIiSt5dequeIiSaIiEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %35) #11
  %39 = icmp ugt i64 %37, %38
  store i1 %39, i1* %4
  %40 = load i32, i32* @x.545
  %41 = load i32, i32* @y.546
  %42 = sub i32 %40, -1700242592
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -1700242592
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -752078906, i32 2051578477
  store i32 %66, i32* %18
  br label %85

; <label>:67:                                     ; preds = %19
  %68 = load volatile i1, i1* %4
  %69 = select i1 %68, i32 716835306, i32 -690017407
  store i32 %69, i32* %18
  br label %85

; <label>:70:                                     ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:71:                                     ; preds = %19
  %72 = load volatile i64*, i64** %5
  %73 = load i64, i64* %72, align 8
  %74 = mul i64 %73, 80
  %75 = call i8* @_Znwm(i64 %74)
  %76 = bitcast i8* %75 to %"class.std::stack"*
  ret %"class.std::stack"* %76

; <label>:77:                                     ; preds = %19
  %78 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %79 = alloca i64, align 8
  %80 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %78, align 8
  store i64 %1, i64* %79, align 8
  store i8* %2, i8** %80, align 8
  %81 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %78, align 8
  %82 = load i64, i64* %79, align 8
  %83 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt5stackIiSt5dequeIiSaIiEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %81) #11
  %84 = icmp ugt i64 %82, %83
  store i32 -392645734, i32* %18
  br label %85

; <label>:85:                                     ; preds = %77, %67, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt5stackIiSt5dequeIiSaIiEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"*) #1 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.547
  %5 = load i32, i32* @y.548
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1767020918, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %58
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1767020918, label %17
    i32 -2003585986, label %25
    i32 -1500373368, label %54
    i32 -2052162424, label %55
  ]

; <label>:16:                                     ; preds = %14
  br label %58

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -2003585986, i32 -2052162424
  store i32 %24, i32* %13
  br label %58

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %26, align 8
  %28 = load i32, i32* @x.547
  %29 = load i32, i32* @y.548
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 false, true
  %40 = and i1 %37, false
  %41 = and i1 %35, %39
  %42 = and i1 %38, false
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 false, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  %53 = select i1 %51, i32 -1500373368, i32 -2052162424
  store i32 %53, i32* %13
  br label %58

; <label>:54:                                     ; preds = %14
  ret i64 230584300921369395

; <label>:55:                                     ; preds = %14
  %56 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %56, align 8
  %57 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %56, align 8
  store i32 -2003585986, i32* %13
  br label %58

; <label>:58:                                     ; preds = %55, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPSt5stackIiSt5dequeIiSaIiEEEEvRT_S7_(%"class.std::stack"** dereferenceable(8), %"class.std::stack"** dereferenceable(8)) #1 comdat {
  %3 = alloca %"class.std::stack"**, align 8
  %4 = alloca %"class.std::stack"**, align 8
  %5 = alloca %"class.std::stack"*, align 8
  store %"class.std::stack"** %0, %"class.std::stack"*** %3, align 8
  store %"class.std::stack"** %1, %"class.std::stack"*** %4, align 8
  %6 = load %"class.std::stack"**, %"class.std::stack"*** %3, align 8
  %7 = call dereferenceable(8) %"class.std::stack"** @_ZSt4moveIRPSt5stackIiSt5dequeIiSaIiEEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::stack"** dereferenceable(8) %6) #11
  %8 = load %"class.std::stack"*, %"class.std::stack"** %7, align 8
  store %"class.std::stack"* %8, %"class.std::stack"** %5, align 8
  %9 = load %"class.std::stack"**, %"class.std::stack"*** %4, align 8
  %10 = call dereferenceable(8) %"class.std::stack"** @_ZSt4moveIRPSt5stackIiSt5dequeIiSaIiEEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::stack"** dereferenceable(8) %9) #11
  %11 = load %"class.std::stack"*, %"class.std::stack"** %10, align 8
  %12 = load %"class.std::stack"**, %"class.std::stack"*** %3, align 8
  store %"class.std::stack"* %11, %"class.std::stack"** %12, align 8
  %13 = call dereferenceable(8) %"class.std::stack"** @_ZSt4moveIRPSt5stackIiSt5dequeIiSaIiEEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::stack"** dereferenceable(8) %5) #11
  %14 = load %"class.std::stack"*, %"class.std::stack"** %13, align 8
  %15 = load %"class.std::stack"**, %"class.std::stack"*** %4, align 8
  store %"class.std::stack"* %14, %"class.std::stack"** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::stack"** @_ZSt4moveIRPSt5stackIiSt5dequeIiSaIiEEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::stack"** dereferenceable(8)) #1 comdat {
  %2 = alloca %"class.std::stack"**, align 8
  store %"class.std::stack"** %0, %"class.std::stack"*** %2, align 8
  %3 = load %"class.std::stack"**, %"class.std::stack"*** %2, align 8
  ret %"class.std::stack"** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8__fill_aIPSt5stackIiSt5dequeIiSaIiEEES4_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SB_RKS8_(%"class.std::stack"*, %"class.std::stack"*, %"class.std::stack"* dereferenceable(80)) #2 comdat {
  %4 = alloca %"class.std::stack"*, align 8
  %5 = alloca %"class.std::stack"*, align 8
  %6 = alloca %"class.std::stack"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %4, align 8
  store %"class.std::stack"* %1, %"class.std::stack"** %5, align 8
  store %"class.std::stack"* %2, %"class.std::stack"** %6, align 8
  %7 = alloca i32
  store i32 -353803576, i32* %7
  br label %8

; <label>:8:                                      ; preds = %3, %69
  %9 = load i32, i32* %7
  switch i32 %9, label %10 [
    i32 -353803576, label %11
    i32 283882035, label %16
    i32 73545335, label %20
    i32 -1423614836, label %47
    i32 1365421097, label %64
    i32 -133832567, label %65
    i32 -184027672, label %66
  ]

; <label>:10:                                     ; preds = %8
  br label %69

; <label>:11:                                     ; preds = %8
  %12 = load %"class.std::stack"*, %"class.std::stack"** %4, align 8
  %13 = load %"class.std::stack"*, %"class.std::stack"** %5, align 8
  %14 = icmp ne %"class.std::stack"* %12, %13
  %15 = select i1 %14, i32 283882035, i32 -133832567
  store i32 %15, i32* %7
  br label %69

; <label>:16:                                     ; preds = %8
  %17 = load %"class.std::stack"*, %"class.std::stack"** %6, align 8
  %18 = load %"class.std::stack"*, %"class.std::stack"** %4, align 8
  %19 = call dereferenceable(80) %"class.std::stack"* @_ZNSt5stackIiSt5dequeIiSaIiEEEaSERKS3_(%"class.std::stack"* %18, %"class.std::stack"* dereferenceable(80) %17)
  store i32 73545335, i32* %7
  br label %69

; <label>:20:                                     ; preds = %8
  %21 = load i32, i32* @x.553
  %22 = load i32, i32* @y.554
  %23 = sub i32 0, 1
  %24 = add i32 %21, %23
  %25 = sub i32 %21, 1
  %26 = mul i32 %21, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %22, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 true, true
  %33 = and i1 %30, true
  %34 = and i1 %28, %32
  %35 = and i1 %31, true
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 true, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 -1423614836, i32 -184027672
  store i32 %46, i32* %7
  br label %69

; <label>:47:                                     ; preds = %8
  %48 = load %"class.std::stack"*, %"class.std::stack"** %4, align 8
  %49 = getelementptr inbounds %"class.std::stack", %"class.std::stack"* %48, i32 1
  store %"class.std::stack"* %49, %"class.std::stack"** %4, align 8
  %50 = load i32, i32* @x.553
  %51 = load i32, i32* @y.554
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 1365421097, i32 -184027672
  store i32 %63, i32* %7
  br label %69

; <label>:64:                                     ; preds = %8
  store i32 -353803576, i32* %7
  br label %69

; <label>:65:                                     ; preds = %8
  ret void

; <label>:66:                                     ; preds = %8
  %67 = load %"class.std::stack"*, %"class.std::stack"** %4, align 8
  %68 = getelementptr inbounds %"class.std::stack", %"class.std::stack"* %67, i32 1
  store %"class.std::stack"* %68, %"class.std::stack"** %4, align 8
  store i32 -1423614836, i32* %7
  br label %69

; <label>:69:                                     ; preds = %66, %64, %47, %20, %16, %11, %10
  br label %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::stack"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt5stackIiSt5dequeIiSaIiEEESt6vectorIS6_SaIS6_EEEEENSt11_Niter_baseIT_E13iterator_typeESD_(%"class.std::stack"*) #2 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %2, i32 0, i32 0
  store %"class.std::stack"* %0, %"class.std::stack"** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %3, i32 0, i32 0
  %8 = load %"class.std::stack"*, %"class.std::stack"** %7, align 8
  %9 = call %"class.std::stack"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt5stackIiSt5dequeIiSaIiEEESt6vectorIS6_SaIS6_EEEELb1EE7_S_baseESB_(%"class.std::stack"* %8)
  ret %"class.std::stack"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(80) %"class.std::stack"* @_ZNSt5stackIiSt5dequeIiSaIiEEEaSERKS3_(%"class.std::stack"*, %"class.std::stack"* dereferenceable(80)) #2 comdat align 2 {
  %3 = alloca %"class.std::stack"*, align 8
  %4 = alloca %"class.std::stack"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %3, align 8
  store %"class.std::stack"* %1, %"class.std::stack"** %4, align 8
  %5 = load %"class.std::stack"*, %"class.std::stack"** %3, align 8
  %6 = getelementptr inbounds %"class.std::stack", %"class.std::stack"* %5, i32 0, i32 0
  %7 = load %"class.std::stack"*, %"class.std::stack"** %4, align 8
  %8 = getelementptr inbounds %"class.std::stack", %"class.std::stack"* %7, i32 0, i32 0
  %9 = call dereferenceable(80) %"class.std::deque"* @_ZNSt5dequeIiSaIiEEaSERKS1_(%"class.std::deque"* %6, %"class.std::deque"* dereferenceable(80) %8)
  ret %"class.std::stack"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(80) %"class.std::deque"* @_ZNSt5dequeIiSaIiEEaSERKS1_(%"class.std::deque"*, %"class.std::deque"* dereferenceable(80)) #2 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::deque"*
  %5 = alloca %"struct.std::_Deque_iterator"*
  %6 = alloca %"struct.std::_Deque_iterator.21"*
  %7 = alloca %"struct.std::_Deque_iterator.21"*
  %8 = alloca %"struct.std::_Deque_iterator.21"*
  %9 = alloca %"struct.std::_Deque_iterator"*
  %10 = alloca %"struct.std::_Deque_iterator"*
  %11 = alloca %"struct.std::_Deque_iterator.21"*
  %12 = alloca %"struct.std::_Deque_iterator.21"*
  %13 = alloca %"struct.std::_Deque_iterator.21"*
  %14 = alloca %"struct.std::_Deque_iterator.21"*
  %15 = alloca %"struct.std::_Deque_iterator"*
  %16 = alloca %"struct.std::_Deque_iterator.21"*
  %17 = alloca %"struct.std::_Deque_iterator.21"*
  %18 = alloca %"struct.std::_Deque_iterator"*
  %19 = alloca i64*
  %20 = alloca %"class.std::deque"**
  %21 = alloca i1
  %22 = alloca i1
  %23 = load i32, i32* @x.559
  %24 = load i32, i32* @y.560
  %25 = sub i32 %23, -1770396788
  %26 = sub i32 %25, 1
  %27 = add i32 %26, -1770396788
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  store i1 %31, i1* %22
  %32 = icmp slt i32 %24, 10
  store i1 %32, i1* %21
  %33 = alloca i32
  store i32 2005714653, i32* %33
  br label %34

; <label>:34:                                     ; preds = %2, %309
  %35 = load i32, i32* %33
  switch i32 %35, label %36 [
    i32 2005714653, label %37
    i32 73268928, label %45
    i32 434634512, label %84
    i32 1196144295, label %87
    i32 2072828131, label %98
    i32 1142926855, label %116
    i32 -1408625363, label %143
    i32 582844530, label %199
    i32 -695270620, label %200
    i32 -752806260, label %201
    i32 949650769, label %228
    i32 -756162347, label %244
    i32 -613369780, label %246
    i32 123334504, label %267
    i32 1903404662, label %308
  ]

; <label>:36:                                     ; preds = %34
  br label %309

; <label>:37:                                     ; preds = %34
  %38 = load volatile i1, i1* %22
  %39 = load volatile i1, i1* %21
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 73268928, i32 -613369780
  store i32 %44, i32* %33
  br label %309

; <label>:45:                                     ; preds = %34
  %46 = alloca %"class.std::deque"*, align 8
  %47 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"** %47, %"class.std::deque"*** %20
  %48 = alloca i64, align 8
  store i64* %48, i64** %19
  %49 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %49, %"struct.std::_Deque_iterator"** %18
  %50 = alloca %"struct.std::_Deque_iterator.21", align 8
  store %"struct.std::_Deque_iterator.21"* %50, %"struct.std::_Deque_iterator.21"** %17
  %51 = alloca %"struct.std::_Deque_iterator.21", align 8
  store %"struct.std::_Deque_iterator.21"* %51, %"struct.std::_Deque_iterator.21"** %16
  %52 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %52, %"struct.std::_Deque_iterator"** %15
  %53 = alloca %"struct.std::_Deque_iterator.21", align 8
  store %"struct.std::_Deque_iterator.21"* %53, %"struct.std::_Deque_iterator.21"** %14
  %54 = alloca %"struct.std::_Deque_iterator.21", align 8
  store %"struct.std::_Deque_iterator.21"* %54, %"struct.std::_Deque_iterator.21"** %13
  %55 = alloca %"struct.std::_Deque_iterator.21", align 8
  store %"struct.std::_Deque_iterator.21"* %55, %"struct.std::_Deque_iterator.21"** %12
  %56 = alloca %"struct.std::_Deque_iterator.21", align 8
  store %"struct.std::_Deque_iterator.21"* %56, %"struct.std::_Deque_iterator.21"** %11
  %57 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %57, %"struct.std::_Deque_iterator"** %10
  %58 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %58, %"struct.std::_Deque_iterator"** %9
  %59 = alloca %"struct.std::_Deque_iterator.21", align 8
  store %"struct.std::_Deque_iterator.21"* %59, %"struct.std::_Deque_iterator.21"** %8
  %60 = alloca %"struct.std::_Deque_iterator.21", align 8
  store %"struct.std::_Deque_iterator.21"* %60, %"struct.std::_Deque_iterator.21"** %7
  %61 = alloca %"struct.std::_Deque_iterator.21", align 8
  store %"struct.std::_Deque_iterator.21"* %61, %"struct.std::_Deque_iterator.21"** %6
  %62 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %62, %"struct.std::_Deque_iterator"** %5
  store %"class.std::deque"* %0, %"class.std::deque"** %46, align 8
  %63 = load volatile %"class.std::deque"**, %"class.std::deque"*** %20
  store %"class.std::deque"* %1, %"class.std::deque"** %63, align 8
  %64 = load %"class.std::deque"*, %"class.std::deque"** %46, align 8
  store %"class.std::deque"* %64, %"class.std::deque"** %4
  %65 = load volatile %"class.std::deque"**, %"class.std::deque"*** %20
  %66 = load %"class.std::deque"*, %"class.std::deque"** %65, align 8
  %67 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %68 = icmp ne %"class.std::deque"* %66, %67
  store i1 %68, i1* %3
  %69 = load i32, i32* @x.559
  %70 = load i32, i32* @y.560
  %71 = add i32 %69, -1711698037
  %72 = sub i32 %71, 1
  %73 = sub i32 %72, -1711698037
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  %83 = select i1 %81, i32 434634512, i32 -613369780
  store i32 %83, i32* %33
  br label %309

; <label>:84:                                     ; preds = %34
  %85 = load volatile i1, i1* %3
  %86 = select i1 %85, i32 1196144295, i32 -752806260
  store i32 %86, i32* %33
  br label %309

; <label>:87:                                     ; preds = %34
  %88 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %89 = call i64 @_ZNKSt5dequeIiSaIiEE4sizeEv(%"class.std::deque"* %88) #11
  %90 = load volatile i64*, i64** %19
  store i64 %89, i64* %90, align 8
  %91 = load volatile i64*, i64** %19
  %92 = load i64, i64* %91, align 8
  %93 = load volatile %"class.std::deque"**, %"class.std::deque"*** %20
  %94 = load %"class.std::deque"*, %"class.std::deque"** %93, align 8
  %95 = call i64 @_ZNKSt5dequeIiSaIiEE4sizeEv(%"class.std::deque"* %94) #11
  %96 = icmp uge i64 %92, %95
  %97 = select i1 %96, i32 2072828131, i32 1142926855
  store i32 %97, i32* %33
  br label %309

; <label>:98:                                     ; preds = %34
  %99 = load volatile %"class.std::deque"**, %"class.std::deque"*** %20
  %100 = load %"class.std::deque"*, %"class.std::deque"** %99, align 8
  %101 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %17
  call void @_ZNKSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator.21"* sret %101, %"class.std::deque"* %100) #11
  %102 = load volatile %"class.std::deque"**, %"class.std::deque"*** %20
  %103 = load %"class.std::deque"*, %"class.std::deque"** %102, align 8
  %104 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %16
  call void @_ZNKSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator.21"* sret %104, %"class.std::deque"* %103) #11
  %105 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %106 = bitcast %"class.std::deque"* %105 to %"class.std::_Deque_base"*
  %107 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %106, i32 0, i32 0
  %108 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %107, i32 0, i32 2
  %109 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %15
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %109, %"struct.std::_Deque_iterator"* dereferenceable(32) %108) #11
  %110 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %18
  %111 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %17
  %112 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %16
  %113 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %15
  call void @_ZSt4copyIiESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_(%"struct.std::_Deque_iterator"* sret %110, %"struct.std::_Deque_iterator.21"* byval align 8 %111, %"struct.std::_Deque_iterator.21"* byval align 8 %112, %"struct.std::_Deque_iterator"* %113)
  %114 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %18
  %115 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  call void @_ZNSt5dequeIiSaIiEE15_M_erase_at_endESt15_Deque_iteratorIiRiPiE(%"class.std::deque"* %115, %"struct.std::_Deque_iterator"* %114)
  store i32 -695270620, i32* %33
  br label %309

; <label>:116:                                    ; preds = %34
  %117 = load i32, i32* @x.559
  %118 = load i32, i32* @y.560
  %119 = sub i32 0, 1
  %120 = add i32 %117, %119
  %121 = sub i32 %117, 1
  %122 = mul i32 %117, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %118, 10
  %126 = xor i1 %124, true
  %127 = xor i1 %125, true
  %128 = xor i1 false, true
  %129 = and i1 %126, false
  %130 = and i1 %124, %128
  %131 = and i1 %127, false
  %132 = and i1 %125, %128
  %133 = or i1 %129, %130
  %134 = or i1 %131, %132
  %135 = xor i1 %133, %134
  %136 = or i1 %126, %127
  %137 = xor i1 %136, true
  %138 = or i1 false, %128
  %139 = and i1 %137, %138
  %140 = or i1 %135, %139
  %141 = or i1 %124, %125
  %142 = select i1 %140, i32 -1408625363, i32 123334504
  store i32 %142, i32* %33
  br label %309

; <label>:143:                                    ; preds = %34
  %144 = load volatile %"class.std::deque"**, %"class.std::deque"*** %20
  %145 = load %"class.std::deque"*, %"class.std::deque"** %144, align 8
  %146 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %13
  call void @_ZNKSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator.21"* sret %146, %"class.std::deque"* %145) #11
  %147 = load volatile i64*, i64** %19
  %148 = load i64, i64* %147, align 8
  %149 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %14
  %150 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %13
  call void @_ZNKSt15_Deque_iteratorIiRKiPS0_EplEl(%"struct.std::_Deque_iterator.21"* sret %149, %"struct.std::_Deque_iterator.21"* %150, i64 %148) #11
  %151 = load volatile %"class.std::deque"**, %"class.std::deque"*** %20
  %152 = load %"class.std::deque"*, %"class.std::deque"** %151, align 8
  %153 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %12
  call void @_ZNKSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator.21"* sret %153, %"class.std::deque"* %152) #11
  %154 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %11
  %155 = bitcast %"struct.std::_Deque_iterator.21"* %154 to i8*
  %156 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %14
  %157 = bitcast %"struct.std::_Deque_iterator.21"* %156 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %155, i8* %157, i64 32, i32 8, i1 false)
  %158 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %159 = bitcast %"class.std::deque"* %158 to %"class.std::_Deque_base"*
  %160 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %159, i32 0, i32 0
  %161 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %160, i32 0, i32 2
  %162 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %10
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %162, %"struct.std::_Deque_iterator"* dereferenceable(32) %161) #11
  %163 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %12
  %164 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %11
  %165 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %10
  %166 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %9
  call void @_ZSt4copyIiESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_(%"struct.std::_Deque_iterator"* sret %166, %"struct.std::_Deque_iterator.21"* byval align 8 %163, %"struct.std::_Deque_iterator.21"* byval align 8 %164, %"struct.std::_Deque_iterator"* %165)
  %167 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %168 = bitcast %"class.std::deque"* %167 to %"class.std::_Deque_base"*
  %169 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %168, i32 0, i32 0
  %170 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %169, i32 0, i32 3
  %171 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %8
  call void @_ZNSt15_Deque_iteratorIiRKiPS0_EC2ERKS_IiRiPiE(%"struct.std::_Deque_iterator.21"* %171, %"struct.std::_Deque_iterator"* dereferenceable(32) %170) #11
  %172 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %7
  %173 = bitcast %"struct.std::_Deque_iterator.21"* %172 to i8*
  %174 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %14
  %175 = bitcast %"struct.std::_Deque_iterator.21"* %174 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %173, i8* %175, i64 32, i32 8, i1 false)
  %176 = load volatile %"class.std::deque"**, %"class.std::deque"*** %20
  %177 = load %"class.std::deque"*, %"class.std::deque"** %176, align 8
  %178 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %6
  call void @_ZNKSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator.21"* sret %178, %"class.std::deque"* %177) #11
  %179 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %8
  %180 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %7
  %181 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %6
  %182 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %5
  %183 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  call void @_ZNSt5dequeIiSaIiEE6insertISt15_Deque_iteratorIiRKiPS4_EvEES3_IiRiPiES7_T_SB_(%"struct.std::_Deque_iterator"* sret %182, %"class.std::deque"* %183, %"struct.std::_Deque_iterator.21"* byval align 8 %179, %"struct.std::_Deque_iterator.21"* byval align 8 %180, %"struct.std::_Deque_iterator.21"* byval align 8 %181)
  %184 = load i32, i32* @x.559
  %185 = load i32, i32* @y.560
  %186 = add i32 %184, -979816460
  %187 = sub i32 %186, 1
  %188 = sub i32 %187, -979816460
  %189 = sub i32 %184, 1
  %190 = mul i32 %184, %188
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %185, 10
  %194 = and i1 %192, %193
  %195 = xor i1 %192, %193
  %196 = or i1 %194, %195
  %197 = or i1 %192, %193
  %198 = select i1 %196, i32 582844530, i32 123334504
  store i32 %198, i32* %33
  br label %309

; <label>:199:                                    ; preds = %34
  store i32 -695270620, i32* %33
  br label %309

; <label>:200:                                    ; preds = %34
  store i32 -752806260, i32* %33
  br label %309

; <label>:201:                                    ; preds = %34
  %202 = load i32, i32* @x.559
  %203 = load i32, i32* @y.560
  %204 = sub i32 0, 1
  %205 = add i32 %202, %204
  %206 = sub i32 %202, 1
  %207 = mul i32 %202, %205
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %203, 10
  %211 = xor i1 %209, true
  %212 = xor i1 %210, true
  %213 = xor i1 false, true
  %214 = and i1 %211, false
  %215 = and i1 %209, %213
  %216 = and i1 %212, false
  %217 = and i1 %210, %213
  %218 = or i1 %214, %215
  %219 = or i1 %216, %217
  %220 = xor i1 %218, %219
  %221 = or i1 %211, %212
  %222 = xor i1 %221, true
  %223 = or i1 false, %213
  %224 = and i1 %222, %223
  %225 = or i1 %220, %224
  %226 = or i1 %209, %210
  %227 = select i1 %225, i32 949650769, i32 1903404662
  store i32 %227, i32* %33
  br label %309

; <label>:228:                                    ; preds = %34
  %229 = load i32, i32* @x.559
  %230 = load i32, i32* @y.560
  %231 = add i32 %229, -454755830
  %232 = sub i32 %231, 1
  %233 = sub i32 %232, -454755830
  %234 = sub i32 %229, 1
  %235 = mul i32 %229, %233
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %230, 10
  %239 = and i1 %237, %238
  %240 = xor i1 %237, %238
  %241 = or i1 %239, %240
  %242 = or i1 %237, %238
  %243 = select i1 %241, i32 -756162347, i32 1903404662
  store i32 %243, i32* %33
  br label %309

; <label>:244:                                    ; preds = %34
  %245 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  ret %"class.std::deque"* %245

; <label>:246:                                    ; preds = %34
  %247 = alloca %"class.std::deque"*, align 8
  %248 = alloca %"class.std::deque"*, align 8
  %249 = alloca i64, align 8
  %250 = alloca %"struct.std::_Deque_iterator", align 8
  %251 = alloca %"struct.std::_Deque_iterator.21", align 8
  %252 = alloca %"struct.std::_Deque_iterator.21", align 8
  %253 = alloca %"struct.std::_Deque_iterator", align 8
  %254 = alloca %"struct.std::_Deque_iterator.21", align 8
  %255 = alloca %"struct.std::_Deque_iterator.21", align 8
  %256 = alloca %"struct.std::_Deque_iterator.21", align 8
  %257 = alloca %"struct.std::_Deque_iterator.21", align 8
  %258 = alloca %"struct.std::_Deque_iterator", align 8
  %259 = alloca %"struct.std::_Deque_iterator", align 8
  %260 = alloca %"struct.std::_Deque_iterator.21", align 8
  %261 = alloca %"struct.std::_Deque_iterator.21", align 8
  %262 = alloca %"struct.std::_Deque_iterator.21", align 8
  %263 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %247, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %248, align 8
  %264 = load %"class.std::deque"*, %"class.std::deque"** %247, align 8
  %265 = load %"class.std::deque"*, %"class.std::deque"** %248, align 8
  %266 = icmp ne %"class.std::deque"* %265, %264
  store i32 73268928, i32* %33
  br label %309

; <label>:267:                                    ; preds = %34
  %268 = load volatile %"class.std::deque"**, %"class.std::deque"*** %20
  %269 = load %"class.std::deque"*, %"class.std::deque"** %268, align 8
  %270 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %13
  call void @_ZNKSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator.21"* sret %270, %"class.std::deque"* %269) #11
  %271 = load volatile i64*, i64** %19
  %272 = load i64, i64* %271, align 8
  %273 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %14
  %274 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %13
  call void @_ZNKSt15_Deque_iteratorIiRKiPS0_EplEl(%"struct.std::_Deque_iterator.21"* sret %273, %"struct.std::_Deque_iterator.21"* %274, i64 %272) #11
  %275 = load volatile %"class.std::deque"**, %"class.std::deque"*** %20
  %276 = load %"class.std::deque"*, %"class.std::deque"** %275, align 8
  %277 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %12
  call void @_ZNKSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator.21"* sret %277, %"class.std::deque"* %276) #11
  %278 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %11
  %279 = bitcast %"struct.std::_Deque_iterator.21"* %278 to i8*
  %280 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %14
  %281 = bitcast %"struct.std::_Deque_iterator.21"* %280 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %279, i8* %281, i64 32, i32 8, i1 false)
  %282 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %283 = bitcast %"class.std::deque"* %282 to %"class.std::_Deque_base"*
  %284 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %283, i32 0, i32 0
  %285 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %284, i32 0, i32 2
  %286 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %10
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %286, %"struct.std::_Deque_iterator"* dereferenceable(32) %285) #11
  %287 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %12
  %288 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %11
  %289 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %10
  %290 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %9
  call void @_ZSt4copyIiESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_(%"struct.std::_Deque_iterator"* sret %290, %"struct.std::_Deque_iterator.21"* byval align 8 %287, %"struct.std::_Deque_iterator.21"* byval align 8 %288, %"struct.std::_Deque_iterator"* %289)
  %291 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %292 = bitcast %"class.std::deque"* %291 to %"class.std::_Deque_base"*
  %293 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %292, i32 0, i32 0
  %294 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %293, i32 0, i32 3
  %295 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %8
  call void @_ZNSt15_Deque_iteratorIiRKiPS0_EC2ERKS_IiRiPiE(%"struct.std::_Deque_iterator.21"* %295, %"struct.std::_Deque_iterator"* dereferenceable(32) %294) #11
  %296 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %7
  %297 = bitcast %"struct.std::_Deque_iterator.21"* %296 to i8*
  %298 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %14
  %299 = bitcast %"struct.std::_Deque_iterator.21"* %298 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %297, i8* %299, i64 32, i32 8, i1 false)
  %300 = load volatile %"class.std::deque"**, %"class.std::deque"*** %20
  %301 = load %"class.std::deque"*, %"class.std::deque"** %300, align 8
  %302 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %6
  call void @_ZNKSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator.21"* sret %302, %"class.std::deque"* %301) #11
  %303 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %8
  %304 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %7
  %305 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %6
  %306 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %5
  %307 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  call void @_ZNSt5dequeIiSaIiEE6insertISt15_Deque_iteratorIiRKiPS4_EvEES3_IiRiPiES7_T_SB_(%"struct.std::_Deque_iterator"* sret %306, %"class.std::deque"* %307, %"struct.std::_Deque_iterator.21"* byval align 8 %303, %"struct.std::_Deque_iterator.21"* byval align 8 %304, %"struct.std::_Deque_iterator.21"* byval align 8 %305)
  store i32 -1408625363, i32* %33
  br label %309

; <label>:308:                                    ; preds = %34
  store i32 949650769, i32* %33
  br label %309

; <label>:309:                                    ; preds = %308, %267, %246, %228, %201, %200, %199, %143, %116, %98, %87, %84, %45, %37, %36
  br label %34
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt5dequeIiSaIiEE4sizeEv(%"class.std::deque"*) #1 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %5 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 3
  %7 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %8 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %8, i32 0, i32 2
  %10 = call i64 @_ZStmiIiRiPiENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS6_S9_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6, %"struct.std::_Deque_iterator"* dereferenceable(32) %9) #11
  ret i64 %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE15_M_erase_at_endESt15_Deque_iteratorIiRiPiE(%"class.std::deque"*, %"struct.std::_Deque_iterator"*) #1 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator", align 8
  %5 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  %6 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %4, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  call void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator"* sret %5, %"class.std::deque"* %6) #11
  %7 = bitcast %"class.std::deque"* %6 to %"class.std::_Deque_base"*
  %8 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %7) #11
  call void @_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_(%"class.std::deque"* %6, %"struct.std::_Deque_iterator"* %4, %"struct.std::_Deque_iterator"* %5, %"class.std::allocator.0"* dereferenceable(1) %8)
  %9 = bitcast %"class.std::deque"* %6 to %"class.std::_Deque_base"*
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %1, i32 0, i32 3
  %11 = load i32**, i32*** %10, align 8
  %12 = getelementptr inbounds i32*, i32** %11, i64 1
  %13 = bitcast %"class.std::deque"* %6 to %"class.std::_Deque_base"*
  %14 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %13, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %14, i32 0, i32 3
  %16 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %15, i32 0, i32 3
  %17 = load i32**, i32*** %16, align 8
  %18 = getelementptr inbounds i32*, i32** %17, i64 1
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %9, i32** %12, i32** %18) #11
  %19 = bitcast %"class.std::deque"* %6 to %"class.std::_Deque_base"*
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %20, i32 0, i32 3
  %22 = bitcast %"struct.std::_Deque_iterator"* %21 to i8*
  %23 = bitcast %"struct.std::_Deque_iterator"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 32, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4copyIiESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator"*) #2 comdat {
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = call i64 @_ZStmiIiRKiPS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_(%"struct.std::_Deque_iterator.21"* dereferenceable(32) %2, %"struct.std::_Deque_iterator.21"* dereferenceable(32) %1) #11
  store i64 %9, i64* %5, align 8
  %10 = alloca i32
  store i32 1928628423, i32* %10
  br label %11

; <label>:11:                                     ; preds = %4, %237
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 1928628423, label %14
    i32 -54310960, label %18
    i32 -1443986449, label %34
    i32 1722163539, label %103
    i32 387875749, label %104
    i32 -908825172, label %105
  ]

; <label>:13:                                     ; preds = %11
  br label %237

; <label>:14:                                     ; preds = %11
  %15 = load i64, i64* %5, align 8
  %16 = icmp sgt i64 %15, 0
  %17 = select i1 %16, i32 -54310960, i32 387875749
  store i32 %17, i32* %10
  br label %237

; <label>:18:                                     ; preds = %11
  %19 = load i32, i32* @x.565
  %20 = load i32, i32* @y.566
  %21 = add i32 %19, 588743483
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, 588743483
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 -1443986449, i32 -908825172
  store i32 %33, i32* %10
  br label %237

; <label>:34:                                     ; preds = %11
  %35 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %1, i32 0, i32 2
  %36 = load i32*, i32** %35, align 8
  %37 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %1, i32 0, i32 0
  %38 = load i32*, i32** %37, align 8
  %39 = ptrtoint i32* %36 to i64
  %40 = ptrtoint i32* %38 to i64
  %41 = sub i64 0, %40
  %42 = add i64 %39, %41
  %43 = sub i64 %39, %40
  %44 = sdiv exact i64 %42, 4
  store i64 %44, i64* %7, align 8
  %45 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 2
  %46 = load i32*, i32** %45, align 8
  %47 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = ptrtoint i32* %46 to i64
  %50 = ptrtoint i32* %48 to i64
  %51 = sub i64 0, %50
  %52 = add i64 %49, %51
  %53 = sub i64 %49, %50
  %54 = sdiv exact i64 %52, 4
  store i64 %54, i64* %8, align 8
  %55 = call dereferenceable(8) i64* @_ZSt3minIlERKT_S2_S2_(i64* dereferenceable(8) %7, i64* dereferenceable(8) %8)
  %56 = call dereferenceable(8) i64* @_ZSt3minIlERKT_S2_S2_(i64* dereferenceable(8) %5, i64* dereferenceable(8) %55)
  %57 = load i64, i64* %56, align 8
  store i64 %57, i64* %6, align 8
  %58 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %1, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8
  %60 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %1, i32 0, i32 0
  %61 = load i32*, i32** %60, align 8
  %62 = load i64, i64* %6, align 8
  %63 = getelementptr inbounds i32, i32* %61, i64 %62
  %64 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  %65 = load i32*, i32** %64, align 8
  %66 = call i32* @_ZSt4copyIPiS0_ET0_T_S2_S1_(i32* %59, i32* %63, i32* %65)
  %67 = load i64, i64* %6, align 8
  %68 = call dereferenceable(32) %"struct.std::_Deque_iterator.21"* @_ZNSt15_Deque_iteratorIiRKiPS0_EpLEl(%"struct.std::_Deque_iterator.21"* %1, i64 %67) #11
  %69 = load i64, i64* %6, align 8
  %70 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorIiRiPiEpLEl(%"struct.std::_Deque_iterator"* %3, i64 %69) #11
  %71 = load i64, i64* %6, align 8
  %72 = load i64, i64* %5, align 8
  %73 = add i64 %72, 3788228090887375541
  %74 = sub i64 %73, %71
  %75 = sub i64 %74, 3788228090887375541
  %76 = sub nsw i64 %72, %71
  store i64 %75, i64* %5, align 8
  %77 = load i32, i32* @x.565
  %78 = load i32, i32* @y.566
  %79 = sub i32 0, 1
  %80 = add i32 %77, %79
  %81 = sub i32 %77, 1
  %82 = mul i32 %77, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %78, 10
  %86 = xor i1 %84, true
  %87 = xor i1 %85, true
  %88 = xor i1 true, true
  %89 = and i1 %86, true
  %90 = and i1 %84, %88
  %91 = and i1 %87, true
  %92 = and i1 %85, %88
  %93 = or i1 %89, %90
  %94 = or i1 %91, %92
  %95 = xor i1 %93, %94
  %96 = or i1 %86, %87
  %97 = xor i1 %96, true
  %98 = or i1 true, %88
  %99 = and i1 %97, %98
  %100 = or i1 %95, %99
  %101 = or i1 %84, %85
  %102 = select i1 %100, i32 1722163539, i32 -908825172
  store i32 %102, i32* %10
  br label %237

; <label>:103:                                    ; preds = %11
  store i32 1928628423, i32* %10
  br label %237

; <label>:104:                                    ; preds = %11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #11
  ret void

; <label>:105:                                    ; preds = %11
  %106 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %1, i32 0, i32 2
  %107 = load i32*, i32** %106, align 8
  %108 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %1, i32 0, i32 0
  %109 = load i32*, i32** %108, align 8
  %110 = ptrtoint i32* %107 to i64
  %111 = ptrtoint i32* %109 to i64
  %112 = shl i64 %110, %111
  %113 = add i64 0, 5312928348060431483
  %114 = sub i64 %113, %110
  %115 = sub i64 %114, 5312928348060431483
  %116 = sub i64 0, %110
  %117 = sub i64 %115, 5440674716181141735
  %118 = add i64 %117, %111
  %119 = add i64 %118, 5440674716181141735
  %120 = add i64 %115, %111
  %121 = shl i64 %110, %111
  %122 = sub i64 0, %110
  %123 = add i64 0, %122
  %124 = sub i64 0, %110
  %125 = add i64 %123, -7383954476367689363
  %126 = add i64 %125, %111
  %127 = sub i64 %126, -7383954476367689363
  %128 = add i64 %123, %111
  %129 = sub i64 0, %111
  %130 = add i64 %110, %129
  %131 = sub i64 %110, %111
  %132 = mul i64 %130, %111
  %133 = sub i64 0, -4910234517205951670
  %134 = sub i64 %133, %110
  %135 = add i64 %134, -4910234517205951670
  %136 = sub i64 0, %110
  %137 = sub i64 0, %111
  %138 = sub i64 %135, %137
  %139 = add i64 %135, %111
  %140 = sub i64 0, -6743058442003416251
  %141 = sub i64 %140, %110
  %142 = add i64 %141, -6743058442003416251
  %143 = sub i64 0, %110
  %144 = sub i64 %142, 2610945745572937500
  %145 = add i64 %144, %111
  %146 = add i64 %145, 2610945745572937500
  %147 = add i64 %142, %111
  %148 = sub i64 0, %111
  %149 = add i64 %110, %148
  %150 = sub i64 %110, %111
  %151 = sub i64 0, 6047425711579287048
  %152 = sub i64 %151, %149
  %153 = add i64 %152, 6047425711579287048
  %154 = sub i64 0, %149
  %155 = add i64 %153, 7150096638916822548
  %156 = add i64 %155, 4
  %157 = sub i64 %156, 7150096638916822548
  %158 = add i64 %153, 4
  %159 = sdiv exact i64 %149, 4
  store i64 %159, i64* %7, align 8
  %160 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 2
  %161 = load i32*, i32** %160, align 8
  %162 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  %163 = load i32*, i32** %162, align 8
  %164 = ptrtoint i32* %161 to i64
  %165 = ptrtoint i32* %163 to i64
  %166 = sub i64 0, %164
  %167 = add i64 0, %166
  %168 = sub i64 0, %164
  %169 = sub i64 0, %165
  %170 = sub i64 %167, %169
  %171 = add i64 %167, %165
  %172 = shl i64 %164, %165
  %173 = sub i64 0, %165
  %174 = add i64 %164, %173
  %175 = sub i64 %164, %165
  %176 = shl i64 %174, 4
  %177 = sub i64 0, 4
  %178 = add i64 %174, %177
  %179 = sub i64 %174, 4
  %180 = mul i64 %178, 4
  %181 = sub i64 %174, -3719601397519157233
  %182 = sub i64 %181, 4
  %183 = add i64 %182, -3719601397519157233
  %184 = sub i64 %174, 4
  %185 = mul i64 %183, 4
  %186 = add i64 %174, 1995049424162316342
  %187 = sub i64 %186, 4
  %188 = sub i64 %187, 1995049424162316342
  %189 = sub i64 %174, 4
  %190 = mul i64 %188, 4
  %191 = sub i64 0, %174
  %192 = add i64 0, %191
  %193 = sub i64 0, %174
  %194 = sub i64 %192, 7116746997971006810
  %195 = add i64 %194, 4
  %196 = add i64 %195, 7116746997971006810
  %197 = add i64 %192, 4
  %198 = sdiv exact i64 %174, 4
  store i64 %198, i64* %8, align 8
  %199 = call dereferenceable(8) i64* @_ZSt3minIlERKT_S2_S2_(i64* dereferenceable(8) %7, i64* dereferenceable(8) %8)
  %200 = call dereferenceable(8) i64* @_ZSt3minIlERKT_S2_S2_(i64* dereferenceable(8) %5, i64* dereferenceable(8) %199)
  %201 = load i64, i64* %200, align 8
  store i64 %201, i64* %6, align 8
  %202 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %1, i32 0, i32 0
  %203 = load i32*, i32** %202, align 8
  %204 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %1, i32 0, i32 0
  %205 = load i32*, i32** %204, align 8
  %206 = load i64, i64* %6, align 8
  %207 = getelementptr inbounds i32, i32* %205, i64 %206
  %208 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  %209 = load i32*, i32** %208, align 8
  %210 = call i32* @_ZSt4copyIPiS0_ET0_T_S2_S1_(i32* %203, i32* %207, i32* %209)
  %211 = load i64, i64* %6, align 8
  %212 = call dereferenceable(32) %"struct.std::_Deque_iterator.21"* @_ZNSt15_Deque_iteratorIiRKiPS0_EpLEl(%"struct.std::_Deque_iterator.21"* %1, i64 %211) #11
  %213 = load i64, i64* %6, align 8
  %214 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorIiRiPiEpLEl(%"struct.std::_Deque_iterator"* %3, i64 %213) #11
  %215 = load i64, i64* %6, align 8
  %216 = load i64, i64* %5, align 8
  %217 = shl i64 %216, %215
  %218 = shl i64 %216, %215
  %219 = add i64 0, -3471472403572381882
  %220 = sub i64 %219, %216
  %221 = sub i64 %220, -3471472403572381882
  %222 = sub i64 0, %216
  %223 = sub i64 %221, 8625416287083471397
  %224 = add i64 %223, %215
  %225 = add i64 %224, 8625416287083471397
  %226 = add i64 %221, %215
  %227 = sub i64 0, %216
  %228 = add i64 0, %227
  %229 = sub i64 0, %216
  %230 = add i64 %228, 8916943322785458922
  %231 = add i64 %230, %215
  %232 = sub i64 %231, 8916943322785458922
  %233 = add i64 %228, %215
  %234 = sub i64 0, %215
  %235 = add i64 %216, %234
  %236 = sub nsw i64 %216, %215
  store i64 %235, i64* %5, align 8
  store i32 -1443986449, i32* %10
  br label %237

; <label>:237:                                    ; preds = %105, %103, %34, %18, %14, %13
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator.21"* noalias sret, %"class.std::deque"*) #1 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %3, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %5 = bitcast %"class.std::deque"* %4 to %"class.std::_Deque_base"*
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRKiPS0_EC2ERKS_IiRiPiE(%"struct.std::_Deque_iterator.21"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator.21"* noalias sret, %"class.std::deque"*) #1 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %3, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %5 = bitcast %"class.std::deque"* %4 to %"class.std::_Deque_base"*
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRKiPS0_EC2ERKS_IiRiPiE(%"struct.std::_Deque_iterator.21"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt15_Deque_iteratorIiRKiPS0_EplEl(%"struct.std::_Deque_iterator.21"* noalias sret, %"struct.std::_Deque_iterator.21"*, i64) #1 comdat align 2 {
  %4 = alloca %"struct.std::_Deque_iterator.21"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.std::_Deque_iterator.21", align 8
  store %"struct.std::_Deque_iterator.21"* %1, %"struct.std::_Deque_iterator.21"** %4, align 8
  store i64 %2, i64* %5, align 8
  %7 = load %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %4, align 8
  %8 = bitcast %"struct.std::_Deque_iterator.21"* %6 to i8*
  %9 = bitcast %"struct.std::_Deque_iterator.21"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 32, i32 8, i1 false)
  %10 = load i64, i64* %5, align 8
  %11 = call dereferenceable(32) %"struct.std::_Deque_iterator.21"* @_ZNSt15_Deque_iteratorIiRKiPS0_EpLEl(%"struct.std::_Deque_iterator.21"* %6, i64 %10) #11
  %12 = bitcast %"struct.std::_Deque_iterator.21"* %0 to i8*
  %13 = bitcast %"struct.std::_Deque_iterator.21"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 32, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE6insertISt15_Deque_iteratorIiRKiPS4_EvEES3_IiRiPiES7_T_SB_(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*, %"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator.21"* byval align 8) #2 comdat align 2 {
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"struct.std::_Deque_iterator.21", align 8
  %9 = alloca %"struct.std::_Deque_iterator", align 8
  %10 = alloca %"struct.std::_Deque_iterator.21", align 8
  %11 = alloca %"struct.std::_Deque_iterator.21", align 8
  %12 = alloca %"struct.std::__false_type", align 1
  %13 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %6, align 8
  %14 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  call void @_ZNKSt5dequeIiSaIiEE6cbeginEv(%"struct.std::_Deque_iterator.21"* sret %8, %"class.std::deque"* %14) #11
  %15 = call i64 @_ZStmiIiRKiPS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_(%"struct.std::_Deque_iterator.21"* dereferenceable(32) %2, %"struct.std::_Deque_iterator.21"* dereferenceable(32) %8) #11
  store i64 %15, i64* %7, align 8
  call void @_ZNKSt15_Deque_iteratorIiRKiPS0_E13_M_const_castEv(%"struct.std::_Deque_iterator"* sret %9, %"struct.std::_Deque_iterator.21"* %2) #11
  %16 = bitcast %"struct.std::_Deque_iterator.21"* %10 to i8*
  %17 = bitcast %"struct.std::_Deque_iterator.21"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 32, i32 8, i1 false)
  %18 = bitcast %"struct.std::_Deque_iterator.21"* %11 to i8*
  %19 = bitcast %"struct.std::_Deque_iterator.21"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 32, i32 8, i1 false)
  call void @_ZNSt5dequeIiSaIiEE18_M_insert_dispatchISt15_Deque_iteratorIiRKiPS4_EEEvS3_IiRiPiET_SB_St12__false_type(%"class.std::deque"* %14, %"struct.std::_Deque_iterator"* %9, %"struct.std::_Deque_iterator.21"* byval align 8 %10, %"struct.std::_Deque_iterator.21"* byval align 8 %11)
  call void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* sret %13, %"class.std::deque"* %14) #11
  %20 = load i64, i64* %7, align 8
  call void @_ZNKSt15_Deque_iteratorIiRiPiEplEl(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator"* %13, i64 %20) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRKiPS0_EC2ERKS_IiRiPiE(%"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator"* dereferenceable(32)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator.21"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator.21"* %0, %"struct.std::_Deque_iterator.21"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %5 = load %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  store i32* %9, i32** %6, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %5, i32 0, i32 1
  %11 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %11, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  store i32* %13, i32** %10, align 8
  %14 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %5, i32 0, i32 2
  %15 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %16 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %15, i32 0, i32 2
  %17 = load i32*, i32** %16, align 8
  store i32* %17, i32** %14, align 8
  %18 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %5, i32 0, i32 3
  %19 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %20 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %19, i32 0, i32 3
  %21 = load i32**, i32*** %20, align 8
  store i32** %21, i32*** %18, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZStmiIiRiPiENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS6_S9_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #1 comdat {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %5 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #11
  %6 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %6, i32 0, i32 3
  %8 = load i32**, i32*** %7, align 8
  %9 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %9, i32 0, i32 3
  %11 = load i32**, i32*** %10, align 8
  %12 = ptrtoint i32** %8 to i64
  %13 = ptrtoint i32** %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 8
  %18 = sub i64 0, 1
  %19 = add i64 %17, %18
  %20 = sub nsw i64 %17, 1
  %21 = mul nsw i64 %5, %19
  %22 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %23 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %22, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %26 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %25, i32 0, i32 1
  %27 = load i32*, i32** %26, align 8
  %28 = ptrtoint i32* %24 to i64
  %29 = ptrtoint i32* %27 to i64
  %30 = sub i64 0, %29
  %31 = add i64 %28, %30
  %32 = sub i64 %28, %29
  %33 = sdiv exact i64 %31, 4
  %34 = sub i64 0, %33
  %35 = sub i64 %21, %34
  %36 = add nsw i64 %21, %33
  %37 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %38 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %37, i32 0, i32 2
  %39 = load i32*, i32** %38, align 8
  %40 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %41 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %40, i32 0, i32 0
  %42 = load i32*, i32** %41, align 8
  %43 = ptrtoint i32* %39 to i64
  %44 = ptrtoint i32* %42 to i64
  %45 = add i64 %43, 6359667416655177916
  %46 = sub i64 %45, %44
  %47 = sub i64 %46, 6359667416655177916
  %48 = sub i64 %43, %44
  %49 = sdiv exact i64 %47, 4
  %50 = sub i64 %35, 4977931751125983982
  %51 = add i64 %50, %49
  %52 = add i64 %51, 4977931751125983982
  %53 = add nsw i64 %35, %49
  ret i64 %52
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZStmiIiRKiPS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_(%"struct.std::_Deque_iterator.21"* dereferenceable(32), %"struct.std::_Deque_iterator.21"* dereferenceable(32)) #1 comdat {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.579
  %7 = load i32, i32* @y.580
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1621495360, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %328
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1621495360, label %19
    i32 -1415424214, label %27
    i32 1163265771, label %98
    i32 -635452990, label %100
  ]

; <label>:18:                                     ; preds = %16
  br label %328

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1415424214, i32 -635452990
  store i32 %26, i32* %15
  br label %328

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Deque_iterator.21"*, align 8
  %29 = alloca %"struct.std::_Deque_iterator.21"*, align 8
  store %"struct.std::_Deque_iterator.21"* %0, %"struct.std::_Deque_iterator.21"** %28, align 8
  store %"struct.std::_Deque_iterator.21"* %1, %"struct.std::_Deque_iterator.21"** %29, align 8
  %30 = call i64 @_ZNSt15_Deque_iteratorIiRKiPS0_E14_S_buffer_sizeEv() #11
  %31 = load %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %28, align 8
  %32 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %31, i32 0, i32 3
  %33 = load i32**, i32*** %32, align 8
  %34 = load %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %29, align 8
  %35 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %34, i32 0, i32 3
  %36 = load i32**, i32*** %35, align 8
  %37 = ptrtoint i32** %33 to i64
  %38 = ptrtoint i32** %36 to i64
  %39 = add i64 %37, -8597534096446876431
  %40 = sub i64 %39, %38
  %41 = sub i64 %40, -8597534096446876431
  %42 = sub i64 %37, %38
  %43 = sdiv exact i64 %41, 8
  %44 = sub i64 %43, 6689244924242130358
  %45 = sub i64 %44, 1
  %46 = add i64 %45, 6689244924242130358
  %47 = sub nsw i64 %43, 1
  %48 = mul nsw i64 %30, %46
  %49 = load %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %28, align 8
  %50 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %49, i32 0, i32 0
  %51 = load i32*, i32** %50, align 8
  %52 = load %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %28, align 8
  %53 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %52, i32 0, i32 1
  %54 = load i32*, i32** %53, align 8
  %55 = ptrtoint i32* %51 to i64
  %56 = ptrtoint i32* %54 to i64
  %57 = sub i64 0, %56
  %58 = add i64 %55, %57
  %59 = sub i64 %55, %56
  %60 = sdiv exact i64 %58, 4
  %61 = sub i64 0, %48
  %62 = sub i64 0, %60
  %63 = add i64 %61, %62
  %64 = sub i64 0, %63
  %65 = add nsw i64 %48, %60
  %66 = load %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %29, align 8
  %67 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %66, i32 0, i32 2
  %68 = load i32*, i32** %67, align 8
  %69 = load %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %29, align 8
  %70 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %69, i32 0, i32 0
  %71 = load i32*, i32** %70, align 8
  %72 = ptrtoint i32* %68 to i64
  %73 = ptrtoint i32* %71 to i64
  %74 = add i64 %72, -6574215351486793874
  %75 = sub i64 %74, %73
  %76 = sub i64 %75, -6574215351486793874
  %77 = sub i64 %72, %73
  %78 = sdiv exact i64 %76, 4
  %79 = add i64 %64, -7241912157656899272
  %80 = add i64 %79, %78
  %81 = sub i64 %80, -7241912157656899272
  %82 = add nsw i64 %64, %78
  store i64 %81, i64* %3
  %83 = load i32, i32* @x.579
  %84 = load i32, i32* @y.580
  %85 = add i32 %83, -1316661639
  %86 = sub i32 %85, 1
  %87 = sub i32 %86, -1316661639
  %88 = sub i32 %83, 1
  %89 = mul i32 %83, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %84, 10
  %93 = and i1 %91, %92
  %94 = xor i1 %91, %92
  %95 = or i1 %93, %94
  %96 = or i1 %91, %92
  %97 = select i1 %95, i32 1163265771, i32 -635452990
  store i32 %97, i32* %15
  br label %328

; <label>:98:                                     ; preds = %16
  %99 = load volatile i64, i64* %3
  ret i64 %99

; <label>:100:                                    ; preds = %16
  %101 = alloca %"struct.std::_Deque_iterator.21"*, align 8
  %102 = alloca %"struct.std::_Deque_iterator.21"*, align 8
  store %"struct.std::_Deque_iterator.21"* %0, %"struct.std::_Deque_iterator.21"** %101, align 8
  store %"struct.std::_Deque_iterator.21"* %1, %"struct.std::_Deque_iterator.21"** %102, align 8
  %103 = call i64 @_ZNSt15_Deque_iteratorIiRKiPS0_E14_S_buffer_sizeEv() #11
  %104 = load %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %101, align 8
  %105 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %104, i32 0, i32 3
  %106 = load i32**, i32*** %105, align 8
  %107 = load %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %102, align 8
  %108 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %107, i32 0, i32 3
  %109 = load i32**, i32*** %108, align 8
  %110 = ptrtoint i32** %106 to i64
  %111 = ptrtoint i32** %109 to i64
  %112 = add i64 %110, 8876030017175118807
  %113 = sub i64 %112, %111
  %114 = sub i64 %113, 8876030017175118807
  %115 = sub i64 %110, %111
  %116 = mul i64 %114, %111
  %117 = shl i64 %110, %111
  %118 = sub i64 0, %110
  %119 = add i64 0, %118
  %120 = sub i64 0, %110
  %121 = sub i64 0, %111
  %122 = sub i64 %119, %121
  %123 = add i64 %119, %111
  %124 = sub i64 %110, -6645010631427229059
  %125 = sub i64 %124, %111
  %126 = add i64 %125, -6645010631427229059
  %127 = sub i64 %110, %111
  %128 = shl i64 %126, 8
  %129 = shl i64 %126, 8
  %130 = sub i64 0, %126
  %131 = add i64 0, %130
  %132 = sub i64 0, %126
  %133 = sub i64 0, %131
  %134 = sub i64 0, 8
  %135 = add i64 %133, %134
  %136 = sub i64 0, %135
  %137 = add i64 %131, 8
  %138 = sdiv exact i64 %126, 8
  %139 = sub i64 %138, -518287322753311249
  %140 = sub i64 %139, 1
  %141 = add i64 %140, -518287322753311249
  %142 = sub i64 %138, 1
  %143 = mul i64 %141, 1
  %144 = sub i64 0, 1
  %145 = add i64 %138, %144
  %146 = sub i64 %138, 1
  %147 = mul i64 %145, 1
  %148 = sub i64 0, -7718295804194819226
  %149 = sub i64 %148, %138
  %150 = add i64 %149, -7718295804194819226
  %151 = sub i64 0, %138
  %152 = sub i64 0, %150
  %153 = sub i64 0, 1
  %154 = add i64 %152, %153
  %155 = sub i64 0, %154
  %156 = add i64 %150, 1
  %157 = add i64 %138, 8933403361233434700
  %158 = sub i64 %157, 1
  %159 = sub i64 %158, 8933403361233434700
  %160 = sub i64 %138, 1
  %161 = mul i64 %159, 1
  %162 = shl i64 %138, 1
  %163 = sub i64 %138, 3853322653487935884
  %164 = sub i64 %163, 1
  %165 = add i64 %164, 3853322653487935884
  %166 = sub nsw i64 %138, 1
  %167 = add i64 %103, -520623745534126983
  %168 = sub i64 %167, %165
  %169 = sub i64 %168, -520623745534126983
  %170 = sub i64 %103, %165
  %171 = mul i64 %169, %165
  %172 = add i64 %103, -1453960786479559323
  %173 = sub i64 %172, %165
  %174 = sub i64 %173, -1453960786479559323
  %175 = sub i64 %103, %165
  %176 = mul i64 %174, %165
  %177 = sub i64 0, %165
  %178 = add i64 %103, %177
  %179 = sub i64 %103, %165
  %180 = mul i64 %178, %165
  %181 = sub i64 0, %103
  %182 = add i64 0, %181
  %183 = sub i64 0, %103
  %184 = sub i64 0, %165
  %185 = sub i64 %182, %184
  %186 = add i64 %182, %165
  %187 = mul nsw i64 %103, %165
  %188 = load %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %101, align 8
  %189 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %188, i32 0, i32 0
  %190 = load i32*, i32** %189, align 8
  %191 = load %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %101, align 8
  %192 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %191, i32 0, i32 1
  %193 = load i32*, i32** %192, align 8
  %194 = ptrtoint i32* %190 to i64
  %195 = ptrtoint i32* %193 to i64
  %196 = sub i64 0, 7772523297052907101
  %197 = sub i64 %196, %194
  %198 = add i64 %197, 7772523297052907101
  %199 = sub i64 0, %194
  %200 = add i64 %198, 4474418591786033869
  %201 = add i64 %200, %195
  %202 = sub i64 %201, 4474418591786033869
  %203 = add i64 %198, %195
  %204 = sub i64 0, %195
  %205 = add i64 %194, %204
  %206 = sub i64 %194, %195
  %207 = mul i64 %205, %195
  %208 = shl i64 %194, %195
  %209 = shl i64 %194, %195
  %210 = sub i64 %194, -1676205479175985677
  %211 = sub i64 %210, %195
  %212 = add i64 %211, -1676205479175985677
  %213 = sub i64 %194, %195
  %214 = mul i64 %212, %195
  %215 = add i64 %194, -4013458820833818379
  %216 = sub i64 %215, %195
  %217 = sub i64 %216, -4013458820833818379
  %218 = sub i64 %194, %195
  %219 = shl i64 %217, 4
  %220 = shl i64 %217, 4
  %221 = shl i64 %217, 4
  %222 = add i64 %217, -2804250711265130815
  %223 = sub i64 %222, 4
  %224 = sub i64 %223, -2804250711265130815
  %225 = sub i64 %217, 4
  %226 = mul i64 %224, 4
  %227 = sub i64 0, 4
  %228 = add i64 %217, %227
  %229 = sub i64 %217, 4
  %230 = mul i64 %228, 4
  %231 = sub i64 %217, -1127180702723512262
  %232 = sub i64 %231, 4
  %233 = add i64 %232, -1127180702723512262
  %234 = sub i64 %217, 4
  %235 = mul i64 %233, 4
  %236 = shl i64 %217, 4
  %237 = sdiv exact i64 %217, 4
  %238 = add i64 %187, -5008178262811881015
  %239 = sub i64 %238, %237
  %240 = sub i64 %239, -5008178262811881015
  %241 = sub i64 %187, %237
  %242 = mul i64 %240, %237
  %243 = add i64 %187, -8581441696503650415
  %244 = sub i64 %243, %237
  %245 = sub i64 %244, -8581441696503650415
  %246 = sub i64 %187, %237
  %247 = mul i64 %245, %237
  %248 = sub i64 0, %237
  %249 = add i64 %187, %248
  %250 = sub i64 %187, %237
  %251 = mul i64 %249, %237
  %252 = sub i64 0, %187
  %253 = add i64 0, %252
  %254 = sub i64 0, %187
  %255 = sub i64 0, %237
  %256 = sub i64 %253, %255
  %257 = add i64 %253, %237
  %258 = sub i64 %187, 8596639874788642794
  %259 = sub i64 %258, %237
  %260 = add i64 %259, 8596639874788642794
  %261 = sub i64 %187, %237
  %262 = mul i64 %260, %237
  %263 = sub i64 0, %187
  %264 = sub i64 0, %237
  %265 = add i64 %263, %264
  %266 = sub i64 0, %265
  %267 = add nsw i64 %187, %237
  %268 = load %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %102, align 8
  %269 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %268, i32 0, i32 2
  %270 = load i32*, i32** %269, align 8
  %271 = load %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %102, align 8
  %272 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %271, i32 0, i32 0
  %273 = load i32*, i32** %272, align 8
  %274 = ptrtoint i32* %270 to i64
  %275 = ptrtoint i32* %273 to i64
  %276 = add i64 %274, 4987051544479013491
  %277 = sub i64 %276, %275
  %278 = sub i64 %277, 4987051544479013491
  %279 = sub i64 %274, %275
  %280 = mul i64 %278, %275
  %281 = sub i64 0, -4445519717494778956
  %282 = sub i64 %281, %274
  %283 = add i64 %282, -4445519717494778956
  %284 = sub i64 0, %274
  %285 = add i64 %283, 2449319862948864137
  %286 = add i64 %285, %275
  %287 = sub i64 %286, 2449319862948864137
  %288 = add i64 %283, %275
  %289 = shl i64 %274, %275
  %290 = add i64 %274, -3568350122130559058
  %291 = sub i64 %290, %275
  %292 = sub i64 %291, -3568350122130559058
  %293 = sub i64 %274, %275
  %294 = mul i64 %292, %275
  %295 = sub i64 0, 335091509481591795
  %296 = sub i64 %295, %274
  %297 = add i64 %296, 335091509481591795
  %298 = sub i64 0, %274
  %299 = sub i64 %297, 2403620521806684221
  %300 = add i64 %299, %275
  %301 = add i64 %300, 2403620521806684221
  %302 = add i64 %297, %275
  %303 = sub i64 0, %274
  %304 = add i64 0, %303
  %305 = sub i64 0, %274
  %306 = sub i64 0, %275
  %307 = sub i64 %304, %306
  %308 = add i64 %304, %275
  %309 = add i64 %274, -8065292425779649083
  %310 = sub i64 %309, %275
  %311 = sub i64 %310, -8065292425779649083
  %312 = sub i64 %274, %275
  %313 = shl i64 %311, 4
  %314 = sdiv exact i64 %311, 4
  %315 = add i64 0, -8761264344981095331
  %316 = sub i64 %315, %266
  %317 = sub i64 %316, -8761264344981095331
  %318 = sub i64 0, %266
  %319 = sub i64 %317, 13488863640569552
  %320 = add i64 %319, %314
  %321 = add i64 %320, 13488863640569552
  %322 = add i64 %317, %314
  %323 = shl i64 %266, %314
  %324 = shl i64 %266, %314
  %325 = sub i64 0, %314
  %326 = sub i64 %266, %325
  %327 = add nsw i64 %266, %314
  store i32 -1415424214, i32* %15
  br label %328

; <label>:328:                                    ; preds = %100, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIlERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #1 comdat {
  %3 = alloca i64*
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  store i64* %0, i64** %7, align 8
  store i64* %1, i64** %8, align 8
  %9 = load i64*, i64** %8, align 8
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %5
  %11 = load i64*, i64** %7, align 8
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %4
  %13 = alloca i32
  store i32 2129368255, i32* %13
  br label %14

; <label>:14:                                     ; preds = %2, %120
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 2129368255, label %17
    i32 1220878150, label %22
    i32 667859007, label %38
    i32 602935850, label %67
    i32 74580881, label %68
    i32 1953599605, label %70
    i32 2009833148, label %85
    i32 -266425578, label %114
    i32 -1710669667, label %116
    i32 1875226170, label %118
  ]

; <label>:16:                                     ; preds = %14
  br label %120

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %5
  %19 = load volatile i64, i64* %4
  %20 = icmp slt i64 %18, %19
  %21 = select i1 %20, i32 1220878150, i32 74580881
  store i32 %21, i32* %13
  br label %120

; <label>:22:                                     ; preds = %14
  %23 = load i32, i32* @x.581
  %24 = load i32, i32* @y.582
  %25 = sub i32 %23, -1609782594
  %26 = sub i32 %25, 1
  %27 = add i32 %26, -1609782594
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  %37 = select i1 %35, i32 667859007, i32 -1710669667
  store i32 %37, i32* %13
  br label %120

; <label>:38:                                     ; preds = %14
  %39 = load i64*, i64** %8, align 8
  store i64* %39, i64** %6, align 8
  %40 = load i32, i32* @x.581
  %41 = load i32, i32* @y.582
  %42 = add i32 %40, -1121508089
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -1121508089
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 602935850, i32 -1710669667
  store i32 %66, i32* %13
  br label %120

; <label>:67:                                     ; preds = %14
  store i32 1953599605, i32* %13
  br label %120

; <label>:68:                                     ; preds = %14
  %69 = load i64*, i64** %7, align 8
  store i64* %69, i64** %6, align 8
  store i32 1953599605, i32* %13
  br label %120

; <label>:70:                                     ; preds = %14
  %71 = load i32, i32* @x.581
  %72 = load i32, i32* @y.582
  %73 = sub i32 0, 1
  %74 = add i32 %71, %73
  %75 = sub i32 %71, 1
  %76 = mul i32 %71, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %72, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  %84 = select i1 %82, i32 2009833148, i32 1875226170
  store i32 %84, i32* %13
  br label %120

; <label>:85:                                     ; preds = %14
  %86 = load i64*, i64** %6, align 8
  store i64* %86, i64** %3
  %87 = load i32, i32* @x.581
  %88 = load i32, i32* @y.582
  %89 = add i32 %87, 1936839262
  %90 = sub i32 %89, 1
  %91 = sub i32 %90, 1936839262
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 false, true
  %100 = and i1 %97, false
  %101 = and i1 %95, %99
  %102 = and i1 %98, false
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 false, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  %113 = select i1 %111, i32 -266425578, i32 1875226170
  store i32 %113, i32* %13
  br label %120

; <label>:114:                                    ; preds = %14
  %115 = load volatile i64*, i64** %3
  ret i64* %115

; <label>:116:                                    ; preds = %14
  %117 = load i64*, i64** %8, align 8
  store i64* %117, i64** %6, align 8
  store i32 667859007, i32* %13
  br label %120

; <label>:118:                                    ; preds = %14
  %119 = load i64*, i64** %6, align 8
  store i32 2009833148, i32* %13
  br label %120

; <label>:120:                                    ; preds = %118, %116, %85, %70, %68, %67, %38, %22, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator.21"* @_ZNSt15_Deque_iteratorIiRKiPS0_EpLEl(%"struct.std::_Deque_iterator.21"*, i64) #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i64
  %5 = alloca %"struct.std::_Deque_iterator.21"*
  %6 = alloca %"struct.std::_Deque_iterator.21"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  store %"struct.std::_Deque_iterator.21"* %0, %"struct.std::_Deque_iterator.21"** %6, align 8
  store i64 %1, i64* %7, align 8
  %10 = load %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %6, align 8
  store %"struct.std::_Deque_iterator.21"* %10, %"struct.std::_Deque_iterator.21"** %5
  %11 = load i64, i64* %7, align 8
  %12 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %5
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %12, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %5
  %16 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %15, i32 0, i32 1
  %17 = load i32*, i32** %16, align 8
  %18 = ptrtoint i32* %14 to i64
  %19 = ptrtoint i32* %17 to i64
  %20 = sub i64 0, %19
  %21 = add i64 %18, %20
  %22 = sub i64 %18, %19
  %23 = sdiv exact i64 %21, 4
  %24 = sub i64 0, %11
  %25 = sub i64 0, %23
  %26 = add i64 %24, %25
  %27 = sub i64 0, %26
  %28 = add nsw i64 %11, %23
  store i64 %27, i64* %8, align 8
  %29 = load i64, i64* %8, align 8
  store i64 %29, i64* %4
  %30 = alloca i32
  store i32 -985580002, i32* %30
  %31 = alloca i64
  br label %32

; <label>:32:                                     ; preds = %2, %170
  %33 = load i32, i32* %30
  switch i32 %33, label %34 [
    i32 -985580002, label %35
    i32 1064846155, label %39
    i32 612235605, label %54
    i32 551931740, label %73
    i32 -839630855, label %76
    i32 376856291, label %82
    i32 1146504536, label %86
    i32 -1116625119, label %90
    i32 933833958, label %110
    i32 -534474473, label %132
    i32 -1839044586, label %147
    i32 -1667830815, label %163
    i32 448489311, label %165
    i32 1280827057, label %169
  ]

; <label>:34:                                     ; preds = %32
  br label %170

; <label>:35:                                     ; preds = %32
  %36 = load volatile i64, i64* %4
  %37 = icmp sge i64 %36, 0
  %38 = select i1 %37, i32 1064846155, i32 376856291
  store i32 %38, i32* %30
  br label %170

; <label>:39:                                     ; preds = %32
  %40 = load i32, i32* @x.583
  %41 = load i32, i32* @y.584
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 612235605, i32 448489311
  store i32 %53, i32* %30
  br label %170

; <label>:54:                                     ; preds = %32
  %55 = load i64, i64* %8, align 8
  %56 = call i64 @_ZNSt15_Deque_iteratorIiRKiPS0_E14_S_buffer_sizeEv() #11
  %57 = icmp slt i64 %55, %56
  store i1 %57, i1* %3
  %58 = load i32, i32* @x.583
  %59 = load i32, i32* @y.584
  %60 = sub i32 %58, -2107435785
  %61 = sub i32 %60, 1
  %62 = add i32 %61, -2107435785
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  %72 = select i1 %70, i32 551931740, i32 448489311
  store i32 %72, i32* %30
  br label %170

; <label>:73:                                     ; preds = %32
  %74 = load volatile i1, i1* %3
  %75 = select i1 %74, i32 -839630855, i32 376856291
  store i32 %75, i32* %30
  br label %170

; <label>:76:                                     ; preds = %32
  %77 = load i64, i64* %7, align 8
  %78 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %5
  %79 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %78, i32 0, i32 0
  %80 = load i32*, i32** %79, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 %77
  store i32* %81, i32** %79, align 8
  store i32 -534474473, i32* %30
  br label %170

; <label>:82:                                     ; preds = %32
  %83 = load i64, i64* %8, align 8
  %84 = icmp sgt i64 %83, 0
  %85 = select i1 %84, i32 1146504536, i32 -1116625119
  store i32 %85, i32* %30
  br label %170

; <label>:86:                                     ; preds = %32
  %87 = load i64, i64* %8, align 8
  %88 = call i64 @_ZNSt15_Deque_iteratorIiRKiPS0_E14_S_buffer_sizeEv() #11
  %89 = sdiv i64 %87, %88
  store i32 933833958, i32* %30
  store i64 %89, i64* %31
  br label %170

; <label>:90:                                     ; preds = %32
  %91 = load i64, i64* %8, align 8
  %92 = add i64 0, 5356528082027806450
  %93 = sub i64 %92, %91
  %94 = sub i64 %93, 5356528082027806450
  %95 = sub nsw i64 0, %91
  %96 = add i64 %94, 9160202010155718862
  %97 = sub i64 %96, 1
  %98 = sub i64 %97, 9160202010155718862
  %99 = sub nsw i64 %94, 1
  %100 = call i64 @_ZNSt15_Deque_iteratorIiRKiPS0_E14_S_buffer_sizeEv() #11
  %101 = udiv i64 %98, %100
  %102 = add i64 0, -1878624279371550910
  %103 = sub i64 %102, %101
  %104 = sub i64 %103, -1878624279371550910
  %105 = sub nsw i64 0, %101
  %106 = add i64 %104, 1748836505933634583
  %107 = sub i64 %106, 1
  %108 = sub i64 %107, 1748836505933634583
  %109 = sub nsw i64 %104, 1
  store i32 933833958, i32* %30
  store i64 %108, i64* %31
  br label %170

; <label>:110:                                    ; preds = %32
  %111 = load i64, i64* %31
  store i64 %111, i64* %9, align 8
  %112 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %5
  %113 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %112, i32 0, i32 3
  %114 = load i32**, i32*** %113, align 8
  %115 = load i64, i64* %9, align 8
  %116 = getelementptr inbounds i32*, i32** %114, i64 %115
  %117 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %5
  call void @_ZNSt15_Deque_iteratorIiRKiPS0_E11_M_set_nodeEPPi(%"struct.std::_Deque_iterator.21"* %117, i32** %116) #11
  %118 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %5
  %119 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %118, i32 0, i32 1
  %120 = load i32*, i32** %119, align 8
  %121 = load i64, i64* %8, align 8
  %122 = load i64, i64* %9, align 8
  %123 = call i64 @_ZNSt15_Deque_iteratorIiRKiPS0_E14_S_buffer_sizeEv() #11
  %124 = mul nsw i64 %122, %123
  %125 = add i64 %121, -951757487830524541
  %126 = sub i64 %125, %124
  %127 = sub i64 %126, -951757487830524541
  %128 = sub nsw i64 %121, %124
  %129 = getelementptr inbounds i32, i32* %120, i64 %127
  %130 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %5
  %131 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %130, i32 0, i32 0
  store i32* %129, i32** %131, align 8
  store i32 -534474473, i32* %30
  br label %170

; <label>:132:                                    ; preds = %32
  %133 = load i32, i32* @x.583
  %134 = load i32, i32* @y.584
  %135 = sub i32 0, 1
  %136 = add i32 %133, %135
  %137 = sub i32 %133, 1
  %138 = mul i32 %133, %136
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %134, 10
  %142 = and i1 %140, %141
  %143 = xor i1 %140, %141
  %144 = or i1 %142, %143
  %145 = or i1 %140, %141
  %146 = select i1 %144, i32 -1839044586, i32 1280827057
  store i32 %146, i32* %30
  br label %170

; <label>:147:                                    ; preds = %32
  %148 = load i32, i32* @x.583
  %149 = load i32, i32* @y.584
  %150 = add i32 %148, 143372172
  %151 = sub i32 %150, 1
  %152 = sub i32 %151, 143372172
  %153 = sub i32 %148, 1
  %154 = mul i32 %148, %152
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %149, 10
  %158 = and i1 %156, %157
  %159 = xor i1 %156, %157
  %160 = or i1 %158, %159
  %161 = or i1 %156, %157
  %162 = select i1 %160, i32 -1667830815, i32 1280827057
  store i32 %162, i32* %30
  br label %170

; <label>:163:                                    ; preds = %32
  %164 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %5
  ret %"struct.std::_Deque_iterator.21"* %164

; <label>:165:                                    ; preds = %32
  %166 = load i64, i64* %8, align 8
  %167 = call i64 @_ZNSt15_Deque_iteratorIiRKiPS0_E14_S_buffer_sizeEv() #11
  %168 = icmp slt i64 %166, %167
  store i32 612235605, i32* %30
  br label %170

; <label>:169:                                    ; preds = %32
  store i32 -1839044586, i32* %30
  br label %170

; <label>:170:                                    ; preds = %169, %165, %147, %132, %110, %90, %86, %82, %76, %73, %54, %39, %35, %34
  br label %32
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorIiRiPiEpLEl(%"struct.std::_Deque_iterator"*, i64) #1 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Deque_iterator"*
  %5 = alloca %"struct.std::_Deque_iterator"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %5, align 8
  store i64 %1, i64* %6, align 8
  %9 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %5, align 8
  store %"struct.std::_Deque_iterator"* %9, %"struct.std::_Deque_iterator"** %4
  %10 = load i64, i64* %6, align 8
  %11 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %11, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %14, i32 0, i32 1
  %16 = load i32*, i32** %15, align 8
  %17 = ptrtoint i32* %13 to i64
  %18 = ptrtoint i32* %16 to i64
  %19 = add i64 %17, -6586898122283689317
  %20 = sub i64 %19, %18
  %21 = sub i64 %20, -6586898122283689317
  %22 = sub i64 %17, %18
  %23 = sdiv exact i64 %21, 4
  %24 = sub i64 0, %10
  %25 = sub i64 0, %23
  %26 = add i64 %24, %25
  %27 = sub i64 0, %26
  %28 = add nsw i64 %10, %23
  store i64 %27, i64* %7, align 8
  %29 = load i64, i64* %7, align 8
  store i64 %29, i64* %3
  %30 = alloca i32
  store i32 -1842771567, i32* %30
  %31 = alloca i64
  br label %32

; <label>:32:                                     ; preds = %2, %136
  %33 = load i32, i32* %30
  switch i32 %33, label %34 [
    i32 -1842771567, label %35
    i32 296692055, label %39
    i32 -1870627011, label %44
    i32 -351423061, label %59
    i32 465942801, label %80
    i32 -1814827742, label %81
    i32 92032624, label %85
    i32 -1290589402, label %89
    i32 1719998984, label %106
    i32 -340001385, label %128
    i32 1962524628, label %130
  ]

; <label>:34:                                     ; preds = %32
  br label %136

; <label>:35:                                     ; preds = %32
  %36 = load volatile i64, i64* %3
  %37 = icmp sge i64 %36, 0
  %38 = select i1 %37, i32 296692055, i32 -1814827742
  store i32 %38, i32* %30
  br label %136

; <label>:39:                                     ; preds = %32
  %40 = load i64, i64* %7, align 8
  %41 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #11
  %42 = icmp slt i64 %40, %41
  %43 = select i1 %42, i32 -1870627011, i32 -1814827742
  store i32 %43, i32* %30
  br label %136

; <label>:44:                                     ; preds = %32
  %45 = load i32, i32* @x.585
  %46 = load i32, i32* @y.586
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -351423061, i32 1962524628
  store i32 %58, i32* %30
  br label %136

; <label>:59:                                     ; preds = %32
  %60 = load i64, i64* %6, align 8
  %61 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %62 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %61, i32 0, i32 0
  %63 = load i32*, i32** %62, align 8
  %64 = getelementptr inbounds i32, i32* %63, i64 %60
  store i32* %64, i32** %62, align 8
  %65 = load i32, i32* @x.585
  %66 = load i32, i32* @y.586
  %67 = add i32 %65, -1304365168
  %68 = sub i32 %67, 1
  %69 = sub i32 %68, -1304365168
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  %79 = select i1 %77, i32 465942801, i32 1962524628
  store i32 %79, i32* %30
  br label %136

; <label>:80:                                     ; preds = %32
  store i32 -340001385, i32* %30
  br label %136

; <label>:81:                                     ; preds = %32
  %82 = load i64, i64* %7, align 8
  %83 = icmp sgt i64 %82, 0
  %84 = select i1 %83, i32 92032624, i32 -1290589402
  store i32 %84, i32* %30
  br label %136

; <label>:85:                                     ; preds = %32
  %86 = load i64, i64* %7, align 8
  %87 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #11
  %88 = sdiv i64 %86, %87
  store i32 1719998984, i32* %30
  store i64 %88, i64* %31
  br label %136

; <label>:89:                                     ; preds = %32
  %90 = load i64, i64* %7, align 8
  %91 = sub i64 0, %90
  %92 = add i64 0, %91
  %93 = sub nsw i64 0, %90
  %94 = sub i64 0, 1
  %95 = add i64 %92, %94
  %96 = sub nsw i64 %92, 1
  %97 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #11
  %98 = udiv i64 %95, %97
  %99 = sub i64 0, -3967678293294540534
  %100 = sub i64 %99, %98
  %101 = add i64 %100, -3967678293294540534
  %102 = sub nsw i64 0, %98
  %103 = sub i64 0, 1
  %104 = add i64 %101, %103
  %105 = sub nsw i64 %101, 1
  store i32 1719998984, i32* %30
  store i64 %104, i64* %31
  br label %136

; <label>:106:                                    ; preds = %32
  %107 = load i64, i64* %31
  store i64 %107, i64* %8, align 8
  %108 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %109 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %108, i32 0, i32 3
  %110 = load i32**, i32*** %109, align 8
  %111 = load i64, i64* %8, align 8
  %112 = getelementptr inbounds i32*, i32** %110, i64 %111
  %113 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %113, i32** %112) #11
  %114 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %115 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %114, i32 0, i32 1
  %116 = load i32*, i32** %115, align 8
  %117 = load i64, i64* %7, align 8
  %118 = load i64, i64* %8, align 8
  %119 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #11
  %120 = mul nsw i64 %118, %119
  %121 = add i64 %117, 1802595328539561888
  %122 = sub i64 %121, %120
  %123 = sub i64 %122, 1802595328539561888
  %124 = sub nsw i64 %117, %120
  %125 = getelementptr inbounds i32, i32* %116, i64 %123
  %126 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %127 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %126, i32 0, i32 0
  store i32* %125, i32** %127, align 8
  store i32 -340001385, i32* %30
  br label %136

; <label>:128:                                    ; preds = %32
  %129 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  ret %"struct.std::_Deque_iterator"* %129

; <label>:130:                                    ; preds = %32
  %131 = load i64, i64* %6, align 8
  %132 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %133 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %132, i32 0, i32 0
  %134 = load i32*, i32** %133, align 8
  %135 = getelementptr inbounds i32, i32* %134, i64 %131
  store i32* %135, i32** %133, align 8
  store i32 -351423061, i32* %30
  br label %136

; <label>:136:                                    ; preds = %130, %106, %89, %85, %81, %80, %59, %44, %39, %35, %34
  br label %32
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt15_Deque_iteratorIiRKiPS0_E14_S_buffer_sizeEv() #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = load i32, i32* @x.587
  %2 = load i32, i32* @y.588
  %3 = add i32 %1, 1430467589
  %4 = sub i32 %3, 1
  %5 = sub i32 %4, 1430467589
  %6 = sub i32 %1, 1
  %7 = mul i32 %1, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %2, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %36

; <label>:15:                                     ; preds = %0, %36
  %16 = load i32, i32* @x.587
  %17 = load i32, i32* @y.588
  %18 = add i32 %16, -1334154645
  %19 = sub i32 %18, 1
  %20 = sub i32 %19, -1334154645
  %21 = sub i32 %16, 1
  %22 = mul i32 %16, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %17, 10
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  br i1 %28, label %30, label %36

; <label>:30:                                     ; preds = %15
  %31 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %32 unwind label %33

; <label>:32:                                     ; preds = %30
  ret i64 %31

; <label>:33:                                     ; preds = %30
  %34 = landingpad { i8*, i32 }
          catch i8* null
  %35 = extractvalue { i8*, i32 } %34, 0
  call void @__clang_call_terminate(i8* %35) #9
  unreachable

; <label>:36:                                     ; preds = %15, %0
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRKiPS0_E11_M_set_nodeEPPi(%"struct.std::_Deque_iterator.21"*, i32**) #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.589
  %6 = load i32, i32* @y.590
  %7 = sub i32 %5, 464749555
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 464749555
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2098686633, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %82
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2098686633, label %19
    i32 755561831, label %39
    i32 716447299, label %67
    i32 -2088341562, label %68
  ]

; <label>:18:                                     ; preds = %16
  br label %82

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 755561831, i32 -2088341562
  store i32 %38, i32* %15
  br label %82

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Deque_iterator.21"*, align 8
  %41 = alloca i32**, align 8
  store %"struct.std::_Deque_iterator.21"* %0, %"struct.std::_Deque_iterator.21"** %40, align 8
  store i32** %1, i32*** %41, align 8
  %42 = load %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %40, align 8
  %43 = load i32**, i32*** %41, align 8
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %42, i32 0, i32 3
  store i32** %43, i32*** %44, align 8
  %45 = load i32**, i32*** %41, align 8
  %46 = load i32*, i32** %45, align 8
  %47 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %42, i32 0, i32 1
  store i32* %46, i32** %47, align 8
  %48 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %42, i32 0, i32 1
  %49 = load i32*, i32** %48, align 8
  %50 = call i64 @_ZNSt15_Deque_iteratorIiRKiPS0_E14_S_buffer_sizeEv() #11
  %51 = getelementptr inbounds i32, i32* %49, i64 %50
  %52 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %42, i32 0, i32 2
  store i32* %51, i32** %52, align 8
  %53 = load i32, i32* @x.589
  %54 = load i32, i32* @y.590
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 716447299, i32 -2088341562
  store i32 %66, i32* %15
  br label %82

; <label>:67:                                     ; preds = %16
  ret void

; <label>:68:                                     ; preds = %16
  %69 = alloca %"struct.std::_Deque_iterator.21"*, align 8
  %70 = alloca i32**, align 8
  store %"struct.std::_Deque_iterator.21"* %0, %"struct.std::_Deque_iterator.21"** %69, align 8
  store i32** %1, i32*** %70, align 8
  %71 = load %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %69, align 8
  %72 = load i32**, i32*** %70, align 8
  %73 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %71, i32 0, i32 3
  store i32** %72, i32*** %73, align 8
  %74 = load i32**, i32*** %70, align 8
  %75 = load i32*, i32** %74, align 8
  %76 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %71, i32 0, i32 1
  store i32* %75, i32** %76, align 8
  %77 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %71, i32 0, i32 1
  %78 = load i32*, i32** %77, align 8
  %79 = call i64 @_ZNSt15_Deque_iteratorIiRKiPS0_E14_S_buffer_sizeEv() #11
  %80 = getelementptr inbounds i32, i32* %78, i64 %79
  %81 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %71, i32 0, i32 2
  store i32* %80, i32** %81, align 8
  store i32 755561831, i32* %15
  br label %82

; <label>:82:                                     ; preds = %68, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt5dequeIiSaIiEE6cbeginEv(%"struct.std::_Deque_iterator.21"* noalias sret, %"class.std::deque"*) #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.591
  %6 = load i32, i32* @y.592
  %7 = add i32 %5, 604781244
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 604781244
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 964379929, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 964379929, label %19
    i32 1009059555, label %27
    i32 -1116062669, label %59
    i32 1657826907, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1009059555, i32 1657826907
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %28, align 8
  %29 = load %"class.std::deque"*, %"class.std::deque"** %28, align 8
  %30 = bitcast %"class.std::deque"* %29 to %"class.std::_Deque_base"*
  %31 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %31, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRKiPS0_EC2ERKS_IiRiPiE(%"struct.std::_Deque_iterator.21"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %32) #11
  %33 = load i32, i32* @x.591
  %34 = load i32, i32* @y.592
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -1116062669, i32 1657826907
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  ret void

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %61, align 8
  %62 = load %"class.std::deque"*, %"class.std::deque"** %61, align 8
  %63 = bitcast %"class.std::deque"* %62 to %"class.std::_Deque_base"*
  %64 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %64, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRKiPS0_EC2ERKS_IiRiPiE(%"struct.std::_Deque_iterator.21"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %65) #11
  store i32 1009059555, i32* %15
  br label %66

; <label>:66:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE18_M_insert_dispatchISt15_Deque_iteratorIiRKiPS4_EEEvS3_IiRiPiET_SB_St12__false_type(%"class.std::deque"*, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator.21"* byval align 8) #2 comdat align 2 {
  %5 = alloca %"struct.std::__false_type", align 1
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca %"struct.std::_Deque_iterator", align 8
  %8 = alloca %"struct.std::_Deque_iterator.21", align 8
  %9 = alloca %"struct.std::_Deque_iterator.21", align 8
  %10 = alloca %"struct.std::forward_iterator_tag", align 1
  %11 = alloca %"struct.std::random_access_iterator_tag", align 1
  store %"class.std::deque"* %0, %"class.std::deque"** %6, align 8
  %12 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %7, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  %13 = bitcast %"struct.std::_Deque_iterator.21"* %8 to i8*
  %14 = bitcast %"struct.std::_Deque_iterator.21"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 32, i32 8, i1 false)
  %15 = bitcast %"struct.std::_Deque_iterator.21"* %9 to i8*
  %16 = bitcast %"struct.std::_Deque_iterator.21"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 32, i32 8, i1 false)
  %17 = bitcast %"struct.std::random_access_iterator_tag"* %11 to %"struct.std::forward_iterator_tag"*
  call void @_ZNSt5dequeIiSaIiEE19_M_range_insert_auxISt15_Deque_iteratorIiRKiPS4_EEEvS3_IiRiPiET_SB_St20forward_iterator_tag(%"class.std::deque"* %12, %"struct.std::_Deque_iterator"* %7, %"struct.std::_Deque_iterator.21"* byval align 8 %8, %"struct.std::_Deque_iterator.21"* byval align 8 %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt15_Deque_iteratorIiRKiPS0_E13_M_const_castEv(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator.21"*) #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.595
  %6 = load i32, i32* @y.596
  %7 = add i32 %5, -1643046417
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1643046417
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1847608579, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1847608579, label %19
    i32 256161041, label %39
    i32 1591505217, label %73
    i32 -385204612, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 256161041, i32 -385204612
  store i32 %38, i32* %15
  br label %81

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Deque_iterator.21"*, align 8
  store %"struct.std::_Deque_iterator.21"* %1, %"struct.std::_Deque_iterator.21"** %40, align 8
  %41 = load %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %41, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %41, i32 0, i32 3
  %45 = load i32**, i32*** %44, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ES1_PS1_(%"struct.std::_Deque_iterator"* %0, i32* %43, i32** %45) #11
  %46 = load i32, i32* @x.595
  %47 = load i32, i32* @y.596
  %48 = sub i32 %46, -1455344219
  %49 = sub i32 %48, 1
  %50 = add i32 %49, -1455344219
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 1591505217, i32 -385204612
  store i32 %72, i32* %15
  br label %81

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"struct.std::_Deque_iterator.21"*, align 8
  store %"struct.std::_Deque_iterator.21"* %1, %"struct.std::_Deque_iterator.21"** %75, align 8
  %76 = load %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %75, align 8
  %77 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %76, i32 0, i32 0
  %78 = load i32*, i32** %77, align 8
  %79 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %76, i32 0, i32 3
  %80 = load i32**, i32*** %79, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ES1_PS1_(%"struct.std::_Deque_iterator"* %0, i32* %78, i32** %80) #11
  store i32 256161041, i32* %15
  br label %81

; <label>:81:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt15_Deque_iteratorIiRiPiEplEl(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator"*, i64) #1 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.597
  %7 = load i32, i32* @y.598
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1293321239, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %57
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1293321239, label %19
    i32 -408642489, label %27
    i32 -1256949157, label %49
    i32 753190405, label %50
  ]

; <label>:18:                                     ; preds = %16
  br label %57

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -408642489, i32 753190405
  store i32 %26, i32* %15
  br label %57

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Deque_iterator"*, align 8
  %29 = alloca i64, align 8
  %30 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %28, align 8
  store i64 %2, i64* %29, align 8
  %31 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %28, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %30, %"struct.std::_Deque_iterator"* dereferenceable(32) %31) #11
  %32 = load i64, i64* %29, align 8
  %33 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorIiRiPiEpLEl(%"struct.std::_Deque_iterator"* %30, i64 %32) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %33) #11
  %34 = load i32, i32* @x.597
  %35 = load i32, i32* @y.598
  %36 = add i32 %34, 61112621
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, 61112621
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -1256949157, i32 753190405
  store i32 %48, i32* %15
  br label %57

; <label>:49:                                     ; preds = %16
  ret void

; <label>:50:                                     ; preds = %16
  %51 = alloca %"struct.std::_Deque_iterator"*, align 8
  %52 = alloca i64, align 8
  %53 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %51, align 8
  store i64 %2, i64* %52, align 8
  %54 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %51, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %53, %"struct.std::_Deque_iterator"* dereferenceable(32) %54) #11
  %55 = load i64, i64* %52, align 8
  %56 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorIiRiPiEpLEl(%"struct.std::_Deque_iterator"* %53, i64 %55) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %56) #11
  store i32 -408642489, i32* %15
  br label %57

; <label>:57:                                     ; preds = %50, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE19_M_range_insert_auxISt15_Deque_iteratorIiRKiPS4_EEEvS3_IiRiPiET_SB_St20forward_iterator_tag(%"class.std::deque"*, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator.21"* byval align 8) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"struct.std::forward_iterator_tag", align 1
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"struct.std::_Deque_iterator.21", align 8
  %9 = alloca %"struct.std::_Deque_iterator.21", align 8
  %10 = alloca %"struct.std::_Deque_iterator", align 8
  %11 = alloca %"struct.std::_Deque_iterator.21", align 8
  %12 = alloca %"struct.std::_Deque_iterator.21", align 8
  %13 = alloca %"struct.std::_Deque_iterator", align 8
  %14 = alloca %"struct.std::_Deque_iterator", align 8
  %15 = alloca i8*
  %16 = alloca i32
  %17 = alloca %"struct.std::_Deque_iterator", align 8
  %18 = alloca %"struct.std::_Deque_iterator.21", align 8
  %19 = alloca %"struct.std::_Deque_iterator.21", align 8
  %20 = alloca %"struct.std::_Deque_iterator", align 8
  %21 = alloca %"struct.std::_Deque_iterator", align 8
  %22 = alloca %"struct.std::_Deque_iterator", align 8
  %23 = alloca %"struct.std::_Deque_iterator.21", align 8
  %24 = alloca %"struct.std::_Deque_iterator.21", align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %6, align 8
  %25 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  %26 = bitcast %"struct.std::_Deque_iterator.21"* %8 to i8*
  %27 = bitcast %"struct.std::_Deque_iterator.21"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 32, i32 8, i1 false)
  %28 = bitcast %"struct.std::_Deque_iterator.21"* %9 to i8*
  %29 = bitcast %"struct.std::_Deque_iterator.21"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 32, i32 8, i1 false)
  %30 = call i64 @_ZSt8distanceISt15_Deque_iteratorIiRKiPS1_EENSt15iterator_traitsIT_E15difference_typeES6_S6_(%"struct.std::_Deque_iterator.21"* byval align 8 %8, %"struct.std::_Deque_iterator.21"* byval align 8 %9)
  store i64 %30, i64* %7, align 8
  %31 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %1, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = bitcast %"class.std::deque"* %25 to %"class.std::_Deque_base"*
  %34 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %34, i32 0, i32 2
  %36 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %35, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = icmp eq i32* %32, %37
  br i1 %38, label %39, label %74

; <label>:39:                                     ; preds = %4
  %40 = load i64, i64* %7, align 8
  call void @_ZNSt5dequeIiSaIiEE28_M_reserve_elements_at_frontEm(%"struct.std::_Deque_iterator"* sret %10, %"class.std::deque"* %25, i64 %40)
  %41 = bitcast %"struct.std::_Deque_iterator.21"* %11 to i8*
  %42 = bitcast %"struct.std::_Deque_iterator.21"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 32, i32 8, i1 false)
  %43 = bitcast %"struct.std::_Deque_iterator.21"* %12 to i8*
  %44 = bitcast %"struct.std::_Deque_iterator.21"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 32, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %13, %"struct.std::_Deque_iterator"* dereferenceable(32) %10) #11
  %45 = bitcast %"class.std::deque"* %25 to %"class.std::_Deque_base"*
  %46 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %45) #11
  invoke void @_ZSt22__uninitialized_copy_aISt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEiET0_T_S9_S8_RSaIT1_E(%"struct.std::_Deque_iterator"* sret %14, %"struct.std::_Deque_iterator.21"* byval align 8 %11, %"struct.std::_Deque_iterator.21"* byval align 8 %12, %"struct.std::_Deque_iterator"* %13, %"class.std::allocator.0"* dereferenceable(1) %46)
          to label %47 unwind label %53

; <label>:47:                                     ; preds = %39
  %48 = bitcast %"class.std::deque"* %25 to %"class.std::_Deque_base"*
  %49 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %48, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %49, i32 0, i32 2
  %51 = bitcast %"struct.std::_Deque_iterator"* %50 to i8*
  %52 = bitcast %"struct.std::_Deque_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 32, i32 8, i1 false)
  br label %73

; <label>:53:                                     ; preds = %39
  %54 = landingpad { i8*, i32 }
          catch i8* null
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %15, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %16, align 4
  br label %57

; <label>:57:                                     ; preds = %53
  %58 = load i8*, i8** %15, align 8
  %59 = call i8* @__cxa_begin_catch(i8* %58) #11
  %60 = bitcast %"class.std::deque"* %25 to %"class.std::_Deque_base"*
  %61 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %10, i32 0, i32 3
  %62 = load i32**, i32*** %61, align 8
  %63 = bitcast %"class.std::deque"* %25 to %"class.std::_Deque_base"*
  %64 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %64, i32 0, i32 2
  %66 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %65, i32 0, i32 3
  %67 = load i32**, i32*** %66, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %60, i32** %62, i32** %67) #11
  invoke void @__cxa_rethrow() #13
          to label %395 unwind label %68

; <label>:68:                                     ; preds = %57
  %69 = landingpad { i8*, i32 }
          cleanup
  %70 = extractvalue { i8*, i32 } %69, 0
  store i8* %70, i8** %15, align 8
  %71 = extractvalue { i8*, i32 } %69, 1
  store i32 %71, i32* %16, align 4
  invoke void @__cxa_end_catch()
          to label %72 unwind label %364

; <label>:72:                                     ; preds = %68
  br label %307

; <label>:73:                                     ; preds = %47
  br label %277

; <label>:74:                                     ; preds = %4
  %75 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %1, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = bitcast %"class.std::deque"* %25 to %"class.std::_Deque_base"*
  %78 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %77, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %78, i32 0, i32 3
  %80 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %79, i32 0, i32 0
  %81 = load i32*, i32** %80, align 8
  %82 = icmp eq i32* %76, %81
  br i1 %82, label %83, label %217

; <label>:83:                                     ; preds = %74
  %84 = load i32, i32* @x.599
  %85 = load i32, i32* @y.600
  %86 = sub i32 %84, 173631139
  %87 = sub i32 %86, 1
  %88 = add i32 %87, 173631139
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = xor i1 %92, true
  %95 = xor i1 %93, true
  %96 = xor i1 true, true
  %97 = and i1 %94, true
  %98 = and i1 %92, %96
  %99 = and i1 %95, true
  %100 = and i1 %93, %96
  %101 = or i1 %97, %98
  %102 = or i1 %99, %100
  %103 = xor i1 %101, %102
  %104 = or i1 %94, %95
  %105 = xor i1 %104, true
  %106 = or i1 true, %96
  %107 = and i1 %105, %106
  %108 = or i1 %103, %107
  %109 = or i1 %92, %93
  br i1 %108, label %110, label %396

; <label>:110:                                    ; preds = %83, %396
  %111 = load i64, i64* %7, align 8
  call void @_ZNSt5dequeIiSaIiEE27_M_reserve_elements_at_backEm(%"struct.std::_Deque_iterator"* sret %17, %"class.std::deque"* %25, i64 %111)
  %112 = bitcast %"struct.std::_Deque_iterator.21"* %18 to i8*
  %113 = bitcast %"struct.std::_Deque_iterator.21"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %112, i8* %113, i64 32, i32 8, i1 false)
  %114 = bitcast %"struct.std::_Deque_iterator.21"* %19 to i8*
  %115 = bitcast %"struct.std::_Deque_iterator.21"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %114, i8* %115, i64 32, i32 8, i1 false)
  %116 = bitcast %"class.std::deque"* %25 to %"class.std::_Deque_base"*
  %117 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %116, i32 0, i32 0
  %118 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %117, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %20, %"struct.std::_Deque_iterator"* dereferenceable(32) %118) #11
  %119 = bitcast %"class.std::deque"* %25 to %"class.std::_Deque_base"*
  %120 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %119) #11
  %121 = load i32, i32* @x.599
  %122 = load i32, i32* @y.600
  %123 = sub i32 %121, 558793316
  %124 = sub i32 %123, 1
  %125 = add i32 %124, 558793316
  %126 = sub i32 %121, 1
  %127 = mul i32 %121, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %122, 10
  %131 = xor i1 %129, true
  %132 = xor i1 %130, true
  %133 = xor i1 true, true
  %134 = and i1 %131, true
  %135 = and i1 %129, %133
  %136 = and i1 %132, true
  %137 = and i1 %130, %133
  %138 = or i1 %134, %135
  %139 = or i1 %136, %137
  %140 = xor i1 %138, %139
  %141 = or i1 %131, %132
  %142 = xor i1 %141, true
  %143 = or i1 true, %133
  %144 = and i1 %142, %143
  %145 = or i1 %140, %144
  %146 = or i1 %129, %130
  br i1 %145, label %147, label %396

; <label>:147:                                    ; preds = %110
  invoke void @_ZSt22__uninitialized_copy_aISt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEiET0_T_S9_S8_RSaIT1_E(%"struct.std::_Deque_iterator"* sret %21, %"struct.std::_Deque_iterator.21"* byval align 8 %18, %"struct.std::_Deque_iterator.21"* byval align 8 %19, %"struct.std::_Deque_iterator"* %20, %"class.std::allocator.0"* dereferenceable(1) %120)
          to label %148 unwind label %154

; <label>:148:                                    ; preds = %147
  %149 = bitcast %"class.std::deque"* %25 to %"class.std::_Deque_base"*
  %150 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %149, i32 0, i32 0
  %151 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %150, i32 0, i32 3
  %152 = bitcast %"struct.std::_Deque_iterator"* %151 to i8*
  %153 = bitcast %"struct.std::_Deque_iterator"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %152, i8* %153, i64 32, i32 8, i1 false)
  br label %176

; <label>:154:                                    ; preds = %147
  %155 = landingpad { i8*, i32 }
          catch i8* null
  %156 = extractvalue { i8*, i32 } %155, 0
  store i8* %156, i8** %15, align 8
  %157 = extractvalue { i8*, i32 } %155, 1
  store i32 %157, i32* %16, align 4
  br label %158

; <label>:158:                                    ; preds = %154
  %159 = load i8*, i8** %15, align 8
  %160 = call i8* @__cxa_begin_catch(i8* %159) #11
  %161 = bitcast %"class.std::deque"* %25 to %"class.std::_Deque_base"*
  %162 = bitcast %"class.std::deque"* %25 to %"class.std::_Deque_base"*
  %163 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %162, i32 0, i32 0
  %164 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %163, i32 0, i32 3
  %165 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %164, i32 0, i32 3
  %166 = load i32**, i32*** %165, align 8
  %167 = getelementptr inbounds i32*, i32** %166, i64 1
  %168 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %17, i32 0, i32 3
  %169 = load i32**, i32*** %168, align 8
  %170 = getelementptr inbounds i32*, i32** %169, i64 1
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %161, i32** %167, i32** %170) #11
  invoke void @__cxa_rethrow() #13
          to label %395 unwind label %171

; <label>:171:                                    ; preds = %158
  %172 = landingpad { i8*, i32 }
          cleanup
  %173 = extractvalue { i8*, i32 } %172, 0
  store i8* %173, i8** %15, align 8
  %174 = extractvalue { i8*, i32 } %172, 1
  store i32 %174, i32* %16, align 4
  invoke void @__cxa_end_catch()
          to label %175 unwind label %364

; <label>:175:                                    ; preds = %171
  br label %307

; <label>:176:                                    ; preds = %148
  %177 = load i32, i32* @x.599
  %178 = load i32, i32* @y.600
  %179 = sub i32 0, 1
  %180 = add i32 %177, %179
  %181 = sub i32 %177, 1
  %182 = mul i32 %177, %180
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %178, 10
  %186 = xor i1 %184, true
  %187 = xor i1 %185, true
  %188 = xor i1 false, true
  %189 = and i1 %186, false
  %190 = and i1 %184, %188
  %191 = and i1 %187, false
  %192 = and i1 %185, %188
  %193 = or i1 %189, %190
  %194 = or i1 %191, %192
  %195 = xor i1 %193, %194
  %196 = or i1 %186, %187
  %197 = xor i1 %196, true
  %198 = or i1 false, %188
  %199 = and i1 %197, %198
  %200 = or i1 %195, %199
  %201 = or i1 %184, %185
  br i1 %200, label %202, label %407

; <label>:202:                                    ; preds = %176, %407
  %203 = load i32, i32* @x.599
  %204 = load i32, i32* @y.600
  %205 = sub i32 0, 1
  %206 = add i32 %203, %205
  %207 = sub i32 %203, 1
  %208 = mul i32 %203, %206
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %204, 10
  %212 = and i1 %210, %211
  %213 = xor i1 %210, %211
  %214 = or i1 %212, %213
  %215 = or i1 %210, %211
  br i1 %214, label %216, label %407

; <label>:216:                                    ; preds = %202
  br label %223

; <label>:217:                                    ; preds = %74
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %22, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  %218 = bitcast %"struct.std::_Deque_iterator.21"* %23 to i8*
  %219 = bitcast %"struct.std::_Deque_iterator.21"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %218, i8* %219, i64 32, i32 8, i1 false)
  %220 = bitcast %"struct.std::_Deque_iterator.21"* %24 to i8*
  %221 = bitcast %"struct.std::_Deque_iterator.21"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %220, i8* %221, i64 32, i32 8, i1 false)
  %222 = load i64, i64* %7, align 8
  call void @_ZNSt5dequeIiSaIiEE13_M_insert_auxISt15_Deque_iteratorIiRKiPS4_EEEvS3_IiRiPiET_SB_m(%"class.std::deque"* %25, %"struct.std::_Deque_iterator"* %22, %"struct.std::_Deque_iterator.21"* byval align 8 %23, %"struct.std::_Deque_iterator.21"* byval align 8 %24, i64 %222)
  br label %223

; <label>:223:                                    ; preds = %217, %216
  %224 = load i32, i32* @x.599
  %225 = load i32, i32* @y.600
  %226 = add i32 %224, 1076299223
  %227 = sub i32 %226, 1
  %228 = sub i32 %227, 1076299223
  %229 = sub i32 %224, 1
  %230 = mul i32 %224, %228
  %231 = urem i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %225, 10
  %234 = xor i1 %232, true
  %235 = xor i1 %233, true
  %236 = xor i1 true, true
  %237 = and i1 %234, true
  %238 = and i1 %232, %236
  %239 = and i1 %235, true
  %240 = and i1 %233, %236
  %241 = or i1 %237, %238
  %242 = or i1 %239, %240
  %243 = xor i1 %241, %242
  %244 = or i1 %234, %235
  %245 = xor i1 %244, true
  %246 = or i1 true, %236
  %247 = and i1 %245, %246
  %248 = or i1 %243, %247
  %249 = or i1 %232, %233
  br i1 %248, label %250, label %408

; <label>:250:                                    ; preds = %223, %408
  %251 = load i32, i32* @x.599
  %252 = load i32, i32* @y.600
  %253 = sub i32 0, 1
  %254 = add i32 %251, %253
  %255 = sub i32 %251, 1
  %256 = mul i32 %251, %254
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %252, 10
  %260 = xor i1 %258, true
  %261 = xor i1 %259, true
  %262 = xor i1 false, true
  %263 = and i1 %260, false
  %264 = and i1 %258, %262
  %265 = and i1 %261, false
  %266 = and i1 %259, %262
  %267 = or i1 %263, %264
  %268 = or i1 %265, %266
  %269 = xor i1 %267, %268
  %270 = or i1 %260, %261
  %271 = xor i1 %270, true
  %272 = or i1 false, %262
  %273 = and i1 %271, %272
  %274 = or i1 %269, %273
  %275 = or i1 %258, %259
  br i1 %274, label %276, label %408

; <label>:276:                                    ; preds = %250
  br label %277

; <label>:277:                                    ; preds = %276, %73
  %278 = load i32, i32* @x.599
  %279 = load i32, i32* @y.600
  %280 = add i32 %278, -2014359120
  %281 = sub i32 %280, 1
  %282 = sub i32 %281, -2014359120
  %283 = sub i32 %278, 1
  %284 = mul i32 %278, %282
  %285 = urem i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %279, 10
  %288 = and i1 %286, %287
  %289 = xor i1 %286, %287
  %290 = or i1 %288, %289
  %291 = or i1 %286, %287
  br i1 %290, label %292, label %409

; <label>:292:                                    ; preds = %277, %409
  %293 = load i32, i32* @x.599
  %294 = load i32, i32* @y.600
  %295 = sub i32 0, 1
  %296 = add i32 %293, %295
  %297 = sub i32 %293, 1
  %298 = mul i32 %293, %296
  %299 = urem i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %294, 10
  %302 = and i1 %300, %301
  %303 = xor i1 %300, %301
  %304 = or i1 %302, %303
  %305 = or i1 %300, %301
  br i1 %304, label %306, label %409

; <label>:306:                                    ; preds = %292
  ret void

; <label>:307:                                    ; preds = %175, %72
  %308 = load i32, i32* @x.599
  %309 = load i32, i32* @y.600
  %310 = sub i32 0, 1
  %311 = add i32 %308, %310
  %312 = sub i32 %308, 1
  %313 = mul i32 %308, %311
  %314 = urem i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %309, 10
  %317 = xor i1 %315, true
  %318 = xor i1 %316, true
  %319 = xor i1 false, true
  %320 = and i1 %317, false
  %321 = and i1 %315, %319
  %322 = and i1 %318, false
  %323 = and i1 %316, %319
  %324 = or i1 %320, %321
  %325 = or i1 %322, %323
  %326 = xor i1 %324, %325
  %327 = or i1 %317, %318
  %328 = xor i1 %327, true
  %329 = or i1 false, %319
  %330 = and i1 %328, %329
  %331 = or i1 %326, %330
  %332 = or i1 %315, %316
  br i1 %331, label %333, label %410

; <label>:333:                                    ; preds = %307, %410
  %334 = load i8*, i8** %15, align 8
  %335 = load i32, i32* %16, align 4
  %336 = insertvalue { i8*, i32 } undef, i8* %334, 0
  %337 = insertvalue { i8*, i32 } %336, i32 %335, 1
  %338 = load i32, i32* @x.599
  %339 = load i32, i32* @y.600
  %340 = sub i32 0, 1
  %341 = add i32 %338, %340
  %342 = sub i32 %338, 1
  %343 = mul i32 %338, %341
  %344 = urem i32 %343, 2
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %339, 10
  %347 = xor i1 %345, true
  %348 = xor i1 %346, true
  %349 = xor i1 true, true
  %350 = and i1 %347, true
  %351 = and i1 %345, %349
  %352 = and i1 %348, true
  %353 = and i1 %346, %349
  %354 = or i1 %350, %351
  %355 = or i1 %352, %353
  %356 = xor i1 %354, %355
  %357 = or i1 %347, %348
  %358 = xor i1 %357, true
  %359 = or i1 true, %349
  %360 = and i1 %358, %359
  %361 = or i1 %356, %360
  %362 = or i1 %345, %346
  br i1 %361, label %363, label %410

; <label>:363:                                    ; preds = %333
  resume { i8*, i32 } %337

; <label>:364:                                    ; preds = %171, %68
  %365 = load i32, i32* @x.599
  %366 = load i32, i32* @y.600
  %367 = sub i32 0, 1
  %368 = add i32 %365, %367
  %369 = sub i32 %365, 1
  %370 = mul i32 %365, %368
  %371 = urem i32 %370, 2
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %366, 10
  %374 = and i1 %372, %373
  %375 = xor i1 %372, %373
  %376 = or i1 %374, %375
  %377 = or i1 %372, %373
  br i1 %376, label %378, label %415

; <label>:378:                                    ; preds = %364, %415
  %379 = landingpad { i8*, i32 }
          catch i8* null
  %380 = extractvalue { i8*, i32 } %379, 0
  call void @__clang_call_terminate(i8* %380) #9
  %381 = load i32, i32* @x.599
  %382 = load i32, i32* @y.600
  %383 = sub i32 0, 1
  %384 = add i32 %381, %383
  %385 = sub i32 %381, 1
  %386 = mul i32 %381, %384
  %387 = urem i32 %386, 2
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %382, 10
  %390 = and i1 %388, %389
  %391 = xor i1 %388, %389
  %392 = or i1 %390, %391
  %393 = or i1 %388, %389
  br i1 %392, label %394, label %415

; <label>:394:                                    ; preds = %378
  unreachable

; <label>:395:                                    ; preds = %158, %57
  unreachable

; <label>:396:                                    ; preds = %110, %83
  %397 = load i64, i64* %7, align 8
  call void @_ZNSt5dequeIiSaIiEE27_M_reserve_elements_at_backEm(%"struct.std::_Deque_iterator"* sret %17, %"class.std::deque"* %25, i64 %397)
  %398 = bitcast %"struct.std::_Deque_iterator.21"* %18 to i8*
  %399 = bitcast %"struct.std::_Deque_iterator.21"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %398, i8* %399, i64 32, i32 8, i1 false)
  %400 = bitcast %"struct.std::_Deque_iterator.21"* %19 to i8*
  %401 = bitcast %"struct.std::_Deque_iterator.21"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %400, i8* %401, i64 32, i32 8, i1 false)
  %402 = bitcast %"class.std::deque"* %25 to %"class.std::_Deque_base"*
  %403 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %402, i32 0, i32 0
  %404 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %403, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %20, %"struct.std::_Deque_iterator"* dereferenceable(32) %404) #11
  %405 = bitcast %"class.std::deque"* %25 to %"class.std::_Deque_base"*
  %406 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %405) #11
  br label %110

; <label>:407:                                    ; preds = %202, %176
  br label %202

; <label>:408:                                    ; preds = %250, %223
  br label %250

; <label>:409:                                    ; preds = %292, %277
  br label %292

; <label>:410:                                    ; preds = %333, %307
  %411 = load i8*, i8** %15, align 8
  %412 = load i32, i32* %16, align 4
  %413 = insertvalue { i8*, i32 } undef, i8* %411, 0
  %414 = insertvalue { i8*, i32 } %413, i32 %412, 1
  br label %333

; <label>:415:                                    ; preds = %378, %364
  %416 = landingpad { i8*, i32 }
          catch i8* null
  %417 = extractvalue { i8*, i32 } %416, 0
  call void @__clang_call_terminate(i8* %417) #9
  br label %378
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZSt8distanceISt15_Deque_iteratorIiRKiPS1_EENSt15iterator_traitsIT_E15difference_typeES6_S6_(%"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator.21"* byval align 8) #2 comdat {
  %3 = alloca %"struct.std::_Deque_iterator.21", align 8
  %4 = alloca %"struct.std::_Deque_iterator.21", align 8
  %5 = alloca %"struct.std::random_access_iterator_tag", align 1
  %6 = alloca %"struct.std::random_access_iterator_tag", align 1
  %7 = bitcast %"struct.std::_Deque_iterator.21"* %3 to i8*
  %8 = bitcast %"struct.std::_Deque_iterator.21"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %8, i64 32, i32 8, i1 false)
  %9 = bitcast %"struct.std::_Deque_iterator.21"* %4 to i8*
  %10 = bitcast %"struct.std::_Deque_iterator.21"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 32, i32 8, i1 false)
  call void @_ZSt19__iterator_categoryISt15_Deque_iteratorIiRKiPS1_EENSt15iterator_traitsIT_E17iterator_categoryERKS6_(%"struct.std::_Deque_iterator.21"* dereferenceable(32) %0)
  %11 = call i64 @_ZSt10__distanceISt15_Deque_iteratorIiRKiPS1_EENSt15iterator_traitsIT_E15difference_typeES6_S6_St26random_access_iterator_tag(%"struct.std::_Deque_iterator.21"* byval align 8 %3, %"struct.std::_Deque_iterator.21"* byval align 8 %4)
  ret i64 %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE28_M_reserve_elements_at_frontEm(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*, i64) #2 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.std::deque"*
  %7 = alloca %"class.std::deque"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %7, align 8
  store i64 %2, i64* %8, align 8
  %10 = load %"class.std::deque"*, %"class.std::deque"** %7, align 8
  store %"class.std::deque"* %10, %"class.std::deque"** %6
  %11 = load volatile %"class.std::deque"*, %"class.std::deque"** %6
  %12 = bitcast %"class.std::deque"* %11 to %"class.std::_Deque_base"*
  %13 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %13, i32 0, i32 2
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %14, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = load volatile %"class.std::deque"*, %"class.std::deque"** %6
  %18 = bitcast %"class.std::deque"* %17 to %"class.std::_Deque_base"*
  %19 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %18, i32 0, i32 0
  %20 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %19, i32 0, i32 2
  %21 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %20, i32 0, i32 1
  %22 = load i32*, i32** %21, align 8
  %23 = ptrtoint i32* %16 to i64
  %24 = ptrtoint i32* %22 to i64
  %25 = sub i64 0, %24
  %26 = add i64 %23, %25
  %27 = sub i64 %23, %24
  %28 = sdiv exact i64 %26, 4
  store i64 %28, i64* %9, align 8
  %29 = load i64, i64* %8, align 8
  store i64 %29, i64* %5
  %30 = load i64, i64* %9, align 8
  store i64 %30, i64* %4
  %31 = alloca i32
  store i32 -680327088, i32* %31
  br label %32

; <label>:32:                                     ; preds = %3, %54
  %33 = load i32, i32* %31
  switch i32 %33, label %34 [
    i32 -680327088, label %35
    i32 1722818663, label %40
    i32 506002872, label %48
  ]

; <label>:34:                                     ; preds = %32
  br label %54

; <label>:35:                                     ; preds = %32
  %36 = load volatile i64, i64* %5
  %37 = load volatile i64, i64* %4
  %38 = icmp ugt i64 %36, %37
  %39 = select i1 %38, i32 1722818663, i32 506002872
  store i32 %39, i32* %31
  br label %54

; <label>:40:                                     ; preds = %32
  %41 = load i64, i64* %8, align 8
  %42 = load i64, i64* %9, align 8
  %43 = add i64 %41, -6362451619626242581
  %44 = sub i64 %43, %42
  %45 = sub i64 %44, -6362451619626242581
  %46 = sub i64 %41, %42
  %47 = load volatile %"class.std::deque"*, %"class.std::deque"** %6
  call void @_ZNSt5dequeIiSaIiEE24_M_new_elements_at_frontEm(%"class.std::deque"* %47, i64 %45)
  store i32 506002872, i32* %31
  br label %54

; <label>:48:                                     ; preds = %32
  %49 = load volatile %"class.std::deque"*, %"class.std::deque"** %6
  %50 = bitcast %"class.std::deque"* %49 to %"class.std::_Deque_base"*
  %51 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %50, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %51, i32 0, i32 2
  %53 = load i64, i64* %8, align 8
  call void @_ZNKSt15_Deque_iteratorIiRiPiEmiEl(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator"* %52, i64 %53) #11
  ret void

; <label>:54:                                     ; preds = %40, %35, %34
  br label %32
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt22__uninitialized_copy_aISt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEiET0_T_S9_S8_RSaIT1_E(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator"*, %"class.std::allocator.0"* dereferenceable(1)) #2 comdat {
  %6 = alloca %"class.std::allocator.0"*, align 8
  %7 = alloca %"struct.std::_Deque_iterator.21", align 8
  %8 = alloca %"struct.std::_Deque_iterator.21", align 8
  %9 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::allocator.0"* %4, %"class.std::allocator.0"** %6, align 8
  %10 = bitcast %"struct.std::_Deque_iterator.21"* %7 to i8*
  %11 = bitcast %"struct.std::_Deque_iterator.21"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 32, i32 8, i1 false)
  %12 = bitcast %"struct.std::_Deque_iterator.21"* %8 to i8*
  %13 = bitcast %"struct.std::_Deque_iterator.21"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 32, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %9, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #11
  call void @_ZSt18uninitialized_copyISt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEET0_T_S9_S8_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator.21"* byval align 8 %7, %"struct.std::_Deque_iterator.21"* byval align 8 %8, %"struct.std::_Deque_iterator"* %9)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE27_M_reserve_elements_at_backEm(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*, i64) #2 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.std::deque"*
  %7 = alloca %"class.std::deque"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %7, align 8
  store i64 %2, i64* %8, align 8
  %10 = load %"class.std::deque"*, %"class.std::deque"** %7, align 8
  store %"class.std::deque"* %10, %"class.std::deque"** %6
  %11 = load volatile %"class.std::deque"*, %"class.std::deque"** %6
  %12 = bitcast %"class.std::deque"* %11 to %"class.std::_Deque_base"*
  %13 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %13, i32 0, i32 3
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %14, i32 0, i32 2
  %16 = load i32*, i32** %15, align 8
  %17 = load volatile %"class.std::deque"*, %"class.std::deque"** %6
  %18 = bitcast %"class.std::deque"* %17 to %"class.std::_Deque_base"*
  %19 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %18, i32 0, i32 0
  %20 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %19, i32 0, i32 3
  %21 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %20, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = ptrtoint i32* %16 to i64
  %24 = ptrtoint i32* %22 to i64
  %25 = sub i64 0, %24
  %26 = add i64 %23, %25
  %27 = sub i64 %23, %24
  %28 = sdiv exact i64 %26, 4
  %29 = sub i64 %28, -5144850908056111381
  %30 = sub i64 %29, 1
  %31 = add i64 %30, -5144850908056111381
  %32 = sub nsw i64 %28, 1
  store i64 %31, i64* %9, align 8
  %33 = load i64, i64* %8, align 8
  store i64 %33, i64* %5
  %34 = load i64, i64* %9, align 8
  store i64 %34, i64* %4
  %35 = alloca i32
  store i32 -1082104408, i32* %35
  br label %36

; <label>:36:                                     ; preds = %3, %193
  %37 = load i32, i32* %35
  switch i32 %37, label %38 [
    i32 -1082104408, label %39
    i32 1125558244, label %44
    i32 -341918185, label %72
    i32 -2036992643, label %107
    i32 1420173851, label %108
    i32 -61988926, label %136
    i32 -327824230, label %169
    i32 30182525, label %170
    i32 1252334909, label %187
  ]

; <label>:38:                                     ; preds = %36
  br label %193

; <label>:39:                                     ; preds = %36
  %40 = load volatile i64, i64* %5
  %41 = load volatile i64, i64* %4
  %42 = icmp ugt i64 %40, %41
  %43 = select i1 %42, i32 1125558244, i32 1420173851
  store i32 %43, i32* %35
  br label %193

; <label>:44:                                     ; preds = %36
  %45 = load i32, i32* @x.607
  %46 = load i32, i32* @y.608
  %47 = sub i32 %45, -874448579
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -874448579
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -341918185, i32 30182525
  store i32 %71, i32* %35
  br label %193

; <label>:72:                                     ; preds = %36
  %73 = load i64, i64* %8, align 8
  %74 = load i64, i64* %9, align 8
  %75 = sub i64 %73, -2364485717736342757
  %76 = sub i64 %75, %74
  %77 = add i64 %76, -2364485717736342757
  %78 = sub i64 %73, %74
  %79 = load volatile %"class.std::deque"*, %"class.std::deque"** %6
  call void @_ZNSt5dequeIiSaIiEE23_M_new_elements_at_backEm(%"class.std::deque"* %79, i64 %77)
  %80 = load i32, i32* @x.607
  %81 = load i32, i32* @y.608
  %82 = add i32 %80, 720538440
  %83 = sub i32 %82, 1
  %84 = sub i32 %83, 720538440
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = xor i1 %88, true
  %91 = xor i1 %89, true
  %92 = xor i1 true, true
  %93 = and i1 %90, true
  %94 = and i1 %88, %92
  %95 = and i1 %91, true
  %96 = and i1 %89, %92
  %97 = or i1 %93, %94
  %98 = or i1 %95, %96
  %99 = xor i1 %97, %98
  %100 = or i1 %90, %91
  %101 = xor i1 %100, true
  %102 = or i1 true, %92
  %103 = and i1 %101, %102
  %104 = or i1 %99, %103
  %105 = or i1 %88, %89
  %106 = select i1 %104, i32 -2036992643, i32 30182525
  store i32 %106, i32* %35
  br label %193

; <label>:107:                                    ; preds = %36
  store i32 1420173851, i32* %35
  br label %193

; <label>:108:                                    ; preds = %36
  %109 = load i32, i32* @x.607
  %110 = load i32, i32* @y.608
  %111 = sub i32 %109, 123105433
  %112 = sub i32 %111, 1
  %113 = add i32 %112, 123105433
  %114 = sub i32 %109, 1
  %115 = mul i32 %109, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %110, 10
  %119 = xor i1 %117, true
  %120 = xor i1 %118, true
  %121 = xor i1 false, true
  %122 = and i1 %119, false
  %123 = and i1 %117, %121
  %124 = and i1 %120, false
  %125 = and i1 %118, %121
  %126 = or i1 %122, %123
  %127 = or i1 %124, %125
  %128 = xor i1 %126, %127
  %129 = or i1 %119, %120
  %130 = xor i1 %129, true
  %131 = or i1 false, %121
  %132 = and i1 %130, %131
  %133 = or i1 %128, %132
  %134 = or i1 %117, %118
  %135 = select i1 %133, i32 -61988926, i32 1252334909
  store i32 %135, i32* %35
  br label %193

; <label>:136:                                    ; preds = %36
  %137 = load volatile %"class.std::deque"*, %"class.std::deque"** %6
  %138 = bitcast %"class.std::deque"* %137 to %"class.std::_Deque_base"*
  %139 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %138, i32 0, i32 0
  %140 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %139, i32 0, i32 3
  %141 = load i64, i64* %8, align 8
  call void @_ZNKSt15_Deque_iteratorIiRiPiEplEl(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator"* %140, i64 %141) #11
  %142 = load i32, i32* @x.607
  %143 = load i32, i32* @y.608
  %144 = sub i32 %142, 689677618
  %145 = sub i32 %144, 1
  %146 = add i32 %145, 689677618
  %147 = sub i32 %142, 1
  %148 = mul i32 %142, %146
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %143, 10
  %152 = xor i1 %150, true
  %153 = xor i1 %151, true
  %154 = xor i1 true, true
  %155 = and i1 %152, true
  %156 = and i1 %150, %154
  %157 = and i1 %153, true
  %158 = and i1 %151, %154
  %159 = or i1 %155, %156
  %160 = or i1 %157, %158
  %161 = xor i1 %159, %160
  %162 = or i1 %152, %153
  %163 = xor i1 %162, true
  %164 = or i1 true, %154
  %165 = and i1 %163, %164
  %166 = or i1 %161, %165
  %167 = or i1 %150, %151
  %168 = select i1 %166, i32 -327824230, i32 1252334909
  store i32 %168, i32* %35
  br label %193

; <label>:169:                                    ; preds = %36
  ret void

; <label>:170:                                    ; preds = %36
  %171 = load i64, i64* %8, align 8
  %172 = load i64, i64* %9, align 8
  %173 = sub i64 %171, 5850220914856459827
  %174 = sub i64 %173, %172
  %175 = add i64 %174, 5850220914856459827
  %176 = sub i64 %171, %172
  %177 = mul i64 %175, %172
  %178 = add i64 %171, -1748107572215284029
  %179 = sub i64 %178, %172
  %180 = sub i64 %179, -1748107572215284029
  %181 = sub i64 %171, %172
  %182 = mul i64 %180, %172
  %183 = sub i64 0, %172
  %184 = add i64 %171, %183
  %185 = sub i64 %171, %172
  %186 = load volatile %"class.std::deque"*, %"class.std::deque"** %6
  call void @_ZNSt5dequeIiSaIiEE23_M_new_elements_at_backEm(%"class.std::deque"* %186, i64 %184)
  store i32 -341918185, i32* %35
  br label %193

; <label>:187:                                    ; preds = %36
  %188 = load volatile %"class.std::deque"*, %"class.std::deque"** %6
  %189 = bitcast %"class.std::deque"* %188 to %"class.std::_Deque_base"*
  %190 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %189, i32 0, i32 0
  %191 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %190, i32 0, i32 3
  %192 = load i64, i64* %8, align 8
  call void @_ZNKSt15_Deque_iteratorIiRiPiEplEl(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator"* %191, i64 %192) #11
  store i32 -61988926, i32* %35
  br label %193

; <label>:193:                                    ; preds = %187, %170, %136, %108, %107, %72, %44, %39, %38
  br label %36
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE13_M_insert_auxISt15_Deque_iteratorIiRKiPS4_EEEvS3_IiRiPiET_SB_m(%"class.std::deque"*, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator.21"* byval align 8, i64) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"struct.std::_Deque_iterator", align 8
  %11 = alloca %"struct.std::_Deque_iterator", align 8
  %12 = alloca %"struct.std::_Deque_iterator", align 8
  %13 = alloca %"struct.std::_Deque_iterator", align 8
  %14 = alloca %"struct.std::_Deque_iterator", align 8
  %15 = alloca %"struct.std::_Deque_iterator", align 8
  %16 = alloca %"struct.std::_Deque_iterator", align 8
  %17 = alloca %"struct.std::_Deque_iterator", align 8
  %18 = alloca i8*
  %19 = alloca i32
  %20 = alloca %"struct.std::_Deque_iterator", align 8
  %21 = alloca %"struct.std::_Deque_iterator", align 8
  %22 = alloca %"struct.std::_Deque_iterator", align 8
  %23 = alloca %"struct.std::_Deque_iterator", align 8
  %24 = alloca %"struct.std::_Deque_iterator.21", align 8
  %25 = alloca %"struct.std::_Deque_iterator.21", align 8
  %26 = alloca %"struct.std::_Deque_iterator", align 8
  %27 = alloca %"struct.std::_Deque_iterator", align 8
  %28 = alloca %"struct.std::_Deque_iterator.21", align 8
  %29 = alloca %"struct.std::_Deque_iterator", align 8
  %30 = alloca %"struct.std::_Deque_iterator", align 8
  %31 = alloca %"struct.std::_Deque_iterator.21", align 8
  %32 = alloca %"struct.std::_Deque_iterator.21", align 8
  %33 = alloca %"struct.std::_Deque_iterator", align 8
  %34 = alloca %"struct.std::_Deque_iterator", align 8
  %35 = alloca %"struct.std::_Deque_iterator.21", align 8
  %36 = alloca %"struct.std::_Deque_iterator.21", align 8
  %37 = alloca %"struct.std::_Deque_iterator", align 8
  %38 = alloca %"struct.std::_Deque_iterator", align 8
  %39 = alloca %"struct.std::_Deque_iterator", align 8
  %40 = alloca %"struct.std::_Deque_iterator", align 8
  %41 = alloca i64, align 8
  %42 = alloca %"struct.std::_Deque_iterator", align 8
  %43 = alloca %"struct.std::_Deque_iterator", align 8
  %44 = alloca %"struct.std::_Deque_iterator", align 8
  %45 = alloca %"struct.std::_Deque_iterator", align 8
  %46 = alloca %"struct.std::_Deque_iterator", align 8
  %47 = alloca %"struct.std::_Deque_iterator", align 8
  %48 = alloca %"struct.std::_Deque_iterator", align 8
  %49 = alloca %"struct.std::_Deque_iterator", align 8
  %50 = alloca %"struct.std::_Deque_iterator", align 8
  %51 = alloca %"struct.std::_Deque_iterator", align 8
  %52 = alloca %"struct.std::_Deque_iterator.21", align 8
  %53 = alloca %"struct.std::_Deque_iterator.21", align 8
  %54 = alloca %"struct.std::_Deque_iterator", align 8
  %55 = alloca %"struct.std::_Deque_iterator", align 8
  %56 = alloca %"struct.std::_Deque_iterator.21", align 8
  %57 = alloca %"struct.std::_Deque_iterator.21", align 8
  %58 = alloca %"struct.std::_Deque_iterator.21", align 8
  %59 = alloca %"struct.std::_Deque_iterator", align 8
  %60 = alloca %"struct.std::_Deque_iterator", align 8
  %61 = alloca %"struct.std::_Deque_iterator", align 8
  %62 = alloca %"struct.std::_Deque_iterator", align 8
  %63 = alloca %"struct.std::_Deque_iterator.21", align 8
  %64 = alloca %"struct.std::_Deque_iterator.21", align 8
  %65 = alloca %"struct.std::_Deque_iterator", align 8
  %66 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %6, align 8
  store i64 %4, i64* %7, align 8
  %67 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  %68 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %69 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %68, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %69, i32 0, i32 2
  %71 = call i64 @_ZStmiIiRiPiENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS6_S9_(%"struct.std::_Deque_iterator"* dereferenceable(32) %1, %"struct.std::_Deque_iterator"* dereferenceable(32) %70) #11
  store i64 %71, i64* %8, align 8
  %72 = call i64 @_ZNKSt5dequeIiSaIiEE4sizeEv(%"class.std::deque"* %67) #11
  store i64 %72, i64* %9, align 8
  %73 = load i64, i64* %8, align 8
  %74 = load i64, i64* %9, align 8
  %75 = udiv i64 %74, 2
  %76 = icmp ult i64 %73, %75
  br i1 %76, label %77, label %248

; <label>:77:                                     ; preds = %5
  %78 = load i64, i64* %7, align 8
  call void @_ZNSt5dequeIiSaIiEE28_M_reserve_elements_at_frontEm(%"struct.std::_Deque_iterator"* sret %10, %"class.std::deque"* %67, i64 %78)
  %79 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %80 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %79, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %80, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %11, %"struct.std::_Deque_iterator"* dereferenceable(32) %81) #11
  %82 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %83 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %82, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %83, i32 0, i32 2
  %85 = load i64, i64* %8, align 8
  call void @_ZNKSt15_Deque_iteratorIiRiPiEplEl(%"struct.std::_Deque_iterator"* sret %12, %"struct.std::_Deque_iterator"* %84, i64 %85) #11
  %86 = bitcast %"struct.std::_Deque_iterator"* %1 to i8*
  %87 = bitcast %"struct.std::_Deque_iterator"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 32, i32 8, i1 false)
  %88 = load i64, i64* %8, align 8
  %89 = load i64, i64* %7, align 8
  %90 = icmp sge i64 %88, %89
  br i1 %90, label %91, label %159

; <label>:91:                                     ; preds = %77
  %92 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %93 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %92, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %93, i32 0, i32 2
  %95 = load i64, i64* %7, align 8
  call void @_ZNKSt15_Deque_iteratorIiRiPiEplEl(%"struct.std::_Deque_iterator"* sret %13, %"struct.std::_Deque_iterator"* %94, i64 %95) #11
  %96 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %97 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %96, i32 0, i32 0
  %98 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %97, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %14, %"struct.std::_Deque_iterator"* dereferenceable(32) %98) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %15, %"struct.std::_Deque_iterator"* dereferenceable(32) %13) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %16, %"struct.std::_Deque_iterator"* dereferenceable(32) %10) #11
  %99 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %100 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %99) #11
  invoke void @_ZSt22__uninitialized_move_aISt15_Deque_iteratorIiRiPiES3_SaIiEET0_T_S6_S5_RT1_(%"struct.std::_Deque_iterator"* sret %17, %"struct.std::_Deque_iterator"* %14, %"struct.std::_Deque_iterator"* %15, %"struct.std::_Deque_iterator"* %16, %"class.std::allocator.0"* dereferenceable(1) %100)
          to label %101 unwind label %144

; <label>:101:                                    ; preds = %91
  %102 = load i32, i32* @x.609
  %103 = load i32, i32* @y.610
  %104 = add i32 %102, 428578758
  %105 = sub i32 %104, 1
  %106 = sub i32 %105, 428578758
  %107 = sub i32 %102, 1
  %108 = mul i32 %102, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %103, 10
  %112 = and i1 %110, %111
  %113 = xor i1 %110, %111
  %114 = or i1 %112, %113
  %115 = or i1 %110, %111
  br i1 %114, label %116, label %538

; <label>:116:                                    ; preds = %101, %538
  %117 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %118 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %117, i32 0, i32 0
  %119 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %118, i32 0, i32 2
  %120 = bitcast %"struct.std::_Deque_iterator"* %119 to i8*
  %121 = bitcast %"struct.std::_Deque_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %120, i8* %121, i64 32, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %20, %"struct.std::_Deque_iterator"* dereferenceable(32) %13) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %21, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %22, %"struct.std::_Deque_iterator"* dereferenceable(32) %11) #11
  %122 = load i32, i32* @x.609
  %123 = load i32, i32* @y.610
  %124 = sub i32 %122, -1954303322
  %125 = sub i32 %124, 1
  %126 = add i32 %125, -1954303322
  %127 = sub i32 %122, 1
  %128 = mul i32 %122, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %123, 10
  %132 = and i1 %130, %131
  %133 = xor i1 %130, %131
  %134 = or i1 %132, %133
  %135 = or i1 %130, %131
  br i1 %134, label %136, label %538

; <label>:136:                                    ; preds = %116
  invoke void @_ZSt4moveIiESt15_Deque_iteratorIT_RS1_PS1_ES4_S4_S4_(%"struct.std::_Deque_iterator"* sret %23, %"struct.std::_Deque_iterator"* %20, %"struct.std::_Deque_iterator"* %21, %"struct.std::_Deque_iterator"* %22)
          to label %137 unwind label %144

; <label>:137:                                    ; preds = %136
  %138 = bitcast %"struct.std::_Deque_iterator.21"* %24 to i8*
  %139 = bitcast %"struct.std::_Deque_iterator.21"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %138, i8* %139, i64 32, i32 8, i1 false)
  %140 = bitcast %"struct.std::_Deque_iterator.21"* %25 to i8*
  %141 = bitcast %"struct.std::_Deque_iterator.21"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %140, i8* %141, i64 32, i32 8, i1 false)
  %142 = load i64, i64* %7, align 8
  call void @_ZNKSt15_Deque_iteratorIiRiPiEmiEl(%"struct.std::_Deque_iterator"* sret %26, %"struct.std::_Deque_iterator"* %1, i64 %142) #11
  invoke void @_ZSt4copyIiESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_(%"struct.std::_Deque_iterator"* sret %27, %"struct.std::_Deque_iterator.21"* byval align 8 %24, %"struct.std::_Deque_iterator.21"* byval align 8 %25, %"struct.std::_Deque_iterator"* %26)
          to label %143 unwind label %144

; <label>:143:                                    ; preds = %137
  br label %189

; <label>:144:                                    ; preds = %178, %168, %159, %137, %136, %91
  %145 = landingpad { i8*, i32 }
          catch i8* null
  %146 = extractvalue { i8*, i32 } %145, 0
  store i8* %146, i8** %18, align 8
  %147 = extractvalue { i8*, i32 } %145, 1
  store i32 %147, i32* %19, align 4
  br label %148

; <label>:148:                                    ; preds = %144
  %149 = load i8*, i8** %18, align 8
  %150 = call i8* @__cxa_begin_catch(i8* %149) #11
  %151 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %152 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %10, i32 0, i32 3
  %153 = load i32**, i32*** %152, align 8
  %154 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %155 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %154, i32 0, i32 0
  %156 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %155, i32 0, i32 2
  %157 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %156, i32 0, i32 3
  %158 = load i32**, i32*** %157, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %151, i32** %153, i32** %158) #11
  invoke void @__cxa_rethrow() #13
          to label %495 unwind label %190

; <label>:159:                                    ; preds = %77
  %160 = bitcast %"struct.std::_Deque_iterator.21"* %28 to i8*
  %161 = bitcast %"struct.std::_Deque_iterator.21"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %160, i8* %161, i64 32, i32 8, i1 false)
  %162 = load i64, i64* %7, align 8
  %163 = load i64, i64* %8, align 8
  %164 = add i64 %162, 8635770481145553048
  %165 = sub i64 %164, %163
  %166 = sub i64 %165, 8635770481145553048
  %167 = sub nsw i64 %162, %163
  invoke void @_ZSt7advanceISt15_Deque_iteratorIiRKiPS1_ElEvRT_T0_(%"struct.std::_Deque_iterator.21"* dereferenceable(32) %28, i64 %166)
          to label %168 unwind label %144

; <label>:168:                                    ; preds = %159
  %169 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %170 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %169, i32 0, i32 0
  %171 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %170, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %29, %"struct.std::_Deque_iterator"* dereferenceable(32) %171) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %30, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  %172 = bitcast %"struct.std::_Deque_iterator.21"* %31 to i8*
  %173 = bitcast %"struct.std::_Deque_iterator.21"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %172, i8* %173, i64 32, i32 8, i1 false)
  %174 = bitcast %"struct.std::_Deque_iterator.21"* %32 to i8*
  %175 = bitcast %"struct.std::_Deque_iterator.21"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %174, i8* %175, i64 32, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %33, %"struct.std::_Deque_iterator"* dereferenceable(32) %10) #11
  %176 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %177 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %176) #11
  invoke void @_ZSt25__uninitialized_move_copyISt15_Deque_iteratorIiRiPiES0_IiRKiPS4_ES3_SaIiEET1_T_SA_T0_SB_S9_RT2_(%"struct.std::_Deque_iterator"* sret %34, %"struct.std::_Deque_iterator"* %29, %"struct.std::_Deque_iterator"* %30, %"struct.std::_Deque_iterator.21"* byval align 8 %31, %"struct.std::_Deque_iterator.21"* byval align 8 %32, %"struct.std::_Deque_iterator"* %33, %"class.std::allocator.0"* dereferenceable(1) %177)
          to label %178 unwind label %144

; <label>:178:                                    ; preds = %168
  %179 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %180 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %179, i32 0, i32 0
  %181 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %180, i32 0, i32 2
  %182 = bitcast %"struct.std::_Deque_iterator"* %181 to i8*
  %183 = bitcast %"struct.std::_Deque_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %182, i8* %183, i64 32, i32 8, i1 false)
  %184 = bitcast %"struct.std::_Deque_iterator.21"* %35 to i8*
  %185 = bitcast %"struct.std::_Deque_iterator.21"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %184, i8* %185, i64 32, i32 8, i1 false)
  %186 = bitcast %"struct.std::_Deque_iterator.21"* %36 to i8*
  %187 = bitcast %"struct.std::_Deque_iterator.21"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %186, i8* %187, i64 32, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %37, %"struct.std::_Deque_iterator"* dereferenceable(32) %11) #11
  invoke void @_ZSt4copyIiESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_(%"struct.std::_Deque_iterator"* sret %38, %"struct.std::_Deque_iterator.21"* byval align 8 %35, %"struct.std::_Deque_iterator.21"* byval align 8 %36, %"struct.std::_Deque_iterator"* %37)
          to label %188 unwind label %144

; <label>:188:                                    ; preds = %178
  br label %189

; <label>:189:                                    ; preds = %188, %143
  br label %195

; <label>:190:                                    ; preds = %148
  %191 = landingpad { i8*, i32 }
          cleanup
  %192 = extractvalue { i8*, i32 } %191, 0
  store i8* %192, i8** %18, align 8
  %193 = extractvalue { i8*, i32 } %191, 1
  store i32 %193, i32* %19, align 4
  invoke void @__cxa_end_catch()
          to label %194 unwind label %492

; <label>:194:                                    ; preds = %190
  br label %487

; <label>:195:                                    ; preds = %189
  %196 = load i32, i32* @x.609
  %197 = load i32, i32* @y.610
  %198 = sub i32 0, 1
  %199 = add i32 %196, %198
  %200 = sub i32 %196, 1
  %201 = mul i32 %196, %199
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %197, 10
  %205 = xor i1 %203, true
  %206 = xor i1 %204, true
  %207 = xor i1 false, true
  %208 = and i1 %205, false
  %209 = and i1 %203, %207
  %210 = and i1 %206, false
  %211 = and i1 %204, %207
  %212 = or i1 %208, %209
  %213 = or i1 %210, %211
  %214 = xor i1 %212, %213
  %215 = or i1 %205, %206
  %216 = xor i1 %215, true
  %217 = or i1 false, %207
  %218 = and i1 %216, %217
  %219 = or i1 %214, %218
  %220 = or i1 %203, %204
  br i1 %219, label %221, label %544

; <label>:221:                                    ; preds = %195, %544
  %222 = load i32, i32* @x.609
  %223 = load i32, i32* @y.610
  %224 = sub i32 0, 1
  %225 = add i32 %222, %224
  %226 = sub i32 %222, 1
  %227 = mul i32 %222, %225
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %223, 10
  %231 = xor i1 %229, true
  %232 = xor i1 %230, true
  %233 = xor i1 false, true
  %234 = and i1 %231, false
  %235 = and i1 %229, %233
  %236 = and i1 %232, false
  %237 = and i1 %230, %233
  %238 = or i1 %234, %235
  %239 = or i1 %236, %237
  %240 = xor i1 %238, %239
  %241 = or i1 %231, %232
  %242 = xor i1 %241, true
  %243 = or i1 false, %233
  %244 = and i1 %242, %243
  %245 = or i1 %240, %244
  %246 = or i1 %229, %230
  br i1 %245, label %247, label %544

; <label>:247:                                    ; preds = %221
  br label %486

; <label>:248:                                    ; preds = %5
  %249 = load i32, i32* @x.609
  %250 = load i32, i32* @y.610
  %251 = sub i32 %249, 760205583
  %252 = sub i32 %251, 1
  %253 = add i32 %252, 760205583
  %254 = sub i32 %249, 1
  %255 = mul i32 %249, %253
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %250, 10
  %259 = and i1 %257, %258
  %260 = xor i1 %257, %258
  %261 = or i1 %259, %260
  %262 = or i1 %257, %258
  br i1 %261, label %263, label %545

; <label>:263:                                    ; preds = %248, %545
  %264 = load i64, i64* %7, align 8
  call void @_ZNSt5dequeIiSaIiEE27_M_reserve_elements_at_backEm(%"struct.std::_Deque_iterator"* sret %39, %"class.std::deque"* %67, i64 %264)
  %265 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %266 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %265, i32 0, i32 0
  %267 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %266, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %40, %"struct.std::_Deque_iterator"* dereferenceable(32) %267) #11
  %268 = load i64, i64* %9, align 8
  %269 = load i64, i64* %8, align 8
  %270 = add i64 %268, -2998129355572429018
  %271 = sub i64 %270, %269
  %272 = sub i64 %271, -2998129355572429018
  %273 = sub nsw i64 %268, %269
  store i64 %272, i64* %41, align 8
  %274 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %275 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %274, i32 0, i32 0
  %276 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %275, i32 0, i32 3
  %277 = load i64, i64* %41, align 8
  call void @_ZNKSt15_Deque_iteratorIiRiPiEmiEl(%"struct.std::_Deque_iterator"* sret %42, %"struct.std::_Deque_iterator"* %276, i64 %277) #11
  %278 = bitcast %"struct.std::_Deque_iterator"* %1 to i8*
  %279 = bitcast %"struct.std::_Deque_iterator"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %278, i8* %279, i64 32, i32 8, i1 false)
  %280 = load i64, i64* %41, align 8
  %281 = load i64, i64* %7, align 8
  %282 = icmp sgt i64 %280, %281
  %283 = load i32, i32* @x.609
  %284 = load i32, i32* @y.610
  %285 = add i32 %283, -1280558509
  %286 = sub i32 %285, 1
  %287 = sub i32 %286, -1280558509
  %288 = sub i32 %283, 1
  %289 = mul i32 %283, %287
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %284, 10
  %293 = and i1 %291, %292
  %294 = xor i1 %291, %292
  %295 = or i1 %293, %294
  %296 = or i1 %291, %292
  br i1 %295, label %297, label %545

; <label>:297:                                    ; preds = %263
  br i1 %282, label %298, label %421

; <label>:298:                                    ; preds = %297
  %299 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %300 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %299, i32 0, i32 0
  %301 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %300, i32 0, i32 3
  %302 = load i64, i64* %7, align 8
  call void @_ZNKSt15_Deque_iteratorIiRiPiEmiEl(%"struct.std::_Deque_iterator"* sret %43, %"struct.std::_Deque_iterator"* %301, i64 %302) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %44, %"struct.std::_Deque_iterator"* dereferenceable(32) %43) #11
  %303 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %304 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %303, i32 0, i32 0
  %305 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %304, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %45, %"struct.std::_Deque_iterator"* dereferenceable(32) %305) #11
  %306 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %307 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %306, i32 0, i32 0
  %308 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %307, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %46, %"struct.std::_Deque_iterator"* dereferenceable(32) %308) #11
  %309 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %310 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %309) #11
  invoke void @_ZSt22__uninitialized_move_aISt15_Deque_iteratorIiRiPiES3_SaIiEET0_T_S6_S5_RT1_(%"struct.std::_Deque_iterator"* sret %47, %"struct.std::_Deque_iterator"* %44, %"struct.std::_Deque_iterator"* %45, %"struct.std::_Deque_iterator"* %46, %"class.std::allocator.0"* dereferenceable(1) %310)
          to label %311 unwind label %364

; <label>:311:                                    ; preds = %298
  %312 = load i32, i32* @x.609
  %313 = load i32, i32* @y.610
  %314 = sub i32 0, 1
  %315 = add i32 %312, %314
  %316 = sub i32 %312, 1
  %317 = mul i32 %312, %315
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %313, 10
  %321 = and i1 %319, %320
  %322 = xor i1 %319, %320
  %323 = or i1 %321, %322
  %324 = or i1 %319, %320
  br i1 %323, label %325, label %580

; <label>:325:                                    ; preds = %311, %580
  %326 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %327 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %326, i32 0, i32 0
  %328 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %327, i32 0, i32 3
  %329 = bitcast %"struct.std::_Deque_iterator"* %328 to i8*
  %330 = bitcast %"struct.std::_Deque_iterator"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %329, i8* %330, i64 32, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %48, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %49, %"struct.std::_Deque_iterator"* dereferenceable(32) %43) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %50, %"struct.std::_Deque_iterator"* dereferenceable(32) %40) #11
  %331 = load i32, i32* @x.609
  %332 = load i32, i32* @y.610
  %333 = sub i32 %331, -606621710
  %334 = sub i32 %333, 1
  %335 = add i32 %334, -606621710
  %336 = sub i32 %331, 1
  %337 = mul i32 %331, %335
  %338 = urem i32 %337, 2
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %332, 10
  %341 = xor i1 %339, true
  %342 = xor i1 %340, true
  %343 = xor i1 false, true
  %344 = and i1 %341, false
  %345 = and i1 %339, %343
  %346 = and i1 %342, false
  %347 = and i1 %340, %343
  %348 = or i1 %344, %345
  %349 = or i1 %346, %347
  %350 = xor i1 %348, %349
  %351 = or i1 %341, %342
  %352 = xor i1 %351, true
  %353 = or i1 false, %343
  %354 = and i1 %352, %353
  %355 = or i1 %350, %354
  %356 = or i1 %339, %340
  br i1 %355, label %357, label %580

; <label>:357:                                    ; preds = %325
  invoke void @_ZSt13move_backwardIiESt15_Deque_iteratorIT_RS1_PS1_ES4_S4_S4_(%"struct.std::_Deque_iterator"* sret %51, %"struct.std::_Deque_iterator"* %48, %"struct.std::_Deque_iterator"* %49, %"struct.std::_Deque_iterator"* %50)
          to label %358 unwind label %364

; <label>:358:                                    ; preds = %357
  %359 = bitcast %"struct.std::_Deque_iterator.21"* %52 to i8*
  %360 = bitcast %"struct.std::_Deque_iterator.21"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %359, i8* %360, i64 32, i32 8, i1 false)
  %361 = bitcast %"struct.std::_Deque_iterator.21"* %53 to i8*
  %362 = bitcast %"struct.std::_Deque_iterator.21"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %361, i8* %362, i64 32, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %54, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  invoke void @_ZSt4copyIiESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_(%"struct.std::_Deque_iterator"* sret %55, %"struct.std::_Deque_iterator.21"* byval align 8 %52, %"struct.std::_Deque_iterator.21"* byval align 8 %53, %"struct.std::_Deque_iterator"* %54)
          to label %363 unwind label %364

; <label>:363:                                    ; preds = %358
  br label %479

; <label>:364:                                    ; preds = %477, %425, %421, %358, %357, %298
  %365 = load i32, i32* @x.609
  %366 = load i32, i32* @y.610
  %367 = sub i32 0, 1
  %368 = add i32 %365, %367
  %369 = sub i32 %365, 1
  %370 = mul i32 %365, %368
  %371 = urem i32 %370, 2
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %366, 10
  %374 = and i1 %372, %373
  %375 = xor i1 %372, %373
  %376 = or i1 %374, %375
  %377 = or i1 %372, %373
  br i1 %376, label %378, label %586

; <label>:378:                                    ; preds = %364, %586
  %379 = landingpad { i8*, i32 }
          catch i8* null
  %380 = extractvalue { i8*, i32 } %379, 0
  store i8* %380, i8** %18, align 8
  %381 = extractvalue { i8*, i32 } %379, 1
  store i32 %381, i32* %19, align 4
  %382 = load i32, i32* @x.609
  %383 = load i32, i32* @y.610
  %384 = sub i32 0, 1
  %385 = add i32 %382, %384
  %386 = sub i32 %382, 1
  %387 = mul i32 %382, %385
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %383, 10
  %391 = xor i1 %389, true
  %392 = xor i1 %390, true
  %393 = xor i1 false, true
  %394 = and i1 %391, false
  %395 = and i1 %389, %393
  %396 = and i1 %392, false
  %397 = and i1 %390, %393
  %398 = or i1 %394, %395
  %399 = or i1 %396, %397
  %400 = xor i1 %398, %399
  %401 = or i1 %391, %392
  %402 = xor i1 %401, true
  %403 = or i1 false, %393
  %404 = and i1 %402, %403
  %405 = or i1 %400, %404
  %406 = or i1 %389, %390
  br i1 %405, label %407, label %586

; <label>:407:                                    ; preds = %378
  br label %408

; <label>:408:                                    ; preds = %407
  %409 = load i8*, i8** %18, align 8
  %410 = call i8* @__cxa_begin_catch(i8* %409) #11
  %411 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %412 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %413 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %412, i32 0, i32 0
  %414 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %413, i32 0, i32 3
  %415 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %414, i32 0, i32 3
  %416 = load i32**, i32*** %415, align 8
  %417 = getelementptr inbounds i32*, i32** %416, i64 1
  %418 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %39, i32 0, i32 3
  %419 = load i32**, i32*** %418, align 8
  %420 = getelementptr inbounds i32*, i32** %419, i64 1
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %411, i32** %417, i32** %420) #11
  invoke void @__cxa_rethrow() #13
          to label %495 unwind label %480

; <label>:421:                                    ; preds = %297
  %422 = bitcast %"struct.std::_Deque_iterator.21"* %56 to i8*
  %423 = bitcast %"struct.std::_Deque_iterator.21"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %422, i8* %423, i64 32, i32 8, i1 false)
  %424 = load i64, i64* %41, align 8
  invoke void @_ZSt7advanceISt15_Deque_iteratorIiRKiPS1_ElEvRT_T0_(%"struct.std::_Deque_iterator.21"* dereferenceable(32) %56, i64 %424)
          to label %425 unwind label %364

; <label>:425:                                    ; preds = %421
  %426 = bitcast %"struct.std::_Deque_iterator.21"* %57 to i8*
  %427 = bitcast %"struct.std::_Deque_iterator.21"* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %426, i8* %427, i64 32, i32 8, i1 false)
  %428 = bitcast %"struct.std::_Deque_iterator.21"* %58 to i8*
  %429 = bitcast %"struct.std::_Deque_iterator.21"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %428, i8* %429, i64 32, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %59, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  %430 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %431 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %430, i32 0, i32 0
  %432 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %431, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %60, %"struct.std::_Deque_iterator"* dereferenceable(32) %432) #11
  %433 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %434 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %433, i32 0, i32 0
  %435 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %434, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %61, %"struct.std::_Deque_iterator"* dereferenceable(32) %435) #11
  %436 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %437 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %436) #11
  invoke void @_ZSt25__uninitialized_copy_moveISt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiES7_SaIiEET1_T_SA_T0_SB_S9_RT2_(%"struct.std::_Deque_iterator"* sret %62, %"struct.std::_Deque_iterator.21"* byval align 8 %57, %"struct.std::_Deque_iterator.21"* byval align 8 %58, %"struct.std::_Deque_iterator"* %59, %"struct.std::_Deque_iterator"* %60, %"struct.std::_Deque_iterator"* %61, %"class.std::allocator.0"* dereferenceable(1) %437)
          to label %438 unwind label %364

; <label>:438:                                    ; preds = %425
  %439 = load i32, i32* @x.609
  %440 = load i32, i32* @y.610
  %441 = sub i32 %439, 1635235681
  %442 = sub i32 %441, 1
  %443 = add i32 %442, 1635235681
  %444 = sub i32 %439, 1
  %445 = mul i32 %439, %443
  %446 = urem i32 %445, 2
  %447 = icmp eq i32 %446, 0
  %448 = icmp slt i32 %440, 10
  %449 = and i1 %447, %448
  %450 = xor i1 %447, %448
  %451 = or i1 %449, %450
  %452 = or i1 %447, %448
  br i1 %451, label %453, label %590

; <label>:453:                                    ; preds = %438, %590
  %454 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %455 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %454, i32 0, i32 0
  %456 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %455, i32 0, i32 3
  %457 = bitcast %"struct.std::_Deque_iterator"* %456 to i8*
  %458 = bitcast %"struct.std::_Deque_iterator"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %457, i8* %458, i64 32, i32 8, i1 false)
  %459 = bitcast %"struct.std::_Deque_iterator.21"* %63 to i8*
  %460 = bitcast %"struct.std::_Deque_iterator.21"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %459, i8* %460, i64 32, i32 8, i1 false)
  %461 = bitcast %"struct.std::_Deque_iterator.21"* %64 to i8*
  %462 = bitcast %"struct.std::_Deque_iterator.21"* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %461, i8* %462, i64 32, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %65, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  %463 = load i32, i32* @x.609
  %464 = load i32, i32* @y.610
  %465 = sub i32 %463, 751786119
  %466 = sub i32 %465, 1
  %467 = add i32 %466, 751786119
  %468 = sub i32 %463, 1
  %469 = mul i32 %463, %467
  %470 = urem i32 %469, 2
  %471 = icmp eq i32 %470, 0
  %472 = icmp slt i32 %464, 10
  %473 = and i1 %471, %472
  %474 = xor i1 %471, %472
  %475 = or i1 %473, %474
  %476 = or i1 %471, %472
  br i1 %475, label %477, label %590

; <label>:477:                                    ; preds = %453
  invoke void @_ZSt4copyIiESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_(%"struct.std::_Deque_iterator"* sret %66, %"struct.std::_Deque_iterator.21"* byval align 8 %63, %"struct.std::_Deque_iterator.21"* byval align 8 %64, %"struct.std::_Deque_iterator"* %65)
          to label %478 unwind label %364

; <label>:478:                                    ; preds = %477
  br label %479

; <label>:479:                                    ; preds = %478, %363
  br label %485

; <label>:480:                                    ; preds = %408
  %481 = landingpad { i8*, i32 }
          cleanup
  %482 = extractvalue { i8*, i32 } %481, 0
  store i8* %482, i8** %18, align 8
  %483 = extractvalue { i8*, i32 } %481, 1
  store i32 %483, i32* %19, align 4
  invoke void @__cxa_end_catch()
          to label %484 unwind label %492

; <label>:484:                                    ; preds = %480
  br label %487

; <label>:485:                                    ; preds = %479
  br label %486

; <label>:486:                                    ; preds = %485, %247
  ret void

; <label>:487:                                    ; preds = %484, %194
  %488 = load i8*, i8** %18, align 8
  %489 = load i32, i32* %19, align 4
  %490 = insertvalue { i8*, i32 } undef, i8* %488, 0
  %491 = insertvalue { i8*, i32 } %490, i32 %489, 1
  resume { i8*, i32 } %491

; <label>:492:                                    ; preds = %480, %190
  %493 = landingpad { i8*, i32 }
          catch i8* null
  %494 = extractvalue { i8*, i32 } %493, 0
  call void @__clang_call_terminate(i8* %494) #9
  unreachable

; <label>:495:                                    ; preds = %408, %148
  %496 = load i32, i32* @x.609
  %497 = load i32, i32* @y.610
  %498 = add i32 %496, -2138202237
  %499 = sub i32 %498, 1
  %500 = sub i32 %499, -2138202237
  %501 = sub i32 %496, 1
  %502 = mul i32 %496, %500
  %503 = urem i32 %502, 2
  %504 = icmp eq i32 %503, 0
  %505 = icmp slt i32 %497, 10
  %506 = and i1 %504, %505
  %507 = xor i1 %504, %505
  %508 = or i1 %506, %507
  %509 = or i1 %504, %505
  br i1 %508, label %510, label %600

; <label>:510:                                    ; preds = %495, %600
  %511 = load i32, i32* @x.609
  %512 = load i32, i32* @y.610
  %513 = add i32 %511, 728856104
  %514 = sub i32 %513, 1
  %515 = sub i32 %514, 728856104
  %516 = sub i32 %511, 1
  %517 = mul i32 %511, %515
  %518 = urem i32 %517, 2
  %519 = icmp eq i32 %518, 0
  %520 = icmp slt i32 %512, 10
  %521 = xor i1 %519, true
  %522 = xor i1 %520, true
  %523 = xor i1 false, true
  %524 = and i1 %521, false
  %525 = and i1 %519, %523
  %526 = and i1 %522, false
  %527 = and i1 %520, %523
  %528 = or i1 %524, %525
  %529 = or i1 %526, %527
  %530 = xor i1 %528, %529
  %531 = or i1 %521, %522
  %532 = xor i1 %531, true
  %533 = or i1 false, %523
  %534 = and i1 %532, %533
  %535 = or i1 %530, %534
  %536 = or i1 %519, %520
  br i1 %535, label %537, label %600

; <label>:537:                                    ; preds = %510
  unreachable

; <label>:538:                                    ; preds = %116, %101
  %539 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %540 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %539, i32 0, i32 0
  %541 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %540, i32 0, i32 2
  %542 = bitcast %"struct.std::_Deque_iterator"* %541 to i8*
  %543 = bitcast %"struct.std::_Deque_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %542, i8* %543, i64 32, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %20, %"struct.std::_Deque_iterator"* dereferenceable(32) %13) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %21, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %22, %"struct.std::_Deque_iterator"* dereferenceable(32) %11) #11
  br label %116

; <label>:544:                                    ; preds = %221, %195
  br label %221

; <label>:545:                                    ; preds = %263, %248
  %546 = load i64, i64* %7, align 8
  call void @_ZNSt5dequeIiSaIiEE27_M_reserve_elements_at_backEm(%"struct.std::_Deque_iterator"* sret %39, %"class.std::deque"* %67, i64 %546)
  %547 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %548 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %547, i32 0, i32 0
  %549 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %548, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %40, %"struct.std::_Deque_iterator"* dereferenceable(32) %549) #11
  %550 = load i64, i64* %9, align 8
  %551 = load i64, i64* %8, align 8
  %552 = sub i64 0, %551
  %553 = add i64 %550, %552
  %554 = sub i64 %550, %551
  %555 = mul i64 %553, %551
  %556 = sub i64 0, 5860388443771079097
  %557 = sub i64 %556, %550
  %558 = add i64 %557, 5860388443771079097
  %559 = sub i64 0, %550
  %560 = sub i64 %558, -4017263095462253531
  %561 = add i64 %560, %551
  %562 = add i64 %561, -4017263095462253531
  %563 = add i64 %558, %551
  %564 = shl i64 %550, %551
  %565 = shl i64 %550, %551
  %566 = shl i64 %550, %551
  %567 = add i64 %550, 1604146732218557799
  %568 = sub i64 %567, %551
  %569 = sub i64 %568, 1604146732218557799
  %570 = sub nsw i64 %550, %551
  store i64 %569, i64* %41, align 8
  %571 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %572 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %571, i32 0, i32 0
  %573 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %572, i32 0, i32 3
  %574 = load i64, i64* %41, align 8
  call void @_ZNKSt15_Deque_iteratorIiRiPiEmiEl(%"struct.std::_Deque_iterator"* sret %42, %"struct.std::_Deque_iterator"* %573, i64 %574) #11
  %575 = bitcast %"struct.std::_Deque_iterator"* %1 to i8*
  %576 = bitcast %"struct.std::_Deque_iterator"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %575, i8* %576, i64 32, i32 8, i1 false)
  %577 = load i64, i64* %41, align 8
  %578 = load i64, i64* %7, align 8
  %579 = icmp sgt i64 %577, %578
  br label %263

; <label>:580:                                    ; preds = %325, %311
  %581 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %582 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %581, i32 0, i32 0
  %583 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %582, i32 0, i32 3
  %584 = bitcast %"struct.std::_Deque_iterator"* %583 to i8*
  %585 = bitcast %"struct.std::_Deque_iterator"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %584, i8* %585, i64 32, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %48, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %49, %"struct.std::_Deque_iterator"* dereferenceable(32) %43) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %50, %"struct.std::_Deque_iterator"* dereferenceable(32) %40) #11
  br label %325

; <label>:586:                                    ; preds = %378, %364
  %587 = landingpad { i8*, i32 }
          catch i8* null
  %588 = extractvalue { i8*, i32 } %587, 0
  store i8* %588, i8** %18, align 8
  %589 = extractvalue { i8*, i32 } %587, 1
  store i32 %589, i32* %19, align 4
  br label %378

; <label>:590:                                    ; preds = %453, %438
  %591 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %592 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %591, i32 0, i32 0
  %593 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %592, i32 0, i32 3
  %594 = bitcast %"struct.std::_Deque_iterator"* %593 to i8*
  %595 = bitcast %"struct.std::_Deque_iterator"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %594, i8* %595, i64 32, i32 8, i1 false)
  %596 = bitcast %"struct.std::_Deque_iterator.21"* %63 to i8*
  %597 = bitcast %"struct.std::_Deque_iterator.21"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %596, i8* %597, i64 32, i32 8, i1 false)
  %598 = bitcast %"struct.std::_Deque_iterator.21"* %64 to i8*
  %599 = bitcast %"struct.std::_Deque_iterator.21"* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %598, i8* %599, i64 32, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %65, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  br label %453

; <label>:600:                                    ; preds = %510, %495
  br label %510
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt10__distanceISt15_Deque_iteratorIiRKiPS1_EENSt15iterator_traitsIT_E15difference_typeES6_S6_St26random_access_iterator_tag(%"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator.21"* byval align 8) #1 comdat {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.611
  %7 = load i32, i32* @y.612
  %8 = add i32 %6, -450381054
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -450381054
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 622528096, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %51
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 622528096, label %20
    i32 1522813306, label %28
    i32 -1406373314, label %46
    i32 203058792, label %48
  ]

; <label>:19:                                     ; preds = %17
  br label %51

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1522813306, i32 203058792
  store i32 %27, i32* %16
  br label %51

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::random_access_iterator_tag", align 1
  %30 = call i64 @_ZStmiIiRKiPS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_(%"struct.std::_Deque_iterator.21"* dereferenceable(32) %1, %"struct.std::_Deque_iterator.21"* dereferenceable(32) %0) #11
  store i64 %30, i64* %3
  %31 = load i32, i32* @x.611
  %32 = load i32, i32* @y.612
  %33 = sub i32 %31, -140801371
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -140801371
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -1406373314, i32 203058792
  store i32 %45, i32* %16
  br label %51

; <label>:46:                                     ; preds = %17
  %47 = load volatile i64, i64* %3
  ret i64 %47

; <label>:48:                                     ; preds = %17
  %49 = alloca %"struct.std::random_access_iterator_tag", align 1
  %50 = call i64 @_ZStmiIiRKiPS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_(%"struct.std::_Deque_iterator.21"* dereferenceable(32) %1, %"struct.std::_Deque_iterator.21"* dereferenceable(32) %0) #11
  store i32 1522813306, i32* %16
  br label %51

; <label>:51:                                     ; preds = %48, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt19__iterator_categoryISt15_Deque_iteratorIiRKiPS1_EENSt15iterator_traitsIT_E17iterator_categoryERKS6_(%"struct.std::_Deque_iterator.21"* dereferenceable(32)) #1 comdat {
  %2 = alloca %"struct.std::random_access_iterator_tag", align 1
  %3 = alloca %"struct.std::_Deque_iterator.21"*, align 8
  store %"struct.std::_Deque_iterator.21"* %0, %"struct.std::_Deque_iterator.21"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE24_M_new_elements_at_frontEm(%"class.std::deque"*, i64) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*
  %8 = alloca i32
  %9 = alloca i64, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store i64 %1, i64* %4, align 8
  %10 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %11 = call i64 @_ZNKSt5dequeIiSaIiEE8max_sizeEv(%"class.std::deque"* %10) #11
  %12 = call i64 @_ZNKSt5dequeIiSaIiEE4sizeEv(%"class.std::deque"* %10) #11
  %13 = add i64 %11, -6280091191309073672
  %14 = sub i64 %13, %12
  %15 = sub i64 %14, -6280091191309073672
  %16 = sub i64 %11, %12
  %17 = load i64, i64* %4, align 8
  %18 = icmp ult i64 %15, %17
  br i1 %18, label %19, label %20

; <label>:19:                                     ; preds = %2
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i32 0, i32 0)) #13
  unreachable

; <label>:20:                                     ; preds = %2
  %21 = load i64, i64* %4, align 8
  %22 = call i64 @_ZNSt5dequeIiSaIiEE14_S_buffer_sizeEv() #11
  %23 = add i64 %21, -1781452455701302288
  %24 = add i64 %23, %22
  %25 = sub i64 %24, -1781452455701302288
  %26 = add i64 %21, %22
  %27 = add i64 %25, 3374978879661443315
  %28 = sub i64 %27, 1
  %29 = sub i64 %28, 3374978879661443315
  %30 = sub i64 %25, 1
  %31 = call i64 @_ZNSt5dequeIiSaIiEE14_S_buffer_sizeEv() #11
  %32 = udiv i64 %29, %31
  store i64 %32, i64* %5, align 8
  %33 = load i64, i64* %5, align 8
  call void @_ZNSt5dequeIiSaIiEE23_M_reserve_map_at_frontEm(%"class.std::deque"* %10, i64 %33)
  store i64 1, i64* %6, align 8
  br label %34

; <label>:34:                                     ; preds = %53, %20
  %35 = load i64, i64* %6, align 8
  %36 = load i64, i64* %5, align 8
  %37 = icmp ule i64 %35, %36
  br i1 %37, label %38, label %91

; <label>:38:                                     ; preds = %34
  %39 = bitcast %"class.std::deque"* %10 to %"class.std::_Deque_base"*
  %40 = invoke i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %39)
          to label %41 unwind label %59

; <label>:41:                                     ; preds = %38
  %42 = bitcast %"class.std::deque"* %10 to %"class.std::_Deque_base"*
  %43 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %43, i32 0, i32 2
  %45 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %44, i32 0, i32 3
  %46 = load i32**, i32*** %45, align 8
  %47 = load i64, i64* %6, align 8
  %48 = sub i64 0, 4474280808248539222
  %49 = sub i64 %48, %47
  %50 = add i64 %49, 4474280808248539222
  %51 = sub i64 0, %47
  %52 = getelementptr inbounds i32*, i32** %46, i64 %50
  store i32* %40, i32** %52, align 8
  br label %53

; <label>:53:                                     ; preds = %41
  %54 = load i64, i64* %6, align 8
  %55 = sub i64 %54, 5929273663743773984
  %56 = add i64 %55, 1
  %57 = add i64 %56, 5929273663743773984
  %58 = add i64 %54, 1
  store i64 %57, i64* %6, align 8
  br label %34

; <label>:59:                                     ; preds = %38
  %60 = landingpad { i8*, i32 }
          catch i8* null
  %61 = extractvalue { i8*, i32 } %60, 0
  store i8* %61, i8** %7, align 8
  %62 = extractvalue { i8*, i32 } %60, 1
  store i32 %62, i32* %8, align 4
  br label %63

; <label>:63:                                     ; preds = %59
  %64 = load i8*, i8** %7, align 8
  %65 = call i8* @__cxa_begin_catch(i8* %64) #11
  store i64 1, i64* %9, align 8
  br label %66

; <label>:66:                                     ; preds = %84, %63
  %67 = load i64, i64* %9, align 8
  %68 = load i64, i64* %6, align 8
  %69 = icmp ult i64 %67, %68
  br i1 %69, label %70, label %134

; <label>:70:                                     ; preds = %66
  %71 = bitcast %"class.std::deque"* %10 to %"class.std::_Deque_base"*
  %72 = bitcast %"class.std::deque"* %10 to %"class.std::_Deque_base"*
  %73 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %72, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %73, i32 0, i32 2
  %75 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %74, i32 0, i32 3
  %76 = load i32**, i32*** %75, align 8
  %77 = load i64, i64* %9, align 8
  %78 = sub i64 0, -209751839413823536
  %79 = sub i64 %78, %77
  %80 = add i64 %79, -209751839413823536
  %81 = sub i64 0, %77
  %82 = getelementptr inbounds i32*, i32** %76, i64 %80
  %83 = load i32*, i32** %82, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %71, i32* %83) #11
  br label %84

; <label>:84:                                     ; preds = %70
  %85 = load i64, i64* %9, align 8
  %86 = sub i64 0, %85
  %87 = sub i64 0, 1
  %88 = add i64 %86, %87
  %89 = sub i64 0, %88
  %90 = add i64 %85, 1
  store i64 %89, i64* %9, align 8
  br label %66

; <label>:91:                                     ; preds = %34
  %92 = load i32, i32* @x.615
  %93 = load i32, i32* @y.616
  %94 = sub i32 %92, 1988010433
  %95 = sub i32 %94, 1
  %96 = add i32 %95, 1988010433
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 false, true
  %105 = and i1 %102, false
  %106 = and i1 %100, %104
  %107 = and i1 %103, false
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 false, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  br i1 %116, label %118, label %274

; <label>:118:                                    ; preds = %91, %274
  %119 = load i32, i32* @x.615
  %120 = load i32, i32* @y.616
  %121 = sub i32 %119, 672956555
  %122 = sub i32 %121, 1
  %123 = add i32 %122, 672956555
  %124 = sub i32 %119, 1
  %125 = mul i32 %119, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %120, 10
  %129 = and i1 %127, %128
  %130 = xor i1 %127, %128
  %131 = or i1 %129, %130
  %132 = or i1 %127, %128
  br i1 %131, label %133, label %274

; <label>:133:                                    ; preds = %118
  br label %222

; <label>:134:                                    ; preds = %66
  %135 = load i32, i32* @x.615
  %136 = load i32, i32* @y.616
  %137 = sub i32 0, 1
  %138 = add i32 %135, %137
  %139 = sub i32 %135, 1
  %140 = mul i32 %135, %138
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %136, 10
  %144 = xor i1 %142, true
  %145 = xor i1 %143, true
  %146 = xor i1 true, true
  %147 = and i1 %144, true
  %148 = and i1 %142, %146
  %149 = and i1 %145, true
  %150 = and i1 %143, %146
  %151 = or i1 %147, %148
  %152 = or i1 %149, %150
  %153 = xor i1 %151, %152
  %154 = or i1 %144, %145
  %155 = xor i1 %154, true
  %156 = or i1 true, %146
  %157 = and i1 %155, %156
  %158 = or i1 %153, %157
  %159 = or i1 %142, %143
  br i1 %158, label %160, label %275

; <label>:160:                                    ; preds = %134, %275
  %161 = load i32, i32* @x.615
  %162 = load i32, i32* @y.616
  %163 = sub i32 0, 1
  %164 = add i32 %161, %163
  %165 = sub i32 %161, 1
  %166 = mul i32 %161, %164
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %162, 10
  %170 = and i1 %168, %169
  %171 = xor i1 %168, %169
  %172 = or i1 %170, %171
  %173 = or i1 %168, %169
  br i1 %172, label %174, label %275

; <label>:174:                                    ; preds = %160
  invoke void @__cxa_rethrow() #13
          to label %231 unwind label %175

; <label>:175:                                    ; preds = %174
  %176 = landingpad { i8*, i32 }
          cleanup
  %177 = extractvalue { i8*, i32 } %176, 0
  store i8* %177, i8** %7, align 8
  %178 = extractvalue { i8*, i32 } %176, 1
  store i32 %178, i32* %8, align 4
  invoke void @__cxa_end_catch()
          to label %179 unwind label %228

; <label>:179:                                    ; preds = %175
  %180 = load i32, i32* @x.615
  %181 = load i32, i32* @y.616
  %182 = sub i32 %180, -531207079
  %183 = sub i32 %182, 1
  %184 = add i32 %183, -531207079
  %185 = sub i32 %180, 1
  %186 = mul i32 %180, %184
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %181, 10
  %190 = and i1 %188, %189
  %191 = xor i1 %188, %189
  %192 = or i1 %190, %191
  %193 = or i1 %188, %189
  br i1 %192, label %194, label %276

; <label>:194:                                    ; preds = %179, %276
  %195 = load i32, i32* @x.615
  %196 = load i32, i32* @y.616
  %197 = sub i32 %195, 278263332
  %198 = sub i32 %197, 1
  %199 = add i32 %198, 278263332
  %200 = sub i32 %195, 1
  %201 = mul i32 %195, %199
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %196, 10
  %205 = xor i1 %203, true
  %206 = xor i1 %204, true
  %207 = xor i1 false, true
  %208 = and i1 %205, false
  %209 = and i1 %203, %207
  %210 = and i1 %206, false
  %211 = and i1 %204, %207
  %212 = or i1 %208, %209
  %213 = or i1 %210, %211
  %214 = xor i1 %212, %213
  %215 = or i1 %205, %206
  %216 = xor i1 %215, true
  %217 = or i1 false, %207
  %218 = and i1 %216, %217
  %219 = or i1 %214, %218
  %220 = or i1 %203, %204
  br i1 %219, label %221, label %276

; <label>:221:                                    ; preds = %194
  br label %223

; <label>:222:                                    ; preds = %133
  ret void

; <label>:223:                                    ; preds = %221
  %224 = load i8*, i8** %7, align 8
  %225 = load i32, i32* %8, align 4
  %226 = insertvalue { i8*, i32 } undef, i8* %224, 0
  %227 = insertvalue { i8*, i32 } %226, i32 %225, 1
  resume { i8*, i32 } %227

; <label>:228:                                    ; preds = %175
  %229 = landingpad { i8*, i32 }
          catch i8* null
  %230 = extractvalue { i8*, i32 } %229, 0
  call void @__clang_call_terminate(i8* %230) #9
  unreachable

; <label>:231:                                    ; preds = %174
  %232 = load i32, i32* @x.615
  %233 = load i32, i32* @y.616
  %234 = sub i32 %232, -972806636
  %235 = sub i32 %234, 1
  %236 = add i32 %235, -972806636
  %237 = sub i32 %232, 1
  %238 = mul i32 %232, %236
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %233, 10
  %242 = xor i1 %240, true
  %243 = xor i1 %241, true
  %244 = xor i1 true, true
  %245 = and i1 %242, true
  %246 = and i1 %240, %244
  %247 = and i1 %243, true
  %248 = and i1 %241, %244
  %249 = or i1 %245, %246
  %250 = or i1 %247, %248
  %251 = xor i1 %249, %250
  %252 = or i1 %242, %243
  %253 = xor i1 %252, true
  %254 = or i1 true, %244
  %255 = and i1 %253, %254
  %256 = or i1 %251, %255
  %257 = or i1 %240, %241
  br i1 %256, label %258, label %277

; <label>:258:                                    ; preds = %231, %277
  %259 = load i32, i32* @x.615
  %260 = load i32, i32* @y.616
  %261 = add i32 %259, -2108124776
  %262 = sub i32 %261, 1
  %263 = sub i32 %262, -2108124776
  %264 = sub i32 %259, 1
  %265 = mul i32 %259, %263
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %260, 10
  %269 = and i1 %267, %268
  %270 = xor i1 %267, %268
  %271 = or i1 %269, %270
  %272 = or i1 %267, %268
  br i1 %271, label %273, label %277

; <label>:273:                                    ; preds = %258
  unreachable

; <label>:274:                                    ; preds = %118, %91
  br label %118

; <label>:275:                                    ; preds = %160, %134
  br label %160

; <label>:276:                                    ; preds = %194, %179
  br label %194

; <label>:277:                                    ; preds = %258, %231
  br label %258
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt15_Deque_iteratorIiRiPiEmiEl(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator"*, i64) #1 comdat align 2 {
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  store i64 %2, i64* %5, align 8
  %7 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %6, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #11
  %8 = load i64, i64* %5, align 8
  %9 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorIiRiPiEmIEl(%"struct.std::_Deque_iterator"* %6, i64 %8) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %9) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt5dequeIiSaIiEE8max_sizeEv(%"class.std::deque"*) #1 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.619
  %6 = load i32, i32* @y.620
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -70874605, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %67
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -70874605, label %18
    i32 1299739179, label %26
    i32 864082653, label %59
    i32 1378517157, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %67

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1299739179, i32 1378517157
  store i32 %25, i32* %14
  br label %67

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %27, align 8
  %28 = load %"class.std::deque"*, %"class.std::deque"** %27, align 8
  %29 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  %30 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %29) #11
  %31 = call i64 @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_(%"class.std::allocator.0"* dereferenceable(1) %30) #11
  store i64 %31, i64* %2
  %32 = load i32, i32* @x.619
  %33 = load i32, i32* @y.620
  %34 = sub i32 %32, -152995115
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -152995115
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 864082653, i32 1378517157
  store i32 %58, i32* %14
  br label %67

; <label>:59:                                     ; preds = %15
  %60 = load volatile i64, i64* %2
  ret i64 %60

; <label>:61:                                     ; preds = %15
  %62 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %62, align 8
  %63 = load %"class.std::deque"*, %"class.std::deque"** %62, align 8
  %64 = bitcast %"class.std::deque"* %63 to %"class.std::_Deque_base"*
  %65 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %64) #11
  %66 = call i64 @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_(%"class.std::allocator.0"* dereferenceable(1) %65) #11
  store i32 1299739179, i32* %14
  br label %67

; <label>:67:                                     ; preds = %61, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt5dequeIiSaIiEE14_S_buffer_sizeEv() #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = load i32, i32* @x.621
  %2 = load i32, i32* @y.622
  %3 = sub i32 %1, -1306466607
  %4 = sub i32 %3, 1
  %5 = add i32 %4, -1306466607
  %6 = sub i32 %1, 1
  %7 = mul i32 %1, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %2, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 true, true
  %14 = and i1 %11, true
  %15 = and i1 %9, %13
  %16 = and i1 %12, true
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 true, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %102

; <label>:27:                                     ; preds = %0, %102
  %28 = load i32, i32* @x.621
  %29 = load i32, i32* @y.622
  %30 = add i32 %28, -1458138731
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, -1458138731
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  br i1 %52, label %54, label %102

; <label>:54:                                     ; preds = %27
  %55 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %56 unwind label %99

; <label>:56:                                     ; preds = %54
  %57 = load i32, i32* @x.621
  %58 = load i32, i32* @y.622
  %59 = add i32 %57, 2120041131
  %60 = sub i32 %59, 1
  %61 = sub i32 %60, 2120041131
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  br i1 %69, label %71, label %103

; <label>:71:                                     ; preds = %56, %103
  %72 = load i32, i32* @x.621
  %73 = load i32, i32* @y.622
  %74 = add i32 %72, -1388178957
  %75 = sub i32 %74, 1
  %76 = sub i32 %75, -1388178957
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = xor i1 %80, true
  %83 = xor i1 %81, true
  %84 = xor i1 true, true
  %85 = and i1 %82, true
  %86 = and i1 %80, %84
  %87 = and i1 %83, true
  %88 = and i1 %81, %84
  %89 = or i1 %85, %86
  %90 = or i1 %87, %88
  %91 = xor i1 %89, %90
  %92 = or i1 %82, %83
  %93 = xor i1 %92, true
  %94 = or i1 true, %84
  %95 = and i1 %93, %94
  %96 = or i1 %91, %95
  %97 = or i1 %80, %81
  br i1 %96, label %98, label %103

; <label>:98:                                     ; preds = %71
  ret i64 %55

; <label>:99:                                     ; preds = %54
  %100 = landingpad { i8*, i32 }
          catch i8* null
  %101 = extractvalue { i8*, i32 } %100, 0
  call void @__clang_call_terminate(i8* %101) #9
  unreachable

; <label>:102:                                    ; preds = %27, %0
  br label %27

; <label>:103:                                    ; preds = %71, %56
  br label %71
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE23_M_reserve_map_at_frontEm(%"class.std::deque"*, i64) #2 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::deque"*
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.623
  %9 = load i32, i32* @y.624
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -407898225, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %135
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -407898225, label %21
    i32 2079994617, label %29
    i32 -816075229, label %68
    i32 1489693593, label %71
    i32 461580558, label %75
    i32 159371774, label %76
  ]

; <label>:20:                                     ; preds = %18
  br label %135

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 2079994617, i32 159371774
  store i32 %28, i32* %17
  br label %135

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::deque"*, align 8
  %31 = alloca i64, align 8
  store i64* %31, i64** %5
  store %"class.std::deque"* %0, %"class.std::deque"** %30, align 8
  %32 = load volatile i64*, i64** %5
  store i64 %1, i64* %32, align 8
  %33 = load %"class.std::deque"*, %"class.std::deque"** %30, align 8
  store %"class.std::deque"* %33, %"class.std::deque"** %4
  %34 = load volatile i64*, i64** %5
  %35 = load i64, i64* %34, align 8
  %36 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %37 = bitcast %"class.std::deque"* %36 to %"class.std::_Deque_base"*
  %38 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %38, i32 0, i32 2
  %40 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %39, i32 0, i32 3
  %41 = load i32**, i32*** %40, align 8
  %42 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %43 = bitcast %"class.std::deque"* %42 to %"class.std::_Deque_base"*
  %44 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %44, i32 0, i32 0
  %46 = load i32**, i32*** %45, align 8
  %47 = ptrtoint i32** %41 to i64
  %48 = ptrtoint i32** %46 to i64
  %49 = sub i64 0, %48
  %50 = add i64 %47, %49
  %51 = sub i64 %47, %48
  %52 = sdiv exact i64 %50, 8
  %53 = icmp ugt i64 %35, %52
  store i1 %53, i1* %3
  %54 = load i32, i32* @x.623
  %55 = load i32, i32* @y.624
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 -816075229, i32 159371774
  store i32 %67, i32* %17
  br label %135

; <label>:68:                                     ; preds = %18
  %69 = load volatile i1, i1* %3
  %70 = select i1 %69, i32 1489693593, i32 461580558
  store i32 %70, i32* %17
  br label %135

; <label>:71:                                     ; preds = %18
  %72 = load volatile i64*, i64** %5
  %73 = load i64, i64* %72, align 8
  %74 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  call void @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb(%"class.std::deque"* %74, i64 %73, i1 zeroext true)
  store i32 461580558, i32* %17
  br label %135

; <label>:75:                                     ; preds = %18
  ret void

; <label>:76:                                     ; preds = %18
  %77 = alloca %"class.std::deque"*, align 8
  %78 = alloca i64, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %77, align 8
  store i64 %1, i64* %78, align 8
  %79 = load %"class.std::deque"*, %"class.std::deque"** %77, align 8
  %80 = load i64, i64* %78, align 8
  %81 = bitcast %"class.std::deque"* %79 to %"class.std::_Deque_base"*
  %82 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %81, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %82, i32 0, i32 2
  %84 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %83, i32 0, i32 3
  %85 = load i32**, i32*** %84, align 8
  %86 = bitcast %"class.std::deque"* %79 to %"class.std::_Deque_base"*
  %87 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %86, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %87, i32 0, i32 0
  %89 = load i32**, i32*** %88, align 8
  %90 = ptrtoint i32** %85 to i64
  %91 = ptrtoint i32** %89 to i64
  %92 = sub i64 0, -2308304860676712710
  %93 = sub i64 %92, %90
  %94 = add i64 %93, -2308304860676712710
  %95 = sub i64 0, %90
  %96 = sub i64 0, %91
  %97 = sub i64 %94, %96
  %98 = add i64 %94, %91
  %99 = shl i64 %90, %91
  %100 = sub i64 0, %91
  %101 = add i64 %90, %100
  %102 = sub i64 %90, %91
  %103 = mul i64 %101, %91
  %104 = shl i64 %90, %91
  %105 = sub i64 %90, 2825241646211618784
  %106 = sub i64 %105, %91
  %107 = add i64 %106, 2825241646211618784
  %108 = sub i64 %90, %91
  %109 = shl i64 %107, 8
  %110 = shl i64 %107, 8
  %111 = sub i64 0, 5021816250449882846
  %112 = sub i64 %111, %107
  %113 = add i64 %112, 5021816250449882846
  %114 = sub i64 0, %107
  %115 = sub i64 %113, -2079166174804559054
  %116 = add i64 %115, 8
  %117 = add i64 %116, -2079166174804559054
  %118 = add i64 %113, 8
  %119 = shl i64 %107, 8
  %120 = sub i64 %107, -5757469401268343415
  %121 = sub i64 %120, 8
  %122 = add i64 %121, -5757469401268343415
  %123 = sub i64 %107, 8
  %124 = mul i64 %122, 8
  %125 = sub i64 0, -8760884945954981966
  %126 = sub i64 %125, %107
  %127 = add i64 %126, -8760884945954981966
  %128 = sub i64 0, %107
  %129 = sub i64 %127, 6789041804607055306
  %130 = add i64 %129, 8
  %131 = add i64 %130, 6789041804607055306
  %132 = add i64 %127, 8
  %133 = sdiv exact i64 %107, 8
  %134 = icmp ugt i64 %80, %133
  store i32 2079994617, i32* %17
  br label %135

; <label>:135:                                    ; preds = %76, %71, %68, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_(%"class.std::allocator.0"* dereferenceable(1)) #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %2, align 8
  %3 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %2, align 8
  %4 = bitcast %"class.std::allocator.0"* %3 to %"class.__gnu_cxx::new_allocator.1"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.1"* %4) #11
  ret i64 %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb(%"class.std::deque"*, i64, i1 zeroext) #2 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca i32**
  %8 = alloca i1
  %9 = alloca i1
  %10 = alloca i32**
  %11 = alloca i64
  %12 = alloca i64
  %13 = alloca %"class.std::deque"*
  %14 = alloca %"class.std::deque"*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i8, align 1
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i32**, align 8
  %20 = alloca i64, align 8
  %21 = alloca i32**, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %14, align 8
  store i64 %1, i64* %15, align 8
  %22 = zext i1 %2 to i8
  store i8 %22, i8* %16, align 1
  %23 = load %"class.std::deque"*, %"class.std::deque"** %14, align 8
  store %"class.std::deque"* %23, %"class.std::deque"** %13
  %24 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %25 = bitcast %"class.std::deque"* %24 to %"class.std::_Deque_base"*
  %26 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %26, i32 0, i32 3
  %28 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %27, i32 0, i32 3
  %29 = load i32**, i32*** %28, align 8
  %30 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %31 = bitcast %"class.std::deque"* %30 to %"class.std::_Deque_base"*
  %32 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %32, i32 0, i32 2
  %34 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %33, i32 0, i32 3
  %35 = load i32**, i32*** %34, align 8
  %36 = ptrtoint i32** %29 to i64
  %37 = ptrtoint i32** %35 to i64
  %38 = sub i64 %36, 6869502536504932896
  %39 = sub i64 %38, %37
  %40 = add i64 %39, 6869502536504932896
  %41 = sub i64 %36, %37
  %42 = sdiv exact i64 %40, 8
  %43 = sub i64 0, 1
  %44 = sub i64 %42, %43
  %45 = add nsw i64 %42, 1
  store i64 %44, i64* %17, align 8
  %46 = load i64, i64* %17, align 8
  %47 = load i64, i64* %15, align 8
  %48 = sub i64 0, %46
  %49 = sub i64 0, %47
  %50 = add i64 %48, %49
  %51 = sub i64 0, %50
  %52 = add i64 %46, %47
  store i64 %51, i64* %18, align 8
  %53 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %54 = bitcast %"class.std::deque"* %53 to %"class.std::_Deque_base"*
  %55 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %54, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %55, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  store i64 %57, i64* %12
  %58 = load i64, i64* %18, align 8
  %59 = mul i64 2, %58
  store i64 %59, i64* %11
  %60 = alloca i32
  store i32 1631809838, i32* %60
  %61 = alloca i64
  %62 = alloca i64
  br label %63

; <label>:63:                                     ; preds = %3, %578
  %64 = load i32, i32* %60
  switch i32 %64, label %65 [
    i32 1631809838, label %66
    i32 -1004134284, label %71
    i32 -223070841, label %86
    i32 886143669, label %133
    i32 742566820, label %136
    i32 1128306890, label %138
    i32 -791832798, label %139
    i32 117042178, label %156
    i32 -798783809, label %195
    i32 -1165426270, label %198
    i32 -974770016, label %213
    i32 -38376700, label %256
    i32 613673047, label %257
    i32 -513642447, label %275
    i32 649299164, label %276
    i32 296181954, label %312
    i32 1476177895, label %328
    i32 14583296, label %357
    i32 237837870, label %359
    i32 -2021334960, label %360
    i32 1779967282, label %377
    i32 -502480014, label %444
    i32 -519376056, label %445
    i32 1501249274, label %459
    i32 28856494, label %507
    i32 475426652, label %519
    i32 1461244748, label %535
    i32 -1940632891, label %537
  ]

; <label>:65:                                     ; preds = %63
  br label %578

; <label>:66:                                     ; preds = %63
  %67 = load volatile i64, i64* %12
  %68 = load volatile i64, i64* %11
  %69 = icmp ugt i64 %67, %68
  %70 = select i1 %69, i32 -1004134284, i32 649299164
  store i32 %70, i32* %60
  br label %578

; <label>:71:                                     ; preds = %63
  %72 = load i32, i32* @x.627
  %73 = load i32, i32* @y.628
  %74 = sub i32 0, 1
  %75 = add i32 %72, %74
  %76 = sub i32 %72, 1
  %77 = mul i32 %72, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %73, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  %85 = select i1 %83, i32 -223070841, i32 1501249274
  store i32 %85, i32* %60
  br label %578

; <label>:86:                                     ; preds = %63
  %87 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %88 = bitcast %"class.std::deque"* %87 to %"class.std::_Deque_base"*
  %89 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %88, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %89, i32 0, i32 0
  %91 = load i32**, i32*** %90, align 8
  %92 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %93 = bitcast %"class.std::deque"* %92 to %"class.std::_Deque_base"*
  %94 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %93, i32 0, i32 0
  %95 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %94, i32 0, i32 1
  %96 = load i64, i64* %95, align 8
  %97 = load i64, i64* %18, align 8
  %98 = add i64 %96, -3602097428938185076
  %99 = sub i64 %98, %97
  %100 = sub i64 %99, -3602097428938185076
  %101 = sub i64 %96, %97
  %102 = udiv i64 %100, 2
  %103 = getelementptr inbounds i32*, i32** %91, i64 %102
  store i32** %103, i32*** %10
  %104 = load i8, i8* %16, align 1
  %105 = trunc i8 %104 to i1
  store i1 %105, i1* %9
  %106 = load i32, i32* @x.627
  %107 = load i32, i32* @y.628
  %108 = sub i32 %106, 1794755379
  %109 = sub i32 %108, 1
  %110 = add i32 %109, 1794755379
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = xor i1 %114, true
  %117 = xor i1 %115, true
  %118 = xor i1 true, true
  %119 = and i1 %116, true
  %120 = and i1 %114, %118
  %121 = and i1 %117, true
  %122 = and i1 %115, %118
  %123 = or i1 %119, %120
  %124 = or i1 %121, %122
  %125 = xor i1 %123, %124
  %126 = or i1 %116, %117
  %127 = xor i1 %126, true
  %128 = or i1 true, %118
  %129 = and i1 %127, %128
  %130 = or i1 %125, %129
  %131 = or i1 %114, %115
  %132 = select i1 %130, i32 886143669, i32 1501249274
  store i32 %132, i32* %60
  br label %578

; <label>:133:                                    ; preds = %63
  %134 = load volatile i1, i1* %9
  %135 = select i1 %134, i32 742566820, i32 1128306890
  store i32 %135, i32* %60
  br label %578

; <label>:136:                                    ; preds = %63
  %137 = load i64, i64* %15, align 8
  store i32 -791832798, i32* %60
  store i64 %137, i64* %61
  br label %578

; <label>:138:                                    ; preds = %63
  store i32 -791832798, i32* %60
  store i64 0, i64* %61
  br label %578

; <label>:139:                                    ; preds = %63
  %140 = load i64, i64* %61
  store i64 %140, i64* %5
  %141 = load i32, i32* @x.627
  %142 = load i32, i32* @y.628
  %143 = add i32 %141, -496692116
  %144 = sub i32 %143, 1
  %145 = sub i32 %144, -496692116
  %146 = sub i32 %141, 1
  %147 = mul i32 %141, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %142, 10
  %151 = and i1 %149, %150
  %152 = xor i1 %149, %150
  %153 = or i1 %151, %152
  %154 = or i1 %149, %150
  %155 = select i1 %153, i32 117042178, i32 28856494
  store i32 %155, i32* %60
  br label %578

; <label>:156:                                    ; preds = %63
  %157 = load volatile i32**, i32*** %10
  %158 = load volatile i64, i64* %5
  %159 = getelementptr inbounds i32*, i32** %157, i64 %158
  store i32** %159, i32*** %19, align 8
  %160 = load i32**, i32*** %19, align 8
  %161 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %162 = bitcast %"class.std::deque"* %161 to %"class.std::_Deque_base"*
  %163 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %162, i32 0, i32 0
  %164 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %163, i32 0, i32 2
  %165 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %164, i32 0, i32 3
  %166 = load i32**, i32*** %165, align 8
  %167 = icmp ult i32** %160, %166
  store i1 %167, i1* %8
  %168 = load i32, i32* @x.627
  %169 = load i32, i32* @y.628
  %170 = sub i32 %168, 1151653727
  %171 = sub i32 %170, 1
  %172 = add i32 %171, 1151653727
  %173 = sub i32 %168, 1
  %174 = mul i32 %168, %172
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %169, 10
  %178 = xor i1 %176, true
  %179 = xor i1 %177, true
  %180 = xor i1 true, true
  %181 = and i1 %178, true
  %182 = and i1 %176, %180
  %183 = and i1 %179, true
  %184 = and i1 %177, %180
  %185 = or i1 %181, %182
  %186 = or i1 %183, %184
  %187 = xor i1 %185, %186
  %188 = or i1 %178, %179
  %189 = xor i1 %188, true
  %190 = or i1 true, %180
  %191 = and i1 %189, %190
  %192 = or i1 %187, %191
  %193 = or i1 %176, %177
  %194 = select i1 %192, i32 -798783809, i32 28856494
  store i32 %194, i32* %60
  br label %578

; <label>:195:                                    ; preds = %63
  %196 = load volatile i1, i1* %8
  %197 = select i1 %196, i32 -1165426270, i32 613673047
  store i32 %197, i32* %60
  br label %578

; <label>:198:                                    ; preds = %63
  %199 = load i32, i32* @x.627
  %200 = load i32, i32* @y.628
  %201 = sub i32 0, 1
  %202 = add i32 %199, %201
  %203 = sub i32 %199, 1
  %204 = mul i32 %199, %202
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %200, 10
  %208 = and i1 %206, %207
  %209 = xor i1 %206, %207
  %210 = or i1 %208, %209
  %211 = or i1 %206, %207
  %212 = select i1 %210, i32 -974770016, i32 475426652
  store i32 %212, i32* %60
  br label %578

; <label>:213:                                    ; preds = %63
  %214 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %215 = bitcast %"class.std::deque"* %214 to %"class.std::_Deque_base"*
  %216 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %215, i32 0, i32 0
  %217 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %216, i32 0, i32 2
  %218 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %217, i32 0, i32 3
  %219 = load i32**, i32*** %218, align 8
  %220 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %221 = bitcast %"class.std::deque"* %220 to %"class.std::_Deque_base"*
  %222 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %221, i32 0, i32 0
  %223 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %222, i32 0, i32 3
  %224 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %223, i32 0, i32 3
  %225 = load i32**, i32*** %224, align 8
  %226 = getelementptr inbounds i32*, i32** %225, i64 1
  %227 = load i32**, i32*** %19, align 8
  %228 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %219, i32** %226, i32** %227)
  %229 = load i32, i32* @x.627
  %230 = load i32, i32* @y.628
  %231 = add i32 %229, 229790855
  %232 = sub i32 %231, 1
  %233 = sub i32 %232, 229790855
  %234 = sub i32 %229, 1
  %235 = mul i32 %229, %233
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %230, 10
  %239 = xor i1 %237, true
  %240 = xor i1 %238, true
  %241 = xor i1 false, true
  %242 = and i1 %239, false
  %243 = and i1 %237, %241
  %244 = and i1 %240, false
  %245 = and i1 %238, %241
  %246 = or i1 %242, %243
  %247 = or i1 %244, %245
  %248 = xor i1 %246, %247
  %249 = or i1 %239, %240
  %250 = xor i1 %249, true
  %251 = or i1 false, %241
  %252 = and i1 %250, %251
  %253 = or i1 %248, %252
  %254 = or i1 %237, %238
  %255 = select i1 %253, i32 -38376700, i32 475426652
  store i32 %255, i32* %60
  br label %578

; <label>:256:                                    ; preds = %63
  store i32 -513642447, i32* %60
  br label %578

; <label>:257:                                    ; preds = %63
  %258 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %259 = bitcast %"class.std::deque"* %258 to %"class.std::_Deque_base"*
  %260 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %259, i32 0, i32 0
  %261 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %260, i32 0, i32 2
  %262 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %261, i32 0, i32 3
  %263 = load i32**, i32*** %262, align 8
  %264 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %265 = bitcast %"class.std::deque"* %264 to %"class.std::_Deque_base"*
  %266 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %265, i32 0, i32 0
  %267 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %266, i32 0, i32 3
  %268 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %267, i32 0, i32 3
  %269 = load i32**, i32*** %268, align 8
  %270 = getelementptr inbounds i32*, i32** %269, i64 1
  %271 = load i32**, i32*** %19, align 8
  %272 = load i64, i64* %17, align 8
  %273 = getelementptr inbounds i32*, i32** %271, i64 %272
  %274 = call i32** @_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_(i32** %263, i32** %270, i32** %273)
  store i32 -513642447, i32* %60
  br label %578

; <label>:275:                                    ; preds = %63
  store i32 -519376056, i32* %60
  br label %578

; <label>:276:                                    ; preds = %63
  %277 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %278 = bitcast %"class.std::deque"* %277 to %"class.std::_Deque_base"*
  %279 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %278, i32 0, i32 0
  %280 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %279, i32 0, i32 1
  %281 = load i64, i64* %280, align 8
  %282 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %283 = bitcast %"class.std::deque"* %282 to %"class.std::_Deque_base"*
  %284 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %283, i32 0, i32 0
  %285 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %284, i32 0, i32 1
  %286 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %285, i64* dereferenceable(8) %15)
  %287 = load i64, i64* %286, align 8
  %288 = sub i64 %281, 6741972909016874556
  %289 = add i64 %288, %287
  %290 = add i64 %289, 6741972909016874556
  %291 = add i64 %281, %287
  %292 = sub i64 %290, -3059719632183048713
  %293 = add i64 %292, 2
  %294 = add i64 %293, -3059719632183048713
  %295 = add i64 %290, 2
  store i64 %294, i64* %20, align 8
  %296 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %297 = bitcast %"class.std::deque"* %296 to %"class.std::_Deque_base"*
  %298 = load i64, i64* %20, align 8
  %299 = call i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"* %297, i64 %298)
  store i32** %299, i32*** %21, align 8
  %300 = load i32**, i32*** %21, align 8
  %301 = load i64, i64* %20, align 8
  %302 = load i64, i64* %18, align 8
  %303 = sub i64 %301, -6379310523764337199
  %304 = sub i64 %303, %302
  %305 = add i64 %304, -6379310523764337199
  %306 = sub i64 %301, %302
  %307 = udiv i64 %305, 2
  %308 = getelementptr inbounds i32*, i32** %300, i64 %307
  store i32** %308, i32*** %7
  %309 = load i8, i8* %16, align 1
  %310 = trunc i8 %309 to i1
  %311 = select i1 %310, i32 296181954, i32 237837870
  store i32 %311, i32* %60
  br label %578

; <label>:312:                                    ; preds = %63
  %313 = load i32, i32* @x.627
  %314 = load i32, i32* @y.628
  %315 = sub i32 %313, 1984893688
  %316 = sub i32 %315, 1
  %317 = add i32 %316, 1984893688
  %318 = sub i32 %313, 1
  %319 = mul i32 %313, %317
  %320 = urem i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = icmp slt i32 %314, 10
  %323 = and i1 %321, %322
  %324 = xor i1 %321, %322
  %325 = or i1 %323, %324
  %326 = or i1 %321, %322
  %327 = select i1 %325, i32 1476177895, i32 1461244748
  store i32 %327, i32* %60
  br label %578

; <label>:328:                                    ; preds = %63
  %329 = load i64, i64* %15, align 8
  store i64 %329, i64* %6
  %330 = load i32, i32* @x.627
  %331 = load i32, i32* @y.628
  %332 = sub i32 %330, 30643370
  %333 = sub i32 %332, 1
  %334 = add i32 %333, 30643370
  %335 = sub i32 %330, 1
  %336 = mul i32 %330, %334
  %337 = urem i32 %336, 2
  %338 = icmp eq i32 %337, 0
  %339 = icmp slt i32 %331, 10
  %340 = xor i1 %338, true
  %341 = xor i1 %339, true
  %342 = xor i1 true, true
  %343 = and i1 %340, true
  %344 = and i1 %338, %342
  %345 = and i1 %341, true
  %346 = and i1 %339, %342
  %347 = or i1 %343, %344
  %348 = or i1 %345, %346
  %349 = xor i1 %347, %348
  %350 = or i1 %340, %341
  %351 = xor i1 %350, true
  %352 = or i1 true, %342
  %353 = and i1 %351, %352
  %354 = or i1 %349, %353
  %355 = or i1 %338, %339
  %356 = select i1 %354, i32 14583296, i32 1461244748
  store i32 %356, i32* %60
  br label %578

; <label>:357:                                    ; preds = %63
  store i32 -2021334960, i32* %60
  %358 = load volatile i64, i64* %6
  store i64 %358, i64* %62
  br label %578

; <label>:359:                                    ; preds = %63
  store i32 -2021334960, i32* %60
  store i64 0, i64* %62
  br label %578

; <label>:360:                                    ; preds = %63
  %361 = load i64, i64* %62
  store i64 %361, i64* %4
  %362 = load i32, i32* @x.627
  %363 = load i32, i32* @y.628
  %364 = add i32 %362, -1092788287
  %365 = sub i32 %364, 1
  %366 = sub i32 %365, -1092788287
  %367 = sub i32 %362, 1
  %368 = mul i32 %362, %366
  %369 = urem i32 %368, 2
  %370 = icmp eq i32 %369, 0
  %371 = icmp slt i32 %363, 10
  %372 = and i1 %370, %371
  %373 = xor i1 %370, %371
  %374 = or i1 %372, %373
  %375 = or i1 %370, %371
  %376 = select i1 %374, i32 1779967282, i32 -1940632891
  store i32 %376, i32* %60
  br label %578

; <label>:377:                                    ; preds = %63
  %378 = load volatile i32**, i32*** %7
  %379 = load volatile i64, i64* %4
  %380 = getelementptr inbounds i32*, i32** %378, i64 %379
  store i32** %380, i32*** %19, align 8
  %381 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %382 = bitcast %"class.std::deque"* %381 to %"class.std::_Deque_base"*
  %383 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %382, i32 0, i32 0
  %384 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %383, i32 0, i32 2
  %385 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %384, i32 0, i32 3
  %386 = load i32**, i32*** %385, align 8
  %387 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %388 = bitcast %"class.std::deque"* %387 to %"class.std::_Deque_base"*
  %389 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %388, i32 0, i32 0
  %390 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %389, i32 0, i32 3
  %391 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %390, i32 0, i32 3
  %392 = load i32**, i32*** %391, align 8
  %393 = getelementptr inbounds i32*, i32** %392, i64 1
  %394 = load i32**, i32*** %19, align 8
  %395 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %386, i32** %393, i32** %394)
  %396 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %397 = bitcast %"class.std::deque"* %396 to %"class.std::_Deque_base"*
  %398 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %399 = bitcast %"class.std::deque"* %398 to %"class.std::_Deque_base"*
  %400 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %399, i32 0, i32 0
  %401 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %400, i32 0, i32 0
  %402 = load i32**, i32*** %401, align 8
  %403 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %404 = bitcast %"class.std::deque"* %403 to %"class.std::_Deque_base"*
  %405 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %404, i32 0, i32 0
  %406 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %405, i32 0, i32 1
  %407 = load i64, i64* %406, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %397, i32** %402, i64 %407) #11
  %408 = load i32**, i32*** %21, align 8
  %409 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %410 = bitcast %"class.std::deque"* %409 to %"class.std::_Deque_base"*
  %411 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %410, i32 0, i32 0
  %412 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %411, i32 0, i32 0
  store i32** %408, i32*** %412, align 8
  %413 = load i64, i64* %20, align 8
  %414 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %415 = bitcast %"class.std::deque"* %414 to %"class.std::_Deque_base"*
  %416 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %415, i32 0, i32 0
  %417 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %416, i32 0, i32 1
  store i64 %413, i64* %417, align 8
  %418 = load i32, i32* @x.627
  %419 = load i32, i32* @y.628
  %420 = sub i32 0, 1
  %421 = add i32 %418, %420
  %422 = sub i32 %418, 1
  %423 = mul i32 %418, %421
  %424 = urem i32 %423, 2
  %425 = icmp eq i32 %424, 0
  %426 = icmp slt i32 %419, 10
  %427 = xor i1 %425, true
  %428 = xor i1 %426, true
  %429 = xor i1 false, true
  %430 = and i1 %427, false
  %431 = and i1 %425, %429
  %432 = and i1 %428, false
  %433 = and i1 %426, %429
  %434 = or i1 %430, %431
  %435 = or i1 %432, %433
  %436 = xor i1 %434, %435
  %437 = or i1 %427, %428
  %438 = xor i1 %437, true
  %439 = or i1 false, %429
  %440 = and i1 %438, %439
  %441 = or i1 %436, %440
  %442 = or i1 %425, %426
  %443 = select i1 %441, i32 -502480014, i32 -1940632891
  store i32 %443, i32* %60
  br label %578

; <label>:444:                                    ; preds = %63
  store i32 -519376056, i32* %60
  br label %578

; <label>:445:                                    ; preds = %63
  %446 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %447 = bitcast %"class.std::deque"* %446 to %"class.std::_Deque_base"*
  %448 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %447, i32 0, i32 0
  %449 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %448, i32 0, i32 2
  %450 = load i32**, i32*** %19, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %449, i32** %450) #11
  %451 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %452 = bitcast %"class.std::deque"* %451 to %"class.std::_Deque_base"*
  %453 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %452, i32 0, i32 0
  %454 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %453, i32 0, i32 3
  %455 = load i32**, i32*** %19, align 8
  %456 = load i64, i64* %17, align 8
  %457 = getelementptr inbounds i32*, i32** %455, i64 %456
  %458 = getelementptr inbounds i32*, i32** %457, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %454, i32** %458) #11
  ret void

; <label>:459:                                    ; preds = %63
  %460 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %461 = bitcast %"class.std::deque"* %460 to %"class.std::_Deque_base"*
  %462 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %461, i32 0, i32 0
  %463 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %462, i32 0, i32 0
  %464 = load i32**, i32*** %463, align 8
  %465 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %466 = bitcast %"class.std::deque"* %465 to %"class.std::_Deque_base"*
  %467 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %466, i32 0, i32 0
  %468 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %467, i32 0, i32 1
  %469 = load i64, i64* %468, align 8
  %470 = load i64, i64* %18, align 8
  %471 = sub i64 0, %470
  %472 = add i64 %469, %471
  %473 = sub i64 %469, %470
  %474 = mul i64 %472, %470
  %475 = sub i64 %469, 1912432555398631689
  %476 = sub i64 %475, %470
  %477 = add i64 %476, 1912432555398631689
  %478 = sub i64 %469, %470
  %479 = mul i64 %477, %470
  %480 = add i64 0, 3394269878944189278
  %481 = sub i64 %480, %469
  %482 = sub i64 %481, 3394269878944189278
  %483 = sub i64 0, %469
  %484 = sub i64 0, %482
  %485 = sub i64 0, %470
  %486 = add i64 %484, %485
  %487 = sub i64 0, %486
  %488 = add i64 %482, %470
  %489 = sub i64 0, %470
  %490 = add i64 %469, %489
  %491 = sub i64 %469, %470
  %492 = add i64 %490, -7329211268529204325
  %493 = sub i64 %492, 2
  %494 = sub i64 %493, -7329211268529204325
  %495 = sub i64 %490, 2
  %496 = mul i64 %494, 2
  %497 = shl i64 %490, 2
  %498 = sub i64 %490, 8707145059183222489
  %499 = sub i64 %498, 2
  %500 = add i64 %499, 8707145059183222489
  %501 = sub i64 %490, 2
  %502 = mul i64 %500, 2
  %503 = udiv i64 %490, 2
  %504 = getelementptr inbounds i32*, i32** %464, i64 %503
  %505 = load i8, i8* %16, align 1
  %506 = trunc i8 %505 to i1
  store i32 -223070841, i32* %60
  br label %578

; <label>:507:                                    ; preds = %63
  %508 = load volatile i32**, i32*** %10
  %509 = load volatile i64, i64* %5
  %510 = getelementptr inbounds i32*, i32** %508, i64 %509
  store i32** %510, i32*** %19, align 8
  %511 = load i32**, i32*** %19, align 8
  %512 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %513 = bitcast %"class.std::deque"* %512 to %"class.std::_Deque_base"*
  %514 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %513, i32 0, i32 0
  %515 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %514, i32 0, i32 2
  %516 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %515, i32 0, i32 3
  %517 = load i32**, i32*** %516, align 8
  %518 = icmp ult i32** %511, %517
  store i32 117042178, i32* %60
  br label %578

; <label>:519:                                    ; preds = %63
  %520 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %521 = bitcast %"class.std::deque"* %520 to %"class.std::_Deque_base"*
  %522 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %521, i32 0, i32 0
  %523 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %522, i32 0, i32 2
  %524 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %523, i32 0, i32 3
  %525 = load i32**, i32*** %524, align 8
  %526 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %527 = bitcast %"class.std::deque"* %526 to %"class.std::_Deque_base"*
  %528 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %527, i32 0, i32 0
  %529 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %528, i32 0, i32 3
  %530 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %529, i32 0, i32 3
  %531 = load i32**, i32*** %530, align 8
  %532 = getelementptr inbounds i32*, i32** %531, i64 1
  %533 = load i32**, i32*** %19, align 8
  %534 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %525, i32** %532, i32** %533)
  store i32 -974770016, i32* %60
  br label %578

; <label>:535:                                    ; preds = %63
  %536 = load i64, i64* %15, align 8
  store i32 1476177895, i32* %60
  br label %578

; <label>:537:                                    ; preds = %63
  %538 = load volatile i32**, i32*** %7
  %539 = load volatile i64, i64* %4
  %540 = getelementptr inbounds i32*, i32** %538, i64 %539
  store i32** %540, i32*** %19, align 8
  %541 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %542 = bitcast %"class.std::deque"* %541 to %"class.std::_Deque_base"*
  %543 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %542, i32 0, i32 0
  %544 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %543, i32 0, i32 2
  %545 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %544, i32 0, i32 3
  %546 = load i32**, i32*** %545, align 8
  %547 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %548 = bitcast %"class.std::deque"* %547 to %"class.std::_Deque_base"*
  %549 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %548, i32 0, i32 0
  %550 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %549, i32 0, i32 3
  %551 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %550, i32 0, i32 3
  %552 = load i32**, i32*** %551, align 8
  %553 = getelementptr inbounds i32*, i32** %552, i64 1
  %554 = load i32**, i32*** %19, align 8
  %555 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %546, i32** %553, i32** %554)
  %556 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %557 = bitcast %"class.std::deque"* %556 to %"class.std::_Deque_base"*
  %558 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %559 = bitcast %"class.std::deque"* %558 to %"class.std::_Deque_base"*
  %560 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %559, i32 0, i32 0
  %561 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %560, i32 0, i32 0
  %562 = load i32**, i32*** %561, align 8
  %563 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %564 = bitcast %"class.std::deque"* %563 to %"class.std::_Deque_base"*
  %565 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %564, i32 0, i32 0
  %566 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %565, i32 0, i32 1
  %567 = load i64, i64* %566, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %557, i32** %562, i64 %567) #11
  %568 = load i32**, i32*** %21, align 8
  %569 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %570 = bitcast %"class.std::deque"* %569 to %"class.std::_Deque_base"*
  %571 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %570, i32 0, i32 0
  %572 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %571, i32 0, i32 0
  store i32** %568, i32*** %572, align 8
  %573 = load i64, i64* %20, align 8
  %574 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %575 = bitcast %"class.std::deque"* %574 to %"class.std::_Deque_base"*
  %576 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %575, i32 0, i32 0
  %577 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %576, i32 0, i32 1
  store i64 %573, i64* %577, align 8
  store i32 1779967282, i32* %60
  br label %578

; <label>:578:                                    ; preds = %537, %535, %519, %507, %459, %444, %377, %360, %359, %357, %328, %312, %276, %275, %257, %256, %213, %198, %195, %156, %139, %138, %136, %133, %86, %71, %66, %65
  br label %63
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32**, i32**, i32**) #2 comdat {
  %4 = alloca i32**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.629
  %8 = load i32, i32* @y.630
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -1890442477, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %76
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1890442477, label %20
    i32 1576297488, label %40
    i32 322319883, label %64
    i32 -481218125, label %66
  ]

; <label>:19:                                     ; preds = %17
  br label %76

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1576297488, i32 -481218125
  store i32 %39, i32* %16
  br label %76

; <label>:40:                                     ; preds = %17
  %41 = alloca i32**, align 8
  %42 = alloca i32**, align 8
  %43 = alloca i32**, align 8
  store i32** %0, i32*** %41, align 8
  store i32** %1, i32*** %42, align 8
  store i32** %2, i32*** %43, align 8
  %44 = load i32**, i32*** %41, align 8
  %45 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %44)
  %46 = load i32**, i32*** %42, align 8
  %47 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %46)
  %48 = load i32**, i32*** %43, align 8
  %49 = call i32** @_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32** %45, i32** %47, i32** %48)
  store i32** %49, i32*** %4
  %50 = load i32, i32* @x.629
  %51 = load i32, i32* @y.630
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 322319883, i32 -481218125
  store i32 %63, i32* %16
  br label %76

; <label>:64:                                     ; preds = %17
  %65 = load volatile i32**, i32*** %4
  ret i32** %65

; <label>:66:                                     ; preds = %17
  %67 = alloca i32**, align 8
  %68 = alloca i32**, align 8
  %69 = alloca i32**, align 8
  store i32** %0, i32*** %67, align 8
  store i32** %1, i32*** %68, align 8
  store i32** %2, i32*** %69, align 8
  %70 = load i32**, i32*** %67, align 8
  %71 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %70)
  %72 = load i32**, i32*** %68, align 8
  %73 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %72)
  %74 = load i32**, i32*** %69, align 8
  %75 = call i32** @_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32** %71, i32** %73, i32** %74)
  store i32 1576297488, i32* %16
  br label %76

; <label>:76:                                     ; preds = %66, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_(i32**, i32**, i32**) #2 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %11)
  ret i32** %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #2 comdat {
  %4 = alloca i32**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.633
  %8 = load i32, i32* @y.634
  %9 = sub i32 %7, 2094627730
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 2094627730
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1206594332, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %68
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1206594332, label %21
    i32 1850671062, label %29
    i32 1080293652, label %55
    i32 -763307744, label %57
  ]

; <label>:20:                                     ; preds = %18
  br label %68

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 1850671062, i32 -763307744
  store i32 %28, i32* %17
  br label %68

; <label>:29:                                     ; preds = %18
  %30 = alloca i32**, align 8
  %31 = alloca i32**, align 8
  %32 = alloca i32**, align 8
  store i32** %0, i32*** %30, align 8
  store i32** %1, i32*** %31, align 8
  store i32** %2, i32*** %32, align 8
  %33 = load i32**, i32*** %30, align 8
  %34 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %33)
  %35 = load i32**, i32*** %31, align 8
  %36 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %35)
  %37 = load i32**, i32*** %32, align 8
  %38 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %37)
  %39 = call i32** @_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %34, i32** %36, i32** %38)
  store i32** %39, i32*** %4
  %40 = load i32, i32* @x.633
  %41 = load i32, i32* @y.634
  %42 = add i32 %40, 152907482
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 152907482
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 1080293652, i32 -763307744
  store i32 %54, i32* %17
  br label %68

; <label>:55:                                     ; preds = %18
  %56 = load volatile i32**, i32*** %4
  ret i32** %56

; <label>:57:                                     ; preds = %18
  %58 = alloca i32**, align 8
  %59 = alloca i32**, align 8
  %60 = alloca i32**, align 8
  store i32** %0, i32*** %58, align 8
  store i32** %1, i32*** %59, align 8
  store i32** %2, i32*** %60, align 8
  %61 = load i32**, i32*** %58, align 8
  %62 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %61)
  %63 = load i32**, i32*** %59, align 8
  %64 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %63)
  %65 = load i32**, i32*** %60, align 8
  %66 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %65)
  %67 = call i32** @_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %62, i32** %64, i32** %66)
  store i32 1850671062, i32* %17
  br label %68

; <label>:68:                                     ; preds = %57, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32**) #1 comdat {
  %2 = alloca i32**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.635
  %6 = load i32, i32* @y.636
  %7 = add i32 %5, 740946252
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 740946252
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2069811161, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %76
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2069811161, label %19
    i32 1917424499, label %39
    i32 -1901794349, label %70
    i32 1102591901, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %76

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1917424499, i32 1102591901
  store i32 %38, i32* %15
  br label %76

; <label>:39:                                     ; preds = %16
  %40 = alloca i32**, align 8
  store i32** %0, i32*** %40, align 8
  %41 = load i32**, i32*** %40, align 8
  %42 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %41)
  store i32** %42, i32*** %2
  %43 = load i32, i32* @x.635
  %44 = load i32, i32* @y.636
  %45 = add i32 %43, 1133332551
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 1133332551
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -1901794349, i32 1102591901
  store i32 %69, i32* %15
  br label %76

; <label>:70:                                     ; preds = %16
  %71 = load volatile i32**, i32*** %2
  ret i32** %71

; <label>:72:                                     ; preds = %16
  %73 = alloca i32**, align 8
  store i32** %0, i32*** %73, align 8
  %74 = load i32**, i32*** %73, align 8
  %75 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %74)
  store i32 1917424499, i32* %15
  br label %76

; <label>:76:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #2 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i8, align 1
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32**, i32*** %4, align 8
  %9 = load i32**, i32*** %5, align 8
  %10 = load i32**, i32*** %6, align 8
  %11 = call i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32** %8, i32** %9, i32** %10)
  ret i32** %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32**) #2 comdat {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  %4 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %3)
  ret i32** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32**, i32**, i32**) #1 comdat align 2 {
  %4 = alloca i32**
  %5 = alloca i1
  %6 = alloca i64*
  %7 = alloca i32***
  %8 = alloca i32***
  %9 = alloca i1
  %10 = alloca i1
  %11 = load i32, i32* @x.641
  %12 = load i32, i32* @y.642
  %13 = add i32 %11, -1774936076
  %14 = sub i32 %13, 1
  %15 = sub i32 %14, -1774936076
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  store i1 %19, i1* %10
  %20 = icmp slt i32 %12, 10
  store i1 %20, i1* %9
  %21 = alloca i32
  store i32 -1925404966, i32* %21
  br label %22

; <label>:22:                                     ; preds = %3, %300
  %23 = load i32, i32* %21
  switch i32 %23, label %24 [
    i32 -1925404966, label %25
    i32 1791559379, label %45
    i32 1136671005, label %93
    i32 592653312, label %96
    i32 1489268971, label %124
    i32 1272316726, label %161
    i32 -1049643839, label %162
    i32 1912517874, label %177
    i32 -1374185626, label %209
    i32 -1443509872, label %211
    i32 262882112, label %250
    i32 567690038, label %294
  ]

; <label>:24:                                     ; preds = %22
  br label %300

; <label>:25:                                     ; preds = %22
  %26 = load volatile i1, i1* %10
  %27 = load volatile i1, i1* %9
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 true, true
  %31 = and i1 %28, true
  %32 = and i1 %26, %30
  %33 = and i1 %29, true
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 true, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  %44 = select i1 %42, i32 1791559379, i32 -1443509872
  store i32 %44, i32* %21
  br label %300

; <label>:45:                                     ; preds = %22
  %46 = alloca i32**, align 8
  store i32*** %46, i32**** %8
  %47 = alloca i32**, align 8
  %48 = alloca i32**, align 8
  store i32*** %48, i32**** %7
  %49 = alloca i64, align 8
  store i64* %49, i64** %6
  %50 = load volatile i32***, i32**** %8
  store i32** %0, i32*** %50, align 8
  store i32** %1, i32*** %47, align 8
  %51 = load volatile i32***, i32**** %7
  store i32** %2, i32*** %51, align 8
  %52 = load i32**, i32*** %47, align 8
  %53 = load volatile i32***, i32**** %8
  %54 = load i32**, i32*** %53, align 8
  %55 = ptrtoint i32** %52 to i64
  %56 = ptrtoint i32** %54 to i64
  %57 = sub i64 %55, 3886636206146513873
  %58 = sub i64 %57, %56
  %59 = add i64 %58, 3886636206146513873
  %60 = sub i64 %55, %56
  %61 = sdiv exact i64 %59, 8
  %62 = load volatile i64*, i64** %6
  store i64 %61, i64* %62, align 8
  %63 = load volatile i64*, i64** %6
  %64 = load i64, i64* %63, align 8
  %65 = icmp ne i64 %64, 0
  store i1 %65, i1* %5
  %66 = load i32, i32* @x.641
  %67 = load i32, i32* @y.642
  %68 = sub i32 %66, -1123359189
  %69 = sub i32 %68, 1
  %70 = add i32 %69, -1123359189
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 false, true
  %79 = and i1 %76, false
  %80 = and i1 %74, %78
  %81 = and i1 %77, false
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 false, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  %92 = select i1 %90, i32 1136671005, i32 -1443509872
  store i32 %92, i32* %21
  br label %300

; <label>:93:                                     ; preds = %22
  %94 = load volatile i1, i1* %5
  %95 = select i1 %94, i32 592653312, i32 -1049643839
  store i32 %95, i32* %21
  br label %300

; <label>:96:                                     ; preds = %22
  %97 = load i32, i32* @x.641
  %98 = load i32, i32* @y.642
  %99 = add i32 %97, -396779834
  %100 = sub i32 %99, 1
  %101 = sub i32 %100, -396779834
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = xor i1 %105, true
  %108 = xor i1 %106, true
  %109 = xor i1 false, true
  %110 = and i1 %107, false
  %111 = and i1 %105, %109
  %112 = and i1 %108, false
  %113 = and i1 %106, %109
  %114 = or i1 %110, %111
  %115 = or i1 %112, %113
  %116 = xor i1 %114, %115
  %117 = or i1 %107, %108
  %118 = xor i1 %117, true
  %119 = or i1 false, %109
  %120 = and i1 %118, %119
  %121 = or i1 %116, %120
  %122 = or i1 %105, %106
  %123 = select i1 %121, i32 1489268971, i32 262882112
  store i32 %123, i32* %21
  br label %300

; <label>:124:                                    ; preds = %22
  %125 = load volatile i32***, i32**** %7
  %126 = load i32**, i32*** %125, align 8
  %127 = bitcast i32** %126 to i8*
  %128 = load volatile i32***, i32**** %8
  %129 = load i32**, i32*** %128, align 8
  %130 = bitcast i32** %129 to i8*
  %131 = load volatile i64*, i64** %6
  %132 = load i64, i64* %131, align 8
  %133 = mul i64 8, %132
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %127, i8* %130, i64 %133, i32 8, i1 false)
  %134 = load i32, i32* @x.641
  %135 = load i32, i32* @y.642
  %136 = add i32 %134, -500370965
  %137 = sub i32 %136, 1
  %138 = sub i32 %137, -500370965
  %139 = sub i32 %134, 1
  %140 = mul i32 %134, %138
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %135, 10
  %144 = xor i1 %142, true
  %145 = xor i1 %143, true
  %146 = xor i1 true, true
  %147 = and i1 %144, true
  %148 = and i1 %142, %146
  %149 = and i1 %145, true
  %150 = and i1 %143, %146
  %151 = or i1 %147, %148
  %152 = or i1 %149, %150
  %153 = xor i1 %151, %152
  %154 = or i1 %144, %145
  %155 = xor i1 %154, true
  %156 = or i1 true, %146
  %157 = and i1 %155, %156
  %158 = or i1 %153, %157
  %159 = or i1 %142, %143
  %160 = select i1 %158, i32 1272316726, i32 262882112
  store i32 %160, i32* %21
  br label %300

; <label>:161:                                    ; preds = %22
  store i32 -1049643839, i32* %21
  br label %300

; <label>:162:                                    ; preds = %22
  %163 = load i32, i32* @x.641
  %164 = load i32, i32* @y.642
  %165 = sub i32 0, 1
  %166 = add i32 %163, %165
  %167 = sub i32 %163, 1
  %168 = mul i32 %163, %166
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %164, 10
  %172 = and i1 %170, %171
  %173 = xor i1 %170, %171
  %174 = or i1 %172, %173
  %175 = or i1 %170, %171
  %176 = select i1 %174, i32 1912517874, i32 567690038
  store i32 %176, i32* %21
  br label %300

; <label>:177:                                    ; preds = %22
  %178 = load volatile i32***, i32**** %7
  %179 = load i32**, i32*** %178, align 8
  %180 = load volatile i64*, i64** %6
  %181 = load i64, i64* %180, align 8
  %182 = getelementptr inbounds i32*, i32** %179, i64 %181
  store i32** %182, i32*** %4
  %183 = load i32, i32* @x.641
  %184 = load i32, i32* @y.642
  %185 = sub i32 0, 1
  %186 = add i32 %183, %185
  %187 = sub i32 %183, 1
  %188 = mul i32 %183, %186
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %184, 10
  %192 = xor i1 %190, true
  %193 = xor i1 %191, true
  %194 = xor i1 false, true
  %195 = and i1 %192, false
  %196 = and i1 %190, %194
  %197 = and i1 %193, false
  %198 = and i1 %191, %194
  %199 = or i1 %195, %196
  %200 = or i1 %197, %198
  %201 = xor i1 %199, %200
  %202 = or i1 %192, %193
  %203 = xor i1 %202, true
  %204 = or i1 false, %194
  %205 = and i1 %203, %204
  %206 = or i1 %201, %205
  %207 = or i1 %190, %191
  %208 = select i1 %206, i32 -1374185626, i32 567690038
  store i32 %208, i32* %21
  br label %300

; <label>:209:                                    ; preds = %22
  %210 = load volatile i32**, i32*** %4
  ret i32** %210

; <label>:211:                                    ; preds = %22
  %212 = alloca i32**, align 8
  %213 = alloca i32**, align 8
  %214 = alloca i32**, align 8
  %215 = alloca i64, align 8
  store i32** %0, i32*** %212, align 8
  store i32** %1, i32*** %213, align 8
  store i32** %2, i32*** %214, align 8
  %216 = load i32**, i32*** %213, align 8
  %217 = load i32**, i32*** %212, align 8
  %218 = ptrtoint i32** %216 to i64
  %219 = ptrtoint i32** %217 to i64
  %220 = shl i64 %218, %219
  %221 = sub i64 %218, 744928761719045934
  %222 = sub i64 %221, %219
  %223 = add i64 %222, 744928761719045934
  %224 = sub i64 %218, %219
  %225 = sub i64 0, -2105045711437588949
  %226 = sub i64 %225, %223
  %227 = add i64 %226, -2105045711437588949
  %228 = sub i64 0, %223
  %229 = sub i64 0, %227
  %230 = sub i64 0, 8
  %231 = add i64 %229, %230
  %232 = sub i64 0, %231
  %233 = add i64 %227, 8
  %234 = sub i64 0, 8
  %235 = add i64 %223, %234
  %236 = sub i64 %223, 8
  %237 = mul i64 %235, 8
  %238 = sub i64 0, 6295320383472106699
  %239 = sub i64 %238, %223
  %240 = add i64 %239, 6295320383472106699
  %241 = sub i64 0, %223
  %242 = sub i64 %240, 2184491974930049021
  %243 = add i64 %242, 8
  %244 = add i64 %243, 2184491974930049021
  %245 = add i64 %240, 8
  %246 = shl i64 %223, 8
  %247 = sdiv exact i64 %223, 8
  store i64 %247, i64* %215, align 8
  %248 = load i64, i64* %215, align 8
  %249 = icmp ne i64 %248, 0
  store i32 1791559379, i32* %21
  br label %300

; <label>:250:                                    ; preds = %22
  %251 = load volatile i32***, i32**** %7
  %252 = load i32**, i32*** %251, align 8
  %253 = bitcast i32** %252 to i8*
  %254 = load volatile i32***, i32**** %8
  %255 = load i32**, i32*** %254, align 8
  %256 = bitcast i32** %255 to i8*
  %257 = load volatile i64*, i64** %6
  %258 = load i64, i64* %257, align 8
  %259 = sub i64 0, 8
  %260 = add i64 0, %259
  %261 = sub i64 0, 8
  %262 = sub i64 %260, -4433360484888374062
  %263 = add i64 %262, %258
  %264 = add i64 %263, -4433360484888374062
  %265 = add i64 %260, %258
  %266 = sub i64 0, %258
  %267 = add i64 8, %266
  %268 = sub i64 8, %258
  %269 = mul i64 %267, %258
  %270 = sub i64 0, %258
  %271 = add i64 8, %270
  %272 = sub i64 8, %258
  %273 = mul i64 %271, %258
  %274 = add i64 8, -2434935124087926715
  %275 = sub i64 %274, %258
  %276 = sub i64 %275, -2434935124087926715
  %277 = sub i64 8, %258
  %278 = mul i64 %276, %258
  %279 = sub i64 8, -1861093662659259901
  %280 = sub i64 %279, %258
  %281 = add i64 %280, -1861093662659259901
  %282 = sub i64 8, %258
  %283 = mul i64 %281, %258
  %284 = sub i64 0, -7748927071737203023
  %285 = sub i64 %284, 8
  %286 = add i64 %285, -7748927071737203023
  %287 = sub i64 0, 8
  %288 = sub i64 0, %286
  %289 = sub i64 0, %258
  %290 = add i64 %288, %289
  %291 = sub i64 0, %290
  %292 = add i64 %286, %258
  %293 = mul i64 8, %258
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %253, i8* %256, i64 %293, i32 8, i1 false)
  store i32 1489268971, i32* %21
  br label %300

; <label>:294:                                    ; preds = %22
  %295 = load volatile i32***, i32**** %7
  %296 = load i32**, i32*** %295, align 8
  %297 = load volatile i64*, i64** %6
  %298 = load i64, i64* %297, align 8
  %299 = getelementptr inbounds i32*, i32** %296, i64 %298
  store i32 1912517874, i32* %21
  br label %300

; <label>:300:                                    ; preds = %294, %250, %211, %177, %162, %161, %124, %96, %93, %45, %25, %24
  br label %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32**) #1 comdat align 2 {
  %2 = alloca i32**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.643
  %6 = load i32, i32* @y.644
  %7 = sub i32 %5, -204969373
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -204969373
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -209758774, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %50
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -209758774, label %19
    i32 133622048, label %27
    i32 1946050755, label %45
    i32 1542508214, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %50

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 133622048, i32 1542508214
  store i32 %26, i32* %15
  br label %50

; <label>:27:                                     ; preds = %16
  %28 = alloca i32**, align 8
  store i32** %0, i32*** %28, align 8
  %29 = load i32**, i32*** %28, align 8
  store i32** %29, i32*** %2
  %30 = load i32, i32* @x.643
  %31 = load i32, i32* @y.644
  %32 = add i32 %30, 1116095551
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 1116095551
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 1946050755, i32 1542508214
  store i32 %44, i32* %15
  br label %50

; <label>:45:                                     ; preds = %16
  %46 = load volatile i32**, i32*** %2
  ret i32** %46

; <label>:47:                                     ; preds = %16
  %48 = alloca i32**, align 8
  store i32** %0, i32*** %48, align 8
  %49 = load i32**, i32*** %48, align 8
  store i32 133622048, i32* %15
  br label %50

; <label>:50:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #2 comdat {
  %4 = alloca i32**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.645
  %8 = load i32, i32* @y.646
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 2137558174, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %79
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 2137558174, label %20
    i32 -1641217043, label %40
    i32 -1508315348, label %66
    i32 -1703346381, label %68
  ]

; <label>:19:                                     ; preds = %17
  br label %79

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1641217043, i32 -1703346381
  store i32 %39, i32* %16
  br label %79

; <label>:40:                                     ; preds = %17
  %41 = alloca i32**, align 8
  %42 = alloca i32**, align 8
  %43 = alloca i32**, align 8
  store i32** %0, i32*** %41, align 8
  store i32** %1, i32*** %42, align 8
  store i32** %2, i32*** %43, align 8
  %44 = load i32**, i32*** %41, align 8
  %45 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %44)
  %46 = load i32**, i32*** %42, align 8
  %47 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %46)
  %48 = load i32**, i32*** %43, align 8
  %49 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %48)
  %50 = call i32** @_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %45, i32** %47, i32** %49)
  store i32** %50, i32*** %4
  %51 = load i32, i32* @x.645
  %52 = load i32, i32* @y.646
  %53 = sub i32 %51, 616600768
  %54 = sub i32 %53, 1
  %55 = add i32 %54, 616600768
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 -1508315348, i32 -1703346381
  store i32 %65, i32* %16
  br label %79

; <label>:66:                                     ; preds = %17
  %67 = load volatile i32**, i32*** %4
  ret i32** %67

; <label>:68:                                     ; preds = %17
  %69 = alloca i32**, align 8
  %70 = alloca i32**, align 8
  %71 = alloca i32**, align 8
  store i32** %0, i32*** %69, align 8
  store i32** %1, i32*** %70, align 8
  store i32** %2, i32*** %71, align 8
  %72 = load i32**, i32*** %69, align 8
  %73 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %72)
  %74 = load i32**, i32*** %70, align 8
  %75 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %74)
  %76 = load i32**, i32*** %71, align 8
  %77 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %76)
  %78 = call i32** @_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %73, i32** %75, i32** %77)
  store i32 -1641217043, i32* %16
  br label %79

; <label>:79:                                     ; preds = %68, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #2 comdat {
  %4 = alloca i32**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.647
  %8 = load i32, i32* @y.648
  %9 = add i32 %7, 2099196975
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 2099196975
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 68634561, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %76
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 68634561, label %21
    i32 -1846222924, label %41
    i32 992887759, label %65
    i32 -168851150, label %67
  ]

; <label>:20:                                     ; preds = %18
  br label %76

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1846222924, i32 -168851150
  store i32 %40, i32* %17
  br label %76

; <label>:41:                                     ; preds = %18
  %42 = alloca i32**, align 8
  %43 = alloca i32**, align 8
  %44 = alloca i32**, align 8
  %45 = alloca i8, align 1
  store i32** %0, i32*** %42, align 8
  store i32** %1, i32*** %43, align 8
  store i32** %2, i32*** %44, align 8
  store i8 1, i8* %45, align 1
  %46 = load i32**, i32*** %42, align 8
  %47 = load i32**, i32*** %43, align 8
  %48 = load i32**, i32*** %44, align 8
  %49 = call i32** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_(i32** %46, i32** %47, i32** %48)
  store i32** %49, i32*** %4
  %50 = load i32, i32* @x.647
  %51 = load i32, i32* @y.648
  %52 = add i32 %50, 1460448307
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 1460448307
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 992887759, i32 -168851150
  store i32 %64, i32* %17
  br label %76

; <label>:65:                                     ; preds = %18
  %66 = load volatile i32**, i32*** %4
  ret i32** %66

; <label>:67:                                     ; preds = %18
  %68 = alloca i32**, align 8
  %69 = alloca i32**, align 8
  %70 = alloca i32**, align 8
  %71 = alloca i8, align 1
  store i32** %0, i32*** %68, align 8
  store i32** %1, i32*** %69, align 8
  store i32** %2, i32*** %70, align 8
  store i8 1, i8* %71, align 1
  %72 = load i32**, i32*** %68, align 8
  %73 = load i32**, i32*** %69, align 8
  %74 = load i32**, i32*** %70, align 8
  %75 = call i32** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_(i32** %72, i32** %73, i32** %74)
  store i32 -1846222924, i32* %17
  br label %76

; <label>:76:                                     ; preds = %67, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_(i32**, i32**, i32**) #1 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i64, align 8
  store i32** %0, i32*** %5, align 8
  store i32** %1, i32*** %6, align 8
  store i32** %2, i32*** %7, align 8
  %9 = load i32**, i32*** %6, align 8
  %10 = load i32**, i32*** %5, align 8
  %11 = ptrtoint i32** %9 to i64
  %12 = ptrtoint i32** %10 to i64
  %13 = sub i64 0, %12
  %14 = add i64 %11, %13
  %15 = sub i64 %11, %12
  %16 = sdiv exact i64 %14, 8
  store i64 %16, i64* %8, align 8
  %17 = load i64, i64* %8, align 8
  store i64 %17, i64* %4
  %18 = alloca i32
  store i32 1447134639, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %47
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1447134639, label %22
    i32 -48999208, label %26
    i32 858324036, label %39
  ]

; <label>:21:                                     ; preds = %19
  br label %47

; <label>:22:                                     ; preds = %19
  %23 = load volatile i64, i64* %4
  %24 = icmp ne i64 %23, 0
  %25 = select i1 %24, i32 -48999208, i32 858324036
  store i32 %25, i32* %18
  br label %47

; <label>:26:                                     ; preds = %19
  %27 = load i32**, i32*** %7, align 8
  %28 = load i64, i64* %8, align 8
  %29 = add i64 0, 6887056210680453446
  %30 = sub i64 %29, %28
  %31 = sub i64 %30, 6887056210680453446
  %32 = sub i64 0, %28
  %33 = getelementptr inbounds i32*, i32** %27, i64 %31
  %34 = bitcast i32** %33 to i8*
  %35 = load i32**, i32*** %5, align 8
  %36 = bitcast i32** %35 to i8*
  %37 = load i64, i64* %8, align 8
  %38 = mul i64 8, %37
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %34, i8* %36, i64 %38, i32 8, i1 false)
  store i32 858324036, i32* %18
  br label %47

; <label>:39:                                     ; preds = %19
  %40 = load i32**, i32*** %7, align 8
  %41 = load i64, i64* %8, align 8
  %42 = add i64 0, -4304987195369490453
  %43 = sub i64 %42, %41
  %44 = sub i64 %43, -4304987195369490453
  %45 = sub i64 0, %41
  %46 = getelementptr inbounds i32*, i32** %40, i64 %44
  ret i32** %46

; <label>:47:                                     ; preds = %26, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorIiRiPiEmIEl(%"struct.std::_Deque_iterator"*, i64) #1 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = sub i64 0, %6
  %8 = add i64 0, %7
  %9 = sub nsw i64 0, %6
  %10 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorIiRiPiEpLEl(%"struct.std::_Deque_iterator"* %5, i64 %8) #11
  ret %"struct.std::_Deque_iterator"* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt18uninitialized_copyISt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEET0_T_S9_S8_(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator"*) #2 comdat {
  %5 = alloca i8, align 1
  %6 = alloca %"struct.std::_Deque_iterator.21", align 8
  %7 = alloca %"struct.std::_Deque_iterator.21", align 8
  %8 = alloca %"struct.std::_Deque_iterator", align 8
  store i8 1, i8* %5, align 1
  %9 = bitcast %"struct.std::_Deque_iterator.21"* %6 to i8*
  %10 = bitcast %"struct.std::_Deque_iterator.21"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 32, i32 8, i1 false)
  %11 = bitcast %"struct.std::_Deque_iterator.21"* %7 to i8*
  %12 = bitcast %"struct.std::_Deque_iterator.21"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 32, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %8, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #11
  call void @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt15_Deque_iteratorIiRKiPS3_ES2_IiRiPiEEET0_T_SB_SA_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator.21"* byval align 8 %6, %"struct.std::_Deque_iterator.21"* byval align 8 %7, %"struct.std::_Deque_iterator"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt15_Deque_iteratorIiRKiPS3_ES2_IiRiPiEEET0_T_SB_SA_(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator"*) #2 comdat align 2 {
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.655
  %8 = load i32, i32* @y.656
  %9 = add i32 %7, 1295906704
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 1295906704
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1794168091, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %72
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1794168091, label %21
    i32 -998002600, label %41
    i32 -1602634778, label %63
    i32 -582759765, label %64
  ]

; <label>:20:                                     ; preds = %18
  br label %72

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -998002600, i32 -582759765
  store i32 %40, i32* %17
  br label %72

; <label>:41:                                     ; preds = %18
  %42 = alloca %"struct.std::_Deque_iterator.21", align 8
  %43 = alloca %"struct.std::_Deque_iterator.21", align 8
  %44 = alloca %"struct.std::_Deque_iterator", align 8
  %45 = bitcast %"struct.std::_Deque_iterator.21"* %42 to i8*
  %46 = bitcast %"struct.std::_Deque_iterator.21"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %46, i64 32, i32 8, i1 false)
  %47 = bitcast %"struct.std::_Deque_iterator.21"* %43 to i8*
  %48 = bitcast %"struct.std::_Deque_iterator.21"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 32, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %44, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #11
  call void @_ZSt4copyISt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEET0_T_S9_S8_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator.21"* byval align 8 %42, %"struct.std::_Deque_iterator.21"* byval align 8 %43, %"struct.std::_Deque_iterator"* %44)
  %49 = load i32, i32* @x.655
  %50 = load i32, i32* @y.656
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -1602634778, i32 -582759765
  store i32 %62, i32* %17
  br label %72

; <label>:63:                                     ; preds = %18
  ret void

; <label>:64:                                     ; preds = %18
  %65 = alloca %"struct.std::_Deque_iterator.21", align 8
  %66 = alloca %"struct.std::_Deque_iterator.21", align 8
  %67 = alloca %"struct.std::_Deque_iterator", align 8
  %68 = bitcast %"struct.std::_Deque_iterator.21"* %65 to i8*
  %69 = bitcast %"struct.std::_Deque_iterator.21"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %68, i8* %69, i64 32, i32 8, i1 false)
  %70 = bitcast %"struct.std::_Deque_iterator.21"* %66 to i8*
  %71 = bitcast %"struct.std::_Deque_iterator.21"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %70, i8* %71, i64 32, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %67, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #11
  call void @_ZSt4copyISt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEET0_T_S9_S8_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator.21"* byval align 8 %65, %"struct.std::_Deque_iterator.21"* byval align 8 %66, %"struct.std::_Deque_iterator"* %67)
  store i32 -998002600, i32* %17
  br label %72

; <label>:72:                                     ; preds = %64, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4copyISt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEET0_T_S9_S8_(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator"*) #2 comdat {
  %5 = alloca %"struct.std::_Deque_iterator.21", align 8
  %6 = alloca %"struct.std::_Deque_iterator.21", align 8
  %7 = alloca %"struct.std::_Deque_iterator.21", align 8
  %8 = alloca %"struct.std::_Deque_iterator.21", align 8
  %9 = alloca %"struct.std::_Deque_iterator", align 8
  %10 = bitcast %"struct.std::_Deque_iterator.21"* %6 to i8*
  %11 = bitcast %"struct.std::_Deque_iterator.21"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 32, i32 8, i1 false)
  call void @_ZSt12__miter_baseISt15_Deque_iteratorIiRKiPS1_EENSt11_Miter_baseIT_E13iterator_typeES6_(%"struct.std::_Deque_iterator.21"* sret %5, %"struct.std::_Deque_iterator.21"* byval align 8 %6)
  %12 = bitcast %"struct.std::_Deque_iterator.21"* %8 to i8*
  %13 = bitcast %"struct.std::_Deque_iterator.21"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 32, i32 8, i1 false)
  call void @_ZSt12__miter_baseISt15_Deque_iteratorIiRKiPS1_EENSt11_Miter_baseIT_E13iterator_typeES6_(%"struct.std::_Deque_iterator.21"* sret %7, %"struct.std::_Deque_iterator.21"* byval align 8 %8)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %9, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #11
  call void @_ZSt14__copy_move_a2ILb0ESt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEET1_T0_S9_S8_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator.21"* byval align 8 %5, %"struct.std::_Deque_iterator.21"* byval align 8 %7, %"struct.std::_Deque_iterator"* %9)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt14__copy_move_a2ILb0ESt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEET1_T0_S9_S8_(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator"*) #2 comdat {
  %5 = alloca %"struct.std::_Deque_iterator.21", align 8
  %6 = alloca %"struct.std::_Deque_iterator.21", align 8
  %7 = alloca %"struct.std::_Deque_iterator.21", align 8
  %8 = alloca %"struct.std::_Deque_iterator.21", align 8
  %9 = alloca %"struct.std::_Deque_iterator", align 8
  %10 = alloca %"struct.std::_Deque_iterator", align 8
  %11 = bitcast %"struct.std::_Deque_iterator.21"* %6 to i8*
  %12 = bitcast %"struct.std::_Deque_iterator.21"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 32, i32 8, i1 false)
  call void @_ZSt12__niter_baseISt15_Deque_iteratorIiRKiPS1_EENSt11_Niter_baseIT_E13iterator_typeES6_(%"struct.std::_Deque_iterator.21"* sret %5, %"struct.std::_Deque_iterator.21"* byval align 8 %6)
  %13 = bitcast %"struct.std::_Deque_iterator.21"* %8 to i8*
  %14 = bitcast %"struct.std::_Deque_iterator.21"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 32, i32 8, i1 false)
  call void @_ZSt12__niter_baseISt15_Deque_iteratorIiRKiPS1_EENSt11_Niter_baseIT_E13iterator_typeES6_(%"struct.std::_Deque_iterator.21"* sret %7, %"struct.std::_Deque_iterator.21"* byval align 8 %8)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %10, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #11
  call void @_ZSt12__niter_baseISt15_Deque_iteratorIiRiPiEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.std::_Deque_iterator"* sret %9, %"struct.std::_Deque_iterator"* %10)
  call void @_ZSt13__copy_move_aILb0ESt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEET1_T0_S9_S8_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator.21"* byval align 8 %5, %"struct.std::_Deque_iterator.21"* byval align 8 %7, %"struct.std::_Deque_iterator"* %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt12__miter_baseISt15_Deque_iteratorIiRKiPS1_EENSt11_Miter_baseIT_E13iterator_typeES6_(%"struct.std::_Deque_iterator.21"* noalias sret, %"struct.std::_Deque_iterator.21"* byval align 8) #1 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.661
  %6 = load i32, i32* @y.662
  %7 = sub i32 %5, 60720332
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 60720332
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -222364773, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %50
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -222364773, label %19
    i32 -1499619726, label %27
    i32 -1350375966, label %45
    i32 -1164482007, label %46
  ]

; <label>:18:                                     ; preds = %16
  br label %50

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1499619726, i32 -1164482007
  store i32 %26, i32* %15
  br label %50

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Deque_iterator.21", align 8
  %29 = bitcast %"struct.std::_Deque_iterator.21"* %28 to i8*
  %30 = bitcast %"struct.std::_Deque_iterator.21"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 32, i32 8, i1 false)
  call void @_ZNSt10_Iter_baseISt15_Deque_iteratorIiRKiPS1_ELb0EE7_S_baseES4_(%"struct.std::_Deque_iterator.21"* sret %0, %"struct.std::_Deque_iterator.21"* byval align 8 %28)
  %31 = load i32, i32* @x.661
  %32 = load i32, i32* @y.662
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -1350375966, i32 -1164482007
  store i32 %44, i32* %15
  br label %50

; <label>:45:                                     ; preds = %16
  ret void

; <label>:46:                                     ; preds = %16
  %47 = alloca %"struct.std::_Deque_iterator.21", align 8
  %48 = bitcast %"struct.std::_Deque_iterator.21"* %47 to i8*
  %49 = bitcast %"struct.std::_Deque_iterator.21"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 32, i32 8, i1 false)
  call void @_ZNSt10_Iter_baseISt15_Deque_iteratorIiRKiPS1_ELb0EE7_S_baseES4_(%"struct.std::_Deque_iterator.21"* sret %0, %"struct.std::_Deque_iterator.21"* byval align 8 %47)
  store i32 -1499619726, i32* %15
  br label %50

; <label>:50:                                     ; preds = %46, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt13__copy_move_aILb0ESt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEET1_T0_S9_S8_(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator"*) #2 comdat {
  %5 = alloca i8, align 1
  %6 = alloca %"struct.std::_Deque_iterator.21", align 8
  %7 = alloca %"struct.std::_Deque_iterator.21", align 8
  %8 = alloca %"struct.std::_Deque_iterator", align 8
  store i8 0, i8* %5, align 1
  %9 = bitcast %"struct.std::_Deque_iterator.21"* %6 to i8*
  %10 = bitcast %"struct.std::_Deque_iterator.21"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 32, i32 8, i1 false)
  %11 = bitcast %"struct.std::_Deque_iterator.21"* %7 to i8*
  %12 = bitcast %"struct.std::_Deque_iterator.21"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 32, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %8, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #11
  call void @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt15_Deque_iteratorIiRKiPS4_ES3_IiRiPiEEET0_T_SC_SB_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator.21"* byval align 8 %6, %"struct.std::_Deque_iterator.21"* byval align 8 %7, %"struct.std::_Deque_iterator"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt12__niter_baseISt15_Deque_iteratorIiRKiPS1_EENSt11_Niter_baseIT_E13iterator_typeES6_(%"struct.std::_Deque_iterator.21"* noalias sret, %"struct.std::_Deque_iterator.21"* byval align 8) #2 comdat {
  %3 = alloca %"struct.std::_Deque_iterator.21", align 8
  %4 = bitcast %"struct.std::_Deque_iterator.21"* %3 to i8*
  %5 = bitcast %"struct.std::_Deque_iterator.21"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %5, i64 32, i32 8, i1 false)
  call void @_ZNSt10_Iter_baseISt15_Deque_iteratorIiRKiPS1_ELb0EE7_S_baseES4_(%"struct.std::_Deque_iterator.21"* sret %0, %"struct.std::_Deque_iterator.21"* byval align 8 %3)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt12__niter_baseISt15_Deque_iteratorIiRiPiEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator"*) #2 comdat {
  %3 = alloca %"struct.std::_Deque_iterator", align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %3, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  call void @_ZNSt10_Iter_baseISt15_Deque_iteratorIiRiPiELb0EE7_S_baseES3_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator"* %3)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt15_Deque_iteratorIiRKiPS4_ES3_IiRiPiEEET0_T_SC_SB_(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator"*) #1 comdat align 2 {
  %5 = alloca i64, align 8
  %6 = call i64 @_ZStmiIiRKiPS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_(%"struct.std::_Deque_iterator.21"* dereferenceable(32) %2, %"struct.std::_Deque_iterator.21"* dereferenceable(32) %1) #11
  store i64 %6, i64* %5, align 8
  %7 = alloca i32
  store i32 1683288793, i32* %7
  br label %8

; <label>:8:                                      ; preds = %4, %78
  %9 = load i32, i32* %7
  switch i32 %9, label %10 [
    i32 1683288793, label %11
    i32 1155770935, label %15
    i32 65693623, label %43
    i32 1345000413, label %64
    i32 1586617793, label %65
    i32 -373216670, label %71
    i32 -60173615, label %72
  ]

; <label>:10:                                     ; preds = %8
  br label %78

; <label>:11:                                     ; preds = %8
  %12 = load i64, i64* %5, align 8
  %13 = icmp sgt i64 %12, 0
  %14 = select i1 %13, i32 1155770935, i32 -373216670
  store i32 %14, i32* %7
  br label %78

; <label>:15:                                     ; preds = %8
  %16 = load i32, i32* @x.669
  %17 = load i32, i32* @y.670
  %18 = sub i32 %16, -782413584
  %19 = sub i32 %18, 1
  %20 = add i32 %19, -782413584
  %21 = sub i32 %16, 1
  %22 = mul i32 %16, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %17, 10
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 false, true
  %29 = and i1 %26, false
  %30 = and i1 %24, %28
  %31 = and i1 %27, false
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 false, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 65693623, i32 -60173615
  store i32 %42, i32* %7
  br label %78

; <label>:43:                                     ; preds = %8
  %44 = call dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRKiPS0_EdeEv(%"struct.std::_Deque_iterator.21"* %1) #11
  %45 = load i32, i32* %44, align 4
  %46 = call dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"* %3) #11
  store i32 %45, i32* %46, align 4
  %47 = call dereferenceable(32) %"struct.std::_Deque_iterator.21"* @_ZNSt15_Deque_iteratorIiRKiPS0_EppEv(%"struct.std::_Deque_iterator.21"* %1) #11
  %48 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorIiRiPiEppEv(%"struct.std::_Deque_iterator"* %3) #11
  %49 = load i32, i32* @x.669
  %50 = load i32, i32* @y.670
  %51 = sub i32 %49, -1487571484
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -1487571484
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 1345000413, i32 -60173615
  store i32 %63, i32* %7
  br label %78

; <label>:64:                                     ; preds = %8
  store i32 1586617793, i32* %7
  br label %78

; <label>:65:                                     ; preds = %8
  %66 = load i64, i64* %5, align 8
  %67 = add i64 %66, -4205631591972236567
  %68 = add i64 %67, -1
  %69 = sub i64 %68, -4205631591972236567
  %70 = add nsw i64 %66, -1
  store i64 %69, i64* %5, align 8
  store i32 1683288793, i32* %7
  br label %78

; <label>:71:                                     ; preds = %8
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #11
  ret void

; <label>:72:                                     ; preds = %8
  %73 = call dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRKiPS0_EdeEv(%"struct.std::_Deque_iterator.21"* %1) #11
  %74 = load i32, i32* %73, align 4
  %75 = call dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"* %3) #11
  store i32 %74, i32* %75, align 4
  %76 = call dereferenceable(32) %"struct.std::_Deque_iterator.21"* @_ZNSt15_Deque_iteratorIiRKiPS0_EppEv(%"struct.std::_Deque_iterator.21"* %1) #11
  %77 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorIiRiPiEppEv(%"struct.std::_Deque_iterator"* %3) #11
  store i32 65693623, i32* %7
  br label %78

; <label>:78:                                     ; preds = %72, %65, %64, %43, %15, %11, %10
  br label %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRKiPS0_EdeEv(%"struct.std::_Deque_iterator.21"*) #1 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_iterator.21"*, align 8
  store %"struct.std::_Deque_iterator.21"* %0, %"struct.std::_Deque_iterator.21"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"*) #1 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator.21"* @_ZNSt15_Deque_iteratorIiRKiPS0_EppEv(%"struct.std::_Deque_iterator.21"*) #1 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i32*
  %4 = alloca %"struct.std::_Deque_iterator.21"*
  %5 = alloca %"struct.std::_Deque_iterator.21"*, align 8
  store %"struct.std::_Deque_iterator.21"* %0, %"struct.std::_Deque_iterator.21"** %5, align 8
  %6 = load %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %5, align 8
  store %"struct.std::_Deque_iterator.21"* %6, %"struct.std::_Deque_iterator.21"** %4
  %7 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %4
  %8 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds i32, i32* %9, i32 1
  store i32* %10, i32** %8, align 8
  %11 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %4
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %11, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  store i32* %13, i32** %3
  %14 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %4
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %14, i32 0, i32 2
  %16 = load i32*, i32** %15, align 8
  store i32* %16, i32** %2
  %17 = alloca i32
  store i32 -271413506, i32* %17
  br label %18

; <label>:18:                                     ; preds = %1, %39
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -271413506, label %21
    i32 2087140553, label %26
    i32 -701930144, label %37
  ]

; <label>:20:                                     ; preds = %18
  br label %39

; <label>:21:                                     ; preds = %18
  %22 = load volatile i32*, i32** %3
  %23 = load volatile i32*, i32** %2
  %24 = icmp eq i32* %22, %23
  %25 = select i1 %24, i32 2087140553, i32 -701930144
  store i32 %25, i32* %17
  br label %39

; <label>:26:                                     ; preds = %18
  %27 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %4
  %28 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %27, i32 0, i32 3
  %29 = load i32**, i32*** %28, align 8
  %30 = getelementptr inbounds i32*, i32** %29, i64 1
  %31 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %4
  call void @_ZNSt15_Deque_iteratorIiRKiPS0_E11_M_set_nodeEPPi(%"struct.std::_Deque_iterator.21"* %31, i32** %30) #11
  %32 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %4
  %33 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %32, i32 0, i32 1
  %34 = load i32*, i32** %33, align 8
  %35 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %4
  %36 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %35, i32 0, i32 0
  store i32* %34, i32** %36, align 8
  store i32 -701930144, i32* %17
  br label %39

; <label>:37:                                     ; preds = %18
  %38 = load volatile %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %4
  ret %"struct.std::_Deque_iterator.21"* %38

; <label>:39:                                     ; preds = %26, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorIiRiPiEppEv(%"struct.std::_Deque_iterator"*) #1 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i32*
  %4 = alloca %"struct.std::_Deque_iterator"*
  %5 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %5, align 8
  %6 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %5, align 8
  store %"struct.std::_Deque_iterator"* %6, %"struct.std::_Deque_iterator"** %4
  %7 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %8 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds i32, i32* %9, i32 1
  store i32* %10, i32** %8, align 8
  %11 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %11, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  store i32* %13, i32** %3
  %14 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %14, i32 0, i32 2
  %16 = load i32*, i32** %15, align 8
  store i32* %16, i32** %2
  %17 = alloca i32
  store i32 36620670, i32* %17
  br label %18

; <label>:18:                                     ; preds = %1, %39
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 36620670, label %21
    i32 601696042, label %26
    i32 485683243, label %37
  ]

; <label>:20:                                     ; preds = %18
  br label %39

; <label>:21:                                     ; preds = %18
  %22 = load volatile i32*, i32** %3
  %23 = load volatile i32*, i32** %2
  %24 = icmp eq i32* %22, %23
  %25 = select i1 %24, i32 601696042, i32 485683243
  store i32 %25, i32* %17
  br label %39

; <label>:26:                                     ; preds = %18
  %27 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %28 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %27, i32 0, i32 3
  %29 = load i32**, i32*** %28, align 8
  %30 = getelementptr inbounds i32*, i32** %29, i64 1
  %31 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %31, i32** %30) #11
  %32 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %33 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %32, i32 0, i32 1
  %34 = load i32*, i32** %33, align 8
  %35 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %36 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %35, i32 0, i32 0
  store i32* %34, i32** %36, align 8
  store i32 485683243, i32* %17
  br label %39

; <label>:37:                                     ; preds = %18
  %38 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  ret %"struct.std::_Deque_iterator"* %38

; <label>:39:                                     ; preds = %26, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Iter_baseISt15_Deque_iteratorIiRKiPS1_ELb0EE7_S_baseES4_(%"struct.std::_Deque_iterator.21"* noalias sret, %"struct.std::_Deque_iterator.21"* byval align 8) #1 comdat align 2 {
  %3 = bitcast %"struct.std::_Deque_iterator.21"* %0 to i8*
  %4 = bitcast %"struct.std::_Deque_iterator.21"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %4, i64 32, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Iter_baseISt15_Deque_iteratorIiRiPiELb0EE7_S_baseES3_(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator"*) #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.681
  %6 = load i32, i32* @y.682
  %7 = add i32 %5, 771491731
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 771491731
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1507240519, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %56
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1507240519, label %19
    i32 -1538491161, label %27
    i32 1967945521, label %54
    i32 -1891891165, label %55
  ]

; <label>:18:                                     ; preds = %16
  br label %56

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1538491161, i32 -1891891165
  store i32 %26, i32* %15
  br label %56

; <label>:27:                                     ; preds = %16
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  %28 = load i32, i32* @x.681
  %29 = load i32, i32* @y.682
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 false, true
  %40 = and i1 %37, false
  %41 = and i1 %35, %39
  %42 = and i1 %38, false
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 false, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  %53 = select i1 %51, i32 1967945521, i32 -1891891165
  store i32 %53, i32* %15
  br label %56

; <label>:54:                                     ; preds = %16
  ret void

; <label>:55:                                     ; preds = %16
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  store i32 -1538491161, i32* %15
  br label %56

; <label>:56:                                     ; preds = %55, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE23_M_new_elements_at_backEm(%"class.std::deque"*, i64) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.683
  %4 = load i32, i32* @y.684
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %450

; <label>:16:                                     ; preds = %2, %450
  %17 = alloca %"class.std::deque"*, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i8*
  %22 = alloca i32
  %23 = alloca i64, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %17, align 8
  store i64 %1, i64* %18, align 8
  %24 = load %"class.std::deque"*, %"class.std::deque"** %17, align 8
  %25 = call i64 @_ZNKSt5dequeIiSaIiEE8max_sizeEv(%"class.std::deque"* %24) #11
  %26 = call i64 @_ZNKSt5dequeIiSaIiEE4sizeEv(%"class.std::deque"* %24) #11
  %27 = add i64 %25, 3455446995284541541
  %28 = sub i64 %27, %26
  %29 = sub i64 %28, 3455446995284541541
  %30 = sub i64 %25, %26
  %31 = load i64, i64* %18, align 8
  %32 = icmp ult i64 %29, %31
  %33 = load i32, i32* @x.683
  %34 = load i32, i32* @y.684
  %35 = add i32 %33, -684322301
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -684322301
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %450

; <label>:59:                                     ; preds = %16
  br i1 %32, label %60, label %90

; <label>:60:                                     ; preds = %59
  %61 = load i32, i32* @x.683
  %62 = load i32, i32* @y.684
  %63 = sub i32 0, 1
  %64 = add i32 %61, %63
  %65 = sub i32 %61, 1
  %66 = mul i32 %61, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %62, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  br i1 %72, label %74, label %503

; <label>:74:                                     ; preds = %60, %503
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i32 0, i32 0)) #13
  %75 = load i32, i32* @x.683
  %76 = load i32, i32* @y.684
  %77 = add i32 %75, -53140787
  %78 = sub i32 %77, 1
  %79 = sub i32 %78, -53140787
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = and i1 %83, %84
  %86 = xor i1 %83, %84
  %87 = or i1 %85, %86
  %88 = or i1 %83, %84
  br i1 %87, label %89, label %503

; <label>:89:                                     ; preds = %74
  unreachable

; <label>:90:                                     ; preds = %59
  %91 = load i64, i64* %18, align 8
  %92 = call i64 @_ZNSt5dequeIiSaIiEE14_S_buffer_sizeEv() #11
  %93 = add i64 %91, 662083678395201793
  %94 = add i64 %93, %92
  %95 = sub i64 %94, 662083678395201793
  %96 = add i64 %91, %92
  %97 = sub i64 %95, 4424770285079260460
  %98 = sub i64 %97, 1
  %99 = add i64 %98, 4424770285079260460
  %100 = sub i64 %95, 1
  %101 = call i64 @_ZNSt5dequeIiSaIiEE14_S_buffer_sizeEv() #11
  %102 = udiv i64 %99, %101
  store i64 %102, i64* %19, align 8
  %103 = load i64, i64* %19, align 8
  call void @_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm(%"class.std::deque"* %24, i64 %103)
  store i64 1, i64* %20, align 8
  br label %104

; <label>:104:                                    ; preds = %208, %90
  %105 = load i64, i64* %20, align 8
  %106 = load i64, i64* %19, align 8
  %107 = icmp ule i64 %105, %106
  br i1 %107, label %108, label %278

; <label>:108:                                    ; preds = %104
  %109 = load i32, i32* @x.683
  %110 = load i32, i32* @y.684
  %111 = sub i32 %109, 862469945
  %112 = sub i32 %111, 1
  %113 = add i32 %112, 862469945
  %114 = sub i32 %109, 1
  %115 = mul i32 %109, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %110, 10
  %119 = and i1 %117, %118
  %120 = xor i1 %117, %118
  %121 = or i1 %119, %120
  %122 = or i1 %117, %118
  br i1 %121, label %123, label %504

; <label>:123:                                    ; preds = %108, %504
  %124 = bitcast %"class.std::deque"* %24 to %"class.std::_Deque_base"*
  %125 = load i32, i32* @x.683
  %126 = load i32, i32* @y.684
  %127 = sub i32 %125, -1493522333
  %128 = sub i32 %127, 1
  %129 = add i32 %128, -1493522333
  %130 = sub i32 %125, 1
  %131 = mul i32 %125, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %126, 10
  %135 = and i1 %133, %134
  %136 = xor i1 %133, %134
  %137 = or i1 %135, %136
  %138 = or i1 %133, %134
  br i1 %137, label %139, label %504

; <label>:139:                                    ; preds = %123
  %140 = invoke i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %124)
          to label %141 unwind label %209

; <label>:141:                                    ; preds = %139
  %142 = bitcast %"class.std::deque"* %24 to %"class.std::_Deque_base"*
  %143 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %142, i32 0, i32 0
  %144 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %143, i32 0, i32 3
  %145 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %144, i32 0, i32 3
  %146 = load i32**, i32*** %145, align 8
  %147 = load i64, i64* %20, align 8
  %148 = getelementptr inbounds i32*, i32** %146, i64 %147
  store i32* %140, i32** %148, align 8
  br label %149

; <label>:149:                                    ; preds = %141
  %150 = load i32, i32* @x.683
  %151 = load i32, i32* @y.684
  %152 = sub i32 %150, -1018783777
  %153 = sub i32 %152, 1
  %154 = add i32 %153, -1018783777
  %155 = sub i32 %150, 1
  %156 = mul i32 %150, %154
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %151, 10
  %160 = xor i1 %158, true
  %161 = xor i1 %159, true
  %162 = xor i1 true, true
  %163 = and i1 %160, true
  %164 = and i1 %158, %162
  %165 = and i1 %161, true
  %166 = and i1 %159, %162
  %167 = or i1 %163, %164
  %168 = or i1 %165, %166
  %169 = xor i1 %167, %168
  %170 = or i1 %160, %161
  %171 = xor i1 %170, true
  %172 = or i1 true, %162
  %173 = and i1 %171, %172
  %174 = or i1 %169, %173
  %175 = or i1 %158, %159
  br i1 %174, label %176, label %506

; <label>:176:                                    ; preds = %149, %506
  %177 = load i64, i64* %20, align 8
  %178 = sub i64 0, %177
  %179 = sub i64 0, 1
  %180 = add i64 %178, %179
  %181 = sub i64 0, %180
  %182 = add i64 %177, 1
  store i64 %181, i64* %20, align 8
  %183 = load i32, i32* @x.683
  %184 = load i32, i32* @y.684
  %185 = sub i32 0, 1
  %186 = add i32 %183, %185
  %187 = sub i32 %183, 1
  %188 = mul i32 %183, %186
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %184, 10
  %192 = xor i1 %190, true
  %193 = xor i1 %191, true
  %194 = xor i1 false, true
  %195 = and i1 %192, false
  %196 = and i1 %190, %194
  %197 = and i1 %193, false
  %198 = and i1 %191, %194
  %199 = or i1 %195, %196
  %200 = or i1 %197, %198
  %201 = xor i1 %199, %200
  %202 = or i1 %192, %193
  %203 = xor i1 %202, true
  %204 = or i1 false, %194
  %205 = and i1 %203, %204
  %206 = or i1 %201, %205
  %207 = or i1 %190, %191
  br i1 %206, label %208, label %506

; <label>:208:                                    ; preds = %176
  br label %104

; <label>:209:                                    ; preds = %139
  %210 = landingpad { i8*, i32 }
          catch i8* null
  %211 = extractvalue { i8*, i32 } %210, 0
  store i8* %211, i8** %21, align 8
  %212 = extractvalue { i8*, i32 } %210, 1
  store i32 %212, i32* %22, align 4
  br label %213

; <label>:213:                                    ; preds = %209
  %214 = load i32, i32* @x.683
  %215 = load i32, i32* @y.684
  %216 = sub i32 %214, -1194855024
  %217 = sub i32 %216, 1
  %218 = add i32 %217, -1194855024
  %219 = sub i32 %214, 1
  %220 = mul i32 %214, %218
  %221 = urem i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %215, 10
  %224 = xor i1 %222, true
  %225 = xor i1 %223, true
  %226 = xor i1 true, true
  %227 = and i1 %224, true
  %228 = and i1 %222, %226
  %229 = and i1 %225, true
  %230 = and i1 %223, %226
  %231 = or i1 %227, %228
  %232 = or i1 %229, %230
  %233 = xor i1 %231, %232
  %234 = or i1 %224, %225
  %235 = xor i1 %234, true
  %236 = or i1 true, %226
  %237 = and i1 %235, %236
  %238 = or i1 %233, %237
  %239 = or i1 %222, %223
  br i1 %238, label %240, label %530

; <label>:240:                                    ; preds = %213, %530
  %241 = load i8*, i8** %21, align 8
  %242 = call i8* @__cxa_begin_catch(i8* %241) #11
  store i64 1, i64* %23, align 8
  %243 = load i32, i32* @x.683
  %244 = load i32, i32* @y.684
  %245 = sub i32 %243, 1106486930
  %246 = sub i32 %245, 1
  %247 = add i32 %246, 1106486930
  %248 = sub i32 %243, 1
  %249 = mul i32 %243, %247
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %244, 10
  %253 = and i1 %251, %252
  %254 = xor i1 %251, %252
  %255 = or i1 %253, %254
  %256 = or i1 %251, %252
  br i1 %255, label %257, label %530

; <label>:257:                                    ; preds = %240
  br label %258

; <label>:258:                                    ; preds = %272, %257
  %259 = load i64, i64* %23, align 8
  %260 = load i64, i64* %20, align 8
  %261 = icmp ult i64 %259, %260
  br i1 %261, label %262, label %321

; <label>:262:                                    ; preds = %258
  %263 = bitcast %"class.std::deque"* %24 to %"class.std::_Deque_base"*
  %264 = bitcast %"class.std::deque"* %24 to %"class.std::_Deque_base"*
  %265 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %264, i32 0, i32 0
  %266 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %265, i32 0, i32 3
  %267 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %266, i32 0, i32 3
  %268 = load i32**, i32*** %267, align 8
  %269 = load i64, i64* %23, align 8
  %270 = getelementptr inbounds i32*, i32** %268, i64 %269
  %271 = load i32*, i32** %270, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %263, i32* %271) #11
  br label %272

; <label>:272:                                    ; preds = %262
  %273 = load i64, i64* %23, align 8
  %274 = sub i64 %273, -3303404606355079967
  %275 = add i64 %274, 1
  %276 = add i64 %275, -3303404606355079967
  %277 = add i64 %273, 1
  store i64 %276, i64* %23, align 8
  br label %258

; <label>:278:                                    ; preds = %104
  %279 = load i32, i32* @x.683
  %280 = load i32, i32* @y.684
  %281 = add i32 %279, 735598993
  %282 = sub i32 %281, 1
  %283 = sub i32 %282, 735598993
  %284 = sub i32 %279, 1
  %285 = mul i32 %279, %283
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %280, 10
  %289 = and i1 %287, %288
  %290 = xor i1 %287, %288
  %291 = or i1 %289, %290
  %292 = or i1 %287, %288
  br i1 %291, label %293, label %533

; <label>:293:                                    ; preds = %278, %533
  %294 = load i32, i32* @x.683
  %295 = load i32, i32* @y.684
  %296 = add i32 %294, -42874785
  %297 = sub i32 %296, 1
  %298 = sub i32 %297, -42874785
  %299 = sub i32 %294, 1
  %300 = mul i32 %294, %298
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %295, 10
  %304 = xor i1 %302, true
  %305 = xor i1 %303, true
  %306 = xor i1 false, true
  %307 = and i1 %304, false
  %308 = and i1 %302, %306
  %309 = and i1 %305, false
  %310 = and i1 %303, %306
  %311 = or i1 %307, %308
  %312 = or i1 %309, %310
  %313 = xor i1 %311, %312
  %314 = or i1 %304, %305
  %315 = xor i1 %314, true
  %316 = or i1 false, %306
  %317 = and i1 %315, %316
  %318 = or i1 %313, %317
  %319 = or i1 %302, %303
  br i1 %318, label %320, label %533

; <label>:320:                                    ; preds = %293
  br label %369

; <label>:321:                                    ; preds = %258
  %322 = load i32, i32* @x.683
  %323 = load i32, i32* @y.684
  %324 = sub i32 %322, -717010649
  %325 = sub i32 %324, 1
  %326 = add i32 %325, -717010649
  %327 = sub i32 %322, 1
  %328 = mul i32 %322, %326
  %329 = urem i32 %328, 2
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %323, 10
  %332 = and i1 %330, %331
  %333 = xor i1 %330, %331
  %334 = or i1 %332, %333
  %335 = or i1 %330, %331
  br i1 %334, label %336, label %534

; <label>:336:                                    ; preds = %321, %534
  %337 = load i32, i32* @x.683
  %338 = load i32, i32* @y.684
  %339 = sub i32 %337, -539480080
  %340 = sub i32 %339, 1
  %341 = add i32 %340, -539480080
  %342 = sub i32 %337, 1
  %343 = mul i32 %337, %341
  %344 = urem i32 %343, 2
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %338, 10
  %347 = xor i1 %345, true
  %348 = xor i1 %346, true
  %349 = xor i1 false, true
  %350 = and i1 %347, false
  %351 = and i1 %345, %349
  %352 = and i1 %348, false
  %353 = and i1 %346, %349
  %354 = or i1 %350, %351
  %355 = or i1 %352, %353
  %356 = xor i1 %354, %355
  %357 = or i1 %347, %348
  %358 = xor i1 %357, true
  %359 = or i1 false, %349
  %360 = and i1 %358, %359
  %361 = or i1 %356, %360
  %362 = or i1 %345, %346
  br i1 %361, label %363, label %534

; <label>:363:                                    ; preds = %336
  invoke void @__cxa_rethrow() #13
          to label %408 unwind label %364

; <label>:364:                                    ; preds = %363
  %365 = landingpad { i8*, i32 }
          cleanup
  %366 = extractvalue { i8*, i32 } %365, 0
  store i8* %366, i8** %21, align 8
  %367 = extractvalue { i8*, i32 } %365, 1
  store i32 %367, i32* %22, align 4
  invoke void @__cxa_end_catch()
          to label %368 unwind label %375

; <label>:368:                                    ; preds = %364
  br label %370

; <label>:369:                                    ; preds = %320
  ret void

; <label>:370:                                    ; preds = %368
  %371 = load i8*, i8** %21, align 8
  %372 = load i32, i32* %22, align 4
  %373 = insertvalue { i8*, i32 } undef, i8* %371, 0
  %374 = insertvalue { i8*, i32 } %373, i32 %372, 1
  resume { i8*, i32 } %374

; <label>:375:                                    ; preds = %364
  %376 = load i32, i32* @x.683
  %377 = load i32, i32* @y.684
  %378 = add i32 %376, -1133330267
  %379 = sub i32 %378, 1
  %380 = sub i32 %379, -1133330267
  %381 = sub i32 %376, 1
  %382 = mul i32 %376, %380
  %383 = urem i32 %382, 2
  %384 = icmp eq i32 %383, 0
  %385 = icmp slt i32 %377, 10
  %386 = and i1 %384, %385
  %387 = xor i1 %384, %385
  %388 = or i1 %386, %387
  %389 = or i1 %384, %385
  br i1 %388, label %390, label %535

; <label>:390:                                    ; preds = %375, %535
  %391 = landingpad { i8*, i32 }
          catch i8* null
  %392 = extractvalue { i8*, i32 } %391, 0
  call void @__clang_call_terminate(i8* %392) #9
  %393 = load i32, i32* @x.683
  %394 = load i32, i32* @y.684
  %395 = sub i32 %393, -577491061
  %396 = sub i32 %395, 1
  %397 = add i32 %396, -577491061
  %398 = sub i32 %393, 1
  %399 = mul i32 %393, %397
  %400 = urem i32 %399, 2
  %401 = icmp eq i32 %400, 0
  %402 = icmp slt i32 %394, 10
  %403 = and i1 %401, %402
  %404 = xor i1 %401, %402
  %405 = or i1 %403, %404
  %406 = or i1 %401, %402
  br i1 %405, label %407, label %535

; <label>:407:                                    ; preds = %390
  unreachable

; <label>:408:                                    ; preds = %363
  %409 = load i32, i32* @x.683
  %410 = load i32, i32* @y.684
  %411 = add i32 %409, 954835372
  %412 = sub i32 %411, 1
  %413 = sub i32 %412, 954835372
  %414 = sub i32 %409, 1
  %415 = mul i32 %409, %413
  %416 = urem i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = icmp slt i32 %410, 10
  %419 = and i1 %417, %418
  %420 = xor i1 %417, %418
  %421 = or i1 %419, %420
  %422 = or i1 %417, %418
  br i1 %421, label %423, label %538

; <label>:423:                                    ; preds = %408, %538
  %424 = load i32, i32* @x.683
  %425 = load i32, i32* @y.684
  %426 = sub i32 0, 1
  %427 = add i32 %424, %426
  %428 = sub i32 %424, 1
  %429 = mul i32 %424, %427
  %430 = urem i32 %429, 2
  %431 = icmp eq i32 %430, 0
  %432 = icmp slt i32 %425, 10
  %433 = xor i1 %431, true
  %434 = xor i1 %432, true
  %435 = xor i1 false, true
  %436 = and i1 %433, false
  %437 = and i1 %431, %435
  %438 = and i1 %434, false
  %439 = and i1 %432, %435
  %440 = or i1 %436, %437
  %441 = or i1 %438, %439
  %442 = xor i1 %440, %441
  %443 = or i1 %433, %434
  %444 = xor i1 %443, true
  %445 = or i1 false, %435
  %446 = and i1 %444, %445
  %447 = or i1 %442, %446
  %448 = or i1 %431, %432
  br i1 %447, label %449, label %538

; <label>:449:                                    ; preds = %423
  unreachable

; <label>:450:                                    ; preds = %16, %2
  %451 = alloca %"class.std::deque"*, align 8
  %452 = alloca i64, align 8
  %453 = alloca i64, align 8
  %454 = alloca i64, align 8
  %455 = alloca i8*
  %456 = alloca i32
  %457 = alloca i64, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %451, align 8
  store i64 %1, i64* %452, align 8
  %458 = load %"class.std::deque"*, %"class.std::deque"** %451, align 8
  %459 = call i64 @_ZNKSt5dequeIiSaIiEE8max_sizeEv(%"class.std::deque"* %458) #11
  %460 = call i64 @_ZNKSt5dequeIiSaIiEE4sizeEv(%"class.std::deque"* %458) #11
  %461 = sub i64 0, 2397103031341682737
  %462 = sub i64 %461, %459
  %463 = add i64 %462, 2397103031341682737
  %464 = sub i64 0, %459
  %465 = sub i64 0, %463
  %466 = sub i64 0, %460
  %467 = add i64 %465, %466
  %468 = sub i64 0, %467
  %469 = add i64 %463, %460
  %470 = sub i64 0, %459
  %471 = add i64 0, %470
  %472 = sub i64 0, %459
  %473 = sub i64 0, %460
  %474 = sub i64 %471, %473
  %475 = add i64 %471, %460
  %476 = sub i64 0, %460
  %477 = add i64 %459, %476
  %478 = sub i64 %459, %460
  %479 = mul i64 %477, %460
  %480 = sub i64 0, %459
  %481 = add i64 0, %480
  %482 = sub i64 0, %459
  %483 = sub i64 %481, -3999181314901093417
  %484 = add i64 %483, %460
  %485 = add i64 %484, -3999181314901093417
  %486 = add i64 %481, %460
  %487 = sub i64 %459, 4247283193367615622
  %488 = sub i64 %487, %460
  %489 = add i64 %488, 4247283193367615622
  %490 = sub i64 %459, %460
  %491 = mul i64 %489, %460
  %492 = sub i64 0, %460
  %493 = add i64 %459, %492
  %494 = sub i64 %459, %460
  %495 = mul i64 %493, %460
  %496 = shl i64 %459, %460
  %497 = add i64 %459, -5491620590929681669
  %498 = sub i64 %497, %460
  %499 = sub i64 %498, -5491620590929681669
  %500 = sub i64 %459, %460
  %501 = load i64, i64* %452, align 8
  %502 = icmp ult i64 %499, %501
  br label %16

; <label>:503:                                    ; preds = %74, %60
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i32 0, i32 0)) #13
  br label %74

; <label>:504:                                    ; preds = %123, %108
  %505 = bitcast %"class.std::deque"* %24 to %"class.std::_Deque_base"*
  br label %123

; <label>:506:                                    ; preds = %176, %149
  %507 = load i64, i64* %20, align 8
  %508 = add i64 0, -3302946916491791031
  %509 = sub i64 %508, %507
  %510 = sub i64 %509, -3302946916491791031
  %511 = sub i64 0, %507
  %512 = sub i64 %510, -3196370854850684535
  %513 = add i64 %512, 1
  %514 = add i64 %513, -3196370854850684535
  %515 = add i64 %510, 1
  %516 = shl i64 %507, 1
  %517 = sub i64 0, 1
  %518 = add i64 %507, %517
  %519 = sub i64 %507, 1
  %520 = mul i64 %518, 1
  %521 = sub i64 %507, -4872365621432729516
  %522 = sub i64 %521, 1
  %523 = add i64 %522, -4872365621432729516
  %524 = sub i64 %507, 1
  %525 = mul i64 %523, 1
  %526 = sub i64 %507, -6316353837156845356
  %527 = add i64 %526, 1
  %528 = add i64 %527, -6316353837156845356
  %529 = add i64 %507, 1
  store i64 %528, i64* %20, align 8
  br label %176

; <label>:530:                                    ; preds = %240, %213
  %531 = load i8*, i8** %21, align 8
  %532 = call i8* @__cxa_begin_catch(i8* %531) #11
  store i64 1, i64* %23, align 8
  br label %240

; <label>:533:                                    ; preds = %293, %278
  br label %293

; <label>:534:                                    ; preds = %336, %321
  br label %336

; <label>:535:                                    ; preds = %390, %375
  %536 = landingpad { i8*, i32 }
          catch i8* null
  %537 = extractvalue { i8*, i32 } %536, 0
  call void @__clang_call_terminate(i8* %537) #9
  br label %390

; <label>:538:                                    ; preds = %423, %408
  br label %423
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm(%"class.std::deque"*, i64) #2 comdat align 2 {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca %"class.std::deque"*
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  store %"class.std::deque"* %8, %"class.std::deque"** %5
  %9 = load i64, i64* %7, align 8
  %10 = add i64 %9, -7300809710530612919
  %11 = add i64 %10, 1
  %12 = sub i64 %11, -7300809710530612919
  %13 = add i64 %9, 1
  store i64 %12, i64* %4
  %14 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %15 = bitcast %"class.std::deque"* %14 to %"class.std::_Deque_base"*
  %16 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %16, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %20 = bitcast %"class.std::deque"* %19 to %"class.std::_Deque_base"*
  %21 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %21, i32 0, i32 3
  %23 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %22, i32 0, i32 3
  %24 = load i32**, i32*** %23, align 8
  %25 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %26 = bitcast %"class.std::deque"* %25 to %"class.std::_Deque_base"*
  %27 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %27, i32 0, i32 0
  %29 = load i32**, i32*** %28, align 8
  %30 = ptrtoint i32** %24 to i64
  %31 = ptrtoint i32** %29 to i64
  %32 = sub i64 %30, 205016065245297218
  %33 = sub i64 %32, %31
  %34 = add i64 %33, 205016065245297218
  %35 = sub i64 %30, %31
  %36 = sdiv exact i64 %34, 8
  %37 = sub i64 %18, -3159136216547359814
  %38 = sub i64 %37, %36
  %39 = add i64 %38, -3159136216547359814
  %40 = sub i64 %18, %36
  store i64 %39, i64* %3
  %41 = alloca i32
  store i32 647346580, i32* %41
  br label %42

; <label>:42:                                     ; preds = %2, %54
  %43 = load i32, i32* %41
  switch i32 %43, label %44 [
    i32 647346580, label %45
    i32 1771149085, label %50
    i32 1775445630, label %53
  ]

; <label>:44:                                     ; preds = %42
  br label %54

; <label>:45:                                     ; preds = %42
  %46 = load volatile i64, i64* %4
  %47 = load volatile i64, i64* %3
  %48 = icmp ugt i64 %46, %47
  %49 = select i1 %48, i32 1771149085, i32 1775445630
  store i32 %49, i32* %41
  br label %54

; <label>:50:                                     ; preds = %42
  %51 = load i64, i64* %7, align 8
  %52 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  call void @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb(%"class.std::deque"* %52, i64 %51, i1 zeroext false)
  store i32 1775445630, i32* %41
  br label %54

; <label>:53:                                     ; preds = %42
  ret void

; <label>:54:                                     ; preds = %50, %45, %44
  br label %42
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt22__uninitialized_move_aISt15_Deque_iteratorIiRiPiES3_SaIiEET0_T_S6_S5_RT1_(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*, %"class.std::allocator.0"* dereferenceable(1)) #2 comdat {
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.687
  %9 = load i32, i32* @y.688
  %10 = sub i32 %8, -1307181177
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -1307181177
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 937000107, i32* %18
  br label %19

; <label>:19:                                     ; preds = %5, %73
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 937000107, label %22
    i32 1338191015, label %42
    i32 940182158, label %64
    i32 1848851266, label %65
  ]

; <label>:21:                                     ; preds = %19
  br label %73

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 1338191015, i32 1848851266
  store i32 %41, i32* %18
  br label %73

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.std::allocator.0"*, align 8
  %44 = alloca %"class.std::move_iterator.22", align 8
  %45 = alloca %"struct.std::_Deque_iterator", align 8
  %46 = alloca %"class.std::move_iterator.22", align 8
  %47 = alloca %"struct.std::_Deque_iterator", align 8
  %48 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::allocator.0"* %4, %"class.std::allocator.0"** %43, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %45, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  call void @_ZSt18make_move_iteratorISt15_Deque_iteratorIiRiPiEESt13move_iteratorIT_ES5_(%"class.std::move_iterator.22"* sret %44, %"struct.std::_Deque_iterator"* %45)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %47, %"struct.std::_Deque_iterator"* dereferenceable(32) %2) #11
  call void @_ZSt18make_move_iteratorISt15_Deque_iteratorIiRiPiEESt13move_iteratorIT_ES5_(%"class.std::move_iterator.22"* sret %46, %"struct.std::_Deque_iterator"* %47)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %48, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #11
  %49 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %43, align 8
  call void @_ZSt22__uninitialized_copy_aISt13move_iteratorISt15_Deque_iteratorIiRiPiEES4_iET0_T_S7_S6_RSaIT1_E(%"struct.std::_Deque_iterator"* sret %0, %"class.std::move_iterator.22"* %44, %"class.std::move_iterator.22"* %46, %"struct.std::_Deque_iterator"* %48, %"class.std::allocator.0"* dereferenceable(1) %49)
  %50 = load i32, i32* @x.687
  %51 = load i32, i32* @y.688
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 940182158, i32 1848851266
  store i32 %63, i32* %18
  br label %73

; <label>:64:                                     ; preds = %19
  ret void

; <label>:65:                                     ; preds = %19
  %66 = alloca %"class.std::allocator.0"*, align 8
  %67 = alloca %"class.std::move_iterator.22", align 8
  %68 = alloca %"struct.std::_Deque_iterator", align 8
  %69 = alloca %"class.std::move_iterator.22", align 8
  %70 = alloca %"struct.std::_Deque_iterator", align 8
  %71 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::allocator.0"* %4, %"class.std::allocator.0"** %66, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %68, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  call void @_ZSt18make_move_iteratorISt15_Deque_iteratorIiRiPiEESt13move_iteratorIT_ES5_(%"class.std::move_iterator.22"* sret %67, %"struct.std::_Deque_iterator"* %68)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %70, %"struct.std::_Deque_iterator"* dereferenceable(32) %2) #11
  call void @_ZSt18make_move_iteratorISt15_Deque_iteratorIiRiPiEESt13move_iteratorIT_ES5_(%"class.std::move_iterator.22"* sret %69, %"struct.std::_Deque_iterator"* %70)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %71, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #11
  %72 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %66, align 8
  call void @_ZSt22__uninitialized_copy_aISt13move_iteratorISt15_Deque_iteratorIiRiPiEES4_iET0_T_S7_S6_RSaIT1_E(%"struct.std::_Deque_iterator"* sret %0, %"class.std::move_iterator.22"* %67, %"class.std::move_iterator.22"* %69, %"struct.std::_Deque_iterator"* %71, %"class.std::allocator.0"* dereferenceable(1) %72)
  store i32 1338191015, i32* %18
  br label %73

; <label>:73:                                     ; preds = %65, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4moveIiESt15_Deque_iteratorIT_RS1_PS1_ES4_S4_S4_(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*) #2 comdat {
  %5 = alloca %"struct.std::_Deque_iterator.21", align 8
  %6 = alloca %"struct.std::_Deque_iterator.21", align 8
  %7 = alloca %"struct.std::_Deque_iterator", align 8
  call void @_ZNSt15_Deque_iteratorIiRKiPS0_EC2ERKS_IiRiPiE(%"struct.std::_Deque_iterator.21"* %5, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  call void @_ZNSt15_Deque_iteratorIiRKiPS0_EC2ERKS_IiRiPiE(%"struct.std::_Deque_iterator.21"* %6, %"struct.std::_Deque_iterator"* dereferenceable(32) %2) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %7, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #11
  call void @_ZSt4moveIiESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator.21"* byval align 8 %5, %"struct.std::_Deque_iterator.21"* byval align 8 %6, %"struct.std::_Deque_iterator"* %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt7advanceISt15_Deque_iteratorIiRKiPS1_ElEvRT_T0_(%"struct.std::_Deque_iterator.21"* dereferenceable(32), i64) #2 comdat {
  %3 = alloca %"struct.std::_Deque_iterator.21"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.std::random_access_iterator_tag", align 1
  %7 = alloca %"struct.std::random_access_iterator_tag", align 1
  store %"struct.std::_Deque_iterator.21"* %0, %"struct.std::_Deque_iterator.21"** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load i64, i64* %4, align 8
  store i64 %8, i64* %5, align 8
  %9 = load %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %3, align 8
  %10 = load i64, i64* %5, align 8
  %11 = load %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %3, align 8
  call void @_ZSt19__iterator_categoryISt15_Deque_iteratorIiRKiPS1_EENSt15iterator_traitsIT_E17iterator_categoryERKS6_(%"struct.std::_Deque_iterator.21"* dereferenceable(32) %11)
  call void @_ZSt9__advanceISt15_Deque_iteratorIiRKiPS1_ElEvRT_T0_St26random_access_iterator_tag(%"struct.std::_Deque_iterator.21"* dereferenceable(32) %9, i64 %10)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt25__uninitialized_move_copyISt15_Deque_iteratorIiRiPiES0_IiRKiPS4_ES3_SaIiEET1_T_SA_T0_SB_S9_RT2_(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator"*, %"class.std::allocator.0"* dereferenceable(1)) #2 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %8 = load i32, i32* @x.693
  %9 = load i32, i32* @y.694
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %9, 10
  %17 = and i1 %15, %16
  %18 = xor i1 %15, %16
  %19 = or i1 %17, %18
  %20 = or i1 %15, %16
  br i1 %19, label %21, label %187

; <label>:21:                                     ; preds = %7, %187
  %22 = alloca %"class.std::allocator.0"*, align 8
  %23 = alloca %"struct.std::_Deque_iterator", align 8
  %24 = alloca %"struct.std::_Deque_iterator", align 8
  %25 = alloca %"struct.std::_Deque_iterator", align 8
  %26 = alloca %"struct.std::_Deque_iterator", align 8
  %27 = alloca %"struct.std::_Deque_iterator.21", align 8
  %28 = alloca %"struct.std::_Deque_iterator.21", align 8
  %29 = alloca %"struct.std::_Deque_iterator", align 8
  %30 = alloca i8*
  %31 = alloca i32
  %32 = alloca %"struct.std::_Deque_iterator", align 8
  %33 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::allocator.0"* %6, %"class.std::allocator.0"** %22, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %24, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %25, %"struct.std::_Deque_iterator"* dereferenceable(32) %2) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %26, %"struct.std::_Deque_iterator"* dereferenceable(32) %5) #11
  %34 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %22, align 8
  call void @_ZSt22__uninitialized_move_aISt15_Deque_iteratorIiRiPiES3_SaIiEET0_T_S6_S5_RT1_(%"struct.std::_Deque_iterator"* sret %23, %"struct.std::_Deque_iterator"* %24, %"struct.std::_Deque_iterator"* %25, %"struct.std::_Deque_iterator"* %26, %"class.std::allocator.0"* dereferenceable(1) %34)
  %35 = bitcast %"struct.std::_Deque_iterator.21"* %27 to i8*
  %36 = bitcast %"struct.std::_Deque_iterator.21"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 32, i32 8, i1 false)
  %37 = bitcast %"struct.std::_Deque_iterator.21"* %28 to i8*
  %38 = bitcast %"struct.std::_Deque_iterator.21"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 32, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %29, %"struct.std::_Deque_iterator"* dereferenceable(32) %23) #11
  %39 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %22, align 8
  %40 = load i32, i32* @x.693
  %41 = load i32, i32* @y.694
  %42 = sub i32 %40, 1981703553
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 1981703553
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  br i1 %64, label %66, label %187

; <label>:66:                                     ; preds = %21
  invoke void @_ZSt22__uninitialized_copy_aISt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEiET0_T_S9_S8_RSaIT1_E(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator.21"* byval align 8 %27, %"struct.std::_Deque_iterator.21"* byval align 8 %28, %"struct.std::_Deque_iterator"* %29, %"class.std::allocator.0"* dereferenceable(1) %39)
          to label %67 unwind label %68

; <label>:67:                                     ; preds = %66
  ret void

; <label>:68:                                     ; preds = %66
  %69 = load i32, i32* @x.693
  %70 = load i32, i32* @y.694
  %71 = add i32 %69, -865954406
  %72 = sub i32 %71, 1
  %73 = sub i32 %72, -865954406
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = xor i1 %77, true
  %80 = xor i1 %78, true
  %81 = xor i1 true, true
  %82 = and i1 %79, true
  %83 = and i1 %77, %81
  %84 = and i1 %80, true
  %85 = and i1 %78, %81
  %86 = or i1 %82, %83
  %87 = or i1 %84, %85
  %88 = xor i1 %86, %87
  %89 = or i1 %79, %80
  %90 = xor i1 %89, true
  %91 = or i1 true, %81
  %92 = and i1 %90, %91
  %93 = or i1 %88, %92
  %94 = or i1 %77, %78
  br i1 %93, label %95, label %206

; <label>:95:                                     ; preds = %68, %206
  %96 = landingpad { i8*, i32 }
          catch i8* null
  %97 = extractvalue { i8*, i32 } %96, 0
  store i8* %97, i8** %30, align 8
  %98 = extractvalue { i8*, i32 } %96, 1
  store i32 %98, i32* %31, align 4
  %99 = load i32, i32* @x.693
  %100 = load i32, i32* @y.694
  %101 = sub i32 0, 1
  %102 = add i32 %99, %101
  %103 = sub i32 %99, 1
  %104 = mul i32 %99, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %100, 10
  %108 = and i1 %106, %107
  %109 = xor i1 %106, %107
  %110 = or i1 %108, %109
  %111 = or i1 %106, %107
  br i1 %110, label %112, label %206

; <label>:112:                                    ; preds = %95
  br label %113

; <label>:113:                                    ; preds = %112
  %114 = load i8*, i8** %30, align 8
  %115 = call i8* @__cxa_begin_catch(i8* %114) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %32, %"struct.std::_Deque_iterator"* dereferenceable(32) %5) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %33, %"struct.std::_Deque_iterator"* dereferenceable(32) %23) #11
  %116 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %22, align 8
  invoke void @_ZSt8_DestroyISt15_Deque_iteratorIiRiPiEiEvT_S4_RSaIT0_E(%"struct.std::_Deque_iterator"* %32, %"struct.std::_Deque_iterator"* %33, %"class.std::allocator.0"* dereferenceable(1) %116)
          to label %117 unwind label %118

; <label>:117:                                    ; preds = %113
  invoke void @__cxa_rethrow() #13
          to label %186 unwind label %118

; <label>:118:                                    ; preds = %117, %113
  %119 = load i32, i32* @x.693
  %120 = load i32, i32* @y.694
  %121 = add i32 %119, -1391728975
  %122 = sub i32 %121, 1
  %123 = sub i32 %122, -1391728975
  %124 = sub i32 %119, 1
  %125 = mul i32 %119, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %120, 10
  %129 = xor i1 %127, true
  %130 = xor i1 %128, true
  %131 = xor i1 false, true
  %132 = and i1 %129, false
  %133 = and i1 %127, %131
  %134 = and i1 %130, false
  %135 = and i1 %128, %131
  %136 = or i1 %132, %133
  %137 = or i1 %134, %135
  %138 = xor i1 %136, %137
  %139 = or i1 %129, %130
  %140 = xor i1 %139, true
  %141 = or i1 false, %131
  %142 = and i1 %140, %141
  %143 = or i1 %138, %142
  %144 = or i1 %127, %128
  br i1 %143, label %145, label %210

; <label>:145:                                    ; preds = %118, %210
  %146 = landingpad { i8*, i32 }
          cleanup
  %147 = extractvalue { i8*, i32 } %146, 0
  store i8* %147, i8** %30, align 8
  %148 = extractvalue { i8*, i32 } %146, 1
  store i32 %148, i32* %31, align 4
  %149 = load i32, i32* @x.693
  %150 = load i32, i32* @y.694
  %151 = add i32 %149, 1343488005
  %152 = sub i32 %151, 1
  %153 = sub i32 %152, 1343488005
  %154 = sub i32 %149, 1
  %155 = mul i32 %149, %153
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %150, 10
  %159 = xor i1 %157, true
  %160 = xor i1 %158, true
  %161 = xor i1 false, true
  %162 = and i1 %159, false
  %163 = and i1 %157, %161
  %164 = and i1 %160, false
  %165 = and i1 %158, %161
  %166 = or i1 %162, %163
  %167 = or i1 %164, %165
  %168 = xor i1 %166, %167
  %169 = or i1 %159, %160
  %170 = xor i1 %169, true
  %171 = or i1 false, %161
  %172 = and i1 %170, %171
  %173 = or i1 %168, %172
  %174 = or i1 %157, %158
  br i1 %173, label %175, label %210

; <label>:175:                                    ; preds = %145
  invoke void @__cxa_end_catch()
          to label %176 unwind label %183

; <label>:176:                                    ; preds = %175
  br label %178
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:178:                                    ; preds = %176
  %179 = load i8*, i8** %30, align 8
  %180 = load i32, i32* %31, align 4
  %181 = insertvalue { i8*, i32 } undef, i8* %179, 0
  %182 = insertvalue { i8*, i32 } %181, i32 %180, 1
  resume { i8*, i32 } %182

; <label>:183:                                    ; preds = %175
  %184 = landingpad { i8*, i32 }
          catch i8* null
  %185 = extractvalue { i8*, i32 } %184, 0
  call void @__clang_call_terminate(i8* %185) #9
  unreachable

; <label>:186:                                    ; preds = %117
  unreachable

; <label>:187:                                    ; preds = %21, %7
  %188 = alloca %"class.std::allocator.0"*, align 8
  %189 = alloca %"struct.std::_Deque_iterator", align 8
  %190 = alloca %"struct.std::_Deque_iterator", align 8
  %191 = alloca %"struct.std::_Deque_iterator", align 8
  %192 = alloca %"struct.std::_Deque_iterator", align 8
  %193 = alloca %"struct.std::_Deque_iterator.21", align 8
  %194 = alloca %"struct.std::_Deque_iterator.21", align 8
  %195 = alloca %"struct.std::_Deque_iterator", align 8
  %196 = alloca i8*
  %197 = alloca i32
  %198 = alloca %"struct.std::_Deque_iterator", align 8
  %199 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::allocator.0"* %6, %"class.std::allocator.0"** %188, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %190, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %191, %"struct.std::_Deque_iterator"* dereferenceable(32) %2) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %192, %"struct.std::_Deque_iterator"* dereferenceable(32) %5) #11
  %200 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %188, align 8
  call void @_ZSt22__uninitialized_move_aISt15_Deque_iteratorIiRiPiES3_SaIiEET0_T_S6_S5_RT1_(%"struct.std::_Deque_iterator"* sret %189, %"struct.std::_Deque_iterator"* %190, %"struct.std::_Deque_iterator"* %191, %"struct.std::_Deque_iterator"* %192, %"class.std::allocator.0"* dereferenceable(1) %200)
  %201 = bitcast %"struct.std::_Deque_iterator.21"* %193 to i8*
  %202 = bitcast %"struct.std::_Deque_iterator.21"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %201, i8* %202, i64 32, i32 8, i1 false)
  %203 = bitcast %"struct.std::_Deque_iterator.21"* %194 to i8*
  %204 = bitcast %"struct.std::_Deque_iterator.21"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %203, i8* %204, i64 32, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %195, %"struct.std::_Deque_iterator"* dereferenceable(32) %189) #11
  %205 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %188, align 8
  br label %21

; <label>:206:                                    ; preds = %95, %68
  %207 = landingpad { i8*, i32 }
          catch i8* null
  %208 = extractvalue { i8*, i32 } %207, 0
  store i8* %208, i8** %30, align 8
  %209 = extractvalue { i8*, i32 } %207, 1
  store i32 %209, i32* %31, align 4
  br label %95

; <label>:210:                                    ; preds = %145, %118
  %211 = landingpad { i8*, i32 }
          cleanup
  %212 = extractvalue { i8*, i32 } %211, 0
  store i8* %212, i8** %30, align 8
  %213 = extractvalue { i8*, i32 } %211, 1
  store i32 %213, i32* %31, align 4
  br label %145
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt13move_backwardIiESt15_Deque_iteratorIT_RS1_PS1_ES4_S4_S4_(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*) #2 comdat {
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.695
  %8 = load i32, i32* @y.696
  %9 = add i32 %7, -481582056
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -481582056
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1187726050, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %64
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1187726050, label %21
    i32 -1812902684, label %29
    i32 1974089056, label %59
    i32 1326413134, label %60
  ]

; <label>:20:                                     ; preds = %18
  br label %64

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1812902684, i32 1326413134
  store i32 %28, i32* %17
  br label %64

; <label>:29:                                     ; preds = %18
  %30 = alloca %"struct.std::_Deque_iterator.21", align 8
  %31 = alloca %"struct.std::_Deque_iterator.21", align 8
  %32 = alloca %"struct.std::_Deque_iterator", align 8
  call void @_ZNSt15_Deque_iteratorIiRKiPS0_EC2ERKS_IiRiPiE(%"struct.std::_Deque_iterator.21"* %30, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  call void @_ZNSt15_Deque_iteratorIiRKiPS0_EC2ERKS_IiRiPiE(%"struct.std::_Deque_iterator.21"* %31, %"struct.std::_Deque_iterator"* dereferenceable(32) %2) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %32, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #11
  call void @_ZSt13move_backwardIiESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator.21"* byval align 8 %30, %"struct.std::_Deque_iterator.21"* byval align 8 %31, %"struct.std::_Deque_iterator"* %32)
  %33 = load i32, i32* @x.695
  %34 = load i32, i32* @y.696
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 1974089056, i32 1326413134
  store i32 %58, i32* %17
  br label %64

; <label>:59:                                     ; preds = %18
  ret void

; <label>:60:                                     ; preds = %18
  %61 = alloca %"struct.std::_Deque_iterator.21", align 8
  %62 = alloca %"struct.std::_Deque_iterator.21", align 8
  %63 = alloca %"struct.std::_Deque_iterator", align 8
  call void @_ZNSt15_Deque_iteratorIiRKiPS0_EC2ERKS_IiRiPiE(%"struct.std::_Deque_iterator.21"* %61, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  call void @_ZNSt15_Deque_iteratorIiRKiPS0_EC2ERKS_IiRiPiE(%"struct.std::_Deque_iterator.21"* %62, %"struct.std::_Deque_iterator"* dereferenceable(32) %2) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %63, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #11
  call void @_ZSt13move_backwardIiESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator.21"* byval align 8 %61, %"struct.std::_Deque_iterator.21"* byval align 8 %62, %"struct.std::_Deque_iterator"* %63)
  store i32 -1812902684, i32* %17
  br label %64

; <label>:64:                                     ; preds = %60, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt25__uninitialized_copy_moveISt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiES7_SaIiEET1_T_SA_T0_SB_S9_RT2_(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*, %"class.std::allocator.0"* dereferenceable(1)) #2 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %8 = alloca %"class.std::allocator.0"*, align 8
  %9 = alloca %"struct.std::_Deque_iterator", align 8
  %10 = alloca %"struct.std::_Deque_iterator.21", align 8
  %11 = alloca %"struct.std::_Deque_iterator.21", align 8
  %12 = alloca %"struct.std::_Deque_iterator", align 8
  %13 = alloca %"struct.std::_Deque_iterator", align 8
  %14 = alloca %"struct.std::_Deque_iterator", align 8
  %15 = alloca %"struct.std::_Deque_iterator", align 8
  %16 = alloca i8*
  %17 = alloca i32
  %18 = alloca %"struct.std::_Deque_iterator", align 8
  %19 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::allocator.0"* %6, %"class.std::allocator.0"** %8, align 8
  %20 = bitcast %"struct.std::_Deque_iterator.21"* %10 to i8*
  %21 = bitcast %"struct.std::_Deque_iterator.21"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 32, i32 8, i1 false)
  %22 = bitcast %"struct.std::_Deque_iterator.21"* %11 to i8*
  %23 = bitcast %"struct.std::_Deque_iterator.21"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 32, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %12, %"struct.std::_Deque_iterator"* dereferenceable(32) %5) #11
  %24 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %8, align 8
  call void @_ZSt22__uninitialized_copy_aISt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEiET0_T_S9_S8_RSaIT1_E(%"struct.std::_Deque_iterator"* sret %9, %"struct.std::_Deque_iterator.21"* byval align 8 %10, %"struct.std::_Deque_iterator.21"* byval align 8 %11, %"struct.std::_Deque_iterator"* %12, %"class.std::allocator.0"* dereferenceable(1) %24)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %13, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %14, %"struct.std::_Deque_iterator"* dereferenceable(32) %4) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %15, %"struct.std::_Deque_iterator"* dereferenceable(32) %9) #11
  %25 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %8, align 8
  invoke void @_ZSt22__uninitialized_move_aISt15_Deque_iteratorIiRiPiES3_SaIiEET0_T_S6_S5_RT1_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator"* %13, %"struct.std::_Deque_iterator"* %14, %"struct.std::_Deque_iterator"* %15, %"class.std::allocator.0"* dereferenceable(1) %25)
          to label %26 unwind label %27

; <label>:26:                                     ; preds = %7
  ret void

; <label>:27:                                     ; preds = %7
  %28 = landingpad { i8*, i32 }
          catch i8* null
  %29 = extractvalue { i8*, i32 } %28, 0
  store i8* %29, i8** %16, align 8
  %30 = extractvalue { i8*, i32 } %28, 1
  store i32 %30, i32* %17, align 4
  br label %31

; <label>:31:                                     ; preds = %27
  %32 = load i8*, i8** %16, align 8
  %33 = call i8* @__cxa_begin_catch(i8* %32) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %18, %"struct.std::_Deque_iterator"* dereferenceable(32) %5) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %19, %"struct.std::_Deque_iterator"* dereferenceable(32) %9) #11
  %34 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %8, align 8
  invoke void @_ZSt8_DestroyISt15_Deque_iteratorIiRiPiEiEvT_S4_RSaIT0_E(%"struct.std::_Deque_iterator"* %18, %"struct.std::_Deque_iterator"* %19, %"class.std::allocator.0"* dereferenceable(1) %34)
          to label %35 unwind label %36

; <label>:35:                                     ; preds = %31
  invoke void @__cxa_rethrow() #13
          to label %120 unwind label %36

; <label>:36:                                     ; preds = %35, %31
  %37 = load i32, i32* @x.697
  %38 = load i32, i32* @y.698
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  br i1 %48, label %50, label %121

; <label>:50:                                     ; preds = %36, %121
  %51 = landingpad { i8*, i32 }
          cleanup
  %52 = extractvalue { i8*, i32 } %51, 0
  store i8* %52, i8** %16, align 8
  %53 = extractvalue { i8*, i32 } %51, 1
  store i32 %53, i32* %17, align 4
  %54 = load i32, i32* @x.697
  %55 = load i32, i32* @y.698
  %56 = sub i32 %54, 28511208
  %57 = sub i32 %56, 1
  %58 = add i32 %57, 28511208
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  br i1 %66, label %68, label %121

; <label>:68:                                     ; preds = %50
  invoke void @__cxa_end_catch()
          to label %69 unwind label %117

; <label>:69:                                     ; preds = %68
  br label %112
                                                  ; No predecessors!
  %71 = load i32, i32* @x.697
  %72 = load i32, i32* @y.698
  %73 = add i32 %71, 549472355
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, 549472355
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  br i1 %83, label %85, label %125

; <label>:85:                                     ; preds = %70, %125
  call void @llvm.trap()
  %86 = load i32, i32* @x.697
  %87 = load i32, i32* @y.698
  %88 = sub i32 0, 1
  %89 = add i32 %86, %88
  %90 = sub i32 %86, 1
  %91 = mul i32 %86, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %87, 10
  %95 = xor i1 %93, true
  %96 = xor i1 %94, true
  %97 = xor i1 false, true
  %98 = and i1 %95, false
  %99 = and i1 %93, %97
  %100 = and i1 %96, false
  %101 = and i1 %94, %97
  %102 = or i1 %98, %99
  %103 = or i1 %100, %101
  %104 = xor i1 %102, %103
  %105 = or i1 %95, %96
  %106 = xor i1 %105, true
  %107 = or i1 false, %97
  %108 = and i1 %106, %107
  %109 = or i1 %104, %108
  %110 = or i1 %93, %94
  br i1 %109, label %111, label %125

; <label>:111:                                    ; preds = %85
  unreachable

; <label>:112:                                    ; preds = %69
  %113 = load i8*, i8** %16, align 8
  %114 = load i32, i32* %17, align 4
  %115 = insertvalue { i8*, i32 } undef, i8* %113, 0
  %116 = insertvalue { i8*, i32 } %115, i32 %114, 1
  resume { i8*, i32 } %116

; <label>:117:                                    ; preds = %68
  %118 = landingpad { i8*, i32 }
          catch i8* null
  %119 = extractvalue { i8*, i32 } %118, 0
  call void @__clang_call_terminate(i8* %119) #9
  unreachable

; <label>:120:                                    ; preds = %35
  unreachable

; <label>:121:                                    ; preds = %50, %36
  %122 = landingpad { i8*, i32 }
          cleanup
  %123 = extractvalue { i8*, i32 } %122, 0
  store i8* %123, i8** %16, align 8
  %124 = extractvalue { i8*, i32 } %122, 1
  store i32 %124, i32* %17, align 4
  br label %50

; <label>:125:                                    ; preds = %85, %70
  call void @llvm.trap()
  br label %85
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt22__uninitialized_copy_aISt13move_iteratorISt15_Deque_iteratorIiRiPiEES4_iET0_T_S7_S6_RSaIT1_E(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::move_iterator.22"*, %"class.std::move_iterator.22"*, %"struct.std::_Deque_iterator"*, %"class.std::allocator.0"* dereferenceable(1)) #2 comdat {
  %6 = alloca %"class.std::allocator.0"*, align 8
  %7 = alloca %"class.std::move_iterator.22", align 8
  %8 = alloca %"class.std::move_iterator.22", align 8
  %9 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::allocator.0"* %4, %"class.std::allocator.0"** %6, align 8
  call void @_ZNSt13move_iteratorISt15_Deque_iteratorIiRiPiEEC2ERKS4_(%"class.std::move_iterator.22"* %7, %"class.std::move_iterator.22"* dereferenceable(32) %1) #11
  call void @_ZNSt13move_iteratorISt15_Deque_iteratorIiRiPiEEC2ERKS4_(%"class.std::move_iterator.22"* %8, %"class.std::move_iterator.22"* dereferenceable(32) %2) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %9, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #11
  call void @_ZSt18uninitialized_copyISt13move_iteratorISt15_Deque_iteratorIiRiPiEES4_ET0_T_S7_S6_(%"struct.std::_Deque_iterator"* sret %0, %"class.std::move_iterator.22"* %7, %"class.std::move_iterator.22"* %8, %"struct.std::_Deque_iterator"* %9)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt18make_move_iteratorISt15_Deque_iteratorIiRiPiEESt13move_iteratorIT_ES5_(%"class.std::move_iterator.22"* noalias sret, %"struct.std::_Deque_iterator"*) #2 comdat {
  %3 = alloca %"struct.std::_Deque_iterator", align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %3, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  call void @_ZNSt13move_iteratorISt15_Deque_iteratorIiRiPiEEC2ES3_(%"class.std::move_iterator.22"* %0, %"struct.std::_Deque_iterator"* %3)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt18uninitialized_copyISt13move_iteratorISt15_Deque_iteratorIiRiPiEES4_ET0_T_S7_S6_(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::move_iterator.22"*, %"class.std::move_iterator.22"*, %"struct.std::_Deque_iterator"*) #2 comdat {
  %5 = alloca i8, align 1
  %6 = alloca %"class.std::move_iterator.22", align 8
  %7 = alloca %"class.std::move_iterator.22", align 8
  %8 = alloca %"struct.std::_Deque_iterator", align 8
  store i8 1, i8* %5, align 1
  call void @_ZNSt13move_iteratorISt15_Deque_iteratorIiRiPiEEC2ERKS4_(%"class.std::move_iterator.22"* %6, %"class.std::move_iterator.22"* dereferenceable(32) %1) #11
  call void @_ZNSt13move_iteratorISt15_Deque_iteratorIiRiPiEEC2ERKS4_(%"class.std::move_iterator.22"* %7, %"class.std::move_iterator.22"* dereferenceable(32) %2) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %8, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #11
  call void @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorISt15_Deque_iteratorIiRiPiEES6_EET0_T_S9_S8_(%"struct.std::_Deque_iterator"* sret %0, %"class.std::move_iterator.22"* %6, %"class.std::move_iterator.22"* %7, %"struct.std::_Deque_iterator"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorISt15_Deque_iteratorIiRiPiEEC2ERKS4_(%"class.std::move_iterator.22"*, %"class.std::move_iterator.22"* dereferenceable(32)) unnamed_addr #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.705
  %6 = load i32, i32* @y.706
  %7 = sub i32 %5, 1185613105
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1185613105
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -609415328, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %80
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -609415328, label %19
    i32 953162361, label %39
    i32 1695732894, label %72
    i32 -1525430956, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %80

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 953162361, i32 -1525430956
  store i32 %38, i32* %15
  br label %80

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator.22"*, align 8
  %41 = alloca %"class.std::move_iterator.22"*, align 8
  store %"class.std::move_iterator.22"* %0, %"class.std::move_iterator.22"** %40, align 8
  store %"class.std::move_iterator.22"* %1, %"class.std::move_iterator.22"** %41, align 8
  %42 = load %"class.std::move_iterator.22"*, %"class.std::move_iterator.22"** %40, align 8
  %43 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %42, i32 0, i32 0
  %44 = load %"class.std::move_iterator.22"*, %"class.std::move_iterator.22"** %41, align 8
  %45 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %44, i32 0, i32 0
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %43, %"struct.std::_Deque_iterator"* dereferenceable(32) %45) #11
  %46 = load i32, i32* @x.705
  %47 = load i32, i32* @y.706
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 1695732894, i32 -1525430956
  store i32 %71, i32* %15
  br label %80

; <label>:72:                                     ; preds = %16
  ret void

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::move_iterator.22"*, align 8
  %75 = alloca %"class.std::move_iterator.22"*, align 8
  store %"class.std::move_iterator.22"* %0, %"class.std::move_iterator.22"** %74, align 8
  store %"class.std::move_iterator.22"* %1, %"class.std::move_iterator.22"** %75, align 8
  %76 = load %"class.std::move_iterator.22"*, %"class.std::move_iterator.22"** %74, align 8
  %77 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %76, i32 0, i32 0
  %78 = load %"class.std::move_iterator.22"*, %"class.std::move_iterator.22"** %75, align 8
  %79 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %78, i32 0, i32 0
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %77, %"struct.std::_Deque_iterator"* dereferenceable(32) %79) #11
  store i32 953162361, i32* %15
  br label %80

; <label>:80:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorISt15_Deque_iteratorIiRiPiEES6_EET0_T_S9_S8_(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::move_iterator.22"*, %"class.std::move_iterator.22"*, %"struct.std::_Deque_iterator"*) #2 comdat align 2 {
  %5 = alloca %"class.std::move_iterator.22", align 8
  %6 = alloca %"class.std::move_iterator.22", align 8
  %7 = alloca %"struct.std::_Deque_iterator", align 8
  call void @_ZNSt13move_iteratorISt15_Deque_iteratorIiRiPiEEC2ERKS4_(%"class.std::move_iterator.22"* %5, %"class.std::move_iterator.22"* dereferenceable(32) %1) #11
  call void @_ZNSt13move_iteratorISt15_Deque_iteratorIiRiPiEEC2ERKS4_(%"class.std::move_iterator.22"* %6, %"class.std::move_iterator.22"* dereferenceable(32) %2) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %7, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #11
  call void @_ZSt4copyISt13move_iteratorISt15_Deque_iteratorIiRiPiEES4_ET0_T_S7_S6_(%"struct.std::_Deque_iterator"* sret %0, %"class.std::move_iterator.22"* %5, %"class.std::move_iterator.22"* %6, %"struct.std::_Deque_iterator"* %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4copyISt13move_iteratorISt15_Deque_iteratorIiRiPiEES4_ET0_T_S7_S6_(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::move_iterator.22"*, %"class.std::move_iterator.22"*, %"struct.std::_Deque_iterator"*) #2 comdat {
  %5 = alloca %"struct.std::_Deque_iterator", align 8
  %6 = alloca %"class.std::move_iterator.22", align 8
  %7 = alloca %"struct.std::_Deque_iterator", align 8
  %8 = alloca %"class.std::move_iterator.22", align 8
  %9 = alloca %"struct.std::_Deque_iterator", align 8
  call void @_ZNSt13move_iteratorISt15_Deque_iteratorIiRiPiEEC2ERKS4_(%"class.std::move_iterator.22"* %6, %"class.std::move_iterator.22"* dereferenceable(32) %1) #11
  call void @_ZSt12__miter_baseISt13move_iteratorISt15_Deque_iteratorIiRiPiEEENSt11_Miter_baseIT_E13iterator_typeES7_(%"struct.std::_Deque_iterator"* sret %5, %"class.std::move_iterator.22"* %6)
  call void @_ZNSt13move_iteratorISt15_Deque_iteratorIiRiPiEEC2ERKS4_(%"class.std::move_iterator.22"* %8, %"class.std::move_iterator.22"* dereferenceable(32) %2) #11
  call void @_ZSt12__miter_baseISt13move_iteratorISt15_Deque_iteratorIiRiPiEEENSt11_Miter_baseIT_E13iterator_typeES7_(%"struct.std::_Deque_iterator"* sret %7, %"class.std::move_iterator.22"* %8)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %9, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #11
  call void @_ZSt14__copy_move_a2ILb1ESt15_Deque_iteratorIiRiPiES3_ET1_T0_S5_S4_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator"* %5, %"struct.std::_Deque_iterator"* %7, %"struct.std::_Deque_iterator"* %9)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt14__copy_move_a2ILb1ESt15_Deque_iteratorIiRiPiES3_ET1_T0_S5_S4_(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*) #2 comdat {
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.711
  %8 = load i32, i32* @y.712
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -472565732, i32* %16
  br label %17

; <label>:17:                                     ; preds = %4, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -472565732, label %20
    i32 739191702, label %28
    i32 1355099554, label %62
    i32 744832170, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 739191702, i32 744832170
  store i32 %27, i32* %16
  br label %70

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::_Deque_iterator", align 8
  %30 = alloca %"struct.std::_Deque_iterator", align 8
  %31 = alloca %"struct.std::_Deque_iterator", align 8
  %32 = alloca %"struct.std::_Deque_iterator", align 8
  %33 = alloca %"struct.std::_Deque_iterator", align 8
  %34 = alloca %"struct.std::_Deque_iterator", align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %30, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  call void @_ZSt12__niter_baseISt15_Deque_iteratorIiRiPiEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.std::_Deque_iterator"* sret %29, %"struct.std::_Deque_iterator"* %30)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %32, %"struct.std::_Deque_iterator"* dereferenceable(32) %2) #11
  call void @_ZSt12__niter_baseISt15_Deque_iteratorIiRiPiEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.std::_Deque_iterator"* sret %31, %"struct.std::_Deque_iterator"* %32)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %34, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #11
  call void @_ZSt12__niter_baseISt15_Deque_iteratorIiRiPiEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.std::_Deque_iterator"* sret %33, %"struct.std::_Deque_iterator"* %34)
  call void @_ZSt13__copy_move_aILb1ESt15_Deque_iteratorIiRiPiES3_ET1_T0_S5_S4_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator"* %29, %"struct.std::_Deque_iterator"* %31, %"struct.std::_Deque_iterator"* %33)
  %35 = load i32, i32* @x.711
  %36 = load i32, i32* @y.712
  %37 = add i32 %35, 234408917
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 234408917
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 1355099554, i32 744832170
  store i32 %61, i32* %16
  br label %70

; <label>:62:                                     ; preds = %17
  ret void

; <label>:63:                                     ; preds = %17
  %64 = alloca %"struct.std::_Deque_iterator", align 8
  %65 = alloca %"struct.std::_Deque_iterator", align 8
  %66 = alloca %"struct.std::_Deque_iterator", align 8
  %67 = alloca %"struct.std::_Deque_iterator", align 8
  %68 = alloca %"struct.std::_Deque_iterator", align 8
  %69 = alloca %"struct.std::_Deque_iterator", align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %65, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  call void @_ZSt12__niter_baseISt15_Deque_iteratorIiRiPiEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.std::_Deque_iterator"* sret %64, %"struct.std::_Deque_iterator"* %65)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %67, %"struct.std::_Deque_iterator"* dereferenceable(32) %2) #11
  call void @_ZSt12__niter_baseISt15_Deque_iteratorIiRiPiEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.std::_Deque_iterator"* sret %66, %"struct.std::_Deque_iterator"* %67)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %69, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #11
  call void @_ZSt12__niter_baseISt15_Deque_iteratorIiRiPiEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.std::_Deque_iterator"* sret %68, %"struct.std::_Deque_iterator"* %69)
  call void @_ZSt13__copy_move_aILb1ESt15_Deque_iteratorIiRiPiES3_ET1_T0_S5_S4_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator"* %64, %"struct.std::_Deque_iterator"* %66, %"struct.std::_Deque_iterator"* %68)
  store i32 739191702, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt12__miter_baseISt13move_iteratorISt15_Deque_iteratorIiRiPiEEENSt11_Miter_baseIT_E13iterator_typeES7_(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::move_iterator.22"*) #2 comdat {
  %3 = alloca %"class.std::move_iterator.22", align 8
  call void @_ZNSt13move_iteratorISt15_Deque_iteratorIiRiPiEEC2ERKS4_(%"class.std::move_iterator.22"* %3, %"class.std::move_iterator.22"* dereferenceable(32) %1) #11
  call void @_ZNSt10_Iter_baseISt13move_iteratorISt15_Deque_iteratorIiRiPiEELb1EE7_S_baseES5_(%"struct.std::_Deque_iterator"* sret %0, %"class.std::move_iterator.22"* %3)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt13__copy_move_aILb1ESt15_Deque_iteratorIiRiPiES3_ET1_T0_S5_S4_(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*) #2 comdat {
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.715
  %8 = load i32, i32* @y.716
  %9 = sub i32 %7, -1884022839
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -1884022839
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -630983432, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %67
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -630983432, label %21
    i32 -1355675571, label %29
    i32 1190907862, label %61
    i32 1567122294, label %62
  ]

; <label>:20:                                     ; preds = %18
  br label %67

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1355675571, i32 1567122294
  store i32 %28, i32* %17
  br label %67

; <label>:29:                                     ; preds = %18
  %30 = alloca i8, align 1
  %31 = alloca %"struct.std::_Deque_iterator", align 8
  %32 = alloca %"struct.std::_Deque_iterator", align 8
  %33 = alloca %"struct.std::_Deque_iterator", align 8
  store i8 0, i8* %30, align 1
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %31, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %32, %"struct.std::_Deque_iterator"* dereferenceable(32) %2) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %33, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #11
  call void @_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mISt15_Deque_iteratorIiRiPiES6_EET0_T_S8_S7_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator"* %31, %"struct.std::_Deque_iterator"* %32, %"struct.std::_Deque_iterator"* %33)
  %34 = load i32, i32* @x.715
  %35 = load i32, i32* @y.716
  %36 = add i32 %34, -195046171
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, -195046171
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 1190907862, i32 1567122294
  store i32 %60, i32* %17
  br label %67

; <label>:61:                                     ; preds = %18
  ret void

; <label>:62:                                     ; preds = %18
  %63 = alloca i8, align 1
  %64 = alloca %"struct.std::_Deque_iterator", align 8
  %65 = alloca %"struct.std::_Deque_iterator", align 8
  %66 = alloca %"struct.std::_Deque_iterator", align 8
  store i8 0, i8* %63, align 1
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %64, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %65, %"struct.std::_Deque_iterator"* dereferenceable(32) %2) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %66, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #11
  call void @_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mISt15_Deque_iteratorIiRiPiES6_EET0_T_S8_S7_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator"* %64, %"struct.std::_Deque_iterator"* %65, %"struct.std::_Deque_iterator"* %66)
  store i32 -1355675571, i32* %17
  br label %67

; <label>:67:                                     ; preds = %62, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mISt15_Deque_iteratorIiRiPiES6_EET0_T_S8_S7_(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*) #1 comdat align 2 {
  %5 = alloca i64, align 8
  %6 = call i64 @_ZStmiIiRiPiENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS6_S9_(%"struct.std::_Deque_iterator"* dereferenceable(32) %2, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  store i64 %6, i64* %5, align 8
  %7 = alloca i32
  store i32 894498402, i32* %7
  br label %8

; <label>:8:                                      ; preds = %4, %79
  %9 = load i32, i32* %7
  switch i32 %9, label %10 [
    i32 894498402, label %11
    i32 -2092834744, label %15
    i32 916236785, label %43
    i32 917805074, label %64
    i32 1959133327, label %65
    i32 -756555032, label %71
    i32 -771834116, label %72
  ]

; <label>:10:                                     ; preds = %8
  br label %79

; <label>:11:                                     ; preds = %8
  %12 = load i64, i64* %5, align 8
  %13 = icmp sgt i64 %12, 0
  %14 = select i1 %13, i32 -2092834744, i32 -756555032
  store i32 %14, i32* %7
  br label %79

; <label>:15:                                     ; preds = %8
  %16 = load i32, i32* @x.717
  %17 = load i32, i32* @y.718
  %18 = sub i32 %16, 1663510446
  %19 = sub i32 %18, 1
  %20 = add i32 %19, 1663510446
  %21 = sub i32 %16, 1
  %22 = mul i32 %16, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %17, 10
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 916236785, i32 -771834116
  store i32 %42, i32* %7
  br label %79

; <label>:43:                                     ; preds = %8
  %44 = call dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"* %1) #11
  %45 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %44) #11
  %46 = load i32, i32* %45, align 4
  %47 = call dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"* %3) #11
  store i32 %46, i32* %47, align 4
  %48 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorIiRiPiEppEv(%"struct.std::_Deque_iterator"* %1) #11
  %49 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorIiRiPiEppEv(%"struct.std::_Deque_iterator"* %3) #11
  %50 = load i32, i32* @x.717
  %51 = load i32, i32* @y.718
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 917805074, i32 -771834116
  store i32 %63, i32* %7
  br label %79

; <label>:64:                                     ; preds = %8
  store i32 1959133327, i32* %7
  br label %79

; <label>:65:                                     ; preds = %8
  %66 = load i64, i64* %5, align 8
  %67 = sub i64 %66, 7177764003585885062
  %68 = add i64 %67, -1
  %69 = add i64 %68, 7177764003585885062
  %70 = add nsw i64 %66, -1
  store i64 %69, i64* %5, align 8
  store i32 894498402, i32* %7
  br label %79

; <label>:71:                                     ; preds = %8
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #11
  ret void

; <label>:72:                                     ; preds = %8
  %73 = call dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"* %1) #11
  %74 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %73) #11
  %75 = load i32, i32* %74, align 4
  %76 = call dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"* %3) #11
  store i32 %75, i32* %76, align 4
  %77 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorIiRiPiEppEv(%"struct.std::_Deque_iterator"* %1) #11
  %78 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorIiRiPiEppEv(%"struct.std::_Deque_iterator"* %3) #11
  store i32 916236785, i32* %7
  br label %79

; <label>:79:                                     ; preds = %72, %65, %64, %43, %15, %11, %10
  br label %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4)) #1 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.719
  %6 = load i32, i32* @y.720
  %7 = add i32 %5, -755737484
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -755737484
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1844140260, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1844140260, label %19
    i32 1697584067, label %39
    i32 436875252, label %68
    i32 -443514251, label %70
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1697584067, i32 -443514251
  store i32 %38, i32* %15
  br label %73

; <label>:39:                                     ; preds = %16
  %40 = alloca i32*, align 8
  store i32* %0, i32** %40, align 8
  %41 = load i32*, i32** %40, align 8
  store i32* %41, i32** %2
  %42 = load i32, i32* @x.719
  %43 = load i32, i32* @y.720
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 436875252, i32 -443514251
  store i32 %67, i32* %15
  br label %73

; <label>:68:                                     ; preds = %16
  %69 = load volatile i32*, i32** %2
  ret i32* %69

; <label>:70:                                     ; preds = %16
  %71 = alloca i32*, align 8
  store i32* %0, i32** %71, align 8
  %72 = load i32*, i32** %71, align 8
  store i32 1697584067, i32* %15
  br label %73

; <label>:73:                                     ; preds = %70, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt10_Iter_baseISt13move_iteratorISt15_Deque_iteratorIiRiPiEELb1EE7_S_baseES5_(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::move_iterator.22"*) #2 comdat align 2 {
  call void @_ZNKSt13move_iteratorISt15_Deque_iteratorIiRiPiEE4baseEv(%"struct.std::_Deque_iterator"* sret %0, %"class.std::move_iterator.22"* %1)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt13move_iteratorISt15_Deque_iteratorIiRiPiEE4baseEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::move_iterator.22"*) #1 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.22"*, align 8
  store %"class.std::move_iterator.22"* %1, %"class.std::move_iterator.22"** %3, align 8
  %4 = load %"class.std::move_iterator.22"*, %"class.std::move_iterator.22"** %3, align 8
  %5 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %4, i32 0, i32 0
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %5) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorISt15_Deque_iteratorIiRiPiEEC2ES3_(%"class.std::move_iterator.22"*, %"struct.std::_Deque_iterator"*) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.22"*, align 8
  store %"class.std::move_iterator.22"* %0, %"class.std::move_iterator.22"** %3, align 8
  %4 = load %"class.std::move_iterator.22"*, %"class.std::move_iterator.22"** %3, align 8
  %5 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %4, i32 0, i32 0
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %5, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4moveIiESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator"*) #2 comdat {
  %5 = alloca i64*
  %6 = alloca i64*
  %7 = alloca i64*
  %8 = alloca i64*
  %9 = alloca i1
  %10 = alloca i1
  %11 = load i32, i32* @x.727
  %12 = load i32, i32* @y.728
  %13 = sub i32 0, 1
  %14 = add i32 %11, %13
  %15 = sub i32 %11, 1
  %16 = mul i32 %11, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %10
  %19 = icmp slt i32 %12, 10
  store i1 %19, i1* %9
  %20 = alloca i32
  store i32 1959751452, i32* %20
  br label %21

; <label>:21:                                     ; preds = %4, %317
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 1959751452, label %24
    i32 -746615827, label %32
    i32 1164171219, label %66
    i32 -1659368592, label %67
    i32 309925213, label %72
    i32 1731582190, label %99
    i32 -549681881, label %170
    i32 1611549519, label %171
    i32 2104254002, label %172
    i32 -1117193369, label %178
  ]

; <label>:23:                                     ; preds = %21
  br label %317

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %10
  %26 = load volatile i1, i1* %9
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 -746615827, i32 2104254002
  store i32 %31, i32* %20
  br label %317

; <label>:32:                                     ; preds = %21
  %33 = alloca i64, align 8
  store i64* %33, i64** %8
  %34 = alloca i64, align 8
  store i64* %34, i64** %7
  %35 = alloca i64, align 8
  store i64* %35, i64** %6
  %36 = alloca i64, align 8
  store i64* %36, i64** %5
  %37 = call i64 @_ZStmiIiRKiPS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_(%"struct.std::_Deque_iterator.21"* dereferenceable(32) %2, %"struct.std::_Deque_iterator.21"* dereferenceable(32) %1) #11
  %38 = load volatile i64*, i64** %8
  store i64 %37, i64* %38, align 8
  %39 = load i32, i32* @x.727
  %40 = load i32, i32* @y.728
  %41 = sub i32 %39, 1396600301
  %42 = sub i32 %41, 1
  %43 = add i32 %42, 1396600301
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 1164171219, i32 2104254002
  store i32 %65, i32* %20
  br label %317

; <label>:66:                                     ; preds = %21
  store i32 -1659368592, i32* %20
  br label %317

; <label>:67:                                     ; preds = %21
  %68 = load volatile i64*, i64** %8
  %69 = load i64, i64* %68, align 8
  %70 = icmp sgt i64 %69, 0
  %71 = select i1 %70, i32 309925213, i32 1611549519
  store i32 %71, i32* %20
  br label %317

; <label>:72:                                     ; preds = %21
  %73 = load i32, i32* @x.727
  %74 = load i32, i32* @y.728
  %75 = sub i32 0, 1
  %76 = add i32 %73, %75
  %77 = sub i32 %73, 1
  %78 = mul i32 %73, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %74, 10
  %82 = xor i1 %80, true
  %83 = xor i1 %81, true
  %84 = xor i1 false, true
  %85 = and i1 %82, false
  %86 = and i1 %80, %84
  %87 = and i1 %83, false
  %88 = and i1 %81, %84
  %89 = or i1 %85, %86
  %90 = or i1 %87, %88
  %91 = xor i1 %89, %90
  %92 = or i1 %82, %83
  %93 = xor i1 %92, true
  %94 = or i1 false, %84
  %95 = and i1 %93, %94
  %96 = or i1 %91, %95
  %97 = or i1 %80, %81
  %98 = select i1 %96, i32 1731582190, i32 -1117193369
  store i32 %98, i32* %20
  br label %317

; <label>:99:                                     ; preds = %21
  %100 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %1, i32 0, i32 2
  %101 = load i32*, i32** %100, align 8
  %102 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %1, i32 0, i32 0
  %103 = load i32*, i32** %102, align 8
  %104 = ptrtoint i32* %101 to i64
  %105 = ptrtoint i32* %103 to i64
  %106 = sub i64 %104, 2235790943509181031
  %107 = sub i64 %106, %105
  %108 = add i64 %107, 2235790943509181031
  %109 = sub i64 %104, %105
  %110 = sdiv exact i64 %108, 4
  %111 = load volatile i64*, i64** %6
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 2
  %113 = load i32*, i32** %112, align 8
  %114 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  %115 = load i32*, i32** %114, align 8
  %116 = ptrtoint i32* %113 to i64
  %117 = ptrtoint i32* %115 to i64
  %118 = sub i64 0, %117
  %119 = add i64 %116, %118
  %120 = sub i64 %116, %117
  %121 = sdiv exact i64 %119, 4
  %122 = load volatile i64*, i64** %5
  store i64 %121, i64* %122, align 8
  %123 = load volatile i64*, i64** %6
  %124 = load volatile i64*, i64** %5
  %125 = call dereferenceable(8) i64* @_ZSt3minIlERKT_S2_S2_(i64* dereferenceable(8) %123, i64* dereferenceable(8) %124)
  %126 = load volatile i64*, i64** %8
  %127 = call dereferenceable(8) i64* @_ZSt3minIlERKT_S2_S2_(i64* dereferenceable(8) %126, i64* dereferenceable(8) %125)
  %128 = load i64, i64* %127, align 8
  %129 = load volatile i64*, i64** %7
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %1, i32 0, i32 0
  %131 = load i32*, i32** %130, align 8
  %132 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %1, i32 0, i32 0
  %133 = load i32*, i32** %132, align 8
  %134 = load volatile i64*, i64** %7
  %135 = load i64, i64* %134, align 8
  %136 = getelementptr inbounds i32, i32* %133, i64 %135
  %137 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  %138 = load i32*, i32** %137, align 8
  %139 = call i32* @_ZSt4moveIPiS0_ET0_T_S2_S1_(i32* %131, i32* %136, i32* %138)
  %140 = load volatile i64*, i64** %7
  %141 = load i64, i64* %140, align 8
  %142 = call dereferenceable(32) %"struct.std::_Deque_iterator.21"* @_ZNSt15_Deque_iteratorIiRKiPS0_EpLEl(%"struct.std::_Deque_iterator.21"* %1, i64 %141) #11
  %143 = load volatile i64*, i64** %7
  %144 = load i64, i64* %143, align 8
  %145 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorIiRiPiEpLEl(%"struct.std::_Deque_iterator"* %3, i64 %144) #11
  %146 = load volatile i64*, i64** %7
  %147 = load i64, i64* %146, align 8
  %148 = load volatile i64*, i64** %8
  %149 = load i64, i64* %148, align 8
  %150 = sub i64 %149, -8413942693665466034
  %151 = sub i64 %150, %147
  %152 = add i64 %151, -8413942693665466034
  %153 = sub nsw i64 %149, %147
  %154 = load volatile i64*, i64** %8
  store i64 %152, i64* %154, align 8
  %155 = load i32, i32* @x.727
  %156 = load i32, i32* @y.728
  %157 = sub i32 %155, 1969404549
  %158 = sub i32 %157, 1
  %159 = add i32 %158, 1969404549
  %160 = sub i32 %155, 1
  %161 = mul i32 %155, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %156, 10
  %165 = and i1 %163, %164
  %166 = xor i1 %163, %164
  %167 = or i1 %165, %166
  %168 = or i1 %163, %164
  %169 = select i1 %167, i32 -549681881, i32 -1117193369
  store i32 %169, i32* %20
  br label %317

; <label>:170:                                    ; preds = %21
  store i32 -1659368592, i32* %20
  br label %317

; <label>:171:                                    ; preds = %21
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #11
  ret void

; <label>:172:                                    ; preds = %21
  %173 = alloca i64, align 8
  %174 = alloca i64, align 8
  %175 = alloca i64, align 8
  %176 = alloca i64, align 8
  %177 = call i64 @_ZStmiIiRKiPS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_(%"struct.std::_Deque_iterator.21"* dereferenceable(32) %2, %"struct.std::_Deque_iterator.21"* dereferenceable(32) %1) #11
  store i64 %177, i64* %173, align 8
  store i32 -746615827, i32* %20
  br label %317

; <label>:178:                                    ; preds = %21
  %179 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %1, i32 0, i32 2
  %180 = load i32*, i32** %179, align 8
  %181 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %1, i32 0, i32 0
  %182 = load i32*, i32** %181, align 8
  %183 = ptrtoint i32* %180 to i64
  %184 = ptrtoint i32* %182 to i64
  %185 = shl i64 %183, %184
  %186 = sub i64 0, %183
  %187 = add i64 0, %186
  %188 = sub i64 0, %183
  %189 = sub i64 0, %184
  %190 = sub i64 %187, %189
  %191 = add i64 %187, %184
  %192 = shl i64 %183, %184
  %193 = add i64 0, -1246278498662787787
  %194 = sub i64 %193, %183
  %195 = sub i64 %194, -1246278498662787787
  %196 = sub i64 0, %183
  %197 = sub i64 0, %195
  %198 = sub i64 0, %184
  %199 = add i64 %197, %198
  %200 = sub i64 0, %199
  %201 = add i64 %195, %184
  %202 = sub i64 %183, 7168578892587318865
  %203 = sub i64 %202, %184
  %204 = add i64 %203, 7168578892587318865
  %205 = sub i64 %183, %184
  %206 = sdiv exact i64 %204, 4
  %207 = load volatile i64*, i64** %6
  store i64 %206, i64* %207, align 8
  %208 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 2
  %209 = load i32*, i32** %208, align 8
  %210 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  %211 = load i32*, i32** %210, align 8
  %212 = ptrtoint i32* %209 to i64
  %213 = ptrtoint i32* %211 to i64
  %214 = sub i64 0, %212
  %215 = add i64 0, %214
  %216 = sub i64 0, %212
  %217 = sub i64 %215, -2977195769902338338
  %218 = add i64 %217, %213
  %219 = add i64 %218, -2977195769902338338
  %220 = add i64 %215, %213
  %221 = shl i64 %212, %213
  %222 = sub i64 0, %212
  %223 = add i64 0, %222
  %224 = sub i64 0, %212
  %225 = add i64 %223, -4028747722128671337
  %226 = add i64 %225, %213
  %227 = sub i64 %226, -4028747722128671337
  %228 = add i64 %223, %213
  %229 = sub i64 %212, 3275903669801431154
  %230 = sub i64 %229, %213
  %231 = add i64 %230, 3275903669801431154
  %232 = sub i64 %212, %213
  %233 = mul i64 %231, %213
  %234 = shl i64 %212, %213
  %235 = sub i64 %212, -5082031204407864455
  %236 = sub i64 %235, %213
  %237 = add i64 %236, -5082031204407864455
  %238 = sub i64 %212, %213
  %239 = mul i64 %237, %213
  %240 = sub i64 0, %213
  %241 = add i64 %212, %240
  %242 = sub i64 %212, %213
  %243 = add i64 %241, 5384152428812121233
  %244 = sub i64 %243, 4
  %245 = sub i64 %244, 5384152428812121233
  %246 = sub i64 %241, 4
  %247 = mul i64 %245, 4
  %248 = shl i64 %241, 4
  %249 = add i64 0, -7305606872903483268
  %250 = sub i64 %249, %241
  %251 = sub i64 %250, -7305606872903483268
  %252 = sub i64 0, %241
  %253 = sub i64 0, %251
  %254 = sub i64 0, 4
  %255 = add i64 %253, %254
  %256 = sub i64 0, %255
  %257 = add i64 %251, 4
  %258 = sub i64 0, 4
  %259 = add i64 %241, %258
  %260 = sub i64 %241, 4
  %261 = mul i64 %259, 4
  %262 = sdiv exact i64 %241, 4
  %263 = load volatile i64*, i64** %5
  store i64 %262, i64* %263, align 8
  %264 = load volatile i64*, i64** %6
  %265 = load volatile i64*, i64** %5
  %266 = call dereferenceable(8) i64* @_ZSt3minIlERKT_S2_S2_(i64* dereferenceable(8) %264, i64* dereferenceable(8) %265)
  %267 = load volatile i64*, i64** %8
  %268 = call dereferenceable(8) i64* @_ZSt3minIlERKT_S2_S2_(i64* dereferenceable(8) %267, i64* dereferenceable(8) %266)
  %269 = load i64, i64* %268, align 8
  %270 = load volatile i64*, i64** %7
  store i64 %269, i64* %270, align 8
  %271 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %1, i32 0, i32 0
  %272 = load i32*, i32** %271, align 8
  %273 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %1, i32 0, i32 0
  %274 = load i32*, i32** %273, align 8
  %275 = load volatile i64*, i64** %7
  %276 = load i64, i64* %275, align 8
  %277 = getelementptr inbounds i32, i32* %274, i64 %276
  %278 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  %279 = load i32*, i32** %278, align 8
  %280 = call i32* @_ZSt4moveIPiS0_ET0_T_S2_S1_(i32* %272, i32* %277, i32* %279)
  %281 = load volatile i64*, i64** %7
  %282 = load i64, i64* %281, align 8
  %283 = call dereferenceable(32) %"struct.std::_Deque_iterator.21"* @_ZNSt15_Deque_iteratorIiRKiPS0_EpLEl(%"struct.std::_Deque_iterator.21"* %1, i64 %282) #11
  %284 = load volatile i64*, i64** %7
  %285 = load i64, i64* %284, align 8
  %286 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorIiRiPiEpLEl(%"struct.std::_Deque_iterator"* %3, i64 %285) #11
  %287 = load volatile i64*, i64** %7
  %288 = load i64, i64* %287, align 8
  %289 = load volatile i64*, i64** %8
  %290 = load i64, i64* %289, align 8
  %291 = sub i64 %290, 971756149999729255
  %292 = sub i64 %291, %288
  %293 = add i64 %292, 971756149999729255
  %294 = sub i64 %290, %288
  %295 = mul i64 %293, %288
  %296 = shl i64 %290, %288
  %297 = shl i64 %290, %288
  %298 = sub i64 %290, 5930349230629878632
  %299 = sub i64 %298, %288
  %300 = add i64 %299, 5930349230629878632
  %301 = sub i64 %290, %288
  %302 = mul i64 %300, %288
  %303 = shl i64 %290, %288
  %304 = add i64 %290, -9215143848420828818
  %305 = sub i64 %304, %288
  %306 = sub i64 %305, -9215143848420828818
  %307 = sub i64 %290, %288
  %308 = mul i64 %306, %288
  %309 = sub i64 0, %288
  %310 = add i64 %290, %309
  %311 = sub i64 %290, %288
  %312 = mul i64 %310, %288
  %313 = sub i64 0, %288
  %314 = add i64 %290, %313
  %315 = sub nsw i64 %290, %288
  %316 = load volatile i64*, i64** %8
  store i64 %314, i64* %316, align 8
  store i32 1731582190, i32* %20
  br label %317

; <label>:317:                                    ; preds = %178, %172, %170, %99, %72, %67, %66, %32, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt4moveIPiS0_ET0_T_S2_S1_(i32*, i32*, i32*) #2 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__miter_baseIPiENSt11_Miter_baseIT_E13iterator_typeES2_(i32* %7)
  %9 = load i32*, i32** %5, align 8
  %10 = call i32* @_ZSt12__miter_baseIPiENSt11_Miter_baseIT_E13iterator_typeES2_(i32* %9)
  %11 = load i32*, i32** %6, align 8
  %12 = call i32* @_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_(i32* %8, i32* %10, i32* %11)
  ret i32* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #2 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.731
  %8 = load i32, i32* @y.732
  %9 = sub i32 %7, -1467120984
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -1467120984
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1883759696, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %92
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1883759696, label %21
    i32 478610363, label %41
    i32 1732512066, label %79
    i32 -1928626969, label %81
  ]

; <label>:20:                                     ; preds = %18
  br label %92

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 478610363, i32 -1928626969
  store i32 %40, i32* %17
  br label %92

; <label>:41:                                     ; preds = %18
  %42 = alloca i32*, align 8
  %43 = alloca i32*, align 8
  %44 = alloca i32*, align 8
  store i32* %0, i32** %42, align 8
  store i32* %1, i32** %43, align 8
  store i32* %2, i32** %44, align 8
  %45 = load i32*, i32** %42, align 8
  %46 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %45)
  %47 = load i32*, i32** %43, align 8
  %48 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %47)
  %49 = load i32*, i32** %44, align 8
  %50 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %49)
  %51 = call i32* @_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_(i32* %46, i32* %48, i32* %50)
  store i32* %51, i32** %4
  %52 = load i32, i32* @x.731
  %53 = load i32, i32* @y.732
  %54 = sub i32 %52, 2121109826
  %55 = sub i32 %54, 1
  %56 = add i32 %55, 2121109826
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 1732512066, i32 -1928626969
  store i32 %78, i32* %17
  br label %92

; <label>:79:                                     ; preds = %18
  %80 = load volatile i32*, i32** %4
  ret i32* %80

; <label>:81:                                     ; preds = %18
  %82 = alloca i32*, align 8
  %83 = alloca i32*, align 8
  %84 = alloca i32*, align 8
  store i32* %0, i32** %82, align 8
  store i32* %1, i32** %83, align 8
  store i32* %2, i32** %84, align 8
  %85 = load i32*, i32** %82, align 8
  %86 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %85)
  %87 = load i32*, i32** %83, align 8
  %88 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %87)
  %89 = load i32*, i32** %84, align 8
  %90 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %89)
  %91 = call i32* @_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_(i32* %86, i32* %88, i32* %90)
  store i32 478610363, i32* %17
  br label %92

; <label>:92:                                     ; preds = %81, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #2 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32* %8, i32* %9, i32* %10)
  ret i32* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32*, i32*, i32*) #1 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i64, align 8
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = load i32*, i32** %5, align 8
  %11 = ptrtoint i32* %9 to i64
  %12 = ptrtoint i32* %10 to i64
  %13 = add i64 %11, -2721804454464093265
  %14 = sub i64 %13, %12
  %15 = sub i64 %14, -2721804454464093265
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 4
  store i64 %17, i64* %8, align 8
  %18 = load i64, i64* %8, align 8
  store i64 %18, i64* %4
  %19 = alloca i32
  store i32 1779372111, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %38
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1779372111, label %23
    i32 1362880103, label %27
    i32 2059840985, label %34
  ]

; <label>:22:                                     ; preds = %20
  br label %38

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %4
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 1362880103, i32 2059840985
  store i32 %26, i32* %19
  br label %38

; <label>:27:                                     ; preds = %20
  %28 = load i32*, i32** %7, align 8
  %29 = bitcast i32* %28 to i8*
  %30 = load i32*, i32** %5, align 8
  %31 = bitcast i32* %30 to i8*
  %32 = load i64, i64* %8, align 8
  %33 = mul i64 4, %32
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %29, i8* %31, i64 %33, i32 4, i1 false)
  store i32 2059840985, i32* %19
  br label %38

; <label>:34:                                     ; preds = %20
  %35 = load i32*, i32** %7, align 8
  %36 = load i64, i64* %8, align 8
  %37 = getelementptr inbounds i32, i32* %35, i64 %36
  ret i32* %37

; <label>:38:                                     ; preds = %27, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt9__advanceISt15_Deque_iteratorIiRKiPS1_ElEvRT_T0_St26random_access_iterator_tag(%"struct.std::_Deque_iterator.21"* dereferenceable(32), i64) #1 comdat {
  %3 = alloca %"struct.std::random_access_iterator_tag", align 1
  %4 = alloca %"struct.std::_Deque_iterator.21"*, align 8
  %5 = alloca i64, align 8
  store %"struct.std::_Deque_iterator.21"* %0, %"struct.std::_Deque_iterator.21"** %4, align 8
  store i64 %1, i64* %5, align 8
  %6 = load i64, i64* %5, align 8
  %7 = load %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %4, align 8
  %8 = call dereferenceable(32) %"struct.std::_Deque_iterator.21"* @_ZNSt15_Deque_iteratorIiRKiPS0_EpLEl(%"struct.std::_Deque_iterator.21"* %7, i64 %6) #11
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyISt15_Deque_iteratorIiRiPiEiEvT_S4_RSaIT0_E(%"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*, %"class.std::allocator.0"* dereferenceable(1)) #2 comdat {
  %4 = alloca %"class.std::allocator.0"*, align 8
  %5 = alloca %"struct.std::_Deque_iterator", align 8
  %6 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::allocator.0"* %2, %"class.std::allocator.0"** %4, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %5, %"struct.std::_Deque_iterator"* dereferenceable(32) %0) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %6, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  call void @_ZSt8_DestroyISt15_Deque_iteratorIiRiPiEEvT_S4_(%"struct.std::_Deque_iterator"* %5, %"struct.std::_Deque_iterator"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyISt15_Deque_iteratorIiRiPiEEvT_S4_(%"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*) #2 comdat {
  %3 = alloca %"struct.std::_Deque_iterator", align 8
  %4 = alloca %"struct.std::_Deque_iterator", align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %3, %"struct.std::_Deque_iterator"* dereferenceable(32) %0) #11
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %4, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #11
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyISt15_Deque_iteratorIiRiPiEEEvT_S6_(%"struct.std::_Deque_iterator"* %3, %"struct.std::_Deque_iterator"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyISt15_Deque_iteratorIiRiPiEEEvT_S6_(%"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*) #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.743
  %6 = load i32, i32* @y.744
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 806829657, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %44
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 806829657, label %18
    i32 2012878868, label %26
    i32 1240326351, label %42
    i32 786571404, label %43
  ]

; <label>:17:                                     ; preds = %15
  br label %44

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 2012878868, i32 786571404
  store i32 %25, i32* %14
  br label %44

; <label>:26:                                     ; preds = %15
  %27 = load i32, i32* @x.743
  %28 = load i32, i32* @y.744
  %29 = sub i32 %27, 44946614
  %30 = sub i32 %29, 1
  %31 = add i32 %30, 44946614
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  %41 = select i1 %39, i32 1240326351, i32 786571404
  store i32 %41, i32* %14
  br label %44

; <label>:42:                                     ; preds = %15
  ret void

; <label>:43:                                     ; preds = %15
  store i32 2012878868, i32* %14
  br label %44

; <label>:44:                                     ; preds = %43, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt13move_backwardIiESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator.21"* byval align 8, %"struct.std::_Deque_iterator"*) #2 comdat {
  %5 = alloca i1
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i64, align 8
  %12 = call i64 @_ZStmiIiRKiPS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_(%"struct.std::_Deque_iterator.21"* dereferenceable(32) %2, %"struct.std::_Deque_iterator.21"* dereferenceable(32) %1) #11
  store i64 %12, i64* %6, align 8
  %13 = alloca i32
  store i32 -556948684, i32* %13
  br label %14

; <label>:14:                                     ; preds = %4, %204
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -556948684, label %17
    i32 -957232578, label %21
    i32 1779834213, label %51
    i32 -208397600, label %78
    i32 -249973601, label %112
    i32 -1231290061, label %113
    i32 -46584026, label %141
    i32 126654755, label %158
    i32 640742218, label %161
    i32 -1642347275, label %169
    i32 -1002687317, label %192
    i32 168807770, label %193
    i32 -1074722235, label %201
  ]

; <label>:16:                                     ; preds = %14
  br label %204

; <label>:17:                                     ; preds = %14
  %18 = load i64, i64* %6, align 8
  %19 = icmp sgt i64 %18, 0
  %20 = select i1 %19, i32 -957232578, i32 -1002687317
  store i32 %20, i32* %13
  br label %204

; <label>:21:                                     ; preds = %14
  %22 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %2, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %2, i32 0, i32 1
  %25 = load i32*, i32** %24, align 8
  %26 = ptrtoint i32* %23 to i64
  %27 = ptrtoint i32* %25 to i64
  %28 = add i64 %26, 5961115598120734599
  %29 = sub i64 %28, %27
  %30 = sub i64 %29, 5961115598120734599
  %31 = sub i64 %26, %27
  %32 = sdiv exact i64 %30, 4
  store i64 %32, i64* %7, align 8
  %33 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %2, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  store i32* %34, i32** %8, align 8
  %35 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 1
  %38 = load i32*, i32** %37, align 8
  %39 = ptrtoint i32* %36 to i64
  %40 = ptrtoint i32* %38 to i64
  %41 = add i64 %39, -8943452036959009449
  %42 = sub i64 %41, %40
  %43 = sub i64 %42, -8943452036959009449
  %44 = sub i64 %39, %40
  %45 = sdiv exact i64 %43, 4
  store i64 %45, i64* %9, align 8
  %46 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  store i32* %47, i32** %10, align 8
  %48 = load i64, i64* %7, align 8
  %49 = icmp ne i64 %48, 0
  %50 = select i1 %49, i32 -1231290061, i32 1779834213
  store i32 %50, i32* %13
  br label %204

; <label>:51:                                     ; preds = %14
  %52 = load i32, i32* @x.745
  %53 = load i32, i32* @y.746
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 -208397600, i32 168807770
  store i32 %77, i32* %13
  br label %204

; <label>:78:                                     ; preds = %14
  %79 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #11
  store i64 %79, i64* %7, align 8
  %80 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %2, i32 0, i32 3
  %81 = load i32**, i32*** %80, align 8
  %82 = getelementptr inbounds i32*, i32** %81, i64 -1
  %83 = load i32*, i32** %82, align 8
  %84 = load i64, i64* %7, align 8
  %85 = getelementptr inbounds i32, i32* %83, i64 %84
  store i32* %85, i32** %8, align 8
  %86 = load i32, i32* @x.745
  %87 = load i32, i32* @y.746
  %88 = sub i32 0, 1
  %89 = add i32 %86, %88
  %90 = sub i32 %86, 1
  %91 = mul i32 %86, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %87, 10
  %95 = xor i1 %93, true
  %96 = xor i1 %94, true
  %97 = xor i1 false, true
  %98 = and i1 %95, false
  %99 = and i1 %93, %97
  %100 = and i1 %96, false
  %101 = and i1 %94, %97
  %102 = or i1 %98, %99
  %103 = or i1 %100, %101
  %104 = xor i1 %102, %103
  %105 = or i1 %95, %96
  %106 = xor i1 %105, true
  %107 = or i1 false, %97
  %108 = and i1 %106, %107
  %109 = or i1 %104, %108
  %110 = or i1 %93, %94
  %111 = select i1 %109, i32 -249973601, i32 168807770
  store i32 %111, i32* %13
  br label %204

; <label>:112:                                    ; preds = %14
  store i32 -1231290061, i32* %13
  br label %204

; <label>:113:                                    ; preds = %14
  %114 = load i32, i32* @x.745
  %115 = load i32, i32* @y.746
  %116 = add i32 %114, 601051123
  %117 = sub i32 %116, 1
  %118 = sub i32 %117, 601051123
  %119 = sub i32 %114, 1
  %120 = mul i32 %114, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %115, 10
  %124 = xor i1 %122, true
  %125 = xor i1 %123, true
  %126 = xor i1 true, true
  %127 = and i1 %124, true
  %128 = and i1 %122, %126
  %129 = and i1 %125, true
  %130 = and i1 %123, %126
  %131 = or i1 %127, %128
  %132 = or i1 %129, %130
  %133 = xor i1 %131, %132
  %134 = or i1 %124, %125
  %135 = xor i1 %134, true
  %136 = or i1 true, %126
  %137 = and i1 %135, %136
  %138 = or i1 %133, %137
  %139 = or i1 %122, %123
  %140 = select i1 %138, i32 -46584026, i32 -1074722235
  store i32 %140, i32* %13
  br label %204

; <label>:141:                                    ; preds = %14
  %142 = load i64, i64* %9, align 8
  %143 = icmp ne i64 %142, 0
  store i1 %143, i1* %5
  %144 = load i32, i32* @x.745
  %145 = load i32, i32* @y.746
  %146 = sub i32 0, 1
  %147 = add i32 %144, %146
  %148 = sub i32 %144, 1
  %149 = mul i32 %144, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %145, 10
  %153 = and i1 %151, %152
  %154 = xor i1 %151, %152
  %155 = or i1 %153, %154
  %156 = or i1 %151, %152
  %157 = select i1 %155, i32 126654755, i32 -1074722235
  store i32 %157, i32* %13
  br label %204

; <label>:158:                                    ; preds = %14
  %159 = load volatile i1, i1* %5
  %160 = select i1 %159, i32 -1642347275, i32 640742218
  store i32 %160, i32* %13
  br label %204

; <label>:161:                                    ; preds = %14
  %162 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #11
  store i64 %162, i64* %9, align 8
  %163 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 3
  %164 = load i32**, i32*** %163, align 8
  %165 = getelementptr inbounds i32*, i32** %164, i64 -1
  %166 = load i32*, i32** %165, align 8
  %167 = load i64, i64* %9, align 8
  %168 = getelementptr inbounds i32, i32* %166, i64 %167
  store i32* %168, i32** %10, align 8
  store i32 -1642347275, i32* %13
  br label %204

; <label>:169:                                    ; preds = %14
  %170 = call dereferenceable(8) i64* @_ZSt3minIlERKT_S2_S2_(i64* dereferenceable(8) %7, i64* dereferenceable(8) %9)
  %171 = call dereferenceable(8) i64* @_ZSt3minIlERKT_S2_S2_(i64* dereferenceable(8) %6, i64* dereferenceable(8) %170)
  %172 = load i64, i64* %171, align 8
  store i64 %172, i64* %11, align 8
  %173 = load i32*, i32** %8, align 8
  %174 = load i64, i64* %11, align 8
  %175 = sub i64 0, %174
  %176 = add i64 0, %175
  %177 = sub i64 0, %174
  %178 = getelementptr inbounds i32, i32* %173, i64 %176
  %179 = load i32*, i32** %8, align 8
  %180 = load i32*, i32** %10, align 8
  %181 = call i32* @_ZSt13move_backwardIPiS0_ET0_T_S2_S1_(i32* %178, i32* %179, i32* %180)
  %182 = load i64, i64* %11, align 8
  %183 = call dereferenceable(32) %"struct.std::_Deque_iterator.21"* @_ZNSt15_Deque_iteratorIiRKiPS0_EmIEl(%"struct.std::_Deque_iterator.21"* %2, i64 %182) #11
  %184 = load i64, i64* %11, align 8
  %185 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorIiRiPiEmIEl(%"struct.std::_Deque_iterator"* %3, i64 %184) #11
  %186 = load i64, i64* %11, align 8
  %187 = load i64, i64* %6, align 8
  %188 = add i64 %187, -855361238554393478
  %189 = sub i64 %188, %186
  %190 = sub i64 %189, -855361238554393478
  %191 = sub nsw i64 %187, %186
  store i64 %190, i64* %6, align 8
  store i32 -556948684, i32* %13
  br label %204

; <label>:192:                                    ; preds = %14
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #11
  ret void

; <label>:193:                                    ; preds = %14
  %194 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #11
  store i64 %194, i64* %7, align 8
  %195 = getelementptr inbounds %"struct.std::_Deque_iterator.21", %"struct.std::_Deque_iterator.21"* %2, i32 0, i32 3
  %196 = load i32**, i32*** %195, align 8
  %197 = getelementptr inbounds i32*, i32** %196, i64 -1
  %198 = load i32*, i32** %197, align 8
  %199 = load i64, i64* %7, align 8
  %200 = getelementptr inbounds i32, i32* %198, i64 %199
  store i32* %200, i32** %8, align 8
  store i32 -208397600, i32* %13
  br label %204

; <label>:201:                                    ; preds = %14
  %202 = load i64, i64* %9, align 8
  %203 = icmp ne i64 %202, 0
  store i32 -46584026, i32* %13
  br label %204

; <label>:204:                                    ; preds = %201, %193, %169, %161, %158, %141, %113, %112, %78, %51, %21, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt13move_backwardIPiS0_ET0_T_S2_S1_(i32*, i32*, i32*) #2 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.747
  %8 = load i32, i32* @y.748
  %9 = sub i32 %7, 1628416770
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 1628416770
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1542764149, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %77
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1542764149, label %21
    i32 429185899, label %29
    i32 276346895, label %65
    i32 612139238, label %67
  ]

; <label>:20:                                     ; preds = %18
  br label %77

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 429185899, i32 612139238
  store i32 %28, i32* %17
  br label %77

; <label>:29:                                     ; preds = %18
  %30 = alloca i32*, align 8
  %31 = alloca i32*, align 8
  %32 = alloca i32*, align 8
  store i32* %0, i32** %30, align 8
  store i32* %1, i32** %31, align 8
  store i32* %2, i32** %32, align 8
  %33 = load i32*, i32** %30, align 8
  %34 = call i32* @_ZSt12__miter_baseIPiENSt11_Miter_baseIT_E13iterator_typeES2_(i32* %33)
  %35 = load i32*, i32** %31, align 8
  %36 = call i32* @_ZSt12__miter_baseIPiENSt11_Miter_baseIT_E13iterator_typeES2_(i32* %35)
  %37 = load i32*, i32** %32, align 8
  %38 = call i32* @_ZSt23__copy_move_backward_a2ILb1EPiS0_ET1_T0_S2_S1_(i32* %34, i32* %36, i32* %37)
  store i32* %38, i32** %4
  %39 = load i32, i32* @x.747
  %40 = load i32, i32* @y.748
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 276346895, i32 612139238
  store i32 %64, i32* %17
  br label %77

; <label>:65:                                     ; preds = %18
  %66 = load volatile i32*, i32** %4
  ret i32* %66

; <label>:67:                                     ; preds = %18
  %68 = alloca i32*, align 8
  %69 = alloca i32*, align 8
  %70 = alloca i32*, align 8
  store i32* %0, i32** %68, align 8
  store i32* %1, i32** %69, align 8
  store i32* %2, i32** %70, align 8
  %71 = load i32*, i32** %68, align 8
  %72 = call i32* @_ZSt12__miter_baseIPiENSt11_Miter_baseIT_E13iterator_typeES2_(i32* %71)
  %73 = load i32*, i32** %69, align 8
  %74 = call i32* @_ZSt12__miter_baseIPiENSt11_Miter_baseIT_E13iterator_typeES2_(i32* %73)
  %75 = load i32*, i32** %70, align 8
  %76 = call i32* @_ZSt23__copy_move_backward_a2ILb1EPiS0_ET1_T0_S2_S1_(i32* %72, i32* %74, i32* %75)
  store i32 429185899, i32* %17
  br label %77

; <label>:77:                                     ; preds = %67, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator.21"* @_ZNSt15_Deque_iteratorIiRKiPS0_EmIEl(%"struct.std::_Deque_iterator.21"*, i64) #1 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator.21"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Deque_iterator.21"* %0, %"struct.std::_Deque_iterator.21"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Deque_iterator.21"*, %"struct.std::_Deque_iterator.21"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = add i64 0, -4336204500227925978
  %8 = sub i64 %7, %6
  %9 = sub i64 %8, -4336204500227925978
  %10 = sub nsw i64 0, %6
  %11 = call dereferenceable(32) %"struct.std::_Deque_iterator.21"* @_ZNSt15_Deque_iteratorIiRKiPS0_EpLEl(%"struct.std::_Deque_iterator.21"* %5, i64 %9) #11
  ret %"struct.std::_Deque_iterator.21"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt23__copy_move_backward_a2ILb1EPiS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #2 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %7)
  %9 = load i32*, i32** %5, align 8
  %10 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %9)
  %11 = load i32*, i32** %6, align 8
  %12 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %11)
  %13 = call i32* @_ZSt22__copy_move_backward_aILb1EPiS0_ET1_T0_S2_S1_(i32* %8, i32* %10, i32* %12)
  ret i32* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__copy_move_backward_aILb1EPiS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #2 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIiEEPT_PKS3_S6_S4_(i32* %8, i32* %9, i32* %10)
  ret i32* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIiEEPT_PKS3_S6_S4_(i32*, i32*, i32*) #1 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca i64
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i64, align 8
  store i32* %0, i32** %6, align 8
  store i32* %1, i32** %7, align 8
  store i32* %2, i32** %8, align 8
  %10 = load i32*, i32** %7, align 8
  %11 = load i32*, i32** %6, align 8
  %12 = ptrtoint i32* %10 to i64
  %13 = ptrtoint i32* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 4
  store i64 %17, i64* %9, align 8
  %18 = load i64, i64* %9, align 8
  store i64 %18, i64* %5
  %19 = alloca i32
  store i32 -1885735333, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %213
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1885735333, label %23
    i32 2093373514, label %27
    i32 995263393, label %55
    i32 -2091942011, label %94
    i32 1863919266, label %95
    i32 109389673, label %122
    i32 -422414329, label %145
    i32 283628699, label %147
    i32 -87119023, label %175
  ]

; <label>:22:                                     ; preds = %20
  br label %213

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %5
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 2093373514, i32 1863919266
  store i32 %26, i32* %19
  br label %213

; <label>:27:                                     ; preds = %20
  %28 = load i32, i32* @x.755
  %29 = load i32, i32* @y.756
  %30 = add i32 %28, -2076031959
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, -2076031959
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 995263393, i32 283628699
  store i32 %54, i32* %19
  br label %213

; <label>:55:                                     ; preds = %20
  %56 = load i32*, i32** %8, align 8
  %57 = load i64, i64* %9, align 8
  %58 = sub i64 0, %57
  %59 = add i64 0, %58
  %60 = sub i64 0, %57
  %61 = getelementptr inbounds i32, i32* %56, i64 %59
  %62 = bitcast i32* %61 to i8*
  %63 = load i32*, i32** %6, align 8
  %64 = bitcast i32* %63 to i8*
  %65 = load i64, i64* %9, align 8
  %66 = mul i64 4, %65
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %62, i8* %64, i64 %66, i32 4, i1 false)
  %67 = load i32, i32* @x.755
  %68 = load i32, i32* @y.756
  %69 = sub i32 %67, -134097809
  %70 = sub i32 %69, 1
  %71 = add i32 %70, -134097809
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 false, true
  %80 = and i1 %77, false
  %81 = and i1 %75, %79
  %82 = and i1 %78, false
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 false, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  %93 = select i1 %91, i32 -2091942011, i32 283628699
  store i32 %93, i32* %19
  br label %213

; <label>:94:                                     ; preds = %20
  store i32 1863919266, i32* %19
  br label %213

; <label>:95:                                     ; preds = %20
  %96 = load i32, i32* @x.755
  %97 = load i32, i32* @y.756
  %98 = sub i32 0, 1
  %99 = add i32 %96, %98
  %100 = sub i32 %96, 1
  %101 = mul i32 %96, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %97, 10
  %105 = xor i1 %103, true
  %106 = xor i1 %104, true
  %107 = xor i1 false, true
  %108 = and i1 %105, false
  %109 = and i1 %103, %107
  %110 = and i1 %106, false
  %111 = and i1 %104, %107
  %112 = or i1 %108, %109
  %113 = or i1 %110, %111
  %114 = xor i1 %112, %113
  %115 = or i1 %105, %106
  %116 = xor i1 %115, true
  %117 = or i1 false, %107
  %118 = and i1 %116, %117
  %119 = or i1 %114, %118
  %120 = or i1 %103, %104
  %121 = select i1 %119, i32 109389673, i32 -87119023
  store i32 %121, i32* %19
  br label %213

; <label>:122:                                    ; preds = %20
  %123 = load i32*, i32** %8, align 8
  %124 = load i64, i64* %9, align 8
  %125 = sub i64 0, 4172981953186509580
  %126 = sub i64 %125, %124
  %127 = add i64 %126, 4172981953186509580
  %128 = sub i64 0, %124
  %129 = getelementptr inbounds i32, i32* %123, i64 %127
  store i32* %129, i32** %4
  %130 = load i32, i32* @x.755
  %131 = load i32, i32* @y.756
  %132 = add i32 %130, -1766818408
  %133 = sub i32 %132, 1
  %134 = sub i32 %133, -1766818408
  %135 = sub i32 %130, 1
  %136 = mul i32 %130, %134
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %131, 10
  %140 = and i1 %138, %139
  %141 = xor i1 %138, %139
  %142 = or i1 %140, %141
  %143 = or i1 %138, %139
  %144 = select i1 %142, i32 -422414329, i32 -87119023
  store i32 %144, i32* %19
  br label %213

; <label>:145:                                    ; preds = %20
  %146 = load volatile i32*, i32** %4
  ret i32* %146

; <label>:147:                                    ; preds = %20
  %148 = load i32*, i32** %8, align 8
  %149 = load i64, i64* %9, align 8
  %150 = sub i64 0, 4473830442655098523
  %151 = sub i64 %150, %149
  %152 = add i64 %151, 4473830442655098523
  %153 = sub i64 0, %149
  %154 = getelementptr inbounds i32, i32* %148, i64 %152
  %155 = bitcast i32* %154 to i8*
  %156 = load i32*, i32** %6, align 8
  %157 = bitcast i32* %156 to i8*
  %158 = load i64, i64* %9, align 8
  %159 = shl i64 4, %158
  %160 = add i64 0, 5147540627401747859
  %161 = sub i64 %160, 4
  %162 = sub i64 %161, 5147540627401747859
  %163 = sub i64 0, 4
  %164 = sub i64 %162, -2378170050568609458
  %165 = add i64 %164, %158
  %166 = add i64 %165, -2378170050568609458
  %167 = add i64 %162, %158
  %168 = shl i64 4, %158
  %169 = sub i64 0, %158
  %170 = add i64 4, %169
  %171 = sub i64 4, %158
  %172 = mul i64 %170, %158
  %173 = shl i64 4, %158
  %174 = mul i64 4, %158
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %155, i8* %157, i64 %174, i32 4, i1 false)
  store i32 995263393, i32* %19
  br label %213

; <label>:175:                                    ; preds = %20
  %176 = load i32*, i32** %8, align 8
  %177 = load i64, i64* %9, align 8
  %178 = sub i64 0, 3793122854671961661
  %179 = sub i64 %178, 0
  %180 = add i64 %179, 3793122854671961661
  %181 = sub i64 0, 0
  %182 = add i64 %180, -7339365810724818261
  %183 = add i64 %182, %177
  %184 = sub i64 %183, -7339365810724818261
  %185 = add i64 %180, %177
  %186 = add i64 0, 6166601418026894148
  %187 = sub i64 %186, 0
  %188 = sub i64 %187, 6166601418026894148
  %189 = sub i64 0, 0
  %190 = sub i64 0, %188
  %191 = sub i64 0, %177
  %192 = add i64 %190, %191
  %193 = sub i64 0, %192
  %194 = add i64 %188, %177
  %195 = shl i64 0, %177
  %196 = sub i64 0, 8560152439716609863
  %197 = sub i64 %196, %177
  %198 = add i64 %197, 8560152439716609863
  %199 = sub i64 0, %177
  %200 = mul i64 %198, %177
  %201 = shl i64 0, %177
  %202 = sub i64 0, 931588524028376787
  %203 = sub i64 %202, %177
  %204 = add i64 %203, 931588524028376787
  %205 = sub i64 0, %177
  %206 = mul i64 %204, %177
  %207 = shl i64 0, %177
  %208 = add i64 0, 3526137383906111188
  %209 = sub i64 %208, %177
  %210 = sub i64 %209, 3526137383906111188
  %211 = sub i64 0, %177
  %212 = getelementptr inbounds i32, i32* %176, i64 %210
  store i32 109389673, i32* %19
  br label %213

; <label>:213:                                    ; preds = %175, %147, %122, %95, %94, %55, %27, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiEC2ES1_PS1_(%"struct.std::_Deque_iterator"*, i32*, i32**) unnamed_addr #1 comdat align 2 {
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32**, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %7, i32 0, i32 0
  %9 = load i32*, i32** %5, align 8
  store i32* %9, i32** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %7, i32 0, i32 1
  %11 = load i32**, i32*** %6, align 8
  %12 = load i32*, i32** %11, align 8
  store i32* %12, i32** %10, align 8
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %7, i32 0, i32 2
  %14 = load i32**, i32*** %6, align 8
  %15 = load i32*, i32** %14, align 8
  %16 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #11
  %17 = getelementptr inbounds i32, i32* %15, i64 %16
  store i32* %17, i32** %13, align 8
  %18 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %7, i32 0, i32 3
  %19 = load i32**, i32*** %6, align 8
  store i32** %19, i32*** %18, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::stack"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt5stackIiSt5dequeIiSaIiEEESt6vectorIS6_SaIS6_EEEELb1EE7_S_baseESB_(%"class.std::stack"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %2, i32 0, i32 0
  store %"class.std::stack"* %0, %"class.std::stack"** %3, align 8
  %4 = call dereferenceable(8) %"class.std::stack"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt5stackIiSt5dequeIiSaIiEEESt6vectorIS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.20"* %2) #11
  %5 = load %"class.std::stack"*, %"class.std::stack"** %4, align 8
  ret %"class.std::stack"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::stack"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt5stackIiSt5dequeIiSaIiEEESt6vectorIS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.20"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.20"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.20"* %0, %"class.__gnu_cxx::__normal_iterator.20"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.20"*, %"class.__gnu_cxx::__normal_iterator.20"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %3, i32 0, i32 0
  ret %"class.std::stack"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPSt5stackIiSt5dequeIiSaIiEEESt6vectorIS5_SaIS5_EEEC2ERKS6_(%"class.__gnu_cxx::__normal_iterator.20"*, %"class.std::stack"** dereferenceable(8)) unnamed_addr #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.763
  %6 = load i32, i32* @y.764
  %7 = add i32 %5, 1045482154
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1045482154
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1389735185, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1389735185, label %19
    i32 666306133, label %27
    i32 -374618118, label %61
    i32 -1879655312, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 666306133, i32 -1879655312
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.20"*, align 8
  %29 = alloca %"class.std::stack"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.20"* %0, %"class.__gnu_cxx::__normal_iterator.20"** %28, align 8
  store %"class.std::stack"** %1, %"class.std::stack"*** %29, align 8
  %30 = load %"class.__gnu_cxx::__normal_iterator.20"*, %"class.__gnu_cxx::__normal_iterator.20"** %28, align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %30, i32 0, i32 0
  %32 = load %"class.std::stack"**, %"class.std::stack"*** %29, align 8
  %33 = load %"class.std::stack"*, %"class.std::stack"** %32, align 8
  store %"class.std::stack"* %33, %"class.std::stack"** %31, align 8
  %34 = load i32, i32* @x.763
  %35 = load i32, i32* @y.764
  %36 = sub i32 %34, -1964307223
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -1964307223
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -374618118, i32 -1879655312
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.__gnu_cxx::__normal_iterator.20"*, align 8
  %64 = alloca %"class.std::stack"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.20"* %0, %"class.__gnu_cxx::__normal_iterator.20"** %63, align 8
  store %"class.std::stack"** %1, %"class.std::stack"*** %64, align 8
  %65 = load %"class.__gnu_cxx::__normal_iterator.20"*, %"class.__gnu_cxx::__normal_iterator.20"** %63, align 8
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %65, i32 0, i32 0
  %67 = load %"class.std::stack"**, %"class.std::stack"*** %64, align 8
  %68 = load %"class.std::stack"*, %"class.std::stack"** %67, align 8
  store %"class.std::stack"* %68, %"class.std::stack"** %66, align 8
  store i32 666306133, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::stack"* @_ZSt20uninitialized_fill_nIPSt5stackIiSt5dequeIiSaIiEEEmS4_ET_S6_T0_RKT1_(%"class.std::stack"*, i64, %"class.std::stack"* dereferenceable(80)) #2 comdat {
  %4 = alloca %"class.std::stack"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::stack"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::stack"* %0, %"class.std::stack"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::stack"* %2, %"class.std::stack"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"class.std::stack"*, %"class.std::stack"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %"class.std::stack"*, %"class.std::stack"** %6, align 8
  %11 = call %"class.std::stack"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt5stackIiSt5dequeIiSaIiEEEmS6_EET_S8_T0_RKT1_(%"class.std::stack"* %8, i64 %9, %"class.std::stack"* dereferenceable(80) %10)
  ret %"class.std::stack"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::stack"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt5stackIiSt5dequeIiSaIiEEEmS6_EET_S8_T0_RKT1_(%"class.std::stack"*, i64, %"class.std::stack"* dereferenceable(80)) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::stack"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::stack"*, align 8
  %7 = alloca %"class.std::stack"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::stack"* %0, %"class.std::stack"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::stack"* %2, %"class.std::stack"** %6, align 8
  %10 = load %"class.std::stack"*, %"class.std::stack"** %4, align 8
  store %"class.std::stack"* %10, %"class.std::stack"** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %60, %3
  %12 = load i32, i32* @x.767
  %13 = load i32, i32* @y.768
  %14 = sub i32 %12, -2112844608
  %15 = sub i32 %14, 1
  %16 = add i32 %15, -2112844608
  %17 = sub i32 %12, 1
  %18 = mul i32 %12, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %13, 10
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  br i1 %24, label %26, label %165

; <label>:26:                                     ; preds = %11, %165
  %27 = load i64, i64* %5, align 8
  %28 = icmp ugt i64 %27, 0
  %29 = load i32, i32* @x.767
  %30 = load i32, i32* @y.768
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  br i1 %52, label %54, label %165

; <label>:54:                                     ; preds = %26
  br i1 %28, label %55, label %77

; <label>:55:                                     ; preds = %54
  %56 = load %"class.std::stack"*, %"class.std::stack"** %7, align 8
  %57 = call %"class.std::stack"* @_ZSt11__addressofISt5stackIiSt5dequeIiSaIiEEEEPT_RS5_(%"class.std::stack"* dereferenceable(80) %56) #11
  %58 = load %"class.std::stack"*, %"class.std::stack"** %6, align 8
  invoke void @_ZSt10_ConstructISt5stackIiSt5dequeIiSaIiEEEJRKS4_EEvPT_DpOT0_(%"class.std::stack"* %57, %"class.std::stack"* dereferenceable(80) %58)
          to label %59 unwind label %67

; <label>:59:                                     ; preds = %55
  br label %60

; <label>:60:                                     ; preds = %59
  %61 = load i64, i64* %5, align 8
  %62 = sub i64 0, -1
  %63 = sub i64 %61, %62
  %64 = add i64 %61, -1
  store i64 %63, i64* %5, align 8
  %65 = load %"class.std::stack"*, %"class.std::stack"** %7, align 8
  %66 = getelementptr inbounds %"class.std::stack", %"class.std::stack"* %65, i32 1
  store %"class.std::stack"* %66, %"class.std::stack"** %7, align 8
  br label %11

; <label>:67:                                     ; preds = %55
  %68 = landingpad { i8*, i32 }
          catch i8* null
  %69 = extractvalue { i8*, i32 } %68, 0
  store i8* %69, i8** %8, align 8
  %70 = extractvalue { i8*, i32 } %68, 1
  store i32 %70, i32* %9, align 4
  br label %71

; <label>:71:                                     ; preds = %67
  %72 = load i8*, i8** %8, align 8
  %73 = call i8* @__cxa_begin_catch(i8* %72) #11
  %74 = load %"class.std::stack"*, %"class.std::stack"** %4, align 8
  %75 = load %"class.std::stack"*, %"class.std::stack"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt5stackIiSt5dequeIiSaIiEEEEvT_S6_(%"class.std::stack"* %74, %"class.std::stack"* %75)
          to label %76 unwind label %121

; <label>:76:                                     ; preds = %71
  invoke void @__cxa_rethrow() #13
          to label %164 unwind label %121

; <label>:77:                                     ; preds = %54
  %78 = load i32, i32* @x.767
  %79 = load i32, i32* @y.768
  %80 = sub i32 %78, 1338316472
  %81 = sub i32 %80, 1
  %82 = add i32 %81, 1338316472
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = and i1 %86, %87
  %89 = xor i1 %86, %87
  %90 = or i1 %88, %89
  %91 = or i1 %86, %87
  br i1 %90, label %92, label %168

; <label>:92:                                     ; preds = %77, %168
  %93 = load %"class.std::stack"*, %"class.std::stack"** %7, align 8
  %94 = load i32, i32* @x.767
  %95 = load i32, i32* @y.768
  %96 = add i32 %94, 729287053
  %97 = sub i32 %96, 1
  %98 = sub i32 %97, 729287053
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = xor i1 %102, true
  %105 = xor i1 %103, true
  %106 = xor i1 true, true
  %107 = and i1 %104, true
  %108 = and i1 %102, %106
  %109 = and i1 %105, true
  %110 = and i1 %103, %106
  %111 = or i1 %107, %108
  %112 = or i1 %109, %110
  %113 = xor i1 %111, %112
  %114 = or i1 %104, %105
  %115 = xor i1 %114, true
  %116 = or i1 true, %106
  %117 = and i1 %115, %116
  %118 = or i1 %113, %117
  %119 = or i1 %102, %103
  br i1 %118, label %120, label %168

; <label>:120:                                    ; preds = %92
  ret %"class.std::stack"* %93

; <label>:121:                                    ; preds = %76, %71
  %122 = landingpad { i8*, i32 }
          cleanup
  %123 = extractvalue { i8*, i32 } %122, 0
  store i8* %123, i8** %8, align 8
  %124 = extractvalue { i8*, i32 } %122, 1
  store i32 %124, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %125 unwind label %161

; <label>:125:                                    ; preds = %121
  br label %156
                                                  ; No predecessors!
  %127 = load i32, i32* @x.767
  %128 = load i32, i32* @y.768
  %129 = add i32 %127, 170808316
  %130 = sub i32 %129, 1
  %131 = sub i32 %130, 170808316
  %132 = sub i32 %127, 1
  %133 = mul i32 %127, %131
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %128, 10
  %137 = and i1 %135, %136
  %138 = xor i1 %135, %136
  %139 = or i1 %137, %138
  %140 = or i1 %135, %136
  br i1 %139, label %141, label %170

; <label>:141:                                    ; preds = %126, %170
  call void @llvm.trap()
  %142 = load i32, i32* @x.767
  %143 = load i32, i32* @y.768
  %144 = sub i32 0, 1
  %145 = add i32 %142, %144
  %146 = sub i32 %142, 1
  %147 = mul i32 %142, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %143, 10
  %151 = and i1 %149, %150
  %152 = xor i1 %149, %150
  %153 = or i1 %151, %152
  %154 = or i1 %149, %150
  br i1 %153, label %155, label %170

; <label>:155:                                    ; preds = %141
  unreachable

; <label>:156:                                    ; preds = %125
  %157 = load i8*, i8** %8, align 8
  %158 = load i32, i32* %9, align 4
  %159 = insertvalue { i8*, i32 } undef, i8* %157, 0
  %160 = insertvalue { i8*, i32 } %159, i32 %158, 1
  resume { i8*, i32 } %160

; <label>:161:                                    ; preds = %121
  %162 = landingpad { i8*, i32 }
          catch i8* null
  %163 = extractvalue { i8*, i32 } %162, 0
  call void @__clang_call_terminate(i8* %163) #9
  unreachable

; <label>:164:                                    ; preds = %76
  unreachable

; <label>:165:                                    ; preds = %26, %11
  %166 = load i64, i64* %5, align 8
  %167 = icmp ugt i64 %166, 0
  br label %26

; <label>:168:                                    ; preds = %92, %77
  %169 = load %"class.std::stack"*, %"class.std::stack"** %7, align 8
  br label %92

; <label>:170:                                    ; preds = %141, %126
  call void @llvm.trap()
  br label %141
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt5stackIiSt5dequeIiSaIiEEEJRKS4_EEvPT_DpOT0_(%"class.std::stack"*, %"class.std::stack"* dereferenceable(80)) #2 comdat {
  %3 = alloca %"class.std::stack"*, align 8
  %4 = alloca %"class.std::stack"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %3, align 8
  store %"class.std::stack"* %1, %"class.std::stack"** %4, align 8
  %5 = load %"class.std::stack"*, %"class.std::stack"** %3, align 8
  %6 = bitcast %"class.std::stack"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::stack"*
  %8 = load %"class.std::stack"*, %"class.std::stack"** %4, align 8
  %9 = call dereferenceable(80) %"class.std::stack"* @_ZSt7forwardIRKSt5stackIiSt5dequeIiSaIiEEEEOT_RNSt16remove_referenceIS7_E4typeE(%"class.std::stack"* dereferenceable(80) %8) #11
  call void @_ZNSt5stackIiSt5dequeIiSaIiEEEC2ERKS3_(%"class.std::stack"* %7, %"class.std::stack"* dereferenceable(80) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::stack"* @_ZSt7forwardIRKSt5stackIiSt5dequeIiSaIiEEEEOT_RNSt16remove_referenceIS7_E4typeE(%"class.std::stack"* dereferenceable(80)) #1 comdat {
  %2 = alloca %"class.std::stack"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.771
  %6 = load i32, i32* @y.772
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -215692169, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -215692169, label %18
    i32 1096137852, label %38
    i32 195308217, label %56
    i32 -589430007, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1096137852, i32 -589430007
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::stack"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %39, align 8
  %40 = load %"class.std::stack"*, %"class.std::stack"** %39, align 8
  store %"class.std::stack"* %40, %"class.std::stack"** %2
  %41 = load i32, i32* @x.771
  %42 = load i32, i32* @y.772
  %43 = add i32 %41, -1487761384
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -1487761384
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 195308217, i32 -589430007
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  %57 = load volatile %"class.std::stack"*, %"class.std::stack"** %2
  ret %"class.std::stack"* %57

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::stack"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %59, align 8
  %60 = load %"class.std::stack"*, %"class.std::stack"** %59, align 8
  store i32 1096137852, i32* %14
  br label %61

; <label>:61:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5stackIiSt5dequeIiSaIiEEEC2ERKS3_(%"class.std::stack"*, %"class.std::stack"* dereferenceable(80)) unnamed_addr #2 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.773
  %6 = load i32, i32* @y.774
  %7 = add i32 %5, 1090196386
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1090196386
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 25417280, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %57
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 25417280, label %19
    i32 -1320547826, label %27
    i32 -139466979, label %49
    i32 388519205, label %50
  ]

; <label>:18:                                     ; preds = %16
  br label %57

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1320547826, i32 388519205
  store i32 %26, i32* %15
  br label %57

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::stack"*, align 8
  %29 = alloca %"class.std::stack"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %28, align 8
  store %"class.std::stack"* %1, %"class.std::stack"** %29, align 8
  %30 = load %"class.std::stack"*, %"class.std::stack"** %28, align 8
  %31 = getelementptr inbounds %"class.std::stack", %"class.std::stack"* %30, i32 0, i32 0
  %32 = load %"class.std::stack"*, %"class.std::stack"** %29, align 8
  %33 = getelementptr inbounds %"class.std::stack", %"class.std::stack"* %32, i32 0, i32 0
  call void @_ZNSt5dequeIiSaIiEEC2ERKS1_(%"class.std::deque"* %31, %"class.std::deque"* dereferenceable(80) %33)
  %34 = load i32, i32* @x.773
  %35 = load i32, i32* @y.774
  %36 = add i32 %34, -883395432
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, -883395432
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -139466979, i32 388519205
  store i32 %48, i32* %15
  br label %57

; <label>:49:                                     ; preds = %16
  ret void

; <label>:50:                                     ; preds = %16
  %51 = alloca %"class.std::stack"*, align 8
  %52 = alloca %"class.std::stack"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %51, align 8
  store %"class.std::stack"* %1, %"class.std::stack"** %52, align 8
  %53 = load %"class.std::stack"*, %"class.std::stack"** %51, align 8
  %54 = getelementptr inbounds %"class.std::stack", %"class.std::stack"* %53, i32 0, i32 0
  %55 = load %"class.std::stack"*, %"class.std::stack"** %52, align 8
  %56 = getelementptr inbounds %"class.std::stack", %"class.std::stack"* %55, i32 0, i32 0
  call void @_ZNSt5dequeIiSaIiEEC2ERKS1_(%"class.std::deque"* %54, %"class.std::deque"* dereferenceable(80) %56)
  store i32 -1320547826, i32* %15
  br label %57

; <label>:57:                                     ; preds = %50, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEEC2ERKS1_(%"class.std::deque"*, %"class.std::deque"* dereferenceable(80)) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.775
  %4 = load i32, i32* @y.776
  %5 = add i32 %3, -199942062
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, -199942062
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %124

; <label>:29:                                     ; preds = %2, %124
  %30 = alloca %"class.std::deque"*, align 8
  %31 = alloca %"class.std::deque"*, align 8
  %32 = alloca %"class.std::allocator.0", align 1
  %33 = alloca i8*
  %34 = alloca i32
  %35 = alloca %"struct.std::_Deque_iterator.21", align 8
  %36 = alloca %"struct.std::_Deque_iterator.21", align 8
  %37 = alloca %"struct.std::_Deque_iterator", align 8
  %38 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %30, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %31, align 8
  %39 = load %"class.std::deque"*, %"class.std::deque"** %30, align 8
  %40 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %41 = load %"class.std::deque"*, %"class.std::deque"** %31, align 8
  %42 = bitcast %"class.std::deque"* %41 to %"class.std::_Deque_base"*
  %43 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %42) #11
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_(%"class.std::allocator.0"* sret %32, %"class.std::allocator.0"* dereferenceable(1) %43)
  %44 = load %"class.std::deque"*, %"class.std::deque"** %31, align 8
  %45 = call i64 @_ZNKSt5dequeIiSaIiEE4sizeEv(%"class.std::deque"* %44) #11
  %46 = load i32, i32* @x.775
  %47 = load i32, i32* @y.776
  %48 = add i32 %46, 991059829
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, 991059829
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  br i1 %58, label %60, label %124

; <label>:60:                                     ; preds = %29
  invoke void @_ZNSt11_Deque_baseIiSaIiEEC2ERKS0_m(%"class.std::_Deque_base"* %40, %"class.std::allocator.0"* dereferenceable(1) %32, i64 %45)
          to label %61 unwind label %110

; <label>:61:                                     ; preds = %60
  call void @_ZNSaIiED2Ev(%"class.std::allocator.0"* %32) #11
  %62 = load %"class.std::deque"*, %"class.std::deque"** %31, align 8
  call void @_ZNKSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator.21"* sret %35, %"class.std::deque"* %62) #11
  %63 = load %"class.std::deque"*, %"class.std::deque"** %31, align 8
  call void @_ZNKSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator.21"* sret %36, %"class.std::deque"* %63) #11
  %64 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %65 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %64, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %65, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %37, %"struct.std::_Deque_iterator"* dereferenceable(32) %66) #11
  %67 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %68 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %67) #11
  invoke void @_ZSt22__uninitialized_copy_aISt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEiET0_T_S9_S8_RSaIT1_E(%"struct.std::_Deque_iterator"* sret %38, %"struct.std::_Deque_iterator.21"* byval align 8 %35, %"struct.std::_Deque_iterator.21"* byval align 8 %36, %"struct.std::_Deque_iterator"* %37, %"class.std::allocator.0"* dereferenceable(1) %68)
          to label %69 unwind label %114

; <label>:69:                                     ; preds = %61
  %70 = load i32, i32* @x.775
  %71 = load i32, i32* @y.776
  %72 = sub i32 0, 1
  %73 = add i32 %70, %72
  %74 = sub i32 %70, 1
  %75 = mul i32 %70, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %71, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  br i1 %81, label %83, label %141

; <label>:83:                                     ; preds = %69, %141
  %84 = load i32, i32* @x.775
  %85 = load i32, i32* @y.776
  %86 = sub i32 0, 1
  %87 = add i32 %84, %86
  %88 = sub i32 %84, 1
  %89 = mul i32 %84, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %85, 10
  %93 = xor i1 %91, true
  %94 = xor i1 %92, true
  %95 = xor i1 false, true
  %96 = and i1 %93, false
  %97 = and i1 %91, %95
  %98 = and i1 %94, false
  %99 = and i1 %92, %95
  %100 = or i1 %96, %97
  %101 = or i1 %98, %99
  %102 = xor i1 %100, %101
  %103 = or i1 %93, %94
  %104 = xor i1 %103, true
  %105 = or i1 false, %95
  %106 = and i1 %104, %105
  %107 = or i1 %102, %106
  %108 = or i1 %91, %92
  br i1 %107, label %109, label %141

; <label>:109:                                    ; preds = %83
  ret void

; <label>:110:                                    ; preds = %60
  %111 = landingpad { i8*, i32 }
          cleanup
  %112 = extractvalue { i8*, i32 } %111, 0
  store i8* %112, i8** %33, align 8
  %113 = extractvalue { i8*, i32 } %111, 1
  store i32 %113, i32* %34, align 4
  call void @_ZNSaIiED2Ev(%"class.std::allocator.0"* %32) #11
  br label %119

; <label>:114:                                    ; preds = %61
  %115 = landingpad { i8*, i32 }
          cleanup
  %116 = extractvalue { i8*, i32 } %115, 0
  store i8* %116, i8** %33, align 8
  %117 = extractvalue { i8*, i32 } %115, 1
  store i32 %117, i32* %34, align 4
  %118 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %118) #11
  br label %119

; <label>:119:                                    ; preds = %114, %110
  %120 = load i8*, i8** %33, align 8
  %121 = load i32, i32* %34, align 4
  %122 = insertvalue { i8*, i32 } undef, i8* %120, 0
  %123 = insertvalue { i8*, i32 } %122, i32 %121, 1
  resume { i8*, i32 } %123

; <label>:124:                                    ; preds = %29, %2
  %125 = alloca %"class.std::deque"*, align 8
  %126 = alloca %"class.std::deque"*, align 8
  %127 = alloca %"class.std::allocator.0", align 1
  %128 = alloca i8*
  %129 = alloca i32
  %130 = alloca %"struct.std::_Deque_iterator.21", align 8
  %131 = alloca %"struct.std::_Deque_iterator.21", align 8
  %132 = alloca %"struct.std::_Deque_iterator", align 8
  %133 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %125, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %126, align 8
  %134 = load %"class.std::deque"*, %"class.std::deque"** %125, align 8
  %135 = bitcast %"class.std::deque"* %134 to %"class.std::_Deque_base"*
  %136 = load %"class.std::deque"*, %"class.std::deque"** %126, align 8
  %137 = bitcast %"class.std::deque"* %136 to %"class.std::_Deque_base"*
  %138 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %137) #11
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_(%"class.std::allocator.0"* sret %127, %"class.std::allocator.0"* dereferenceable(1) %138)
  %139 = load %"class.std::deque"*, %"class.std::deque"** %126, align 8
  %140 = call i64 @_ZNKSt5dequeIiSaIiEE4sizeEv(%"class.std::deque"* %139) #11
  br label %29

; <label>:141:                                    ; preds = %83, %69
  br label %83
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2ERKS0_m(%"class.std::_Deque_base"*, %"class.std::allocator.0"* dereferenceable(1), i64) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %"class.std::allocator.0"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %5, align 8
  store i64 %2, i64* %6, align 8
  %9 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %10 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %5, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2ERKS0_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %10, %"class.std::allocator.0"* dereferenceable(1) %11) #11
  %12 = load i64, i64* %6, align 8
  invoke void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %10) #11
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i32, i32* @x.777
  %20 = load i32, i32* @y.778
  %21 = add i32 %19, 1630760459
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, 1630760459
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 true, true
  %32 = and i1 %29, true
  %33 = and i1 %27, %31
  %34 = and i1 %30, true
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 true, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  br i1 %43, label %45, label %76

; <label>:45:                                     ; preds = %18, %76
  %46 = load i8*, i8** %7, align 8
  %47 = load i32, i32* %8, align 4
  %48 = insertvalue { i8*, i32 } undef, i8* %46, 0
  %49 = insertvalue { i8*, i32 } %48, i32 %47, 1
  %50 = load i32, i32* @x.777
  %51 = load i32, i32* @y.778
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  br i1 %73, label %75, label %76

; <label>:75:                                     ; preds = %45
  resume { i8*, i32 } %49

; <label>:76:                                     ; preds = %45, %18
  %77 = load i8*, i8** %7, align 8
  %78 = load i32, i32* %8, align 4
  %79 = insertvalue { i8*, i32 } undef, i8* %77, 0
  %80 = insertvalue { i8*, i32 } %79, i32 %78, 1
  br label %45
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2ERKS0_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.779
  %6 = load i32, i32* @y.780
  %7 = add i32 %5, 657988124
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 657988124
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1966397455, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %87
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1966397455, label %19
    i32 -960847632, label %39
    i32 1798029302, label %76
    i32 941414491, label %77
  ]

; <label>:18:                                     ; preds = %16
  br label %87

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -960847632, i32 941414491
  store i32 %38, i32* %15
  br label %87

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %41 = alloca %"class.std::allocator.0"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %40, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %41, align 8
  %42 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %40, align 8
  %43 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %42 to %"class.std::allocator.0"*
  %44 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %41, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.0"* %43, %"class.std::allocator.0"* dereferenceable(1) %44) #11
  %45 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %42, i32 0, i32 0
  store i32** null, i32*** %45, align 8
  %46 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %42, i32 0, i32 1
  store i64 0, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %42, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %47) #11
  %48 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %42, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %48) #11
  %49 = load i32, i32* @x.779
  %50 = load i32, i32* @y.780
  %51 = sub i32 %49, 630777051
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 630777051
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 1798029302, i32 941414491
  store i32 %75, i32* %15
  br label %87

; <label>:76:                                     ; preds = %16
  ret void

; <label>:77:                                     ; preds = %16
  %78 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %79 = alloca %"class.std::allocator.0"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %78, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %79, align 8
  %80 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %78, align 8
  %81 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %80 to %"class.std::allocator.0"*
  %82 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %79, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.0"* %81, %"class.std::allocator.0"* dereferenceable(1) %82) #11
  %83 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %80, i32 0, i32 0
  store i32** null, i32*** %83, align 8
  %84 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %80, i32 0, i32 1
  store i64 0, i64* %84, align 8
  %85 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %80, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %85) #11
  %86 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %80, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %86) #11
  store i32 -960847632, i32* %15
  br label %87

; <label>:87:                                     ; preds = %77, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::stack"* @_ZSt10__fill_n_aIPSt5stackIiSt5dequeIiSaIiEEEmS4_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES9_T0_RKS8_(%"class.std::stack"*, i64, %"class.std::stack"* dereferenceable(80)) #2 comdat {
  %4 = alloca %"class.std::stack"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::stack"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::stack"* %2, %"class.std::stack"** %6, align 8
  %8 = load i64, i64* %5, align 8
  store i64 %8, i64* %7, align 8
  %9 = alloca i32
  store i32 -749732682, i32* %9
  br label %10

; <label>:10:                                     ; preds = %3, %66
  %11 = load i32, i32* %9
  switch i32 %11, label %12 [
    i32 -749732682, label %13
    i32 -1155238676, label %17
    i32 -1059913140, label %32
    i32 -234279253, label %51
    i32 -1956370990, label %52
    i32 -555481458, label %60
    i32 -446264063, label %62
  ]

; <label>:12:                                     ; preds = %10
  br label %66

; <label>:13:                                     ; preds = %10
  %14 = load i64, i64* %7, align 8
  %15 = icmp ugt i64 %14, 0
  %16 = select i1 %15, i32 -1155238676, i32 -555481458
  store i32 %16, i32* %9
  br label %66

; <label>:17:                                     ; preds = %10
  %18 = load i32, i32* @x.781
  %19 = load i32, i32* @y.782
  %20 = sub i32 0, 1
  %21 = add i32 %18, %20
  %22 = sub i32 %18, 1
  %23 = mul i32 %18, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %19, 10
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 -1059913140, i32 -446264063
  store i32 %31, i32* %9
  br label %66

; <label>:32:                                     ; preds = %10
  %33 = load %"class.std::stack"*, %"class.std::stack"** %6, align 8
  %34 = load %"class.std::stack"*, %"class.std::stack"** %4, align 8
  %35 = call dereferenceable(80) %"class.std::stack"* @_ZNSt5stackIiSt5dequeIiSaIiEEEaSERKS3_(%"class.std::stack"* %34, %"class.std::stack"* dereferenceable(80) %33)
  %36 = load i32, i32* @x.781
  %37 = load i32, i32* @y.782
  %38 = sub i32 %36, -1989222548
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -1989222548
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 -234279253, i32 -446264063
  store i32 %50, i32* %9
  br label %66

; <label>:51:                                     ; preds = %10
  store i32 -1956370990, i32* %9
  br label %66

; <label>:52:                                     ; preds = %10
  %53 = load i64, i64* %7, align 8
  %54 = sub i64 %53, -1751339260114892726
  %55 = add i64 %54, -1
  %56 = add i64 %55, -1751339260114892726
  %57 = add i64 %53, -1
  store i64 %56, i64* %7, align 8
  %58 = load %"class.std::stack"*, %"class.std::stack"** %4, align 8
  %59 = getelementptr inbounds %"class.std::stack", %"class.std::stack"* %58, i32 1
  store %"class.std::stack"* %59, %"class.std::stack"** %4, align 8
  store i32 -749732682, i32* %9
  br label %66

; <label>:60:                                     ; preds = %10
  %61 = load %"class.std::stack"*, %"class.std::stack"** %4, align 8
  ret %"class.std::stack"* %61

; <label>:62:                                     ; preds = %10
  %63 = load %"class.std::stack"*, %"class.std::stack"** %6, align 8
  %64 = load %"class.std::stack"*, %"class.std::stack"** %4, align 8
  %65 = call dereferenceable(80) %"class.std::stack"* @_ZNSt5stackIiSt5dequeIiSaIiEEEaSERKS3_(%"class.std::stack"* %64, %"class.std::stack"* dereferenceable(80) %63)
  store i32 -1059913140, i32* %9
  br label %66

; <label>:66:                                     ; preds = %62, %52, %51, %32, %17, %13, %12
  br label %10
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::stack"* @_ZSt12__niter_baseIPSt5stackIiSt5dequeIiSaIiEEEENSt11_Niter_baseIT_E13iterator_typeES7_(%"class.std::stack"*) #2 comdat {
  %2 = alloca %"class.std::stack"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %2, align 8
  %3 = load %"class.std::stack"*, %"class.std::stack"** %2, align 8
  %4 = call %"class.std::stack"* @_ZNSt10_Iter_baseIPSt5stackIiSt5dequeIiSaIiEEELb0EE7_S_baseES5_(%"class.std::stack"* %3)
  ret %"class.std::stack"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::stack"* @_ZNSt10_Iter_baseIPSt5stackIiSt5dequeIiSaIiEEELb0EE7_S_baseES5_(%"class.std::stack"*) #1 comdat align 2 {
  %2 = alloca %"class.std::stack"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %2, align 8
  %3 = load %"class.std::stack"*, %"class.std::stack"** %2, align 8
  ret %"class.std::stack"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE12emplace_backIJxEEEvDpOT_(%"class.std::vector.3"*, i64* dereferenceable(8)) #2 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i64*
  %5 = alloca %"class.std::vector.3"*
  %6 = alloca %"class.std::vector.3"*, align 8
  %7 = alloca i64*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %6, align 8
  store i64* %1, i64** %7, align 8
  %8 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  store %"class.std::vector.3"* %8, %"class.std::vector.3"** %5
  %9 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %10 = bitcast %"class.std::vector.3"* %9 to %"struct.std::_Vector_base.4"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  store i64* %13, i64** %4
  %14 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %15 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load i64*, i64** %17, align 8
  store i64* %18, i64** %3
  %19 = alloca i32
  store i32 -628024540, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %99
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -628024540, label %23
    i32 -1065193061, label %28
    i32 -1228306293, label %46
    i32 686799133, label %62
    i32 -752291047, label %93
    i32 -1596309834, label %94
    i32 -1231002242, label %95
  ]

; <label>:22:                                     ; preds = %20
  br label %99

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64*, i64** %4
  %25 = load volatile i64*, i64** %3
  %26 = icmp ne i64* %24, %25
  %27 = select i1 %26, i32 -1065193061, i32 -1228306293
  store i32 %27, i32* %19
  br label %99

; <label>:28:                                     ; preds = %20
  %29 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %30 = bitcast %"class.std::vector.3"* %29 to %"struct.std::_Vector_base.4"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %31 to %"class.std::allocator.5"*
  %33 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %34 = bitcast %"class.std::vector.3"* %33 to %"struct.std::_Vector_base.4"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load i64*, i64** %36, align 8
  %38 = load i64*, i64** %7, align 8
  %39 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %38) #11
  call void @_ZNSt16allocator_traitsISaIxEE9constructIxJxEEEvRS0_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1) %32, i64* %37, i64* dereferenceable(8) %39)
  %40 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %41 = bitcast %"class.std::vector.3"* %40 to %"struct.std::_Vector_base.4"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %42, i32 0, i32 1
  %44 = load i64*, i64** %43, align 8
  %45 = getelementptr inbounds i64, i64* %44, i32 1
  store i64* %45, i64** %43, align 8
  store i32 -1596309834, i32* %19
  br label %99

; <label>:46:                                     ; preds = %20
  %47 = load i32, i32* @x.787
  %48 = load i32, i32* @y.788
  %49 = add i32 %47, 1236239796
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, 1236239796
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 686799133, i32 -1231002242
  store i32 %61, i32* %19
  br label %99

; <label>:62:                                     ; preds = %20
  %63 = load i64*, i64** %7, align 8
  %64 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %63) #11
  %65 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  call void @_ZNSt6vectorIxSaIxEE19_M_emplace_back_auxIJxEEEvDpOT_(%"class.std::vector.3"* %65, i64* dereferenceable(8) %64)
  %66 = load i32, i32* @x.787
  %67 = load i32, i32* @y.788
  %68 = sub i32 %66, 874474208
  %69 = sub i32 %68, 1
  %70 = add i32 %69, 874474208
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 false, true
  %79 = and i1 %76, false
  %80 = and i1 %74, %78
  %81 = and i1 %77, false
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 false, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  %92 = select i1 %90, i32 -752291047, i32 -1231002242
  store i32 %92, i32* %19
  br label %99

; <label>:93:                                     ; preds = %20
  store i32 -1596309834, i32* %19
  br label %99

; <label>:94:                                     ; preds = %20
  ret void

; <label>:95:                                     ; preds = %20
  %96 = load i64*, i64** %7, align 8
  %97 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %96) #11
  %98 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  call void @_ZNSt6vectorIxSaIxEE19_M_emplace_back_auxIJxEEEvDpOT_(%"class.std::vector.3"* %98, i64* dereferenceable(8) %97)
  store i32 686799133, i32* %19
  br label %99

; <label>:99:                                     ; preds = %95, %93, %62, %46, %28, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8)) #1 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.789
  %6 = load i32, i32* @y.790
  %7 = sub i32 %5, 507786757
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 507786757
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2120229943, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2120229943, label %19
    i32 1086606265, label %27
    i32 1439479365, label %56
    i32 -654731084, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1086606265, i32 -654731084
  store i32 %26, i32* %15
  br label %61

; <label>:27:                                     ; preds = %16
  %28 = alloca i64*, align 8
  store i64* %0, i64** %28, align 8
  %29 = load i64*, i64** %28, align 8
  store i64* %29, i64** %2
  %30 = load i32, i32* @x.789
  %31 = load i32, i32* @y.790
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 1439479365, i32 -654731084
  store i32 %55, i32* %15
  br label %61

; <label>:56:                                     ; preds = %16
  %57 = load volatile i64*, i64** %2
  ret i64* %57

; <label>:58:                                     ; preds = %16
  %59 = alloca i64*, align 8
  store i64* %0, i64** %59, align 8
  %60 = load i64*, i64** %59, align 8
  store i32 1086606265, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE9constructIxJxEEEvRS0_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1), i64*, i64* dereferenceable(8)) #2 comdat align 2 {
  %4 = alloca %"class.std::allocator.5"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %4, align 8
  %8 = bitcast %"class.std::allocator.5"* %7 to %"class.__gnu_cxx::new_allocator.6"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %10) #11
  call void @_ZN9__gnu_cxx13new_allocatorIxE9constructIxJxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"* %8, i64* %9, i64* dereferenceable(8) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8)) #1 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE19_M_emplace_back_auxIJxEEEvDpOT_(%"class.std::vector.3"*, i64* dereferenceable(8)) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store i64* %1, i64** %4, align 8
  %10 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc(%"class.std::vector.3"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %13 = load i64, i64* %5, align 8
  %14 = call i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base.4"* %12, i64 %13)
  store i64* %14, i64** %6, align 8
  %15 = load i64*, i64** %6, align 8
  store i64* %15, i64** %7, align 8
  %16 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %17 to %"class.std::allocator.5"*
  %19 = load i64*, i64** %6, align 8
  %20 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.3"* %10) #11
  %21 = getelementptr inbounds i64, i64* %19, i64 %20
  %22 = load i64*, i64** %4, align 8
  %23 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %22) #11
  invoke void @_ZNSt16allocator_traitsISaIxEE9constructIxJxEEEvRS0_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1) %18, i64* %21, i64* dereferenceable(8) %23)
          to label %24 unwind label %69

; <label>:24:                                     ; preds = %2
  store i64* null, i64** %7, align 8
  %25 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %26, i32 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %30, i32 0, i32 1
  %32 = load i64*, i64** %31, align 8
  %33 = load i64*, i64** %6, align 8
  %34 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %35 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %34) #11
  %36 = invoke i64* @_ZSt34__uninitialized_move_if_noexcept_aIPxS0_SaIxEET0_T_S3_S2_RT1_(i64* %28, i64* %32, i64* %33, %"class.std::allocator.5"* dereferenceable(1) %35)
          to label %37 unwind label %69

; <label>:37:                                     ; preds = %24
  %38 = load i32, i32* @x.795
  %39 = load i32, i32* @y.796
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  br i1 %49, label %51, label %334

; <label>:51:                                     ; preds = %37, %334
  store i64* %36, i64** %7, align 8
  %52 = load i64*, i64** %7, align 8
  %53 = getelementptr inbounds i64, i64* %52, i32 1
  store i64* %53, i64** %7, align 8
  %54 = load i32, i32* @x.795
  %55 = load i32, i32* @y.796
  %56 = add i32 %54, 191589476
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, 191589476
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  br i1 %66, label %68, label %334

; <label>:68:                                     ; preds = %51
  br label %143

; <label>:69:                                     ; preds = %24, %2
  %70 = landingpad { i8*, i32 }
          catch i8* null
  %71 = extractvalue { i8*, i32 } %70, 0
  store i8* %71, i8** %8, align 8
  %72 = extractvalue { i8*, i32 } %70, 1
  store i32 %72, i32* %9, align 4
  br label %73

; <label>:73:                                     ; preds = %69
  %74 = load i8*, i8** %8, align 8
  %75 = call i8* @__cxa_begin_catch(i8* %74) #11
  %76 = load i64*, i64** %7, align 8
  %77 = icmp ne i64* %76, null
  br i1 %77, label %90, label %78

; <label>:78:                                     ; preds = %73
  %79 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %80 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %79, i32 0, i32 0
  %81 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %80 to %"class.std::allocator.5"*
  %82 = load i64*, i64** %6, align 8
  %83 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.3"* %10) #11
  %84 = getelementptr inbounds i64, i64* %82, i64 %83
  invoke void @_ZNSt16allocator_traitsISaIxEE7destroyIxEEvRS0_PT_(%"class.std::allocator.5"* dereferenceable(1) %81, i64* %84)
          to label %85 unwind label %86

; <label>:85:                                     ; preds = %78
  br label %96

; <label>:86:                                     ; preds = %100, %96, %90, %78
  %87 = landingpad { i8*, i32 }
          cleanup
  %88 = extractvalue { i8*, i32 } %87, 0
  store i8* %88, i8** %8, align 8
  %89 = extractvalue { i8*, i32 } %87, 1
  store i32 %89, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %101 unwind label %277

; <label>:90:                                     ; preds = %73
  %91 = load i64*, i64** %6, align 8
  %92 = load i64*, i64** %7, align 8
  %93 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %94 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %93) #11
  invoke void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %91, i64* %92, %"class.std::allocator.5"* dereferenceable(1) %94)
          to label %95 unwind label %86

; <label>:95:                                     ; preds = %90
  br label %96

; <label>:96:                                     ; preds = %95, %85
  %97 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %98 = load i64*, i64** %6, align 8
  %99 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.4"* %97, i64* %98, i64 %99)
          to label %100 unwind label %86

; <label>:100:                                    ; preds = %96
  invoke void @__cxa_rethrow() #13
          to label %333 unwind label %86

; <label>:101:                                    ; preds = %86
  %102 = load i32, i32* @x.795
  %103 = load i32, i32* @y.796
  %104 = add i32 %102, -1899589424
  %105 = sub i32 %104, 1
  %106 = sub i32 %105, -1899589424
  %107 = sub i32 %102, 1
  %108 = mul i32 %102, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %103, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 false, true
  %115 = and i1 %112, false
  %116 = and i1 %110, %114
  %117 = and i1 %113, false
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 false, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  br i1 %126, label %128, label %337

; <label>:128:                                    ; preds = %101, %337
  %129 = load i32, i32* @x.795
  %130 = load i32, i32* @y.796
  %131 = sub i32 0, 1
  %132 = add i32 %129, %131
  %133 = sub i32 %129, 1
  %134 = mul i32 %129, %132
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %130, 10
  %138 = and i1 %136, %137
  %139 = xor i1 %136, %137
  %140 = or i1 %138, %139
  %141 = or i1 %136, %137
  br i1 %140, label %142, label %337

; <label>:142:                                    ; preds = %128
  br label %230

; <label>:143:                                    ; preds = %68
  %144 = load i32, i32* @x.795
  %145 = load i32, i32* @y.796
  %146 = sub i32 %144, -160891444
  %147 = sub i32 %146, 1
  %148 = add i32 %147, -160891444
  %149 = sub i32 %144, 1
  %150 = mul i32 %144, %148
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %145, 10
  %154 = xor i1 %152, true
  %155 = xor i1 %153, true
  %156 = xor i1 false, true
  %157 = and i1 %154, false
  %158 = and i1 %152, %156
  %159 = and i1 %155, false
  %160 = and i1 %153, %156
  %161 = or i1 %157, %158
  %162 = or i1 %159, %160
  %163 = xor i1 %161, %162
  %164 = or i1 %154, %155
  %165 = xor i1 %164, true
  %166 = or i1 false, %156
  %167 = and i1 %165, %166
  %168 = or i1 %163, %167
  %169 = or i1 %152, %153
  br i1 %168, label %170, label %338

; <label>:170:                                    ; preds = %143, %338
  %171 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %172 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %171, i32 0, i32 0
  %173 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %172, i32 0, i32 0
  %174 = load i64*, i64** %173, align 8
  %175 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %176 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %175, i32 0, i32 0
  %177 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %176, i32 0, i32 1
  %178 = load i64*, i64** %177, align 8
  %179 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %180 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %179) #11
  call void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %174, i64* %178, %"class.std::allocator.5"* dereferenceable(1) %180)
  %181 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %182 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %183 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %182, i32 0, i32 0
  %184 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %183, i32 0, i32 0
  %185 = load i64*, i64** %184, align 8
  %186 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %187 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %186, i32 0, i32 0
  %188 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %187, i32 0, i32 2
  %189 = load i64*, i64** %188, align 8
  %190 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %191 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %190, i32 0, i32 0
  %192 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %191, i32 0, i32 0
  %193 = load i64*, i64** %192, align 8
  %194 = ptrtoint i64* %189 to i64
  %195 = ptrtoint i64* %193 to i64
  %196 = sub i64 %194, -9209193756927291821
  %197 = sub i64 %196, %195
  %198 = add i64 %197, -9209193756927291821
  %199 = sub i64 %194, %195
  %200 = sdiv exact i64 %198, 8
  call void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.4"* %181, i64* %185, i64 %200)
  %201 = load i64*, i64** %6, align 8
  %202 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %203 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %202, i32 0, i32 0
  %204 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %203, i32 0, i32 0
  store i64* %201, i64** %204, align 8
  %205 = load i64*, i64** %7, align 8
  %206 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %207 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %206, i32 0, i32 0
  %208 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %207, i32 0, i32 1
  store i64* %205, i64** %208, align 8
  %209 = load i64*, i64** %6, align 8
  %210 = load i64, i64* %5, align 8
  %211 = getelementptr inbounds i64, i64* %209, i64 %210
  %212 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %213 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %212, i32 0, i32 0
  %214 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %213, i32 0, i32 2
  store i64* %211, i64** %214, align 8
  %215 = load i32, i32* @x.795
  %216 = load i32, i32* @y.796
  %217 = add i32 %215, -1808630605
  %218 = sub i32 %217, 1
  %219 = sub i32 %218, -1808630605
  %220 = sub i32 %215, 1
  %221 = mul i32 %215, %219
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %216, 10
  %225 = and i1 %223, %224
  %226 = xor i1 %223, %224
  %227 = or i1 %225, %226
  %228 = or i1 %223, %224
  br i1 %227, label %229, label %338

; <label>:229:                                    ; preds = %170
  ret void

; <label>:230:                                    ; preds = %142
  %231 = load i32, i32* @x.795
  %232 = load i32, i32* @y.796
  %233 = sub i32 %231, -16535034
  %234 = sub i32 %233, 1
  %235 = add i32 %234, -16535034
  %236 = sub i32 %231, 1
  %237 = mul i32 %231, %235
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %232, 10
  %241 = xor i1 %239, true
  %242 = xor i1 %240, true
  %243 = xor i1 false, true
  %244 = and i1 %241, false
  %245 = and i1 %239, %243
  %246 = and i1 %242, false
  %247 = and i1 %240, %243
  %248 = or i1 %244, %245
  %249 = or i1 %246, %247
  %250 = xor i1 %248, %249
  %251 = or i1 %241, %242
  %252 = xor i1 %251, true
  %253 = or i1 false, %243
  %254 = and i1 %252, %253
  %255 = or i1 %250, %254
  %256 = or i1 %239, %240
  br i1 %255, label %257, label %414

; <label>:257:                                    ; preds = %230, %414
  %258 = load i8*, i8** %8, align 8
  %259 = load i32, i32* %9, align 4
  %260 = insertvalue { i8*, i32 } undef, i8* %258, 0
  %261 = insertvalue { i8*, i32 } %260, i32 %259, 1
  %262 = load i32, i32* @x.795
  %263 = load i32, i32* @y.796
  %264 = add i32 %262, 1448040358
  %265 = sub i32 %264, 1
  %266 = sub i32 %265, 1448040358
  %267 = sub i32 %262, 1
  %268 = mul i32 %262, %266
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %263, 10
  %272 = and i1 %270, %271
  %273 = xor i1 %270, %271
  %274 = or i1 %272, %273
  %275 = or i1 %270, %271
  br i1 %274, label %276, label %414

; <label>:276:                                    ; preds = %257
  resume { i8*, i32 } %261

; <label>:277:                                    ; preds = %86
  %278 = load i32, i32* @x.795
  %279 = load i32, i32* @y.796
  %280 = sub i32 0, 1
  %281 = add i32 %278, %280
  %282 = sub i32 %278, 1
  %283 = mul i32 %278, %281
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %279, 10
  %287 = xor i1 %285, true
  %288 = xor i1 %286, true
  %289 = xor i1 false, true
  %290 = and i1 %287, false
  %291 = and i1 %285, %289
  %292 = and i1 %288, false
  %293 = and i1 %286, %289
  %294 = or i1 %290, %291
  %295 = or i1 %292, %293
  %296 = xor i1 %294, %295
  %297 = or i1 %287, %288
  %298 = xor i1 %297, true
  %299 = or i1 false, %289
  %300 = and i1 %298, %299
  %301 = or i1 %296, %300
  %302 = or i1 %285, %286
  br i1 %301, label %303, label %419

; <label>:303:                                    ; preds = %277, %419
  %304 = landingpad { i8*, i32 }
          catch i8* null
  %305 = extractvalue { i8*, i32 } %304, 0
  call void @__clang_call_terminate(i8* %305) #9
  %306 = load i32, i32* @x.795
  %307 = load i32, i32* @y.796
  %308 = add i32 %306, -1308593124
  %309 = sub i32 %308, 1
  %310 = sub i32 %309, -1308593124
  %311 = sub i32 %306, 1
  %312 = mul i32 %306, %310
  %313 = urem i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %307, 10
  %316 = xor i1 %314, true
  %317 = xor i1 %315, true
  %318 = xor i1 true, true
  %319 = and i1 %316, true
  %320 = and i1 %314, %318
  %321 = and i1 %317, true
  %322 = and i1 %315, %318
  %323 = or i1 %319, %320
  %324 = or i1 %321, %322
  %325 = xor i1 %323, %324
  %326 = or i1 %316, %317
  %327 = xor i1 %326, true
  %328 = or i1 true, %318
  %329 = and i1 %327, %328
  %330 = or i1 %325, %329
  %331 = or i1 %314, %315
  br i1 %330, label %332, label %419

; <label>:332:                                    ; preds = %303
  unreachable

; <label>:333:                                    ; preds = %100
  unreachable

; <label>:334:                                    ; preds = %51, %37
  store i64* %36, i64** %7, align 8
  %335 = load i64*, i64** %7, align 8
  %336 = getelementptr inbounds i64, i64* %335, i32 1
  store i64* %336, i64** %7, align 8
  br label %51

; <label>:337:                                    ; preds = %128, %101
  br label %128

; <label>:338:                                    ; preds = %170, %143
  %339 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %340 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %339, i32 0, i32 0
  %341 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %340, i32 0, i32 0
  %342 = load i64*, i64** %341, align 8
  %343 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %344 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %343, i32 0, i32 0
  %345 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %344, i32 0, i32 1
  %346 = load i64*, i64** %345, align 8
  %347 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %348 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %347) #11
  call void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %342, i64* %346, %"class.std::allocator.5"* dereferenceable(1) %348)
  %349 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %350 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %351 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %350, i32 0, i32 0
  %352 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %351, i32 0, i32 0
  %353 = load i64*, i64** %352, align 8
  %354 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %355 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %354, i32 0, i32 0
  %356 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %355, i32 0, i32 2
  %357 = load i64*, i64** %356, align 8
  %358 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %359 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %358, i32 0, i32 0
  %360 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %359, i32 0, i32 0
  %361 = load i64*, i64** %360, align 8
  %362 = ptrtoint i64* %357 to i64
  %363 = ptrtoint i64* %361 to i64
  %364 = sub i64 0, %363
  %365 = add i64 %362, %364
  %366 = sub i64 %362, %363
  %367 = mul i64 %365, %363
  %368 = shl i64 %362, %363
  %369 = add i64 0, -3528203596232466372
  %370 = sub i64 %369, %362
  %371 = sub i64 %370, -3528203596232466372
  %372 = sub i64 0, %362
  %373 = sub i64 0, %371
  %374 = sub i64 0, %363
  %375 = add i64 %373, %374
  %376 = sub i64 0, %375
  %377 = add i64 %371, %363
  %378 = shl i64 %362, %363
  %379 = sub i64 0, -8765603039777302465
  %380 = sub i64 %379, %362
  %381 = add i64 %380, -8765603039777302465
  %382 = sub i64 0, %362
  %383 = add i64 %381, -1194014526298169046
  %384 = add i64 %383, %363
  %385 = sub i64 %384, -1194014526298169046
  %386 = add i64 %381, %363
  %387 = shl i64 %362, %363
  %388 = sub i64 %362, -8185672554876549701
  %389 = sub i64 %388, %363
  %390 = add i64 %389, -8185672554876549701
  %391 = sub i64 %362, %363
  %392 = sub i64 0, %390
  %393 = add i64 0, %392
  %394 = sub i64 0, %390
  %395 = add i64 %393, 6106645357724283595
  %396 = add i64 %395, 8
  %397 = sub i64 %396, 6106645357724283595
  %398 = add i64 %393, 8
  %399 = sdiv exact i64 %390, 8
  call void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.4"* %349, i64* %353, i64 %399)
  %400 = load i64*, i64** %6, align 8
  %401 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %402 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %401, i32 0, i32 0
  %403 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %402, i32 0, i32 0
  store i64* %400, i64** %403, align 8
  %404 = load i64*, i64** %7, align 8
  %405 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %406 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %405, i32 0, i32 0
  %407 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %406, i32 0, i32 1
  store i64* %404, i64** %407, align 8
  %408 = load i64*, i64** %6, align 8
  %409 = load i64, i64* %5, align 8
  %410 = getelementptr inbounds i64, i64* %408, i64 %409
  %411 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %412 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %411, i32 0, i32 0
  %413 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %412, i32 0, i32 2
  store i64* %410, i64** %413, align 8
  br label %170

; <label>:414:                                    ; preds = %257, %230
  %415 = load i8*, i8** %8, align 8
  %416 = load i32, i32* %9, align 4
  %417 = insertvalue { i8*, i32 } undef, i8* %415, 0
  %418 = insertvalue { i8*, i32 } %417, i32 %416, 1
  br label %257

; <label>:419:                                    ; preds = %303, %277
  %420 = landingpad { i8*, i32 }
          catch i8* null
  %421 = extractvalue { i8*, i32 } %420, 0
  call void @__clang_call_terminate(i8* %421) #9
  br label %303
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxE9constructIxJxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"*, i64*, i64* dereferenceable(8)) #1 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.797
  %7 = load i32, i32* @y.798
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 964299261, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %76
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 964299261, label %19
    i32 -1701396075, label %27
    i32 403216599, label %64
    i32 -175887765, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %76

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1701396075, i32 -175887765
  store i32 %26, i32* %15
  br label %76

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %29 = alloca i64*, align 8
  %30 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %28, align 8
  store i64* %1, i64** %29, align 8
  store i64* %2, i64** %30, align 8
  %31 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %28, align 8
  %32 = load i64*, i64** %29, align 8
  %33 = bitcast i64* %32 to i8*
  %34 = bitcast i8* %33 to i64*
  %35 = load i64*, i64** %30, align 8
  %36 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %35) #11
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %34, align 8
  %38 = load i32, i32* @x.797
  %39 = load i32, i32* @y.798
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 403216599, i32 -175887765
  store i32 %63, i32* %15
  br label %76

; <label>:64:                                     ; preds = %16
  ret void

; <label>:65:                                     ; preds = %16
  %66 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %67 = alloca i64*, align 8
  %68 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %66, align 8
  store i64* %1, i64** %67, align 8
  store i64* %2, i64** %68, align 8
  %69 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %66, align 8
  %70 = load i64*, i64** %67, align 8
  %71 = bitcast i64* %70 to i8*
  %72 = bitcast i8* %71 to i64*
  %73 = load i64*, i64** %68, align 8
  %74 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %73) #11
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %72, align 8
  store i32 -1701396075, i32* %15
  br label %76

; <label>:76:                                     ; preds = %65, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc(%"class.std::vector.3"*, i64, i8*) #2 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.std::vector.3"*
  %8 = alloca %"class.std::vector.3"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %8, align 8
  store i64 %1, i64* %9, align 8
  store i8* %2, i8** %10, align 8
  %13 = load %"class.std::vector.3"*, %"class.std::vector.3"** %8, align 8
  store %"class.std::vector.3"* %13, %"class.std::vector.3"** %7
  %14 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %15 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector.3"* %14) #11
  %16 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %17 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.3"* %16) #11
  %18 = sub i64 0, %17
  %19 = add i64 %15, %18
  %20 = sub i64 %15, %17
  store i64 %19, i64* %6
  %21 = load i64, i64* %9, align 8
  store i64 %21, i64* %5
  %22 = alloca i32
  store i32 962393954, i32* %22
  %23 = alloca i64
  br label %24

; <label>:24:                                     ; preds = %3, %137
  %25 = load i32, i32* %22
  switch i32 %25, label %26 [
    i32 962393954, label %27
    i32 -1396770359, label %32
    i32 231841308, label %34
    i32 1793826177, label %62
    i32 2093626659, label %92
    i32 -1529126765, label %95
    i32 -1681888338, label %101
    i32 399671020, label %104
    i32 -892641942, label %106
    i32 -713449408, label %108
  ]

; <label>:26:                                     ; preds = %24
  br label %137

; <label>:27:                                     ; preds = %24
  %28 = load volatile i64, i64* %6
  %29 = load volatile i64, i64* %5
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i32 -1396770359, i32 231841308
  store i32 %31, i32* %22
  br label %137

; <label>:32:                                     ; preds = %24
  %33 = load i8*, i8** %10, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %33) #13
  unreachable

; <label>:34:                                     ; preds = %24
  %35 = load i32, i32* @x.799
  %36 = load i32, i32* @y.800
  %37 = add i32 %35, -1141892993
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -1141892993
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 1793826177, i32 -713449408
  store i32 %61, i32* %22
  br label %137

; <label>:62:                                     ; preds = %24
  %63 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %64 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.3"* %63) #11
  %65 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %66 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.3"* %65) #11
  store i64 %66, i64* %12, align 8
  %67 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %12, i64* dereferenceable(8) %9)
  %68 = load i64, i64* %67, align 8
  %69 = sub i64 %64, -9190322409991324513
  %70 = add i64 %69, %68
  %71 = add i64 %70, -9190322409991324513
  %72 = add i64 %64, %68
  store i64 %71, i64* %11, align 8
  %73 = load i64, i64* %11, align 8
  %74 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %75 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.3"* %74) #11
  %76 = icmp ult i64 %73, %75
  store i1 %76, i1* %4
  %77 = load i32, i32* @x.799
  %78 = load i32, i32* @y.800
  %79 = sub i32 %77, -948892203
  %80 = sub i32 %79, 1
  %81 = add i32 %80, -948892203
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = and i1 %85, %86
  %88 = xor i1 %85, %86
  %89 = or i1 %87, %88
  %90 = or i1 %85, %86
  %91 = select i1 %89, i32 2093626659, i32 -713449408
  store i32 %91, i32* %22
  br label %137

; <label>:92:                                     ; preds = %24
  %93 = load volatile i1, i1* %4
  %94 = select i1 %93, i32 -1681888338, i32 -1529126765
  store i32 %94, i32* %22
  br label %137

; <label>:95:                                     ; preds = %24
  %96 = load i64, i64* %11, align 8
  %97 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %98 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector.3"* %97) #11
  %99 = icmp ugt i64 %96, %98
  %100 = select i1 %99, i32 -1681888338, i32 399671020
  store i32 %100, i32* %22
  br label %137

; <label>:101:                                    ; preds = %24
  %102 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %103 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector.3"* %102) #11
  store i32 -892641942, i32* %22
  store i64 %103, i64* %23
  br label %137

; <label>:104:                                    ; preds = %24
  %105 = load i64, i64* %11, align 8
  store i32 -892641942, i32* %22
  store i64 %105, i64* %23
  br label %137

; <label>:106:                                    ; preds = %24
  %107 = load i64, i64* %23
  ret i64 %107

; <label>:108:                                    ; preds = %24
  %109 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %110 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.3"* %109) #11
  %111 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %112 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.3"* %111) #11
  store i64 %112, i64* %12, align 8
  %113 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %12, i64* dereferenceable(8) %9)
  %114 = load i64, i64* %113, align 8
  %115 = add i64 %110, 4323604738914172849
  %116 = sub i64 %115, %114
  %117 = sub i64 %116, 4323604738914172849
  %118 = sub i64 %110, %114
  %119 = mul i64 %117, %114
  %120 = sub i64 0, -8152885251745589379
  %121 = sub i64 %120, %110
  %122 = add i64 %121, -8152885251745589379
  %123 = sub i64 0, %110
  %124 = sub i64 %122, -976900243529837421
  %125 = add i64 %124, %114
  %126 = add i64 %125, -976900243529837421
  %127 = add i64 %122, %114
  %128 = shl i64 %110, %114
  %129 = sub i64 %110, -3405899661900730938
  %130 = add i64 %129, %114
  %131 = add i64 %130, -3405899661900730938
  %132 = add i64 %110, %114
  store i64 %131, i64* %11, align 8
  %133 = load i64, i64* %11, align 8
  %134 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %135 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.3"* %134) #11
  %136 = icmp ult i64 %133, %135
  store i32 1793826177, i32* %22
  br label %137

; <label>:137:                                    ; preds = %108, %104, %101, %95, %92, %62, %34, %27, %26
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt34__uninitialized_move_if_noexcept_aIPxS0_SaIxEET0_T_S3_S2_RT1_(i64*, i64*, i64*, %"class.std::allocator.5"* dereferenceable(1)) #2 comdat {
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.5"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  store i64* %0, i64** %5, align 8
  store i64* %1, i64** %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %8, align 8
  %11 = load i64*, i64** %5, align 8
  %12 = call i64* @_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_(i64* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  store i64* %12, i64** %13, align 8
  %14 = load i64*, i64** %6, align 8
  %15 = call i64* @_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_(i64* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  store i64* %15, i64** %16, align 8
  %17 = load i64*, i64** %7, align 8
  %18 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = call i64* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPxES1_xET0_T_S4_S3_RSaIT1_E(i64* %20, i64* %22, i64* %17, %"class.std::allocator.5"* dereferenceable(1) %18)
  ret i64* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE7destroyIxEEvRS0_PT_(%"class.std::allocator.5"* dereferenceable(1), i64*) #2 comdat align 2 {
  %3 = alloca %"class.std::allocator.5"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %3, align 8
  %6 = bitcast %"class.std::allocator.5"* %5 to %"class.__gnu_cxx::new_allocator.6"*
  %7 = load i64*, i64** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIxE7destroyIxEEvPT_(%"class.__gnu_cxx::new_allocator.6"* %6, i64* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxE7destroyIxEEvPT_(%"class.__gnu_cxx::new_allocator.6"*, i64*) #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.805
  %6 = load i32, i32* @y.806
  %7 = sub i32 %5, 1194382138
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1194382138
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 340232393, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %50
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 340232393, label %19
    i32 1730062430, label %27
    i32 -913716511, label %45
    i32 1518715531, label %46
  ]

; <label>:18:                                     ; preds = %16
  br label %50

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1730062430, i32 1518715531
  store i32 %26, i32* %15
  br label %50

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %29 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %28, align 8
  store i64* %1, i64** %29, align 8
  %30 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %28, align 8
  %31 = load i32, i32* @x.805
  %32 = load i32, i32* @y.806
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -913716511, i32 1518715531
  store i32 %44, i32* %15
  br label %50

; <label>:45:                                     ; preds = %16
  ret void

; <label>:46:                                     ; preds = %16
  %47 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %48 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %47, align 8
  store i64* %1, i64** %48, align 8
  %49 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %47, align 8
  store i32 1730062430, i32* %15
  br label %50

; <label>:50:                                     ; preds = %46, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_(%"class.std::vector.13"*, i32* dereferenceable(4)) #2 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.13"*
  %5 = alloca i32**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.807
  %9 = load i32, i32* @y.808
  %10 = sub i32 %8, -1328446007
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -1328446007
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -99283600, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %182
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -99283600, label %22
    i32 -245985294, label %42
    i32 548131870, label %85
    i32 1447616946, label %88
    i32 555037543, label %107
    i32 2128681504, label %112
    i32 1168870754, label %139
    i32 1170124735, label %167
    i32 574985167, label %168
    i32 -437708177, label %181
  ]

; <label>:21:                                     ; preds = %19
  br label %182

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -245985294, i32 574985167
  store i32 %41, i32* %18
  br label %182

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.std::vector.13"*, align 8
  %44 = alloca i32*, align 8
  store i32** %44, i32*** %5
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %43, align 8
  %45 = load volatile i32**, i32*** %5
  store i32* %1, i32** %45, align 8
  %46 = load %"class.std::vector.13"*, %"class.std::vector.13"** %43, align 8
  store %"class.std::vector.13"* %46, %"class.std::vector.13"** %4
  %47 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %48 = bitcast %"class.std::vector.13"* %47 to %"struct.std::_Vector_base.14"*
  %49 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %48, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %49, i32 0, i32 1
  %51 = load i32*, i32** %50, align 8
  %52 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %53 = bitcast %"class.std::vector.13"* %52 to %"struct.std::_Vector_base.14"*
  %54 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %54, i32 0, i32 2
  %56 = load i32*, i32** %55, align 8
  %57 = icmp ne i32* %51, %56
  store i1 %57, i1* %3
  %58 = load i32, i32* @x.807
  %59 = load i32, i32* @y.808
  %60 = sub i32 %58, -2049641711
  %61 = sub i32 %60, 1
  %62 = add i32 %61, -2049641711
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 548131870, i32 574985167
  store i32 %84, i32* %18
  br label %182

; <label>:85:                                     ; preds = %19
  %86 = load volatile i1, i1* %3
  %87 = select i1 %86, i32 1447616946, i32 555037543
  store i32 %87, i32* %18
  br label %182

; <label>:88:                                     ; preds = %19
  %89 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %90 = bitcast %"class.std::vector.13"* %89 to %"struct.std::_Vector_base.14"*
  %91 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %90, i32 0, i32 0
  %92 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %91 to %"class.std::allocator.0"*
  %93 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %94 = bitcast %"class.std::vector.13"* %93 to %"struct.std::_Vector_base.14"*
  %95 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %94, i32 0, i32 0
  %96 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %95, i32 0, i32 1
  %97 = load i32*, i32** %96, align 8
  %98 = load volatile i32**, i32*** %5
  %99 = load i32*, i32** %98, align 8
  %100 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %99) #11
  call void @_ZNSt16allocator_traitsISaIiEE9constructIiJiEEEvRS0_PT_DpOT0_(%"class.std::allocator.0"* dereferenceable(1) %92, i32* %97, i32* dereferenceable(4) %100)
  %101 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %102 = bitcast %"class.std::vector.13"* %101 to %"struct.std::_Vector_base.14"*
  %103 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %102, i32 0, i32 0
  %104 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %103, i32 0, i32 1
  %105 = load i32*, i32** %104, align 8
  %106 = getelementptr inbounds i32, i32* %105, i32 1
  store i32* %106, i32** %104, align 8
  store i32 2128681504, i32* %18
  br label %182

; <label>:107:                                    ; preds = %19
  %108 = load volatile i32**, i32*** %5
  %109 = load i32*, i32** %108, align 8
  %110 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %109) #11
  %111 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  call void @_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJiEEEvDpOT_(%"class.std::vector.13"* %111, i32* dereferenceable(4) %110)
  store i32 2128681504, i32* %18
  br label %182

; <label>:112:                                    ; preds = %19
  %113 = load i32, i32* @x.807
  %114 = load i32, i32* @y.808
  %115 = sub i32 0, 1
  %116 = add i32 %113, %115
  %117 = sub i32 %113, 1
  %118 = mul i32 %113, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %114, 10
  %122 = xor i1 %120, true
  %123 = xor i1 %121, true
  %124 = xor i1 true, true
  %125 = and i1 %122, true
  %126 = and i1 %120, %124
  %127 = and i1 %123, true
  %128 = and i1 %121, %124
  %129 = or i1 %125, %126
  %130 = or i1 %127, %128
  %131 = xor i1 %129, %130
  %132 = or i1 %122, %123
  %133 = xor i1 %132, true
  %134 = or i1 true, %124
  %135 = and i1 %133, %134
  %136 = or i1 %131, %135
  %137 = or i1 %120, %121
  %138 = select i1 %136, i32 1168870754, i32 -437708177
  store i32 %138, i32* %18
  br label %182

; <label>:139:                                    ; preds = %19
  %140 = load i32, i32* @x.807
  %141 = load i32, i32* @y.808
  %142 = add i32 %140, -346884482
  %143 = sub i32 %142, 1
  %144 = sub i32 %143, -346884482
  %145 = sub i32 %140, 1
  %146 = mul i32 %140, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %141, 10
  %150 = xor i1 %148, true
  %151 = xor i1 %149, true
  %152 = xor i1 true, true
  %153 = and i1 %150, true
  %154 = and i1 %148, %152
  %155 = and i1 %151, true
  %156 = and i1 %149, %152
  %157 = or i1 %153, %154
  %158 = or i1 %155, %156
  %159 = xor i1 %157, %158
  %160 = or i1 %150, %151
  %161 = xor i1 %160, true
  %162 = or i1 true, %152
  %163 = and i1 %161, %162
  %164 = or i1 %159, %163
  %165 = or i1 %148, %149
  %166 = select i1 %164, i32 1170124735, i32 -437708177
  store i32 %166, i32* %18
  br label %182

; <label>:167:                                    ; preds = %19
  ret void

; <label>:168:                                    ; preds = %19
  %169 = alloca %"class.std::vector.13"*, align 8
  %170 = alloca i32*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %169, align 8
  store i32* %1, i32** %170, align 8
  %171 = load %"class.std::vector.13"*, %"class.std::vector.13"** %169, align 8
  %172 = bitcast %"class.std::vector.13"* %171 to %"struct.std::_Vector_base.14"*
  %173 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %172, i32 0, i32 0
  %174 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %173, i32 0, i32 1
  %175 = load i32*, i32** %174, align 8
  %176 = bitcast %"class.std::vector.13"* %171 to %"struct.std::_Vector_base.14"*
  %177 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %176, i32 0, i32 0
  %178 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %177, i32 0, i32 2
  %179 = load i32*, i32** %178, align 8
  %180 = icmp ne i32* %175, %179
  store i32 -245985294, i32* %18
  br label %182

; <label>:181:                                    ; preds = %19
  store i32 1168870754, i32* %18
  br label %182

; <label>:182:                                    ; preds = %181, %168, %139, %112, %107, %88, %85, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE9constructIiJiEEEvRS0_PT_DpOT0_(%"class.std::allocator.0"* dereferenceable(1), i32*, i32* dereferenceable(4)) #2 comdat align 2 {
  %4 = alloca %"class.std::allocator.0"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %4, align 8
  %8 = bitcast %"class.std::allocator.0"* %7 to %"class.__gnu_cxx::new_allocator.1"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %10) #11
  call void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.1"* %8, i32* %9, i32* dereferenceable(4) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4)) #1 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.811
  %6 = load i32, i32* @y.812
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -494321262, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -494321262, label %18
    i32 27984499, label %38
    i32 -1494943472, label %68
    i32 292315415, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 27984499, i32 292315415
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca i32*, align 8
  store i32* %0, i32** %39, align 8
  %40 = load i32*, i32** %39, align 8
  store i32* %40, i32** %2
  %41 = load i32, i32* @x.811
  %42 = load i32, i32* @y.812
  %43 = add i32 %41, -900827057
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -900827057
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -1494943472, i32 292315415
  store i32 %67, i32* %14
  br label %73

; <label>:68:                                     ; preds = %15
  %69 = load volatile i32*, i32** %2
  ret i32* %69

; <label>:70:                                     ; preds = %15
  %71 = alloca i32*, align 8
  store i32* %0, i32** %71, align 8
  %72 = load i32*, i32** %71, align 8
  store i32 27984499, i32* %14
  br label %73

; <label>:73:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJiEEEvDpOT_(%"class.std::vector.13"*, i32* dereferenceable(4)) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.13"*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %3, align 8
  store i32* %1, i32** %4, align 8
  %10 = load %"class.std::vector.13"*, %"class.std::vector.13"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(%"class.std::vector.13"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %13 = load i64, i64* %5, align 8
  %14 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.14"* %12, i64 %13)
  store i32* %14, i32** %6, align 8
  %15 = load i32*, i32** %6, align 8
  store i32* %15, i32** %7, align 8
  %16 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %17 to %"class.std::allocator.0"*
  %19 = load i32*, i32** %6, align 8
  %20 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.13"* %10) #11
  %21 = getelementptr inbounds i32, i32* %19, i64 %20
  %22 = load i32*, i32** %4, align 8
  %23 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %22) #11
  invoke void @_ZNSt16allocator_traitsISaIiEE9constructIiJiEEEvRS0_PT_DpOT0_(%"class.std::allocator.0"* dereferenceable(1) %18, i32* %21, i32* dereferenceable(4) %23)
          to label %24 unwind label %93

; <label>:24:                                     ; preds = %2
  %25 = load i32, i32* @x.813
  %26 = load i32, i32* @y.814
  %27 = sub i32 0, 1
  %28 = add i32 %25, %27
  %29 = sub i32 %25, 1
  %30 = mul i32 %25, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %26, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 true, true
  %37 = and i1 %34, true
  %38 = and i1 %32, %36
  %39 = and i1 %35, true
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 true, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  br i1 %48, label %50, label %356

; <label>:50:                                     ; preds = %24, %356
  store i32* null, i32** %7, align 8
  %51 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %52 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %51, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %52, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %56 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %55, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %56, i32 0, i32 1
  %58 = load i32*, i32** %57, align 8
  %59 = load i32*, i32** %6, align 8
  %60 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %61 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %60) #11
  %62 = load i32, i32* @x.813
  %63 = load i32, i32* @y.814
  %64 = add i32 %62, 1504225715
  %65 = sub i32 %64, 1
  %66 = sub i32 %65, 1504225715
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 false, true
  %75 = and i1 %72, false
  %76 = and i1 %70, %74
  %77 = and i1 %73, false
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 false, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  br i1 %86, label %88, label %356

; <label>:88:                                     ; preds = %50
  %89 = invoke i32* @_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_(i32* %54, i32* %58, i32* %59, %"class.std::allocator.0"* dereferenceable(1) %61)
          to label %90 unwind label %93

; <label>:90:                                     ; preds = %88
  store i32* %89, i32** %7, align 8
  %91 = load i32*, i32** %7, align 8
  %92 = getelementptr inbounds i32, i32* %91, i32 1
  store i32* %92, i32** %7, align 8
  br label %209

; <label>:93:                                     ; preds = %88, %2
  %94 = load i32, i32* @x.813
  %95 = load i32, i32* @y.814
  %96 = add i32 %94, 2113830407
  %97 = sub i32 %96, 1
  %98 = sub i32 %97, 2113830407
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = and i1 %102, %103
  %105 = xor i1 %102, %103
  %106 = or i1 %104, %105
  %107 = or i1 %102, %103
  br i1 %106, label %108, label %368

; <label>:108:                                    ; preds = %93, %368
  %109 = landingpad { i8*, i32 }
          catch i8* null
  %110 = extractvalue { i8*, i32 } %109, 0
  store i8* %110, i8** %8, align 8
  %111 = extractvalue { i8*, i32 } %109, 1
  store i32 %111, i32* %9, align 4
  %112 = load i32, i32* @x.813
  %113 = load i32, i32* @y.814
  %114 = add i32 %112, -1020148513
  %115 = sub i32 %114, 1
  %116 = sub i32 %115, -1020148513
  %117 = sub i32 %112, 1
  %118 = mul i32 %112, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %113, 10
  %122 = and i1 %120, %121
  %123 = xor i1 %120, %121
  %124 = or i1 %122, %123
  %125 = or i1 %120, %121
  br i1 %124, label %126, label %368

; <label>:126:                                    ; preds = %108
  br label %127

; <label>:127:                                    ; preds = %126
  %128 = load i8*, i8** %8, align 8
  %129 = call i8* @__cxa_begin_catch(i8* %128) #11
  %130 = load i32*, i32** %7, align 8
  %131 = icmp ne i32* %130, null
  br i1 %131, label %144, label %132

; <label>:132:                                    ; preds = %127
  %133 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %134 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %133, i32 0, i32 0
  %135 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %134 to %"class.std::allocator.0"*
  %136 = load i32*, i32** %6, align 8
  %137 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.13"* %10) #11
  %138 = getelementptr inbounds i32, i32* %136, i64 %137
  invoke void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.0"* dereferenceable(1) %135, i32* %138)
          to label %139 unwind label %140

; <label>:139:                                    ; preds = %132
  br label %150

; <label>:140:                                    ; preds = %154, %150, %144, %132
  %141 = landingpad { i8*, i32 }
          cleanup
  %142 = extractvalue { i8*, i32 } %141, 0
  store i8* %142, i8** %8, align 8
  %143 = extractvalue { i8*, i32 } %141, 1
  store i32 %143, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %155 unwind label %299

; <label>:144:                                    ; preds = %127
  %145 = load i32*, i32** %6, align 8
  %146 = load i32*, i32** %7, align 8
  %147 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %148 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %147) #11
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %145, i32* %146, %"class.std::allocator.0"* dereferenceable(1) %148)
          to label %149 unwind label %140

; <label>:149:                                    ; preds = %144
  br label %150

; <label>:150:                                    ; preds = %149, %139
  %151 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %152 = load i32*, i32** %6, align 8
  %153 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.14"* %151, i32* %152, i64 %153)
          to label %154 unwind label %140

; <label>:154:                                    ; preds = %150
  invoke void @__cxa_rethrow() #13
          to label %302 unwind label %140

; <label>:155:                                    ; preds = %140
  %156 = load i32, i32* @x.813
  %157 = load i32, i32* @y.814
  %158 = sub i32 %156, 168926260
  %159 = sub i32 %158, 1
  %160 = add i32 %159, 168926260
  %161 = sub i32 %156, 1
  %162 = mul i32 %156, %160
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %157, 10
  %166 = xor i1 %164, true
  %167 = xor i1 %165, true
  %168 = xor i1 true, true
  %169 = and i1 %166, true
  %170 = and i1 %164, %168
  %171 = and i1 %167, true
  %172 = and i1 %165, %168
  %173 = or i1 %169, %170
  %174 = or i1 %171, %172
  %175 = xor i1 %173, %174
  %176 = or i1 %166, %167
  %177 = xor i1 %176, true
  %178 = or i1 true, %168
  %179 = and i1 %177, %178
  %180 = or i1 %175, %179
  %181 = or i1 %164, %165
  br i1 %180, label %182, label %372

; <label>:182:                                    ; preds = %155, %372
  %183 = load i32, i32* @x.813
  %184 = load i32, i32* @y.814
  %185 = sub i32 0, 1
  %186 = add i32 %183, %185
  %187 = sub i32 %183, 1
  %188 = mul i32 %183, %186
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %184, 10
  %192 = xor i1 %190, true
  %193 = xor i1 %191, true
  %194 = xor i1 true, true
  %195 = and i1 %192, true
  %196 = and i1 %190, %194
  %197 = and i1 %193, true
  %198 = and i1 %191, %194
  %199 = or i1 %195, %196
  %200 = or i1 %197, %198
  %201 = xor i1 %199, %200
  %202 = or i1 %192, %193
  %203 = xor i1 %202, true
  %204 = or i1 true, %194
  %205 = and i1 %203, %204
  %206 = or i1 %201, %205
  %207 = or i1 %190, %191
  br i1 %206, label %208, label %372

; <label>:208:                                    ; preds = %182
  br label %253

; <label>:209:                                    ; preds = %90
  %210 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %211 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %210, i32 0, i32 0
  %212 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %211, i32 0, i32 0
  %213 = load i32*, i32** %212, align 8
  %214 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %215 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %214, i32 0, i32 0
  %216 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %215, i32 0, i32 1
  %217 = load i32*, i32** %216, align 8
  %218 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %219 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %218) #11
  call void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %213, i32* %217, %"class.std::allocator.0"* dereferenceable(1) %219)
  %220 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %221 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %222 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %221, i32 0, i32 0
  %223 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %222, i32 0, i32 0
  %224 = load i32*, i32** %223, align 8
  %225 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %226 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %225, i32 0, i32 0
  %227 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %226, i32 0, i32 2
  %228 = load i32*, i32** %227, align 8
  %229 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %230 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %229, i32 0, i32 0
  %231 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %230, i32 0, i32 0
  %232 = load i32*, i32** %231, align 8
  %233 = ptrtoint i32* %228 to i64
  %234 = ptrtoint i32* %232 to i64
  %235 = sub i64 0, %234
  %236 = add i64 %233, %235
  %237 = sub i64 %233, %234
  %238 = sdiv exact i64 %236, 4
  call void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.14"* %220, i32* %224, i64 %238)
  %239 = load i32*, i32** %6, align 8
  %240 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %241 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %240, i32 0, i32 0
  %242 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %241, i32 0, i32 0
  store i32* %239, i32** %242, align 8
  %243 = load i32*, i32** %7, align 8
  %244 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %245 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %244, i32 0, i32 0
  %246 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %245, i32 0, i32 1
  store i32* %243, i32** %246, align 8
  %247 = load i32*, i32** %6, align 8
  %248 = load i64, i64* %5, align 8
  %249 = getelementptr inbounds i32, i32* %247, i64 %248
  %250 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %251 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %250, i32 0, i32 0
  %252 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %251, i32 0, i32 2
  store i32* %249, i32** %252, align 8
  ret void

; <label>:253:                                    ; preds = %208
  %254 = load i32, i32* @x.813
  %255 = load i32, i32* @y.814
  %256 = sub i32 0, 1
  %257 = add i32 %254, %256
  %258 = sub i32 %254, 1
  %259 = mul i32 %254, %257
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %255, 10
  %263 = and i1 %261, %262
  %264 = xor i1 %261, %262
  %265 = or i1 %263, %264
  %266 = or i1 %261, %262
  br i1 %265, label %267, label %373

; <label>:267:                                    ; preds = %253, %373
  %268 = load i8*, i8** %8, align 8
  %269 = load i32, i32* %9, align 4
  %270 = insertvalue { i8*, i32 } undef, i8* %268, 0
  %271 = insertvalue { i8*, i32 } %270, i32 %269, 1
  %272 = load i32, i32* @x.813
  %273 = load i32, i32* @y.814
  %274 = add i32 %272, 1258170863
  %275 = sub i32 %274, 1
  %276 = sub i32 %275, 1258170863
  %277 = sub i32 %272, 1
  %278 = mul i32 %272, %276
  %279 = urem i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %273, 10
  %282 = xor i1 %280, true
  %283 = xor i1 %281, true
  %284 = xor i1 true, true
  %285 = and i1 %282, true
  %286 = and i1 %280, %284
  %287 = and i1 %283, true
  %288 = and i1 %281, %284
  %289 = or i1 %285, %286
  %290 = or i1 %287, %288
  %291 = xor i1 %289, %290
  %292 = or i1 %282, %283
  %293 = xor i1 %292, true
  %294 = or i1 true, %284
  %295 = and i1 %293, %294
  %296 = or i1 %291, %295
  %297 = or i1 %280, %281
  br i1 %296, label %298, label %373

; <label>:298:                                    ; preds = %267
  resume { i8*, i32 } %271

; <label>:299:                                    ; preds = %140
  %300 = landingpad { i8*, i32 }
          catch i8* null
  %301 = extractvalue { i8*, i32 } %300, 0
  call void @__clang_call_terminate(i8* %301) #9
  unreachable

; <label>:302:                                    ; preds = %154
  %303 = load i32, i32* @x.813
  %304 = load i32, i32* @y.814
  %305 = sub i32 %303, -643180344
  %306 = sub i32 %305, 1
  %307 = add i32 %306, -643180344
  %308 = sub i32 %303, 1
  %309 = mul i32 %303, %307
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %304, 10
  %313 = xor i1 %311, true
  %314 = xor i1 %312, true
  %315 = xor i1 true, true
  %316 = and i1 %313, true
  %317 = and i1 %311, %315
  %318 = and i1 %314, true
  %319 = and i1 %312, %315
  %320 = or i1 %316, %317
  %321 = or i1 %318, %319
  %322 = xor i1 %320, %321
  %323 = or i1 %313, %314
  %324 = xor i1 %323, true
  %325 = or i1 true, %315
  %326 = and i1 %324, %325
  %327 = or i1 %322, %326
  %328 = or i1 %311, %312
  br i1 %327, label %329, label %378

; <label>:329:                                    ; preds = %302, %378
  %330 = load i32, i32* @x.813
  %331 = load i32, i32* @y.814
  %332 = sub i32 0, 1
  %333 = add i32 %330, %332
  %334 = sub i32 %330, 1
  %335 = mul i32 %330, %333
  %336 = urem i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %331, 10
  %339 = xor i1 %337, true
  %340 = xor i1 %338, true
  %341 = xor i1 true, true
  %342 = and i1 %339, true
  %343 = and i1 %337, %341
  %344 = and i1 %340, true
  %345 = and i1 %338, %341
  %346 = or i1 %342, %343
  %347 = or i1 %344, %345
  %348 = xor i1 %346, %347
  %349 = or i1 %339, %340
  %350 = xor i1 %349, true
  %351 = or i1 true, %341
  %352 = and i1 %350, %351
  %353 = or i1 %348, %352
  %354 = or i1 %337, %338
  br i1 %353, label %355, label %378

; <label>:355:                                    ; preds = %329
  unreachable

; <label>:356:                                    ; preds = %50, %24
  store i32* null, i32** %7, align 8
  %357 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %358 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %357, i32 0, i32 0
  %359 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %358, i32 0, i32 0
  %360 = load i32*, i32** %359, align 8
  %361 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %362 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %361, i32 0, i32 0
  %363 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %362, i32 0, i32 1
  %364 = load i32*, i32** %363, align 8
  %365 = load i32*, i32** %6, align 8
  %366 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %367 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %366) #11
  br label %50

; <label>:368:                                    ; preds = %108, %93
  %369 = landingpad { i8*, i32 }
          catch i8* null
  %370 = extractvalue { i8*, i32 } %369, 0
  store i8* %370, i8** %8, align 8
  %371 = extractvalue { i8*, i32 } %369, 1
  store i32 %371, i32* %9, align 4
  br label %108

; <label>:372:                                    ; preds = %182, %155
  br label %182

; <label>:373:                                    ; preds = %267, %253
  %374 = load i8*, i8** %8, align 8
  %375 = load i32, i32* %9, align 4
  %376 = insertvalue { i8*, i32 } undef, i8* %374, 0
  %377 = insertvalue { i8*, i32 } %376, i32 %375, 1
  br label %267

; <label>:378:                                    ; preds = %329, %302
  br label %329
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.1"*, i32*, i32* dereferenceable(4)) #1 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = bitcast i32* %8 to i8*
  %10 = bitcast i8* %9 to i32*
  %11 = load i32*, i32** %6, align 8
  %12 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %11) #11
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %10, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(%"class.std::vector.13"*, i64, i8*) #2 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i1
  %7 = alloca i64
  %8 = alloca i64
  %9 = alloca %"class.std::vector.13"*
  %10 = alloca %"class.std::vector.13"*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %10, align 8
  store i64 %1, i64* %11, align 8
  store i8* %2, i8** %12, align 8
  %15 = load %"class.std::vector.13"*, %"class.std::vector.13"** %10, align 8
  store %"class.std::vector.13"* %15, %"class.std::vector.13"** %9
  %16 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %9
  %17 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.13"* %16) #11
  %18 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %9
  %19 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.13"* %18) #11
  %20 = sub i64 0, %19
  %21 = add i64 %17, %20
  %22 = sub i64 %17, %19
  store i64 %21, i64* %8
  %23 = load i64, i64* %11, align 8
  store i64 %23, i64* %7
  %24 = alloca i32
  store i32 1499995963, i32* %24
  %25 = alloca i64
  br label %26

; <label>:26:                                     ; preds = %3, %229
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 1499995963, label %29
    i32 -686078679, label %34
    i32 1366384667, label %36
    i32 1169057573, label %52
    i32 -334904753, label %93
    i32 -640491305, label %96
    i32 522872288, label %102
    i32 -970874811, label %130
    i32 -1001389605, label %147
    i32 -393665990, label %149
    i32 1635168095, label %151
    i32 1431427272, label %168
    i32 -1305521927, label %196
    i32 -29334120, label %198
    i32 -1434947894, label %225
    i32 1140145457, label %228
  ]

; <label>:28:                                     ; preds = %26
  br label %229

; <label>:29:                                     ; preds = %26
  %30 = load volatile i64, i64* %8
  %31 = load volatile i64, i64* %7
  %32 = icmp ult i64 %30, %31
  %33 = select i1 %32, i32 -686078679, i32 1366384667
  store i32 %33, i32* %24
  br label %229

; <label>:34:                                     ; preds = %26
  %35 = load i8*, i8** %12, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %35) #13
  unreachable

; <label>:36:                                     ; preds = %26
  %37 = load i32, i32* @x.817
  %38 = load i32, i32* @y.818
  %39 = sub i32 %37, -1803769359
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -1803769359
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 1169057573, i32 -29334120
  store i32 %51, i32* %24
  br label %229

; <label>:52:                                     ; preds = %26
  %53 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %9
  %54 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.13"* %53) #11
  %55 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %9
  %56 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.13"* %55) #11
  store i64 %56, i64* %14, align 8
  %57 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %14, i64* dereferenceable(8) %11)
  %58 = load i64, i64* %57, align 8
  %59 = sub i64 0, %58
  %60 = sub i64 %54, %59
  %61 = add i64 %54, %58
  store i64 %60, i64* %13, align 8
  %62 = load i64, i64* %13, align 8
  %63 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %9
  %64 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.13"* %63) #11
  %65 = icmp ult i64 %62, %64
  store i1 %65, i1* %6
  %66 = load i32, i32* @x.817
  %67 = load i32, i32* @y.818
  %68 = sub i32 %66, 922937571
  %69 = sub i32 %68, 1
  %70 = add i32 %69, 922937571
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 true, true
  %79 = and i1 %76, true
  %80 = and i1 %74, %78
  %81 = and i1 %77, true
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 true, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  %92 = select i1 %90, i32 -334904753, i32 -29334120
  store i32 %92, i32* %24
  br label %229

; <label>:93:                                     ; preds = %26
  %94 = load volatile i1, i1* %6
  %95 = select i1 %94, i32 522872288, i32 -640491305
  store i32 %95, i32* %24
  br label %229

; <label>:96:                                     ; preds = %26
  %97 = load i64, i64* %13, align 8
  %98 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %9
  %99 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.13"* %98) #11
  %100 = icmp ugt i64 %97, %99
  %101 = select i1 %100, i32 522872288, i32 -393665990
  store i32 %101, i32* %24
  br label %229

; <label>:102:                                    ; preds = %26
  %103 = load i32, i32* @x.817
  %104 = load i32, i32* @y.818
  %105 = add i32 %103, 1146611788
  %106 = sub i32 %105, 1
  %107 = sub i32 %106, 1146611788
  %108 = sub i32 %103, 1
  %109 = mul i32 %103, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %104, 10
  %113 = xor i1 %111, true
  %114 = xor i1 %112, true
  %115 = xor i1 false, true
  %116 = and i1 %113, false
  %117 = and i1 %111, %115
  %118 = and i1 %114, false
  %119 = and i1 %112, %115
  %120 = or i1 %116, %117
  %121 = or i1 %118, %119
  %122 = xor i1 %120, %121
  %123 = or i1 %113, %114
  %124 = xor i1 %123, true
  %125 = or i1 false, %115
  %126 = and i1 %124, %125
  %127 = or i1 %122, %126
  %128 = or i1 %111, %112
  %129 = select i1 %127, i32 -970874811, i32 -1434947894
  store i32 %129, i32* %24
  br label %229

; <label>:130:                                    ; preds = %26
  %131 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %9
  %132 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.13"* %131) #11
  store i64 %132, i64* %5
  %133 = load i32, i32* @x.817
  %134 = load i32, i32* @y.818
  %135 = sub i32 0, 1
  %136 = add i32 %133, %135
  %137 = sub i32 %133, 1
  %138 = mul i32 %133, %136
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %134, 10
  %142 = and i1 %140, %141
  %143 = xor i1 %140, %141
  %144 = or i1 %142, %143
  %145 = or i1 %140, %141
  %146 = select i1 %144, i32 -1001389605, i32 -1434947894
  store i32 %146, i32* %24
  br label %229

; <label>:147:                                    ; preds = %26
  store i32 1635168095, i32* %24
  %148 = load volatile i64, i64* %5
  store i64 %148, i64* %25
  br label %229

; <label>:149:                                    ; preds = %26
  %150 = load i64, i64* %13, align 8
  store i32 1635168095, i32* %24
  store i64 %150, i64* %25
  br label %229

; <label>:151:                                    ; preds = %26
  %152 = load i64, i64* %25
  store i64 %152, i64* %4
  %153 = load i32, i32* @x.817
  %154 = load i32, i32* @y.818
  %155 = add i32 %153, 503335814
  %156 = sub i32 %155, 1
  %157 = sub i32 %156, 503335814
  %158 = sub i32 %153, 1
  %159 = mul i32 %153, %157
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %154, 10
  %163 = and i1 %161, %162
  %164 = xor i1 %161, %162
  %165 = or i1 %163, %164
  %166 = or i1 %161, %162
  %167 = select i1 %165, i32 1431427272, i32 1140145457
  store i32 %167, i32* %24
  br label %229

; <label>:168:                                    ; preds = %26
  %169 = load i32, i32* @x.817
  %170 = load i32, i32* @y.818
  %171 = add i32 %169, -948498873
  %172 = sub i32 %171, 1
  %173 = sub i32 %172, -948498873
  %174 = sub i32 %169, 1
  %175 = mul i32 %169, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %170, 10
  %179 = xor i1 %177, true
  %180 = xor i1 %178, true
  %181 = xor i1 false, true
  %182 = and i1 %179, false
  %183 = and i1 %177, %181
  %184 = and i1 %180, false
  %185 = and i1 %178, %181
  %186 = or i1 %182, %183
  %187 = or i1 %184, %185
  %188 = xor i1 %186, %187
  %189 = or i1 %179, %180
  %190 = xor i1 %189, true
  %191 = or i1 false, %181
  %192 = and i1 %190, %191
  %193 = or i1 %188, %192
  %194 = or i1 %177, %178
  %195 = select i1 %193, i32 -1305521927, i32 1140145457
  store i32 %195, i32* %24
  br label %229

; <label>:196:                                    ; preds = %26
  %197 = load volatile i64, i64* %4
  ret i64 %197

; <label>:198:                                    ; preds = %26
  %199 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %9
  %200 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.13"* %199) #11
  %201 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %9
  %202 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.13"* %201) #11
  store i64 %202, i64* %14, align 8
  %203 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %14, i64* dereferenceable(8) %11)
  %204 = load i64, i64* %203, align 8
  %205 = sub i64 0, 7346071366777742482
  %206 = sub i64 %205, %200
  %207 = add i64 %206, 7346071366777742482
  %208 = sub i64 0, %200
  %209 = sub i64 %207, 2906658720566250083
  %210 = add i64 %209, %204
  %211 = add i64 %210, 2906658720566250083
  %212 = add i64 %207, %204
  %213 = sub i64 0, %204
  %214 = add i64 %200, %213
  %215 = sub i64 %200, %204
  %216 = mul i64 %214, %204
  %217 = sub i64 %200, 6478308263464476535
  %218 = add i64 %217, %204
  %219 = add i64 %218, 6478308263464476535
  %220 = add i64 %200, %204
  store i64 %219, i64* %13, align 8
  %221 = load i64, i64* %13, align 8
  %222 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %9
  %223 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.13"* %222) #11
  %224 = icmp ult i64 %221, %223
  store i32 1169057573, i32* %24
  br label %229

; <label>:225:                                    ; preds = %26
  %226 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %9
  %227 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.13"* %226) #11
  store i32 -970874811, i32* %24
  br label %229

; <label>:228:                                    ; preds = %26
  store i32 1431427272, i32* %24
  br label %229

; <label>:229:                                    ; preds = %228, %225, %198, %168, %151, %149, %147, %130, %102, %96, %93, %52, %36, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_(i32*, i32*, i32*, %"class.std::allocator.0"* dereferenceable(1)) #2 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.0"*, align 8
  %9 = alloca %"class.std::move_iterator.23", align 8
  %10 = alloca %"class.std::move_iterator.23", align 8
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %8, align 8
  %11 = load i32*, i32** %5, align 8
  %12 = call i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %9, i32 0, i32 0
  store i32* %12, i32** %13, align 8
  %14 = load i32*, i32** %6, align 8
  %15 = call i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %10, i32 0, i32 0
  store i32* %15, i32** %16, align 8
  %17 = load i32*, i32** %7, align 8
  %18 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %9, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %10, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = call i32* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E(i32* %20, i32* %22, i32* %17, %"class.std::allocator.0"* dereferenceable(1) %18)
  ret i32* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.0"* dereferenceable(1), i32*) #2 comdat align 2 {
  %3 = alloca %"class.std::allocator.0"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %3, align 8
  %6 = bitcast %"class.std::allocator.0"* %5 to %"class.__gnu_cxx::new_allocator.1"*
  %7 = load i32*, i32** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator.1"* %6, i32* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.13"*) #1 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.823
  %6 = load i32, i32* @y.824
  %7 = add i32 %5, -1519530007
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1519530007
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -714257053, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -714257053, label %19
    i32 1988617032, label %39
    i32 1569077168, label %60
    i32 -1348968775, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1988617032, i32 -1348968775
  store i32 %38, i32* %15
  br label %68

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %40, align 8
  %41 = load %"class.std::vector.13"*, %"class.std::vector.13"** %40, align 8
  %42 = bitcast %"class.std::vector.13"* %41 to %"struct.std::_Vector_base.14"*
  %43 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %42) #11
  %44 = call i64 @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_(%"class.std::allocator.0"* dereferenceable(1) %43) #11
  store i64 %44, i64* %2
  %45 = load i32, i32* @x.823
  %46 = load i32, i32* @y.824
  %47 = sub i32 %45, 717407929
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 717407929
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 1569077168, i32 -1348968775
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile i64, i64* %2
  ret i64 %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %63, align 8
  %64 = load %"class.std::vector.13"*, %"class.std::vector.13"** %63, align 8
  %65 = bitcast %"class.std::vector.13"* %64 to %"struct.std::_Vector_base.14"*
  %66 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %65) #11
  %67 = call i64 @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_(%"class.std::allocator.0"* dereferenceable(1) %66) #11
  store i32 1988617032, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E(i32*, i32*, i32*, %"class.std::allocator.0"* dereferenceable(1)) #2 comdat {
  %5 = alloca %"class.std::move_iterator.23", align 8
  %6 = alloca %"class.std::move_iterator.23", align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.0"*, align 8
  %9 = alloca %"class.std::move_iterator.23", align 8
  %10 = alloca %"class.std::move_iterator.23", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %5, i32 0, i32 0
  store i32* %0, i32** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %6, i32 0, i32 0
  store i32* %1, i32** %12, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.23"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.23"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.23"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.23"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load i32*, i32** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %9, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %10, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = call i32* @_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %19, i32* %21, i32* %17)
  ret i32* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32*) #2 comdat {
  %2 = alloca %"class.std::move_iterator.23", align 8
  %3 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  %4 = load i32*, i32** %3, align 8
  call void @_ZNSt13move_iteratorIPiEC2ES0_(%"class.std::move_iterator.23"* %2, i32* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %2, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  ret i32* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32*, i32*, i32*) #2 comdat {
  %4 = alloca %"class.std::move_iterator.23", align 8
  %5 = alloca %"class.std::move_iterator.23", align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.23", align 8
  %9 = alloca %"class.std::move_iterator.23", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %4, i32 0, i32 0
  store i32* %0, i32** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %5, i32 0, i32 0
  store i32* %1, i32** %11, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.23"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.23"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.23"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.23"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load i32*, i32** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %8, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %9, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_(i32* %18, i32* %20, i32* %16)
  ret i32* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_(i32*, i32*, i32*) #2 comdat align 2 {
  %4 = alloca %"class.std::move_iterator.23", align 8
  %5 = alloca %"class.std::move_iterator.23", align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.std::move_iterator.23", align 8
  %8 = alloca %"class.std::move_iterator.23", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %4, i32 0, i32 0
  store i32* %0, i32** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %5, i32 0, i32 0
  store i32* %1, i32** %10, align 8
  store i32* %2, i32** %6, align 8
  %11 = bitcast %"class.std::move_iterator.23"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.23"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.std::move_iterator.23"* %8 to i8*
  %14 = bitcast %"class.std::move_iterator.23"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load i32*, i32** %6, align 8
  %16 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %7, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %8, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = call i32* @_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %17, i32* %19, i32* %15)
  ret i32* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32*, i32*, i32*) #2 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.833
  %8 = load i32, i32* @y.834
  %9 = add i32 %7, 1806260788
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 1806260788
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1954285001, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %97
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1954285001, label %21
    i32 1907966052, label %41
    i32 -785355907, label %75
    i32 -1504845516, label %77
  ]

; <label>:20:                                     ; preds = %18
  br label %97

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1907966052, i32 -1504845516
  store i32 %40, i32* %17
  br label %97

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::move_iterator.23", align 8
  %43 = alloca %"class.std::move_iterator.23", align 8
  %44 = alloca i32*, align 8
  %45 = alloca %"class.std::move_iterator.23", align 8
  %46 = alloca %"class.std::move_iterator.23", align 8
  %47 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %42, i32 0, i32 0
  store i32* %0, i32** %47, align 8
  %48 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %43, i32 0, i32 0
  store i32* %1, i32** %48, align 8
  store i32* %2, i32** %44, align 8
  %49 = bitcast %"class.std::move_iterator.23"* %45 to i8*
  %50 = bitcast %"class.std::move_iterator.23"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %45, i32 0, i32 0
  %52 = load i32*, i32** %51, align 8
  %53 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %52)
  %54 = bitcast %"class.std::move_iterator.23"* %46 to i8*
  %55 = bitcast %"class.std::move_iterator.23"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 8, i32 8, i1 false)
  %56 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %46, i32 0, i32 0
  %57 = load i32*, i32** %56, align 8
  %58 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %57)
  %59 = load i32*, i32** %44, align 8
  %60 = call i32* @_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_(i32* %53, i32* %58, i32* %59)
  store i32* %60, i32** %4
  %61 = load i32, i32* @x.833
  %62 = load i32, i32* @y.834
  %63 = sub i32 0, 1
  %64 = add i32 %61, %63
  %65 = sub i32 %61, 1
  %66 = mul i32 %61, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %62, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  %74 = select i1 %72, i32 -785355907, i32 -1504845516
  store i32 %74, i32* %17
  br label %97

; <label>:75:                                     ; preds = %18
  %76 = load volatile i32*, i32** %4
  ret i32* %76

; <label>:77:                                     ; preds = %18
  %78 = alloca %"class.std::move_iterator.23", align 8
  %79 = alloca %"class.std::move_iterator.23", align 8
  %80 = alloca i32*, align 8
  %81 = alloca %"class.std::move_iterator.23", align 8
  %82 = alloca %"class.std::move_iterator.23", align 8
  %83 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %78, i32 0, i32 0
  store i32* %0, i32** %83, align 8
  %84 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %79, i32 0, i32 0
  store i32* %1, i32** %84, align 8
  store i32* %2, i32** %80, align 8
  %85 = bitcast %"class.std::move_iterator.23"* %81 to i8*
  %86 = bitcast %"class.std::move_iterator.23"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 8, i32 8, i1 false)
  %87 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %81, i32 0, i32 0
  %88 = load i32*, i32** %87, align 8
  %89 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %88)
  %90 = bitcast %"class.std::move_iterator.23"* %82 to i8*
  %91 = bitcast %"class.std::move_iterator.23"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %90, i8* %91, i64 8, i32 8, i1 false)
  %92 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %82, i32 0, i32 0
  %93 = load i32*, i32** %92, align 8
  %94 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %93)
  %95 = load i32*, i32** %80, align 8
  %96 = call i32* @_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_(i32* %89, i32* %94, i32* %95)
  store i32 1907966052, i32* %17
  br label %97

; <label>:97:                                     ; preds = %77, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32*) #2 comdat {
  %2 = alloca %"class.std::move_iterator.23", align 8
  %3 = alloca %"class.std::move_iterator.23", align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %2, i32 0, i32 0
  store i32* %0, i32** %4, align 8
  %5 = bitcast %"class.std::move_iterator.23"* %3 to i8*
  %6 = bitcast %"class.std::move_iterator.23"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %3, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = call i32* @_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_(i32* %8)
  ret i32* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_(i32*) #2 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.23", align 8
  %3 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %2, i32 0, i32 0
  store i32* %0, i32** %3, align 8
  %4 = call i32* @_ZNKSt13move_iteratorIPiE4baseEv(%"class.std::move_iterator.23"* %2)
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNKSt13move_iteratorIPiE4baseEv(%"class.std::move_iterator.23"*) #1 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.839
  %6 = load i32, i32* @y.840
  %7 = sub i32 %5, -932411057
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -932411057
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1210121598, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1210121598, label %19
    i32 2006604931, label %39
    i32 1807041360, label %70
    i32 1966205538, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 2006604931, i32 1966205538
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator.23"*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %40, align 8
  %41 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %40, align 8
  %42 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %41, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  store i32* %43, i32** %2
  %44 = load i32, i32* @x.839
  %45 = load i32, i32* @y.840
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 1807041360, i32 1966205538
  store i32 %69, i32* %15
  br label %77

; <label>:70:                                     ; preds = %16
  %71 = load volatile i32*, i32** %2
  ret i32* %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.std::move_iterator.23"*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %73, align 8
  %74 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %73, align 8
  %75 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %74, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  store i32 2006604931, i32* %15
  br label %77

; <label>:77:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPiEC2ES0_(%"class.std::move_iterator.23"*, i32*) unnamed_addr #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.841
  %6 = load i32, i32* @y.842
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 368727318, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %78
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 368727318, label %18
    i32 -597121333, label %38
    i32 560682948, label %71
    i32 426183844, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %78

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -597121333, i32 426183844
  store i32 %37, i32* %14
  br label %78

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::move_iterator.23"*, align 8
  %40 = alloca i32*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %39, align 8
  store i32* %1, i32** %40, align 8
  %41 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %39, align 8
  %42 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %41, i32 0, i32 0
  %43 = load i32*, i32** %40, align 8
  store i32* %43, i32** %42, align 8
  %44 = load i32, i32* @x.841
  %45 = load i32, i32* @y.842
  %46 = add i32 %44, -399122056
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -399122056
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 560682948, i32 426183844
  store i32 %70, i32* %14
  br label %78

; <label>:71:                                     ; preds = %15
  ret void

; <label>:72:                                     ; preds = %15
  %73 = alloca %"class.std::move_iterator.23"*, align 8
  %74 = alloca i32*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %73, align 8
  store i32* %1, i32** %74, align 8
  %75 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %73, align 8
  %76 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %75, i32 0, i32 0
  %77 = load i32*, i32** %74, align 8
  store i32* %77, i32** %76, align 8
  store i32 -597121333, i32* %14
  br label %78

; <label>:78:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator.1"*, i32*) #1 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %4 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt5dequeIiSaIiEE5emptyEv(%"class.std::deque"*) #1 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.845
  %6 = load i32, i32* @y.846
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -2131353765, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %87
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2131353765, label %18
    i32 909006411, label %38
    i32 1174109713, label %75
    i32 -499966500, label %77
  ]

; <label>:17:                                     ; preds = %15
  br label %87

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 909006411, i32 -499966500
  store i32 %37, i32* %14
  br label %87

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %39, align 8
  %40 = load %"class.std::deque"*, %"class.std::deque"** %39, align 8
  %41 = bitcast %"class.std::deque"* %40 to %"class.std::_Deque_base"*
  %42 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %42, i32 0, i32 3
  %44 = bitcast %"class.std::deque"* %40 to %"class.std::_Deque_base"*
  %45 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %45, i32 0, i32 2
  %47 = call zeroext i1 @_ZSteqIiRiPiEbRKSt15_Deque_iteratorIT_T0_T1_ES8_(%"struct.std::_Deque_iterator"* dereferenceable(32) %43, %"struct.std::_Deque_iterator"* dereferenceable(32) %46) #11
  store i1 %47, i1* %2
  %48 = load i32, i32* @x.845
  %49 = load i32, i32* @y.846
  %50 = sub i32 %48, 405249137
  %51 = sub i32 %50, 1
  %52 = add i32 %51, 405249137
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 1174109713, i32 -499966500
  store i32 %74, i32* %14
  br label %87

; <label>:75:                                     ; preds = %15
  %76 = load volatile i1, i1* %2
  ret i1 %76

; <label>:77:                                     ; preds = %15
  %78 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %78, align 8
  %79 = load %"class.std::deque"*, %"class.std::deque"** %78, align 8
  %80 = bitcast %"class.std::deque"* %79 to %"class.std::_Deque_base"*
  %81 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %81, i32 0, i32 3
  %83 = bitcast %"class.std::deque"* %79 to %"class.std::_Deque_base"*
  %84 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %83, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %84, i32 0, i32 2
  %86 = call zeroext i1 @_ZSteqIiRiPiEbRKSt15_Deque_iteratorIT_T0_T1_ES8_(%"struct.std::_Deque_iterator"* dereferenceable(32) %82, %"struct.std::_Deque_iterator"* dereferenceable(32) %85) #11
  store i32 909006411, i32* %14
  br label %87

; <label>:87:                                     ; preds = %77, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZSteqIiRiPiEbRKSt15_Deque_iteratorIT_T0_T1_ES8_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #1 comdat {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %8, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp eq i32* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEE4backEv(%"class.std::deque"*) #1 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  %3 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  call void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator"* sret %3, %"class.std::deque"* %4) #11
  %5 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorIiRiPiEmmEv(%"struct.std::_Deque_iterator"* %3) #11
  %6 = call dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"* %3) #11
  ret i32* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorIiRiPiEmmEv(%"struct.std::_Deque_iterator"*) #1 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i32*
  %4 = alloca %"struct.std::_Deque_iterator"*
  %5 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %5, align 8
  %6 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %5, align 8
  store %"struct.std::_Deque_iterator"* %6, %"struct.std::_Deque_iterator"** %4
  %7 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %8 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  store i32* %9, i32** %3
  %10 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %11 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %10, i32 0, i32 1
  %12 = load i32*, i32** %11, align 8
  store i32* %12, i32** %2
  %13 = alloca i32
  store i32 1791059722, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %39
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1791059722, label %17
    i32 -4621397, label %22
    i32 -53891060, label %33
  ]

; <label>:16:                                     ; preds = %14
  br label %39

; <label>:17:                                     ; preds = %14
  %18 = load volatile i32*, i32** %3
  %19 = load volatile i32*, i32** %2
  %20 = icmp eq i32* %18, %19
  %21 = select i1 %20, i32 -4621397, i32 -53891060
  store i32 %21, i32* %13
  br label %39

; <label>:22:                                     ; preds = %14
  %23 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %24 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %23, i32 0, i32 3
  %25 = load i32**, i32*** %24, align 8
  %26 = getelementptr inbounds i32*, i32** %25, i64 -1
  %27 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %27, i32** %26) #11
  %28 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %29 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %28, i32 0, i32 2
  %30 = load i32*, i32** %29, align 8
  %31 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %32 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %31, i32 0, i32 0
  store i32* %30, i32** %32, align 8
  store i32 -53891060, i32* %13
  br label %39

; <label>:33:                                     ; preds = %14
  %34 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %35 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %34, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = getelementptr inbounds i32, i32* %36, i32 -1
  store i32* %37, i32** %35, align 8
  %38 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  ret %"struct.std::_Deque_iterator"* %38

; <label>:39:                                     ; preds = %22, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE8pop_backEv(%"class.std::deque"*) #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %5 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 3
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %6, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %10 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %9, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %10, i32 0, i32 3
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %11, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  %14 = icmp ne i32* %8, %13
  br i1 %14, label %15, label %59

; <label>:15:                                     ; preds = %1
  %16 = load i32, i32* @x.853
  %17 = load i32, i32* @y.854
  %18 = sub i32 0, 1
  %19 = add i32 %16, %18
  %20 = sub i32 %16, 1
  %21 = mul i32 %16, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %17, 10
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  br i1 %27, label %29, label %106

; <label>:29:                                     ; preds = %15, %106
  %30 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %31 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %31, i32 0, i32 3
  %33 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %32, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  %35 = getelementptr inbounds i32, i32* %34, i32 -1
  store i32* %35, i32** %33, align 8
  %36 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %37 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %37 to %"class.std::allocator.0"*
  %39 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %40 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %39, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %40, i32 0, i32 3
  %42 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %41, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = load i32, i32* @x.853
  %45 = load i32, i32* @y.854
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  br i1 %55, label %57, label %106

; <label>:57:                                     ; preds = %29
  invoke void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.0"* dereferenceable(1) %38, i32* %43)
          to label %58 unwind label %103

; <label>:58:                                     ; preds = %57
  br label %102

; <label>:59:                                     ; preds = %1
  %60 = load i32, i32* @x.853
  %61 = load i32, i32* @y.854
  %62 = sub i32 %60, -1014343236
  %63 = sub i32 %62, 1
  %64 = add i32 %63, -1014343236
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 true, true
  %73 = and i1 %70, true
  %74 = and i1 %68, %72
  %75 = and i1 %71, true
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 true, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  br i1 %84, label %86, label %121

; <label>:86:                                     ; preds = %59, %121
  %87 = load i32, i32* @x.853
  %88 = load i32, i32* @y.854
  %89 = sub i32 0, 1
  %90 = add i32 %87, %89
  %91 = sub i32 %87, 1
  %92 = mul i32 %87, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %88, 10
  %96 = and i1 %94, %95
  %97 = xor i1 %94, %95
  %98 = or i1 %96, %97
  %99 = or i1 %94, %95
  br i1 %98, label %100, label %121

; <label>:100:                                    ; preds = %86
  invoke void @_ZNSt5dequeIiSaIiEE15_M_pop_back_auxEv(%"class.std::deque"* %3)
          to label %101 unwind label %103

; <label>:101:                                    ; preds = %100
  br label %102

; <label>:102:                                    ; preds = %101, %58
  ret void

; <label>:103:                                    ; preds = %100, %57
  %104 = landingpad { i8*, i32 }
          catch i8* null
  %105 = extractvalue { i8*, i32 } %104, 0
  call void @__clang_call_terminate(i8* %105) #9
  unreachable

; <label>:106:                                    ; preds = %29, %15
  %107 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %108 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %107, i32 0, i32 0
  %109 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %108, i32 0, i32 3
  %110 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %109, i32 0, i32 0
  %111 = load i32*, i32** %110, align 8
  %112 = getelementptr inbounds i32, i32* %111, i32 -1
  store i32* %112, i32** %110, align 8
  %113 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %114 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %113, i32 0, i32 0
  %115 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %114 to %"class.std::allocator.0"*
  %116 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %117 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %116, i32 0, i32 0
  %118 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %117, i32 0, i32 3
  %119 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %118, i32 0, i32 0
  %120 = load i32*, i32** %119, align 8
  br label %29

; <label>:121:                                    ; preds = %86, %59
  br label %86
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE15_M_pop_back_auxEv(%"class.std::deque"*) #2 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.855
  %5 = load i32, i32* @y.856
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1114796612, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %135
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1114796612, label %17
    i32 -1411910390, label %37
    i32 235591907, label %99
    i32 -2016339700, label %100
  ]

; <label>:16:                                     ; preds = %14
  br label %135

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -1411910390, i32 -2016339700
  store i32 %36, i32* %13
  br label %135

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %38, align 8
  %39 = load %"class.std::deque"*, %"class.std::deque"** %38, align 8
  %40 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %41 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %42 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %42, i32 0, i32 3
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %43, i32 0, i32 1
  %45 = load i32*, i32** %44, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %40, i32* %45) #11
  %46 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %47 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %46, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %47, i32 0, i32 3
  %49 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %50 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %49, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %50, i32 0, i32 3
  %52 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %51, i32 0, i32 3
  %53 = load i32**, i32*** %52, align 8
  %54 = getelementptr inbounds i32*, i32** %53, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %48, i32** %54) #11
  %55 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %56 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %55, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %56, i32 0, i32 3
  %58 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %57, i32 0, i32 2
  %59 = load i32*, i32** %58, align 8
  %60 = getelementptr inbounds i32, i32* %59, i64 -1
  %61 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %62 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %61, i32 0, i32 0
  %63 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %62, i32 0, i32 3
  %64 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %63, i32 0, i32 0
  store i32* %60, i32** %64, align 8
  %65 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %66 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %65) #11
  %67 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %68 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %67, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %68, i32 0, i32 3
  %70 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %69, i32 0, i32 0
  %71 = load i32*, i32** %70, align 8
  call void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.0"* dereferenceable(1) %66, i32* %71)
  %72 = load i32, i32* @x.855
  %73 = load i32, i32* @y.856
  %74 = add i32 %72, -1081769855
  %75 = sub i32 %74, 1
  %76 = sub i32 %75, -1081769855
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = xor i1 %80, true
  %83 = xor i1 %81, true
  %84 = xor i1 false, true
  %85 = and i1 %82, false
  %86 = and i1 %80, %84
  %87 = and i1 %83, false
  %88 = and i1 %81, %84
  %89 = or i1 %85, %86
  %90 = or i1 %87, %88
  %91 = xor i1 %89, %90
  %92 = or i1 %82, %83
  %93 = xor i1 %92, true
  %94 = or i1 false, %84
  %95 = and i1 %93, %94
  %96 = or i1 %91, %95
  %97 = or i1 %80, %81
  %98 = select i1 %96, i32 235591907, i32 -2016339700
  store i32 %98, i32* %13
  br label %135

; <label>:99:                                     ; preds = %14
  ret void

; <label>:100:                                    ; preds = %14
  %101 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %101, align 8
  %102 = load %"class.std::deque"*, %"class.std::deque"** %101, align 8
  %103 = bitcast %"class.std::deque"* %102 to %"class.std::_Deque_base"*
  %104 = bitcast %"class.std::deque"* %102 to %"class.std::_Deque_base"*
  %105 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %104, i32 0, i32 0
  %106 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %105, i32 0, i32 3
  %107 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %106, i32 0, i32 1
  %108 = load i32*, i32** %107, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %103, i32* %108) #11
  %109 = bitcast %"class.std::deque"* %102 to %"class.std::_Deque_base"*
  %110 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %109, i32 0, i32 0
  %111 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %110, i32 0, i32 3
  %112 = bitcast %"class.std::deque"* %102 to %"class.std::_Deque_base"*
  %113 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %112, i32 0, i32 0
  %114 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %113, i32 0, i32 3
  %115 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %114, i32 0, i32 3
  %116 = load i32**, i32*** %115, align 8
  %117 = getelementptr inbounds i32*, i32** %116, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %111, i32** %117) #11
  %118 = bitcast %"class.std::deque"* %102 to %"class.std::_Deque_base"*
  %119 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %118, i32 0, i32 0
  %120 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %119, i32 0, i32 3
  %121 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %120, i32 0, i32 2
  %122 = load i32*, i32** %121, align 8
  %123 = getelementptr inbounds i32, i32* %122, i64 -1
  %124 = bitcast %"class.std::deque"* %102 to %"class.std::_Deque_base"*
  %125 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %124, i32 0, i32 0
  %126 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %125, i32 0, i32 3
  %127 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %126, i32 0, i32 0
  store i32* %123, i32** %127, align 8
  %128 = bitcast %"class.std::deque"* %102 to %"class.std::_Deque_base"*
  %129 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %128) #11
  %130 = bitcast %"class.std::deque"* %102 to %"class.std::_Deque_base"*
  %131 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %130, i32 0, i32 0
  %132 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %131, i32 0, i32 3
  %133 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %132, i32 0, i32 0
  %134 = load i32*, i32** %133, align 8
  call void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.0"* dereferenceable(1) %129, i32* %134)
  store i32 -1411910390, i32* %13
  br label %135

; <label>:135:                                    ; preds = %100, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE9push_backERKi(%"class.std::deque"*, i32* dereferenceable(4)) #2 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i32*
  %5 = alloca %"class.std::deque"*
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca i32*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %6, align 8
  store i32* %1, i32** %7, align 8
  %8 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  store %"class.std::deque"* %8, %"class.std::deque"** %5
  %9 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %10 = bitcast %"class.std::deque"* %9 to %"class.std::_Deque_base"*
  %11 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %11, i32 0, i32 3
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %12, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  store i32* %14, i32** %4
  %15 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %16 = bitcast %"class.std::deque"* %15 to %"class.std::_Deque_base"*
  %17 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %16, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %17, i32 0, i32 3
  %19 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %18, i32 0, i32 2
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 -1
  store i32* %21, i32** %3
  %22 = alloca i32
  store i32 1468847152, i32* %22
  br label %23

; <label>:23:                                     ; preds = %2, %54
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 1468847152, label %26
    i32 -934533060, label %31
    i32 -953071987, label %50
    i32 -866144566, label %53
  ]

; <label>:25:                                     ; preds = %23
  br label %54

; <label>:26:                                     ; preds = %23
  %27 = load volatile i32*, i32** %4
  %28 = load volatile i32*, i32** %3
  %29 = icmp ne i32* %27, %28
  %30 = select i1 %29, i32 -934533060, i32 -953071987
  store i32 %30, i32* %22
  br label %54

; <label>:31:                                     ; preds = %23
  %32 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %33 = bitcast %"class.std::deque"* %32 to %"class.std::_Deque_base"*
  %34 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %33, i32 0, i32 0
  %35 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %34 to %"class.std::allocator.0"*
  %36 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %37 = bitcast %"class.std::deque"* %36 to %"class.std::_Deque_base"*
  %38 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %38, i32 0, i32 3
  %40 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %39, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = load i32*, i32** %7, align 8
  call void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.0"* dereferenceable(1) %35, i32* %41, i32* dereferenceable(4) %42)
  %43 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %44 = bitcast %"class.std::deque"* %43 to %"class.std::_Deque_base"*
  %45 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %45, i32 0, i32 3
  %47 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %46, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = getelementptr inbounds i32, i32* %48, i32 1
  store i32* %49, i32** %47, align 8
  store i32 -866144566, i32* %22
  br label %54

; <label>:50:                                     ; preds = %23
  %51 = load i32*, i32** %7, align 8
  %52 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  call void @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_(%"class.std::deque"* %52, i32* dereferenceable(4) %51)
  store i32 -866144566, i32* %22
  br label %54

; <label>:53:                                     ; preds = %23
  ret void

; <label>:54:                                     ; preds = %50, %31, %26, %25
  br label %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.0"* dereferenceable(1), i32*, i32* dereferenceable(4)) #2 comdat align 2 {
  %4 = alloca %"class.std::allocator.0"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %4, align 8
  %8 = bitcast %"class.std::allocator.0"* %7 to %"class.__gnu_cxx::new_allocator.1"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %10) #11
  call void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.1"* %8, i32* %9, i32* dereferenceable(4) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_(%"class.std::deque"*, i32* dereferenceable(4)) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store i32* %1, i32** %4, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  call void @_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm(%"class.std::deque"* %7, i64 1)
  %8 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %9 = call i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %8)
  %10 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %11 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %11, i32 0, i32 3
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %12, i32 0, i32 3
  %14 = load i32**, i32*** %13, align 8
  %15 = getelementptr inbounds i32*, i32** %14, i64 1
  store i32* %9, i32** %15, align 8
  %16 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %17 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %17 to %"class.std::allocator.0"*
  %19 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %20, i32 0, i32 3
  %22 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %21, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = load i32*, i32** %4, align 8
  %25 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %24) #11
  invoke void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.0"* dereferenceable(1) %18, i32* %23, i32* dereferenceable(4) %25)
          to label %26 unwind label %45

; <label>:26:                                     ; preds = %2
  %27 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %28 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %28, i32 0, i32 3
  %30 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %31 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %31, i32 0, i32 3
  %33 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %32, i32 0, i32 3
  %34 = load i32**, i32*** %33, align 8
  %35 = getelementptr inbounds i32*, i32** %34, i64 1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %29, i32** %35) #11
  %36 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %37 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %37, i32 0, i32 3
  %39 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %38, i32 0, i32 1
  %40 = load i32*, i32** %39, align 8
  %41 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %42 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %42, i32 0, i32 3
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %43, i32 0, i32 0
  store i32* %40, i32** %44, align 8
  br label %178

; <label>:45:                                     ; preds = %2
  %46 = load i32, i32* @x.861
  %47 = load i32, i32* @y.862
  %48 = sub i32 %46, 1429873734
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 1429873734
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  br i1 %58, label %60, label %325

; <label>:60:                                     ; preds = %45, %325
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %5, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %6, align 4
  %64 = load i32, i32* @x.861
  %65 = load i32, i32* @y.862
  %66 = sub i32 %64, 34522979
  %67 = sub i32 %66, 1
  %68 = add i32 %67, 34522979
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 true, true
  %77 = and i1 %74, true
  %78 = and i1 %72, %76
  %79 = and i1 %75, true
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 true, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  br i1 %88, label %90, label %325

; <label>:90:                                     ; preds = %60
  br label %91

; <label>:91:                                     ; preds = %90
  %92 = load i32, i32* @x.861
  %93 = load i32, i32* @y.862
  %94 = sub i32 0, 1
  %95 = add i32 %92, %94
  %96 = sub i32 %92, 1
  %97 = mul i32 %92, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %93, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  br i1 %103, label %105, label %329

; <label>:105:                                    ; preds = %91, %329
  %106 = load i8*, i8** %5, align 8
  %107 = call i8* @__cxa_begin_catch(i8* %106) #11
  %108 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %109 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %110 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %109, i32 0, i32 0
  %111 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %110, i32 0, i32 3
  %112 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %111, i32 0, i32 3
  %113 = load i32**, i32*** %112, align 8
  %114 = getelementptr inbounds i32*, i32** %113, i64 1
  %115 = load i32*, i32** %114, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %108, i32* %115) #11
  %116 = load i32, i32* @x.861
  %117 = load i32, i32* @y.862
  %118 = sub i32 %116, 516516006
  %119 = sub i32 %118, 1
  %120 = add i32 %119, 516516006
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = xor i1 %124, true
  %127 = xor i1 %125, true
  %128 = xor i1 false, true
  %129 = and i1 %126, false
  %130 = and i1 %124, %128
  %131 = and i1 %127, false
  %132 = and i1 %125, %128
  %133 = or i1 %129, %130
  %134 = or i1 %131, %132
  %135 = xor i1 %133, %134
  %136 = or i1 %126, %127
  %137 = xor i1 %136, true
  %138 = or i1 false, %128
  %139 = and i1 %137, %138
  %140 = or i1 %135, %139
  %141 = or i1 %124, %125
  br i1 %140, label %142, label %329

; <label>:142:                                    ; preds = %105
  invoke void @__cxa_rethrow() #13
          to label %270 unwind label %143

; <label>:143:                                    ; preds = %142
  %144 = landingpad { i8*, i32 }
          cleanup
  %145 = extractvalue { i8*, i32 } %144, 0
  store i8* %145, i8** %5, align 8
  %146 = extractvalue { i8*, i32 } %144, 1
  store i32 %146, i32* %6, align 4
  invoke void @__cxa_end_catch()
          to label %147 unwind label %267

; <label>:147:                                    ; preds = %143
  %148 = load i32, i32* @x.861
  %149 = load i32, i32* @y.862
  %150 = add i32 %148, -420727356
  %151 = sub i32 %150, 1
  %152 = sub i32 %151, -420727356
  %153 = sub i32 %148, 1
  %154 = mul i32 %148, %152
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %149, 10
  %158 = and i1 %156, %157
  %159 = xor i1 %156, %157
  %160 = or i1 %158, %159
  %161 = or i1 %156, %157
  br i1 %160, label %162, label %340

; <label>:162:                                    ; preds = %147, %340
  %163 = load i32, i32* @x.861
  %164 = load i32, i32* @y.862
  %165 = sub i32 %163, 85718422
  %166 = sub i32 %165, 1
  %167 = add i32 %166, 85718422
  %168 = sub i32 %163, 1
  %169 = mul i32 %163, %167
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %164, 10
  %173 = and i1 %171, %172
  %174 = xor i1 %171, %172
  %175 = or i1 %173, %174
  %176 = or i1 %171, %172
  br i1 %175, label %177, label %340

; <label>:177:                                    ; preds = %162
  br label %220

; <label>:178:                                    ; preds = %26
  %179 = load i32, i32* @x.861
  %180 = load i32, i32* @y.862
  %181 = sub i32 0, 1
  %182 = add i32 %179, %181
  %183 = sub i32 %179, 1
  %184 = mul i32 %179, %182
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %180, 10
  %188 = and i1 %186, %187
  %189 = xor i1 %186, %187
  %190 = or i1 %188, %189
  %191 = or i1 %186, %187
  br i1 %190, label %192, label %341

; <label>:192:                                    ; preds = %178, %341
  %193 = load i32, i32* @x.861
  %194 = load i32, i32* @y.862
  %195 = add i32 %193, 1991639107
  %196 = sub i32 %195, 1
  %197 = sub i32 %196, 1991639107
  %198 = sub i32 %193, 1
  %199 = mul i32 %193, %197
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %194, 10
  %203 = xor i1 %201, true
  %204 = xor i1 %202, true
  %205 = xor i1 false, true
  %206 = and i1 %203, false
  %207 = and i1 %201, %205
  %208 = and i1 %204, false
  %209 = and i1 %202, %205
  %210 = or i1 %206, %207
  %211 = or i1 %208, %209
  %212 = xor i1 %210, %211
  %213 = or i1 %203, %204
  %214 = xor i1 %213, true
  %215 = or i1 false, %205
  %216 = and i1 %214, %215
  %217 = or i1 %212, %216
  %218 = or i1 %201, %202
  br i1 %217, label %219, label %341

; <label>:219:                                    ; preds = %192
  ret void

; <label>:220:                                    ; preds = %177
  %221 = load i32, i32* @x.861
  %222 = load i32, i32* @y.862
  %223 = add i32 %221, -867646732
  %224 = sub i32 %223, 1
  %225 = sub i32 %224, -867646732
  %226 = sub i32 %221, 1
  %227 = mul i32 %221, %225
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %222, 10
  %231 = xor i1 %229, true
  %232 = xor i1 %230, true
  %233 = xor i1 true, true
  %234 = and i1 %231, true
  %235 = and i1 %229, %233
  %236 = and i1 %232, true
  %237 = and i1 %230, %233
  %238 = or i1 %234, %235
  %239 = or i1 %236, %237
  %240 = xor i1 %238, %239
  %241 = or i1 %231, %232
  %242 = xor i1 %241, true
  %243 = or i1 true, %233
  %244 = and i1 %242, %243
  %245 = or i1 %240, %244
  %246 = or i1 %229, %230
  br i1 %245, label %247, label %342

; <label>:247:                                    ; preds = %220, %342
  %248 = load i8*, i8** %5, align 8
  %249 = load i32, i32* %6, align 4
  %250 = insertvalue { i8*, i32 } undef, i8* %248, 0
  %251 = insertvalue { i8*, i32 } %250, i32 %249, 1
  %252 = load i32, i32* @x.861
  %253 = load i32, i32* @y.862
  %254 = add i32 %252, 303537054
  %255 = sub i32 %254, 1
  %256 = sub i32 %255, 303537054
  %257 = sub i32 %252, 1
  %258 = mul i32 %252, %256
  %259 = urem i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %253, 10
  %262 = and i1 %260, %261
  %263 = xor i1 %260, %261
  %264 = or i1 %262, %263
  %265 = or i1 %260, %261
  br i1 %264, label %266, label %342

; <label>:266:                                    ; preds = %247
  resume { i8*, i32 } %251

; <label>:267:                                    ; preds = %143
  %268 = landingpad { i8*, i32 }
          catch i8* null
  %269 = extractvalue { i8*, i32 } %268, 0
  call void @__clang_call_terminate(i8* %269) #9
  unreachable

; <label>:270:                                    ; preds = %142
  %271 = load i32, i32* @x.861
  %272 = load i32, i32* @y.862
  %273 = sub i32 %271, 306397123
  %274 = sub i32 %273, 1
  %275 = add i32 %274, 306397123
  %276 = sub i32 %271, 1
  %277 = mul i32 %271, %275
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %272, 10
  %281 = xor i1 %279, true
  %282 = xor i1 %280, true
  %283 = xor i1 true, true
  %284 = and i1 %281, true
  %285 = and i1 %279, %283
  %286 = and i1 %282, true
  %287 = and i1 %280, %283
  %288 = or i1 %284, %285
  %289 = or i1 %286, %287
  %290 = xor i1 %288, %289
  %291 = or i1 %281, %282
  %292 = xor i1 %291, true
  %293 = or i1 true, %283
  %294 = and i1 %292, %293
  %295 = or i1 %290, %294
  %296 = or i1 %279, %280
  br i1 %295, label %297, label %347

; <label>:297:                                    ; preds = %270, %347
  %298 = load i32, i32* @x.861
  %299 = load i32, i32* @y.862
  %300 = add i32 %298, 2119006241
  %301 = sub i32 %300, 1
  %302 = sub i32 %301, 2119006241
  %303 = sub i32 %298, 1
  %304 = mul i32 %298, %302
  %305 = urem i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %299, 10
  %308 = xor i1 %306, true
  %309 = xor i1 %307, true
  %310 = xor i1 false, true
  %311 = and i1 %308, false
  %312 = and i1 %306, %310
  %313 = and i1 %309, false
  %314 = and i1 %307, %310
  %315 = or i1 %311, %312
  %316 = or i1 %313, %314
  %317 = xor i1 %315, %316
  %318 = or i1 %308, %309
  %319 = xor i1 %318, true
  %320 = or i1 false, %310
  %321 = and i1 %319, %320
  %322 = or i1 %317, %321
  %323 = or i1 %306, %307
  br i1 %322, label %324, label %347

; <label>:324:                                    ; preds = %297
  unreachable

; <label>:325:                                    ; preds = %60, %45
  %326 = landingpad { i8*, i32 }
          catch i8* null
  %327 = extractvalue { i8*, i32 } %326, 0
  store i8* %327, i8** %5, align 8
  %328 = extractvalue { i8*, i32 } %326, 1
  store i32 %328, i32* %6, align 4
  br label %60

; <label>:329:                                    ; preds = %105, %91
  %330 = load i8*, i8** %5, align 8
  %331 = call i8* @__cxa_begin_catch(i8* %330) #11
  %332 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %333 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %334 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %333, i32 0, i32 0
  %335 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %334, i32 0, i32 3
  %336 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %335, i32 0, i32 3
  %337 = load i32**, i32*** %336, align 8
  %338 = getelementptr inbounds i32*, i32** %337, i64 1
  %339 = load i32*, i32** %338, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %332, i32* %339) #11
  br label %105

; <label>:340:                                    ; preds = %162, %147
  br label %162

; <label>:341:                                    ; preds = %192, %178
  br label %192

; <label>:342:                                    ; preds = %247, %220
  %343 = load i8*, i8** %5, align 8
  %344 = load i32, i32* %6, align 4
  %345 = insertvalue { i8*, i32 } undef, i8* %343, 0
  %346 = insertvalue { i8*, i32 } %345, i32 %344, 1
  br label %247

; <label>:347:                                    ; preds = %297, %270
  br label %297
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.1"*, i32*, i32* dereferenceable(4)) #1 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.863
  %7 = load i32, i32* @y.864
  %8 = sub i32 %6, 1847385641
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1847385641
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -978744882, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %65
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -978744882, label %20
    i32 1952350185, label %28
    i32 -1110890911, label %53
    i32 1450858113, label %54
  ]

; <label>:19:                                     ; preds = %17
  br label %65

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1952350185, i32 1450858113
  store i32 %27, i32* %16
  br label %65

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %30 = alloca i32*, align 8
  %31 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %29, align 8
  store i32* %1, i32** %30, align 8
  store i32* %2, i32** %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %29, align 8
  %33 = load i32*, i32** %30, align 8
  %34 = bitcast i32* %33 to i8*
  %35 = bitcast i8* %34 to i32*
  %36 = load i32*, i32** %31, align 8
  %37 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %36) #11
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %35, align 4
  %39 = load i32, i32* @x.863
  %40 = load i32, i32* @y.864
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -1110890911, i32 1450858113
  store i32 %52, i32* %16
  br label %65

; <label>:53:                                     ; preds = %17
  ret void

; <label>:54:                                     ; preds = %17
  %55 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %56 = alloca i32*, align 8
  %57 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %55, align 8
  store i32* %1, i32** %56, align 8
  store i32* %2, i32** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %55, align 8
  %59 = load i32*, i32** %56, align 8
  %60 = bitcast i32* %59 to i8*
  %61 = bitcast i8* %60 to i32*
  %62 = load i32*, i32** %57, align 8
  %63 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %62) #11
  %64 = load i32, i32* %63, align 4
  store i32 %64, i32* %61, align 4
  store i32 1952350185, i32* %16
  br label %65

; <label>:65:                                     ; preds = %54, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4)) #1 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

attributes #0 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline noreturn nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { nounwind readonly }
attributes #13 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
