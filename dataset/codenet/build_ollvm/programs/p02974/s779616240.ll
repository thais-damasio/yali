; ModuleID = 'Project_CodeNet_C++1400/p02974/s779616240.cpp'
source_filename = "Project_CodeNet_C++1400/p02974/s779616240.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"struct.std::piecewise_construct_t" = type { i8 }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl" = type { %"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"* }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl" = type { %"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"* }
%"class.std::unordered_map" = type { %"class.std::_Hashtable" }
%"class.std::_Hashtable" = type { %"struct.std::__detail::_Hash_node_base"**, i64, %"struct.std::__detail::_Hash_node_base", i64, %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Hash_node_base"* }
%"struct.std::__detail::_Hash_node_base" = type { %"struct.std::__detail::_Hash_node_base"* }
%"struct.std::__detail::_Prime_rehash_policy" = type { float, i64 }
%"struct.std::pair" = type { i32, i64 }
%"struct.std::__detail::_Node_iterator" = type { %"struct.std::__detail::_Node_iterator_base" }
%"struct.std::__detail::_Node_iterator_base" = type { %"struct.std::__detail::_Hash_node"* }
%"struct.std::__detail::_Hash_node" = type { %"struct.std::__detail::_Hash_node_value_base" }
%"struct.std::__detail::_Hash_node_value_base" = type { %"struct.std::__detail::_Hash_node_base", %"struct.__gnu_cxx::__aligned_buffer" }
%"struct.__gnu_cxx::__aligned_buffer" = type { %"union.std::aligned_storage<16, 8>::type" }
%"union.std::aligned_storage<16, 8>::type" = type { [16 x i8] }
%"class.std::allocator.2" = type { i8 }
%"struct.std::__detail::_Map_base" = type { i8 }
%"class.std::allocator" = type { i8 }
%"struct.std::__detail::_Hashtable_base" = type { i8 }
%"struct.std::__detail::_Insert" = type { i8 }
%"struct.std::__detail::_Rehash_base" = type { i8 }
%"struct.std::__detail::_Equality" = type { i8 }
%"struct.std::__detail::_Hashtable_alloc" = type { i8 }
%"struct.std::__detail::_Hashtable_ebo_helper.8" = type { i8 }
%"class.std::allocator.9" = type { i8 }
%"class.__gnu_cxx::new_allocator.10" = type { i8 }
%"class.std::allocator.12" = type { i8 }
%"class.__gnu_cxx::new_allocator.13" = type { i8 }
%"class.std::allocator.15" = type { i8 }
%"class.__gnu_cxx::new_allocator.16" = type { i8 }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.__gnu_cxx::new_allocator.3" = type { i8 }
%"class.__gnu_cxx::__normal_iterator" = type { %"class.std::vector.0"* }
%"class.__gnu_cxx::__normal_iterator.19" = type { %"class.std::unordered_map"* }
%"class.__gnu_cxx::__normal_iterator.18" = type { %"class.std::unordered_map"* }
%class.anon = type { %"class.std::_Hashtable"* }
%"struct.std::__detail::_Hash_code_base" = type { i8 }
%"struct.std::__detail::_Mod_range_hashing" = type { i8 }
%"struct.std::hash" = type { i8 }
%"struct.std::__detail::_Select1st" = type { i8 }
%"struct.std::__detail::_Hashtable_ebo_helper.6" = type { i8 }
%"struct.std::__detail::_Hashtable_ebo_helper.5" = type { i8 }
%"struct.std::__detail::_Hashtable_ebo_helper" = type { i8 }
%"struct.std::__detail::_ReuseOrAllocNode" = type { %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hashtable_alloc"* }
%class.anon.20 = type { %"struct.std::__detail::_ReuseOrAllocNode"* }
%"class.std::tuple" = type { %"struct.std::_Tuple_impl" }
%"struct.std::_Tuple_impl" = type { %"struct.std::_Head_base" }
%"struct.std::_Head_base" = type { i32* }
%"class.std::tuple.21" = type { i8 }
%"struct.std::pair.23" = type { i8, i64 }
%"struct.std::equal_to" = type { i8 }
%"struct.std::__detail::_Hashtable_ebo_helper.7" = type { i8 }
%"struct.std::_Index_tuple" = type { i8 }
%"struct.std::_Index_tuple.22" = type { i8 }
%"struct.std::integral_constant" = type { i8 }
%"class.std::tuple.24" = type { %"struct.std::_Tuple_impl.25" }
%"struct.std::_Tuple_impl.25" = type { %"struct.std::_Head_base.26" }
%"struct.std::_Head_base.26" = type { i32* }

$_ZNKSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE4sizeEv = comdat any

$_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm = comdat any

$_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE4sizeEv = comdat any

$_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEixEm = comdat any

$_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEE5beginEv = comdat any

$_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEE3endEv = comdat any

$_ZNSt8__detailneISt4pairIKixELb0EEEbRKNS_19_Node_iterator_baseIT_XT0_EEES8_ = comdat any

$_ZNKSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEdeEv = comdat any

$_ZNSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEppEv = comdat any

$_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEC2Ev = comdat any

$_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE6assignEmRKSB_ = comdat any

$_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2Ev = comdat any

$_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EED2Ev = comdat any

$_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE6assignEmRKS9_ = comdat any

$_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEC2Ev = comdat any

$_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEED2Ev = comdat any

$_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEixEOi = comdat any

$_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE5clearEv = comdat any

$_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEixERS5_ = comdat any

$_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EED2Ev = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEC2Ev = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEEC2Ev = comdat any

$_ZNSt8__detail15_Hash_node_baseC2Ev = comdat any

$_ZNSt8__detail20_Prime_rehash_policyC2Ef = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EEC2Ev = comdat any

$_ZNSaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEC2Ev = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEED2Ev = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_deallocate_bucketsEv = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE19_M_deallocate_nodesEPS5_ = comdat any

$_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_beginEv = comdat any

$_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE18_M_deallocate_nodeEPS5_ = comdat any

$_ZNSt14pointer_traitsIPNSt8__detail10_Hash_nodeISt4pairIKixELb0EEEE10pointer_toERS5_ = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv = comdat any

$_ZNSaISt4pairIKixEEC2INSt8__detail10_Hash_nodeIS1_Lb0EEEEERKSaIT_E = comdat any

$_ZNSt16allocator_traitsISaISt4pairIKixEEE7destroyIS2_EEvRS3_PT_ = comdat any

$_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv = comdat any

$_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE10deallocateERS6_PS5_m = comdat any

$_ZNSaISt4pairIKixEED2Ev = comdat any

$_ZSt9addressofINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEPT_RS6_ = comdat any

$_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEPT_RS6_ = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EE6_S_getERS7_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIKixEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIKixEE7destroyIS3_EEvPT_ = comdat any

$_ZN9__gnu_cxx16__aligned_bufferISt4pairIKixEE6_M_ptrEv = comdat any

$_ZN9__gnu_cxx16__aligned_bufferISt4pairIKixEE7_M_addrEv = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEE10deallocateEPS6_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIKixEED2Ev = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_deallocate_bucketsEPPNS4_15_Hash_node_baseEm = comdat any

$_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_uses_single_bucketEPPNS4_15_Hash_node_baseE = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm = comdat any

$_ZNSt14pointer_traitsIPPNSt8__detail15_Hash_node_baseEE10pointer_toERS2_ = comdat any

$_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeISt4pairIKixELb0EEEEERKSaIT_E = comdat any

$_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE10deallocateERS3_PS2_m = comdat any

$_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev = comdat any

$_ZSt9addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_ = comdat any

$_ZSt11__addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEED2Ev = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEED2Ev = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE5beginEv = comdat any

$_ZNSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEC2EPNS_10_Hash_nodeIS3_Lb0EEE = comdat any

$_ZNSt8__detail19_Node_iterator_baseISt4pairIKixELb0EEC2EPNS_10_Hash_nodeIS3_Lb0EEE = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE3endEv = comdat any

$_ZNSt8__detail19_Node_iterator_baseISt4pairIKixELb0EE7_M_incrEv = comdat any

$_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE4_M_vEv = comdat any

$_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEEC2Ev = comdat any

$_ZSt8_DestroyIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESC_EvT_SE_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EED2Ev = comdat any

$_ZSt8_DestroyIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEvT_SE_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EEEEvT_SG_ = comdat any

$_ZSt8_DestroyISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEvPT_ = comdat any

$_ZSt11__addressofISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEPT_RSD_ = comdat any

$_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE13_M_deallocateEPSC_m = comdat any

$_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEE10deallocateERSD_PSC_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEE10deallocateEPSD_m = comdat any

$_ZNSaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEED2Ev = comdat any

$_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEC2Ev = comdat any

$_ZSt8_DestroyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEES9_EvT_SB_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EED2Ev = comdat any

$_ZSt8_DestroyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvT_SB_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEEvT_SD_ = comdat any

$_ZSt8_DestroyISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvPT_ = comdat any

$_ZSt11__addressofISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEPT_RSA_ = comdat any

$_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE13_M_deallocateEPS9_m = comdat any

$_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEE10deallocateERSA_PS9_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEE10deallocateEPSA_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEED2Ev = comdat any

$_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE14_M_fill_assignEmRKSB_ = comdat any

$_ZNKSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE8capacityEv = comdat any

$_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEC2EmRKSB_RKSC_ = comdat any

$_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_impl12_M_swap_dataERSF_ = comdat any

$_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EES2_ISE_SaISE_EEEESE_EvT_SJ_RKT0_ = comdat any

$_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE5beginEv = comdat any

$_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE3endEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEmSC_SC_ET_SE_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE15_M_erase_at_endEPSB_ = comdat any

$_ZSt6fill_nIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEmSC_ET_SE_T0_RKT1_ = comdat any

$_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EEC2EmRKSD_ = comdat any

$_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE18_M_fill_initializeEmRKSB_ = comdat any

$_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_implC2ERKSD_ = comdat any

$_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE17_M_create_storageEm = comdat any

$_ZNSaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEEC2ERKSC_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEEC2ERKSE_ = comdat any

$_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEE8allocateERSD_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEE8max_sizeEv = comdat any

$_ZSt4swapIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEvRT_SF_ = comdat any

$_ZSt4moveIRPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEONSt16remove_referenceIT_E4typeEOSG_ = comdat any

$_ZSt8__fill_aIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESC_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SJ_RKSG_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EES2_ISE_SaISE_EEEEENSt11_Niter_baseIT_E13iterator_typeESK_ = comdat any

$_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEaSERKSB_ = comdat any

$_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE8capacityEv = comdat any

$_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS9_SB_EEEEPS9_mT_SJ_ = comdat any

$_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE5beginEv = comdat any

$_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE3endEv = comdat any

$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEESB_EvT_SH_RSaIT0_E = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEENS1_IPSB_SG_EEET0_T_SL_SK_ = comdat any

$_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE5beginEv = comdat any

$_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE3endEv = comdat any

$_ZSt4copyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_ET0_T_SC_SB_ = comdat any

$_ZSt22__uninitialized_copy_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_S9_ET0_T_SC_SB_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE11_M_allocateEm = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEPSB_SB_ET0_T_SK_SJ_RSaIT1_E = comdat any

$_ZNSt16allocator_traitsISaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEE8allocateERSA_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEE8max_sizeEv = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEPSB_ET0_T_SK_SJ_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISD_SaISD_EEEEPSD_EET0_T_SM_SL_ = comdat any

$_ZN9__gnu_cxxneIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEEbRKNS_17__normal_iteratorIT_T0_EESL_ = comdat any

$_ZSt10_ConstructISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEJRKS9_EEvPT_DpOT0_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEppEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEE4baseEv = comdat any

$_ZSt7forwardIRKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEOT_RNSt16remove_referenceISC_E4typeE = comdat any

$_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEC2ERKS8_ = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEC2ERKSF_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE17_S_select_on_copyERKS7_ = comdat any

$_ZNKSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEEC2IS6_EEOT_ = comdat any

$_ZNSaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEED2Ev = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_assignIZNSF_C1ERKSF_EUlPKNS4_10_Hash_nodeIS2_Lb0EEEE_EEvSI_RKT_ = comdat any

$_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE37select_on_container_copy_constructionERKS6_ = comdat any

$_ZNSaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEC2ERKS5_ = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEC2ERKS7_ = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EE7_S_cgetERKS7_ = comdat any

$_ZSt7forwardISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEEOT_RNSt16remove_referenceIS7_E4typeE = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EEC2IS6_EEOT_ = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_allocate_bucketsEm = comdat any

$_ZZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEC1ERKSF_ENKUlPKNS4_10_Hash_nodeIS2_Lb0EEEE_clESL_ = comdat any

$_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE12_M_copy_codeEPNS_10_Hash_nodeIS3_Lb0EEEPKSB_ = comdat any

$_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexEPNS4_10_Hash_nodeIS2_Lb0EEE = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE19_M_allocate_bucketsEm = comdat any

$_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8max_sizeEv = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE16_M_allocate_nodeIJRKS4_EEEPS5_DpOT_ = comdat any

$_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKixEE4_M_vEv = comdat any

$_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE8allocateERS6_m = comdat any

$_ZNSt8__detail10_Hash_nodeISt4pairIKixELb0EEC2Ev = comdat any

$_ZNSt16allocator_traitsISaISt4pairIKixEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_ = comdat any

$_ZSt7forwardIRKSt4pairIKixEEOT_RNSt16remove_referenceIS5_E4typeE = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEE8max_sizeEv = comdat any

$_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIKixEE9constructIS3_JRKS3_EEEvPT_DpOT0_ = comdat any

$_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKixEE6_M_ptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKixEE7_M_addrEv = comdat any

$_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE15_M_bucket_indexEPKNS_10_Hash_nodeIS3_Lb0EEEm = comdat any

$_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE5_M_h2Ev = comdat any

$_ZNKSt8__detail18_Mod_range_hashingclEmm = comdat any

$_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE5_M_h1Ev = comdat any

$_ZNKSt4hashIiEclEi = comdat any

$_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE10_M_extractEv = comdat any

$_ZNKSt8__detail10_Select1stclIRKSt4pairIKixEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS7_ = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi2ENS_18_Mod_range_hashingELb1EE7_S_cgetERKS2_ = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi1ESt4hashIiELb1EE7_S_cgetERKS3_ = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_10_Select1stELb1EE7_S_cgetERKS2_ = comdat any

$_ZSt3getILm0EKixERKNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERKS5_ = comdat any

$_ZNSt10__pair_getILm0EE11__const_getIKixEERKT_RKSt4pairIS3_T0_E = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEC2ERKSC_ = comdat any

$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEEvT_SH_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISD_SaISD_EEEEEEvT_SJ_ = comdat any

$_ZN9__gnu_cxxneIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEEbRKNS_17__normal_iteratorIT_T0_EESK_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEppEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEE4baseEv = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEENS1_IPSB_SG_EEET1_T0_SL_SK_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEENSt11_Miter_baseIT_E13iterator_typeESJ_ = comdat any

$_ZSt13__copy_move_aILb0EPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEPS9_ET1_T0_SE_SD_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEENSt11_Niter_baseIT_E13iterator_typeESJ_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEENSt11_Niter_baseIT_E13iterator_typeESI_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEC2ERKSB_ = comdat any

$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEPSC_EET0_T_SH_SG_ = comdat any

$_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEaSERKS8_ = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEaSERKSF_ = comdat any

$_ZNKSt8__detail20_Prime_rehash_policy8_M_stateEv = comdat any

$_ZNSt8__detail17_ReuseOrAllocNodeISaINS_10_Hash_nodeISt4pairIKixELb0EEEEEC2EPS5_RNS_16_Hashtable_allocIS6_EE = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_assignIZNSF_aSERKSF_EUlPKNS4_10_Hash_nodeIS2_Lb0EEEE0_EEvSI_RKT_ = comdat any

$_ZNSt8__detail17_ReuseOrAllocNodeISaINS_10_Hash_nodeISt4pairIKixELb0EEEEED2Ev = comdat any

$_ZNSt8__detail20_Prime_rehash_policy8_M_resetEm = comdat any

$_ZZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEaSERKSF_ENKUlPKNS4_10_Hash_nodeIS2_Lb0EEEE0_clESL_ = comdat any

$_ZNKSt8__detail17_ReuseOrAllocNodeISaINS_10_Hash_nodeISt4pairIKixELb0EEEEEclIRKS4_EEPS5_OT_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEELb1EE7_S_baseESH_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEELb1EE7_S_baseESG_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEELb0EE7_S_baseESH_ = comdat any

$_ZSt14__copy_move_a2ILb0EPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_ET1_T0_SC_SB_ = comdat any

$_ZSt12__miter_baseIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEENSt11_Miter_baseIT_E13iterator_typeESC_ = comdat any

$_ZSt13__copy_move_aILb0EPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_ET1_T0_SC_SB_ = comdat any

$_ZSt12__niter_baseIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEENSt11_Niter_baseIT_E13iterator_typeESC_ = comdat any

$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESD_EET0_T_SF_SE_ = comdat any

$_ZNSt10_Iter_baseIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEELb0EE7_S_baseESA_ = comdat any

$_ZSt18uninitialized_copyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_ET0_T_SC_SB_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESC_EET0_T_SE_SD_ = comdat any

$_ZSt10_ConstructISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEJRS9_EEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEOT_RNSt16remove_referenceISB_E4typeE = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EES2_ISE_SaISE_EEEELb1EE7_S_baseESI_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EES1_ISD_SaISD_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EES1_ISD_SaISD_EEEC2ERKSE_ = comdat any

$_ZSt20uninitialized_fill_nIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEmSC_ET_SE_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EEmSE_EET_SG_T0_RKT1_ = comdat any

$_ZSt10_ConstructISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEJRKSC_EEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEOT_RNSt16remove_referenceISF_E4typeE = comdat any

$_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2ERKSB_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEE17_S_select_on_copyERKSB_ = comdat any

$_ZNKSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2EmRKSA_ = comdat any

$_ZNSaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEED2Ev = comdat any

$_ZNSt16allocator_traitsISaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEE37select_on_container_copy_constructionERKSA_ = comdat any

$_ZNSaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEC2ERKS9_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEC2ERKSB_ = comdat any

$_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_implC2ERKSA_ = comdat any

$_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE17_M_create_storageEm = comdat any

$_ZSt10__fill_n_aIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEmSC_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeESH_T0_RKSG_ = comdat any

$_ZSt12__niter_baseIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEENSt11_Niter_baseIT_E13iterator_typeESF_ = comdat any

$_ZNSt10_Iter_baseIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EELb0EE7_S_baseESD_ = comdat any

$_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE14_M_fill_assignEmRKS9_ = comdat any

$_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2EmRKS9_RKSA_ = comdat any

$_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_impl12_M_swap_dataERSC_ = comdat any

$_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEESB_EvT_SH_RKT0_ = comdat any

$_ZSt24__uninitialized_fill_n_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_S9_ET_SB_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE15_M_erase_at_endEPS9_ = comdat any

$_ZSt6fill_nIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_ET_SB_T0_RKT1_ = comdat any

$_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE18_M_fill_initializeEmRKS9_ = comdat any

$_ZSt4swapIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvRT_SC_ = comdat any

$_ZSt4moveIRPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEONSt16remove_referenceIT_E4typeEOSD_ = comdat any

$_ZSt8__fill_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEES9_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SG_RKSD_ = comdat any

$_ZSt20uninitialized_fill_nIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_ET_SB_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmSB_EET_SD_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeESE_T0_RKSD_ = comdat any

$_ZNSt8__detail9_Map_baseIiSt4pairIKixESaIS3_ENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb0ELb0ELb1EEELb1EEixEOi = comdat any

$_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE12_M_hash_codeERS2_ = comdat any

$_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexERS1_m = comdat any

$_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE12_M_find_nodeEmRS1_m = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJOiEESC_IJEEEEEPS5_DpOT_ = comdat any

$_ZSt16forward_as_tupleIJiEESt5tupleIJDpOT_EES3_ = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNS4_10_Hash_nodeIS2_Lb0EEE = comdat any

$_ZNKSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEptEv = comdat any

$_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE15_M_bucket_indexERS2_mm = comdat any

$_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS1_m = comdat any

$_ZNKSt8__detail15_Hashtable_baseIiSt4pairIKixENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_equalsERS2_mPNS_10_Hash_nodeIS3_Lb0EEE = comdat any

$_ZNSt8__detail13_Equal_helperIiSt4pairIKixENS_10_Select1stESt8equal_toIiEmLb0EE9_S_equalsERKS6_RKS4_RS2_mPNS_10_Hash_nodeIS3_Lb0EEE = comdat any

$_ZNKSt8__detail15_Hashtable_baseIiSt4pairIKixENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE5_M_eqEv = comdat any

$_ZNKSt8equal_toIiEclERKiS2_ = comdat any

$_ZNKSt8__detail10_Select1stclIRSt4pairIKixEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS6_ = comdat any

$_ZSt3getILm0EKixERNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERS5_ = comdat any

$_ZSt7forwardIRSt4pairIKixEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZNSt10__pair_getILm0EE5__getIKixEERT_RSt4pairIS3_T0_E = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toIiELb1EE7_S_cgetERKS3_ = comdat any

$_ZNSt16allocator_traitsISaISt4pairIKixEEE9constructIS2_JRKSt21piecewise_construct_tSt5tupleIJOiEES9_IJEEEEEvRS3_PT_DpOT0_ = comdat any

$_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZSt7forwardISt5tupleIJOiEEEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIKixEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJOiEES9_IJEEEEEvPT_DpOT0_ = comdat any

$_ZNSt5tupleIJOiEEC2EOS1_ = comdat any

$_ZNSt4pairIKixEC2IJOiEJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE = comdat any

$_ZNSt11_Tuple_implILm0EJOiEEC2EOS1_ = comdat any

$_ZSt7forwardIOiEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZNSt11_Tuple_implILm0EJOiEE7_M_headERS1_ = comdat any

$_ZNSt10_Head_baseILm0EOiLb0EEC2IiEEOT_ = comdat any

$_ZNSt10_Head_baseILm0EOiLb0EE7_M_headERS1_ = comdat any

$_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZNSt4pairIKixEC2IJOiEJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE = comdat any

$_ZSt3getILm0EJOiEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS5_ = comdat any

$_ZSt12__get_helperILm0EOiJEERT0_RSt11_Tuple_implIXT_EJS1_DpT1_EE = comdat any

$_ZNSt5tupleIJOiEEC2IJiEvEEDpOT_ = comdat any

$_ZNSt11_Tuple_implILm0EJOiEEC2IiEEOT_ = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_rehashEmRKm = comdat any

$_ZNSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE10_M_extractEv = comdat any

$_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE13_M_store_codeEPNS_10_Hash_nodeIS3_Lb0EEEm = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE22_M_insert_bucket_beginEmPNS4_10_Hash_nodeIS2_Lb0EEE = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_10_Select1stELb1EE6_S_getERS2_ = comdat any

$_ZNSt8__detail9_Map_baseIiSt4pairIKixESaIS3_ENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb0ELb0ELb1EEELb1EEixERS2_ = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS3_EESC_IJEEEEEPS5_DpOT_ = comdat any

$_ZNSt5tupleIJRKiEEC2ES1_ = comdat any

$_ZNSt16allocator_traitsISaISt4pairIKixEEE9constructIS2_JRKSt21piecewise_construct_tSt5tupleIJRS1_EES9_IJEEEEEvRS3_PT_DpOT0_ = comdat any

$_ZSt7forwardISt5tupleIJRKiEEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIKixEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJRS2_EES9_IJEEEEEvPT_DpOT0_ = comdat any

$_ZNSt5tupleIJRKiEEC2EOS2_ = comdat any

$_ZNSt4pairIKixEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE = comdat any

$_ZNSt11_Tuple_implILm0EJRKiEEC2EOS2_ = comdat any

$_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt11_Tuple_implILm0EJRKiEE7_M_headERS2_ = comdat any

$_ZNSt10_Head_baseILm0ERKiLb0EEC2ES1_ = comdat any

$_ZNSt10_Head_baseILm0ERKiLb0EE7_M_headERS2_ = comdat any

$_ZNSt4pairIKixEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE = comdat any

$_ZSt3getILm0EJRKiEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_ = comdat any

$_ZSt12__get_helperILm0ERKiJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm0EJRKiEEC2ES1_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [2 x i8] c" \00", align 1
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZStL19piecewise_construct = internal constant %"struct.std::piecewise_construct_t" undef, align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s779616240.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0
@x.159 = common global i32 0
@y.160 = common global i32 0
@x.161 = common global i32 0
@y.162 = common global i32 0
@x.163 = common global i32 0
@y.164 = common global i32 0
@x.165 = common global i32 0
@y.166 = common global i32 0
@x.167 = common global i32 0
@y.168 = common global i32 0
@x.169 = common global i32 0
@y.170 = common global i32 0
@x.171 = common global i32 0
@y.172 = common global i32 0
@x.173 = common global i32 0
@y.174 = common global i32 0
@x.175 = common global i32 0
@y.176 = common global i32 0
@x.177 = common global i32 0
@y.178 = common global i32 0
@x.179 = common global i32 0
@y.180 = common global i32 0
@x.181 = common global i32 0
@y.182 = common global i32 0
@x.183 = common global i32 0
@y.184 = common global i32 0
@x.185 = common global i32 0
@y.186 = common global i32 0
@x.187 = common global i32 0
@y.188 = common global i32 0
@x.189 = common global i32 0
@y.190 = common global i32 0
@x.191 = common global i32 0
@y.192 = common global i32 0
@x.193 = common global i32 0
@y.194 = common global i32 0
@x.195 = common global i32 0
@y.196 = common global i32 0
@x.197 = common global i32 0
@y.198 = common global i32 0
@x.199 = common global i32 0
@y.200 = common global i32 0
@x.201 = common global i32 0
@y.202 = common global i32 0
@x.203 = common global i32 0
@y.204 = common global i32 0
@x.205 = common global i32 0
@y.206 = common global i32 0
@x.207 = common global i32 0
@y.208 = common global i32 0
@x.209 = common global i32 0
@y.210 = common global i32 0
@x.211 = common global i32 0
@y.212 = common global i32 0
@x.213 = common global i32 0
@y.214 = common global i32 0
@x.215 = common global i32 0
@y.216 = common global i32 0
@x.217 = common global i32 0
@y.218 = common global i32 0
@x.219 = common global i32 0
@y.220 = common global i32 0
@x.221 = common global i32 0
@y.222 = common global i32 0
@x.223 = common global i32 0
@y.224 = common global i32 0
@x.225 = common global i32 0
@y.226 = common global i32 0
@x.227 = common global i32 0
@y.228 = common global i32 0
@x.229 = common global i32 0
@y.230 = common global i32 0
@x.231 = common global i32 0
@y.232 = common global i32 0
@x.233 = common global i32 0
@y.234 = common global i32 0
@x.235 = common global i32 0
@y.236 = common global i32 0
@x.237 = common global i32 0
@y.238 = common global i32 0
@x.239 = common global i32 0
@y.240 = common global i32 0
@x.241 = common global i32 0
@y.242 = common global i32 0
@x.243 = common global i32 0
@y.244 = common global i32 0
@x.245 = common global i32 0
@y.246 = common global i32 0
@x.247 = common global i32 0
@y.248 = common global i32 0
@x.249 = common global i32 0
@y.250 = common global i32 0
@x.251 = common global i32 0
@y.252 = common global i32 0
@x.253 = common global i32 0
@y.254 = common global i32 0
@x.255 = common global i32 0
@y.256 = common global i32 0
@x.257 = common global i32 0
@y.258 = common global i32 0
@x.259 = common global i32 0
@y.260 = common global i32 0
@x.261 = common global i32 0
@y.262 = common global i32 0
@x.263 = common global i32 0
@y.264 = common global i32 0
@x.265 = common global i32 0
@y.266 = common global i32 0
@x.267 = common global i32 0
@y.268 = common global i32 0
@x.269 = common global i32 0
@y.270 = common global i32 0
@x.271 = common global i32 0
@y.272 = common global i32 0
@x.273 = common global i32 0
@y.274 = common global i32 0
@x.275 = common global i32 0
@y.276 = common global i32 0
@x.277 = common global i32 0
@y.278 = common global i32 0
@x.279 = common global i32 0
@y.280 = common global i32 0
@x.281 = common global i32 0
@y.282 = common global i32 0
@x.283 = common global i32 0
@y.284 = common global i32 0
@x.285 = common global i32 0
@y.286 = common global i32 0
@x.287 = common global i32 0
@y.288 = common global i32 0
@x.289 = common global i32 0
@y.290 = common global i32 0
@x.291 = common global i32 0
@y.292 = common global i32 0
@x.293 = common global i32 0
@y.294 = common global i32 0
@x.295 = common global i32 0
@y.296 = common global i32 0
@x.297 = common global i32 0
@y.298 = common global i32 0
@x.299 = common global i32 0
@y.300 = common global i32 0
@x.301 = common global i32 0
@y.302 = common global i32 0
@x.303 = common global i32 0
@y.304 = common global i32 0
@x.305 = common global i32 0
@y.306 = common global i32 0
@x.307 = common global i32 0
@y.308 = common global i32 0
@x.309 = common global i32 0
@y.310 = common global i32 0
@x.311 = common global i32 0
@y.312 = common global i32 0
@x.313 = common global i32 0
@y.314 = common global i32 0
@x.315 = common global i32 0
@y.316 = common global i32 0
@x.317 = common global i32 0
@y.318 = common global i32 0
@x.319 = common global i32 0
@y.320 = common global i32 0
@x.321 = common global i32 0
@y.322 = common global i32 0
@x.323 = common global i32 0
@y.324 = common global i32 0
@x.325 = common global i32 0
@y.326 = common global i32 0
@x.327 = common global i32 0
@y.328 = common global i32 0
@x.329 = common global i32 0
@y.330 = common global i32 0
@x.331 = common global i32 0
@y.332 = common global i32 0
@x.333 = common global i32 0
@y.334 = common global i32 0
@x.335 = common global i32 0
@y.336 = common global i32 0
@x.337 = common global i32 0
@y.338 = common global i32 0
@x.339 = common global i32 0
@y.340 = common global i32 0
@x.341 = common global i32 0
@y.342 = common global i32 0
@x.343 = common global i32 0
@y.344 = common global i32 0
@x.345 = common global i32 0
@y.346 = common global i32 0
@x.347 = common global i32 0
@y.348 = common global i32 0
@x.349 = common global i32 0
@y.350 = common global i32 0
@x.351 = common global i32 0
@y.352 = common global i32 0
@x.353 = common global i32 0
@y.354 = common global i32 0
@x.355 = common global i32 0
@y.356 = common global i32 0
@x.357 = common global i32 0
@y.358 = common global i32 0
@x.359 = common global i32 0
@y.360 = common global i32 0
@x.361 = common global i32 0
@y.362 = common global i32 0
@x.363 = common global i32 0
@y.364 = common global i32 0
@x.365 = common global i32 0
@y.366 = common global i32 0
@x.367 = common global i32 0
@y.368 = common global i32 0
@x.369 = common global i32 0
@y.370 = common global i32 0
@x.371 = common global i32 0
@y.372 = common global i32 0
@x.373 = common global i32 0
@y.374 = common global i32 0
@x.375 = common global i32 0
@y.376 = common global i32 0
@x.377 = common global i32 0
@y.378 = common global i32 0
@x.379 = common global i32 0
@y.380 = common global i32 0
@x.381 = common global i32 0
@y.382 = common global i32 0
@x.383 = common global i32 0
@y.384 = common global i32 0
@x.385 = common global i32 0
@y.386 = common global i32 0
@x.387 = common global i32 0
@y.388 = common global i32 0
@x.389 = common global i32 0
@y.390 = common global i32 0
@x.391 = common global i32 0
@y.392 = common global i32 0
@x.393 = common global i32 0
@y.394 = common global i32 0
@x.395 = common global i32 0
@y.396 = common global i32 0
@x.397 = common global i32 0
@y.398 = common global i32 0
@x.399 = common global i32 0
@y.400 = common global i32 0
@x.401 = common global i32 0
@y.402 = common global i32 0
@x.403 = common global i32 0
@y.404 = common global i32 0
@x.405 = common global i32 0
@y.406 = common global i32 0
@x.407 = common global i32 0
@y.408 = common global i32 0
@x.409 = common global i32 0
@y.410 = common global i32 0
@x.411 = common global i32 0
@y.412 = common global i32 0
@x.413 = common global i32 0
@y.414 = common global i32 0
@x.415 = common global i32 0
@y.416 = common global i32 0
@x.417 = common global i32 0
@y.418 = common global i32 0
@x.419 = common global i32 0
@y.420 = common global i32 0
@x.421 = common global i32 0
@y.422 = common global i32 0
@x.423 = common global i32 0
@y.424 = common global i32 0
@x.425 = common global i32 0
@y.426 = common global i32 0
@x.427 = common global i32 0
@y.428 = common global i32 0
@x.429 = common global i32 0
@y.430 = common global i32 0
@x.431 = common global i32 0
@y.432 = common global i32 0
@x.433 = common global i32 0
@y.434 = common global i32 0
@x.435 = common global i32 0
@y.436 = common global i32 0
@x.437 = common global i32 0
@y.438 = common global i32 0
@x.439 = common global i32 0
@y.440 = common global i32 0
@x.441 = common global i32 0
@y.442 = common global i32 0
@x.443 = common global i32 0
@y.444 = common global i32 0
@x.445 = common global i32 0
@y.446 = common global i32 0
@x.447 = common global i32 0
@y.448 = common global i32 0
@x.449 = common global i32 0
@y.450 = common global i32 0
@x.451 = common global i32 0
@y.452 = common global i32 0
@x.453 = common global i32 0
@y.454 = common global i32 0
@x.455 = common global i32 0
@y.456 = common global i32 0
@x.457 = common global i32 0
@y.458 = common global i32 0
@x.459 = common global i32 0
@y.460 = common global i32 0
@x.461 = common global i32 0
@y.462 = common global i32 0
@x.463 = common global i32 0
@y.464 = common global i32 0
@x.465 = common global i32 0
@y.466 = common global i32 0
@x.467 = common global i32 0
@y.468 = common global i32 0
@x.469 = common global i32 0
@y.470 = common global i32 0
@x.471 = common global i32 0
@y.472 = common global i32 0
@x.473 = common global i32 0
@y.474 = common global i32 0
@x.475 = common global i32 0
@y.476 = common global i32 0
@x.477 = common global i32 0
@y.478 = common global i32 0
@x.479 = common global i32 0
@y.480 = common global i32 0
@x.481 = common global i32 0
@y.482 = common global i32 0
@x.483 = common global i32 0
@y.484 = common global i32 0
@x.485 = common global i32 0
@y.486 = common global i32 0
@x.487 = common global i32 0
@y.488 = common global i32 0
@x.489 = common global i32 0
@y.490 = common global i32 0
@x.491 = common global i32 0
@y.492 = common global i32 0
@x.493 = common global i32 0
@y.494 = common global i32 0
@x.495 = common global i32 0
@y.496 = common global i32 0
@x.497 = common global i32 0
@y.498 = common global i32 0
@x.499 = common global i32 0
@y.500 = common global i32 0
@x.501 = common global i32 0
@y.502 = common global i32 0
@x.503 = common global i32 0
@y.504 = common global i32 0
@x.505 = common global i32 0
@y.506 = common global i32 0
@x.507 = common global i32 0
@y.508 = common global i32 0
@x.509 = common global i32 0
@y.510 = common global i32 0
@x.511 = common global i32 0
@y.512 = common global i32 0
@x.513 = common global i32 0
@y.514 = common global i32 0
@x.515 = common global i32 0
@y.516 = common global i32 0
@x.517 = common global i32 0
@y.518 = common global i32 0
@x.519 = common global i32 0
@y.520 = common global i32 0
@x.521 = common global i32 0
@y.522 = common global i32 0
@x.523 = common global i32 0
@y.524 = common global i32 0
@x.525 = common global i32 0
@y.526 = common global i32 0
@x.527 = common global i32 0
@y.528 = common global i32 0
@x.529 = common global i32 0
@y.530 = common global i32 0
@x.531 = common global i32 0
@y.532 = common global i32 0
@x.533 = common global i32 0
@y.534 = common global i32 0
@x.535 = common global i32 0
@y.536 = common global i32 0
@x.537 = common global i32 0
@y.538 = common global i32 0
@x.539 = common global i32 0
@y.540 = common global i32 0
@x.541 = common global i32 0
@y.542 = common global i32 0
@x.543 = common global i32 0
@y.544 = common global i32 0
@x.545 = common global i32 0
@y.546 = common global i32 0
@x.547 = common global i32 0
@y.548 = common global i32 0
@x.549 = common global i32 0
@y.550 = common global i32 0
@x.551 = common global i32 0
@y.552 = common global i32 0
@x.553 = common global i32 0
@y.554 = common global i32 0
@x.555 = common global i32 0
@y.556 = common global i32 0
@x.557 = common global i32 0
@y.558 = common global i32 0
@x.559 = common global i32 0
@y.560 = common global i32 0
@x.561 = common global i32 0
@y.562 = common global i32 0
@x.563 = common global i32 0
@y.564 = common global i32 0
@x.565 = common global i32 0
@y.566 = common global i32 0
@x.567 = common global i32 0
@y.568 = common global i32 0
@x.569 = common global i32 0
@y.570 = common global i32 0
@x.571 = common global i32 0
@y.572 = common global i32 0
@x.573 = common global i32 0
@y.574 = common global i32 0
@x.575 = common global i32 0
@y.576 = common global i32 0
@x.577 = common global i32 0
@y.578 = common global i32 0
@x.579 = common global i32 0
@y.580 = common global i32 0
@x.581 = common global i32 0
@y.582 = common global i32 0
@x.583 = common global i32 0
@y.584 = common global i32 0
@x.585 = common global i32 0
@y.586 = common global i32 0
@x.587 = common global i32 0
@y.588 = common global i32 0
@x.589 = common global i32 0
@y.590 = common global i32 0
@x.591 = common global i32 0
@y.592 = common global i32 0
@x.593 = common global i32 0
@y.594 = common global i32 0
@x.595 = common global i32 0
@y.596 = common global i32 0
@x.597 = common global i32 0
@y.598 = common global i32 0
@x.599 = common global i32 0
@y.600 = common global i32 0
@x.601 = common global i32 0
@y.602 = common global i32 0
@x.603 = common global i32 0
@y.604 = common global i32 0
@x.605 = common global i32 0
@y.606 = common global i32 0
@x.607 = common global i32 0
@y.608 = common global i32 0
@x.609 = common global i32 0
@y.610 = common global i32 0
@x.611 = common global i32 0
@y.612 = common global i32 0
@x.613 = common global i32 0
@y.614 = common global i32 0
@x.615 = common global i32 0
@y.616 = common global i32 0
@x.617 = common global i32 0
@y.618 = common global i32 0
@x.619 = common global i32 0
@y.620 = common global i32 0
@x.621 = common global i32 0
@y.622 = common global i32 0
@x.623 = common global i32 0
@y.624 = common global i32 0
@x.625 = common global i32 0
@y.626 = common global i32 0
@x.627 = common global i32 0
@y.628 = common global i32 0
@x.629 = common global i32 0
@y.630 = common global i32 0
@x.631 = common global i32 0
@y.632 = common global i32 0
@x.633 = common global i32 0
@y.634 = common global i32 0
@x.635 = common global i32 0
@y.636 = common global i32 0
@x.637 = common global i32 0
@y.638 = common global i32 0
@x.639 = common global i32 0
@y.640 = common global i32 0
@x.641 = common global i32 0
@y.642 = common global i32 0
@x.643 = common global i32 0
@y.644 = common global i32 0
@x.645 = common global i32 0
@y.646 = common global i32 0
@x.647 = common global i32 0
@y.648 = common global i32 0
@x.649 = common global i32 0
@y.650 = common global i32 0
@x.651 = common global i32 0
@y.652 = common global i32 0
@x.653 = common global i32 0
@y.654 = common global i32 0
@x.655 = common global i32 0
@y.656 = common global i32 0
@x.657 = common global i32 0
@y.658 = common global i32 0
@x.659 = common global i32 0
@y.660 = common global i32 0
@x.661 = common global i32 0
@y.662 = common global i32 0
@x.663 = common global i32 0
@y.664 = common global i32 0
@x.665 = common global i32 0
@y.666 = common global i32 0
@x.667 = common global i32 0
@y.668 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x
  %4 = load i32, i32* @y
  %5 = add i32 %3, 1389555499
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, 1389555499
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %2
  %12 = icmp slt i32 %4, 10
  store i1 %12, i1* %1
  %13 = alloca i32
  store i32 -1813887056, i32* %13
  br label %14

; <label>:14:                                     ; preds = %0, %68
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1813887056, label %17
    i32 -1147339406, label %37
    i32 1055505582, label %65
    i32 638429452, label %66
  ]

; <label>:16:                                     ; preds = %14
  br label %68

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %2
  %19 = load volatile i1, i1* %1
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -1147339406, i32 638429452
  store i32 %36, i32* %13
  br label %68

; <label>:37:                                     ; preds = %14
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %38 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  %39 = load i32, i32* @x
  %40 = load i32, i32* @y
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 1055505582, i32 638429452
  store i32 %64, i32* %13
  br label %68

; <label>:65:                                     ; preds = %14
  ret void

; <label>:66:                                     ; preds = %14
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %67 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  store i32 -1147339406, i32* %13
  br label %68

; <label>:68:                                     ; preds = %66, %37, %17, %16
  br label %14
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define void @_Z9limit_addRxx(i64* dereferenceable(8), i64) #4 {
  %3 = alloca i64*, align 8
  %4 = alloca i64, align 8
  store i64* %0, i64** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load i64*, i64** %3, align 8
  %6 = load i64, i64* %5, align 8
  %7 = load i64, i64* %4, align 8
  %8 = sub i64 0, %7
  %9 = sub i64 %6, %8
  %10 = add nsw i64 %6, %7
  %11 = srem i64 %9, 1000000007
  %12 = load i64*, i64** %3, align 8
  store i64 %11, i64* %12, align 8
  ret void
}

; Function Attrs: noinline uwtable
define void @_Z4dumpRSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE(%"class.std::vector"* dereferenceable(24)) #0 {
  %2 = alloca i1
  %3 = alloca i64*
  %4 = alloca i32*
  %5 = alloca %"struct.std::pair"*
  %6 = alloca %"struct.std::__detail::_Node_iterator"*
  %7 = alloca %"struct.std::__detail::_Node_iterator"*
  %8 = alloca %"class.std::unordered_map"**
  %9 = alloca i64*
  %10 = alloca i32*
  %11 = alloca i32*
  %12 = alloca i32*
  %13 = alloca %"class.std::vector"**
  %14 = alloca i1
  %15 = alloca i1
  %16 = load i32, i32* @x.3
  %17 = load i32, i32* @y.4
  %18 = sub i32 %16, 1191281586
  %19 = sub i32 %18, 1
  %20 = add i32 %19, 1191281586
  %21 = sub i32 %16, 1
  %22 = mul i32 %16, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  store i1 %24, i1* %15
  %25 = icmp slt i32 %17, 10
  store i1 %25, i1* %14
  %26 = alloca i32
  store i32 1541573658, i32* %26
  br label %27

; <label>:27:                                     ; preds = %1, %471
  %28 = load i32, i32* %26
  switch i32 %28, label %29 [
    i32 1541573658, label %30
    i32 1733376749, label %38
    i32 1880930330, label %72
    i32 1464679415, label %73
    i32 1003584526, label %101
    i32 -921146186, label %122
    i32 1192114560, label %125
    i32 865393764, label %136
    i32 1110553743, label %144
    i32 377206175, label %160
    i32 -1698636522, label %198
    i32 -2029393065, label %199
    i32 1616344426, label %206
    i32 -508229856, label %236
    i32 -1422263340, label %263
    i32 629365051, label %293
    i32 -887760015, label %294
    i32 1880133129, label %321
    i32 141606618, label %348
    i32 -815788876, label %349
    i32 463880257, label %364
    i32 -982530080, label %399
    i32 -543800233, label %400
    i32 1171906177, label %401
    i32 -1256468704, label %409
    i32 382364336, label %410
    i32 290015582, label %425
    i32 -1766190667, label %431
    i32 -1427570185, label %454
    i32 -1771137657, label %457
    i32 -1196688524, label %458
  ]

; <label>:29:                                     ; preds = %27
  br label %471

; <label>:30:                                     ; preds = %27
  %31 = load volatile i1, i1* %15
  %32 = load volatile i1, i1* %14
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  %37 = select i1 %35, i32 1733376749, i32 382364336
  store i32 %37, i32* %26
  br label %471

; <label>:38:                                     ; preds = %27
  %39 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"** %39, %"class.std::vector"*** %13
  %40 = alloca i32, align 4
  store i32* %40, i32** %12
  %41 = alloca i32, align 4
  store i32* %41, i32** %11
  %42 = alloca i32, align 4
  store i32* %42, i32** %10
  %43 = alloca i64, align 8
  store i64* %43, i64** %9
  %44 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"** %44, %"class.std::unordered_map"*** %8
  %45 = alloca %"struct.std::__detail::_Node_iterator", align 8
  store %"struct.std::__detail::_Node_iterator"* %45, %"struct.std::__detail::_Node_iterator"** %7
  %46 = alloca %"struct.std::__detail::_Node_iterator", align 8
  store %"struct.std::__detail::_Node_iterator"* %46, %"struct.std::__detail::_Node_iterator"** %6
  %47 = alloca %"struct.std::pair", align 8
  store %"struct.std::pair"* %47, %"struct.std::pair"** %5
  %48 = alloca i32, align 4
  store i32* %48, i32** %4
  %49 = alloca i64, align 8
  store i64* %49, i64** %3
  %50 = load volatile %"class.std::vector"**, %"class.std::vector"*** %13
  store %"class.std::vector"* %0, %"class.std::vector"** %50, align 8
  %51 = load volatile %"class.std::vector"**, %"class.std::vector"*** %13
  %52 = load %"class.std::vector"*, %"class.std::vector"** %51, align 8
  %53 = call i64 @_ZNKSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE4sizeEv(%"class.std::vector"* %52) #3
  %54 = trunc i64 %53 to i32
  %55 = load volatile i32*, i32** %12
  store i32 %54, i32* %55, align 4
  %56 = load volatile i32*, i32** %11
  store i32 0, i32* %56, align 4
  %57 = load i32, i32* @x.3
  %58 = load i32, i32* @y.4
  %59 = add i32 %57, -547937620
  %60 = sub i32 %59, 1
  %61 = sub i32 %60, -547937620
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  %71 = select i1 %69, i32 1880930330, i32 382364336
  store i32 %71, i32* %26
  br label %471

; <label>:72:                                     ; preds = %27
  store i32 1464679415, i32* %26
  br label %471

; <label>:73:                                     ; preds = %27
  %74 = load i32, i32* @x.3
  %75 = load i32, i32* @y.4
  %76 = sub i32 %74, 1091079881
  %77 = sub i32 %76, 1
  %78 = add i32 %77, 1091079881
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = xor i1 %82, true
  %85 = xor i1 %83, true
  %86 = xor i1 false, true
  %87 = and i1 %84, false
  %88 = and i1 %82, %86
  %89 = and i1 %85, false
  %90 = and i1 %83, %86
  %91 = or i1 %87, %88
  %92 = or i1 %89, %90
  %93 = xor i1 %91, %92
  %94 = or i1 %84, %85
  %95 = xor i1 %94, true
  %96 = or i1 false, %86
  %97 = and i1 %95, %96
  %98 = or i1 %93, %97
  %99 = or i1 %82, %83
  %100 = select i1 %98, i32 1003584526, i32 290015582
  store i32 %100, i32* %26
  br label %471

; <label>:101:                                    ; preds = %27
  %102 = load volatile i32*, i32** %11
  %103 = load i32, i32* %102, align 4
  %104 = load volatile i32*, i32** %12
  %105 = load i32, i32* %104, align 4
  %106 = icmp slt i32 %103, %105
  store i1 %106, i1* %2
  %107 = load i32, i32* @x.3
  %108 = load i32, i32* @y.4
  %109 = add i32 %107, 185637075
  %110 = sub i32 %109, 1
  %111 = sub i32 %110, 185637075
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = and i1 %115, %116
  %118 = xor i1 %115, %116
  %119 = or i1 %117, %118
  %120 = or i1 %115, %116
  %121 = select i1 %119, i32 -921146186, i32 290015582
  store i32 %121, i32* %26
  br label %471

; <label>:122:                                    ; preds = %27
  %123 = load volatile i1, i1* %2
  %124 = select i1 %123, i32 1192114560, i32 -1256468704
  store i32 %124, i32* %26
  br label %471

; <label>:125:                                    ; preds = %27
  %126 = load volatile %"class.std::vector"**, %"class.std::vector"*** %13
  %127 = load %"class.std::vector"*, %"class.std::vector"** %126, align 8
  %128 = load volatile i32*, i32** %11
  %129 = load i32, i32* %128, align 4
  %130 = sext i32 %129 to i64
  %131 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm(%"class.std::vector"* %127, i64 %130) #3
  %132 = call i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE4sizeEv(%"class.std::vector.0"* %131) #3
  %133 = trunc i64 %132 to i32
  %134 = load volatile i32*, i32** %10
  store i32 %133, i32* %134, align 4
  %135 = load volatile i64*, i64** %9
  store i64 0, i64* %135, align 8
  store i32 865393764, i32* %26
  br label %471

; <label>:136:                                    ; preds = %27
  %137 = load volatile i64*, i64** %9
  %138 = load i64, i64* %137, align 8
  %139 = load volatile i32*, i32** %10
  %140 = load i32, i32* %139, align 4
  %141 = sext i32 %140 to i64
  %142 = icmp slt i64 %138, %141
  %143 = select i1 %142, i32 1110553743, i32 -543800233
  store i32 %143, i32* %26
  br label %471

; <label>:144:                                    ; preds = %27
  %145 = load i32, i32* @x.3
  %146 = load i32, i32* @y.4
  %147 = add i32 %145, 505245807
  %148 = sub i32 %147, 1
  %149 = sub i32 %148, 505245807
  %150 = sub i32 %145, 1
  %151 = mul i32 %145, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %146, 10
  %155 = and i1 %153, %154
  %156 = xor i1 %153, %154
  %157 = or i1 %155, %156
  %158 = or i1 %153, %154
  %159 = select i1 %157, i32 377206175, i32 -1766190667
  store i32 %159, i32* %26
  br label %471

; <label>:160:                                    ; preds = %27
  %161 = load volatile %"class.std::vector"**, %"class.std::vector"*** %13
  %162 = load %"class.std::vector"*, %"class.std::vector"** %161, align 8
  %163 = load volatile i32*, i32** %11
  %164 = load i32, i32* %163, align 4
  %165 = sext i32 %164 to i64
  %166 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm(%"class.std::vector"* %162, i64 %165) #3
  %167 = load volatile i64*, i64** %9
  %168 = load i64, i64* %167, align 8
  %169 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEixEm(%"class.std::vector.0"* %166, i64 %168) #3
  %170 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %8
  store %"class.std::unordered_map"* %169, %"class.std::unordered_map"** %170, align 8
  %171 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %8
  %172 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %171, align 8
  %173 = call %"struct.std::__detail::_Hash_node"* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEE5beginEv(%"class.std::unordered_map"* %172) #3
  %174 = load volatile %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %7
  %175 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %174, i32 0, i32 0
  %176 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %175, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %173, %"struct.std::__detail::_Hash_node"** %176, align 8
  %177 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %8
  %178 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %177, align 8
  %179 = call %"struct.std::__detail::_Hash_node"* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEE3endEv(%"class.std::unordered_map"* %178) #3
  %180 = load volatile %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %6
  %181 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %180, i32 0, i32 0
  %182 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %181, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %179, %"struct.std::__detail::_Hash_node"** %182, align 8
  %183 = load i32, i32* @x.3
  %184 = load i32, i32* @y.4
  %185 = add i32 %183, 651617756
  %186 = sub i32 %185, 1
  %187 = sub i32 %186, 651617756
  %188 = sub i32 %183, 1
  %189 = mul i32 %183, %187
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %184, 10
  %193 = and i1 %191, %192
  %194 = xor i1 %191, %192
  %195 = or i1 %193, %194
  %196 = or i1 %191, %192
  %197 = select i1 %195, i32 -1698636522, i32 -1766190667
  store i32 %197, i32* %26
  br label %471

; <label>:198:                                    ; preds = %27
  store i32 -2029393065, i32* %26
  br label %471

; <label>:199:                                    ; preds = %27
  %200 = load volatile %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %7
  %201 = bitcast %"struct.std::__detail::_Node_iterator"* %200 to %"struct.std::__detail::_Node_iterator_base"*
  %202 = load volatile %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %6
  %203 = bitcast %"struct.std::__detail::_Node_iterator"* %202 to %"struct.std::__detail::_Node_iterator_base"*
  %204 = call zeroext i1 @_ZNSt8__detailneISt4pairIKixELb0EEEbRKNS_19_Node_iterator_baseIT_XT0_EEES8_(%"struct.std::__detail::_Node_iterator_base"* dereferenceable(8) %201, %"struct.std::__detail::_Node_iterator_base"* dereferenceable(8) %203) #3
  %205 = select i1 %204, i32 1616344426, i32 -887760015
  store i32 %205, i32* %26
  br label %471

; <label>:206:                                    ; preds = %27
  %207 = load volatile %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %7
  %208 = call dereferenceable(16) %"struct.std::pair"* @_ZNKSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEdeEv(%"struct.std::__detail::_Node_iterator"* %207) #3
  %209 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %5
  %210 = bitcast %"struct.std::pair"* %209 to i8*
  %211 = bitcast %"struct.std::pair"* %208 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %210, i8* %211, i64 16, i32 8, i1 false)
  %212 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %5
  %213 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %212, i32 0, i32 0
  %214 = load i32, i32* %213, align 8
  %215 = load volatile i32*, i32** %4
  store i32 %214, i32* %215, align 4
  %216 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %5
  %217 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %216, i32 0, i32 1
  %218 = load i64, i64* %217, align 8
  %219 = load volatile i64*, i64** %3
  store i64 %218, i64* %219, align 8
  %220 = load volatile i32*, i32** %11
  %221 = load i32, i32* %220, align 4
  %222 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* @_ZSt4cout, i32 %221)
  %223 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %222, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0))
  %224 = load volatile i64*, i64** %9
  %225 = load i64, i64* %224, align 8
  %226 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* %223, i64 %225)
  %227 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %226, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0))
  %228 = load volatile i32*, i32** %4
  %229 = load i32, i32* %228, align 4
  %230 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %227, i32 %229)
  %231 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %230, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0))
  %232 = load volatile i64*, i64** %3
  %233 = load i64, i64* %232, align 8
  %234 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* %231, i64 %233)
  %235 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %234, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  store i32 -508229856, i32* %26
  br label %471

; <label>:236:                                    ; preds = %27
  %237 = load i32, i32* @x.3
  %238 = load i32, i32* @y.4
  %239 = sub i32 0, 1
  %240 = add i32 %237, %239
  %241 = sub i32 %237, 1
  %242 = mul i32 %237, %240
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %238, 10
  %246 = xor i1 %244, true
  %247 = xor i1 %245, true
  %248 = xor i1 false, true
  %249 = and i1 %246, false
  %250 = and i1 %244, %248
  %251 = and i1 %247, false
  %252 = and i1 %245, %248
  %253 = or i1 %249, %250
  %254 = or i1 %251, %252
  %255 = xor i1 %253, %254
  %256 = or i1 %246, %247
  %257 = xor i1 %256, true
  %258 = or i1 false, %248
  %259 = and i1 %257, %258
  %260 = or i1 %255, %259
  %261 = or i1 %244, %245
  %262 = select i1 %260, i32 -1422263340, i32 -1427570185
  store i32 %262, i32* %26
  br label %471

; <label>:263:                                    ; preds = %27
  %264 = load volatile %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %7
  %265 = call dereferenceable(8) %"struct.std::__detail::_Node_iterator"* @_ZNSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEppEv(%"struct.std::__detail::_Node_iterator"* %264) #3
  %266 = load i32, i32* @x.3
  %267 = load i32, i32* @y.4
  %268 = sub i32 %266, 1721889665
  %269 = sub i32 %268, 1
  %270 = add i32 %269, 1721889665
  %271 = sub i32 %266, 1
  %272 = mul i32 %266, %270
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %267, 10
  %276 = xor i1 %274, true
  %277 = xor i1 %275, true
  %278 = xor i1 true, true
  %279 = and i1 %276, true
  %280 = and i1 %274, %278
  %281 = and i1 %277, true
  %282 = and i1 %275, %278
  %283 = or i1 %279, %280
  %284 = or i1 %281, %282
  %285 = xor i1 %283, %284
  %286 = or i1 %276, %277
  %287 = xor i1 %286, true
  %288 = or i1 true, %278
  %289 = and i1 %287, %288
  %290 = or i1 %285, %289
  %291 = or i1 %274, %275
  %292 = select i1 %290, i32 629365051, i32 -1427570185
  store i32 %292, i32* %26
  br label %471

; <label>:293:                                    ; preds = %27
  store i32 -2029393065, i32* %26
  br label %471

; <label>:294:                                    ; preds = %27
  %295 = load i32, i32* @x.3
  %296 = load i32, i32* @y.4
  %297 = sub i32 0, 1
  %298 = add i32 %295, %297
  %299 = sub i32 %295, 1
  %300 = mul i32 %295, %298
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %296, 10
  %304 = xor i1 %302, true
  %305 = xor i1 %303, true
  %306 = xor i1 true, true
  %307 = and i1 %304, true
  %308 = and i1 %302, %306
  %309 = and i1 %305, true
  %310 = and i1 %303, %306
  %311 = or i1 %307, %308
  %312 = or i1 %309, %310
  %313 = xor i1 %311, %312
  %314 = or i1 %304, %305
  %315 = xor i1 %314, true
  %316 = or i1 true, %306
  %317 = and i1 %315, %316
  %318 = or i1 %313, %317
  %319 = or i1 %302, %303
  %320 = select i1 %318, i32 1880133129, i32 -1771137657
  store i32 %320, i32* %26
  br label %471

; <label>:321:                                    ; preds = %27
  %322 = load i32, i32* @x.3
  %323 = load i32, i32* @y.4
  %324 = sub i32 0, 1
  %325 = add i32 %322, %324
  %326 = sub i32 %322, 1
  %327 = mul i32 %322, %325
  %328 = urem i32 %327, 2
  %329 = icmp eq i32 %328, 0
  %330 = icmp slt i32 %323, 10
  %331 = xor i1 %329, true
  %332 = xor i1 %330, true
  %333 = xor i1 true, true
  %334 = and i1 %331, true
  %335 = and i1 %329, %333
  %336 = and i1 %332, true
  %337 = and i1 %330, %333
  %338 = or i1 %334, %335
  %339 = or i1 %336, %337
  %340 = xor i1 %338, %339
  %341 = or i1 %331, %332
  %342 = xor i1 %341, true
  %343 = or i1 true, %333
  %344 = and i1 %342, %343
  %345 = or i1 %340, %344
  %346 = or i1 %329, %330
  %347 = select i1 %345, i32 141606618, i32 -1771137657
  store i32 %347, i32* %26
  br label %471

; <label>:348:                                    ; preds = %27
  store i32 -815788876, i32* %26
  br label %471

; <label>:349:                                    ; preds = %27
  %350 = load i32, i32* @x.3
  %351 = load i32, i32* @y.4
  %352 = sub i32 0, 1
  %353 = add i32 %350, %352
  %354 = sub i32 %350, 1
  %355 = mul i32 %350, %353
  %356 = urem i32 %355, 2
  %357 = icmp eq i32 %356, 0
  %358 = icmp slt i32 %351, 10
  %359 = and i1 %357, %358
  %360 = xor i1 %357, %358
  %361 = or i1 %359, %360
  %362 = or i1 %357, %358
  %363 = select i1 %361, i32 463880257, i32 -1196688524
  store i32 %363, i32* %26
  br label %471

; <label>:364:                                    ; preds = %27
  %365 = load volatile i64*, i64** %9
  %366 = load i64, i64* %365, align 8
  %367 = add i64 %366, 4370799676968039196
  %368 = add i64 %367, 1
  %369 = sub i64 %368, 4370799676968039196
  %370 = add nsw i64 %366, 1
  %371 = load volatile i64*, i64** %9
  store i64 %369, i64* %371, align 8
  %372 = load i32, i32* @x.3
  %373 = load i32, i32* @y.4
  %374 = add i32 %372, -183161093
  %375 = sub i32 %374, 1
  %376 = sub i32 %375, -183161093
  %377 = sub i32 %372, 1
  %378 = mul i32 %372, %376
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %373, 10
  %382 = xor i1 %380, true
  %383 = xor i1 %381, true
  %384 = xor i1 false, true
  %385 = and i1 %382, false
  %386 = and i1 %380, %384
  %387 = and i1 %383, false
  %388 = and i1 %381, %384
  %389 = or i1 %385, %386
  %390 = or i1 %387, %388
  %391 = xor i1 %389, %390
  %392 = or i1 %382, %383
  %393 = xor i1 %392, true
  %394 = or i1 false, %384
  %395 = and i1 %393, %394
  %396 = or i1 %391, %395
  %397 = or i1 %380, %381
  %398 = select i1 %396, i32 -982530080, i32 -1196688524
  store i32 %398, i32* %26
  br label %471

; <label>:399:                                    ; preds = %27
  store i32 865393764, i32* %26
  br label %471

; <label>:400:                                    ; preds = %27
  store i32 1171906177, i32* %26
  br label %471

; <label>:401:                                    ; preds = %27
  %402 = load volatile i32*, i32** %11
  %403 = load i32, i32* %402, align 4
  %404 = sub i32 %403, 1895147073
  %405 = add i32 %404, 1
  %406 = add i32 %405, 1895147073
  %407 = add nsw i32 %403, 1
  %408 = load volatile i32*, i32** %11
  store i32 %406, i32* %408, align 4
  store i32 1464679415, i32* %26
  br label %471

; <label>:409:                                    ; preds = %27
  ret void

; <label>:410:                                    ; preds = %27
  %411 = alloca %"class.std::vector"*, align 8
  %412 = alloca i32, align 4
  %413 = alloca i32, align 4
  %414 = alloca i32, align 4
  %415 = alloca i64, align 8
  %416 = alloca %"class.std::unordered_map"*, align 8
  %417 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %418 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %419 = alloca %"struct.std::pair", align 8
  %420 = alloca i32, align 4
  %421 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %411, align 8
  %422 = load %"class.std::vector"*, %"class.std::vector"** %411, align 8
  %423 = call i64 @_ZNKSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE4sizeEv(%"class.std::vector"* %422) #3
  %424 = trunc i64 %423 to i32
  store i32 %424, i32* %412, align 4
  store i32 0, i32* %413, align 4
  store i32 1733376749, i32* %26
  br label %471

; <label>:425:                                    ; preds = %27
  %426 = load volatile i32*, i32** %11
  %427 = load i32, i32* %426, align 4
  %428 = load volatile i32*, i32** %12
  %429 = load i32, i32* %428, align 4
  %430 = icmp slt i32 %427, %429
  store i32 1003584526, i32* %26
  br label %471

; <label>:431:                                    ; preds = %27
  %432 = load volatile %"class.std::vector"**, %"class.std::vector"*** %13
  %433 = load %"class.std::vector"*, %"class.std::vector"** %432, align 8
  %434 = load volatile i32*, i32** %11
  %435 = load i32, i32* %434, align 4
  %436 = sext i32 %435 to i64
  %437 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm(%"class.std::vector"* %433, i64 %436) #3
  %438 = load volatile i64*, i64** %9
  %439 = load i64, i64* %438, align 8
  %440 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEixEm(%"class.std::vector.0"* %437, i64 %439) #3
  %441 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %8
  store %"class.std::unordered_map"* %440, %"class.std::unordered_map"** %441, align 8
  %442 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %8
  %443 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %442, align 8
  %444 = call %"struct.std::__detail::_Hash_node"* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEE5beginEv(%"class.std::unordered_map"* %443) #3
  %445 = load volatile %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %7
  %446 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %445, i32 0, i32 0
  %447 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %446, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %444, %"struct.std::__detail::_Hash_node"** %447, align 8
  %448 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %8
  %449 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %448, align 8
  %450 = call %"struct.std::__detail::_Hash_node"* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEE3endEv(%"class.std::unordered_map"* %449) #3
  %451 = load volatile %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %6
  %452 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %451, i32 0, i32 0
  %453 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %452, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %450, %"struct.std::__detail::_Hash_node"** %453, align 8
  store i32 377206175, i32* %26
  br label %471

; <label>:454:                                    ; preds = %27
  %455 = load volatile %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %7
  %456 = call dereferenceable(8) %"struct.std::__detail::_Node_iterator"* @_ZNSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEppEv(%"struct.std::__detail::_Node_iterator"* %455) #3
  store i32 -1422263340, i32* %26
  br label %471

; <label>:457:                                    ; preds = %27
  store i32 1880133129, i32* %26
  br label %471

; <label>:458:                                    ; preds = %27
  %459 = load volatile i64*, i64** %9
  %460 = load i64, i64* %459, align 8
  %461 = sub i64 0, 1
  %462 = add i64 %460, %461
  %463 = sub i64 %460, 1
  %464 = mul i64 %462, 1
  %465 = sub i64 0, %460
  %466 = sub i64 0, 1
  %467 = add i64 %465, %466
  %468 = sub i64 0, %467
  %469 = add nsw i64 %460, 1
  %470 = load volatile i64*, i64** %9
  store i64 %468, i64* %470, align 8
  store i32 463880257, i32* %26
  br label %471

; <label>:471:                                    ; preds = %458, %457, %454, %431, %425, %410, %401, %400, %399, %364, %349, %348, %321, %294, %293, %263, %236, %206, %199, %198, %160, %144, %136, %125, %122, %101, %73, %72, %38, %30, %29
  br label %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE4sizeEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %8 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  %12 = ptrtoint %"class.std::vector.0"* %7 to i64
  %13 = ptrtoint %"class.std::vector.0"* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 24
  ret i64 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm(%"class.std::vector"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %9, i64 %10
  ret %"class.std::vector.0"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE4sizeEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  %8 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %10, align 8
  %12 = ptrtoint %"class.std::unordered_map"* %7 to i64
  %13 = ptrtoint %"class.std::unordered_map"* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 56
  ret i64 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(56) %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEixEm(%"class.std::vector.0"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %9, i64 %10
  ret %"class.std::unordered_map"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEE5beginEv(%"class.std::unordered_map"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.13
  %6 = load i32, i32* @y.14
  %7 = add i32 %5, -1453985053
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1453985053
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 4253656, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 4253656, label %19
    i32 1483509006, label %27
    i32 420098062, label %53
    i32 1074619682, label %55
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1483509006, i32 1074619682
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %29 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %29, align 8
  %30 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %29, align 8
  %31 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %30, i32 0, i32 0
  %32 = call %"struct.std::__detail::_Hash_node"* @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE5beginEv(%"class.std::_Hashtable"* %31) #3
  %33 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %28, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %33, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %32, %"struct.std::__detail::_Hash_node"** %34, align 8
  %35 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %28, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %35, i32 0, i32 0
  %37 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %36, align 8
  store %"struct.std::__detail::_Hash_node"* %37, %"struct.std::__detail::_Hash_node"** %2
  %38 = load i32, i32* @x.13
  %39 = load i32, i32* @y.14
  %40 = add i32 %38, -697495314
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -697495314
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 420098062, i32 1074619682
  store i32 %52, i32* %15
  br label %66

; <label>:53:                                     ; preds = %16
  %54 = load volatile %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %2
  ret %"struct.std::__detail::_Hash_node"* %54

; <label>:55:                                     ; preds = %16
  %56 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %57 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %57, align 8
  %58 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %57, align 8
  %59 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %58, i32 0, i32 0
  %60 = call %"struct.std::__detail::_Hash_node"* @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE5beginEv(%"class.std::_Hashtable"* %59) #3
  %61 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %56, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %61, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %60, %"struct.std::__detail::_Hash_node"** %62, align 8
  %63 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %56, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %63, i32 0, i32 0
  %65 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %64, align 8
  store i32 1483509006, i32* %15
  br label %66

; <label>:66:                                     ; preds = %55, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEE3endEv(%"class.std::unordered_map"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %3 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %3, align 8
  %4 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %3, align 8
  %5 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %4, i32 0, i32 0
  %6 = call %"struct.std::__detail::_Hash_node"* @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE3endEv(%"class.std::_Hashtable"* %5) #3
  %7 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %2, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %7, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %6, %"struct.std::__detail::_Hash_node"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %2, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %9, i32 0, i32 0
  %11 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  ret %"struct.std::__detail::_Hash_node"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNSt8__detailneISt4pairIKixELb0EEEbRKNS_19_Node_iterator_baseIT_XT0_EEES8_(%"struct.std::__detail::_Node_iterator_base"* dereferenceable(8), %"struct.std::__detail::_Node_iterator_base"* dereferenceable(8)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.17
  %7 = load i32, i32* @y.18
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1634431035, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %76
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1634431035, label %19
    i32 -769267247, label %27
    i32 439223784, label %64
    i32 -679485447, label %66
  ]

; <label>:18:                                     ; preds = %16
  br label %76

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -769267247, i32 -679485447
  store i32 %26, i32* %15
  br label %76

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::__detail::_Node_iterator_base"*, align 8
  %29 = alloca %"struct.std::__detail::_Node_iterator_base"*, align 8
  store %"struct.std::__detail::_Node_iterator_base"* %0, %"struct.std::__detail::_Node_iterator_base"** %28, align 8
  store %"struct.std::__detail::_Node_iterator_base"* %1, %"struct.std::__detail::_Node_iterator_base"** %29, align 8
  %30 = load %"struct.std::__detail::_Node_iterator_base"*, %"struct.std::__detail::_Node_iterator_base"** %28, align 8
  %31 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %30, i32 0, i32 0
  %32 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %31, align 8
  %33 = load %"struct.std::__detail::_Node_iterator_base"*, %"struct.std::__detail::_Node_iterator_base"** %29, align 8
  %34 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %33, i32 0, i32 0
  %35 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %34, align 8
  %36 = icmp ne %"struct.std::__detail::_Hash_node"* %32, %35
  store i1 %36, i1* %3
  %37 = load i32, i32* @x.17
  %38 = load i32, i32* @y.18
  %39 = sub i32 %37, 1674749880
  %40 = sub i32 %39, 1
  %41 = add i32 %40, 1674749880
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 439223784, i32 -679485447
  store i32 %63, i32* %15
  br label %76

; <label>:64:                                     ; preds = %16
  %65 = load volatile i1, i1* %3
  ret i1 %65

; <label>:66:                                     ; preds = %16
  %67 = alloca %"struct.std::__detail::_Node_iterator_base"*, align 8
  %68 = alloca %"struct.std::__detail::_Node_iterator_base"*, align 8
  store %"struct.std::__detail::_Node_iterator_base"* %0, %"struct.std::__detail::_Node_iterator_base"** %67, align 8
  store %"struct.std::__detail::_Node_iterator_base"* %1, %"struct.std::__detail::_Node_iterator_base"** %68, align 8
  %69 = load %"struct.std::__detail::_Node_iterator_base"*, %"struct.std::__detail::_Node_iterator_base"** %67, align 8
  %70 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %69, i32 0, i32 0
  %71 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %70, align 8
  %72 = load %"struct.std::__detail::_Node_iterator_base"*, %"struct.std::__detail::_Node_iterator_base"** %68, align 8
  %73 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %72, i32 0, i32 0
  %74 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %73, align 8
  %75 = icmp ne %"struct.std::__detail::_Hash_node"* %71, %74
  store i32 -769267247, i32* %15
  br label %76

; <label>:76:                                     ; preds = %66, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair"* @_ZNKSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEdeEv(%"struct.std::__detail::_Node_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::pair"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.19
  %6 = load i32, i32* @y.20
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 951653814, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %83
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 951653814, label %18
    i32 -662473515, label %38
    i32 -1520246913, label %73
    i32 -1535314442, label %75
  ]

; <label>:17:                                     ; preds = %15
  br label %83

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -662473515, i32 -1535314442
  store i32 %37, i32* %14
  br label %83

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::__detail::_Node_iterator"*, align 8
  store %"struct.std::__detail::_Node_iterator"* %0, %"struct.std::__detail::_Node_iterator"** %39, align 8
  %40 = load %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %39, align 8
  %41 = bitcast %"struct.std::__detail::_Node_iterator"* %40 to %"struct.std::__detail::_Node_iterator_base"*
  %42 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %41, i32 0, i32 0
  %43 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %42, align 8
  %44 = bitcast %"struct.std::__detail::_Hash_node"* %43 to %"struct.std::__detail::_Hash_node_value_base"*
  %45 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base"* %44) #3
  store %"struct.std::pair"* %45, %"struct.std::pair"** %2
  %46 = load i32, i32* @x.19
  %47 = load i32, i32* @y.20
  %48 = add i32 %46, -173994459
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -173994459
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -1520246913, i32 -1535314442
  store i32 %72, i32* %14
  br label %83

; <label>:73:                                     ; preds = %15
  %74 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %2
  ret %"struct.std::pair"* %74

; <label>:75:                                     ; preds = %15
  %76 = alloca %"struct.std::__detail::_Node_iterator"*, align 8
  store %"struct.std::__detail::_Node_iterator"* %0, %"struct.std::__detail::_Node_iterator"** %76, align 8
  %77 = load %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %76, align 8
  %78 = bitcast %"struct.std::__detail::_Node_iterator"* %77 to %"struct.std::__detail::_Node_iterator_base"*
  %79 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %78, i32 0, i32 0
  %80 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %79, align 8
  %81 = bitcast %"struct.std::__detail::_Hash_node"* %80 to %"struct.std::__detail::_Hash_node_value_base"*
  %82 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base"* %81) #3
  store i32 -662473515, i32* %14
  br label %83

; <label>:83:                                     ; preds = %75, %38, %18, %17
  br label %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #5

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::__detail::_Node_iterator"* @_ZNSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEppEv(%"struct.std::__detail::_Node_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Node_iterator"*, align 8
  store %"struct.std::__detail::_Node_iterator"* %0, %"struct.std::__detail::_Node_iterator"** %2, align 8
  %3 = load %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Node_iterator"* %3 to %"struct.std::__detail::_Node_iterator_base"*
  call void @_ZNSt8__detail19_Node_iterator_baseISt4pairIKixELb0EE7_M_incrEv(%"struct.std::__detail::_Node_iterator_base"* %4) #3
  ret %"struct.std::__detail::_Node_iterator"* %3
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() #6 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = load i32, i32* @x.23
  %2 = load i32, i32* @y.24
  %3 = sub i32 0, 1
  %4 = add i32 %1, %3
  %5 = sub i32 %1, 1
  %6 = mul i32 %1, %4
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %2, 10
  %10 = xor i1 %8, true
  %11 = xor i1 %9, true
  %12 = xor i1 false, true
  %13 = and i1 %10, false
  %14 = and i1 %8, %12
  %15 = and i1 %11, false
  %16 = and i1 %9, %12
  %17 = or i1 %13, %14
  %18 = or i1 %15, %16
  %19 = xor i1 %17, %18
  %20 = or i1 %10, %11
  %21 = xor i1 %20, true
  %22 = or i1 false, %12
  %23 = and i1 %21, %22
  %24 = or i1 %19, %23
  %25 = or i1 %8, %9
  br i1 %24, label %26, label %866

; <label>:26:                                     ; preds = %0, %866
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca %"class.std::vector", align 8
  %31 = alloca %"class.std::vector.0", align 8
  %32 = alloca i8*
  %33 = alloca i32
  %34 = alloca i32, align 4
  %35 = alloca %"class.std::unordered_map", align 8
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca %"class.std::unordered_map", align 8
  %39 = alloca i32, align 4
  %40 = alloca i64, align 8
  %41 = alloca %"class.std::unordered_map"*, align 8
  %42 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %43 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %44 = alloca %"struct.std::pair", align 8
  %45 = alloca i32, align 4
  %46 = alloca i64, align 8
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  %49 = alloca i32, align 4
  store i32 0, i32* %27, align 4
  %50 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %28)
  %51 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %29)
  call void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEC2Ev(%"class.std::vector"* %30) #3
  call void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2Ev(%"class.std::vector.0"* %31) #3
  %52 = load i32, i32* @x.23
  %53 = load i32, i32* @y.24
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  br i1 %63, label %65, label %866

; <label>:65:                                     ; preds = %26
  invoke void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE6assignEmRKSB_(%"class.std::vector"* %30, i64 2, %"class.std::vector.0"* dereferenceable(24) %31)
          to label %66 unwind label %469

; <label>:66:                                     ; preds = %65
  call void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EED2Ev(%"class.std::vector.0"* %31) #3
  %67 = call i64 @_ZNKSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE4sizeEv(%"class.std::vector"* %30) #3
  %68 = trunc i64 %67 to i32
  store i32 %68, i32* %34, align 4
  %69 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm(%"class.std::vector"* %30, i64 0) #3
  %70 = bitcast %"class.std::unordered_map"* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* %70, i8 0, i64 56, i32 8, i1 false)
  call void @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEC2Ev(%"class.std::unordered_map"* %35) #3
  invoke void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE6assignEmRKS9_(%"class.std::vector.0"* %69, i64 1, %"class.std::unordered_map"* dereferenceable(56) %35)
          to label %71 unwind label %514

; <label>:71:                                     ; preds = %66
  call void @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEED2Ev(%"class.std::unordered_map"* %35) #3
  %72 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm(%"class.std::vector"* %30, i64 0) #3
  %73 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEixEm(%"class.std::vector.0"* %72, i64 0) #3
  store i32 0, i32* %36, align 4
  %74 = invoke dereferenceable(8) i64* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEixEOi(%"class.std::unordered_map"* %73, i32* dereferenceable(4) %36)
          to label %75 unwind label %518

; <label>:75:                                     ; preds = %71
  %76 = load i32, i32* @x.23
  %77 = load i32, i32* @y.24
  %78 = add i32 %76, 427426854
  %79 = sub i32 %78, 1
  %80 = sub i32 %79, 427426854
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = and i1 %84, %85
  %87 = xor i1 %84, %85
  %88 = or i1 %86, %87
  %89 = or i1 %84, %85
  br i1 %88, label %90, label %892

; <label>:90:                                     ; preds = %75, %892
  store i64 1, i64* %74, align 8
  store i32 0, i32* %37, align 4
  %91 = load i32, i32* @x.23
  %92 = load i32, i32* @y.24
  %93 = add i32 %91, -1668994241
  %94 = sub i32 %93, 1
  %95 = sub i32 %94, -1668994241
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  br i1 %103, label %105, label %892

; <label>:105:                                    ; preds = %90
  br label %106

; <label>:106:                                    ; preds = %674, %105
  %107 = load i32, i32* %37, align 4
  %108 = load i32, i32* %28, align 4
  %109 = icmp slt i32 %107, %108
  br i1 %109, label %110, label %679

; <label>:110:                                    ; preds = %106
  %111 = load i32, i32* @x.23
  %112 = load i32, i32* @y.24
  %113 = add i32 %111, 1706043036
  %114 = sub i32 %113, 1
  %115 = sub i32 %114, 1706043036
  %116 = sub i32 %111, 1
  %117 = mul i32 %111, %115
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %112, 10
  %121 = and i1 %119, %120
  %122 = xor i1 %119, %120
  %123 = or i1 %121, %122
  %124 = or i1 %119, %120
  br i1 %123, label %125, label %893

; <label>:125:                                    ; preds = %110, %893
  %126 = load i32, i32* %37, align 4
  %127 = sub i32 0, %126
  %128 = sub i32 0, 1
  %129 = add i32 %127, %128
  %130 = sub i32 0, %129
  %131 = add nsw i32 %126, 1
  %132 = srem i32 %130, 2
  %133 = sext i32 %132 to i64
  %134 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm(%"class.std::vector"* %30, i64 %133) #3
  call void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE5clearEv(%"class.std::vector.0"* %134) #3
  %135 = load i32, i32* %37, align 4
  %136 = sub i32 0, 1
  %137 = sub i32 %135, %136
  %138 = add nsw i32 %135, 1
  %139 = srem i32 %137, 2
  %140 = sext i32 %139 to i64
  %141 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm(%"class.std::vector"* %30, i64 %140) #3
  %142 = load i32, i32* %37, align 4
  %143 = sub i32 0, 2
  %144 = sub i32 %142, %143
  %145 = add nsw i32 %142, 2
  %146 = sext i32 %144 to i64
  %147 = bitcast %"class.std::unordered_map"* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* %147, i8 0, i64 56, i32 8, i1 false)
  call void @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEC2Ev(%"class.std::unordered_map"* %38) #3
  %148 = load i32, i32* @x.23
  %149 = load i32, i32* @y.24
  %150 = add i32 %148, -267512101
  %151 = sub i32 %150, 1
  %152 = sub i32 %151, -267512101
  %153 = sub i32 %148, 1
  %154 = mul i32 %148, %152
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %149, 10
  %158 = xor i1 %156, true
  %159 = xor i1 %157, true
  %160 = xor i1 true, true
  %161 = and i1 %158, true
  %162 = and i1 %156, %160
  %163 = and i1 %159, true
  %164 = and i1 %157, %160
  %165 = or i1 %161, %162
  %166 = or i1 %163, %164
  %167 = xor i1 %165, %166
  %168 = or i1 %158, %159
  %169 = xor i1 %168, true
  %170 = or i1 true, %160
  %171 = and i1 %169, %170
  %172 = or i1 %167, %171
  %173 = or i1 %156, %157
  br i1 %172, label %174, label %893

; <label>:174:                                    ; preds = %125
  invoke void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE6assignEmRKS9_(%"class.std::vector.0"* %141, i64 %146, %"class.std::unordered_map"* dereferenceable(56) %38)
          to label %175 unwind label %563

; <label>:175:                                    ; preds = %174
  %176 = load i32, i32* @x.23
  %177 = load i32, i32* @y.24
  %178 = sub i32 %176, -1980855510
  %179 = sub i32 %178, 1
  %180 = add i32 %179, -1980855510
  %181 = sub i32 %176, 1
  %182 = mul i32 %176, %180
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %177, 10
  %186 = and i1 %184, %185
  %187 = xor i1 %184, %185
  %188 = or i1 %186, %187
  %189 = or i1 %184, %185
  br i1 %188, label %190, label %1041

; <label>:190:                                    ; preds = %175, %1041
  call void @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEED2Ev(%"class.std::unordered_map"* %38) #3
  %191 = load i32, i32* %37, align 4
  %192 = srem i32 %191, 2
  %193 = sext i32 %192 to i64
  %194 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm(%"class.std::vector"* %30, i64 %193) #3
  %195 = call i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE4sizeEv(%"class.std::vector.0"* %194) #3
  %196 = trunc i64 %195 to i32
  store i32 %196, i32* %39, align 4
  store i64 0, i64* %40, align 8
  %197 = load i32, i32* @x.23
  %198 = load i32, i32* @y.24
  %199 = sub i32 0, 1
  %200 = add i32 %197, %199
  %201 = sub i32 %197, 1
  %202 = mul i32 %197, %200
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %198, 10
  %206 = xor i1 %204, true
  %207 = xor i1 %205, true
  %208 = xor i1 true, true
  %209 = and i1 %206, true
  %210 = and i1 %204, %208
  %211 = and i1 %207, true
  %212 = and i1 %205, %208
  %213 = or i1 %209, %210
  %214 = or i1 %211, %212
  %215 = xor i1 %213, %214
  %216 = or i1 %206, %207
  %217 = xor i1 %216, true
  %218 = or i1 true, %208
  %219 = and i1 %217, %218
  %220 = or i1 %215, %219
  %221 = or i1 %204, %205
  br i1 %220, label %222, label %1041

; <label>:222:                                    ; preds = %190
  br label %223

; <label>:223:                                    ; preds = %672, %222
  %224 = load i64, i64* %40, align 8
  %225 = load i32, i32* %39, align 4
  %226 = sext i32 %225 to i64
  %227 = icmp slt i64 %224, %226
  br i1 %227, label %228, label %673

; <label>:228:                                    ; preds = %223
  %229 = load i32, i32* %37, align 4
  %230 = srem i32 %229, 2
  %231 = sext i32 %230 to i64
  %232 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm(%"class.std::vector"* %30, i64 %231) #3
  %233 = load i64, i64* %40, align 8
  %234 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEixEm(%"class.std::vector.0"* %232, i64 %233) #3
  store %"class.std::unordered_map"* %234, %"class.std::unordered_map"** %41, align 8
  %235 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %41, align 8
  %236 = call %"struct.std::__detail::_Hash_node"* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEE5beginEv(%"class.std::unordered_map"* %235) #3
  %237 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %42, i32 0, i32 0
  %238 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %237, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %236, %"struct.std::__detail::_Hash_node"** %238, align 8
  %239 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %41, align 8
  %240 = call %"struct.std::__detail::_Hash_node"* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEE3endEv(%"class.std::unordered_map"* %239) #3
  %241 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %43, i32 0, i32 0
  %242 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %241, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %240, %"struct.std::__detail::_Hash_node"** %242, align 8
  br label %243

; <label>:243:                                    ; preds = %609, %228
  %244 = bitcast %"struct.std::__detail::_Node_iterator"* %42 to %"struct.std::__detail::_Node_iterator_base"*
  %245 = bitcast %"struct.std::__detail::_Node_iterator"* %43 to %"struct.std::__detail::_Node_iterator_base"*
  %246 = call zeroext i1 @_ZNSt8__detailneISt4pairIKixELb0EEEbRKNS_19_Node_iterator_baseIT_XT0_EEES8_(%"struct.std::__detail::_Node_iterator_base"* dereferenceable(8) %244, %"struct.std::__detail::_Node_iterator_base"* dereferenceable(8) %245) #3
  br i1 %246, label %247, label %611

; <label>:247:                                    ; preds = %243
  %248 = call dereferenceable(16) %"struct.std::pair"* @_ZNKSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEdeEv(%"struct.std::__detail::_Node_iterator"* %42) #3
  %249 = bitcast %"struct.std::pair"* %44 to i8*
  %250 = bitcast %"struct.std::pair"* %248 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %249, i8* %250, i64 16, i32 8, i1 false)
  %251 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %44, i32 0, i32 0
  %252 = load i32, i32* %251, align 8
  store i32 %252, i32* %45, align 4
  %253 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %44, i32 0, i32 1
  %254 = load i64, i64* %253, align 8
  store i64 %254, i64* %46, align 8
  %255 = load i32, i32* %37, align 4
  %256 = sub i32 %255, 34131032
  %257 = add i32 %256, 1
  %258 = add i32 %257, 34131032
  %259 = add nsw i32 %255, 1
  %260 = srem i32 %258, 2
  %261 = sext i32 %260 to i64
  %262 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm(%"class.std::vector"* %30, i64 %261) #3
  %263 = load i64, i64* %40, align 8
  %264 = sub i64 0, %263
  %265 = sub i64 0, 1
  %266 = add i64 %264, %265
  %267 = sub i64 0, %266
  %268 = add nsw i64 %263, 1
  %269 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEixEm(%"class.std::vector.0"* %262, i64 %267) #3
  %270 = load i32, i32* %45, align 4
  %271 = sext i32 %270 to i64
  %272 = load i64, i64* %40, align 8
  %273 = sub i64 %272, -6372283904328854150
  %274 = add i64 %273, 1
  %275 = add i64 %274, -6372283904328854150
  %276 = add nsw i64 %272, 1
  %277 = mul nsw i64 2, %275
  %278 = sub i64 %271, -8894413923690070600
  %279 = add i64 %278, %277
  %280 = add i64 %279, -8894413923690070600
  %281 = add nsw i64 %271, %277
  %282 = trunc i64 %280 to i32
  store i32 %282, i32* %47, align 4
  %283 = invoke dereferenceable(8) i64* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEixEOi(%"class.std::unordered_map"* %269, i32* dereferenceable(4) %47)
          to label %284 unwind label %518

; <label>:284:                                    ; preds = %247
  %285 = load i32, i32* @x.23
  %286 = load i32, i32* @y.24
  %287 = sub i32 %285, 2114526911
  %288 = sub i32 %287, 1
  %289 = add i32 %288, 2114526911
  %290 = sub i32 %285, 1
  %291 = mul i32 %285, %289
  %292 = urem i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %286, 10
  %295 = xor i1 %293, true
  %296 = xor i1 %294, true
  %297 = xor i1 true, true
  %298 = and i1 %295, true
  %299 = and i1 %293, %297
  %300 = and i1 %296, true
  %301 = and i1 %294, %297
  %302 = or i1 %298, %299
  %303 = or i1 %300, %301
  %304 = xor i1 %302, %303
  %305 = or i1 %295, %296
  %306 = xor i1 %305, true
  %307 = or i1 true, %297
  %308 = and i1 %306, %307
  %309 = or i1 %304, %308
  %310 = or i1 %293, %294
  br i1 %309, label %311, label %1064

; <label>:311:                                    ; preds = %284, %1064
  %312 = load i64, i64* %46, align 8
  %313 = load i32, i32* @x.23
  %314 = load i32, i32* @y.24
  %315 = sub i32 %313, -69826700
  %316 = sub i32 %315, 1
  %317 = add i32 %316, -69826700
  %318 = sub i32 %313, 1
  %319 = mul i32 %313, %317
  %320 = urem i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = icmp slt i32 %314, 10
  %323 = and i1 %321, %322
  %324 = xor i1 %321, %322
  %325 = or i1 %323, %324
  %326 = or i1 %321, %322
  br i1 %325, label %327, label %1064

; <label>:327:                                    ; preds = %311
  invoke void @_Z9limit_addRxx(i64* dereferenceable(8) %283, i64 %312)
          to label %328 unwind label %518

; <label>:328:                                    ; preds = %327
  %329 = load i32, i32* %37, align 4
  %330 = add i32 %329, -660242582
  %331 = add i32 %330, 1
  %332 = sub i32 %331, -660242582
  %333 = add nsw i32 %329, 1
  %334 = srem i32 %332, 2
  %335 = sext i32 %334 to i64
  %336 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm(%"class.std::vector"* %30, i64 %335) #3
  %337 = load i64, i64* %40, align 8
  %338 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEixEm(%"class.std::vector.0"* %336, i64 %337) #3
  %339 = load i32, i32* %45, align 4
  %340 = sext i32 %339 to i64
  %341 = load i64, i64* %40, align 8
  %342 = mul nsw i64 2, %341
  %343 = add i64 %340, 6278373460701345758
  %344 = add i64 %343, %342
  %345 = sub i64 %344, 6278373460701345758
  %346 = add nsw i64 %340, %342
  %347 = trunc i64 %345 to i32
  store i32 %347, i32* %48, align 4
  %348 = invoke dereferenceable(8) i64* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEixEOi(%"class.std::unordered_map"* %338, i32* dereferenceable(4) %48)
          to label %349 unwind label %518

; <label>:349:                                    ; preds = %328
  %350 = load i32, i32* @x.23
  %351 = load i32, i32* @y.24
  %352 = add i32 %350, -1821468963
  %353 = sub i32 %352, 1
  %354 = sub i32 %353, -1821468963
  %355 = sub i32 %350, 1
  %356 = mul i32 %350, %354
  %357 = urem i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %351, 10
  %360 = and i1 %358, %359
  %361 = xor i1 %358, %359
  %362 = or i1 %360, %361
  %363 = or i1 %358, %359
  br i1 %362, label %364, label %1066

; <label>:364:                                    ; preds = %349, %1066
  %365 = load i64, i64* %46, align 8
  %366 = load i64, i64* %40, align 8
  %367 = load i64, i64* %40, align 8
  %368 = sub i64 %366, 6138672268082385418
  %369 = add i64 %368, %367
  %370 = add i64 %369, 6138672268082385418
  %371 = add nsw i64 %366, %367
  %372 = add i64 %370, -6037112062320845214
  %373 = add i64 %372, 1
  %374 = sub i64 %373, -6037112062320845214
  %375 = add nsw i64 %370, 1
  %376 = mul nsw i64 %365, %374
  %377 = load i32, i32* @x.23
  %378 = load i32, i32* @y.24
  %379 = add i32 %377, -1100543676
  %380 = sub i32 %379, 1
  %381 = sub i32 %380, -1100543676
  %382 = sub i32 %377, 1
  %383 = mul i32 %377, %381
  %384 = urem i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = icmp slt i32 %378, 10
  %387 = and i1 %385, %386
  %388 = xor i1 %385, %386
  %389 = or i1 %387, %388
  %390 = or i1 %385, %386
  br i1 %389, label %391, label %1066

; <label>:391:                                    ; preds = %364
  invoke void @_Z9limit_addRxx(i64* dereferenceable(8) %348, i64 %376)
          to label %392 unwind label %518

; <label>:392:                                    ; preds = %391
  %393 = load i64, i64* %40, align 8
  %394 = icmp sgt i64 %393, 0
  br i1 %394, label %395, label %567

; <label>:395:                                    ; preds = %392
  %396 = load i32, i32* %37, align 4
  %397 = sub i32 0, 1
  %398 = sub i32 %396, %397
  %399 = add nsw i32 %396, 1
  %400 = srem i32 %398, 2
  %401 = sext i32 %400 to i64
  %402 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm(%"class.std::vector"* %30, i64 %401) #3
  %403 = load i64, i64* %40, align 8
  %404 = sub i64 0, 1
  %405 = add i64 %403, %404
  %406 = sub nsw i64 %403, 1
  %407 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEixEm(%"class.std::vector.0"* %402, i64 %405) #3
  %408 = load i32, i32* %45, align 4
  %409 = sext i32 %408 to i64
  %410 = load i64, i64* %40, align 8
  %411 = sub i64 0, 1
  %412 = add i64 %410, %411
  %413 = sub nsw i64 %410, 1
  %414 = mul nsw i64 2, %412
  %415 = sub i64 0, %414
  %416 = sub i64 %409, %415
  %417 = add nsw i64 %409, %414
  %418 = trunc i64 %416 to i32
  store i32 %418, i32* %49, align 4
  %419 = invoke dereferenceable(8) i64* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEixEOi(%"class.std::unordered_map"* %407, i32* dereferenceable(4) %49)
          to label %420 unwind label %518

; <label>:420:                                    ; preds = %395
  %421 = load i32, i32* @x.23
  %422 = load i32, i32* @y.24
  %423 = add i32 %421, -2084985526
  %424 = sub i32 %423, 1
  %425 = sub i32 %424, -2084985526
  %426 = sub i32 %421, 1
  %427 = mul i32 %421, %425
  %428 = urem i32 %427, 2
  %429 = icmp eq i32 %428, 0
  %430 = icmp slt i32 %422, 10
  %431 = xor i1 %429, true
  %432 = xor i1 %430, true
  %433 = xor i1 true, true
  %434 = and i1 %431, true
  %435 = and i1 %429, %433
  %436 = and i1 %432, true
  %437 = and i1 %430, %433
  %438 = or i1 %434, %435
  %439 = or i1 %436, %437
  %440 = xor i1 %438, %439
  %441 = or i1 %431, %432
  %442 = xor i1 %441, true
  %443 = or i1 true, %433
  %444 = and i1 %442, %443
  %445 = or i1 %440, %444
  %446 = or i1 %429, %430
  br i1 %445, label %447, label %1107

; <label>:447:                                    ; preds = %420, %1107
  %448 = load i64, i64* %46, align 8
  %449 = load i64, i64* %40, align 8
  %450 = load i64, i64* %40, align 8
  %451 = mul nsw i64 %449, %450
  %452 = mul nsw i64 %448, %451
  %453 = load i32, i32* @x.23
  %454 = load i32, i32* @y.24
  %455 = add i32 %453, 1378386129
  %456 = sub i32 %455, 1
  %457 = sub i32 %456, 1378386129
  %458 = sub i32 %453, 1
  %459 = mul i32 %453, %457
  %460 = urem i32 %459, 2
  %461 = icmp eq i32 %460, 0
  %462 = icmp slt i32 %454, 10
  %463 = and i1 %461, %462
  %464 = xor i1 %461, %462
  %465 = or i1 %463, %464
  %466 = or i1 %461, %462
  br i1 %465, label %467, label %1107

; <label>:467:                                    ; preds = %447
  invoke void @_Z9limit_addRxx(i64* dereferenceable(8) %419, i64 %452)
          to label %468 unwind label %518

; <label>:468:                                    ; preds = %467
  br label %567

; <label>:469:                                    ; preds = %65
  %470 = load i32, i32* @x.23
  %471 = load i32, i32* @y.24
  %472 = sub i32 0, 1
  %473 = add i32 %470, %472
  %474 = sub i32 %470, 1
  %475 = mul i32 %470, %473
  %476 = urem i32 %475, 2
  %477 = icmp eq i32 %476, 0
  %478 = icmp slt i32 %471, 10
  %479 = and i1 %477, %478
  %480 = xor i1 %477, %478
  %481 = or i1 %479, %480
  %482 = or i1 %477, %478
  br i1 %481, label %483, label %1166

; <label>:483:                                    ; preds = %469, %1166
  %484 = landingpad { i8*, i32 }
          cleanup
  %485 = extractvalue { i8*, i32 } %484, 0
  store i8* %485, i8** %32, align 8
  %486 = extractvalue { i8*, i32 } %484, 1
  store i32 %486, i32* %33, align 4
  call void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EED2Ev(%"class.std::vector.0"* %31) #3
  %487 = load i32, i32* @x.23
  %488 = load i32, i32* @y.24
  %489 = sub i32 %487, -76789760
  %490 = sub i32 %489, 1
  %491 = add i32 %490, -76789760
  %492 = sub i32 %487, 1
  %493 = mul i32 %487, %491
  %494 = urem i32 %493, 2
  %495 = icmp eq i32 %494, 0
  %496 = icmp slt i32 %488, 10
  %497 = xor i1 %495, true
  %498 = xor i1 %496, true
  %499 = xor i1 true, true
  %500 = and i1 %497, true
  %501 = and i1 %495, %499
  %502 = and i1 %498, true
  %503 = and i1 %496, %499
  %504 = or i1 %500, %501
  %505 = or i1 %502, %503
  %506 = xor i1 %504, %505
  %507 = or i1 %497, %498
  %508 = xor i1 %507, true
  %509 = or i1 true, %499
  %510 = and i1 %508, %509
  %511 = or i1 %506, %510
  %512 = or i1 %495, %496
  br i1 %511, label %513, label %1166

; <label>:513:                                    ; preds = %483
  br label %860

; <label>:514:                                    ; preds = %66
  %515 = landingpad { i8*, i32 }
          cleanup
  %516 = extractvalue { i8*, i32 } %515, 0
  store i8* %516, i8** %32, align 8
  %517 = extractvalue { i8*, i32 } %515, 1
  store i32 %517, i32* %33, align 4
  call void @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEED2Ev(%"class.std::unordered_map"* %35) #3
  br label %860

; <label>:518:                                    ; preds = %826, %770, %725, %467, %395, %391, %328, %327, %247, %71
  %519 = load i32, i32* @x.23
  %520 = load i32, i32* @y.24
  %521 = sub i32 0, 1
  %522 = add i32 %519, %521
  %523 = sub i32 %519, 1
  %524 = mul i32 %519, %522
  %525 = urem i32 %524, 2
  %526 = icmp eq i32 %525, 0
  %527 = icmp slt i32 %520, 10
  %528 = xor i1 %526, true
  %529 = xor i1 %527, true
  %530 = xor i1 false, true
  %531 = and i1 %528, false
  %532 = and i1 %526, %530
  %533 = and i1 %529, false
  %534 = and i1 %527, %530
  %535 = or i1 %531, %532
  %536 = or i1 %533, %534
  %537 = xor i1 %535, %536
  %538 = or i1 %528, %529
  %539 = xor i1 %538, true
  %540 = or i1 false, %530
  %541 = and i1 %539, %540
  %542 = or i1 %537, %541
  %543 = or i1 %526, %527
  br i1 %542, label %544, label %1170

; <label>:544:                                    ; preds = %518, %1170
  %545 = landingpad { i8*, i32 }
          cleanup
  %546 = extractvalue { i8*, i32 } %545, 0
  store i8* %546, i8** %32, align 8
  %547 = extractvalue { i8*, i32 } %545, 1
  store i32 %547, i32* %33, align 4
  %548 = load i32, i32* @x.23
  %549 = load i32, i32* @y.24
  %550 = add i32 %548, -1959527621
  %551 = sub i32 %550, 1
  %552 = sub i32 %551, -1959527621
  %553 = sub i32 %548, 1
  %554 = mul i32 %548, %552
  %555 = urem i32 %554, 2
  %556 = icmp eq i32 %555, 0
  %557 = icmp slt i32 %549, 10
  %558 = and i1 %556, %557
  %559 = xor i1 %556, %557
  %560 = or i1 %558, %559
  %561 = or i1 %556, %557
  br i1 %560, label %562, label %1170

; <label>:562:                                    ; preds = %544
  br label %860

; <label>:563:                                    ; preds = %174
  %564 = landingpad { i8*, i32 }
          cleanup
  %565 = extractvalue { i8*, i32 } %564, 0
  store i8* %565, i8** %32, align 8
  %566 = extractvalue { i8*, i32 } %564, 1
  store i32 %566, i32* %33, align 4
  call void @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEED2Ev(%"class.std::unordered_map"* %38) #3
  br label %860

; <label>:567:                                    ; preds = %468, %392
  %568 = load i32, i32* @x.23
  %569 = load i32, i32* @y.24
  %570 = sub i32 %568, 253544810
  %571 = sub i32 %570, 1
  %572 = add i32 %571, 253544810
  %573 = sub i32 %568, 1
  %574 = mul i32 %568, %572
  %575 = urem i32 %574, 2
  %576 = icmp eq i32 %575, 0
  %577 = icmp slt i32 %569, 10
  %578 = xor i1 %576, true
  %579 = xor i1 %577, true
  %580 = xor i1 true, true
  %581 = and i1 %578, true
  %582 = and i1 %576, %580
  %583 = and i1 %579, true
  %584 = and i1 %577, %580
  %585 = or i1 %581, %582
  %586 = or i1 %583, %584
  %587 = xor i1 %585, %586
  %588 = or i1 %578, %579
  %589 = xor i1 %588, true
  %590 = or i1 true, %580
  %591 = and i1 %589, %590
  %592 = or i1 %587, %591
  %593 = or i1 %576, %577
  br i1 %592, label %594, label %1174

; <label>:594:                                    ; preds = %567, %1174
  %595 = load i32, i32* @x.23
  %596 = load i32, i32* @y.24
  %597 = sub i32 0, 1
  %598 = add i32 %595, %597
  %599 = sub i32 %595, 1
  %600 = mul i32 %595, %598
  %601 = urem i32 %600, 2
  %602 = icmp eq i32 %601, 0
  %603 = icmp slt i32 %596, 10
  %604 = and i1 %602, %603
  %605 = xor i1 %602, %603
  %606 = or i1 %604, %605
  %607 = or i1 %602, %603
  br i1 %606, label %608, label %1174

; <label>:608:                                    ; preds = %594
  br label %609

; <label>:609:                                    ; preds = %608
  %610 = call dereferenceable(8) %"struct.std::__detail::_Node_iterator"* @_ZNSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEppEv(%"struct.std::__detail::_Node_iterator"* %42) #3
  br label %243

; <label>:611:                                    ; preds = %243
  br label %612

; <label>:612:                                    ; preds = %611
  %613 = load i32, i32* @x.23
  %614 = load i32, i32* @y.24
  %615 = add i32 %613, -3994419
  %616 = sub i32 %615, 1
  %617 = sub i32 %616, -3994419
  %618 = sub i32 %613, 1
  %619 = mul i32 %613, %617
  %620 = urem i32 %619, 2
  %621 = icmp eq i32 %620, 0
  %622 = icmp slt i32 %614, 10
  %623 = xor i1 %621, true
  %624 = xor i1 %622, true
  %625 = xor i1 true, true
  %626 = and i1 %623, true
  %627 = and i1 %621, %625
  %628 = and i1 %624, true
  %629 = and i1 %622, %625
  %630 = or i1 %626, %627
  %631 = or i1 %628, %629
  %632 = xor i1 %630, %631
  %633 = or i1 %623, %624
  %634 = xor i1 %633, true
  %635 = or i1 true, %625
  %636 = and i1 %634, %635
  %637 = or i1 %632, %636
  %638 = or i1 %621, %622
  br i1 %637, label %639, label %1175

; <label>:639:                                    ; preds = %612, %1175
  %640 = load i64, i64* %40, align 8
  %641 = sub i64 0, %640
  %642 = sub i64 0, 1
  %643 = add i64 %641, %642
  %644 = sub i64 0, %643
  %645 = add nsw i64 %640, 1
  store i64 %644, i64* %40, align 8
  %646 = load i32, i32* @x.23
  %647 = load i32, i32* @y.24
  %648 = add i32 %646, 1649640279
  %649 = sub i32 %648, 1
  %650 = sub i32 %649, 1649640279
  %651 = sub i32 %646, 1
  %652 = mul i32 %646, %650
  %653 = urem i32 %652, 2
  %654 = icmp eq i32 %653, 0
  %655 = icmp slt i32 %647, 10
  %656 = xor i1 %654, true
  %657 = xor i1 %655, true
  %658 = xor i1 false, true
  %659 = and i1 %656, false
  %660 = and i1 %654, %658
  %661 = and i1 %657, false
  %662 = and i1 %655, %658
  %663 = or i1 %659, %660
  %664 = or i1 %661, %662
  %665 = xor i1 %663, %664
  %666 = or i1 %656, %657
  %667 = xor i1 %666, true
  %668 = or i1 false, %658
  %669 = and i1 %667, %668
  %670 = or i1 %665, %669
  %671 = or i1 %654, %655
  br i1 %670, label %672, label %1175

; <label>:672:                                    ; preds = %639
  br label %223

; <label>:673:                                    ; preds = %223
  br label %674

; <label>:674:                                    ; preds = %673
  %675 = load i32, i32* %37, align 4
  %676 = sub i32 0, 1
  %677 = sub i32 %675, %676
  %678 = add nsw i32 %675, 1
  store i32 %677, i32* %37, align 4
  br label %106

; <label>:679:                                    ; preds = %106
  %680 = load i32, i32* @x.23
  %681 = load i32, i32* @y.24
  %682 = sub i32 0, 1
  %683 = add i32 %680, %682
  %684 = sub i32 %680, 1
  %685 = mul i32 %680, %683
  %686 = urem i32 %685, 2
  %687 = icmp eq i32 %686, 0
  %688 = icmp slt i32 %681, 10
  %689 = xor i1 %687, true
  %690 = xor i1 %688, true
  %691 = xor i1 false, true
  %692 = and i1 %689, false
  %693 = and i1 %687, %691
  %694 = and i1 %690, false
  %695 = and i1 %688, %691
  %696 = or i1 %692, %693
  %697 = or i1 %694, %695
  %698 = xor i1 %696, %697
  %699 = or i1 %689, %690
  %700 = xor i1 %699, true
  %701 = or i1 false, %691
  %702 = and i1 %700, %701
  %703 = or i1 %698, %702
  %704 = or i1 %687, %688
  br i1 %703, label %705, label %1206

; <label>:705:                                    ; preds = %679, %1206
  %706 = load i32, i32* %28, align 4
  %707 = srem i32 %706, 2
  %708 = sext i32 %707 to i64
  %709 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm(%"class.std::vector"* %30, i64 %708) #3
  %710 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEixEm(%"class.std::vector.0"* %709, i64 0) #3
  %711 = load i32, i32* @x.23
  %712 = load i32, i32* @y.24
  %713 = sub i32 %711, -1105662088
  %714 = sub i32 %713, 1
  %715 = add i32 %714, -1105662088
  %716 = sub i32 %711, 1
  %717 = mul i32 %711, %715
  %718 = urem i32 %717, 2
  %719 = icmp eq i32 %718, 0
  %720 = icmp slt i32 %712, 10
  %721 = and i1 %719, %720
  %722 = xor i1 %719, %720
  %723 = or i1 %721, %722
  %724 = or i1 %719, %720
  br i1 %723, label %725, label %1206

; <label>:725:                                    ; preds = %705
  %726 = invoke dereferenceable(8) i64* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEixERS5_(%"class.std::unordered_map"* %710, i32* dereferenceable(4) %29)
          to label %727 unwind label %518

; <label>:727:                                    ; preds = %725
  %728 = load i32, i32* @x.23
  %729 = load i32, i32* @y.24
  %730 = add i32 %728, 762887788
  %731 = sub i32 %730, 1
  %732 = sub i32 %731, 762887788
  %733 = sub i32 %728, 1
  %734 = mul i32 %728, %732
  %735 = urem i32 %734, 2
  %736 = icmp eq i32 %735, 0
  %737 = icmp slt i32 %729, 10
  %738 = and i1 %736, %737
  %739 = xor i1 %736, %737
  %740 = or i1 %738, %739
  %741 = or i1 %736, %737
  br i1 %740, label %742, label %1249

; <label>:742:                                    ; preds = %727, %1249
  %743 = load i64, i64* %726, align 8
  %744 = load i32, i32* @x.23
  %745 = load i32, i32* @y.24
  %746 = add i32 %744, -447558254
  %747 = sub i32 %746, 1
  %748 = sub i32 %747, -447558254
  %749 = sub i32 %744, 1
  %750 = mul i32 %744, %748
  %751 = urem i32 %750, 2
  %752 = icmp eq i32 %751, 0
  %753 = icmp slt i32 %745, 10
  %754 = xor i1 %752, true
  %755 = xor i1 %753, true
  %756 = xor i1 true, true
  %757 = and i1 %754, true
  %758 = and i1 %752, %756
  %759 = and i1 %755, true
  %760 = and i1 %753, %756
  %761 = or i1 %757, %758
  %762 = or i1 %759, %760
  %763 = xor i1 %761, %762
  %764 = or i1 %754, %755
  %765 = xor i1 %764, true
  %766 = or i1 true, %756
  %767 = and i1 %765, %766
  %768 = or i1 %763, %767
  %769 = or i1 %752, %753
  br i1 %768, label %770, label %1249

; <label>:770:                                    ; preds = %742
  %771 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %743)
          to label %772 unwind label %518

; <label>:772:                                    ; preds = %770
  %773 = load i32, i32* @x.23
  %774 = load i32, i32* @y.24
  %775 = sub i32 %773, -387461685
  %776 = sub i32 %775, 1
  %777 = add i32 %776, -387461685
  %778 = sub i32 %773, 1
  %779 = mul i32 %773, %777
  %780 = urem i32 %779, 2
  %781 = icmp eq i32 %780, 0
  %782 = icmp slt i32 %774, 10
  %783 = xor i1 %781, true
  %784 = xor i1 %782, true
  %785 = xor i1 true, true
  %786 = and i1 %783, true
  %787 = and i1 %781, %785
  %788 = and i1 %784, true
  %789 = and i1 %782, %785
  %790 = or i1 %786, %787
  %791 = or i1 %788, %789
  %792 = xor i1 %790, %791
  %793 = or i1 %783, %784
  %794 = xor i1 %793, true
  %795 = or i1 true, %785
  %796 = and i1 %794, %795
  %797 = or i1 %792, %796
  %798 = or i1 %781, %782
  br i1 %797, label %799, label %1251

; <label>:799:                                    ; preds = %772, %1251
  %800 = load i32, i32* @x.23
  %801 = load i32, i32* @y.24
  %802 = add i32 %800, 1023906821
  %803 = sub i32 %802, 1
  %804 = sub i32 %803, 1023906821
  %805 = sub i32 %800, 1
  %806 = mul i32 %800, %804
  %807 = urem i32 %806, 2
  %808 = icmp eq i32 %807, 0
  %809 = icmp slt i32 %801, 10
  %810 = xor i1 %808, true
  %811 = xor i1 %809, true
  %812 = xor i1 false, true
  %813 = and i1 %810, false
  %814 = and i1 %808, %812
  %815 = and i1 %811, false
  %816 = and i1 %809, %812
  %817 = or i1 %813, %814
  %818 = or i1 %815, %816
  %819 = xor i1 %817, %818
  %820 = or i1 %810, %811
  %821 = xor i1 %820, true
  %822 = or i1 false, %812
  %823 = and i1 %821, %822
  %824 = or i1 %819, %823
  %825 = or i1 %808, %809
  br i1 %824, label %826, label %1251

; <label>:826:                                    ; preds = %799
  %827 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %771, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %828 unwind label %518

; <label>:828:                                    ; preds = %826
  %829 = load i32, i32* @x.23
  %830 = load i32, i32* @y.24
  %831 = sub i32 %829, 724505298
  %832 = sub i32 %831, 1
  %833 = add i32 %832, 724505298
  %834 = sub i32 %829, 1
  %835 = mul i32 %829, %833
  %836 = urem i32 %835, 2
  %837 = icmp eq i32 %836, 0
  %838 = icmp slt i32 %830, 10
  %839 = and i1 %837, %838
  %840 = xor i1 %837, %838
  %841 = or i1 %839, %840
  %842 = or i1 %837, %838
  br i1 %841, label %843, label %1252

; <label>:843:                                    ; preds = %828, %1252
  store i32 0, i32* %27, align 4
  call void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EED2Ev(%"class.std::vector"* %30) #3
  %844 = load i32, i32* %27, align 4
  %845 = load i32, i32* @x.23
  %846 = load i32, i32* @y.24
  %847 = add i32 %845, 715811546
  %848 = sub i32 %847, 1
  %849 = sub i32 %848, 715811546
  %850 = sub i32 %845, 1
  %851 = mul i32 %845, %849
  %852 = urem i32 %851, 2
  %853 = icmp eq i32 %852, 0
  %854 = icmp slt i32 %846, 10
  %855 = and i1 %853, %854
  %856 = xor i1 %853, %854
  %857 = or i1 %855, %856
  %858 = or i1 %853, %854
  br i1 %857, label %859, label %1252

; <label>:859:                                    ; preds = %843
  ret i32 %844

; <label>:860:                                    ; preds = %563, %562, %514, %513
  call void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EED2Ev(%"class.std::vector"* %30) #3
  br label %861

; <label>:861:                                    ; preds = %860
  %862 = load i8*, i8** %32, align 8
  %863 = load i32, i32* %33, align 4
  %864 = insertvalue { i8*, i32 } undef, i8* %862, 0
  %865 = insertvalue { i8*, i32 } %864, i32 %863, 1
  resume { i8*, i32 } %865

; <label>:866:                                    ; preds = %26, %0
  %867 = alloca i32, align 4
  %868 = alloca i32, align 4
  %869 = alloca i32, align 4
  %870 = alloca %"class.std::vector", align 8
  %871 = alloca %"class.std::vector.0", align 8
  %872 = alloca i8*
  %873 = alloca i32
  %874 = alloca i32, align 4
  %875 = alloca %"class.std::unordered_map", align 8
  %876 = alloca i32, align 4
  %877 = alloca i32, align 4
  %878 = alloca %"class.std::unordered_map", align 8
  %879 = alloca i32, align 4
  %880 = alloca i64, align 8
  %881 = alloca %"class.std::unordered_map"*, align 8
  %882 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %883 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %884 = alloca %"struct.std::pair", align 8
  %885 = alloca i32, align 4
  %886 = alloca i64, align 8
  %887 = alloca i32, align 4
  %888 = alloca i32, align 4
  %889 = alloca i32, align 4
  store i32 0, i32* %867, align 4
  %890 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %868)
  %891 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %869)
  call void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEC2Ev(%"class.std::vector"* %870) #3
  call void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2Ev(%"class.std::vector.0"* %871) #3
  br label %26

; <label>:892:                                    ; preds = %90, %75
  store i64 1, i64* %74, align 8
  store i32 0, i32* %37, align 4
  br label %90

; <label>:893:                                    ; preds = %125, %110
  %894 = load i32, i32* %37, align 4
  %895 = shl i32 %894, 1
  %896 = sub i32 0, %894
  %897 = add i32 0, %896
  %898 = sub i32 0, %894
  %899 = sub i32 %897, -673564647
  %900 = add i32 %899, 1
  %901 = add i32 %900, -673564647
  %902 = add i32 %897, 1
  %903 = add i32 0, 1330952052
  %904 = sub i32 %903, %894
  %905 = sub i32 %904, 1330952052
  %906 = sub i32 0, %894
  %907 = sub i32 0, 1
  %908 = sub i32 %905, %907
  %909 = add i32 %905, 1
  %910 = sub i32 %894, 268571608
  %911 = sub i32 %910, 1
  %912 = add i32 %911, 268571608
  %913 = sub i32 %894, 1
  %914 = mul i32 %912, 1
  %915 = sub i32 0, 1252931053
  %916 = sub i32 %915, %894
  %917 = add i32 %916, 1252931053
  %918 = sub i32 0, %894
  %919 = sub i32 0, 1
  %920 = sub i32 %917, %919
  %921 = add i32 %917, 1
  %922 = sub i32 0, %894
  %923 = sub i32 0, 1
  %924 = add i32 %922, %923
  %925 = sub i32 0, %924
  %926 = add nsw i32 %894, 1
  %927 = sub i32 0, %925
  %928 = add i32 0, %927
  %929 = sub i32 0, %925
  %930 = sub i32 %928, 218068140
  %931 = add i32 %930, 2
  %932 = add i32 %931, 218068140
  %933 = add i32 %928, 2
  %934 = add i32 %925, 1477798129
  %935 = sub i32 %934, 2
  %936 = sub i32 %935, 1477798129
  %937 = sub i32 %925, 2
  %938 = mul i32 %936, 2
  %939 = shl i32 %925, 2
  %940 = srem i32 %925, 2
  %941 = sext i32 %940 to i64
  %942 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm(%"class.std::vector"* %30, i64 %941) #3
  call void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE5clearEv(%"class.std::vector.0"* %942) #3
  %943 = load i32, i32* %37, align 4
  %944 = sub i32 0, 1
  %945 = add i32 %943, %944
  %946 = sub i32 %943, 1
  %947 = mul i32 %945, 1
  %948 = sub i32 %943, -1089350582
  %949 = sub i32 %948, 1
  %950 = add i32 %949, -1089350582
  %951 = sub i32 %943, 1
  %952 = mul i32 %950, 1
  %953 = shl i32 %943, 1
  %954 = shl i32 %943, 1
  %955 = sub i32 0, 1
  %956 = sub i32 %943, %955
  %957 = add nsw i32 %943, 1
  %958 = add i32 %956, -172852671
  %959 = sub i32 %958, 2
  %960 = sub i32 %959, -172852671
  %961 = sub i32 %956, 2
  %962 = mul i32 %960, 2
  %963 = add i32 %956, 938287070
  %964 = sub i32 %963, 2
  %965 = sub i32 %964, 938287070
  %966 = sub i32 %956, 2
  %967 = mul i32 %965, 2
  %968 = sub i32 0, 2
  %969 = add i32 %956, %968
  %970 = sub i32 %956, 2
  %971 = mul i32 %969, 2
  %972 = shl i32 %956, 2
  %973 = shl i32 %956, 2
  %974 = sub i32 0, 2
  %975 = add i32 %956, %974
  %976 = sub i32 %956, 2
  %977 = mul i32 %975, 2
  %978 = sub i32 %956, 1606395057
  %979 = sub i32 %978, 2
  %980 = add i32 %979, 1606395057
  %981 = sub i32 %956, 2
  %982 = mul i32 %980, 2
  %983 = sub i32 0, -2086950741
  %984 = sub i32 %983, %956
  %985 = add i32 %984, -2086950741
  %986 = sub i32 0, %956
  %987 = sub i32 %985, 835098348
  %988 = add i32 %987, 2
  %989 = add i32 %988, 835098348
  %990 = add i32 %985, 2
  %991 = srem i32 %956, 2
  %992 = sext i32 %991 to i64
  %993 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm(%"class.std::vector"* %30, i64 %992) #3
  %994 = load i32, i32* %37, align 4
  %995 = sub i32 0, -1688090334
  %996 = sub i32 %995, %994
  %997 = add i32 %996, -1688090334
  %998 = sub i32 0, %994
  %999 = sub i32 %997, -3200012
  %1000 = add i32 %999, 2
  %1001 = add i32 %1000, -3200012
  %1002 = add i32 %997, 2
  %1003 = sub i32 0, %994
  %1004 = add i32 0, %1003
  %1005 = sub i32 0, %994
  %1006 = sub i32 %1004, 180098408
  %1007 = add i32 %1006, 2
  %1008 = add i32 %1007, 180098408
  %1009 = add i32 %1004, 2
  %1010 = sub i32 0, 2
  %1011 = add i32 %994, %1010
  %1012 = sub i32 %994, 2
  %1013 = mul i32 %1011, 2
  %1014 = sub i32 0, %994
  %1015 = add i32 0, %1014
  %1016 = sub i32 0, %994
  %1017 = sub i32 %1015, 1558411376
  %1018 = add i32 %1017, 2
  %1019 = add i32 %1018, 1558411376
  %1020 = add i32 %1015, 2
  %1021 = shl i32 %994, 2
  %1022 = shl i32 %994, 2
  %1023 = sub i32 %994, -1669912035
  %1024 = sub i32 %1023, 2
  %1025 = add i32 %1024, -1669912035
  %1026 = sub i32 %994, 2
  %1027 = mul i32 %1025, 2
  %1028 = add i32 0, -1350028724
  %1029 = sub i32 %1028, %994
  %1030 = sub i32 %1029, -1350028724
  %1031 = sub i32 0, %994
  %1032 = sub i32 0, 2
  %1033 = sub i32 %1030, %1032
  %1034 = add i32 %1030, 2
  %1035 = add i32 %994, 524966786
  %1036 = add i32 %1035, 2
  %1037 = sub i32 %1036, 524966786
  %1038 = add nsw i32 %994, 2
  %1039 = sext i32 %1037 to i64
  %1040 = bitcast %"class.std::unordered_map"* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* %1040, i8 0, i64 56, i32 8, i1 false)
  call void @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEC2Ev(%"class.std::unordered_map"* %38) #3
  br label %125

; <label>:1041:                                   ; preds = %190, %175
  call void @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEED2Ev(%"class.std::unordered_map"* %38) #3
  %1042 = load i32, i32* %37, align 4
  %1043 = shl i32 %1042, 2
  %1044 = sub i32 0, %1042
  %1045 = add i32 0, %1044
  %1046 = sub i32 0, %1042
  %1047 = sub i32 %1045, 1403799002
  %1048 = add i32 %1047, 2
  %1049 = add i32 %1048, 1403799002
  %1050 = add i32 %1045, 2
  %1051 = shl i32 %1042, 2
  %1052 = add i32 0, -2022286571
  %1053 = sub i32 %1052, %1042
  %1054 = sub i32 %1053, -2022286571
  %1055 = sub i32 0, %1042
  %1056 = sub i32 0, 2
  %1057 = sub i32 %1054, %1056
  %1058 = add i32 %1054, 2
  %1059 = srem i32 %1042, 2
  %1060 = sext i32 %1059 to i64
  %1061 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm(%"class.std::vector"* %30, i64 %1060) #3
  %1062 = call i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE4sizeEv(%"class.std::vector.0"* %1061) #3
  %1063 = trunc i64 %1062 to i32
  store i32 %1063, i32* %39, align 4
  store i64 0, i64* %40, align 8
  br label %190

; <label>:1064:                                   ; preds = %311, %284
  %1065 = load i64, i64* %46, align 8
  br label %311

; <label>:1066:                                   ; preds = %364, %349
  %1067 = load i64, i64* %46, align 8
  %1068 = load i64, i64* %40, align 8
  %1069 = load i64, i64* %40, align 8
  %1070 = sub i64 %1068, -8212065422341418408
  %1071 = sub i64 %1070, %1069
  %1072 = add i64 %1071, -8212065422341418408
  %1073 = sub i64 %1068, %1069
  %1074 = mul i64 %1072, %1069
  %1075 = sub i64 %1068, -257381828546890750
  %1076 = add i64 %1075, %1069
  %1077 = add i64 %1076, -257381828546890750
  %1078 = add nsw i64 %1068, %1069
  %1079 = add i64 0, 6239782081288628645
  %1080 = sub i64 %1079, %1077
  %1081 = sub i64 %1080, 6239782081288628645
  %1082 = sub i64 0, %1077
  %1083 = sub i64 %1081, -1405453203804367703
  %1084 = add i64 %1083, 1
  %1085 = add i64 %1084, -1405453203804367703
  %1086 = add i64 %1081, 1
  %1087 = sub i64 0, 1
  %1088 = add i64 %1077, %1087
  %1089 = sub i64 %1077, 1
  %1090 = mul i64 %1088, 1
  %1091 = add i64 %1077, -1922369150270035655
  %1092 = sub i64 %1091, 1
  %1093 = sub i64 %1092, -1922369150270035655
  %1094 = sub i64 %1077, 1
  %1095 = mul i64 %1093, 1
  %1096 = sub i64 0, 1
  %1097 = sub i64 %1077, %1096
  %1098 = add nsw i64 %1077, 1
  %1099 = shl i64 %1067, %1097
  %1100 = shl i64 %1067, %1097
  %1101 = sub i64 0, %1097
  %1102 = add i64 %1067, %1101
  %1103 = sub i64 %1067, %1097
  %1104 = mul i64 %1102, %1097
  %1105 = shl i64 %1067, %1097
  %1106 = mul nsw i64 %1067, %1097
  br label %364

; <label>:1107:                                   ; preds = %447, %420
  %1108 = load i64, i64* %46, align 8
  %1109 = load i64, i64* %40, align 8
  %1110 = load i64, i64* %40, align 8
  %1111 = shl i64 %1109, %1110
  %1112 = add i64 0, -4128174788714463364
  %1113 = sub i64 %1112, %1109
  %1114 = sub i64 %1113, -4128174788714463364
  %1115 = sub i64 0, %1109
  %1116 = sub i64 0, %1110
  %1117 = sub i64 %1114, %1116
  %1118 = add i64 %1114, %1110
  %1119 = shl i64 %1109, %1110
  %1120 = mul nsw i64 %1109, %1110
  %1121 = sub i64 %1108, 5524473602793781190
  %1122 = sub i64 %1121, %1120
  %1123 = add i64 %1122, 5524473602793781190
  %1124 = sub i64 %1108, %1120
  %1125 = mul i64 %1123, %1120
  %1126 = sub i64 0, %1108
  %1127 = add i64 0, %1126
  %1128 = sub i64 0, %1108
  %1129 = sub i64 0, %1127
  %1130 = sub i64 0, %1120
  %1131 = add i64 %1129, %1130
  %1132 = sub i64 0, %1131
  %1133 = add i64 %1127, %1120
  %1134 = add i64 %1108, 5179399706245959195
  %1135 = sub i64 %1134, %1120
  %1136 = sub i64 %1135, 5179399706245959195
  %1137 = sub i64 %1108, %1120
  %1138 = mul i64 %1136, %1120
  %1139 = sub i64 0, 3979557227754716941
  %1140 = sub i64 %1139, %1108
  %1141 = add i64 %1140, 3979557227754716941
  %1142 = sub i64 0, %1108
  %1143 = sub i64 0, %1141
  %1144 = sub i64 0, %1120
  %1145 = add i64 %1143, %1144
  %1146 = sub i64 0, %1145
  %1147 = add i64 %1141, %1120
  %1148 = sub i64 %1108, 5300980244923193502
  %1149 = sub i64 %1148, %1120
  %1150 = add i64 %1149, 5300980244923193502
  %1151 = sub i64 %1108, %1120
  %1152 = mul i64 %1150, %1120
  %1153 = add i64 0, -8283806840187672090
  %1154 = sub i64 %1153, %1108
  %1155 = sub i64 %1154, -8283806840187672090
  %1156 = sub i64 0, %1108
  %1157 = sub i64 0, %1120
  %1158 = sub i64 %1155, %1157
  %1159 = add i64 %1155, %1120
  %1160 = sub i64 %1108, -3228850283779544153
  %1161 = sub i64 %1160, %1120
  %1162 = add i64 %1161, -3228850283779544153
  %1163 = sub i64 %1108, %1120
  %1164 = mul i64 %1162, %1120
  %1165 = mul nsw i64 %1108, %1120
  br label %447

; <label>:1166:                                   ; preds = %483, %469
  %1167 = landingpad { i8*, i32 }
          cleanup
  %1168 = extractvalue { i8*, i32 } %1167, 0
  store i8* %1168, i8** %32, align 8
  %1169 = extractvalue { i8*, i32 } %1167, 1
  store i32 %1169, i32* %33, align 4
  call void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EED2Ev(%"class.std::vector.0"* %31) #3
  br label %483

; <label>:1170:                                   ; preds = %544, %518
  %1171 = landingpad { i8*, i32 }
          cleanup
  %1172 = extractvalue { i8*, i32 } %1171, 0
  store i8* %1172, i8** %32, align 8
  %1173 = extractvalue { i8*, i32 } %1171, 1
  store i32 %1173, i32* %33, align 4
  br label %544

; <label>:1174:                                   ; preds = %594, %567
  br label %594

; <label>:1175:                                   ; preds = %639, %612
  %1176 = load i64, i64* %40, align 8
  %1177 = shl i64 %1176, 1
  %1178 = sub i64 %1176, -5838394944691566624
  %1179 = sub i64 %1178, 1
  %1180 = add i64 %1179, -5838394944691566624
  %1181 = sub i64 %1176, 1
  %1182 = mul i64 %1180, 1
  %1183 = shl i64 %1176, 1
  %1184 = sub i64 %1176, 6041588577941792421
  %1185 = sub i64 %1184, 1
  %1186 = add i64 %1185, 6041588577941792421
  %1187 = sub i64 %1176, 1
  %1188 = mul i64 %1186, 1
  %1189 = shl i64 %1176, 1
  %1190 = sub i64 %1176, 8300403034498953521
  %1191 = sub i64 %1190, 1
  %1192 = add i64 %1191, 8300403034498953521
  %1193 = sub i64 %1176, 1
  %1194 = mul i64 %1192, 1
  %1195 = sub i64 0, -1615139410557277145
  %1196 = sub i64 %1195, %1176
  %1197 = add i64 %1196, -1615139410557277145
  %1198 = sub i64 0, %1176
  %1199 = sub i64 0, 1
  %1200 = sub i64 %1197, %1199
  %1201 = add i64 %1197, 1
  %1202 = add i64 %1176, 6484922291108378187
  %1203 = add i64 %1202, 1
  %1204 = sub i64 %1203, 6484922291108378187
  %1205 = add nsw i64 %1176, 1
  store i64 %1204, i64* %40, align 8
  br label %639

; <label>:1206:                                   ; preds = %705, %679
  %1207 = load i32, i32* %28, align 4
  %1208 = add i32 0, -390629824
  %1209 = sub i32 %1208, %1207
  %1210 = sub i32 %1209, -390629824
  %1211 = sub i32 0, %1207
  %1212 = sub i32 0, 2
  %1213 = sub i32 %1210, %1212
  %1214 = add i32 %1210, 2
  %1215 = shl i32 %1207, 2
  %1216 = shl i32 %1207, 2
  %1217 = add i32 %1207, 247893985
  %1218 = sub i32 %1217, 2
  %1219 = sub i32 %1218, 247893985
  %1220 = sub i32 %1207, 2
  %1221 = mul i32 %1219, 2
  %1222 = add i32 %1207, 582783497
  %1223 = sub i32 %1222, 2
  %1224 = sub i32 %1223, 582783497
  %1225 = sub i32 %1207, 2
  %1226 = mul i32 %1224, 2
  %1227 = shl i32 %1207, 2
  %1228 = sub i32 0, -485596804
  %1229 = sub i32 %1228, %1207
  %1230 = add i32 %1229, -485596804
  %1231 = sub i32 0, %1207
  %1232 = sub i32 0, %1230
  %1233 = sub i32 0, 2
  %1234 = add i32 %1232, %1233
  %1235 = sub i32 0, %1234
  %1236 = add i32 %1230, 2
  %1237 = sub i32 0, %1207
  %1238 = add i32 0, %1237
  %1239 = sub i32 0, %1207
  %1240 = add i32 %1238, -264135418
  %1241 = add i32 %1240, 2
  %1242 = sub i32 %1241, -264135418
  %1243 = add i32 %1238, 2
  %1244 = shl i32 %1207, 2
  %1245 = srem i32 %1207, 2
  %1246 = sext i32 %1245 to i64
  %1247 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm(%"class.std::vector"* %30, i64 %1246) #3
  %1248 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEixEm(%"class.std::vector.0"* %1247, i64 0) #3
  br label %705

; <label>:1249:                                   ; preds = %742, %727
  %1250 = load i64, i64* %726, align 8
  br label %742

; <label>:1251:                                   ; preds = %799, %772
  br label %799

; <label>:1252:                                   ; preds = %843, %828
  store i32 0, i32* %27, align 4
  call void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EED2Ev(%"class.std::vector"* %30) #3
  %1253 = load i32, i32* %27, align 4
  br label %843
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEC2Ev(%"class.std::vector"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  invoke void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EEC2Ev(%"struct.std::_Vector_base"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #11
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE6assignEmRKSB_(%"class.std::vector"*, i64, %"class.std::vector.0"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.27
  %7 = load i32, i32* @y.28
  %8 = sub i32 %6, -1104875112
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1104875112
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1488449911, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1488449911, label %20
    i32 1890164136, label %40
    i32 -2058617641, label %62
    i32 -1417047656, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1890164136, i32 -1417047656
  store i32 %39, i32* %16
  br label %70

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector"*, align 8
  %42 = alloca i64, align 8
  %43 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %41, align 8
  store i64 %1, i64* %42, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %43, align 8
  %44 = load %"class.std::vector"*, %"class.std::vector"** %41, align 8
  %45 = load i64, i64* %42, align 8
  %46 = load %"class.std::vector.0"*, %"class.std::vector.0"** %43, align 8
  call void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE14_M_fill_assignEmRKSB_(%"class.std::vector"* %44, i64 %45, %"class.std::vector.0"* dereferenceable(24) %46)
  %47 = load i32, i32* @x.27
  %48 = load i32, i32* @y.28
  %49 = sub i32 %47, -882816602
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -882816602
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -2058617641, i32 -1417047656
  store i32 %61, i32* %16
  br label %70

; <label>:62:                                     ; preds = %17
  ret void

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.std::vector"*, align 8
  %65 = alloca i64, align 8
  %66 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %64, align 8
  store i64 %1, i64* %65, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %66, align 8
  %67 = load %"class.std::vector"*, %"class.std::vector"** %64, align 8
  %68 = load i64, i64* %65, align 8
  %69 = load %"class.std::vector.0"*, %"class.std::vector.0"** %66, align 8
  call void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE14_M_fill_assignEmRKSB_(%"class.std::vector"* %67, i64 %68, %"class.std::vector.0"* dereferenceable(24) %69)
  store i32 1890164136, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2Ev(%"class.std::vector.0"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  invoke void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2Ev(%"struct.std::_Vector_base.1"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #11
  unreachable
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EED2Ev(%"class.std::vector.0"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.0"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %8, align 8
  %10 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %12, align 8
  %14 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %15 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %14) #3
  invoke void @_ZSt8_DestroyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEES9_EvT_SB_RSaIT0_E(%"class.std::unordered_map"* %9, %"class.std::unordered_map"* %13, %"class.std::allocator.2"* dereferenceable(1) %15)
          to label %16 unwind label %47

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.31
  %18 = load i32, i32* @y.32
  %19 = add i32 %17, 1412195706
  %20 = sub i32 %19, 1
  %21 = sub i32 %20, 1412195706
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  br i1 %29, label %31, label %96

; <label>:31:                                     ; preds = %16, %96
  %32 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EED2Ev(%"struct.std::_Vector_base.1"* %32) #3
  %33 = load i32, i32* @x.31
  %34 = load i32, i32* @y.32
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %96

; <label>:46:                                     ; preds = %31
  ret void

; <label>:47:                                     ; preds = %1
  %48 = landingpad { i8*, i32 }
          catch i8* null
  %49 = extractvalue { i8*, i32 } %48, 0
  store i8* %49, i8** %3, align 8
  %50 = extractvalue { i8*, i32 } %48, 1
  store i32 %50, i32* %4, align 4
  %51 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EED2Ev(%"struct.std::_Vector_base.1"* %51) #3
  br label %52

; <label>:52:                                     ; preds = %47
  %53 = load i32, i32* @x.31
  %54 = load i32, i32* @y.32
  %55 = add i32 %53, 1678933527
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, 1678933527
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 false, true
  %66 = and i1 %63, false
  %67 = and i1 %61, %65
  %68 = and i1 %64, false
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 false, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  br i1 %77, label %79, label %98

; <label>:79:                                     ; preds = %52, %98
  %80 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %80) #11
  %81 = load i32, i32* @x.31
  %82 = load i32, i32* @y.32
  %83 = sub i32 %81, 109854977
  %84 = sub i32 %83, 1
  %85 = add i32 %84, 109854977
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  br i1 %93, label %95, label %98

; <label>:95:                                     ; preds = %79
  unreachable

; <label>:96:                                     ; preds = %31, %16
  %97 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EED2Ev(%"struct.std::_Vector_base.1"* %97) #3
  br label %31

; <label>:98:                                     ; preds = %79, %52
  %99 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %99) #11
  br label %79
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE6assignEmRKS9_(%"class.std::vector.0"*, i64, %"class.std::unordered_map"* dereferenceable(56)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.33
  %7 = load i32, i32* @y.34
  %8 = add i32 %6, -1462076783
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1462076783
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -616695945, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %69
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -616695945, label %20
    i32 1952798469, label %40
    i32 1832869911, label %61
    i32 644064858, label %62
  ]

; <label>:19:                                     ; preds = %17
  br label %69

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1952798469, i32 644064858
  store i32 %39, i32* %16
  br label %69

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector.0"*, align 8
  %42 = alloca i64, align 8
  %43 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %41, align 8
  store i64 %1, i64* %42, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %43, align 8
  %44 = load %"class.std::vector.0"*, %"class.std::vector.0"** %41, align 8
  %45 = load i64, i64* %42, align 8
  %46 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %43, align 8
  call void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE14_M_fill_assignEmRKS9_(%"class.std::vector.0"* %44, i64 %45, %"class.std::unordered_map"* dereferenceable(56) %46)
  %47 = load i32, i32* @x.33
  %48 = load i32, i32* @y.34
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 1832869911, i32 644064858
  store i32 %60, i32* %16
  br label %69

; <label>:61:                                     ; preds = %17
  ret void

; <label>:62:                                     ; preds = %17
  %63 = alloca %"class.std::vector.0"*, align 8
  %64 = alloca i64, align 8
  %65 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %63, align 8
  store i64 %1, i64* %64, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %65, align 8
  %66 = load %"class.std::vector.0"*, %"class.std::vector.0"** %63, align 8
  %67 = load i64, i64* %64, align 8
  %68 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %65, align 8
  call void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE14_M_fill_assignEmRKS9_(%"class.std::vector.0"* %66, i64 %67, %"class.std::unordered_map"* dereferenceable(56) %68)
  store i32 1952798469, i32* %16
  br label %69

; <label>:69:                                     ; preds = %62, %40, %20, %19
  br label %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEC2Ev(%"class.std::unordered_map"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %2, align 8
  %3 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %2, align 8
  %4 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %3, i32 0, i32 0
  call void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEC2Ev(%"class.std::_Hashtable"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEED2Ev(%"class.std::unordered_map"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %2, align 8
  %3 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %2, align 8
  %4 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %3, i32 0, i32 0
  call void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEED2Ev(%"class.std::_Hashtable"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEixEOi(%"class.std::unordered_map"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.39
  %7 = load i32, i32* @y.40
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1879074231, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1879074231, label %19
    i32 1778128335, label %27
    i32 -2033662182, label %62
    i32 -359507562, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1778128335, i32 -359507562
  store i32 %26, i32* %15
  br label %73

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::unordered_map"*, align 8
  %29 = alloca i32*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %28, align 8
  store i32* %1, i32** %29, align 8
  %30 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %28, align 8
  %31 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %30, i32 0, i32 0
  %32 = bitcast %"class.std::_Hashtable"* %31 to %"struct.std::__detail::_Map_base"*
  %33 = load i32*, i32** %29, align 8
  %34 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %33) #3
  %35 = call dereferenceable(8) i64* @_ZNSt8__detail9_Map_baseIiSt4pairIKixESaIS3_ENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb0ELb0ELb1EEELb1EEixEOi(%"struct.std::__detail::_Map_base"* %32, i32* dereferenceable(4) %34)
  store i64* %35, i64** %3
  %36 = load i32, i32* @x.39
  %37 = load i32, i32* @y.40
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 -2033662182, i32 -359507562
  store i32 %61, i32* %15
  br label %73

; <label>:62:                                     ; preds = %16
  %63 = load volatile i64*, i64** %3
  ret i64* %63

; <label>:64:                                     ; preds = %16
  %65 = alloca %"class.std::unordered_map"*, align 8
  %66 = alloca i32*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %65, align 8
  store i32* %1, i32** %66, align 8
  %67 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %65, align 8
  %68 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %67, i32 0, i32 0
  %69 = bitcast %"class.std::_Hashtable"* %68 to %"struct.std::__detail::_Map_base"*
  %70 = load i32*, i32** %66, align 8
  %71 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %70) #3
  %72 = call dereferenceable(8) i64* @_ZNSt8__detail9_Map_baseIiSt4pairIKixESaIS3_ENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb0ELb0ELb1EEELb1EEixEOi(%"struct.std::__detail::_Map_base"* %69, i32* dereferenceable(4) %71)
  store i32 1778128335, i32* %15
  br label %73

; <label>:73:                                     ; preds = %64, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE5clearEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.41
  %5 = load i32, i32* @y.42
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 374425883, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %79
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 374425883, label %17
    i32 -1910807843, label %37
    i32 314625291, label %71
    i32 -484404019, label %72
  ]

; <label>:16:                                     ; preds = %14
  br label %79

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -1910807843, i32 -484404019
  store i32 %36, i32* %13
  br label %79

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %38, align 8
  %39 = load %"class.std::vector.0"*, %"class.std::vector.0"** %38, align 8
  %40 = bitcast %"class.std::vector.0"* %39 to %"struct.std::_Vector_base.1"*
  %41 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %40, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %41, i32 0, i32 0
  %43 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %42, align 8
  call void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE15_M_erase_at_endEPS9_(%"class.std::vector.0"* %39, %"class.std::unordered_map"* %43) #3
  %44 = load i32, i32* @x.41
  %45 = load i32, i32* @y.42
  %46 = sub i32 %44, -418623238
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -418623238
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 314625291, i32 -484404019
  store i32 %70, i32* %13
  br label %79

; <label>:71:                                     ; preds = %14
  ret void

; <label>:72:                                     ; preds = %14
  %73 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %73, align 8
  %74 = load %"class.std::vector.0"*, %"class.std::vector.0"** %73, align 8
  %75 = bitcast %"class.std::vector.0"* %74 to %"struct.std::_Vector_base.1"*
  %76 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %76, i32 0, i32 0
  %78 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %77, align 8
  call void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE15_M_erase_at_endEPS9_(%"class.std::vector.0"* %74, %"class.std::unordered_map"* %78) #3
  store i32 -1910807843, i32* %13
  br label %79

; <label>:79:                                     ; preds = %72, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEixERS5_(%"class.std::unordered_map"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca %"class.std::unordered_map"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %3, align 8
  %6 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %5, i32 0, i32 0
  %7 = bitcast %"class.std::_Hashtable"* %6 to %"struct.std::__detail::_Map_base"*
  %8 = load i32*, i32** %4, align 8
  %9 = call dereferenceable(8) i64* @_ZNSt8__detail9_Map_baseIiSt4pairIKixESaIS3_ENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb0ELb0ELb1EEELb1EEixERS2_(%"struct.std::__detail::_Map_base"* %7, i32* dereferenceable(4) %8)
  ret i64* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EED2Ev(%"class.std::vector"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  %10 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::vector.0"*, %"class.std::vector.0"** %12, align 8
  %14 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14) #3
  invoke void @_ZSt8_DestroyIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESC_EvT_SE_RSaIT0_E(%"class.std::vector.0"* %9, %"class.std::vector.0"* %13, %"class.std::allocator"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EED2Ev(%"struct.std::_Vector_base"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EED2Ev(%"struct.std::_Vector_base"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEC2Ev(%"class.std::_Hashtable"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::_Hashtable"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %2, align 8
  %3 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %2, align 8
  %4 = bitcast %"class.std::_Hashtable"* %3 to %"struct.std::__detail::_Hashtable_base"*
  %5 = bitcast %"class.std::_Hashtable"* %3 to %"struct.std::__detail::_Map_base"*
  %6 = bitcast %"class.std::_Hashtable"* %3 to %"struct.std::__detail::_Insert"*
  %7 = bitcast %"class.std::_Hashtable"* %3 to %"struct.std::__detail::_Rehash_base"*
  %8 = bitcast %"class.std::_Hashtable"* %3 to %"struct.std::__detail::_Equality"*
  %9 = bitcast %"class.std::_Hashtable"* %3 to %"struct.std::__detail::_Hashtable_alloc"*
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEEC2Ev(%"struct.std::__detail::_Hashtable_alloc"* %9) #3
  %10 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 5
  store %"struct.std::__detail::_Hash_node_base"** %11, %"struct.std::__detail::_Hash_node_base"*** %10, align 8
  %12 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 1
  store i64 1, i64* %12, align 8
  %13 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 2
  call void @_ZNSt8__detail15_Hash_node_baseC2Ev(%"struct.std::__detail::_Hash_node_base"* %13) #3
  %14 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 3
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 4
  call void @_ZNSt8__detail20_Prime_rehash_policyC2Ef(%"struct.std::__detail::_Prime_rehash_policy"* %15, float 1.000000e+00) #3
  %16 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 5
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %16, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEEC2Ev(%"struct.std::__detail::_Hashtable_alloc"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_alloc"* %3 to %"struct.std::__detail::_Hashtable_ebo_helper.8"*
  call void @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EEC2Ev(%"struct.std::__detail::_Hashtable_ebo_helper.8"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail15_Hash_node_baseC2Ev(%"struct.std::__detail::_Hash_node_base"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node_base"*, align 8
  store %"struct.std::__detail::_Hash_node_base"* %0, %"struct.std::__detail::_Hash_node_base"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %3, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail20_Prime_rehash_policyC2Ef(%"struct.std::__detail::_Prime_rehash_policy"*, float) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.53
  %6 = load i32, i32* @y.54
  %7 = add i32 %5, 398499568
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 398499568
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -201236979, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -201236979, label %19
    i32 -651171448, label %27
    i32 -597315361, label %60
    i32 -984893115, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -651171448, i32 -984893115
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::__detail::_Prime_rehash_policy"*, align 8
  %29 = alloca float, align 4
  store %"struct.std::__detail::_Prime_rehash_policy"* %0, %"struct.std::__detail::_Prime_rehash_policy"** %28, align 8
  store float %1, float* %29, align 4
  %30 = load %"struct.std::__detail::_Prime_rehash_policy"*, %"struct.std::__detail::_Prime_rehash_policy"** %28, align 8
  %31 = getelementptr inbounds %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Prime_rehash_policy"* %30, i32 0, i32 0
  %32 = load float, float* %29, align 4
  store float %32, float* %31, align 8
  %33 = getelementptr inbounds %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Prime_rehash_policy"* %30, i32 0, i32 1
  store i64 0, i64* %33, align 8
  %34 = load i32, i32* @x.53
  %35 = load i32, i32* @y.54
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -597315361, i32 -984893115
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::__detail::_Prime_rehash_policy"*, align 8
  %63 = alloca float, align 4
  store %"struct.std::__detail::_Prime_rehash_policy"* %0, %"struct.std::__detail::_Prime_rehash_policy"** %62, align 8
  store float %1, float* %63, align 4
  %64 = load %"struct.std::__detail::_Prime_rehash_policy"*, %"struct.std::__detail::_Prime_rehash_policy"** %62, align 8
  %65 = getelementptr inbounds %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Prime_rehash_policy"* %64, i32 0, i32 0
  %66 = load float, float* %63, align 4
  store float %66, float* %65, align 8
  %67 = getelementptr inbounds %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Prime_rehash_policy"* %64, i32 0, i32 1
  store i64 0, i64* %67, align 8
  store i32 -651171448, i32* %15
  br label %68

; <label>:68:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EEC2Ev(%"struct.std::__detail::_Hashtable_ebo_helper.8"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.8"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.8"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.8"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_ebo_helper.8"*, %"struct.std::__detail::_Hashtable_ebo_helper.8"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.8"* %3 to %"class.std::allocator.9"*
  call void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEC2Ev(%"class.std::allocator.9"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEC2Ev(%"class.std::allocator.9"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %2, align 8
  %3 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %2, align 8
  %4 = bitcast %"class.std::allocator.9"* %3 to %"class.__gnu_cxx::new_allocator.10"*
  call void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEC2Ev(%"class.__gnu_cxx::new_allocator.10"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEC2Ev(%"class.__gnu_cxx::new_allocator.10"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEED2Ev(%"class.std::_Hashtable"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::_Hashtable"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %2, align 8
  %5 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %2, align 8
  call void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv(%"class.std::_Hashtable"* %5) #3
  invoke void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_deallocate_bucketsEv(%"class.std::_Hashtable"* %5)
          to label %6 unwind label %8

; <label>:6:                                      ; preds = %1
  %7 = bitcast %"class.std::_Hashtable"* %5 to %"struct.std::__detail::_Hashtable_alloc"*
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEED2Ev(%"struct.std::__detail::_Hashtable_alloc"* %7) #3
  ret void

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* @x.61
  %10 = load i32, i32* @y.62
  %11 = sub i32 %9, -732421660
  %12 = sub i32 %11, 1
  %13 = add i32 %12, -732421660
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %10, 10
  %19 = xor i1 %17, true
  %20 = xor i1 %18, true
  %21 = xor i1 false, true
  %22 = and i1 %19, false
  %23 = and i1 %17, %21
  %24 = and i1 %20, false
  %25 = and i1 %18, %21
  %26 = or i1 %22, %23
  %27 = or i1 %24, %25
  %28 = xor i1 %26, %27
  %29 = or i1 %19, %20
  %30 = xor i1 %29, true
  %31 = or i1 false, %21
  %32 = and i1 %30, %31
  %33 = or i1 %28, %32
  %34 = or i1 %17, %18
  br i1 %33, label %35, label %109

; <label>:35:                                     ; preds = %8, %109
  %36 = landingpad { i8*, i32 }
          catch i8* null
  %37 = extractvalue { i8*, i32 } %36, 0
  store i8* %37, i8** %3, align 8
  %38 = extractvalue { i8*, i32 } %36, 1
  store i32 %38, i32* %4, align 4
  %39 = bitcast %"class.std::_Hashtable"* %5 to %"struct.std::__detail::_Hashtable_alloc"*
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEED2Ev(%"struct.std::__detail::_Hashtable_alloc"* %39) #3
  %40 = load i32, i32* @x.61
  %41 = load i32, i32* @y.62
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  br i1 %63, label %65, label %109

; <label>:65:                                     ; preds = %35
  br label %66

; <label>:66:                                     ; preds = %65
  %67 = load i32, i32* @x.61
  %68 = load i32, i32* @y.62
  %69 = sub i32 %67, 1721797245
  %70 = sub i32 %69, 1
  %71 = add i32 %70, 1721797245
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 false, true
  %80 = and i1 %77, false
  %81 = and i1 %75, %79
  %82 = and i1 %78, false
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 false, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  br i1 %91, label %93, label %114

; <label>:93:                                     ; preds = %66, %114
  %94 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %94) #11
  %95 = load i32, i32* @x.61
  %96 = load i32, i32* @y.62
  %97 = sub i32 0, 1
  %98 = add i32 %95, %97
  %99 = sub i32 %95, 1
  %100 = mul i32 %95, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %96, 10
  %104 = and i1 %102, %103
  %105 = xor i1 %102, %103
  %106 = or i1 %104, %105
  %107 = or i1 %102, %103
  br i1 %106, label %108, label %114

; <label>:108:                                    ; preds = %93
  unreachable

; <label>:109:                                    ; preds = %35, %8
  %110 = landingpad { i8*, i32 }
          catch i8* null
  %111 = extractvalue { i8*, i32 } %110, 0
  store i8* %111, i8** %3, align 8
  %112 = extractvalue { i8*, i32 } %110, 1
  store i32 %112, i32* %4, align 4
  %113 = bitcast %"class.std::_Hashtable"* %5 to %"struct.std::__detail::_Hashtable_alloc"*
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEED2Ev(%"struct.std::__detail::_Hashtable_alloc"* %113) #3
  br label %35

; <label>:114:                                    ; preds = %93, %66
  %115 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %115) #11
  br label %93
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv(%"class.std::_Hashtable"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::_Hashtable"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %2, align 8
  %3 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %2, align 8
  %4 = bitcast %"class.std::_Hashtable"* %3 to %"struct.std::__detail::_Hashtable_alloc"*
  %5 = invoke %"struct.std::__detail::_Hash_node"* @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_beginEv(%"class.std::_Hashtable"* %3)
          to label %6 unwind label %17

; <label>:6:                                      ; preds = %1
  invoke void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE19_M_deallocate_nodesEPS5_(%"struct.std::__detail::_Hashtable_alloc"* %4, %"struct.std::__detail::_Hash_node"* %5)
          to label %7 unwind label %17

; <label>:7:                                      ; preds = %6
  %8 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 0
  %9 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %8, align 8
  %10 = bitcast %"struct.std::__detail::_Hash_node_base"** %9 to i8*
  %11 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = mul i64 %12, 8
  call void @llvm.memset.p0i8.i64(i8* %10, i8 0, i64 %13, i32 8, i1 false)
  %14 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 3
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 2
  %16 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %15, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %16, align 8
  ret void

; <label>:17:                                     ; preds = %6, %1
  %18 = landingpad { i8*, i32 }
          catch i8* null
  %19 = extractvalue { i8*, i32 } %18, 0
  call void @__clang_call_terminate(i8* %19) #11
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_deallocate_bucketsEv(%"class.std::_Hashtable"*) #0 comdat align 2 {
  %2 = alloca %"class.std::_Hashtable"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %2, align 8
  %3 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 0
  %5 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %4, align 8
  %6 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  call void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_deallocate_bucketsEPPNS4_15_Hash_node_baseEm(%"class.std::_Hashtable"* %3, %"struct.std::__detail::_Hash_node_base"** %5, i64 %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEED2Ev(%"struct.std::__detail::_Hashtable_alloc"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_alloc"* %3 to %"struct.std::__detail::_Hashtable_ebo_helper.8"*
  call void @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EED2Ev(%"struct.std::__detail::_Hashtable_ebo_helper.8"* %4) #3
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #7 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.69
  %5 = load i32, i32* @y.70
  %6 = add i32 %4, 488477527
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 488477527
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 138967464, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %58
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 138967464, label %18
    i32 1271762090, label %38
    i32 1441292460, label %55
    i32 614303822, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %58

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1271762090, i32 614303822
  store i32 %37, i32* %14
  br label %58

; <label>:38:                                     ; preds = %15
  %39 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #11
  %40 = load i32, i32* @x.69
  %41 = load i32, i32* @y.70
  %42 = sub i32 %40, -110255963
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -110255963
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 1441292460, i32 614303822
  store i32 %54, i32* %14
  br label %58

; <label>:55:                                     ; preds = %15
  unreachable

; <label>:56:                                     ; preds = %15
  %57 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #11
  store i32 1271762090, i32* %14
  br label %58

; <label>:58:                                     ; preds = %56, %38, %18, %17
  br label %15
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE19_M_deallocate_nodesEPS5_(%"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hash_node"*) #0 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Hashtable_alloc"*
  %4 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %6 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %4, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %5, align 8
  %7 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %4, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %7, %"struct.std::__detail::_Hashtable_alloc"** %3
  %8 = alloca i32
  store i32 -404577665, i32* %8
  br label %9

; <label>:9:                                      ; preds = %2, %105
  %10 = load i32, i32* %8
  switch i32 %10, label %11 [
    i32 -404577665, label %12
    i32 -1023726130, label %16
    i32 -1119429272, label %32
    i32 1176723234, label %52
    i32 1504329301, label %53
    i32 348077696, label %81
    i32 -1805673099, label %97
    i32 1083191535, label %98
    i32 787512462, label %104
  ]

; <label>:11:                                     ; preds = %9
  br label %105

; <label>:12:                                     ; preds = %9
  %13 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %5, align 8
  %14 = icmp ne %"struct.std::__detail::_Hash_node"* %13, null
  %15 = select i1 %14, i32 -1023726130, i32 1504329301
  store i32 %15, i32* %8
  br label %105

; <label>:16:                                     ; preds = %9
  %17 = load i32, i32* @x.71
  %18 = load i32, i32* @y.72
  %19 = add i32 %17, 1779016110
  %20 = sub i32 %19, 1
  %21 = sub i32 %20, 1779016110
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 -1119429272, i32 1083191535
  store i32 %31, i32* %8
  br label %105

; <label>:32:                                     ; preds = %9
  %33 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %5, align 8
  store %"struct.std::__detail::_Hash_node"* %33, %"struct.std::__detail::_Hash_node"** %6, align 8
  %34 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %5, align 8
  %35 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %34) #3
  store %"struct.std::__detail::_Hash_node"* %35, %"struct.std::__detail::_Hash_node"** %5, align 8
  %36 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %6, align 8
  %37 = load volatile %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %3
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE18_M_deallocate_nodeEPS5_(%"struct.std::__detail::_Hashtable_alloc"* %37, %"struct.std::__detail::_Hash_node"* %36)
  %38 = load i32, i32* @x.71
  %39 = load i32, i32* @y.72
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 1176723234, i32 1083191535
  store i32 %51, i32* %8
  br label %105

; <label>:52:                                     ; preds = %9
  store i32 -404577665, i32* %8
  br label %105

; <label>:53:                                     ; preds = %9
  %54 = load i32, i32* @x.71
  %55 = load i32, i32* @y.72
  %56 = sub i32 %54, -1506119162
  %57 = sub i32 %56, 1
  %58 = add i32 %57, -1506119162
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 false, true
  %67 = and i1 %64, false
  %68 = and i1 %62, %66
  %69 = and i1 %65, false
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 false, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  %80 = select i1 %78, i32 348077696, i32 787512462
  store i32 %80, i32* %8
  br label %105

; <label>:81:                                     ; preds = %9
  %82 = load i32, i32* @x.71
  %83 = load i32, i32* @y.72
  %84 = add i32 %82, -1079790790
  %85 = sub i32 %84, 1
  %86 = sub i32 %85, -1079790790
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  %96 = select i1 %94, i32 -1805673099, i32 787512462
  store i32 %96, i32* %8
  br label %105

; <label>:97:                                     ; preds = %9
  ret void

; <label>:98:                                     ; preds = %9
  %99 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %5, align 8
  store %"struct.std::__detail::_Hash_node"* %99, %"struct.std::__detail::_Hash_node"** %6, align 8
  %100 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %5, align 8
  %101 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %100) #3
  store %"struct.std::__detail::_Hash_node"* %101, %"struct.std::__detail::_Hash_node"** %5, align 8
  %102 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %6, align 8
  %103 = load volatile %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %3
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE18_M_deallocate_nodeEPS5_(%"struct.std::__detail::_Hashtable_alloc"* %103, %"struct.std::__detail::_Hash_node"* %102)
  store i32 -1119429272, i32* %8
  br label %105

; <label>:104:                                    ; preds = %9
  store i32 348077696, i32* %8
  br label %105

; <label>:105:                                    ; preds = %104, %98, %81, %53, %52, %32, %16, %12, %11
  br label %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_beginEv(%"class.std::_Hashtable"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Hashtable"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %2, align 8
  %3 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 2
  %5 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %4, i32 0, i32 0
  %6 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %5, align 8
  %7 = bitcast %"struct.std::__detail::_Hash_node_base"* %6 to %"struct.std::__detail::_Hash_node"*
  ret %"struct.std::__detail::_Hash_node"* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.75
  %6 = load i32, i32* @y.76
  %7 = sub i32 %5, -482902288
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -482902288
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2083043834, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %82
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2083043834, label %19
    i32 -1348531768, label %39
    i32 573342366, label %73
    i32 575793329, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %82

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1348531768, i32 575793329
  store i32 %38, i32* %15
  br label %82

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_node"* %0, %"struct.std::__detail::_Hash_node"** %40, align 8
  %41 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %40, align 8
  %42 = bitcast %"struct.std::__detail::_Hash_node"* %41 to %"struct.std::__detail::_Hash_node_base"*
  %43 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %42, i32 0, i32 0
  %44 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %43, align 8
  %45 = bitcast %"struct.std::__detail::_Hash_node_base"* %44 to %"struct.std::__detail::_Hash_node"*
  store %"struct.std::__detail::_Hash_node"* %45, %"struct.std::__detail::_Hash_node"** %2
  %46 = load i32, i32* @x.75
  %47 = load i32, i32* @y.76
  %48 = sub i32 %46, -1174121434
  %49 = sub i32 %48, 1
  %50 = add i32 %49, -1174121434
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 573342366, i32 575793329
  store i32 %72, i32* %15
  br label %82

; <label>:73:                                     ; preds = %16
  %74 = load volatile %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %2
  ret %"struct.std::__detail::_Hash_node"* %74

; <label>:75:                                     ; preds = %16
  %76 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_node"* %0, %"struct.std::__detail::_Hash_node"** %76, align 8
  %77 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %76, align 8
  %78 = bitcast %"struct.std::__detail::_Hash_node"* %77 to %"struct.std::__detail::_Hash_node_base"*
  %79 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %78, i32 0, i32 0
  %80 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %79, align 8
  %81 = bitcast %"struct.std::__detail::_Hash_node_base"* %80 to %"struct.std::__detail::_Hash_node"*
  store i32 -1348531768, i32* %15
  br label %82

; <label>:82:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE18_M_deallocate_nodeEPS5_(%"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hash_node"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  %4 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %6 = alloca %"class.std::allocator.12", align 1
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %3, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %4, align 8
  %9 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %3, align 8
  %10 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %4, align 8
  %11 = call %"struct.std::__detail::_Hash_node"* @_ZNSt14pointer_traitsIPNSt8__detail10_Hash_nodeISt4pairIKixELb0EEEE10pointer_toERS5_(%"struct.std::__detail::_Hash_node"* dereferenceable(24) %10) #3
  store %"struct.std::__detail::_Hash_node"* %11, %"struct.std::__detail::_Hash_node"** %5, align 8
  %12 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %9)
  call void @_ZNSaISt4pairIKixEEC2INSt8__detail10_Hash_nodeIS1_Lb0EEEEERKSaIT_E(%"class.std::allocator.12"* %6, %"class.std::allocator.9"* dereferenceable(1) %12) #3
  %13 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %4, align 8
  %14 = bitcast %"struct.std::__detail::_Hash_node"* %13 to %"struct.std::__detail::_Hash_node_value_base"*
  %15 = call %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"* %14) #3
  invoke void @_ZNSt16allocator_traitsISaISt4pairIKixEEE7destroyIS2_EEvRS3_PT_(%"class.std::allocator.12"* dereferenceable(1) %6, %"struct.std::pair"* %15)
          to label %16 unwind label %128

; <label>:16:                                     ; preds = %2
  %17 = load i32, i32* @x.77
  %18 = load i32, i32* @y.78
  %19 = sub i32 %17, 2128374856
  %20 = sub i32 %19, 1
  %21 = add i32 %20, 2128374856
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  br i1 %41, label %43, label %220

; <label>:43:                                     ; preds = %16, %220
  %44 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %4, align 8
  %45 = load i32, i32* @x.77
  %46 = load i32, i32* @y.78
  %47 = sub i32 %45, 1835963277
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 1835963277
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  br i1 %69, label %71, label %220

; <label>:71:                                     ; preds = %43
  %72 = invoke dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %9)
          to label %73 unwind label %128

; <label>:73:                                     ; preds = %71
  %74 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %5, align 8
  invoke void @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE10deallocateERS6_PS5_m(%"class.std::allocator.9"* dereferenceable(1) %72, %"struct.std::__detail::_Hash_node"* %74, i64 1)
          to label %75 unwind label %128

; <label>:75:                                     ; preds = %73
  %76 = load i32, i32* @x.77
  %77 = load i32, i32* @y.78
  %78 = sub i32 0, 1
  %79 = add i32 %76, %78
  %80 = sub i32 %76, 1
  %81 = mul i32 %76, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %77, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 true, true
  %88 = and i1 %85, true
  %89 = and i1 %83, %87
  %90 = and i1 %86, true
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 true, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  br i1 %99, label %101, label %222

; <label>:101:                                    ; preds = %75, %222
  call void @_ZNSaISt4pairIKixEED2Ev(%"class.std::allocator.12"* %6) #3
  %102 = load i32, i32* @x.77
  %103 = load i32, i32* @y.78
  %104 = sub i32 0, 1
  %105 = add i32 %102, %104
  %106 = sub i32 %102, 1
  %107 = mul i32 %102, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %103, 10
  %111 = xor i1 %109, true
  %112 = xor i1 %110, true
  %113 = xor i1 true, true
  %114 = and i1 %111, true
  %115 = and i1 %109, %113
  %116 = and i1 %112, true
  %117 = and i1 %110, %113
  %118 = or i1 %114, %115
  %119 = or i1 %116, %117
  %120 = xor i1 %118, %119
  %121 = or i1 %111, %112
  %122 = xor i1 %121, true
  %123 = or i1 true, %113
  %124 = and i1 %122, %123
  %125 = or i1 %120, %124
  %126 = or i1 %109, %110
  br i1 %125, label %127, label %222

; <label>:127:                                    ; preds = %101
  ret void

; <label>:128:                                    ; preds = %73, %71, %2
  %129 = load i32, i32* @x.77
  %130 = load i32, i32* @y.78
  %131 = add i32 %129, 421600647
  %132 = sub i32 %131, 1
  %133 = sub i32 %132, 421600647
  %134 = sub i32 %129, 1
  %135 = mul i32 %129, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %130, 10
  %139 = xor i1 %137, true
  %140 = xor i1 %138, true
  %141 = xor i1 true, true
  %142 = and i1 %139, true
  %143 = and i1 %137, %141
  %144 = and i1 %140, true
  %145 = and i1 %138, %141
  %146 = or i1 %142, %143
  %147 = or i1 %144, %145
  %148 = xor i1 %146, %147
  %149 = or i1 %139, %140
  %150 = xor i1 %149, true
  %151 = or i1 true, %141
  %152 = and i1 %150, %151
  %153 = or i1 %148, %152
  %154 = or i1 %137, %138
  br i1 %153, label %155, label %223

; <label>:155:                                    ; preds = %128, %223
  %156 = landingpad { i8*, i32 }
          cleanup
  %157 = extractvalue { i8*, i32 } %156, 0
  store i8* %157, i8** %7, align 8
  %158 = extractvalue { i8*, i32 } %156, 1
  store i32 %158, i32* %8, align 4
  call void @_ZNSaISt4pairIKixEED2Ev(%"class.std::allocator.12"* %6) #3
  %159 = load i32, i32* @x.77
  %160 = load i32, i32* @y.78
  %161 = add i32 %159, -123799080
  %162 = sub i32 %161, 1
  %163 = sub i32 %162, -123799080
  %164 = sub i32 %159, 1
  %165 = mul i32 %159, %163
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %160, 10
  %169 = and i1 %167, %168
  %170 = xor i1 %167, %168
  %171 = or i1 %169, %170
  %172 = or i1 %167, %168
  br i1 %171, label %173, label %223

; <label>:173:                                    ; preds = %155
  br label %174

; <label>:174:                                    ; preds = %173
  %175 = load i32, i32* @x.77
  %176 = load i32, i32* @y.78
  %177 = sub i32 0, 1
  %178 = add i32 %175, %177
  %179 = sub i32 %175, 1
  %180 = mul i32 %175, %178
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %176, 10
  %184 = and i1 %182, %183
  %185 = xor i1 %182, %183
  %186 = or i1 %184, %185
  %187 = or i1 %182, %183
  br i1 %186, label %188, label %227

; <label>:188:                                    ; preds = %174, %227
  %189 = load i8*, i8** %7, align 8
  %190 = load i32, i32* %8, align 4
  %191 = insertvalue { i8*, i32 } undef, i8* %189, 0
  %192 = insertvalue { i8*, i32 } %191, i32 %190, 1
  %193 = load i32, i32* @x.77
  %194 = load i32, i32* @y.78
  %195 = add i32 %193, 981041013
  %196 = sub i32 %195, 1
  %197 = sub i32 %196, 981041013
  %198 = sub i32 %193, 1
  %199 = mul i32 %193, %197
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %194, 10
  %203 = xor i1 %201, true
  %204 = xor i1 %202, true
  %205 = xor i1 true, true
  %206 = and i1 %203, true
  %207 = and i1 %201, %205
  %208 = and i1 %204, true
  %209 = and i1 %202, %205
  %210 = or i1 %206, %207
  %211 = or i1 %208, %209
  %212 = xor i1 %210, %211
  %213 = or i1 %203, %204
  %214 = xor i1 %213, true
  %215 = or i1 true, %205
  %216 = and i1 %214, %215
  %217 = or i1 %212, %216
  %218 = or i1 %201, %202
  br i1 %217, label %219, label %227

; <label>:219:                                    ; preds = %188
  resume { i8*, i32 } %192

; <label>:220:                                    ; preds = %43, %16
  %221 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %4, align 8
  br label %43

; <label>:222:                                    ; preds = %101, %75
  call void @_ZNSaISt4pairIKixEED2Ev(%"class.std::allocator.12"* %6) #3
  br label %101

; <label>:223:                                    ; preds = %155, %128
  %224 = landingpad { i8*, i32 }
          cleanup
  %225 = extractvalue { i8*, i32 } %224, 0
  store i8* %225, i8** %7, align 8
  %226 = extractvalue { i8*, i32 } %224, 1
  store i32 %226, i32* %8, align 4
  call void @_ZNSaISt4pairIKixEED2Ev(%"class.std::allocator.12"* %6) #3
  br label %155

; <label>:227:                                    ; preds = %188, %174
  %228 = load i8*, i8** %7, align 8
  %229 = load i32, i32* %8, align 4
  %230 = insertvalue { i8*, i32 } undef, i8* %228, 0
  %231 = insertvalue { i8*, i32 } %230, i32 %229, 1
  br label %188
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNSt14pointer_traitsIPNSt8__detail10_Hash_nodeISt4pairIKixELb0EEEE10pointer_toERS5_(%"struct.std::__detail::_Hash_node"* dereferenceable(24)) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.79
  %6 = load i32, i32* @y.80
  %7 = sub i32 %5, -447718441
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -447718441
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 488873522, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %52
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 488873522, label %19
    i32 -1266759514, label %27
    i32 -387155927, label %46
    i32 1346281782, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %52

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1266759514, i32 1346281782
  store i32 %26, i32* %15
  br label %52

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_node"* %0, %"struct.std::__detail::_Hash_node"** %28, align 8
  %29 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %28, align 8
  %30 = call %"struct.std::__detail::_Hash_node"* @_ZSt9addressofINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEPT_RS6_(%"struct.std::__detail::_Hash_node"* dereferenceable(24) %29) #3
  store %"struct.std::__detail::_Hash_node"* %30, %"struct.std::__detail::_Hash_node"** %2
  %31 = load i32, i32* @x.79
  %32 = load i32, i32* @y.80
  %33 = sub i32 %31, 1008594638
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 1008594638
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -387155927, i32 1346281782
  store i32 %45, i32* %15
  br label %52

; <label>:46:                                     ; preds = %16
  %47 = load volatile %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %2
  ret %"struct.std::__detail::_Hash_node"* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_node"* %0, %"struct.std::__detail::_Hash_node"** %49, align 8
  %50 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %49, align 8
  %51 = call %"struct.std::__detail::_Hash_node"* @_ZSt9addressofINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEPT_RS6_(%"struct.std::__detail::_Hash_node"* dereferenceable(24) %50) #3
  store i32 -1266759514, i32* %15
  br label %52

; <label>:52:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"*) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.9"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.81
  %6 = load i32, i32* @y.82
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1399352903, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %53
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1399352903, label %18
    i32 -1931858013, label %26
    i32 1233911040, label %46
    i32 -290025572, label %48
  ]

; <label>:17:                                     ; preds = %15
  br label %53

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1931858013, i32 -290025572
  store i32 %25, i32* %14
  br label %53

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %27, align 8
  %28 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %27, align 8
  %29 = bitcast %"struct.std::__detail::_Hashtable_alloc"* %28 to %"struct.std::__detail::_Hashtable_ebo_helper.8"*
  %30 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EE6_S_getERS7_(%"struct.std::__detail::_Hashtable_ebo_helper.8"* dereferenceable(1) %29)
  store %"class.std::allocator.9"* %30, %"class.std::allocator.9"** %2
  %31 = load i32, i32* @x.81
  %32 = load i32, i32* @y.82
  %33 = add i32 %31, 1934877325
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 1934877325
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 1233911040, i32 -290025572
  store i32 %45, i32* %14
  br label %53

; <label>:46:                                     ; preds = %15
  %47 = load volatile %"class.std::allocator.9"*, %"class.std::allocator.9"** %2
  ret %"class.std::allocator.9"* %47

; <label>:48:                                     ; preds = %15
  %49 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %49, align 8
  %50 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %49, align 8
  %51 = bitcast %"struct.std::__detail::_Hashtable_alloc"* %50 to %"struct.std::__detail::_Hashtable_ebo_helper.8"*
  %52 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EE6_S_getERS7_(%"struct.std::__detail::_Hashtable_ebo_helper.8"* dereferenceable(1) %51)
  store i32 -1931858013, i32* %14
  br label %53

; <label>:53:                                     ; preds = %48, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt4pairIKixEEC2INSt8__detail10_Hash_nodeIS1_Lb0EEEEERKSaIT_E(%"class.std::allocator.12"*, %"class.std::allocator.9"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.12"*, align 8
  %4 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %3, align 8
  store %"class.std::allocator.9"* %1, %"class.std::allocator.9"** %4, align 8
  %5 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %3, align 8
  %6 = bitcast %"class.std::allocator.12"* %5 to %"class.__gnu_cxx::new_allocator.13"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIKixEEC2Ev(%"class.__gnu_cxx::new_allocator.13"* %6) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIKixEEE7destroyIS2_EEvRS3_PT_(%"class.std::allocator.12"* dereferenceable(1), %"struct.std::pair"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.12"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %3, align 8
  %6 = bitcast %"class.std::allocator.12"* %5 to %"class.__gnu_cxx::new_allocator.13"*
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIKixEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator.13"* %6, %"struct.std::pair"* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node_value_base"*, align 8
  store %"struct.std::__detail::_Hash_node_value_base"* %0, %"struct.std::__detail::_Hash_node_value_base"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node_value_base"*, %"struct.std::__detail::_Hash_node_value_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::__detail::_Hash_node_value_base", %"struct.std::__detail::_Hash_node_value_base"* %3, i32 0, i32 1
  %5 = call %"struct.std::pair"* @_ZN9__gnu_cxx16__aligned_bufferISt4pairIKixEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_buffer"* %4) #3
  ret %"struct.std::pair"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE10deallocateERS6_PS5_m(%"class.std::allocator.9"* dereferenceable(1), %"struct.std::__detail::_Hash_node"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.9"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %4, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %4, align 8
  %8 = bitcast %"class.std::allocator.9"* %7 to %"class.__gnu_cxx::new_allocator.10"*
  %9 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator.10"* %8, %"struct.std::__detail::_Hash_node"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt4pairIKixEED2Ev(%"class.std::allocator.12"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.12"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %2, align 8
  %3 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %2, align 8
  %4 = bitcast %"class.std::allocator.12"* %3 to %"class.__gnu_cxx::new_allocator.13"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIKixEED2Ev(%"class.__gnu_cxx::new_allocator.13"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZSt9addressofINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEPT_RS6_(%"struct.std::__detail::_Hash_node"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_node"* %0, %"struct.std::__detail::_Hash_node"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %2, align 8
  %4 = call %"struct.std::__detail::_Hash_node"* @_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEPT_RS6_(%"struct.std::__detail::_Hash_node"* dereferenceable(24) %3) #3
  ret %"struct.std::__detail::_Hash_node"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEPT_RS6_(%"struct.std::__detail::_Hash_node"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_node"* %0, %"struct.std::__detail::_Hash_node"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hash_node"* %3 to i8*
  %5 = bitcast i8* %4 to %"struct.std::__detail::_Hash_node"*
  ret %"struct.std::__detail::_Hash_node"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EE6_S_getERS7_(%"struct.std::__detail::_Hashtable_ebo_helper.8"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.9"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.97
  %6 = load i32, i32* @y.98
  %7 = sub i32 %5, -887373527
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -887373527
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1651048255, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %75
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1651048255, label %19
    i32 -235986077, label %39
    i32 -1934918029, label %69
    i32 2088809326, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %75

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -235986077, i32 2088809326
  store i32 %38, i32* %15
  br label %75

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.8"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.8"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.8"** %40, align 8
  %41 = load %"struct.std::__detail::_Hashtable_ebo_helper.8"*, %"struct.std::__detail::_Hashtable_ebo_helper.8"** %40, align 8
  %42 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.8"* %41 to %"class.std::allocator.9"*
  store %"class.std::allocator.9"* %42, %"class.std::allocator.9"** %2
  %43 = load i32, i32* @x.97
  %44 = load i32, i32* @y.98
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -1934918029, i32 2088809326
  store i32 %68, i32* %15
  br label %75

; <label>:69:                                     ; preds = %16
  %70 = load volatile %"class.std::allocator.9"*, %"class.std::allocator.9"** %2
  ret %"class.std::allocator.9"* %70

; <label>:71:                                     ; preds = %16
  %72 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.8"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.8"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.8"** %72, align 8
  %73 = load %"struct.std::__detail::_Hashtable_ebo_helper.8"*, %"struct.std::__detail::_Hashtable_ebo_helper.8"** %72, align 8
  %74 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.8"* %73 to %"class.std::allocator.9"*
  store i32 -235986077, i32* %15
  br label %75

; <label>:75:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIKixEEC2Ev(%"class.__gnu_cxx::new_allocator.13"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.99
  %5 = load i32, i32* @y.100
  %6 = add i32 %4, -87488665
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -87488665
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -894002329, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -894002329, label %18
    i32 -870506339, label %38
    i32 -1333604386, label %56
    i32 -1816718189, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -870506339, i32 -1816718189
  store i32 %37, i32* %14
  br label %60

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %39, align 8
  %41 = load i32, i32* @x.99
  %42 = load i32, i32* @y.100
  %43 = add i32 %41, 808408852
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 808408852
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -1333604386, i32 -1816718189
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %58, align 8
  store i32 -870506339, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIKixEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator.13"*, %"struct.std::pair"*) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %3, align 8
  %6 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"* @_ZN9__gnu_cxx16__aligned_bufferISt4pairIKixEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_buffer"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_buffer"*, align 8
  store %"struct.__gnu_cxx::__aligned_buffer"* %0, %"struct.__gnu_cxx::__aligned_buffer"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_buffer"*, %"struct.__gnu_cxx::__aligned_buffer"** %2, align 8
  %4 = call i8* @_ZN9__gnu_cxx16__aligned_bufferISt4pairIKixEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_buffer"* %3) #3
  %5 = bitcast i8* %4 to %"struct.std::pair"*
  ret %"struct.std::pair"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZN9__gnu_cxx16__aligned_bufferISt4pairIKixEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_buffer"*) #4 comdat align 2 {
  %2 = alloca i8*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.105
  %6 = load i32, i32* @y.106
  %7 = sub i32 %5, 1871238793
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1871238793
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1194346939, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %53
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1194346939, label %19
    i32 -1673644621, label %27
    i32 -145221986, label %46
    i32 1823368852, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %53

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1673644621, i32 1823368852
  store i32 %26, i32* %15
  br label %53

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.__gnu_cxx::__aligned_buffer"*, align 8
  store %"struct.__gnu_cxx::__aligned_buffer"* %0, %"struct.__gnu_cxx::__aligned_buffer"** %28, align 8
  %29 = load %"struct.__gnu_cxx::__aligned_buffer"*, %"struct.__gnu_cxx::__aligned_buffer"** %28, align 8
  %30 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_buffer", %"struct.__gnu_cxx::__aligned_buffer"* %29, i32 0, i32 0
  %31 = bitcast %"union.std::aligned_storage<16, 8>::type"* %30 to i8*
  store i8* %31, i8** %2
  %32 = load i32, i32* @x.105
  %33 = load i32, i32* @y.106
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -145221986, i32 1823368852
  store i32 %45, i32* %15
  br label %53

; <label>:46:                                     ; preds = %16
  %47 = load volatile i8*, i8** %2
  ret i8* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"struct.__gnu_cxx::__aligned_buffer"*, align 8
  store %"struct.__gnu_cxx::__aligned_buffer"* %0, %"struct.__gnu_cxx::__aligned_buffer"** %49, align 8
  %50 = load %"struct.__gnu_cxx::__aligned_buffer"*, %"struct.__gnu_cxx::__aligned_buffer"** %49, align 8
  %51 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_buffer", %"struct.__gnu_cxx::__aligned_buffer"* %50, i32 0, i32 0
  %52 = bitcast %"union.std::aligned_storage<16, 8>::type"* %51 to i8*
  store i32 -1673644621, i32* %15
  br label %53

; <label>:53:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator.10"*, %"struct.std::__detail::_Hash_node"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %4, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %4, align 8
  %8 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %5, align 8
  %9 = bitcast %"struct.std::__detail::_Hash_node"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIKixEED2Ev(%"class.__gnu_cxx::new_allocator.13"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_deallocate_bucketsEPPNS4_15_Hash_node_baseEm(%"class.std::_Hashtable"*, %"struct.std::__detail::_Hash_node_base"**, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"class.std::_Hashtable"*
  %6 = alloca i64*
  %7 = alloca %"struct.std::__detail::_Hash_node_base"***
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.111
  %11 = load i32, i32* @y.112
  %12 = sub i32 %10, 65894204
  %13 = sub i32 %12, 1
  %14 = add i32 %13, 65894204
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -1185620056, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %121
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -1185620056, label %24
    i32 -1958451695, label %32
    i32 -1130160970, label %70
    i32 -1462915992, label %73
    i32 -1619996003, label %74
    i32 -1949014876, label %81
    i32 -630333402, label %96
    i32 1208437742, label %112
    i32 125217892, label %113
    i32 965346033, label %120
  ]

; <label>:23:                                     ; preds = %21
  br label %121

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 -1958451695, i32 125217892
  store i32 %31, i32* %20
  br label %121

; <label>:32:                                     ; preds = %21
  %33 = alloca %"class.std::_Hashtable"*, align 8
  %34 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"struct.std::__detail::_Hash_node_base"*** %34, %"struct.std::__detail::_Hash_node_base"**** %7
  %35 = alloca i64, align 8
  store i64* %35, i64** %6
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %33, align 8
  %36 = load volatile %"struct.std::__detail::_Hash_node_base"***, %"struct.std::__detail::_Hash_node_base"**** %7
  store %"struct.std::__detail::_Hash_node_base"** %1, %"struct.std::__detail::_Hash_node_base"*** %36, align 8
  %37 = load volatile i64*, i64** %6
  store i64 %2, i64* %37, align 8
  %38 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %33, align 8
  store %"class.std::_Hashtable"* %38, %"class.std::_Hashtable"** %5
  %39 = load volatile %"struct.std::__detail::_Hash_node_base"***, %"struct.std::__detail::_Hash_node_base"**** %7
  %40 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %39, align 8
  %41 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %42 = call zeroext i1 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_uses_single_bucketEPPNS4_15_Hash_node_baseE(%"class.std::_Hashtable"* %41, %"struct.std::__detail::_Hash_node_base"** %40)
  store i1 %42, i1* %4
  %43 = load i32, i32* @x.111
  %44 = load i32, i32* @y.112
  %45 = add i32 %43, 652541965
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 652541965
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -1130160970, i32 125217892
  store i32 %69, i32* %20
  br label %121

; <label>:70:                                     ; preds = %21
  %71 = load volatile i1, i1* %4
  %72 = select i1 %71, i32 -1462915992, i32 -1619996003
  store i32 %72, i32* %20
  br label %121

; <label>:73:                                     ; preds = %21
  store i32 -1949014876, i32* %20
  br label %121

; <label>:74:                                     ; preds = %21
  %75 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %76 = bitcast %"class.std::_Hashtable"* %75 to %"struct.std::__detail::_Hashtable_alloc"*
  %77 = load volatile %"struct.std::__detail::_Hash_node_base"***, %"struct.std::__detail::_Hash_node_base"**** %7
  %78 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %77, align 8
  %79 = load volatile i64*, i64** %6
  %80 = load i64, i64* %79, align 8
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm(%"struct.std::__detail::_Hashtable_alloc"* %76, %"struct.std::__detail::_Hash_node_base"** %78, i64 %80)
  store i32 -1949014876, i32* %20
  br label %121

; <label>:81:                                     ; preds = %21
  %82 = load i32, i32* @x.111
  %83 = load i32, i32* @y.112
  %84 = sub i32 0, 1
  %85 = add i32 %82, %84
  %86 = sub i32 %82, 1
  %87 = mul i32 %82, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %83, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  %95 = select i1 %93, i32 -630333402, i32 965346033
  store i32 %95, i32* %20
  br label %121

; <label>:96:                                     ; preds = %21
  %97 = load i32, i32* @x.111
  %98 = load i32, i32* @y.112
  %99 = sub i32 %97, 1880763712
  %100 = sub i32 %99, 1
  %101 = add i32 %100, 1880763712
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  %111 = select i1 %109, i32 1208437742, i32 965346033
  store i32 %111, i32* %20
  br label %121

; <label>:112:                                    ; preds = %21
  ret void

; <label>:113:                                    ; preds = %21
  %114 = alloca %"class.std::_Hashtable"*, align 8
  %115 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %116 = alloca i64, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %114, align 8
  store %"struct.std::__detail::_Hash_node_base"** %1, %"struct.std::__detail::_Hash_node_base"*** %115, align 8
  store i64 %2, i64* %116, align 8
  %117 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %114, align 8
  %118 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %115, align 8
  %119 = call zeroext i1 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_uses_single_bucketEPPNS4_15_Hash_node_baseE(%"class.std::_Hashtable"* %117, %"struct.std::__detail::_Hash_node_base"** %118)
  store i32 -1958451695, i32* %20
  br label %121

; <label>:120:                                    ; preds = %21
  store i32 -630333402, i32* %20
  br label %121

; <label>:121:                                    ; preds = %120, %113, %96, %81, %74, %73, %70, %32, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_uses_single_bucketEPPNS4_15_Hash_node_baseE(%"class.std::_Hashtable"*, %"struct.std::__detail::_Hash_node_base"**) #4 comdat align 2 {
  %3 = alloca %"class.std::_Hashtable"*, align 8
  %4 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %3, align 8
  store %"struct.std::__detail::_Hash_node_base"** %1, %"struct.std::__detail::_Hash_node_base"*** %4, align 8
  %5 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %3, align 8
  %6 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %4, align 8
  %7 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %5, i32 0, i32 5
  %8 = icmp eq %"struct.std::__detail::_Hash_node_base"** %6, %7
  ret i1 %8
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm(%"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hash_node_base"**, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %8 = alloca %"class.std::allocator.15", align 1
  %9 = alloca i8*
  %10 = alloca i32
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %4, align 8
  store %"struct.std::__detail::_Hash_node_base"** %1, %"struct.std::__detail::_Hash_node_base"*** %5, align 8
  store i64 %2, i64* %6, align 8
  %11 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %4, align 8
  %12 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %5, align 8
  %13 = call %"struct.std::__detail::_Hash_node_base"** @_ZNSt14pointer_traitsIPPNSt8__detail15_Hash_node_baseEE10pointer_toERS2_(%"struct.std::__detail::_Hash_node_base"** dereferenceable(8) %12) #3
  store %"struct.std::__detail::_Hash_node_base"** %13, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  %14 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %11)
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeISt4pairIKixELb0EEEEERKSaIT_E(%"class.std::allocator.15"* %8, %"class.std::allocator.9"* dereferenceable(1) %14) #3
  %15 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  %16 = load i64, i64* %6, align 8
  invoke void @_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE10deallocateERS3_PS2_m(%"class.std::allocator.15"* dereferenceable(1) %8, %"struct.std::__detail::_Hash_node_base"** %15, i64 %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %3
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.std::allocator.15"* %8) #3
  ret void

; <label>:18:                                     ; preds = %3
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %9, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %10, align 4
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.std::allocator.15"* %8) #3
  br label %22

; <label>:22:                                     ; preds = %18
  %23 = load i8*, i8** %9, align 8
  %24 = load i32, i32* %10, align 4
  %25 = insertvalue { i8*, i32 } undef, i8* %23, 0
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1
  resume { i8*, i32 } %26
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node_base"** @_ZNSt14pointer_traitsIPPNSt8__detail15_Hash_node_baseEE10pointer_toERS2_(%"struct.std::__detail::_Hash_node_base"** dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node_base"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.117
  %6 = load i32, i32* @y.118
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -931188985, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %63
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -931188985, label %18
    i32 -238104593, label %26
    i32 775409806, label %57
    i32 1538193284, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %63

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -238104593, i32 1538193284
  store i32 %25, i32* %14
  br label %63

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"struct.std::__detail::_Hash_node_base"** %0, %"struct.std::__detail::_Hash_node_base"*** %27, align 8
  %28 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %27, align 8
  %29 = call %"struct.std::__detail::_Hash_node_base"** @_ZSt9addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_(%"struct.std::__detail::_Hash_node_base"** dereferenceable(8) %28) #3
  store %"struct.std::__detail::_Hash_node_base"** %29, %"struct.std::__detail::_Hash_node_base"*** %2
  %30 = load i32, i32* @x.117
  %31 = load i32, i32* @y.118
  %32 = sub i32 %30, -1271483164
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -1271483164
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 775409806, i32 1538193284
  store i32 %56, i32* %14
  br label %63

; <label>:57:                                     ; preds = %15
  %58 = load volatile %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %2
  ret %"struct.std::__detail::_Hash_node_base"** %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"struct.std::__detail::_Hash_node_base"** %0, %"struct.std::__detail::_Hash_node_base"*** %60, align 8
  %61 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %60, align 8
  %62 = call %"struct.std::__detail::_Hash_node_base"** @_ZSt9addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_(%"struct.std::__detail::_Hash_node_base"** dereferenceable(8) %61) #3
  store i32 -238104593, i32* %14
  br label %63

; <label>:63:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeISt4pairIKixELb0EEEEERKSaIT_E(%"class.std::allocator.15"*, %"class.std::allocator.9"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.15"*, align 8
  %4 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %3, align 8
  store %"class.std::allocator.9"* %1, %"class.std::allocator.9"** %4, align 8
  %5 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %3, align 8
  %6 = bitcast %"class.std::allocator.15"* %5 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev(%"class.__gnu_cxx::new_allocator.16"* %6) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE10deallocateERS3_PS2_m(%"class.std::allocator.15"* dereferenceable(1), %"struct.std::__detail::_Hash_node_base"**, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.121
  %7 = load i32, i32* @y.122
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 679021897, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 679021897, label %19
    i32 -529684763, label %27
    i32 1970326301, label %61
    i32 -1037072262, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -529684763, i32 -1037072262
  store i32 %26, i32* %15
  br label %70

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.15"*, align 8
  %29 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %30 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %28, align 8
  store %"struct.std::__detail::_Hash_node_base"** %1, %"struct.std::__detail::_Hash_node_base"*** %29, align 8
  store i64 %2, i64* %30, align 8
  %31 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %28, align 8
  %32 = bitcast %"class.std::allocator.15"* %31 to %"class.__gnu_cxx::new_allocator.16"*
  %33 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %29, align 8
  %34 = load i64, i64* %30, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.16"* %32, %"struct.std::__detail::_Hash_node_base"** %33, i64 %34)
  %35 = load i32, i32* @x.121
  %36 = load i32, i32* @y.122
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 1970326301, i32 -1037072262
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::allocator.15"*, align 8
  %64 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %65 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %63, align 8
  store %"struct.std::__detail::_Hash_node_base"** %1, %"struct.std::__detail::_Hash_node_base"*** %64, align 8
  store i64 %2, i64* %65, align 8
  %66 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %63, align 8
  %67 = bitcast %"class.std::allocator.15"* %66 to %"class.__gnu_cxx::new_allocator.16"*
  %68 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %64, align 8
  %69 = load i64, i64* %65, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.16"* %67, %"struct.std::__detail::_Hash_node_base"** %68, i64 %69)
  store i32 -529684763, i32* %15
  br label %70

; <label>:70:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.std::allocator.15"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.123
  %5 = load i32, i32* @y.124
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 557494825, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %61
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 557494825, label %17
    i32 -709694163, label %25
    i32 -1869070858, label %56
    i32 1605389540, label %57
  ]

; <label>:16:                                     ; preds = %14
  br label %61

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -709694163, i32 1605389540
  store i32 %24, i32* %13
  br label %61

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %26, align 8
  %27 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %26, align 8
  %28 = bitcast %"class.std::allocator.15"* %27 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.__gnu_cxx::new_allocator.16"* %28) #3
  %29 = load i32, i32* @x.123
  %30 = load i32, i32* @y.124
  %31 = add i32 %29, -897790058
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, -897790058
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -1869070858, i32 1605389540
  store i32 %55, i32* %13
  br label %61

; <label>:56:                                     ; preds = %14
  ret void

; <label>:57:                                     ; preds = %14
  %58 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %58, align 8
  %59 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %58, align 8
  %60 = bitcast %"class.std::allocator.15"* %59 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.__gnu_cxx::new_allocator.16"* %60) #3
  store i32 -709694163, i32* %13
  br label %61

; <label>:61:                                     ; preds = %57, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node_base"** @_ZSt9addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_(%"struct.std::__detail::_Hash_node_base"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::__detail::_Hash_node_base"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.125
  %6 = load i32, i32* @y.126
  %7 = sub i32 %5, -1112162732
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1112162732
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 165807384, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 165807384, label %19
    i32 -1690797499, label %27
    i32 -1138552241, label %57
    i32 -1137123419, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1690797499, i32 -1137123419
  store i32 %26, i32* %15
  br label %63

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"struct.std::__detail::_Hash_node_base"** %0, %"struct.std::__detail::_Hash_node_base"*** %28, align 8
  %29 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %28, align 8
  %30 = call %"struct.std::__detail::_Hash_node_base"** @_ZSt11__addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_(%"struct.std::__detail::_Hash_node_base"** dereferenceable(8) %29) #3
  store %"struct.std::__detail::_Hash_node_base"** %30, %"struct.std::__detail::_Hash_node_base"*** %2
  %31 = load i32, i32* @x.125
  %32 = load i32, i32* @y.126
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1138552241, i32 -1137123419
  store i32 %56, i32* %15
  br label %63

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %2
  ret %"struct.std::__detail::_Hash_node_base"** %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"struct.std::__detail::_Hash_node_base"** %0, %"struct.std::__detail::_Hash_node_base"*** %60, align 8
  %61 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %60, align 8
  %62 = call %"struct.std::__detail::_Hash_node_base"** @_ZSt11__addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_(%"struct.std::__detail::_Hash_node_base"** dereferenceable(8) %61) #3
  store i32 -1690797499, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node_base"** @_ZSt11__addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_(%"struct.std::__detail::_Hash_node_base"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::__detail::_Hash_node_base"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.127
  %6 = load i32, i32* @y.128
  %7 = add i32 %5, -1877959174
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1877959174
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1303611595, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1303611595, label %19
    i32 1112215114, label %39
    i32 485259335, label %71
    i32 -422363252, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1112215114, i32 -422363252
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"struct.std::__detail::_Hash_node_base"** %0, %"struct.std::__detail::_Hash_node_base"*** %40, align 8
  %41 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %40, align 8
  %42 = bitcast %"struct.std::__detail::_Hash_node_base"** %41 to i8*
  %43 = bitcast i8* %42 to %"struct.std::__detail::_Hash_node_base"**
  store %"struct.std::__detail::_Hash_node_base"** %43, %"struct.std::__detail::_Hash_node_base"*** %2
  %44 = load i32, i32* @x.127
  %45 = load i32, i32* @y.128
  %46 = sub i32 %44, -1388782045
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -1388782045
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 485259335, i32 -422363252
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %2
  ret %"struct.std::__detail::_Hash_node_base"** %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"struct.std::__detail::_Hash_node_base"** %0, %"struct.std::__detail::_Hash_node_base"*** %74, align 8
  %75 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %74, align 8
  %76 = bitcast %"struct.std::__detail::_Hash_node_base"** %75 to i8*
  %77 = bitcast i8* %76 to %"struct.std::__detail::_Hash_node_base"**
  store i32 1112215114, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev(%"class.__gnu_cxx::new_allocator.16"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.16"*, %"struct.std::__detail::_Hash_node_base"**, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %4, align 8
  store %"struct.std::__detail::_Hash_node_base"** %1, %"struct.std::__detail::_Hash_node_base"*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %4, align 8
  %8 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %5, align 8
  %9 = bitcast %"struct.std::__detail::_Hash_node_base"** %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.__gnu_cxx::new_allocator.16"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.133
  %5 = load i32, i32* @y.134
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 2073042710, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %47
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 2073042710, label %17
    i32 -185432177, label %25
    i32 -1421557315, label %43
    i32 -1224282476, label %44
  ]

; <label>:16:                                     ; preds = %14
  br label %47

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -185432177, i32 -1224282476
  store i32 %24, i32* %13
  br label %47

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %26, align 8
  %28 = load i32, i32* @x.133
  %29 = load i32, i32* @y.134
  %30 = sub i32 %28, -1660453130
  %31 = sub i32 %30, 1
  %32 = add i32 %31, -1660453130
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 -1421557315, i32 -1224282476
  store i32 %42, i32* %13
  br label %47

; <label>:43:                                     ; preds = %14
  ret void

; <label>:44:                                     ; preds = %14
  %45 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %45, align 8
  %46 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %45, align 8
  store i32 -185432177, i32* %13
  br label %47

; <label>:47:                                     ; preds = %44, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EED2Ev(%"struct.std::__detail::_Hashtable_ebo_helper.8"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.8"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.8"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.8"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_ebo_helper.8"*, %"struct.std::__detail::_Hashtable_ebo_helper.8"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.8"* %3 to %"class.std::allocator.9"*
  call void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEED2Ev(%"class.std::allocator.9"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEED2Ev(%"class.__gnu_cxx::new_allocator.10"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE5beginEv(%"class.std::_Hashtable"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %3 = alloca %"class.std::_Hashtable"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %3, align 8
  %4 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %3, align 8
  %5 = invoke %"struct.std::__detail::_Hash_node"* @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_beginEv(%"class.std::_Hashtable"* %4)
          to label %6 unwind label %10

; <label>:6:                                      ; preds = %1
  call void @_ZNSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEC2EPNS_10_Hash_nodeIS3_Lb0EEE(%"struct.std::__detail::_Node_iterator"* %2, %"struct.std::__detail::_Hash_node"* %5) #3
  %7 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %2, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %7, i32 0, i32 0
  %9 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  ret %"struct.std::__detail::_Hash_node"* %9

; <label>:10:                                     ; preds = %1
  %11 = landingpad { i8*, i32 }
          catch i8* null
  %12 = extractvalue { i8*, i32 } %11, 0
  call void @__clang_call_terminate(i8* %12) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEC2EPNS_10_Hash_nodeIS3_Lb0EEE(%"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Hash_node"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.141
  %6 = load i32, i32* @y.142
  %7 = sub i32 %5, -233082192
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -233082192
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1837452796, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1837452796, label %19
    i32 847429426, label %27
    i32 -1445320077, label %47
    i32 -774417321, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 847429426, i32 -774417321
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::__detail::_Node_iterator"*, align 8
  %29 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Node_iterator"* %0, %"struct.std::__detail::_Node_iterator"** %28, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %29, align 8
  %30 = load %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %28, align 8
  %31 = bitcast %"struct.std::__detail::_Node_iterator"* %30 to %"struct.std::__detail::_Node_iterator_base"*
  %32 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %29, align 8
  call void @_ZNSt8__detail19_Node_iterator_baseISt4pairIKixELb0EEC2EPNS_10_Hash_nodeIS3_Lb0EEE(%"struct.std::__detail::_Node_iterator_base"* %31, %"struct.std::__detail::_Hash_node"* %32) #3
  %33 = load i32, i32* @x.141
  %34 = load i32, i32* @y.142
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -1445320077, i32 -774417321
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  ret void

; <label>:48:                                     ; preds = %16
  %49 = alloca %"struct.std::__detail::_Node_iterator"*, align 8
  %50 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Node_iterator"* %0, %"struct.std::__detail::_Node_iterator"** %49, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %50, align 8
  %51 = load %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %49, align 8
  %52 = bitcast %"struct.std::__detail::_Node_iterator"* %51 to %"struct.std::__detail::_Node_iterator_base"*
  %53 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %50, align 8
  call void @_ZNSt8__detail19_Node_iterator_baseISt4pairIKixELb0EEC2EPNS_10_Hash_nodeIS3_Lb0EEE(%"struct.std::__detail::_Node_iterator_base"* %52, %"struct.std::__detail::_Hash_node"* %53) #3
  store i32 847429426, i32* %15
  br label %54

; <label>:54:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail19_Node_iterator_baseISt4pairIKixELb0EEC2EPNS_10_Hash_nodeIS3_Lb0EEE(%"struct.std::__detail::_Node_iterator_base"*, %"struct.std::__detail::_Hash_node"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.143
  %6 = load i32, i32* @y.144
  %7 = add i32 %5, 1460746131
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1460746131
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1157526512, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1157526512, label %19
    i32 -2039897250, label %27
    i32 -899518888, label %47
    i32 -1539642477, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -2039897250, i32 -1539642477
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::__detail::_Node_iterator_base"*, align 8
  %29 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Node_iterator_base"* %0, %"struct.std::__detail::_Node_iterator_base"** %28, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %29, align 8
  %30 = load %"struct.std::__detail::_Node_iterator_base"*, %"struct.std::__detail::_Node_iterator_base"** %28, align 8
  %31 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %30, i32 0, i32 0
  %32 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %29, align 8
  store %"struct.std::__detail::_Hash_node"* %32, %"struct.std::__detail::_Hash_node"** %31, align 8
  %33 = load i32, i32* @x.143
  %34 = load i32, i32* @y.144
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -899518888, i32 -1539642477
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  ret void

; <label>:48:                                     ; preds = %16
  %49 = alloca %"struct.std::__detail::_Node_iterator_base"*, align 8
  %50 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Node_iterator_base"* %0, %"struct.std::__detail::_Node_iterator_base"** %49, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %50, align 8
  %51 = load %"struct.std::__detail::_Node_iterator_base"*, %"struct.std::__detail::_Node_iterator_base"** %49, align 8
  %52 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %51, i32 0, i32 0
  %53 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %50, align 8
  store %"struct.std::__detail::_Hash_node"* %53, %"struct.std::__detail::_Hash_node"** %52, align 8
  store i32 -2039897250, i32* %15
  br label %54

; <label>:54:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE3endEv(%"class.std::_Hashtable"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.145
  %6 = load i32, i32* @y.146
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -120658422, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %69
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -120658422, label %18
    i32 545104304, label %38
    i32 -1543649764, label %60
    i32 -1659247423, label %62
  ]

; <label>:17:                                     ; preds = %15
  br label %69

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 545104304, i32 -1659247423
  store i32 %37, i32* %14
  br label %69

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %40 = alloca %"class.std::_Hashtable"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %40, align 8
  %41 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %40, align 8
  call void @_ZNSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEC2EPNS_10_Hash_nodeIS3_Lb0EEE(%"struct.std::__detail::_Node_iterator"* %39, %"struct.std::__detail::_Hash_node"* null) #3
  %42 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %39, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %42, i32 0, i32 0
  %44 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %43, align 8
  store %"struct.std::__detail::_Hash_node"* %44, %"struct.std::__detail::_Hash_node"** %2
  %45 = load i32, i32* @x.145
  %46 = load i32, i32* @y.146
  %47 = sub i32 %45, 1068599669
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 1068599669
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -1543649764, i32 -1659247423
  store i32 %59, i32* %14
  br label %69

; <label>:60:                                     ; preds = %15
  %61 = load volatile %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %2
  ret %"struct.std::__detail::_Hash_node"* %61

; <label>:62:                                     ; preds = %15
  %63 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %64 = alloca %"class.std::_Hashtable"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %64, align 8
  %65 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %64, align 8
  call void @_ZNSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEC2EPNS_10_Hash_nodeIS3_Lb0EEE(%"struct.std::__detail::_Node_iterator"* %63, %"struct.std::__detail::_Hash_node"* null) #3
  %66 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %63, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %66, i32 0, i32 0
  %68 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %67, align 8
  store i32 545104304, i32* %14
  br label %69

; <label>:69:                                     ; preds = %62, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail19_Node_iterator_baseISt4pairIKixELb0EE7_M_incrEv(%"struct.std::__detail::_Node_iterator_base"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.147
  %5 = load i32, i32* @y.148
  %6 = sub i32 %4, -1041960425
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1041960425
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1131822343, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %79
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1131822343, label %18
    i32 302850896, label %38
    i32 1722608852, label %71
    i32 -1854918587, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %79

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 302850896, i32 -1854918587
  store i32 %37, i32* %14
  br label %79

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::__detail::_Node_iterator_base"*, align 8
  store %"struct.std::__detail::_Node_iterator_base"* %0, %"struct.std::__detail::_Node_iterator_base"** %39, align 8
  %40 = load %"struct.std::__detail::_Node_iterator_base"*, %"struct.std::__detail::_Node_iterator_base"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %40, i32 0, i32 0
  %42 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %41, align 8
  %43 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %42) #3
  %44 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %40, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %43, %"struct.std::__detail::_Hash_node"** %44, align 8
  %45 = load i32, i32* @x.147
  %46 = load i32, i32* @y.148
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 1722608852, i32 -1854918587
  store i32 %70, i32* %14
  br label %79

; <label>:71:                                     ; preds = %15
  ret void

; <label>:72:                                     ; preds = %15
  %73 = alloca %"struct.std::__detail::_Node_iterator_base"*, align 8
  store %"struct.std::__detail::_Node_iterator_base"* %0, %"struct.std::__detail::_Node_iterator_base"** %73, align 8
  %74 = load %"struct.std::__detail::_Node_iterator_base"*, %"struct.std::__detail::_Node_iterator_base"** %73, align 8
  %75 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %74, i32 0, i32 0
  %76 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %75, align 8
  %77 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %76) #3
  %78 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %74, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %77, %"struct.std::__detail::_Hash_node"** %78, align 8
  store i32 302850896, i32* %14
  br label %79

; <label>:79:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::pair"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.149
  %6 = load i32, i32* @y.150
  %7 = add i32 %5, 244842206
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 244842206
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 163631858, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 163631858, label %19
    i32 -236116678, label %39
    i32 -682004576, label %58
    i32 -1692968185, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -236116678, i32 -1692968185
  store i32 %38, i32* %15
  br label %64

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::__detail::_Hash_node_value_base"*, align 8
  store %"struct.std::__detail::_Hash_node_value_base"* %0, %"struct.std::__detail::_Hash_node_value_base"** %40, align 8
  %41 = load %"struct.std::__detail::_Hash_node_value_base"*, %"struct.std::__detail::_Hash_node_value_base"** %40, align 8
  %42 = call %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"* %41) #3
  store %"struct.std::pair"* %42, %"struct.std::pair"** %2
  %43 = load i32, i32* @x.149
  %44 = load i32, i32* @y.150
  %45 = add i32 %43, 2146249244
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 2146249244
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -682004576, i32 -1692968185
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %2
  ret %"struct.std::pair"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"struct.std::__detail::_Hash_node_value_base"*, align 8
  store %"struct.std::__detail::_Hash_node_value_base"* %0, %"struct.std::__detail::_Hash_node_value_base"** %61, align 8
  %62 = load %"struct.std::__detail::_Hash_node_value_base"*, %"struct.std::__detail::_Hash_node_value_base"** %61, align 8
  %63 = call %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"* %62) #3
  store i32 -236116678, i32* %15
  br label %64

; <label>:64:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EEC2Ev(%"struct.std::_Vector_base"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEEC2Ev(%"class.std::allocator"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %3, i32 0, i32 0
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %3, i32 0, i32 1
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %3, i32 0, i32 2
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEEC2Ev(%"class.std::allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEEC2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEEC2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESC_EvT_SE_RSaIT0_E(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.159
  %7 = load i32, i32* @y.160
  %8 = add i32 %6, -1433675750
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1433675750
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 832761033, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %79
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 832761033, label %20
    i32 1077622241, label %40
    i32 1536328325, label %72
    i32 -1572205103, label %73
  ]

; <label>:19:                                     ; preds = %17
  br label %79

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1077622241, i32 -1572205103
  store i32 %39, i32* %16
  br label %79

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector.0"*, align 8
  %42 = alloca %"class.std::vector.0"*, align 8
  %43 = alloca %"class.std::allocator"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %41, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %42, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %43, align 8
  %44 = load %"class.std::vector.0"*, %"class.std::vector.0"** %41, align 8
  %45 = load %"class.std::vector.0"*, %"class.std::vector.0"** %42, align 8
  call void @_ZSt8_DestroyIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEvT_SE_(%"class.std::vector.0"* %44, %"class.std::vector.0"* %45)
  %46 = load i32, i32* @x.159
  %47 = load i32, i32* @y.160
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 1536328325, i32 -1572205103
  store i32 %71, i32* %16
  br label %79

; <label>:72:                                     ; preds = %17
  ret void

; <label>:73:                                     ; preds = %17
  %74 = alloca %"class.std::vector.0"*, align 8
  %75 = alloca %"class.std::vector.0"*, align 8
  %76 = alloca %"class.std::allocator"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %74, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %75, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %76, align 8
  %77 = load %"class.std::vector.0"*, %"class.std::vector.0"** %74, align 8
  %78 = load %"class.std::vector.0"*, %"class.std::vector.0"** %75, align 8
  call void @_ZSt8_DestroyIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEvT_SE_(%"class.std::vector.0"* %77, %"class.std::vector.0"* %78)
  store i32 1077622241, i32* %16
  br label %79

; <label>:79:                                     ; preds = %73, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::vector.0"*, %"class.std::vector.0"** %13, align 8
  %15 = ptrtoint %"class.std::vector.0"* %11 to i64
  %16 = ptrtoint %"class.std::vector.0"* %14 to i64
  %17 = sub i64 0, %16
  %18 = add i64 %15, %17
  %19 = sub i64 %15, %16
  %20 = sdiv exact i64 %18, 24
  invoke void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE13_M_deallocateEPSC_m(%"struct.std::_Vector_base"* %5, %"class.std::vector.0"* %8, i64 %20)
          to label %21 unwind label %23

; <label>:21:                                     ; preds = %1
  %22 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %22) #3
  ret void

; <label>:23:                                     ; preds = %1
  %24 = load i32, i32* @x.163
  %25 = load i32, i32* @y.164
  %26 = sub i32 0, 1
  %27 = add i32 %24, %26
  %28 = sub i32 %24, 1
  %29 = mul i32 %24, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %25, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 true, true
  %36 = and i1 %33, true
  %37 = and i1 %31, %35
  %38 = and i1 %34, true
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 true, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  br i1 %47, label %49, label %70

; <label>:49:                                     ; preds = %23, %70
  %50 = landingpad { i8*, i32 }
          catch i8* null
  %51 = extractvalue { i8*, i32 } %50, 0
  store i8* %51, i8** %3, align 8
  %52 = extractvalue { i8*, i32 } %50, 1
  store i32 %52, i32* %4, align 4
  %53 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %53) #3
  %54 = load i32, i32* @x.163
  %55 = load i32, i32* @y.164
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  br i1 %65, label %67, label %70

; <label>:67:                                     ; preds = %49
  br label %68

; <label>:68:                                     ; preds = %67
  %69 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %69) #11
  unreachable

; <label>:70:                                     ; preds = %49, %23
  %71 = landingpad { i8*, i32 }
          catch i8* null
  %72 = extractvalue { i8*, i32 } %71, 0
  store i8* %72, i8** %3, align 8
  %73 = extractvalue { i8*, i32 } %71, 1
  store i32 %73, i32* %4, align 4
  %74 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %74) #3
  br label %49
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEvT_SE_(%"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.165
  %6 = load i32, i32* @y.166
  %7 = sub i32 %5, -103611184
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -103611184
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1115872399, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %52
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1115872399, label %19
    i32 2098174597, label %27
    i32 1271893614, label %46
    i32 -1198364515, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %52

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 2098174597, i32 -1198364515
  store i32 %26, i32* %15
  br label %52

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.0"*, align 8
  %29 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %28, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %29, align 8
  %30 = load %"class.std::vector.0"*, %"class.std::vector.0"** %28, align 8
  %31 = load %"class.std::vector.0"*, %"class.std::vector.0"** %29, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EEEEvT_SG_(%"class.std::vector.0"* %30, %"class.std::vector.0"* %31)
  %32 = load i32, i32* @x.165
  %33 = load i32, i32* @y.166
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 1271893614, i32 -1198364515
  store i32 %45, i32* %15
  br label %52

; <label>:46:                                     ; preds = %16
  ret void

; <label>:47:                                     ; preds = %16
  %48 = alloca %"class.std::vector.0"*, align 8
  %49 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %48, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %49, align 8
  %50 = load %"class.std::vector.0"*, %"class.std::vector.0"** %48, align 8
  %51 = load %"class.std::vector.0"*, %"class.std::vector.0"** %49, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EEEEvT_SG_(%"class.std::vector.0"* %50, %"class.std::vector.0"* %51)
  store i32 2098174597, i32* %15
  br label %52

; <label>:52:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EEEEvT_SG_(%"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %5, align 8
  %6 = alloca i32
  store i32 -1402637460, i32* %6
  br label %7

; <label>:7:                                      ; preds = %2, %70
  %8 = load i32, i32* %6
  switch i32 %8, label %9 [
    i32 -1402637460, label %10
    i32 -60384596, label %25
    i32 -2141863443, label %56
    i32 1869464221, label %59
    i32 1872996836, label %62
    i32 2069115678, label %65
    i32 1244928626, label %66
  ]

; <label>:9:                                      ; preds = %7
  br label %70

; <label>:10:                                     ; preds = %7
  %11 = load i32, i32* @x.167
  %12 = load i32, i32* @y.168
  %13 = sub i32 0, 1
  %14 = add i32 %11, %13
  %15 = sub i32 %11, 1
  %16 = mul i32 %11, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %12, 10
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -60384596, i32 1244928626
  store i32 %24, i32* %6
  br label %70

; <label>:25:                                     ; preds = %7
  %26 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %27 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %28 = icmp ne %"class.std::vector.0"* %26, %27
  store i1 %28, i1* %3
  %29 = load i32, i32* @x.167
  %30 = load i32, i32* @y.168
  %31 = sub i32 %29, -1645964890
  %32 = sub i32 %31, 1
  %33 = add i32 %32, -1645964890
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -2141863443, i32 1244928626
  store i32 %55, i32* %6
  br label %70

; <label>:56:                                     ; preds = %7
  %57 = load volatile i1, i1* %3
  %58 = select i1 %57, i32 1869464221, i32 2069115678
  store i32 %58, i32* %6
  br label %70

; <label>:59:                                     ; preds = %7
  %60 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %61 = call %"class.std::vector.0"* @_ZSt11__addressofISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEPT_RSD_(%"class.std::vector.0"* dereferenceable(24) %60) #3
  call void @_ZSt8_DestroyISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEvPT_(%"class.std::vector.0"* %61)
  store i32 1872996836, i32* %6
  br label %70

; <label>:62:                                     ; preds = %7
  %63 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %64 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %63, i32 1
  store %"class.std::vector.0"* %64, %"class.std::vector.0"** %4, align 8
  store i32 -1402637460, i32* %6
  br label %70

; <label>:65:                                     ; preds = %7
  ret void

; <label>:66:                                     ; preds = %7
  %67 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %68 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %69 = icmp ne %"class.std::vector.0"* %67, %68
  store i32 -60384596, i32* %6
  br label %70

; <label>:70:                                     ; preds = %66, %62, %59, %56, %25, %10, %9
  br label %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEvPT_(%"class.std::vector.0"*) #4 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.169
  %5 = load i32, i32* @y.170
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1744174301, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %58
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1744174301, label %17
    i32 1454433009, label %37
    i32 -1556328317, label %54
    i32 -1264653172, label %55
  ]

; <label>:16:                                     ; preds = %14
  br label %58

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 1454433009, i32 -1264653172
  store i32 %36, i32* %13
  br label %58

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %38, align 8
  %39 = load %"class.std::vector.0"*, %"class.std::vector.0"** %38, align 8
  call void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EED2Ev(%"class.std::vector.0"* %39) #3
  %40 = load i32, i32* @x.169
  %41 = load i32, i32* @y.170
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -1556328317, i32 -1264653172
  store i32 %53, i32* %13
  br label %58

; <label>:54:                                     ; preds = %14
  ret void

; <label>:55:                                     ; preds = %14
  %56 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %56, align 8
  %57 = load %"class.std::vector.0"*, %"class.std::vector.0"** %56, align 8
  call void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EED2Ev(%"class.std::vector.0"* %57) #3
  store i32 1454433009, i32* %13
  br label %58

; <label>:58:                                     ; preds = %55, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt11__addressofISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEPT_RSD_(%"class.std::vector.0"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.0"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.171
  %6 = load i32, i32* @y.172
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -131868227, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %77
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -131868227, label %18
    i32 -228964568, label %38
    i32 474191095, label %70
    i32 -1328035944, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %77

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -228964568, i32 -1328035944
  store i32 %37, i32* %14
  br label %77

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %39, align 8
  %40 = load %"class.std::vector.0"*, %"class.std::vector.0"** %39, align 8
  %41 = bitcast %"class.std::vector.0"* %40 to i8*
  %42 = bitcast i8* %41 to %"class.std::vector.0"*
  store %"class.std::vector.0"* %42, %"class.std::vector.0"** %2
  %43 = load i32, i32* @x.171
  %44 = load i32, i32* @y.172
  %45 = sub i32 %43, -1185097015
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -1185097015
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 474191095, i32 -1328035944
  store i32 %69, i32* %14
  br label %77

; <label>:70:                                     ; preds = %15
  %71 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %2
  ret %"class.std::vector.0"* %71

; <label>:72:                                     ; preds = %15
  %73 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %73, align 8
  %74 = load %"class.std::vector.0"*, %"class.std::vector.0"** %73, align 8
  %75 = bitcast %"class.std::vector.0"* %74 to i8*
  %76 = bitcast i8* %75 to %"class.std::vector.0"*
  store i32 -228964568, i32* %14
  br label %77

; <label>:77:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE13_M_deallocateEPSC_m(%"struct.std::_Vector_base"*, %"class.std::vector.0"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.0"*
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca %"struct.std::_Vector_base"*, align 8
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %6, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6, align 8
  store %"struct.std::_Vector_base"* %9, %"struct.std::_Vector_base"** %5
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  store %"class.std::vector.0"* %10, %"class.std::vector.0"** %4
  %11 = alloca i32
  store i32 195624052, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %119
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 195624052, label %15
    i32 249410135, label %19
    i32 1715282961, label %47
    i32 256114264, label %67
    i32 -97935712, label %68
    i32 -1395328863, label %95
    i32 -1565230537, label %111
    i32 -521301002, label %112
    i32 -1181547249, label %118
  ]

; <label>:14:                                     ; preds = %12
  br label %119

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %17 = icmp ne %"class.std::vector.0"* %16, null
  %18 = select i1 %17, i32 249410135, i32 -97935712
  store i32 %18, i32* %11
  br label %119

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.173
  %21 = load i32, i32* @y.174
  %22 = sub i32 %20, -1906522607
  %23 = sub i32 %22, 1
  %24 = add i32 %23, -1906522607
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 false, true
  %33 = and i1 %30, false
  %34 = and i1 %28, %32
  %35 = and i1 %31, false
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 false, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 1715282961, i32 -521301002
  store i32 %46, i32* %11
  br label %119

; <label>:47:                                     ; preds = %12
  %48 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %49 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %48, i32 0, i32 0
  %50 = bitcast %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %49 to %"class.std::allocator"*
  %51 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %52 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEE10deallocateERSD_PSC_m(%"class.std::allocator"* dereferenceable(1) %50, %"class.std::vector.0"* %51, i64 %52)
  %53 = load i32, i32* @x.173
  %54 = load i32, i32* @y.174
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 256114264, i32 -521301002
  store i32 %66, i32* %11
  br label %119

; <label>:67:                                     ; preds = %12
  store i32 -97935712, i32* %11
  br label %119

; <label>:68:                                     ; preds = %12
  %69 = load i32, i32* @x.173
  %70 = load i32, i32* @y.174
  %71 = sub i32 0, 1
  %72 = add i32 %69, %71
  %73 = sub i32 %69, 1
  %74 = mul i32 %69, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %70, 10
  %78 = xor i1 %76, true
  %79 = xor i1 %77, true
  %80 = xor i1 false, true
  %81 = and i1 %78, false
  %82 = and i1 %76, %80
  %83 = and i1 %79, false
  %84 = and i1 %77, %80
  %85 = or i1 %81, %82
  %86 = or i1 %83, %84
  %87 = xor i1 %85, %86
  %88 = or i1 %78, %79
  %89 = xor i1 %88, true
  %90 = or i1 false, %80
  %91 = and i1 %89, %90
  %92 = or i1 %87, %91
  %93 = or i1 %76, %77
  %94 = select i1 %92, i32 -1395328863, i32 -1181547249
  store i32 %94, i32* %11
  br label %119

; <label>:95:                                     ; preds = %12
  %96 = load i32, i32* @x.173
  %97 = load i32, i32* @y.174
  %98 = add i32 %96, 756953766
  %99 = sub i32 %98, 1
  %100 = sub i32 %99, 756953766
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = and i1 %104, %105
  %107 = xor i1 %104, %105
  %108 = or i1 %106, %107
  %109 = or i1 %104, %105
  %110 = select i1 %108, i32 -1565230537, i32 -1181547249
  store i32 %110, i32* %11
  br label %119

; <label>:111:                                    ; preds = %12
  ret void

; <label>:112:                                    ; preds = %12
  %113 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %114 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %113, i32 0, i32 0
  %115 = bitcast %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %114 to %"class.std::allocator"*
  %116 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %117 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEE10deallocateERSD_PSC_m(%"class.std::allocator"* dereferenceable(1) %115, %"class.std::vector.0"* %116, i64 %117)
  store i32 1715282961, i32* %11
  br label %119

; <label>:118:                                    ; preds = %12
  store i32 -1395328863, i32* %11
  br label %119

; <label>:119:                                    ; preds = %118, %112, %95, %68, %67, %47, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEED2Ev(%"class.std::allocator"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEE10deallocateERSD_PSC_m(%"class.std::allocator"* dereferenceable(1), %"class.std::vector.0"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEE10deallocateEPSD_m(%"class.__gnu_cxx::new_allocator"* %8, %"class.std::vector.0"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEE10deallocateEPSD_m(%"class.__gnu_cxx::new_allocator"*, %"class.std::vector.0"*, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.179
  %7 = load i32, i32* @y.180
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -183179100, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %80
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -183179100, label %19
    i32 -621110019, label %39
    i32 -804204896, label %72
    i32 -2014960, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %80

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -621110019, i32 -2014960
  store i32 %38, i32* %15
  br label %80

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %41 = alloca %"class.std::vector.0"*, align 8
  %42 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %40, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %41, align 8
  store i64 %2, i64* %42, align 8
  %43 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %40, align 8
  %44 = load %"class.std::vector.0"*, %"class.std::vector.0"** %41, align 8
  %45 = bitcast %"class.std::vector.0"* %44 to i8*
  call void @_ZdlPv(i8* %45) #3
  %46 = load i32, i32* @x.179
  %47 = load i32, i32* @y.180
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -804204896, i32 -2014960
  store i32 %71, i32* %15
  br label %80

; <label>:72:                                     ; preds = %16
  ret void

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %75 = alloca %"class.std::vector.0"*, align 8
  %76 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %74, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %75, align 8
  store i64 %2, i64* %76, align 8
  %77 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %74, align 8
  %78 = load %"class.std::vector.0"*, %"class.std::vector.0"** %75, align 8
  %79 = bitcast %"class.std::vector.0"* %78 to i8*
  call void @_ZdlPv(i8* %79) #3
  store i32 -621110019, i32* %15
  br label %80

; <label>:80:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEED2Ev(%"class.std::allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEED2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEED2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %3 to %"class.std::allocator.2"*
  call void @_ZNSaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEC2Ev(%"class.std::allocator.2"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %3, i32 0, i32 0
  store %"class.std::unordered_map"* null, %"class.std::unordered_map"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %3, i32 0, i32 1
  store %"class.std::unordered_map"* null, %"class.std::unordered_map"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %3, i32 0, i32 2
  store %"class.std::unordered_map"* null, %"class.std::unordered_map"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEC2Ev(%"class.std::allocator.2"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.189
  %5 = load i32, i32* @y.190
  %6 = add i32 %4, 259449311
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 259449311
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 681843980, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 681843980, label %18
    i32 -1563260445, label %26
    i32 1072170955, label %56
    i32 1240440619, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1563260445, i32 1240440619
  store i32 %25, i32* %14
  br label %61

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %27, align 8
  %28 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %27, align 8
  %29 = bitcast %"class.std::allocator.2"* %28 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEC2Ev(%"class.__gnu_cxx::new_allocator.3"* %29) #3
  %30 = load i32, i32* @x.189
  %31 = load i32, i32* @y.190
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 1072170955, i32 1240440619
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %58, align 8
  %59 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %58, align 8
  %60 = bitcast %"class.std::allocator.2"* %59 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEC2Ev(%"class.__gnu_cxx::new_allocator.3"* %60) #3
  store i32 -1563260445, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEC2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.191
  %5 = load i32, i32* @y.192
  %6 = add i32 %4, 814654555
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 814654555
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1778166497, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1778166497, label %18
    i32 744162325, label %26
    i32 -801620363, label %56
    i32 2043912969, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 744162325, i32 2043912969
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %27, align 8
  %29 = load i32, i32* @x.191
  %30 = load i32, i32* @y.192
  %31 = sub i32 %29, 2041757940
  %32 = sub i32 %31, 1
  %33 = add i32 %32, 2041757940
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -801620363, i32 2043912969
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %58, align 8
  store i32 744162325, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEES9_EvT_SB_RSaIT0_E(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.193
  %7 = load i32, i32* @y.194
  %8 = sub i32 %6, 1026834471
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1026834471
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 252153163, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %67
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 252153163, label %20
    i32 -2034129408, label %40
    i32 2000592581, label %60
    i32 215223871, label %61
  ]

; <label>:19:                                     ; preds = %17
  br label %67

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -2034129408, i32 215223871
  store i32 %39, i32* %16
  br label %67

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::unordered_map"*, align 8
  %42 = alloca %"class.std::unordered_map"*, align 8
  %43 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %41, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %42, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %43, align 8
  %44 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %41, align 8
  %45 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %42, align 8
  call void @_ZSt8_DestroyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvT_SB_(%"class.std::unordered_map"* %44, %"class.std::unordered_map"* %45)
  %46 = load i32, i32* @x.193
  %47 = load i32, i32* @y.194
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 2000592581, i32 215223871
  store i32 %59, i32* %16
  br label %67

; <label>:60:                                     ; preds = %17
  ret void

; <label>:61:                                     ; preds = %17
  %62 = alloca %"class.std::unordered_map"*, align 8
  %63 = alloca %"class.std::unordered_map"*, align 8
  %64 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %62, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %63, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %64, align 8
  %65 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %62, align 8
  %66 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %63, align 8
  call void @_ZSt8_DestroyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvT_SB_(%"class.std::unordered_map"* %65, %"class.std::unordered_map"* %66)
  store i32 -2034129408, i32* %16
  br label %67

; <label>:67:                                     ; preds = %61, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %4 to %"class.std::allocator.2"*
  ret %"class.std::allocator.2"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EED2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.197
  %3 = load i32, i32* @y.198
  %4 = sub i32 %2, -395379937
  %5 = sub i32 %4, 1
  %6 = add i32 %5, -395379937
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %61

; <label>:16:                                     ; preds = %1, %61
  %17 = alloca %"struct.std::_Vector_base.1"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %17, align 8
  %20 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %17, align 8
  %21 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %21, i32 0, i32 0
  %23 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %24, i32 0, i32 2
  %26 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %25, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %27, i32 0, i32 0
  %29 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %28, align 8
  %30 = ptrtoint %"class.std::unordered_map"* %26 to i64
  %31 = ptrtoint %"class.std::unordered_map"* %29 to i64
  %32 = add i64 %30, -8459698456221740208
  %33 = sub i64 %32, %31
  %34 = sub i64 %33, -8459698456221740208
  %35 = sub i64 %30, %31
  %36 = sdiv exact i64 %34, 56
  %37 = load i32, i32* @x.197
  %38 = load i32, i32* @y.198
  %39 = add i32 %37, 1246404708
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, 1246404708
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  br i1 %49, label %51, label %61

; <label>:51:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE13_M_deallocateEPS9_m(%"struct.std::_Vector_base.1"* %20, %"class.std::unordered_map"* %23, i64 %36)
          to label %52 unwind label %54

; <label>:52:                                     ; preds = %51
  %53 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %53) #3
  ret void

; <label>:54:                                     ; preds = %51
  %55 = landingpad { i8*, i32 }
          catch i8* null
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %18, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %19, align 4
  %58 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %58) #3
  br label %59

; <label>:59:                                     ; preds = %54
  %60 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %60) #11
  unreachable

; <label>:61:                                     ; preds = %16, %1
  %62 = alloca %"struct.std::_Vector_base.1"*, align 8
  %63 = alloca i8*
  %64 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %62, align 8
  %65 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %62, align 8
  %66 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %65, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %66, i32 0, i32 0
  %68 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %67, align 8
  %69 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %65, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %69, i32 0, i32 2
  %71 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %65, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %72, i32 0, i32 0
  %74 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %73, align 8
  %75 = ptrtoint %"class.std::unordered_map"* %71 to i64
  %76 = ptrtoint %"class.std::unordered_map"* %74 to i64
  %77 = shl i64 %75, %76
  %78 = shl i64 %75, %76
  %79 = sub i64 0, -7944600288989301943
  %80 = sub i64 %79, %75
  %81 = add i64 %80, -7944600288989301943
  %82 = sub i64 0, %75
  %83 = sub i64 %81, -8026289481269225629
  %84 = add i64 %83, %76
  %85 = add i64 %84, -8026289481269225629
  %86 = add i64 %81, %76
  %87 = add i64 0, 4416395653973314197
  %88 = sub i64 %87, %75
  %89 = sub i64 %88, 4416395653973314197
  %90 = sub i64 0, %75
  %91 = sub i64 0, %89
  %92 = sub i64 0, %76
  %93 = add i64 %91, %92
  %94 = sub i64 0, %93
  %95 = add i64 %89, %76
  %96 = sub i64 %75, 4898194100935457330
  %97 = sub i64 %96, %76
  %98 = add i64 %97, 4898194100935457330
  %99 = sub i64 %75, %76
  %100 = shl i64 %98, 56
  %101 = sub i64 0, 56
  %102 = add i64 %98, %101
  %103 = sub i64 %98, 56
  %104 = mul i64 %102, 56
  %105 = add i64 %98, 7295912978255320841
  %106 = sub i64 %105, 56
  %107 = sub i64 %106, 7295912978255320841
  %108 = sub i64 %98, 56
  %109 = mul i64 %107, 56
  %110 = sub i64 0, %98
  %111 = add i64 0, %110
  %112 = sub i64 0, %98
  %113 = sub i64 0, 56
  %114 = sub i64 %111, %113
  %115 = add i64 %111, 56
  %116 = sdiv exact i64 %98, 56
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvT_SB_(%"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat {
  %3 = alloca %"class.std::unordered_map"*, align 8
  %4 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %3, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %4, align 8
  %5 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %3, align 8
  %6 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEEvT_SD_(%"class.std::unordered_map"* %5, %"class.std::unordered_map"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEEvT_SD_(%"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat align 2 {
  %3 = alloca %"class.std::unordered_map"**
  %4 = alloca %"class.std::unordered_map"**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.201
  %8 = load i32, i32* @y.202
  %9 = sub i32 %7, 1603128396
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 1603128396
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 863916448, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %129
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 863916448, label %21
    i32 -247797395, label %29
    i32 39732320, label %49
    i32 858950035, label %50
    i32 1257672521, label %57
    i32 868257308, label %61
    i32 1998707153, label %88
    i32 -1630670115, label %119
    i32 -1593513230, label %120
    i32 1248549321, label %121
    i32 1181313376, label %124
  ]

; <label>:20:                                     ; preds = %18
  br label %129

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -247797395, i32 1248549321
  store i32 %28, i32* %17
  br label %129

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"** %30, %"class.std::unordered_map"*** %4
  %31 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"** %31, %"class.std::unordered_map"*** %3
  %32 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %4
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %32, align 8
  %33 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %3
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %33, align 8
  %34 = load i32, i32* @x.201
  %35 = load i32, i32* @y.202
  %36 = add i32 %34, -1897841861
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, -1897841861
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 39732320, i32 1248549321
  store i32 %48, i32* %17
  br label %129

; <label>:49:                                     ; preds = %18
  store i32 858950035, i32* %17
  br label %129

; <label>:50:                                     ; preds = %18
  %51 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %4
  %52 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %51, align 8
  %53 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %3
  %54 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %53, align 8
  %55 = icmp ne %"class.std::unordered_map"* %52, %54
  %56 = select i1 %55, i32 1257672521, i32 -1593513230
  store i32 %56, i32* %17
  br label %129

; <label>:57:                                     ; preds = %18
  %58 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %4
  %59 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %58, align 8
  %60 = call %"class.std::unordered_map"* @_ZSt11__addressofISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEPT_RSA_(%"class.std::unordered_map"* dereferenceable(56) %59) #3
  call void @_ZSt8_DestroyISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvPT_(%"class.std::unordered_map"* %60)
  store i32 868257308, i32* %17
  br label %129

; <label>:61:                                     ; preds = %18
  %62 = load i32, i32* @x.201
  %63 = load i32, i32* @y.202
  %64 = sub i32 0, 1
  %65 = add i32 %62, %64
  %66 = sub i32 %62, 1
  %67 = mul i32 %62, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %63, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 false, true
  %74 = and i1 %71, false
  %75 = and i1 %69, %73
  %76 = and i1 %72, false
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 false, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  %87 = select i1 %85, i32 1998707153, i32 1181313376
  store i32 %87, i32* %17
  br label %129

; <label>:88:                                     ; preds = %18
  %89 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %4
  %90 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %89, align 8
  %91 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %90, i32 1
  %92 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %4
  store %"class.std::unordered_map"* %91, %"class.std::unordered_map"** %92, align 8
  %93 = load i32, i32* @x.201
  %94 = load i32, i32* @y.202
  %95 = sub i32 0, 1
  %96 = add i32 %93, %95
  %97 = sub i32 %93, 1
  %98 = mul i32 %93, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %94, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 true, true
  %105 = and i1 %102, true
  %106 = and i1 %100, %104
  %107 = and i1 %103, true
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 true, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  %118 = select i1 %116, i32 -1630670115, i32 1181313376
  store i32 %118, i32* %17
  br label %129

; <label>:119:                                    ; preds = %18
  store i32 858950035, i32* %17
  br label %129

; <label>:120:                                    ; preds = %18
  ret void

; <label>:121:                                    ; preds = %18
  %122 = alloca %"class.std::unordered_map"*, align 8
  %123 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %122, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %123, align 8
  store i32 -247797395, i32* %17
  br label %129

; <label>:124:                                    ; preds = %18
  %125 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %4
  %126 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %125, align 8
  %127 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %126, i32 1
  %128 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %4
  store %"class.std::unordered_map"* %127, %"class.std::unordered_map"** %128, align 8
  store i32 1998707153, i32* %17
  br label %129

; <label>:129:                                    ; preds = %124, %121, %119, %88, %61, %57, %50, %49, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvPT_(%"class.std::unordered_map"*) #4 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.203
  %5 = load i32, i32* @y.204
  %6 = add i32 %4, -1479789745
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1479789745
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 2033492275, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 2033492275, label %18
    i32 -1834520689, label %38
    i32 1390838715, label %68
    i32 -170706709, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1834520689, i32 -170706709
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %39, align 8
  %40 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %39, align 8
  call void @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEED2Ev(%"class.std::unordered_map"* %40) #3
  %41 = load i32, i32* @x.203
  %42 = load i32, i32* @y.204
  %43 = sub i32 %41, -286052926
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -286052926
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1390838715, i32 -170706709
  store i32 %67, i32* %14
  br label %72

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %70, align 8
  %71 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %70, align 8
  call void @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEED2Ev(%"class.std::unordered_map"* %71) #3
  store i32 -1834520689, i32* %14
  br label %72

; <label>:72:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt11__addressofISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEPT_RSA_(%"class.std::unordered_map"* dereferenceable(56)) #4 comdat {
  %2 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %2, align 8
  %3 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %2, align 8
  %4 = bitcast %"class.std::unordered_map"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::unordered_map"*
  ret %"class.std::unordered_map"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE13_M_deallocateEPS9_m(%"struct.std::_Vector_base.1"*, %"class.std::unordered_map"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.1"*
  %6 = alloca i64*
  %7 = alloca %"class.std::unordered_map"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.207
  %11 = load i32, i32* @y.208
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 -1350015131, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %126
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1350015131, label %23
    i32 -1565757554, label %43
    i32 -1788702703, label %68
    i32 2050255934, label %71
    i32 1165530227, label %86
    i32 -364128197, label %109
    i32 -1468406103, label %110
    i32 -476014898, label %111
    i32 -786355708, label %118
  ]

; <label>:22:                                     ; preds = %20
  br label %126

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 -1565757554, i32 -476014898
  store i32 %42, i32* %19
  br label %126

; <label>:43:                                     ; preds = %20
  %44 = alloca %"struct.std::_Vector_base.1"*, align 8
  %45 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"** %45, %"class.std::unordered_map"*** %7
  %46 = alloca i64, align 8
  store i64* %46, i64** %6
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %44, align 8
  %47 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %7
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %47, align 8
  %48 = load volatile i64*, i64** %6
  store i64 %2, i64* %48, align 8
  %49 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %44, align 8
  store %"struct.std::_Vector_base.1"* %49, %"struct.std::_Vector_base.1"** %5
  %50 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %7
  %51 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %50, align 8
  %52 = icmp ne %"class.std::unordered_map"* %51, null
  store i1 %52, i1* %4
  %53 = load i32, i32* @x.207
  %54 = load i32, i32* @y.208
  %55 = sub i32 %53, -1621146037
  %56 = sub i32 %55, 1
  %57 = add i32 %56, -1621146037
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 -1788702703, i32 -476014898
  store i32 %67, i32* %19
  br label %126

; <label>:68:                                     ; preds = %20
  %69 = load volatile i1, i1* %4
  %70 = select i1 %69, i32 2050255934, i32 -1468406103
  store i32 %70, i32* %19
  br label %126

; <label>:71:                                     ; preds = %20
  %72 = load i32, i32* @x.207
  %73 = load i32, i32* @y.208
  %74 = sub i32 0, 1
  %75 = add i32 %72, %74
  %76 = sub i32 %72, 1
  %77 = mul i32 %72, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %73, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  %85 = select i1 %83, i32 1165530227, i32 -786355708
  store i32 %85, i32* %19
  br label %126

; <label>:86:                                     ; preds = %20
  %87 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %88 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %87, i32 0, i32 0
  %89 = bitcast %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %88 to %"class.std::allocator.2"*
  %90 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %7
  %91 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %90, align 8
  %92 = load volatile i64*, i64** %6
  %93 = load i64, i64* %92, align 8
  call void @_ZNSt16allocator_traitsISaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEE10deallocateERSA_PS9_m(%"class.std::allocator.2"* dereferenceable(1) %89, %"class.std::unordered_map"* %91, i64 %93)
  %94 = load i32, i32* @x.207
  %95 = load i32, i32* @y.208
  %96 = add i32 %94, -1254451800
  %97 = sub i32 %96, 1
  %98 = sub i32 %97, -1254451800
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = and i1 %102, %103
  %105 = xor i1 %102, %103
  %106 = or i1 %104, %105
  %107 = or i1 %102, %103
  %108 = select i1 %106, i32 -364128197, i32 -786355708
  store i32 %108, i32* %19
  br label %126

; <label>:109:                                    ; preds = %20
  store i32 -1468406103, i32* %19
  br label %126

; <label>:110:                                    ; preds = %20
  ret void

; <label>:111:                                    ; preds = %20
  %112 = alloca %"struct.std::_Vector_base.1"*, align 8
  %113 = alloca %"class.std::unordered_map"*, align 8
  %114 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %112, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %113, align 8
  store i64 %2, i64* %114, align 8
  %115 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %112, align 8
  %116 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %113, align 8
  %117 = icmp ne %"class.std::unordered_map"* %116, null
  store i32 -1565757554, i32* %19
  br label %126

; <label>:118:                                    ; preds = %20
  %119 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %120 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %119, i32 0, i32 0
  %121 = bitcast %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %120 to %"class.std::allocator.2"*
  %122 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %7
  %123 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %122, align 8
  %124 = load volatile i64*, i64** %6
  %125 = load i64, i64* %124, align 8
  call void @_ZNSt16allocator_traitsISaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEE10deallocateERSA_PS9_m(%"class.std::allocator.2"* dereferenceable(1) %121, %"class.std::unordered_map"* %123, i64 %125)
  store i32 1165530227, i32* %19
  br label %126

; <label>:126:                                    ; preds = %118, %111, %109, %86, %71, %68, %43, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %3 to %"class.std::allocator.2"*
  call void @_ZNSaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEED2Ev(%"class.std::allocator.2"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEE10deallocateERSA_PS9_m(%"class.std::allocator.2"* dereferenceable(1), %"class.std::unordered_map"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.2"*, align 8
  %5 = alloca %"class.std::unordered_map"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %4, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  %9 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEE10deallocateEPSA_m(%"class.__gnu_cxx::new_allocator.3"* %8, %"class.std::unordered_map"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEE10deallocateEPSA_m(%"class.__gnu_cxx::new_allocator.3"*, %"class.std::unordered_map"*, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.213
  %7 = load i32, i32* @y.214
  %8 = add i32 %6, -1697158553
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1697158553
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1784759989, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %57
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1784759989, label %20
    i32 -1583669483, label %28
    i32 -1023653207, label %49
    i32 510689098, label %50
  ]

; <label>:19:                                     ; preds = %17
  br label %57

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1583669483, i32 510689098
  store i32 %27, i32* %16
  br label %57

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %30 = alloca %"class.std::unordered_map"*, align 8
  %31 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %29, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %29, align 8
  %33 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %30, align 8
  %34 = bitcast %"class.std::unordered_map"* %33 to i8*
  call void @_ZdlPv(i8* %34) #3
  %35 = load i32, i32* @x.213
  %36 = load i32, i32* @y.214
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -1023653207, i32 510689098
  store i32 %48, i32* %16
  br label %57

; <label>:49:                                     ; preds = %17
  ret void

; <label>:50:                                     ; preds = %17
  %51 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %52 = alloca %"class.std::unordered_map"*, align 8
  %53 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %51, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %52, align 8
  store i64 %2, i64* %53, align 8
  %54 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %51, align 8
  %55 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %52, align 8
  %56 = bitcast %"class.std::unordered_map"* %55 to i8*
  call void @_ZdlPv(i8* %56) #3
  store i32 -1583669483, i32* %16
  br label %57

; <label>:57:                                     ; preds = %50, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEED2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE14_M_fill_assignEmRKSB_(%"class.std::vector"*, i64, %"class.std::vector.0"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.std::vector"*
  %8 = alloca %"class.std::vector"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"class.std::vector.0"*, align 8
  %11 = alloca %"class.std::vector", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %8, align 8
  store i64 %1, i64* %9, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %10, align 8
  %14 = load %"class.std::vector"*, %"class.std::vector"** %8, align 8
  store %"class.std::vector"* %14, %"class.std::vector"** %7
  %15 = load i64, i64* %9, align 8
  store i64 %15, i64* %6
  %16 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %17 = call i64 @_ZNKSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE8capacityEv(%"class.std::vector"* %16) #3
  store i64 %17, i64* %5
  %18 = alloca i32
  store i32 -296285318, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %281
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -296285318, label %22
    i32 525180738, label %27
    i32 -2122491004, label %42
    i32 411003544, label %68
    i32 -210850433, label %69
    i32 -1083818509, label %97
    i32 -979612139, label %129
    i32 -1295187591, label %132
    i32 -894058642, label %165
    i32 1891789278, label %175
    i32 1006462688, label %202
    i32 -1989749507, label %217
    i32 -1804974626, label %218
    i32 -844739699, label %246
    i32 1800680988, label %262
    i32 314075388, label %263
    i32 1489998865, label %274
    i32 1790215143, label %279
    i32 -2118591302, label %280
  ]

; <label>:21:                                     ; preds = %19
  br label %281

; <label>:22:                                     ; preds = %19
  %23 = load volatile i64, i64* %6
  %24 = load volatile i64, i64* %5
  %25 = icmp ugt i64 %23, %24
  %26 = select i1 %25, i32 525180738, i32 -210850433
  store i32 %26, i32* %18
  br label %281

; <label>:27:                                     ; preds = %19
  %28 = load i32, i32* @x.217
  %29 = load i32, i32* @y.218
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  %41 = select i1 %39, i32 -2122491004, i32 314075388
  store i32 %41, i32* %18
  br label %281

; <label>:42:                                     ; preds = %19
  %43 = load i64, i64* %9, align 8
  %44 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  %45 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %46 = bitcast %"class.std::vector"* %45 to %"struct.std::_Vector_base"*
  %47 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %46) #3
  call void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEC2EmRKSB_RKSC_(%"class.std::vector"* %11, i64 %43, %"class.std::vector.0"* dereferenceable(24) %44, %"class.std::allocator"* dereferenceable(1) %47)
  %48 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  %49 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %48, i32 0, i32 0
  %50 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %51 = bitcast %"class.std::vector"* %50 to %"struct.std::_Vector_base"*
  %52 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %51, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_impl12_M_swap_dataERSF_(%"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %49, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* dereferenceable(24) %52) #3
  call void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EED2Ev(%"class.std::vector"* %11) #3
  %53 = load i32, i32* @x.217
  %54 = load i32, i32* @y.218
  %55 = add i32 %53, 2070939721
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, 2070939721
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 411003544, i32 314075388
  store i32 %67, i32* %18
  br label %281

; <label>:68:                                     ; preds = %19
  store i32 -1804974626, i32* %18
  br label %281

; <label>:69:                                     ; preds = %19
  %70 = load i32, i32* @x.217
  %71 = load i32, i32* @y.218
  %72 = sub i32 %70, -577508906
  %73 = sub i32 %72, 1
  %74 = add i32 %73, -577508906
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 true, true
  %83 = and i1 %80, true
  %84 = and i1 %78, %82
  %85 = and i1 %81, true
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 true, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  %96 = select i1 %94, i32 -1083818509, i32 1489998865
  store i32 %96, i32* %18
  br label %281

; <label>:97:                                     ; preds = %19
  %98 = load i64, i64* %9, align 8
  %99 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %100 = call i64 @_ZNKSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE4sizeEv(%"class.std::vector"* %99) #3
  %101 = icmp ugt i64 %98, %100
  store i1 %101, i1* %4
  %102 = load i32, i32* @x.217
  %103 = load i32, i32* @y.218
  %104 = add i32 %102, 1645781864
  %105 = sub i32 %104, 1
  %106 = sub i32 %105, 1645781864
  %107 = sub i32 %102, 1
  %108 = mul i32 %102, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %103, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 true, true
  %115 = and i1 %112, true
  %116 = and i1 %110, %114
  %117 = and i1 %113, true
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 true, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  %128 = select i1 %126, i32 -979612139, i32 1489998865
  store i32 %128, i32* %18
  br label %281

; <label>:129:                                    ; preds = %19
  %130 = load volatile i1, i1* %4
  %131 = select i1 %130, i32 -1295187591, i32 -894058642
  store i32 %131, i32* %18
  br label %281

; <label>:132:                                    ; preds = %19
  %133 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %134 = call %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE5beginEv(%"class.std::vector"* %133) #3
  %135 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  store %"class.std::vector.0"* %134, %"class.std::vector.0"** %135, align 8
  %136 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %137 = call %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE3endEv(%"class.std::vector"* %136) #3
  %138 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store %"class.std::vector.0"* %137, %"class.std::vector.0"** %138, align 8
  %139 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  %140 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  %141 = load %"class.std::vector.0"*, %"class.std::vector.0"** %140, align 8
  %142 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  %143 = load %"class.std::vector.0"*, %"class.std::vector.0"** %142, align 8
  call void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EES2_ISE_SaISE_EEEESE_EvT_SJ_RKT0_(%"class.std::vector.0"* %141, %"class.std::vector.0"* %143, %"class.std::vector.0"* dereferenceable(24) %139)
  %144 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %145 = bitcast %"class.std::vector"* %144 to %"struct.std::_Vector_base"*
  %146 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %145, i32 0, i32 0
  %147 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %146, i32 0, i32 1
  %148 = load %"class.std::vector.0"*, %"class.std::vector.0"** %147, align 8
  %149 = load i64, i64* %9, align 8
  %150 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %151 = call i64 @_ZNKSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE4sizeEv(%"class.std::vector"* %150) #3
  %152 = add i64 %149, -7341485676205122476
  %153 = sub i64 %152, %151
  %154 = sub i64 %153, -7341485676205122476
  %155 = sub i64 %149, %151
  %156 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  %157 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %158 = bitcast %"class.std::vector"* %157 to %"struct.std::_Vector_base"*
  %159 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %158) #3
  %160 = call %"class.std::vector.0"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEmSC_SC_ET_SE_T0_RKT1_RSaIT2_E(%"class.std::vector.0"* %148, i64 %154, %"class.std::vector.0"* dereferenceable(24) %156, %"class.std::allocator"* dereferenceable(1) %159)
  %161 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %162 = bitcast %"class.std::vector"* %161 to %"struct.std::_Vector_base"*
  %163 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %162, i32 0, i32 0
  %164 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %163, i32 0, i32 1
  store %"class.std::vector.0"* %160, %"class.std::vector.0"** %164, align 8
  store i32 1891789278, i32* %18
  br label %281

; <label>:165:                                    ; preds = %19
  %166 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %167 = bitcast %"class.std::vector"* %166 to %"struct.std::_Vector_base"*
  %168 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %167, i32 0, i32 0
  %169 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %168, i32 0, i32 0
  %170 = load %"class.std::vector.0"*, %"class.std::vector.0"** %169, align 8
  %171 = load i64, i64* %9, align 8
  %172 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  %173 = call %"class.std::vector.0"* @_ZSt6fill_nIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEmSC_ET_SE_T0_RKT1_(%"class.std::vector.0"* %170, i64 %171, %"class.std::vector.0"* dereferenceable(24) %172)
  %174 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  call void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE15_M_erase_at_endEPSB_(%"class.std::vector"* %174, %"class.std::vector.0"* %173) #3
  store i32 1891789278, i32* %18
  br label %281

; <label>:175:                                    ; preds = %19
  %176 = load i32, i32* @x.217
  %177 = load i32, i32* @y.218
  %178 = sub i32 0, 1
  %179 = add i32 %176, %178
  %180 = sub i32 %176, 1
  %181 = mul i32 %176, %179
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %177, 10
  %185 = xor i1 %183, true
  %186 = xor i1 %184, true
  %187 = xor i1 false, true
  %188 = and i1 %185, false
  %189 = and i1 %183, %187
  %190 = and i1 %186, false
  %191 = and i1 %184, %187
  %192 = or i1 %188, %189
  %193 = or i1 %190, %191
  %194 = xor i1 %192, %193
  %195 = or i1 %185, %186
  %196 = xor i1 %195, true
  %197 = or i1 false, %187
  %198 = and i1 %196, %197
  %199 = or i1 %194, %198
  %200 = or i1 %183, %184
  %201 = select i1 %199, i32 1006462688, i32 1790215143
  store i32 %201, i32* %18
  br label %281

; <label>:202:                                    ; preds = %19
  %203 = load i32, i32* @x.217
  %204 = load i32, i32* @y.218
  %205 = sub i32 0, 1
  %206 = add i32 %203, %205
  %207 = sub i32 %203, 1
  %208 = mul i32 %203, %206
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %204, 10
  %212 = and i1 %210, %211
  %213 = xor i1 %210, %211
  %214 = or i1 %212, %213
  %215 = or i1 %210, %211
  %216 = select i1 %214, i32 -1989749507, i32 1790215143
  store i32 %216, i32* %18
  br label %281

; <label>:217:                                    ; preds = %19
  store i32 -1804974626, i32* %18
  br label %281

; <label>:218:                                    ; preds = %19
  %219 = load i32, i32* @x.217
  %220 = load i32, i32* @y.218
  %221 = add i32 %219, 1826244003
  %222 = sub i32 %221, 1
  %223 = sub i32 %222, 1826244003
  %224 = sub i32 %219, 1
  %225 = mul i32 %219, %223
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %220, 10
  %229 = xor i1 %227, true
  %230 = xor i1 %228, true
  %231 = xor i1 false, true
  %232 = and i1 %229, false
  %233 = and i1 %227, %231
  %234 = and i1 %230, false
  %235 = and i1 %228, %231
  %236 = or i1 %232, %233
  %237 = or i1 %234, %235
  %238 = xor i1 %236, %237
  %239 = or i1 %229, %230
  %240 = xor i1 %239, true
  %241 = or i1 false, %231
  %242 = and i1 %240, %241
  %243 = or i1 %238, %242
  %244 = or i1 %227, %228
  %245 = select i1 %243, i32 -844739699, i32 -2118591302
  store i32 %245, i32* %18
  br label %281

; <label>:246:                                    ; preds = %19
  %247 = load i32, i32* @x.217
  %248 = load i32, i32* @y.218
  %249 = sub i32 %247, 1663798546
  %250 = sub i32 %249, 1
  %251 = add i32 %250, 1663798546
  %252 = sub i32 %247, 1
  %253 = mul i32 %247, %251
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %248, 10
  %257 = and i1 %255, %256
  %258 = xor i1 %255, %256
  %259 = or i1 %257, %258
  %260 = or i1 %255, %256
  %261 = select i1 %259, i32 1800680988, i32 -2118591302
  store i32 %261, i32* %18
  br label %281

; <label>:262:                                    ; preds = %19
  ret void

; <label>:263:                                    ; preds = %19
  %264 = load i64, i64* %9, align 8
  %265 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  %266 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %267 = bitcast %"class.std::vector"* %266 to %"struct.std::_Vector_base"*
  %268 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %267) #3
  call void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEC2EmRKSB_RKSC_(%"class.std::vector"* %11, i64 %264, %"class.std::vector.0"* dereferenceable(24) %265, %"class.std::allocator"* dereferenceable(1) %268)
  %269 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  %270 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %269, i32 0, i32 0
  %271 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %272 = bitcast %"class.std::vector"* %271 to %"struct.std::_Vector_base"*
  %273 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %272, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_impl12_M_swap_dataERSF_(%"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %270, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* dereferenceable(24) %273) #3
  call void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EED2Ev(%"class.std::vector"* %11) #3
  store i32 -2122491004, i32* %18
  br label %281

; <label>:274:                                    ; preds = %19
  %275 = load i64, i64* %9, align 8
  %276 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %277 = call i64 @_ZNKSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE4sizeEv(%"class.std::vector"* %276) #3
  %278 = icmp ugt i64 %275, %277
  store i32 -1083818509, i32* %18
  br label %281

; <label>:279:                                    ; preds = %19
  store i32 1006462688, i32* %18
  br label %281

; <label>:280:                                    ; preds = %19
  store i32 -844739699, i32* %18
  br label %281

; <label>:281:                                    ; preds = %280, %279, %274, %263, %246, %218, %217, %202, %175, %165, %132, %129, %97, %69, %68, %42, %27, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE8capacityEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %5, i32 0, i32 2
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %8 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  %12 = ptrtoint %"class.std::vector.0"* %7 to i64
  %13 = ptrtoint %"class.std::vector.0"* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 24
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEC2EmRKSB_RKSC_(%"class.std::vector"*, i64, %"class.std::vector.0"* dereferenceable(24), %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %11 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %12 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator"*, %"class.std::allocator"** %8, align 8
  call void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EEC2EmRKSD_(%"struct.std::_Vector_base"* %12, i64 %13, %"class.std::allocator"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  invoke void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE18_M_fill_initializeEmRKSB_(%"class.std::vector"* %11, i64 %15, %"class.std::vector.0"* dereferenceable(24) %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %4
  ret void

; <label>:18:                                     ; preds = %4
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %9, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %10, align 4
  %22 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EED2Ev(%"struct.std::_Vector_base"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i32, i32* @x.221
  %25 = load i32, i32* @y.222
  %26 = sub i32 %24, 1852463236
  %27 = sub i32 %26, 1
  %28 = add i32 %27, 1852463236
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 false, true
  %37 = and i1 %34, false
  %38 = and i1 %32, %36
  %39 = and i1 %35, false
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 false, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  br i1 %48, label %50, label %82

; <label>:50:                                     ; preds = %23, %82
  %51 = load i8*, i8** %9, align 8
  %52 = load i32, i32* %10, align 4
  %53 = insertvalue { i8*, i32 } undef, i8* %51, 0
  %54 = insertvalue { i8*, i32 } %53, i32 %52, 1
  %55 = load i32, i32* @x.221
  %56 = load i32, i32* @y.222
  %57 = sub i32 %55, -1148225627
  %58 = sub i32 %57, 1
  %59 = add i32 %58, -1148225627
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 true, true
  %68 = and i1 %65, true
  %69 = and i1 %63, %67
  %70 = and i1 %66, true
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 true, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  br i1 %79, label %81, label %82

; <label>:81:                                     ; preds = %50
  resume { i8*, i32 } %54

; <label>:82:                                     ; preds = %50, %23
  %83 = load i8*, i8** %9, align 8
  %84 = load i32, i32* %10, align 4
  %85 = insertvalue { i8*, i32 } undef, i8* %83, 0
  %86 = insertvalue { i8*, i32 } %85, i32 %84, 1
  br label %50
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_impl12_M_swap_dataERSF_(%"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* dereferenceable(24)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %1, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEvRT_SF_(%"class.std::vector.0"** dereferenceable(8) %6, %"class.std::vector.0"** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEvRT_SF_(%"class.std::vector.0"** dereferenceable(8) %9, %"class.std::vector.0"** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEvRT_SF_(%"class.std::vector.0"** dereferenceable(8) %12, %"class.std::vector.0"** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EES2_ISE_SaISE_EEEESE_EvT_SJ_RKT0_(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.225
  %7 = load i32, i32* @y.226
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1859604351, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %93
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1859604351, label %19
    i32 -709932338, label %39
    i32 -865171456, label %73
    i32 -407875453, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %93

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -709932338, i32 -407875453
  store i32 %38, i32* %15
  br label %93

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %42 = alloca %"class.std::vector.0"*, align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %45, align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %41, i32 0, i32 0
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %46, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %42, align 8
  %47 = bitcast %"class.__gnu_cxx::__normal_iterator"* %43 to i8*
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 8, i32 8, i1 false)
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %43, i32 0, i32 0
  %50 = load %"class.std::vector.0"*, %"class.std::vector.0"** %49, align 8
  %51 = call %"class.std::vector.0"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EES2_ISE_SaISE_EEEEENSt11_Niter_baseIT_E13iterator_typeESK_(%"class.std::vector.0"* %50)
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator"* %44 to i8*
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %44, i32 0, i32 0
  %55 = load %"class.std::vector.0"*, %"class.std::vector.0"** %54, align 8
  %56 = call %"class.std::vector.0"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EES2_ISE_SaISE_EEEEENSt11_Niter_baseIT_E13iterator_typeESK_(%"class.std::vector.0"* %55)
  %57 = load %"class.std::vector.0"*, %"class.std::vector.0"** %42, align 8
  call void @_ZSt8__fill_aIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESC_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SJ_RKSG_(%"class.std::vector.0"* %51, %"class.std::vector.0"* %56, %"class.std::vector.0"* dereferenceable(24) %57)
  %58 = load i32, i32* @x.225
  %59 = load i32, i32* @y.226
  %60 = add i32 %58, 789155801
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, 789155801
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  %72 = select i1 %70, i32 -865171456, i32 -407875453
  store i32 %72, i32* %15
  br label %93

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %76 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %77 = alloca %"class.std::vector.0"*, align 8
  %78 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %79 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %80 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %75, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %80, align 8
  %81 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %76, i32 0, i32 0
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %81, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %77, align 8
  %82 = bitcast %"class.__gnu_cxx::__normal_iterator"* %78 to i8*
  %83 = bitcast %"class.__gnu_cxx::__normal_iterator"* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %82, i8* %83, i64 8, i32 8, i1 false)
  %84 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %78, i32 0, i32 0
  %85 = load %"class.std::vector.0"*, %"class.std::vector.0"** %84, align 8
  %86 = call %"class.std::vector.0"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EES2_ISE_SaISE_EEEEENSt11_Niter_baseIT_E13iterator_typeESK_(%"class.std::vector.0"* %85)
  %87 = bitcast %"class.__gnu_cxx::__normal_iterator"* %79 to i8*
  %88 = bitcast %"class.__gnu_cxx::__normal_iterator"* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* %88, i64 8, i32 8, i1 false)
  %89 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %79, i32 0, i32 0
  %90 = load %"class.std::vector.0"*, %"class.std::vector.0"** %89, align 8
  %91 = call %"class.std::vector.0"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EES2_ISE_SaISE_EEEEENSt11_Niter_baseIT_E13iterator_typeESK_(%"class.std::vector.0"* %90)
  %92 = load %"class.std::vector.0"*, %"class.std::vector.0"** %77, align 8
  call void @_ZSt8__fill_aIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESC_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SJ_RKSG_(%"class.std::vector.0"* %86, %"class.std::vector.0"* %91, %"class.std::vector.0"* dereferenceable(24) %92)
  store i32 -709932338, i32* %15
  br label %93

; <label>:93:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE5beginEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %4 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %5 = bitcast %"class.std::vector"* %4 to %"struct.std::_Vector_base"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EES1_ISD_SaISD_EEEC2ERKSE_(%"class.__gnu_cxx::__normal_iterator"* %2, %"class.std::vector.0"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  ret %"class.std::vector.0"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE3endEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %4 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %5 = bitcast %"class.std::vector"* %4 to %"struct.std::_Vector_base"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EES1_ISD_SaISD_EEEC2ERKSE_(%"class.__gnu_cxx::__normal_iterator"* %2, %"class.std::vector.0"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  ret %"class.std::vector.0"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEmSC_SC_ET_SE_T0_RKT1_RSaIT2_E(%"class.std::vector.0"*, i64, %"class.std::vector.0"* dereferenceable(24), %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.0"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.231
  %9 = load i32, i32* @y.232
  %10 = add i32 %8, -15206715
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -15206715
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -3182685, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %88
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -3182685, label %22
    i32 68630089, label %42
    i32 1007628051, label %77
    i32 833541793, label %79
  ]

; <label>:21:                                     ; preds = %19
  br label %88

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 68630089, i32 833541793
  store i32 %41, i32* %18
  br label %88

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.std::vector.0"*, align 8
  %44 = alloca i64, align 8
  %45 = alloca %"class.std::vector.0"*, align 8
  %46 = alloca %"class.std::allocator"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %43, align 8
  store i64 %1, i64* %44, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %45, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %46, align 8
  %47 = load %"class.std::vector.0"*, %"class.std::vector.0"** %43, align 8
  %48 = load i64, i64* %44, align 8
  %49 = load %"class.std::vector.0"*, %"class.std::vector.0"** %45, align 8
  %50 = call %"class.std::vector.0"* @_ZSt20uninitialized_fill_nIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEmSC_ET_SE_T0_RKT1_(%"class.std::vector.0"* %47, i64 %48, %"class.std::vector.0"* dereferenceable(24) %49)
  store %"class.std::vector.0"* %50, %"class.std::vector.0"** %5
  %51 = load i32, i32* @x.231
  %52 = load i32, i32* @y.232
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 1007628051, i32 833541793
  store i32 %76, i32* %18
  br label %88

; <label>:77:                                     ; preds = %19
  %78 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  ret %"class.std::vector.0"* %78

; <label>:79:                                     ; preds = %19
  %80 = alloca %"class.std::vector.0"*, align 8
  %81 = alloca i64, align 8
  %82 = alloca %"class.std::vector.0"*, align 8
  %83 = alloca %"class.std::allocator"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %80, align 8
  store i64 %1, i64* %81, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %82, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %83, align 8
  %84 = load %"class.std::vector.0"*, %"class.std::vector.0"** %80, align 8
  %85 = load i64, i64* %81, align 8
  %86 = load %"class.std::vector.0"*, %"class.std::vector.0"** %82, align 8
  %87 = call %"class.std::vector.0"* @_ZSt20uninitialized_fill_nIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEmSC_ET_SE_T0_RKT1_(%"class.std::vector.0"* %84, i64 %85, %"class.std::vector.0"* dereferenceable(24) %86)
  store i32 68630089, i32* %18
  br label %88

; <label>:88:                                     ; preds = %79, %42, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE15_M_erase_at_endEPSB_(%"class.std::vector"*, %"class.std::vector.0"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %7 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %8, i32 0, i32 1
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %9, align 8
  %11 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %12 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %11) #3
  invoke void @_ZSt8_DestroyIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESC_EvT_SE_RSaIT0_E(%"class.std::vector.0"* %6, %"class.std::vector.0"* %10, %"class.std::allocator"* dereferenceable(1) %12)
          to label %13 unwind label %18

; <label>:13:                                     ; preds = %2
  %14 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %15 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %16, i32 0, i32 1
  store %"class.std::vector.0"* %14, %"class.std::vector.0"** %17, align 8
  ret void

; <label>:18:                                     ; preds = %2
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  call void @__clang_call_terminate(i8* %20) #11
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt6fill_nIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEmSC_ET_SE_T0_RKT1_(%"class.std::vector.0"*, i64, %"class.std::vector.0"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %6, align 8
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %8 = call %"class.std::vector.0"* @_ZSt12__niter_baseIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEENSt11_Niter_baseIT_E13iterator_typeESF_(%"class.std::vector.0"* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %11 = call %"class.std::vector.0"* @_ZSt10__fill_n_aIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEmSC_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeESH_T0_RKSG_(%"class.std::vector.0"* %8, i64 %9, %"class.std::vector.0"* dereferenceable(24) %10)
  ret %"class.std::vector.0"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EEC2EmRKSD_(%"struct.std::_Vector_base"*, i64, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator"*, %"class.std::allocator"** %6, align 8
  call void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_implC2ERKSD_(%"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %10, %"class.std::allocator"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE17_M_create_storageEm(%"struct.std::_Vector_base"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = load i32, i32* @x.237
  %16 = load i32, i32* @y.238
  %17 = add i32 %15, -1540380375
  %18 = sub i32 %17, 1
  %19 = sub i32 %18, -1540380375
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %16, 10
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  br i1 %39, label %41, label %77

; <label>:41:                                     ; preds = %14, %77
  %42 = landingpad { i8*, i32 }
          cleanup
  %43 = extractvalue { i8*, i32 } %42, 0
  store i8* %43, i8** %7, align 8
  %44 = extractvalue { i8*, i32 } %42, 1
  store i32 %44, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %10) #3
  %45 = load i32, i32* @x.237
  %46 = load i32, i32* @y.238
  %47 = sub i32 %45, 1623575040
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 1623575040
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  br i1 %69, label %71, label %77

; <label>:71:                                     ; preds = %41
  br label %72

; <label>:72:                                     ; preds = %71
  %73 = load i8*, i8** %7, align 8
  %74 = load i32, i32* %8, align 4
  %75 = insertvalue { i8*, i32 } undef, i8* %73, 0
  %76 = insertvalue { i8*, i32 } %75, i32 %74, 1
  resume { i8*, i32 } %76

; <label>:77:                                     ; preds = %41, %14
  %78 = landingpad { i8*, i32 }
          cleanup
  %79 = extractvalue { i8*, i32 } %78, 0
  store i8* %79, i8** %7, align 8
  %80 = extractvalue { i8*, i32 } %78, 1
  store i32 %80, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %10) #3
  br label %41
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE18_M_fill_initializeEmRKSB_(%"class.std::vector"*, i64, %"class.std::vector.0"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.239
  %7 = load i32, i32* @y.240
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 2088275490, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %89
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2088275490, label %19
    i32 -429137821, label %27
    i32 1894968260, label %71
    i32 -1789726847, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %89

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -429137821, i32 -1789726847
  store i32 %26, i32* %15
  br label %89

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector"*, align 8
  %29 = alloca i64, align 8
  %30 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %28, align 8
  store i64 %1, i64* %29, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %30, align 8
  %31 = load %"class.std::vector"*, %"class.std::vector"** %28, align 8
  %32 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load %"class.std::vector.0"*, %"class.std::vector.0"** %34, align 8
  %36 = load i64, i64* %29, align 8
  %37 = load %"class.std::vector.0"*, %"class.std::vector.0"** %30, align 8
  %38 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  %39 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %38) #3
  %40 = call %"class.std::vector.0"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEmSC_SC_ET_SE_T0_RKT1_RSaIT2_E(%"class.std::vector.0"* %35, i64 %36, %"class.std::vector.0"* dereferenceable(24) %37, %"class.std::allocator"* dereferenceable(1) %39)
  %41 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %42, i32 0, i32 1
  store %"class.std::vector.0"* %40, %"class.std::vector.0"** %43, align 8
  %44 = load i32, i32* @x.239
  %45 = load i32, i32* @y.240
  %46 = sub i32 %44, 1837593385
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1837593385
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 1894968260, i32 -1789726847
  store i32 %70, i32* %15
  br label %89

; <label>:71:                                     ; preds = %16
  ret void

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.std::vector"*, align 8
  %74 = alloca i64, align 8
  %75 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %73, align 8
  store i64 %1, i64* %74, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %75, align 8
  %76 = load %"class.std::vector"*, %"class.std::vector"** %73, align 8
  %77 = bitcast %"class.std::vector"* %76 to %"struct.std::_Vector_base"*
  %78 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %77, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %78, i32 0, i32 0
  %80 = load %"class.std::vector.0"*, %"class.std::vector.0"** %79, align 8
  %81 = load i64, i64* %74, align 8
  %82 = load %"class.std::vector.0"*, %"class.std::vector.0"** %75, align 8
  %83 = bitcast %"class.std::vector"* %76 to %"struct.std::_Vector_base"*
  %84 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %83) #3
  %85 = call %"class.std::vector.0"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEmSC_SC_ET_SE_T0_RKT1_RSaIT2_E(%"class.std::vector.0"* %80, i64 %81, %"class.std::vector.0"* dereferenceable(24) %82, %"class.std::allocator"* dereferenceable(1) %84)
  %86 = bitcast %"class.std::vector"* %76 to %"struct.std::_Vector_base"*
  %87 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %86, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %87, i32 0, i32 1
  store %"class.std::vector.0"* %85, %"class.std::vector.0"** %88, align 8
  store i32 -429137821, i32* %15
  br label %89

; <label>:89:                                     ; preds = %72, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_implC2ERKSD_(%"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %5 to %"class.std::allocator"*
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  call void @_ZNSaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEEC2ERKSC_(%"class.std::allocator"* %6, %"class.std::allocator"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %5, i32 0, i32 0
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %5, i32 0, i32 1
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %5, i32 0, i32 2
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE17_M_create_storageEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"class.std::vector.0"* @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE11_M_allocateEm(%"struct.std::_Vector_base"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %8, i32 0, i32 0
  store %"class.std::vector.0"* %7, %"class.std::vector.0"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"class.std::vector.0"*, %"class.std::vector.0"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %13, i32 0, i32 1
  store %"class.std::vector.0"* %12, %"class.std::vector.0"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"class.std::vector.0"*, %"class.std::vector.0"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %20, i32 0, i32 2
  store %"class.std::vector.0"* %19, %"class.std::vector.0"** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEEC2ERKSC_(%"class.std::allocator"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEEC2ERKSE_(%"class.__gnu_cxx::new_allocator"* %6, %"class.__gnu_cxx::new_allocator"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEEC2ERKSE_(%"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %3, align 8
  store %"class.__gnu_cxx::new_allocator"* %1, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base"*
  %5 = alloca %"struct.std::_Vector_base"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5, align 8
  store %"struct.std::_Vector_base"* %7, %"struct.std::_Vector_base"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 830849176, i32* %9
  %10 = alloca %"class.std::vector.0"*
  br label %11

; <label>:11:                                     ; preds = %2, %60
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 830849176, label %14
    i32 431659111, label %18
    i32 -1799048648, label %24
    i32 1439988441, label %40
    i32 924588031, label %56
    i32 1565586379, label %57
    i32 343464304, label %59
  ]

; <label>:13:                                     ; preds = %11
  br label %60

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 431659111, i32 -1799048648
  store i32 %17, i32* %9
  br label %60

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %20 to %"class.std::allocator"*
  %22 = load i64, i64* %6, align 8
  %23 = call %"class.std::vector.0"* @_ZNSt16allocator_traitsISaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEE8allocateERSD_m(%"class.std::allocator"* dereferenceable(1) %21, i64 %22)
  store i32 1565586379, i32* %9
  store %"class.std::vector.0"* %23, %"class.std::vector.0"** %10
  br label %60

; <label>:24:                                     ; preds = %11
  %25 = load i32, i32* @x.249
  %26 = load i32, i32* @y.250
  %27 = add i32 %25, 1218196887
  %28 = sub i32 %27, 1
  %29 = sub i32 %28, 1218196887
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  %39 = select i1 %37, i32 1439988441, i32 343464304
  store i32 %39, i32* %9
  br label %60

; <label>:40:                                     ; preds = %11
  %41 = load i32, i32* @x.249
  %42 = load i32, i32* @y.250
  %43 = sub i32 %41, 233756859
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 233756859
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 924588031, i32 343464304
  store i32 %55, i32* %9
  br label %60

; <label>:56:                                     ; preds = %11
  store i32 1565586379, i32* %9
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %10
  br label %60

; <label>:57:                                     ; preds = %11
  %58 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10
  ret %"class.std::vector.0"* %58

; <label>:59:                                     ; preds = %11
  store i32 1439988441, i32* %9
  br label %60

; <label>:60:                                     ; preds = %59, %56, %40, %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt16allocator_traitsISaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEE8allocateERSD_m(%"class.std::allocator"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.251
  %7 = load i32, i32* @y.252
  %8 = add i32 %6, 1760530616
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1760530616
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1991697820, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %71
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1991697820, label %20
    i32 1596335269, label %40
    i32 -472102075, label %62
    i32 -959900932, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %71

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1596335269, i32 -959900932
  store i32 %39, i32* %16
  br label %71

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %41, align 8
  store i64 %1, i64* %42, align 8
  %43 = load %"class.std::allocator"*, %"class.std::allocator"** %41, align 8
  %44 = bitcast %"class.std::allocator"* %43 to %"class.__gnu_cxx::new_allocator"*
  %45 = load i64, i64* %42, align 8
  %46 = call %"class.std::vector.0"* @_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %44, i64 %45, i8* null)
  store %"class.std::vector.0"* %46, %"class.std::vector.0"** %3
  %47 = load i32, i32* @x.251
  %48 = load i32, i32* @y.252
  %49 = sub i32 %47, -2081867862
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -2081867862
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -472102075, i32 -959900932
  store i32 %61, i32* %16
  br label %71

; <label>:62:                                     ; preds = %17
  %63 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %3
  ret %"class.std::vector.0"* %63

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::allocator"*, align 8
  %66 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %65, align 8
  store i64 %1, i64* %66, align 8
  %67 = load %"class.std::allocator"*, %"class.std::allocator"** %65, align 8
  %68 = bitcast %"class.std::allocator"* %67 to %"class.__gnu_cxx::new_allocator"*
  %69 = load i64, i64* %66, align 8
  %70 = call %"class.std::vector.0"* @_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %68, i64 %69, i8* null)
  store i32 1596335269, i32* %16
  br label %71

; <label>:71:                                     ; preds = %64, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.0"*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 1289224889, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %65
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1289224889, label %17
    i32 -422664699, label %22
    i32 -171164246, label %23
    i32 2018855000, label %39
    i32 251511210, label %58
    i32 -2018605154, label %60
  ]

; <label>:16:                                     ; preds = %14
  br label %65

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 -422664699, i32 -171164246
  store i32 %21, i32* %13
  br label %65

; <label>:22:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* @x.253
  %25 = load i32, i32* @y.254
  %26 = add i32 %24, -2097741440
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, -2097741440
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  %38 = select i1 %36, i32 2018855000, i32 -2018605154
  store i32 %38, i32* %13
  br label %65

; <label>:39:                                     ; preds = %14
  %40 = load i64, i64* %8, align 8
  %41 = mul i64 %40, 24
  %42 = call i8* @_Znwm(i64 %41)
  %43 = bitcast i8* %42 to %"class.std::vector.0"*
  store %"class.std::vector.0"* %43, %"class.std::vector.0"** %4
  %44 = load i32, i32* @x.253
  %45 = load i32, i32* @y.254
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 251511210, i32 -2018605154
  store i32 %57, i32* %13
  br label %65

; <label>:58:                                     ; preds = %14
  %59 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  ret %"class.std::vector.0"* %59

; <label>:60:                                     ; preds = %14
  %61 = load i64, i64* %8, align 8
  %62 = mul i64 %61, 24
  %63 = call i8* @_Znwm(i64 %62)
  %64 = bitcast i8* %63 to %"class.std::vector.0"*
  store i32 2018855000, i32* %13
  br label %65

; <label>:65:                                     ; preds = %60, %39, %23, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.255
  %5 = load i32, i32* @y.256
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -868997550, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %47
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -868997550, label %17
    i32 1159196018, label %25
    i32 249568068, label %43
    i32 573929110, label %44
  ]

; <label>:16:                                     ; preds = %14
  br label %47

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 1159196018, i32 573929110
  store i32 %24, i32* %13
  br label %47

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %26, align 8
  %28 = load i32, i32* @x.255
  %29 = load i32, i32* @y.256
  %30 = sub i32 %28, 1419936651
  %31 = sub i32 %30, 1
  %32 = add i32 %31, 1419936651
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 249568068, i32 573929110
  store i32 %42, i32* %13
  br label %47

; <label>:43:                                     ; preds = %14
  ret i64 768614336404564650

; <label>:44:                                     ; preds = %14
  %45 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %45, align 8
  %46 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %45, align 8
  store i32 1159196018, i32* %13
  br label %47

; <label>:47:                                     ; preds = %44, %25, %17, %16
  br label %14
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #9

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #10

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEvRT_SF_(%"class.std::vector.0"** dereferenceable(8), %"class.std::vector.0"** dereferenceable(8)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.257
  %6 = load i32, i32* @y.258
  %7 = add i32 %5, -6969644
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -6969644
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1470054354, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %83
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1470054354, label %19
    i32 524758953, label %27
    i32 169730613, label %68
    i32 -601446545, label %69
  ]

; <label>:18:                                     ; preds = %16
  br label %83

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 524758953, i32 -601446545
  store i32 %26, i32* %15
  br label %83

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.0"**, align 8
  %29 = alloca %"class.std::vector.0"**, align 8
  %30 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"** %0, %"class.std::vector.0"*** %28, align 8
  store %"class.std::vector.0"** %1, %"class.std::vector.0"*** %29, align 8
  %31 = load %"class.std::vector.0"**, %"class.std::vector.0"*** %28, align 8
  %32 = call dereferenceable(8) %"class.std::vector.0"** @_ZSt4moveIRPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEONSt16remove_referenceIT_E4typeEOSG_(%"class.std::vector.0"** dereferenceable(8) %31) #3
  %33 = load %"class.std::vector.0"*, %"class.std::vector.0"** %32, align 8
  store %"class.std::vector.0"* %33, %"class.std::vector.0"** %30, align 8
  %34 = load %"class.std::vector.0"**, %"class.std::vector.0"*** %29, align 8
  %35 = call dereferenceable(8) %"class.std::vector.0"** @_ZSt4moveIRPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEONSt16remove_referenceIT_E4typeEOSG_(%"class.std::vector.0"** dereferenceable(8) %34) #3
  %36 = load %"class.std::vector.0"*, %"class.std::vector.0"** %35, align 8
  %37 = load %"class.std::vector.0"**, %"class.std::vector.0"*** %28, align 8
  store %"class.std::vector.0"* %36, %"class.std::vector.0"** %37, align 8
  %38 = call dereferenceable(8) %"class.std::vector.0"** @_ZSt4moveIRPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEONSt16remove_referenceIT_E4typeEOSG_(%"class.std::vector.0"** dereferenceable(8) %30) #3
  %39 = load %"class.std::vector.0"*, %"class.std::vector.0"** %38, align 8
  %40 = load %"class.std::vector.0"**, %"class.std::vector.0"*** %29, align 8
  store %"class.std::vector.0"* %39, %"class.std::vector.0"** %40, align 8
  %41 = load i32, i32* @x.257
  %42 = load i32, i32* @y.258
  %43 = sub i32 %41, 1907132467
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 1907132467
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 169730613, i32 -601446545
  store i32 %67, i32* %15
  br label %83

; <label>:68:                                     ; preds = %16
  ret void

; <label>:69:                                     ; preds = %16
  %70 = alloca %"class.std::vector.0"**, align 8
  %71 = alloca %"class.std::vector.0"**, align 8
  %72 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"** %0, %"class.std::vector.0"*** %70, align 8
  store %"class.std::vector.0"** %1, %"class.std::vector.0"*** %71, align 8
  %73 = load %"class.std::vector.0"**, %"class.std::vector.0"*** %70, align 8
  %74 = call dereferenceable(8) %"class.std::vector.0"** @_ZSt4moveIRPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEONSt16remove_referenceIT_E4typeEOSG_(%"class.std::vector.0"** dereferenceable(8) %73) #3
  %75 = load %"class.std::vector.0"*, %"class.std::vector.0"** %74, align 8
  store %"class.std::vector.0"* %75, %"class.std::vector.0"** %72, align 8
  %76 = load %"class.std::vector.0"**, %"class.std::vector.0"*** %71, align 8
  %77 = call dereferenceable(8) %"class.std::vector.0"** @_ZSt4moveIRPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEONSt16remove_referenceIT_E4typeEOSG_(%"class.std::vector.0"** dereferenceable(8) %76) #3
  %78 = load %"class.std::vector.0"*, %"class.std::vector.0"** %77, align 8
  %79 = load %"class.std::vector.0"**, %"class.std::vector.0"*** %70, align 8
  store %"class.std::vector.0"* %78, %"class.std::vector.0"** %79, align 8
  %80 = call dereferenceable(8) %"class.std::vector.0"** @_ZSt4moveIRPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEONSt16remove_referenceIT_E4typeEOSG_(%"class.std::vector.0"** dereferenceable(8) %72) #3
  %81 = load %"class.std::vector.0"*, %"class.std::vector.0"** %80, align 8
  %82 = load %"class.std::vector.0"**, %"class.std::vector.0"*** %71, align 8
  store %"class.std::vector.0"* %81, %"class.std::vector.0"** %82, align 8
  store i32 524758953, i32* %15
  br label %83

; <label>:83:                                     ; preds = %69, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.0"** @_ZSt4moveIRPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEONSt16remove_referenceIT_E4typeEOSG_(%"class.std::vector.0"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"class.std::vector.0"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.259
  %6 = load i32, i32* @y.260
  %7 = sub i32 %5, 592694470
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 592694470
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -945988521, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -945988521, label %19
    i32 -1705305408, label %27
    i32 -856336594, label %57
    i32 -936889826, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1705305408, i32 -936889826
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.0"**, align 8
  store %"class.std::vector.0"** %0, %"class.std::vector.0"*** %28, align 8
  %29 = load %"class.std::vector.0"**, %"class.std::vector.0"*** %28, align 8
  store %"class.std::vector.0"** %29, %"class.std::vector.0"*** %2
  %30 = load i32, i32* @x.259
  %31 = load i32, i32* @y.260
  %32 = add i32 %30, 929512441
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 929512441
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -856336594, i32 -936889826
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %2
  ret %"class.std::vector.0"** %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.std::vector.0"**, align 8
  store %"class.std::vector.0"** %0, %"class.std::vector.0"*** %60, align 8
  %61 = load %"class.std::vector.0"**, %"class.std::vector.0"*** %60, align 8
  store i32 -1705305408, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8__fill_aIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESC_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SJ_RKSG_(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %5, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %6, align 8
  %7 = alloca i32
  store i32 -1039801989, i32* %7
  br label %8

; <label>:8:                                      ; preds = %3, %59
  %9 = load i32, i32* %7
  switch i32 %9, label %10 [
    i32 -1039801989, label %11
    i32 -255998226, label %16
    i32 -2000426404, label %20
    i32 -338189830, label %36
    i32 -1960529465, label %54
    i32 -2131341875, label %55
    i32 817039511, label %56
  ]

; <label>:10:                                     ; preds = %8
  br label %59

; <label>:11:                                     ; preds = %8
  %12 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %13 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %14 = icmp ne %"class.std::vector.0"* %12, %13
  %15 = select i1 %14, i32 -255998226, i32 -2131341875
  store i32 %15, i32* %7
  br label %59

; <label>:16:                                     ; preds = %8
  %17 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %18 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %19 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEaSERKSB_(%"class.std::vector.0"* %18, %"class.std::vector.0"* dereferenceable(24) %17)
  store i32 -2000426404, i32* %7
  br label %59

; <label>:20:                                     ; preds = %8
  %21 = load i32, i32* @x.261
  %22 = load i32, i32* @y.262
  %23 = add i32 %21, -1112065510
  %24 = sub i32 %23, 1
  %25 = sub i32 %24, -1112065510
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  %35 = select i1 %33, i32 -338189830, i32 817039511
  store i32 %35, i32* %7
  br label %59

; <label>:36:                                     ; preds = %8
  %37 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %38 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %37, i32 1
  store %"class.std::vector.0"* %38, %"class.std::vector.0"** %4, align 8
  %39 = load i32, i32* @x.261
  %40 = load i32, i32* @y.262
  %41 = add i32 %39, -1304749301
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, -1304749301
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -1960529465, i32 817039511
  store i32 %53, i32* %7
  br label %59

; <label>:54:                                     ; preds = %8
  store i32 -1039801989, i32* %7
  br label %59

; <label>:55:                                     ; preds = %8
  ret void

; <label>:56:                                     ; preds = %8
  %57 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %58 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %57, i32 1
  store %"class.std::vector.0"* %58, %"class.std::vector.0"** %4, align 8
  store i32 -338189830, i32* %7
  br label %59

; <label>:59:                                     ; preds = %56, %54, %36, %20, %16, %11, %10
  br label %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EES2_ISE_SaISE_EEEEENSt11_Niter_baseIT_E13iterator_typeESK_(%"class.std::vector.0"*) #0 comdat {
  %2 = alloca %"class.std::vector.0"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.263
  %6 = load i32, i32* @y.264
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1270263179, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1270263179, label %18
    i32 617942531, label %38
    i32 612302129, label %62
    i32 2097295612, label %64
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 617942531, i32 2097295612
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %40 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %39, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %41, align 8
  %42 = bitcast %"class.__gnu_cxx::__normal_iterator"* %40 to i8*
  %43 = bitcast %"class.__gnu_cxx::__normal_iterator"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 8, i32 8, i1 false)
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  %45 = load %"class.std::vector.0"*, %"class.std::vector.0"** %44, align 8
  %46 = call %"class.std::vector.0"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EES2_ISE_SaISE_EEEELb1EE7_S_baseESI_(%"class.std::vector.0"* %45)
  store %"class.std::vector.0"* %46, %"class.std::vector.0"** %2
  %47 = load i32, i32* @x.263
  %48 = load i32, i32* @y.264
  %49 = add i32 %47, -286193091
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -286193091
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 612302129, i32 2097295612
  store i32 %61, i32* %14
  br label %73

; <label>:62:                                     ; preds = %15
  %63 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %2
  ret %"class.std::vector.0"* %63

; <label>:64:                                     ; preds = %15
  %65 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %66 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %65, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %67, align 8
  %68 = bitcast %"class.__gnu_cxx::__normal_iterator"* %66 to i8*
  %69 = bitcast %"class.__gnu_cxx::__normal_iterator"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %68, i8* %69, i64 8, i32 8, i1 false)
  %70 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %66, i32 0, i32 0
  %71 = load %"class.std::vector.0"*, %"class.std::vector.0"** %70, align 8
  %72 = call %"class.std::vector.0"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EES2_ISE_SaISE_EEEELb1EE7_S_baseESI_(%"class.std::vector.0"* %71)
  store i32 617942531, i32* %14
  br label %73

; <label>:73:                                     ; preds = %64, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEaSERKSB_(%"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.0"*
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.19"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.19"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.18"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.18"*
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.19"*
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.18"*
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.18"*
  %12 = alloca %"class.std::unordered_map"**
  %13 = alloca i64*
  %14 = alloca %"class.std::vector.0"**
  %15 = alloca i1
  %16 = alloca i1
  %17 = load i32, i32* @x.265
  %18 = load i32, i32* @y.266
  %19 = sub i32 0, 1
  %20 = add i32 %17, %19
  %21 = sub i32 %17, 1
  %22 = mul i32 %17, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  store i1 %24, i1* %16
  %25 = icmp slt i32 %18, 10
  store i1 %25, i1* %15
  %26 = alloca i32
  store i32 -130088075, i32* %26
  br label %27

; <label>:27:                                     ; preds = %2, %381
  %28 = load i32, i32* %26
  switch i32 %28, label %29 [
    i32 -130088075, label %30
    i32 -2009732180, label %38
    i32 900271381, label %83
    i32 -728674552, label %86
    i32 -1602079789, label %97
    i32 744974211, label %173
    i32 1651836717, label %180
    i32 -1149488795, label %196
    i32 2009719901, label %263
    i32 1912956951, label %264
    i32 -688941665, label %310
    i32 -1924814503, label %311
    i32 -919744423, label %324
    i32 -1935379128, label %326
    i32 -419840060, label %341
  ]

; <label>:29:                                     ; preds = %27
  br label %381

; <label>:30:                                     ; preds = %27
  %31 = load volatile i1, i1* %16
  %32 = load volatile i1, i1* %15
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  %37 = select i1 %35, i32 -2009732180, i32 -1935379128
  store i32 %37, i32* %26
  br label %381

; <label>:38:                                     ; preds = %27
  %39 = alloca %"class.std::vector.0"*, align 8
  %40 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"** %40, %"class.std::vector.0"*** %14
  %41 = alloca i64, align 8
  store i64* %41, i64** %13
  %42 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"** %42, %"class.std::unordered_map"*** %12
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  store %"class.__gnu_cxx::__normal_iterator.18"* %43, %"class.__gnu_cxx::__normal_iterator.18"** %11
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  store %"class.__gnu_cxx::__normal_iterator.18"* %44, %"class.__gnu_cxx::__normal_iterator.18"** %10
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  store %"class.__gnu_cxx::__normal_iterator.19"* %45, %"class.__gnu_cxx::__normal_iterator.19"** %9
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  store %"class.__gnu_cxx::__normal_iterator.18"* %46, %"class.__gnu_cxx::__normal_iterator.18"** %8
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  store %"class.__gnu_cxx::__normal_iterator.18"* %47, %"class.__gnu_cxx::__normal_iterator.18"** %7
  %48 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  store %"class.__gnu_cxx::__normal_iterator.19"* %48, %"class.__gnu_cxx::__normal_iterator.19"** %6
  %49 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  store %"class.__gnu_cxx::__normal_iterator.19"* %49, %"class.__gnu_cxx::__normal_iterator.19"** %5
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %39, align 8
  %50 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %14
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %50, align 8
  %51 = load %"class.std::vector.0"*, %"class.std::vector.0"** %39, align 8
  store %"class.std::vector.0"* %51, %"class.std::vector.0"** %4
  %52 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %14
  %53 = load %"class.std::vector.0"*, %"class.std::vector.0"** %52, align 8
  %54 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %55 = icmp ne %"class.std::vector.0"* %53, %54
  store i1 %55, i1* %3
  %56 = load i32, i32* @x.265
  %57 = load i32, i32* @y.266
  %58 = add i32 %56, 1555560604
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, 1555560604
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 false, true
  %69 = and i1 %66, false
  %70 = and i1 %64, %68
  %71 = and i1 %67, false
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 false, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 900271381, i32 -1935379128
  store i32 %82, i32* %26
  br label %381

; <label>:83:                                     ; preds = %27
  %84 = load volatile i1, i1* %3
  %85 = select i1 %84, i32 -728674552, i32 -919744423
  store i32 %85, i32* %26
  br label %381

; <label>:86:                                     ; preds = %27
  %87 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %14
  %88 = load %"class.std::vector.0"*, %"class.std::vector.0"** %87, align 8
  %89 = call i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE4sizeEv(%"class.std::vector.0"* %88) #3
  %90 = load volatile i64*, i64** %13
  store i64 %89, i64* %90, align 8
  %91 = load volatile i64*, i64** %13
  %92 = load i64, i64* %91, align 8
  %93 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %94 = call i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE8capacityEv(%"class.std::vector.0"* %93) #3
  %95 = icmp ugt i64 %92, %94
  %96 = select i1 %95, i32 -1602079789, i32 744974211
  store i32 %96, i32* %26
  br label %381

; <label>:97:                                     ; preds = %27
  %98 = load volatile i64*, i64** %13
  %99 = load i64, i64* %98, align 8
  %100 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %14
  %101 = load %"class.std::vector.0"*, %"class.std::vector.0"** %100, align 8
  %102 = call %"class.std::unordered_map"* @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE5beginEv(%"class.std::vector.0"* %101) #3
  %103 = load volatile %"class.__gnu_cxx::__normal_iterator.18"*, %"class.__gnu_cxx::__normal_iterator.18"** %11
  %104 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %103, i32 0, i32 0
  store %"class.std::unordered_map"* %102, %"class.std::unordered_map"** %104, align 8
  %105 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %14
  %106 = load %"class.std::vector.0"*, %"class.std::vector.0"** %105, align 8
  %107 = call %"class.std::unordered_map"* @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE3endEv(%"class.std::vector.0"* %106) #3
  %108 = load volatile %"class.__gnu_cxx::__normal_iterator.18"*, %"class.__gnu_cxx::__normal_iterator.18"** %10
  %109 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %108, i32 0, i32 0
  store %"class.std::unordered_map"* %107, %"class.std::unordered_map"** %109, align 8
  %110 = load volatile %"class.__gnu_cxx::__normal_iterator.18"*, %"class.__gnu_cxx::__normal_iterator.18"** %11
  %111 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %110, i32 0, i32 0
  %112 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %111, align 8
  %113 = load volatile %"class.__gnu_cxx::__normal_iterator.18"*, %"class.__gnu_cxx::__normal_iterator.18"** %10
  %114 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %113, i32 0, i32 0
  %115 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %114, align 8
  %116 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %117 = call %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS9_SB_EEEEPS9_mT_SJ_(%"class.std::vector.0"* %116, i64 %99, %"class.std::unordered_map"* %112, %"class.std::unordered_map"* %115)
  %118 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %12
  store %"class.std::unordered_map"* %117, %"class.std::unordered_map"** %118, align 8
  %119 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %120 = bitcast %"class.std::vector.0"* %119 to %"struct.std::_Vector_base.1"*
  %121 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %120, i32 0, i32 0
  %122 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %121, i32 0, i32 0
  %123 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %122, align 8
  %124 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %125 = bitcast %"class.std::vector.0"* %124 to %"struct.std::_Vector_base.1"*
  %126 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %125, i32 0, i32 0
  %127 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %126, i32 0, i32 1
  %128 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %127, align 8
  %129 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %130 = bitcast %"class.std::vector.0"* %129 to %"struct.std::_Vector_base.1"*
  %131 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %130) #3
  call void @_ZSt8_DestroyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEES9_EvT_SB_RSaIT0_E(%"class.std::unordered_map"* %123, %"class.std::unordered_map"* %128, %"class.std::allocator.2"* dereferenceable(1) %131)
  %132 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %133 = bitcast %"class.std::vector.0"* %132 to %"struct.std::_Vector_base.1"*
  %134 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %135 = bitcast %"class.std::vector.0"* %134 to %"struct.std::_Vector_base.1"*
  %136 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %135, i32 0, i32 0
  %137 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %136, i32 0, i32 0
  %138 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %137, align 8
  %139 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %140 = bitcast %"class.std::vector.0"* %139 to %"struct.std::_Vector_base.1"*
  %141 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %140, i32 0, i32 0
  %142 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %141, i32 0, i32 2
  %143 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %142, align 8
  %144 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %145 = bitcast %"class.std::vector.0"* %144 to %"struct.std::_Vector_base.1"*
  %146 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %145, i32 0, i32 0
  %147 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %146, i32 0, i32 0
  %148 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %147, align 8
  %149 = ptrtoint %"class.std::unordered_map"* %143 to i64
  %150 = ptrtoint %"class.std::unordered_map"* %148 to i64
  %151 = sub i64 0, %150
  %152 = add i64 %149, %151
  %153 = sub i64 %149, %150
  %154 = sdiv exact i64 %152, 56
  call void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE13_M_deallocateEPS9_m(%"struct.std::_Vector_base.1"* %133, %"class.std::unordered_map"* %138, i64 %154)
  %155 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %12
  %156 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %155, align 8
  %157 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %158 = bitcast %"class.std::vector.0"* %157 to %"struct.std::_Vector_base.1"*
  %159 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %158, i32 0, i32 0
  %160 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %159, i32 0, i32 0
  store %"class.std::unordered_map"* %156, %"class.std::unordered_map"** %160, align 8
  %161 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %162 = bitcast %"class.std::vector.0"* %161 to %"struct.std::_Vector_base.1"*
  %163 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %162, i32 0, i32 0
  %164 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %163, i32 0, i32 0
  %165 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %164, align 8
  %166 = load volatile i64*, i64** %13
  %167 = load i64, i64* %166, align 8
  %168 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %165, i64 %167
  %169 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %170 = bitcast %"class.std::vector.0"* %169 to %"struct.std::_Vector_base.1"*
  %171 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %170, i32 0, i32 0
  %172 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %171, i32 0, i32 2
  store %"class.std::unordered_map"* %168, %"class.std::unordered_map"** %172, align 8
  store i32 -1924814503, i32* %26
  br label %381

; <label>:173:                                    ; preds = %27
  %174 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %175 = call i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE4sizeEv(%"class.std::vector.0"* %174) #3
  %176 = load volatile i64*, i64** %13
  %177 = load i64, i64* %176, align 8
  %178 = icmp uge i64 %175, %177
  %179 = select i1 %178, i32 1651836717, i32 1912956951
  store i32 %179, i32* %26
  br label %381

; <label>:180:                                    ; preds = %27
  %181 = load i32, i32* @x.265
  %182 = load i32, i32* @y.266
  %183 = add i32 %181, -995567253
  %184 = sub i32 %183, 1
  %185 = sub i32 %184, -995567253
  %186 = sub i32 %181, 1
  %187 = mul i32 %181, %185
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %182, 10
  %191 = and i1 %189, %190
  %192 = xor i1 %189, %190
  %193 = or i1 %191, %192
  %194 = or i1 %189, %190
  %195 = select i1 %193, i32 -1149488795, i32 -419840060
  store i32 %195, i32* %26
  br label %381

; <label>:196:                                    ; preds = %27
  %197 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %14
  %198 = load %"class.std::vector.0"*, %"class.std::vector.0"** %197, align 8
  %199 = call %"class.std::unordered_map"* @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE5beginEv(%"class.std::vector.0"* %198) #3
  %200 = load volatile %"class.__gnu_cxx::__normal_iterator.18"*, %"class.__gnu_cxx::__normal_iterator.18"** %8
  %201 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %200, i32 0, i32 0
  store %"class.std::unordered_map"* %199, %"class.std::unordered_map"** %201, align 8
  %202 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %14
  %203 = load %"class.std::vector.0"*, %"class.std::vector.0"** %202, align 8
  %204 = call %"class.std::unordered_map"* @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE3endEv(%"class.std::vector.0"* %203) #3
  %205 = load volatile %"class.__gnu_cxx::__normal_iterator.18"*, %"class.__gnu_cxx::__normal_iterator.18"** %7
  %206 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %205, i32 0, i32 0
  store %"class.std::unordered_map"* %204, %"class.std::unordered_map"** %206, align 8
  %207 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %208 = call %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE5beginEv(%"class.std::vector.0"* %207) #3
  %209 = load volatile %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %6
  %210 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %209, i32 0, i32 0
  store %"class.std::unordered_map"* %208, %"class.std::unordered_map"** %210, align 8
  %211 = load volatile %"class.__gnu_cxx::__normal_iterator.18"*, %"class.__gnu_cxx::__normal_iterator.18"** %8
  %212 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %211, i32 0, i32 0
  %213 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %212, align 8
  %214 = load volatile %"class.__gnu_cxx::__normal_iterator.18"*, %"class.__gnu_cxx::__normal_iterator.18"** %7
  %215 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %214, i32 0, i32 0
  %216 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %215, align 8
  %217 = load volatile %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %6
  %218 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %217, i32 0, i32 0
  %219 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %218, align 8
  %220 = call %"class.std::unordered_map"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEENS1_IPSB_SG_EEET0_T_SL_SK_(%"class.std::unordered_map"* %213, %"class.std::unordered_map"* %216, %"class.std::unordered_map"* %219)
  %221 = load volatile %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %9
  %222 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %221, i32 0, i32 0
  store %"class.std::unordered_map"* %220, %"class.std::unordered_map"** %222, align 8
  %223 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %224 = call %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE3endEv(%"class.std::vector.0"* %223) #3
  %225 = load volatile %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %5
  %226 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %225, i32 0, i32 0
  store %"class.std::unordered_map"* %224, %"class.std::unordered_map"** %226, align 8
  %227 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %228 = bitcast %"class.std::vector.0"* %227 to %"struct.std::_Vector_base.1"*
  %229 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %228) #3
  %230 = load volatile %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %9
  %231 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %230, i32 0, i32 0
  %232 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %231, align 8
  %233 = load volatile %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %5
  %234 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %233, i32 0, i32 0
  %235 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %234, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEESB_EvT_SH_RSaIT0_E(%"class.std::unordered_map"* %232, %"class.std::unordered_map"* %235, %"class.std::allocator.2"* dereferenceable(1) %229)
  %236 = load i32, i32* @x.265
  %237 = load i32, i32* @y.266
  %238 = sub i32 %236, 1359692981
  %239 = sub i32 %238, 1
  %240 = add i32 %239, 1359692981
  %241 = sub i32 %236, 1
  %242 = mul i32 %236, %240
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %237, 10
  %246 = xor i1 %244, true
  %247 = xor i1 %245, true
  %248 = xor i1 false, true
  %249 = and i1 %246, false
  %250 = and i1 %244, %248
  %251 = and i1 %247, false
  %252 = and i1 %245, %248
  %253 = or i1 %249, %250
  %254 = or i1 %251, %252
  %255 = xor i1 %253, %254
  %256 = or i1 %246, %247
  %257 = xor i1 %256, true
  %258 = or i1 false, %248
  %259 = and i1 %257, %258
  %260 = or i1 %255, %259
  %261 = or i1 %244, %245
  %262 = select i1 %260, i32 2009719901, i32 -419840060
  store i32 %262, i32* %26
  br label %381

; <label>:263:                                    ; preds = %27
  store i32 -688941665, i32* %26
  br label %381

; <label>:264:                                    ; preds = %27
  %265 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %14
  %266 = load %"class.std::vector.0"*, %"class.std::vector.0"** %265, align 8
  %267 = bitcast %"class.std::vector.0"* %266 to %"struct.std::_Vector_base.1"*
  %268 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %267, i32 0, i32 0
  %269 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %268, i32 0, i32 0
  %270 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %269, align 8
  %271 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %14
  %272 = load %"class.std::vector.0"*, %"class.std::vector.0"** %271, align 8
  %273 = bitcast %"class.std::vector.0"* %272 to %"struct.std::_Vector_base.1"*
  %274 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %273, i32 0, i32 0
  %275 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %274, i32 0, i32 0
  %276 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %275, align 8
  %277 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %278 = call i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE4sizeEv(%"class.std::vector.0"* %277) #3
  %279 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %276, i64 %278
  %280 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %281 = bitcast %"class.std::vector.0"* %280 to %"struct.std::_Vector_base.1"*
  %282 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %281, i32 0, i32 0
  %283 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %282, i32 0, i32 0
  %284 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %283, align 8
  %285 = call %"class.std::unordered_map"* @_ZSt4copyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_ET0_T_SC_SB_(%"class.std::unordered_map"* %270, %"class.std::unordered_map"* %279, %"class.std::unordered_map"* %284)
  %286 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %14
  %287 = load %"class.std::vector.0"*, %"class.std::vector.0"** %286, align 8
  %288 = bitcast %"class.std::vector.0"* %287 to %"struct.std::_Vector_base.1"*
  %289 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %288, i32 0, i32 0
  %290 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %289, i32 0, i32 0
  %291 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %290, align 8
  %292 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %293 = call i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE4sizeEv(%"class.std::vector.0"* %292) #3
  %294 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %291, i64 %293
  %295 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %14
  %296 = load %"class.std::vector.0"*, %"class.std::vector.0"** %295, align 8
  %297 = bitcast %"class.std::vector.0"* %296 to %"struct.std::_Vector_base.1"*
  %298 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %297, i32 0, i32 0
  %299 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %298, i32 0, i32 1
  %300 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %299, align 8
  %301 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %302 = bitcast %"class.std::vector.0"* %301 to %"struct.std::_Vector_base.1"*
  %303 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %302, i32 0, i32 0
  %304 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %303, i32 0, i32 1
  %305 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %304, align 8
  %306 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %307 = bitcast %"class.std::vector.0"* %306 to %"struct.std::_Vector_base.1"*
  %308 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %307) #3
  %309 = call %"class.std::unordered_map"* @_ZSt22__uninitialized_copy_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_S9_ET0_T_SC_SB_RSaIT1_E(%"class.std::unordered_map"* %294, %"class.std::unordered_map"* %300, %"class.std::unordered_map"* %305, %"class.std::allocator.2"* dereferenceable(1) %308)
  store i32 -688941665, i32* %26
  br label %381

; <label>:310:                                    ; preds = %27
  store i32 -1924814503, i32* %26
  br label %381

; <label>:311:                                    ; preds = %27
  %312 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %313 = bitcast %"class.std::vector.0"* %312 to %"struct.std::_Vector_base.1"*
  %314 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %313, i32 0, i32 0
  %315 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %314, i32 0, i32 0
  %316 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %315, align 8
  %317 = load volatile i64*, i64** %13
  %318 = load i64, i64* %317, align 8
  %319 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %316, i64 %318
  %320 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %321 = bitcast %"class.std::vector.0"* %320 to %"struct.std::_Vector_base.1"*
  %322 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %321, i32 0, i32 0
  %323 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %322, i32 0, i32 1
  store %"class.std::unordered_map"* %319, %"class.std::unordered_map"** %323, align 8
  store i32 -919744423, i32* %26
  br label %381

; <label>:324:                                    ; preds = %27
  %325 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  ret %"class.std::vector.0"* %325

; <label>:326:                                    ; preds = %27
  %327 = alloca %"class.std::vector.0"*, align 8
  %328 = alloca %"class.std::vector.0"*, align 8
  %329 = alloca i64, align 8
  %330 = alloca %"class.std::unordered_map"*, align 8
  %331 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %332 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %333 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %334 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %335 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %336 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %337 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %327, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %328, align 8
  %338 = load %"class.std::vector.0"*, %"class.std::vector.0"** %327, align 8
  %339 = load %"class.std::vector.0"*, %"class.std::vector.0"** %328, align 8
  %340 = icmp ne %"class.std::vector.0"* %339, %338
  store i32 -2009732180, i32* %26
  br label %381

; <label>:341:                                    ; preds = %27
  %342 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %14
  %343 = load %"class.std::vector.0"*, %"class.std::vector.0"** %342, align 8
  %344 = call %"class.std::unordered_map"* @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE5beginEv(%"class.std::vector.0"* %343) #3
  %345 = load volatile %"class.__gnu_cxx::__normal_iterator.18"*, %"class.__gnu_cxx::__normal_iterator.18"** %8
  %346 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %345, i32 0, i32 0
  store %"class.std::unordered_map"* %344, %"class.std::unordered_map"** %346, align 8
  %347 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %14
  %348 = load %"class.std::vector.0"*, %"class.std::vector.0"** %347, align 8
  %349 = call %"class.std::unordered_map"* @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE3endEv(%"class.std::vector.0"* %348) #3
  %350 = load volatile %"class.__gnu_cxx::__normal_iterator.18"*, %"class.__gnu_cxx::__normal_iterator.18"** %7
  %351 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %350, i32 0, i32 0
  store %"class.std::unordered_map"* %349, %"class.std::unordered_map"** %351, align 8
  %352 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %353 = call %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE5beginEv(%"class.std::vector.0"* %352) #3
  %354 = load volatile %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %6
  %355 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %354, i32 0, i32 0
  store %"class.std::unordered_map"* %353, %"class.std::unordered_map"** %355, align 8
  %356 = load volatile %"class.__gnu_cxx::__normal_iterator.18"*, %"class.__gnu_cxx::__normal_iterator.18"** %8
  %357 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %356, i32 0, i32 0
  %358 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %357, align 8
  %359 = load volatile %"class.__gnu_cxx::__normal_iterator.18"*, %"class.__gnu_cxx::__normal_iterator.18"** %7
  %360 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %359, i32 0, i32 0
  %361 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %360, align 8
  %362 = load volatile %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %6
  %363 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %362, i32 0, i32 0
  %364 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %363, align 8
  %365 = call %"class.std::unordered_map"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEENS1_IPSB_SG_EEET0_T_SL_SK_(%"class.std::unordered_map"* %358, %"class.std::unordered_map"* %361, %"class.std::unordered_map"* %364)
  %366 = load volatile %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %9
  %367 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %366, i32 0, i32 0
  store %"class.std::unordered_map"* %365, %"class.std::unordered_map"** %367, align 8
  %368 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %369 = call %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE3endEv(%"class.std::vector.0"* %368) #3
  %370 = load volatile %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %5
  %371 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %370, i32 0, i32 0
  store %"class.std::unordered_map"* %369, %"class.std::unordered_map"** %371, align 8
  %372 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %373 = bitcast %"class.std::vector.0"* %372 to %"struct.std::_Vector_base.1"*
  %374 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %373) #3
  %375 = load volatile %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %9
  %376 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %375, i32 0, i32 0
  %377 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %376, align 8
  %378 = load volatile %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %5
  %379 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %378, i32 0, i32 0
  %380 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %379, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEESB_EvT_SH_RSaIT0_E(%"class.std::unordered_map"* %377, %"class.std::unordered_map"* %380, %"class.std::allocator.2"* dereferenceable(1) %374)
  store i32 -1149488795, i32* %26
  br label %381

; <label>:381:                                    ; preds = %341, %326, %311, %310, %264, %263, %196, %180, %173, %97, %86, %83, %38, %30, %29
  br label %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE8capacityEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %5, i32 0, i32 2
  %7 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  %8 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %10, align 8
  %12 = ptrtoint %"class.std::unordered_map"* %7 to i64
  %13 = ptrtoint %"class.std::unordered_map"* %11 to i64
  %14 = add i64 %12, -4371759435751608555
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, -4371759435751608555
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 56
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS9_SB_EEEEPS9_mT_SJ_(%"class.std::vector.0"*, i64, %"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.std::unordered_map"*, align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %12 = alloca i8*
  %13 = alloca i32
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %5, i32 0, i32 0
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %6, i32 0, i32 0
  store %"class.std::unordered_map"* %3, %"class.std::unordered_map"** %15, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %7, align 8
  store i64 %1, i64* %8, align 8
  %16 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %17 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %18 = load i64, i64* %8, align 8
  %19 = call %"class.std::unordered_map"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %17, i64 %18)
  store %"class.std::unordered_map"* %19, %"class.std::unordered_map"** %9, align 8
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %10 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %11 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %9, align 8
  %25 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %26 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %25) #3
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %10, i32 0, i32 0
  %28 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %27, align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %11, i32 0, i32 0
  %30 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %29, align 8
  %31 = invoke %"class.std::unordered_map"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEPSB_SB_ET0_T_SK_SJ_RSaIT1_E(%"class.std::unordered_map"* %28, %"class.std::unordered_map"* %30, %"class.std::unordered_map"* %24, %"class.std::allocator.2"* dereferenceable(1) %26)
          to label %32 unwind label %34

; <label>:32:                                     ; preds = %4
  %33 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %9, align 8
  ret %"class.std::unordered_map"* %33

; <label>:34:                                     ; preds = %4
  %35 = landingpad { i8*, i32 }
          catch i8* null
  %36 = extractvalue { i8*, i32 } %35, 0
  store i8* %36, i8** %12, align 8
  %37 = extractvalue { i8*, i32 } %35, 1
  store i32 %37, i32* %13, align 4
  br label %38

; <label>:38:                                     ; preds = %34
  %39 = load i8*, i8** %12, align 8
  %40 = call i8* @__cxa_begin_catch(i8* %39) #3
  %41 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %42 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %9, align 8
  %43 = load i64, i64* %8, align 8
  invoke void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE13_M_deallocateEPS9_m(%"struct.std::_Vector_base.1"* %41, %"class.std::unordered_map"* %42, i64 %43)
          to label %44 unwind label %99

; <label>:44:                                     ; preds = %38
  %45 = load i32, i32* @x.269
  %46 = load i32, i32* @y.270
  %47 = sub i32 %45, 1538889015
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 1538889015
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  br i1 %69, label %71, label %209

; <label>:71:                                     ; preds = %44, %209
  %72 = load i32, i32* @x.269
  %73 = load i32, i32* @y.270
  %74 = sub i32 %72, -749904456
  %75 = sub i32 %74, 1
  %76 = add i32 %75, -749904456
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = xor i1 %80, true
  %83 = xor i1 %81, true
  %84 = xor i1 false, true
  %85 = and i1 %82, false
  %86 = and i1 %80, %84
  %87 = and i1 %83, false
  %88 = and i1 %81, %84
  %89 = or i1 %85, %86
  %90 = or i1 %87, %88
  %91 = xor i1 %89, %90
  %92 = or i1 %82, %83
  %93 = xor i1 %92, true
  %94 = or i1 false, %84
  %95 = and i1 %93, %94
  %96 = or i1 %91, %95
  %97 = or i1 %80, %81
  br i1 %96, label %98, label %209

; <label>:98:                                     ; preds = %71
  invoke void @__cxa_rethrow() #12
          to label %208 unwind label %99

; <label>:99:                                     ; preds = %98, %38
  %100 = landingpad { i8*, i32 }
          cleanup
  %101 = extractvalue { i8*, i32 } %100, 0
  store i8* %101, i8** %12, align 8
  %102 = extractvalue { i8*, i32 } %100, 1
  store i32 %102, i32* %13, align 4
  invoke void @__cxa_end_catch()
          to label %103 unwind label %205

; <label>:103:                                    ; preds = %99
  %104 = load i32, i32* @x.269
  %105 = load i32, i32* @y.270
  %106 = add i32 %104, -680049125
  %107 = sub i32 %106, 1
  %108 = sub i32 %107, -680049125
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = and i1 %112, %113
  %115 = xor i1 %112, %113
  %116 = or i1 %114, %115
  %117 = or i1 %112, %113
  br i1 %116, label %118, label %210

; <label>:118:                                    ; preds = %103, %210
  %119 = load i32, i32* @x.269
  %120 = load i32, i32* @y.270
  %121 = add i32 %119, -205303475
  %122 = sub i32 %121, 1
  %123 = sub i32 %122, -205303475
  %124 = sub i32 %119, 1
  %125 = mul i32 %119, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %120, 10
  %129 = xor i1 %127, true
  %130 = xor i1 %128, true
  %131 = xor i1 true, true
  %132 = and i1 %129, true
  %133 = and i1 %127, %131
  %134 = and i1 %130, true
  %135 = and i1 %128, %131
  %136 = or i1 %132, %133
  %137 = or i1 %134, %135
  %138 = xor i1 %136, %137
  %139 = or i1 %129, %130
  %140 = xor i1 %139, true
  %141 = or i1 true, %131
  %142 = and i1 %140, %141
  %143 = or i1 %138, %142
  %144 = or i1 %127, %128
  br i1 %143, label %145, label %210

; <label>:145:                                    ; preds = %118
  br label %200
                                                  ; No predecessors!
  %147 = load i32, i32* @x.269
  %148 = load i32, i32* @y.270
  %149 = sub i32 %147, 202128650
  %150 = sub i32 %149, 1
  %151 = add i32 %150, 202128650
  %152 = sub i32 %147, 1
  %153 = mul i32 %147, %151
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %148, 10
  %157 = xor i1 %155, true
  %158 = xor i1 %156, true
  %159 = xor i1 false, true
  %160 = and i1 %157, false
  %161 = and i1 %155, %159
  %162 = and i1 %158, false
  %163 = and i1 %156, %159
  %164 = or i1 %160, %161
  %165 = or i1 %162, %163
  %166 = xor i1 %164, %165
  %167 = or i1 %157, %158
  %168 = xor i1 %167, true
  %169 = or i1 false, %159
  %170 = and i1 %168, %169
  %171 = or i1 %166, %170
  %172 = or i1 %155, %156
  br i1 %171, label %173, label %211

; <label>:173:                                    ; preds = %146, %211
  call void @llvm.trap()
  %174 = load i32, i32* @x.269
  %175 = load i32, i32* @y.270
  %176 = sub i32 0, 1
  %177 = add i32 %174, %176
  %178 = sub i32 %174, 1
  %179 = mul i32 %174, %177
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %175, 10
  %183 = xor i1 %181, true
  %184 = xor i1 %182, true
  %185 = xor i1 true, true
  %186 = and i1 %183, true
  %187 = and i1 %181, %185
  %188 = and i1 %184, true
  %189 = and i1 %182, %185
  %190 = or i1 %186, %187
  %191 = or i1 %188, %189
  %192 = xor i1 %190, %191
  %193 = or i1 %183, %184
  %194 = xor i1 %193, true
  %195 = or i1 true, %185
  %196 = and i1 %194, %195
  %197 = or i1 %192, %196
  %198 = or i1 %181, %182
  br i1 %197, label %199, label %211

; <label>:199:                                    ; preds = %173
  unreachable

; <label>:200:                                    ; preds = %145
  %201 = load i8*, i8** %12, align 8
  %202 = load i32, i32* %13, align 4
  %203 = insertvalue { i8*, i32 } undef, i8* %201, 0
  %204 = insertvalue { i8*, i32 } %203, i32 %202, 1
  resume { i8*, i32 } %204

; <label>:205:                                    ; preds = %99
  %206 = landingpad { i8*, i32 }
          catch i8* null
  %207 = extractvalue { i8*, i32 } %206, 0
  call void @__clang_call_terminate(i8* %207) #11
  unreachable

; <label>:208:                                    ; preds = %98
  unreachable

; <label>:209:                                    ; preds = %71, %44
  br label %71

; <label>:210:                                    ; preds = %118, %103
  br label %118

; <label>:211:                                    ; preds = %173, %146
  call void @llvm.trap()
  br label %173
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE5beginEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %8, align 8
  store %"class.std::unordered_map"* %9, %"class.std::unordered_map"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEC2ERKSC_(%"class.__gnu_cxx::__normal_iterator.18"* %2, %"class.std::unordered_map"** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %2, i32 0, i32 0
  %11 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %10, align 8
  ret %"class.std::unordered_map"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE3endEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %8, align 8
  store %"class.std::unordered_map"* %9, %"class.std::unordered_map"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEC2ERKSC_(%"class.__gnu_cxx::__normal_iterator.18"* %2, %"class.std::unordered_map"** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %2, i32 0, i32 0
  %11 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %10, align 8
  ret %"class.std::unordered_map"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEESB_EvT_SH_RSaIT0_E(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.275
  %7 = load i32, i32* @y.276
  %8 = add i32 %6, -745612571
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -745612571
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -2103228690, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %87
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -2103228690, label %20
    i32 868453017, label %40
    i32 841385154, label %70
    i32 1571227865, label %71
  ]

; <label>:19:                                     ; preds = %17
  br label %87

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 868453017, i32 1571227865
  store i32 %39, i32* %16
  br label %87

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %43 = alloca %"class.std::allocator.2"*, align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %41, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %46, align 8
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %42, i32 0, i32 0
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %47, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %43, align 8
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %44 to i8*
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 8, i1 false)
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %45 to i8*
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %44, i32 0, i32 0
  %53 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %52, align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %45, i32 0, i32 0
  %55 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %54, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEEvT_SH_(%"class.std::unordered_map"* %53, %"class.std::unordered_map"* %55)
  %56 = load i32, i32* @x.275
  %57 = load i32, i32* @y.276
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 841385154, i32 1571227865
  store i32 %69, i32* %16
  br label %87

; <label>:70:                                     ; preds = %17
  ret void

; <label>:71:                                     ; preds = %17
  %72 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %73 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %74 = alloca %"class.std::allocator.2"*, align 8
  %75 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %76 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %77 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %72, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %77, align 8
  %78 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %73, i32 0, i32 0
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %78, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %74, align 8
  %79 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %75 to i8*
  %80 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %79, i8* %80, i64 8, i32 8, i1 false)
  %81 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %76 to i8*
  %82 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %81, i8* %82, i64 8, i32 8, i1 false)
  %83 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %75, i32 0, i32 0
  %84 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %83, align 8
  %85 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %76, i32 0, i32 0
  %86 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %85, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEEvT_SH_(%"class.std::unordered_map"* %84, %"class.std::unordered_map"* %86)
  store i32 868453017, i32* %16
  br label %87

; <label>:87:                                     ; preds = %71, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEENS1_IPSB_SG_EEET0_T_SL_SK_(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat {
  %4 = alloca %"class.std::unordered_map"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.277
  %8 = load i32, i32* @y.278
  %9 = add i32 %7, -301939351
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -301939351
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 66315295, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %144
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 66315295, label %21
    i32 -1262002793, label %41
    i32 -1993275014, label %105
    i32 508790724, label %107
  ]

; <label>:20:                                     ; preds = %18
  br label %144

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1262002793, i32 508790724
  store i32 %40, i32* %17
  br label %144

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %48 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %49 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %50 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %43, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %51, align 8
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %44, i32 0, i32 0
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %52, align 8
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %45, i32 0, i32 0
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %53, align 8
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %47 to i8*
  %55 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 8, i32 8, i1 false)
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %47, i32 0, i32 0
  %57 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %56, align 8
  %58 = call %"class.std::unordered_map"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEENSt11_Miter_baseIT_E13iterator_typeESJ_(%"class.std::unordered_map"* %57)
  %59 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %46, i32 0, i32 0
  store %"class.std::unordered_map"* %58, %"class.std::unordered_map"** %59, align 8
  %60 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %49 to i8*
  %61 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %60, i8* %61, i64 8, i32 8, i1 false)
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %49, i32 0, i32 0
  %63 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %62, align 8
  %64 = call %"class.std::unordered_map"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEENSt11_Miter_baseIT_E13iterator_typeESJ_(%"class.std::unordered_map"* %63)
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %48, i32 0, i32 0
  store %"class.std::unordered_map"* %64, %"class.std::unordered_map"** %65, align 8
  %66 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %50 to i8*
  %67 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %66, i8* %67, i64 8, i32 8, i1 false)
  %68 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %46, i32 0, i32 0
  %69 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %68, align 8
  %70 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %48, i32 0, i32 0
  %71 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %70, align 8
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %50, i32 0, i32 0
  %73 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %72, align 8
  %74 = call %"class.std::unordered_map"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEENS1_IPSB_SG_EEET1_T0_SL_SK_(%"class.std::unordered_map"* %69, %"class.std::unordered_map"* %71, %"class.std::unordered_map"* %73)
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %42, i32 0, i32 0
  store %"class.std::unordered_map"* %74, %"class.std::unordered_map"** %75, align 8
  %76 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %42, i32 0, i32 0
  %77 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %76, align 8
  store %"class.std::unordered_map"* %77, %"class.std::unordered_map"** %4
  %78 = load i32, i32* @x.277
  %79 = load i32, i32* @y.278
  %80 = sub i32 %78, 45318979
  %81 = sub i32 %80, 1
  %82 = add i32 %81, 45318979
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 true, true
  %91 = and i1 %88, true
  %92 = and i1 %86, %90
  %93 = and i1 %89, true
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 true, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  %104 = select i1 %102, i32 -1993275014, i32 508790724
  store i32 %104, i32* %17
  br label %144

; <label>:105:                                    ; preds = %18
  %106 = load volatile %"class.std::unordered_map"*, %"class.std::unordered_map"** %4
  ret %"class.std::unordered_map"* %106

; <label>:107:                                    ; preds = %18
  %108 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %109 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %110 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %111 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %112 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %113 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %114 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %115 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %116 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %117 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %109, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %117, align 8
  %118 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %110, i32 0, i32 0
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %118, align 8
  %119 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %111, i32 0, i32 0
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %119, align 8
  %120 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %113 to i8*
  %121 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %120, i8* %121, i64 8, i32 8, i1 false)
  %122 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %113, i32 0, i32 0
  %123 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %122, align 8
  %124 = call %"class.std::unordered_map"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEENSt11_Miter_baseIT_E13iterator_typeESJ_(%"class.std::unordered_map"* %123)
  %125 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %112, i32 0, i32 0
  store %"class.std::unordered_map"* %124, %"class.std::unordered_map"** %125, align 8
  %126 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %115 to i8*
  %127 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %110 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %126, i8* %127, i64 8, i32 8, i1 false)
  %128 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %115, i32 0, i32 0
  %129 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %128, align 8
  %130 = call %"class.std::unordered_map"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEENSt11_Miter_baseIT_E13iterator_typeESJ_(%"class.std::unordered_map"* %129)
  %131 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %114, i32 0, i32 0
  store %"class.std::unordered_map"* %130, %"class.std::unordered_map"** %131, align 8
  %132 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %116 to i8*
  %133 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %111 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %132, i8* %133, i64 8, i32 8, i1 false)
  %134 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %112, i32 0, i32 0
  %135 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %134, align 8
  %136 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %114, i32 0, i32 0
  %137 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %136, align 8
  %138 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %116, i32 0, i32 0
  %139 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %138, align 8
  %140 = call %"class.std::unordered_map"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEENS1_IPSB_SG_EEET1_T0_SL_SK_(%"class.std::unordered_map"* %135, %"class.std::unordered_map"* %137, %"class.std::unordered_map"* %139)
  %141 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %108, i32 0, i32 0
  store %"class.std::unordered_map"* %140, %"class.std::unordered_map"** %141, align 8
  %142 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %108, i32 0, i32 0
  %143 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %142, align 8
  store i32 -1262002793, i32* %17
  br label %144

; <label>:144:                                    ; preds = %107, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE5beginEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %4 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %5 = bitcast %"class.std::vector.0"* %4 to %"struct.std::_Vector_base.1"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEC2ERKSB_(%"class.__gnu_cxx::__normal_iterator.19"* %2, %"class.std::unordered_map"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %2, i32 0, i32 0
  %9 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %8, align 8
  ret %"class.std::unordered_map"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE3endEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %4 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %5 = bitcast %"class.std::vector.0"* %4 to %"struct.std::_Vector_base.1"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEC2ERKSB_(%"class.__gnu_cxx::__normal_iterator.19"* %2, %"class.std::unordered_map"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %2, i32 0, i32 0
  %9 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %8, align 8
  ret %"class.std::unordered_map"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt4copyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_ET0_T_SC_SB_(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat {
  %4 = alloca %"class.std::unordered_map"*, align 8
  %5 = alloca %"class.std::unordered_map"*, align 8
  %6 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %4, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %5, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %6, align 8
  %7 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %8 = call %"class.std::unordered_map"* @_ZSt12__miter_baseIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEENSt11_Miter_baseIT_E13iterator_typeESC_(%"class.std::unordered_map"* %7)
  %9 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %5, align 8
  %10 = call %"class.std::unordered_map"* @_ZSt12__miter_baseIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEENSt11_Miter_baseIT_E13iterator_typeESC_(%"class.std::unordered_map"* %9)
  %11 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  %12 = call %"class.std::unordered_map"* @_ZSt14__copy_move_a2ILb0EPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_ET1_T0_SC_SB_(%"class.std::unordered_map"* %8, %"class.std::unordered_map"* %10, %"class.std::unordered_map"* %11)
  ret %"class.std::unordered_map"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt22__uninitialized_copy_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_S9_ET0_T_SC_SB_RSaIT1_E(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::unordered_map"*, align 8
  %6 = alloca %"class.std::unordered_map"*, align 8
  %7 = alloca %"class.std::unordered_map"*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %5, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %6, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %9 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %5, align 8
  %10 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  %11 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  %12 = call %"class.std::unordered_map"* @_ZSt18uninitialized_copyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_ET0_T_SC_SB_(%"class.std::unordered_map"* %9, %"class.std::unordered_map"* %10, %"class.std::unordered_map"* %11)
  ret %"class.std::unordered_map"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE11_M_allocateEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base.1"*
  %5 = alloca %"struct.std::_Vector_base.1"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5, align 8
  store %"struct.std::_Vector_base.1"* %7, %"struct.std::_Vector_base.1"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 380745450, i32* %9
  %10 = alloca %"class.std::unordered_map"*
  br label %11

; <label>:11:                                     ; preds = %2, %72
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 380745450, label %14
    i32 -464091308, label %18
    i32 -485173838, label %24
    i32 2072231253, label %40
    i32 -882076495, label %68
    i32 1948846931, label %69
    i32 -1184749870, label %71
  ]

; <label>:13:                                     ; preds = %11
  br label %72

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 -464091308, i32 -485173838
  store i32 %17, i32* %9
  br label %72

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %20 to %"class.std::allocator.2"*
  %22 = load i64, i64* %6, align 8
  %23 = call %"class.std::unordered_map"* @_ZNSt16allocator_traitsISaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEE8allocateERSA_m(%"class.std::allocator.2"* dereferenceable(1) %21, i64 %22)
  store i32 1948846931, i32* %9
  store %"class.std::unordered_map"* %23, %"class.std::unordered_map"** %10
  br label %72

; <label>:24:                                     ; preds = %11
  %25 = load i32, i32* @x.287
  %26 = load i32, i32* @y.288
  %27 = sub i32 %25, 613780339
  %28 = sub i32 %27, 1
  %29 = add i32 %28, 613780339
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  %39 = select i1 %37, i32 2072231253, i32 -1184749870
  store i32 %39, i32* %9
  br label %72

; <label>:40:                                     ; preds = %11
  %41 = load i32, i32* @x.287
  %42 = load i32, i32* @y.288
  %43 = add i32 %41, 1519489651
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 1519489651
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -882076495, i32 -1184749870
  store i32 %67, i32* %9
  br label %72

; <label>:68:                                     ; preds = %11
  store i32 1948846931, i32* %9
  store %"class.std::unordered_map"* null, %"class.std::unordered_map"** %10
  br label %72

; <label>:69:                                     ; preds = %11
  %70 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %10
  ret %"class.std::unordered_map"* %70

; <label>:71:                                     ; preds = %11
  store i32 2072231253, i32* %9
  br label %72

; <label>:72:                                     ; preds = %71, %68, %40, %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEPSB_SB_ET0_T_SK_SJ_RSaIT1_E(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %7 = alloca %"class.std::unordered_map"*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %5, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %6, i32 0, i32 0
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %12, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %9 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %10 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %9, i32 0, i32 0
  %19 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %18, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %10, i32 0, i32 0
  %21 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %20, align 8
  %22 = call %"class.std::unordered_map"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEPSB_ET0_T_SK_SJ_(%"class.std::unordered_map"* %19, %"class.std::unordered_map"* %21, %"class.std::unordered_map"* %17)
  ret %"class.std::unordered_map"* %22
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNSt16allocator_traitsISaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEE8allocateERSA_m(%"class.std::allocator.2"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::unordered_map"* @_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"* %6, i64 %7, i8* null)
  ret %"class.std::unordered_map"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -137739573, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -137739573, label %16
    i32 -808930410, label %21
    i32 1075733414, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -808930410, i32 1075733414
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 56
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"class.std::unordered_map"*
  ret %"class.std::unordered_map"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret i64 329406144173384850
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEPSB_ET0_T_SK_SJ_(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %6 = alloca %"class.std::unordered_map"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %4, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %5, i32 0, i32 0
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %11, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %8 to i8*
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %9 to i8*
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %8, i32 0, i32 0
  %18 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %9, i32 0, i32 0
  %20 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %19, align 8
  %21 = call %"class.std::unordered_map"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISD_SaISD_EEEEPSD_EET0_T_SM_SL_(%"class.std::unordered_map"* %18, %"class.std::unordered_map"* %20, %"class.std::unordered_map"* %16)
  ret %"class.std::unordered_map"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISD_SaISD_EEEEPSD_EET0_T_SM_SL_(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %6 = alloca %"class.std::unordered_map"*, align 8
  %7 = alloca %"class.std::unordered_map"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %4, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %5, i32 0, i32 0
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %11, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %6, align 8
  %12 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  store %"class.std::unordered_map"* %12, %"class.std::unordered_map"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %50, %3
  %14 = call zeroext i1 @_ZN9__gnu_cxxneIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEEbRKNS_17__normal_iteratorIT_T0_EESL_(%"class.__gnu_cxx::__normal_iterator.18"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.18"* dereferenceable(8) %5) #3
  br i1 %14, label %15, label %106

; <label>:15:                                     ; preds = %13
  %16 = load i32, i32* @x.299
  %17 = load i32, i32* @y.300
  %18 = add i32 %16, -1350180706
  %19 = sub i32 %18, 1
  %20 = sub i32 %19, -1350180706
  %21 = sub i32 %16, 1
  %22 = mul i32 %16, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %17, 10
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  br i1 %28, label %30, label %259

; <label>:30:                                     ; preds = %15, %259
  %31 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  %32 = call %"class.std::unordered_map"* @_ZSt11__addressofISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEPT_RSA_(%"class.std::unordered_map"* dereferenceable(56) %31) #3
  %33 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNK9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.18"* %4) #3
  %34 = load i32, i32* @x.299
  %35 = load i32, i32* @y.300
  %36 = sub i32 %34, 436263055
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 436263055
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  br i1 %46, label %48, label %259

; <label>:48:                                     ; preds = %30
  invoke void @_ZSt10_ConstructISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEJRKS9_EEvPT_DpOT0_(%"class.std::unordered_map"* %32, %"class.std::unordered_map"* dereferenceable(56) %33)
          to label %49 unwind label %54

; <label>:49:                                     ; preds = %48
  br label %50

; <label>:50:                                     ; preds = %49
  %51 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.18"* @_ZN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEppEv(%"class.__gnu_cxx::__normal_iterator.18"* %4) #3
  %52 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  %53 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %52, i32 1
  store %"class.std::unordered_map"* %53, %"class.std::unordered_map"** %7, align 8
  br label %13

; <label>:54:                                     ; preds = %48
  %55 = landingpad { i8*, i32 }
          catch i8* null
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %8, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %9, align 4
  br label %58

; <label>:58:                                     ; preds = %54
  %59 = load i8*, i8** %8, align 8
  %60 = call i8* @__cxa_begin_catch(i8* %59) #3
  %61 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  %62 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvT_SB_(%"class.std::unordered_map"* %61, %"class.std::unordered_map"* %62)
          to label %63 unwind label %108

; <label>:63:                                     ; preds = %58
  %64 = load i32, i32* @x.299
  %65 = load i32, i32* @y.300
  %66 = add i32 %64, 419309114
  %67 = sub i32 %66, 1
  %68 = sub i32 %67, 419309114
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = and i1 %72, %73
  %75 = xor i1 %72, %73
  %76 = or i1 %74, %75
  %77 = or i1 %72, %73
  br i1 %76, label %78, label %263

; <label>:78:                                     ; preds = %63, %263
  %79 = load i32, i32* @x.299
  %80 = load i32, i32* @y.300
  %81 = sub i32 %79, 1764776304
  %82 = sub i32 %81, 1
  %83 = add i32 %82, 1764776304
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = xor i1 %87, true
  %90 = xor i1 %88, true
  %91 = xor i1 false, true
  %92 = and i1 %89, false
  %93 = and i1 %87, %91
  %94 = and i1 %90, false
  %95 = and i1 %88, %91
  %96 = or i1 %92, %93
  %97 = or i1 %94, %95
  %98 = xor i1 %96, %97
  %99 = or i1 %89, %90
  %100 = xor i1 %99, true
  %101 = or i1 false, %91
  %102 = and i1 %100, %101
  %103 = or i1 %98, %102
  %104 = or i1 %87, %88
  br i1 %103, label %105, label %263

; <label>:105:                                    ; preds = %78
  invoke void @__cxa_rethrow() #12
          to label %217 unwind label %108

; <label>:106:                                    ; preds = %13
  %107 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  ret %"class.std::unordered_map"* %107

; <label>:108:                                    ; preds = %105, %58
  %109 = load i32, i32* @x.299
  %110 = load i32, i32* @y.300
  %111 = add i32 %109, 294720356
  %112 = sub i32 %111, 1
  %113 = sub i32 %112, 294720356
  %114 = sub i32 %109, 1
  %115 = mul i32 %109, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %110, 10
  %119 = xor i1 %117, true
  %120 = xor i1 %118, true
  %121 = xor i1 true, true
  %122 = and i1 %119, true
  %123 = and i1 %117, %121
  %124 = and i1 %120, true
  %125 = and i1 %118, %121
  %126 = or i1 %122, %123
  %127 = or i1 %124, %125
  %128 = xor i1 %126, %127
  %129 = or i1 %119, %120
  %130 = xor i1 %129, true
  %131 = or i1 true, %121
  %132 = and i1 %130, %131
  %133 = or i1 %128, %132
  %134 = or i1 %117, %118
  br i1 %133, label %135, label %264

; <label>:135:                                    ; preds = %108, %264
  %136 = landingpad { i8*, i32 }
          cleanup
  %137 = extractvalue { i8*, i32 } %136, 0
  store i8* %137, i8** %8, align 8
  %138 = extractvalue { i8*, i32 } %136, 1
  store i32 %138, i32* %9, align 4
  %139 = load i32, i32* @x.299
  %140 = load i32, i32* @y.300
  %141 = add i32 %139, -695680503
  %142 = sub i32 %141, 1
  %143 = sub i32 %142, -695680503
  %144 = sub i32 %139, 1
  %145 = mul i32 %139, %143
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %140, 10
  %149 = xor i1 %147, true
  %150 = xor i1 %148, true
  %151 = xor i1 true, true
  %152 = and i1 %149, true
  %153 = and i1 %147, %151
  %154 = and i1 %150, true
  %155 = and i1 %148, %151
  %156 = or i1 %152, %153
  %157 = or i1 %154, %155
  %158 = xor i1 %156, %157
  %159 = or i1 %149, %150
  %160 = xor i1 %159, true
  %161 = or i1 true, %151
  %162 = and i1 %160, %161
  %163 = or i1 %158, %162
  %164 = or i1 %147, %148
  br i1 %163, label %165, label %264

; <label>:165:                                    ; preds = %135
  invoke void @__cxa_end_catch()
          to label %166 unwind label %173

; <label>:166:                                    ; preds = %165
  br label %168
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:168:                                    ; preds = %166
  %169 = load i8*, i8** %8, align 8
  %170 = load i32, i32* %9, align 4
  %171 = insertvalue { i8*, i32 } undef, i8* %169, 0
  %172 = insertvalue { i8*, i32 } %171, i32 %170, 1
  resume { i8*, i32 } %172

; <label>:173:                                    ; preds = %165
  %174 = load i32, i32* @x.299
  %175 = load i32, i32* @y.300
  %176 = sub i32 0, 1
  %177 = add i32 %174, %176
  %178 = sub i32 %174, 1
  %179 = mul i32 %174, %177
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %175, 10
  %183 = and i1 %181, %182
  %184 = xor i1 %181, %182
  %185 = or i1 %183, %184
  %186 = or i1 %181, %182
  br i1 %185, label %187, label %268

; <label>:187:                                    ; preds = %173, %268
  %188 = landingpad { i8*, i32 }
          catch i8* null
  %189 = extractvalue { i8*, i32 } %188, 0
  call void @__clang_call_terminate(i8* %189) #11
  %190 = load i32, i32* @x.299
  %191 = load i32, i32* @y.300
  %192 = sub i32 %190, -445618282
  %193 = sub i32 %192, 1
  %194 = add i32 %193, -445618282
  %195 = sub i32 %190, 1
  %196 = mul i32 %190, %194
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %191, 10
  %200 = xor i1 %198, true
  %201 = xor i1 %199, true
  %202 = xor i1 false, true
  %203 = and i1 %200, false
  %204 = and i1 %198, %202
  %205 = and i1 %201, false
  %206 = and i1 %199, %202
  %207 = or i1 %203, %204
  %208 = or i1 %205, %206
  %209 = xor i1 %207, %208
  %210 = or i1 %200, %201
  %211 = xor i1 %210, true
  %212 = or i1 false, %202
  %213 = and i1 %211, %212
  %214 = or i1 %209, %213
  %215 = or i1 %198, %199
  br i1 %214, label %216, label %268

; <label>:216:                                    ; preds = %187
  unreachable

; <label>:217:                                    ; preds = %105
  %218 = load i32, i32* @x.299
  %219 = load i32, i32* @y.300
  %220 = sub i32 0, 1
  %221 = add i32 %218, %220
  %222 = sub i32 %218, 1
  %223 = mul i32 %218, %221
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %219, 10
  %227 = xor i1 %225, true
  %228 = xor i1 %226, true
  %229 = xor i1 true, true
  %230 = and i1 %227, true
  %231 = and i1 %225, %229
  %232 = and i1 %228, true
  %233 = and i1 %226, %229
  %234 = or i1 %230, %231
  %235 = or i1 %232, %233
  %236 = xor i1 %234, %235
  %237 = or i1 %227, %228
  %238 = xor i1 %237, true
  %239 = or i1 true, %229
  %240 = and i1 %238, %239
  %241 = or i1 %236, %240
  %242 = or i1 %225, %226
  br i1 %241, label %243, label %271

; <label>:243:                                    ; preds = %217, %271
  %244 = load i32, i32* @x.299
  %245 = load i32, i32* @y.300
  %246 = sub i32 %244, -1172526585
  %247 = sub i32 %246, 1
  %248 = add i32 %247, -1172526585
  %249 = sub i32 %244, 1
  %250 = mul i32 %244, %248
  %251 = urem i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %245, 10
  %254 = and i1 %252, %253
  %255 = xor i1 %252, %253
  %256 = or i1 %254, %255
  %257 = or i1 %252, %253
  br i1 %256, label %258, label %271

; <label>:258:                                    ; preds = %243
  unreachable

; <label>:259:                                    ; preds = %30, %15
  %260 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  %261 = call %"class.std::unordered_map"* @_ZSt11__addressofISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEPT_RSA_(%"class.std::unordered_map"* dereferenceable(56) %260) #3
  %262 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNK9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.18"* %4) #3
  br label %30

; <label>:263:                                    ; preds = %78, %63
  br label %78

; <label>:264:                                    ; preds = %135, %108
  %265 = landingpad { i8*, i32 }
          cleanup
  %266 = extractvalue { i8*, i32 } %265, 0
  store i8* %266, i8** %8, align 8
  %267 = extractvalue { i8*, i32 } %265, 1
  store i32 %267, i32* %9, align 4
  br label %135

; <label>:268:                                    ; preds = %187, %173
  %269 = landingpad { i8*, i32 }
          catch i8* null
  %270 = extractvalue { i8*, i32 } %269, 0
  call void @__clang_call_terminate(i8* %270) #11
  br label %187

; <label>:271:                                    ; preds = %243, %217
  br label %243
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEEbRKNS_17__normal_iteratorIT_T0_EESL_(%"class.__gnu_cxx::__normal_iterator.18"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.18"* dereferenceable(8)) #4 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.18"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.18"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.18"* %0, %"class.__gnu_cxx::__normal_iterator.18"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.18"* %1, %"class.__gnu_cxx::__normal_iterator.18"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.18"*, %"class.__gnu_cxx::__normal_iterator.18"** %3, align 8
  %6 = call dereferenceable(8) %"class.std::unordered_map"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.18"* %5) #3
  %7 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.18"*, %"class.__gnu_cxx::__normal_iterator.18"** %4, align 8
  %9 = call dereferenceable(8) %"class.std::unordered_map"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.18"* %8) #3
  %10 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %9, align 8
  %11 = icmp ne %"class.std::unordered_map"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEJRKS9_EEvPT_DpOT0_(%"class.std::unordered_map"*, %"class.std::unordered_map"* dereferenceable(56)) #0 comdat {
  %3 = alloca %"class.std::unordered_map"*, align 8
  %4 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %3, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %4, align 8
  %5 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %3, align 8
  %6 = bitcast %"class.std::unordered_map"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::unordered_map"*
  %8 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %9 = call dereferenceable(56) %"class.std::unordered_map"* @_ZSt7forwardIRKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEOT_RNSt16remove_referenceISC_E4typeE(%"class.std::unordered_map"* dereferenceable(56) %8) #3
  call void @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEC2ERKS8_(%"class.std::unordered_map"* %7, %"class.std::unordered_map"* dereferenceable(56) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(56) %"class.std::unordered_map"* @_ZNK9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.18"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.18"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.18"* %0, %"class.__gnu_cxx::__normal_iterator.18"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.18"*, %"class.__gnu_cxx::__normal_iterator.18"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %3, i32 0, i32 0
  %5 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  ret %"class.std::unordered_map"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.18"* @_ZN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEppEv(%"class.__gnu_cxx::__normal_iterator.18"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.18"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.18"* %0, %"class.__gnu_cxx::__normal_iterator.18"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.18"*, %"class.__gnu_cxx::__normal_iterator.18"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %3, i32 0, i32 0
  %5 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %6 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %5, i32 1
  store %"class.std::unordered_map"* %6, %"class.std::unordered_map"** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator.18"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::unordered_map"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.18"*) #4 comdat align 2 {
  %2 = alloca %"class.std::unordered_map"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.309
  %6 = load i32, i32* @y.310
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -948530107, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %63
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -948530107, label %18
    i32 1087131781, label %26
    i32 1414273448, label %57
    i32 888745909, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %63

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1087131781, i32 888745909
  store i32 %25, i32* %14
  br label %63

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.18"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.18"* %0, %"class.__gnu_cxx::__normal_iterator.18"** %27, align 8
  %28 = load %"class.__gnu_cxx::__normal_iterator.18"*, %"class.__gnu_cxx::__normal_iterator.18"** %27, align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %28, i32 0, i32 0
  store %"class.std::unordered_map"** %29, %"class.std::unordered_map"*** %2
  %30 = load i32, i32* @x.309
  %31 = load i32, i32* @y.310
  %32 = sub i32 %30, 1289045090
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 1289045090
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 1414273448, i32 888745909
  store i32 %56, i32* %14
  br label %63

; <label>:57:                                     ; preds = %15
  %58 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %2
  ret %"class.std::unordered_map"** %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"class.__gnu_cxx::__normal_iterator.18"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.18"* %0, %"class.__gnu_cxx::__normal_iterator.18"** %60, align 8
  %61 = load %"class.__gnu_cxx::__normal_iterator.18"*, %"class.__gnu_cxx::__normal_iterator.18"** %60, align 8
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %61, i32 0, i32 0
  store i32 1087131781, i32* %14
  br label %63

; <label>:63:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(56) %"class.std::unordered_map"* @_ZSt7forwardIRKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEOT_RNSt16remove_referenceISC_E4typeE(%"class.std::unordered_map"* dereferenceable(56)) #4 comdat {
  %2 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %2, align 8
  %3 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %2, align 8
  ret %"class.std::unordered_map"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEC2ERKS8_(%"class.std::unordered_map"*, %"class.std::unordered_map"* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.313
  %6 = load i32, i32* @y.314
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 2110477753, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %68
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 2110477753, label %18
    i32 -1913325874, label %38
    i32 -1581180001, label %60
    i32 -1915599983, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %68

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1913325874, i32 -1915599983
  store i32 %37, i32* %14
  br label %68

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::unordered_map"*, align 8
  %40 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %39, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %40, align 8
  %41 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %39, align 8
  %42 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %41, i32 0, i32 0
  %43 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %40, align 8
  %44 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %43, i32 0, i32 0
  call void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEC2ERKSF_(%"class.std::_Hashtable"* %42, %"class.std::_Hashtable"* dereferenceable(56) %44)
  %45 = load i32, i32* @x.313
  %46 = load i32, i32* @y.314
  %47 = add i32 %45, -1790307611
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -1790307611
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -1581180001, i32 -1915599983
  store i32 %59, i32* %14
  br label %68

; <label>:60:                                     ; preds = %15
  ret void

; <label>:61:                                     ; preds = %15
  %62 = alloca %"class.std::unordered_map"*, align 8
  %63 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %62, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %63, align 8
  %64 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %62, align 8
  %65 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %64, i32 0, i32 0
  %66 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %63, align 8
  %67 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %66, i32 0, i32 0
  call void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEC2ERKSF_(%"class.std::_Hashtable"* %65, %"class.std::_Hashtable"* dereferenceable(56) %67)
  store i32 -1913325874, i32* %14
  br label %68

; <label>:68:                                     ; preds = %61, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEC2ERKSF_(%"class.std::_Hashtable"*, %"class.std::_Hashtable"* dereferenceable(56)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Hashtable"*, align 8
  %4 = alloca %"class.std::_Hashtable"*, align 8
  %5 = alloca %"class.std::allocator.9", align 1
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %class.anon, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %3, align 8
  store %"class.std::_Hashtable"* %1, %"class.std::_Hashtable"** %4, align 8
  %9 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %3, align 8
  %10 = bitcast %"class.std::_Hashtable"* %9 to %"struct.std::__detail::_Hashtable_base"*
  %11 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4, align 8
  %12 = bitcast %"class.std::_Hashtable"* %11 to %"struct.std::__detail::_Hashtable_base"*
  %13 = bitcast %"class.std::_Hashtable"* %9 to %"struct.std::__detail::_Map_base"*
  %14 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4, align 8
  %15 = bitcast %"class.std::_Hashtable"* %14 to %"struct.std::__detail::_Map_base"*
  %16 = bitcast %"class.std::_Hashtable"* %9 to %"struct.std::__detail::_Insert"*
  %17 = bitcast %"class.std::_Hashtable"* %9 to %"struct.std::__detail::_Rehash_base"*
  %18 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4, align 8
  %19 = bitcast %"class.std::_Hashtable"* %18 to %"struct.std::__detail::_Rehash_base"*
  %20 = bitcast %"class.std::_Hashtable"* %9 to %"struct.std::__detail::_Equality"*
  %21 = bitcast %"class.std::_Hashtable"* %9 to %"struct.std::__detail::_Hashtable_alloc"*
  %22 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4, align 8
  %23 = bitcast %"class.std::_Hashtable"* %22 to %"struct.std::__detail::_Hashtable_alloc"*
  %24 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNKSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %23)
  call void @_ZN9__gnu_cxx14__alloc_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE17_S_select_on_copyERKS7_(%"class.std::allocator.9"* sret %5, %"class.std::allocator.9"* dereferenceable(1) %24)
  invoke void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEEC2IS6_EEOT_(%"struct.std::__detail::_Hashtable_alloc"* %21, %"class.std::allocator.9"* dereferenceable(1) %5)
          to label %25 unwind label %140

; <label>:25:                                     ; preds = %2
  %26 = load i32, i32* @x.315
  %27 = load i32, i32* @y.316
  %28 = sub i32 %26, 723886500
  %29 = sub i32 %28, 1
  %30 = add i32 %29, 723886500
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 true, true
  %39 = and i1 %36, true
  %40 = and i1 %34, %38
  %41 = and i1 %37, true
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 true, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  br i1 %50, label %52, label %250

; <label>:52:                                     ; preds = %25, %250
  call void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEED2Ev(%"class.std::allocator.9"* %5) #3
  %53 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %9, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"** null, %"struct.std::__detail::_Hash_node_base"*** %53, align 8
  %54 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %9, i32 0, i32 1
  %55 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4, align 8
  %56 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %55, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  store i64 %57, i64* %54, align 8
  %58 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %9, i32 0, i32 2
  call void @_ZNSt8__detail15_Hash_node_baseC2Ev(%"struct.std::__detail::_Hash_node_base"* %58) #3
  %59 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %9, i32 0, i32 3
  %60 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4, align 8
  %61 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %60, i32 0, i32 3
  %62 = load i64, i64* %61, align 8
  store i64 %62, i64* %59, align 8
  %63 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %9, i32 0, i32 4
  %64 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4, align 8
  %65 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %64, i32 0, i32 4
  %66 = bitcast %"struct.std::__detail::_Prime_rehash_policy"* %63 to i8*
  %67 = bitcast %"struct.std::__detail::_Prime_rehash_policy"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %66, i8* %67, i64 16, i32 8, i1 false)
  %68 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %9, i32 0, i32 5
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %68, align 8
  %69 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4, align 8
  %70 = getelementptr inbounds %class.anon, %class.anon* %8, i32 0, i32 0
  store %"class.std::_Hashtable"* %9, %"class.std::_Hashtable"** %70, align 8
  %71 = load i32, i32* @x.315
  %72 = load i32, i32* @y.316
  %73 = add i32 %71, 1472048931
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, 1472048931
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 false, true
  %84 = and i1 %81, false
  %85 = and i1 %79, %83
  %86 = and i1 %82, false
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 false, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  br i1 %95, label %97, label %250

; <label>:97:                                     ; preds = %52
  invoke void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_assignIZNSF_C1ERKSF_EUlPKNS4_10_Hash_nodeIS2_Lb0EEEE_EEvSI_RKT_(%"class.std::_Hashtable"* %9, %"class.std::_Hashtable"* dereferenceable(56) %69, %class.anon* dereferenceable(8) %8)
          to label %98 unwind label %186

; <label>:98:                                     ; preds = %97
  %99 = load i32, i32* @x.315
  %100 = load i32, i32* @y.316
  %101 = sub i32 0, 1
  %102 = add i32 %99, %101
  %103 = sub i32 %99, 1
  %104 = mul i32 %99, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %100, 10
  %108 = and i1 %106, %107
  %109 = xor i1 %106, %107
  %110 = or i1 %108, %109
  %111 = or i1 %106, %107
  br i1 %110, label %112, label %269

; <label>:112:                                    ; preds = %98, %269
  %113 = load i32, i32* @x.315
  %114 = load i32, i32* @y.316
  %115 = sub i32 %113, 296779046
  %116 = sub i32 %115, 1
  %117 = add i32 %116, 296779046
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = xor i1 %121, true
  %124 = xor i1 %122, true
  %125 = xor i1 true, true
  %126 = and i1 %123, true
  %127 = and i1 %121, %125
  %128 = and i1 %124, true
  %129 = and i1 %122, %125
  %130 = or i1 %126, %127
  %131 = or i1 %128, %129
  %132 = xor i1 %130, %131
  %133 = or i1 %123, %124
  %134 = xor i1 %133, true
  %135 = or i1 true, %125
  %136 = and i1 %134, %135
  %137 = or i1 %132, %136
  %138 = or i1 %121, %122
  br i1 %137, label %139, label %269

; <label>:139:                                    ; preds = %112
  ret void

; <label>:140:                                    ; preds = %2
  %141 = load i32, i32* @x.315
  %142 = load i32, i32* @y.316
  %143 = add i32 %141, 1608530835
  %144 = sub i32 %143, 1
  %145 = sub i32 %144, 1608530835
  %146 = sub i32 %141, 1
  %147 = mul i32 %141, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %142, 10
  %151 = xor i1 %149, true
  %152 = xor i1 %150, true
  %153 = xor i1 false, true
  %154 = and i1 %151, false
  %155 = and i1 %149, %153
  %156 = and i1 %152, false
  %157 = and i1 %150, %153
  %158 = or i1 %154, %155
  %159 = or i1 %156, %157
  %160 = xor i1 %158, %159
  %161 = or i1 %151, %152
  %162 = xor i1 %161, true
  %163 = or i1 false, %153
  %164 = and i1 %162, %163
  %165 = or i1 %160, %164
  %166 = or i1 %149, %150
  br i1 %165, label %167, label %270

; <label>:167:                                    ; preds = %140, %270
  %168 = landingpad { i8*, i32 }
          cleanup
  %169 = extractvalue { i8*, i32 } %168, 0
  store i8* %169, i8** %6, align 8
  %170 = extractvalue { i8*, i32 } %168, 1
  store i32 %170, i32* %7, align 4
  call void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEED2Ev(%"class.std::allocator.9"* %5) #3
  %171 = load i32, i32* @x.315
  %172 = load i32, i32* @y.316
  %173 = add i32 %171, 190277399
  %174 = sub i32 %173, 1
  %175 = sub i32 %174, 190277399
  %176 = sub i32 %171, 1
  %177 = mul i32 %171, %175
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %172, 10
  %181 = and i1 %179, %180
  %182 = xor i1 %179, %180
  %183 = or i1 %181, %182
  %184 = or i1 %179, %180
  br i1 %183, label %185, label %270

; <label>:185:                                    ; preds = %167
  br label %245

; <label>:186:                                    ; preds = %97
  %187 = load i32, i32* @x.315
  %188 = load i32, i32* @y.316
  %189 = add i32 %187, 1032241411
  %190 = sub i32 %189, 1
  %191 = sub i32 %190, 1032241411
  %192 = sub i32 %187, 1
  %193 = mul i32 %187, %191
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %188, 10
  %197 = xor i1 %195, true
  %198 = xor i1 %196, true
  %199 = xor i1 false, true
  %200 = and i1 %197, false
  %201 = and i1 %195, %199
  %202 = and i1 %198, false
  %203 = and i1 %196, %199
  %204 = or i1 %200, %201
  %205 = or i1 %202, %203
  %206 = xor i1 %204, %205
  %207 = or i1 %197, %198
  %208 = xor i1 %207, true
  %209 = or i1 false, %199
  %210 = and i1 %208, %209
  %211 = or i1 %206, %210
  %212 = or i1 %195, %196
  br i1 %211, label %213, label %274

; <label>:213:                                    ; preds = %186, %274
  %214 = landingpad { i8*, i32 }
          cleanup
  %215 = extractvalue { i8*, i32 } %214, 0
  store i8* %215, i8** %6, align 8
  %216 = extractvalue { i8*, i32 } %214, 1
  store i32 %216, i32* %7, align 4
  %217 = bitcast %"class.std::_Hashtable"* %9 to %"struct.std::__detail::_Hashtable_alloc"*
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEED2Ev(%"struct.std::__detail::_Hashtable_alloc"* %217) #3
  %218 = load i32, i32* @x.315
  %219 = load i32, i32* @y.316
  %220 = add i32 %218, -1936218168
  %221 = sub i32 %220, 1
  %222 = sub i32 %221, -1936218168
  %223 = sub i32 %218, 1
  %224 = mul i32 %218, %222
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %219, 10
  %228 = xor i1 %226, true
  %229 = xor i1 %227, true
  %230 = xor i1 true, true
  %231 = and i1 %228, true
  %232 = and i1 %226, %230
  %233 = and i1 %229, true
  %234 = and i1 %227, %230
  %235 = or i1 %231, %232
  %236 = or i1 %233, %234
  %237 = xor i1 %235, %236
  %238 = or i1 %228, %229
  %239 = xor i1 %238, true
  %240 = or i1 true, %230
  %241 = and i1 %239, %240
  %242 = or i1 %237, %241
  %243 = or i1 %226, %227
  br i1 %242, label %244, label %274

; <label>:244:                                    ; preds = %213
  br label %245

; <label>:245:                                    ; preds = %244, %185
  %246 = load i8*, i8** %6, align 8
  %247 = load i32, i32* %7, align 4
  %248 = insertvalue { i8*, i32 } undef, i8* %246, 0
  %249 = insertvalue { i8*, i32 } %248, i32 %247, 1
  resume { i8*, i32 } %249

; <label>:250:                                    ; preds = %52, %25
  call void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEED2Ev(%"class.std::allocator.9"* %5) #3
  %251 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %9, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"** null, %"struct.std::__detail::_Hash_node_base"*** %251, align 8
  %252 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %9, i32 0, i32 1
  %253 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4, align 8
  %254 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %253, i32 0, i32 1
  %255 = load i64, i64* %254, align 8
  store i64 %255, i64* %252, align 8
  %256 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %9, i32 0, i32 2
  call void @_ZNSt8__detail15_Hash_node_baseC2Ev(%"struct.std::__detail::_Hash_node_base"* %256) #3
  %257 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %9, i32 0, i32 3
  %258 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4, align 8
  %259 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %258, i32 0, i32 3
  %260 = load i64, i64* %259, align 8
  store i64 %260, i64* %257, align 8
  %261 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %9, i32 0, i32 4
  %262 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4, align 8
  %263 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %262, i32 0, i32 4
  %264 = bitcast %"struct.std::__detail::_Prime_rehash_policy"* %261 to i8*
  %265 = bitcast %"struct.std::__detail::_Prime_rehash_policy"* %263 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %264, i8* %265, i64 16, i32 8, i1 false)
  %266 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %9, i32 0, i32 5
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %266, align 8
  %267 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4, align 8
  %268 = getelementptr inbounds %class.anon, %class.anon* %8, i32 0, i32 0
  store %"class.std::_Hashtable"* %9, %"class.std::_Hashtable"** %268, align 8
  br label %52

; <label>:269:                                    ; preds = %112, %98
  br label %112

; <label>:270:                                    ; preds = %167, %140
  %271 = landingpad { i8*, i32 }
          cleanup
  %272 = extractvalue { i8*, i32 } %271, 0
  store i8* %272, i8** %6, align 8
  %273 = extractvalue { i8*, i32 } %271, 1
  store i32 %273, i32* %7, align 4
  call void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEED2Ev(%"class.std::allocator.9"* %5) #3
  br label %167

; <label>:274:                                    ; preds = %213, %186
  %275 = landingpad { i8*, i32 }
          cleanup
  %276 = extractvalue { i8*, i32 } %275, 0
  store i8* %276, i8** %6, align 8
  %277 = extractvalue { i8*, i32 } %275, 1
  store i32 %277, i32* %7, align 4
  %278 = bitcast %"class.std::_Hashtable"* %9 to %"struct.std::__detail::_Hashtable_alloc"*
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEED2Ev(%"struct.std::__detail::_Hashtable_alloc"* %278) #3
  br label %213
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE17_S_select_on_copyERKS7_(%"class.std::allocator.9"* noalias sret, %"class.std::allocator.9"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %1, %"class.std::allocator.9"** %3, align 8
  %4 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %3, align 8
  call void @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE37select_on_container_copy_constructionERKS6_(%"class.std::allocator.9"* sret %0, %"class.std::allocator.9"* dereferenceable(1) %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.9"* @_ZNKSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"*) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.9"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.319
  %6 = load i32, i32* @y.320
  %7 = add i32 %5, 462669642
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 462669642
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -875236559, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -875236559, label %19
    i32 2052215086, label %27
    i32 589033299, label %47
    i32 1195025677, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 2052215086, i32 1195025677
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %28, align 8
  %29 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %28, align 8
  %30 = bitcast %"struct.std::__detail::_Hashtable_alloc"* %29 to %"struct.std::__detail::_Hashtable_ebo_helper.8"*
  %31 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EE7_S_cgetERKS7_(%"struct.std::__detail::_Hashtable_ebo_helper.8"* dereferenceable(1) %30)
  store %"class.std::allocator.9"* %31, %"class.std::allocator.9"** %2
  %32 = load i32, i32* @x.319
  %33 = load i32, i32* @y.320
  %34 = sub i32 %32, -394281019
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -394281019
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 589033299, i32 1195025677
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile %"class.std::allocator.9"*, %"class.std::allocator.9"** %2
  ret %"class.std::allocator.9"* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %50, align 8
  %51 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %50, align 8
  %52 = bitcast %"struct.std::__detail::_Hashtable_alloc"* %51 to %"struct.std::__detail::_Hashtable_ebo_helper.8"*
  %53 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EE7_S_cgetERKS7_(%"struct.std::__detail::_Hashtable_ebo_helper.8"* dereferenceable(1) %52)
  store i32 2052215086, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEEC2IS6_EEOT_(%"struct.std::__detail::_Hashtable_alloc"*, %"class.std::allocator.9"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.321
  %6 = load i32, i32* @y.322
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1606013160, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %68
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1606013160, label %18
    i32 -1929149516, label %26
    i32 -971538503, label %60
    i32 -636221366, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %68

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1929149516, i32 -636221366
  store i32 %25, i32* %14
  br label %68

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  %28 = alloca %"class.std::allocator.9"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %27, align 8
  store %"class.std::allocator.9"* %1, %"class.std::allocator.9"** %28, align 8
  %29 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %27, align 8
  %30 = bitcast %"struct.std::__detail::_Hashtable_alloc"* %29 to %"struct.std::__detail::_Hashtable_ebo_helper.8"*
  %31 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %28, align 8
  %32 = call dereferenceable(1) %"class.std::allocator.9"* @_ZSt7forwardISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEEOT_RNSt16remove_referenceIS7_E4typeE(%"class.std::allocator.9"* dereferenceable(1) %31) #3
  call void @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EEC2IS6_EEOT_(%"struct.std::__detail::_Hashtable_ebo_helper.8"* %30, %"class.std::allocator.9"* dereferenceable(1) %32)
  %33 = load i32, i32* @x.321
  %34 = load i32, i32* @y.322
  %35 = add i32 %33, -30575766
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -30575766
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -971538503, i32 -636221366
  store i32 %59, i32* %14
  br label %68

; <label>:60:                                     ; preds = %15
  ret void

; <label>:61:                                     ; preds = %15
  %62 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  %63 = alloca %"class.std::allocator.9"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %62, align 8
  store %"class.std::allocator.9"* %1, %"class.std::allocator.9"** %63, align 8
  %64 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %62, align 8
  %65 = bitcast %"struct.std::__detail::_Hashtable_alloc"* %64 to %"struct.std::__detail::_Hashtable_ebo_helper.8"*
  %66 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %63, align 8
  %67 = call dereferenceable(1) %"class.std::allocator.9"* @_ZSt7forwardISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEEOT_RNSt16remove_referenceIS7_E4typeE(%"class.std::allocator.9"* dereferenceable(1) %66) #3
  call void @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EEC2IS6_EEOT_(%"struct.std::__detail::_Hashtable_ebo_helper.8"* %65, %"class.std::allocator.9"* dereferenceable(1) %67)
  store i32 -1929149516, i32* %14
  br label %68

; <label>:68:                                     ; preds = %61, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEED2Ev(%"class.std::allocator.9"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.323
  %5 = load i32, i32* @y.324
  %6 = sub i32 %4, 1174780241
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1174780241
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 443448429, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %50
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 443448429, label %18
    i32 1800214840, label %26
    i32 -1754770347, label %45
    i32 1943101663, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %50

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1800214840, i32 1943101663
  store i32 %25, i32* %14
  br label %50

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %27, align 8
  %28 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %27, align 8
  %29 = bitcast %"class.std::allocator.9"* %28 to %"class.__gnu_cxx::new_allocator.10"*
  call void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEED2Ev(%"class.__gnu_cxx::new_allocator.10"* %29) #3
  %30 = load i32, i32* @x.323
  %31 = load i32, i32* @y.324
  %32 = sub i32 %30, -808165887
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -808165887
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -1754770347, i32 1943101663
  store i32 %44, i32* %14
  br label %50

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %47, align 8
  %48 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %47, align 8
  %49 = bitcast %"class.std::allocator.9"* %48 to %"class.__gnu_cxx::new_allocator.10"*
  call void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEED2Ev(%"class.__gnu_cxx::new_allocator.10"* %49) #3
  store i32 1800214840, i32* %14
  br label %50

; <label>:50:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_assignIZNSF_C1ERKSF_EUlPKNS4_10_Hash_nodeIS2_Lb0EEEE_EEvSI_RKT_(%"class.std::_Hashtable"*, %"class.std::_Hashtable"* dereferenceable(56), %class.anon* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Hashtable"*, align 8
  %5 = alloca %"class.std::_Hashtable"*, align 8
  %6 = alloca %class.anon*, align 8
  %7 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %8 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  %11 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %12 = alloca %"struct.std::__detail::_Hash_node_base"*, align 8
  %13 = alloca i64, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %4, align 8
  store %"class.std::_Hashtable"* %1, %"class.std::_Hashtable"** %5, align 8
  store %class.anon* %2, %class.anon** %6, align 8
  %14 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4, align 8
  store %"struct.std::__detail::_Hash_node_base"** null, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  %15 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 0
  %16 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %15, align 8
  %17 = icmp ne %"struct.std::__detail::_Hash_node_base"** %16, null
  br i1 %17, label %23, label %18

; <label>:18:                                     ; preds = %3
  %19 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = call %"struct.std::__detail::_Hash_node_base"** @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_allocate_bucketsEm(%"class.std::_Hashtable"* %14, i64 %20)
  store %"struct.std::__detail::_Hash_node_base"** %21, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  %22 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"** %21, %"struct.std::__detail::_Hash_node_base"*** %22, align 8
  br label %23

; <label>:23:                                     ; preds = %18, %3
  %24 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5, align 8
  %25 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %24, i32 0, i32 2
  %26 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %25, i32 0, i32 0
  %27 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %26, align 8
  %28 = icmp ne %"struct.std::__detail::_Hash_node_base"* %27, null
  br i1 %28, label %59, label %29

; <label>:29:                                     ; preds = %23
  %30 = load i32, i32* @x.325
  %31 = load i32, i32* @y.326
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  br i1 %41, label %43, label %566

; <label>:43:                                     ; preds = %29, %566
  %44 = load i32, i32* @x.325
  %45 = load i32, i32* @y.326
  %46 = add i32 %44, 1670412655
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 1670412655
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  br i1 %56, label %58, label %566

; <label>:58:                                     ; preds = %43
  br label %485

; <label>:59:                                     ; preds = %23
  %60 = load i32, i32* @x.325
  %61 = load i32, i32* @y.326
  %62 = sub i32 %60, -1346181020
  %63 = sub i32 %62, 1
  %64 = add i32 %63, -1346181020
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 true, true
  %73 = and i1 %70, true
  %74 = and i1 %68, %72
  %75 = and i1 %71, true
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 true, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  br i1 %84, label %86, label %567

; <label>:86:                                     ; preds = %59, %567
  %87 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5, align 8
  %88 = load i32, i32* @x.325
  %89 = load i32, i32* @y.326
  %90 = sub i32 %88, 1802763566
  %91 = sub i32 %90, 1
  %92 = add i32 %91, 1802763566
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = xor i1 %96, true
  %99 = xor i1 %97, true
  %100 = xor i1 false, true
  %101 = and i1 %98, false
  %102 = and i1 %96, %100
  %103 = and i1 %99, false
  %104 = and i1 %97, %100
  %105 = or i1 %101, %102
  %106 = or i1 %103, %104
  %107 = xor i1 %105, %106
  %108 = or i1 %98, %99
  %109 = xor i1 %108, true
  %110 = or i1 false, %100
  %111 = and i1 %109, %110
  %112 = or i1 %107, %111
  %113 = or i1 %96, %97
  br i1 %112, label %114, label %567

; <label>:114:                                    ; preds = %86
  %115 = invoke %"struct.std::__detail::_Hash_node"* @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_beginEv(%"class.std::_Hashtable"* %87)
          to label %116 unwind label %294

; <label>:116:                                    ; preds = %114
  store %"struct.std::__detail::_Hash_node"* %115, %"struct.std::__detail::_Hash_node"** %8, align 8
  %117 = load %class.anon*, %class.anon** %6, align 8
  %118 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %119 = invoke %"struct.std::__detail::_Hash_node"* @_ZZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEC1ERKSF_ENKUlPKNS4_10_Hash_nodeIS2_Lb0EEEE_clESL_(%class.anon* %117, %"struct.std::__detail::_Hash_node"* %118)
          to label %120 unwind label %294

; <label>:120:                                    ; preds = %116
  %121 = load i32, i32* @x.325
  %122 = load i32, i32* @y.326
  %123 = add i32 %121, -221725095
  %124 = sub i32 %123, 1
  %125 = sub i32 %124, -221725095
  %126 = sub i32 %121, 1
  %127 = mul i32 %121, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %122, 10
  %131 = and i1 %129, %130
  %132 = xor i1 %129, %130
  %133 = or i1 %131, %132
  %134 = or i1 %129, %130
  br i1 %133, label %135, label %569

; <label>:135:                                    ; preds = %120, %569
  store %"struct.std::__detail::_Hash_node"* %119, %"struct.std::__detail::_Hash_node"** %11, align 8
  %136 = bitcast %"class.std::_Hashtable"* %14 to %"struct.std::__detail::_Hash_code_base"*
  %137 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %138 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %139 = load i32, i32* @x.325
  %140 = load i32, i32* @y.326
  %141 = add i32 %139, -1463796489
  %142 = sub i32 %141, 1
  %143 = sub i32 %142, -1463796489
  %144 = sub i32 %139, 1
  %145 = mul i32 %139, %143
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %140, 10
  %149 = and i1 %147, %148
  %150 = xor i1 %147, %148
  %151 = or i1 %149, %150
  %152 = or i1 %147, %148
  br i1 %151, label %153, label %569

; <label>:153:                                    ; preds = %135
  invoke void @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE12_M_copy_codeEPNS_10_Hash_nodeIS3_Lb0EEEPKSB_(%"struct.std::__detail::_Hash_code_base"* %136, %"struct.std::__detail::_Hash_node"* %137, %"struct.std::__detail::_Hash_node"* %138)
          to label %154 unwind label %294

; <label>:154:                                    ; preds = %153
  %155 = load i32, i32* @x.325
  %156 = load i32, i32* @y.326
  %157 = sub i32 %155, 1804720631
  %158 = sub i32 %157, 1
  %159 = add i32 %158, 1804720631
  %160 = sub i32 %155, 1
  %161 = mul i32 %155, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %156, 10
  %165 = and i1 %163, %164
  %166 = xor i1 %163, %164
  %167 = or i1 %165, %166
  %168 = or i1 %163, %164
  br i1 %167, label %169, label %573

; <label>:169:                                    ; preds = %154, %573
  %170 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %171 = bitcast %"struct.std::__detail::_Hash_node"* %170 to %"struct.std::__detail::_Hash_node_base"*
  %172 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 2
  %173 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %172, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %171, %"struct.std::__detail::_Hash_node_base"** %173, align 8
  %174 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 2
  %175 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 0
  %176 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %175, align 8
  %177 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %178 = call i64 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexEPNS4_10_Hash_nodeIS2_Lb0EEE(%"class.std::_Hashtable"* %14, %"struct.std::__detail::_Hash_node"* %177) #3
  %179 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %176, i64 %178
  store %"struct.std::__detail::_Hash_node_base"* %174, %"struct.std::__detail::_Hash_node_base"** %179, align 8
  %180 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %181 = bitcast %"struct.std::__detail::_Hash_node"* %180 to %"struct.std::__detail::_Hash_node_base"*
  store %"struct.std::__detail::_Hash_node_base"* %181, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  %182 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %183 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %182) #3
  store %"struct.std::__detail::_Hash_node"* %183, %"struct.std::__detail::_Hash_node"** %8, align 8
  %184 = load i32, i32* @x.325
  %185 = load i32, i32* @y.326
  %186 = add i32 %184, -256572017
  %187 = sub i32 %186, 1
  %188 = sub i32 %187, -256572017
  %189 = sub i32 %184, 1
  %190 = mul i32 %184, %188
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %185, 10
  %194 = xor i1 %192, true
  %195 = xor i1 %193, true
  %196 = xor i1 false, true
  %197 = and i1 %194, false
  %198 = and i1 %192, %196
  %199 = and i1 %195, false
  %200 = and i1 %193, %196
  %201 = or i1 %197, %198
  %202 = or i1 %199, %200
  %203 = xor i1 %201, %202
  %204 = or i1 %194, %195
  %205 = xor i1 %204, true
  %206 = or i1 false, %196
  %207 = and i1 %205, %206
  %208 = or i1 %203, %207
  %209 = or i1 %192, %193
  br i1 %208, label %210, label %573

; <label>:210:                                    ; preds = %169
  br label %211

; <label>:211:                                    ; preds = %403, %210
  %212 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %213 = icmp ne %"struct.std::__detail::_Hash_node"* %212, null
  br i1 %213, label %214, label %406

; <label>:214:                                    ; preds = %211
  %215 = load i32, i32* @x.325
  %216 = load i32, i32* @y.326
  %217 = add i32 %215, 1338562878
  %218 = sub i32 %217, 1
  %219 = sub i32 %218, 1338562878
  %220 = sub i32 %215, 1
  %221 = mul i32 %215, %219
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %216, 10
  %225 = xor i1 %223, true
  %226 = xor i1 %224, true
  %227 = xor i1 false, true
  %228 = and i1 %225, false
  %229 = and i1 %223, %227
  %230 = and i1 %226, false
  %231 = and i1 %224, %227
  %232 = or i1 %228, %229
  %233 = or i1 %230, %231
  %234 = xor i1 %232, %233
  %235 = or i1 %225, %226
  %236 = xor i1 %235, true
  %237 = or i1 false, %227
  %238 = and i1 %236, %237
  %239 = or i1 %234, %238
  %240 = or i1 %223, %224
  br i1 %239, label %241, label %588

; <label>:241:                                    ; preds = %214, %588
  %242 = load %class.anon*, %class.anon** %6, align 8
  %243 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %244 = load i32, i32* @x.325
  %245 = load i32, i32* @y.326
  %246 = sub i32 0, 1
  %247 = add i32 %244, %246
  %248 = sub i32 %244, 1
  %249 = mul i32 %244, %247
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %245, 10
  %253 = xor i1 %251, true
  %254 = xor i1 %252, true
  %255 = xor i1 false, true
  %256 = and i1 %253, false
  %257 = and i1 %251, %255
  %258 = and i1 %254, false
  %259 = and i1 %252, %255
  %260 = or i1 %256, %257
  %261 = or i1 %258, %259
  %262 = xor i1 %260, %261
  %263 = or i1 %253, %254
  %264 = xor i1 %263, true
  %265 = or i1 false, %255
  %266 = and i1 %264, %265
  %267 = or i1 %262, %266
  %268 = or i1 %251, %252
  br i1 %267, label %269, label %588

; <label>:269:                                    ; preds = %241
  %270 = invoke %"struct.std::__detail::_Hash_node"* @_ZZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEC1ERKSF_ENKUlPKNS4_10_Hash_nodeIS2_Lb0EEEE_clESL_(%class.anon* %242, %"struct.std::__detail::_Hash_node"* %243)
          to label %271 unwind label %294

; <label>:271:                                    ; preds = %269
  store %"struct.std::__detail::_Hash_node"* %270, %"struct.std::__detail::_Hash_node"** %11, align 8
  %272 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %273 = bitcast %"struct.std::__detail::_Hash_node"* %272 to %"struct.std::__detail::_Hash_node_base"*
  %274 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  %275 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %274, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %273, %"struct.std::__detail::_Hash_node_base"** %275, align 8
  %276 = bitcast %"class.std::_Hashtable"* %14 to %"struct.std::__detail::_Hash_code_base"*
  %277 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %278 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  invoke void @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE12_M_copy_codeEPNS_10_Hash_nodeIS3_Lb0EEEPKSB_(%"struct.std::__detail::_Hash_code_base"* %276, %"struct.std::__detail::_Hash_node"* %277, %"struct.std::__detail::_Hash_node"* %278)
          to label %279 unwind label %294

; <label>:279:                                    ; preds = %271
  %280 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %281 = call i64 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexEPNS4_10_Hash_nodeIS2_Lb0EEE(%"class.std::_Hashtable"* %14, %"struct.std::__detail::_Hash_node"* %280) #3
  store i64 %281, i64* %13, align 8
  %282 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 0
  %283 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %282, align 8
  %284 = load i64, i64* %13, align 8
  %285 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %283, i64 %284
  %286 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %285, align 8
  %287 = icmp ne %"struct.std::__detail::_Hash_node_base"* %286, null
  br i1 %287, label %359, label %288

; <label>:288:                                    ; preds = %279
  %289 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  %290 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 0
  %291 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %290, align 8
  %292 = load i64, i64* %13, align 8
  %293 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %291, i64 %292
  store %"struct.std::__detail::_Hash_node_base"* %289, %"struct.std::__detail::_Hash_node_base"** %293, align 8
  br label %359

; <label>:294:                                    ; preds = %271, %269, %153, %116, %114
  %295 = landingpad { i8*, i32 }
          catch i8* null
  %296 = extractvalue { i8*, i32 } %295, 0
  store i8* %296, i8** %9, align 8
  %297 = extractvalue { i8*, i32 } %295, 1
  store i32 %297, i32* %10, align 4
  br label %298

; <label>:298:                                    ; preds = %294
  %299 = load i32, i32* @x.325
  %300 = load i32, i32* @y.326
  %301 = add i32 %299, -1037073158
  %302 = sub i32 %301, 1
  %303 = sub i32 %302, -1037073158
  %304 = sub i32 %299, 1
  %305 = mul i32 %299, %303
  %306 = urem i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %300, 10
  %309 = xor i1 %307, true
  %310 = xor i1 %308, true
  %311 = xor i1 true, true
  %312 = and i1 %309, true
  %313 = and i1 %307, %311
  %314 = and i1 %310, true
  %315 = and i1 %308, %311
  %316 = or i1 %312, %313
  %317 = or i1 %314, %315
  %318 = xor i1 %316, %317
  %319 = or i1 %309, %310
  %320 = xor i1 %319, true
  %321 = or i1 true, %311
  %322 = and i1 %320, %321
  %323 = or i1 %318, %322
  %324 = or i1 %307, %308
  br i1 %323, label %325, label %591

; <label>:325:                                    ; preds = %298, %591
  %326 = load i8*, i8** %9, align 8
  %327 = call i8* @__cxa_begin_catch(i8* %326) #3
  call void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv(%"class.std::_Hashtable"* %14) #3
  %328 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  %329 = icmp ne %"struct.std::__detail::_Hash_node_base"** %328, null
  %330 = load i32, i32* @x.325
  %331 = load i32, i32* @y.326
  %332 = add i32 %330, -470878016
  %333 = sub i32 %332, 1
  %334 = sub i32 %333, -470878016
  %335 = sub i32 %330, 1
  %336 = mul i32 %330, %334
  %337 = urem i32 %336, 2
  %338 = icmp eq i32 %337, 0
  %339 = icmp slt i32 %331, 10
  %340 = xor i1 %338, true
  %341 = xor i1 %339, true
  %342 = xor i1 true, true
  %343 = and i1 %340, true
  %344 = and i1 %338, %342
  %345 = and i1 %341, true
  %346 = and i1 %339, %342
  %347 = or i1 %343, %344
  %348 = or i1 %345, %346
  %349 = xor i1 %347, %348
  %350 = or i1 %340, %341
  %351 = xor i1 %350, true
  %352 = or i1 true, %342
  %353 = and i1 %351, %352
  %354 = or i1 %349, %353
  %355 = or i1 %338, %339
  br i1 %354, label %356, label %591

; <label>:356:                                    ; preds = %325
  br i1 %329, label %357, label %453

; <label>:357:                                    ; preds = %356
  invoke void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_deallocate_bucketsEv(%"class.std::_Hashtable"* %14)
          to label %358 unwind label %407

; <label>:358:                                    ; preds = %357
  br label %453

; <label>:359:                                    ; preds = %288, %279
  %360 = load i32, i32* @x.325
  %361 = load i32, i32* @y.326
  %362 = sub i32 0, 1
  %363 = add i32 %360, %362
  %364 = sub i32 %360, 1
  %365 = mul i32 %360, %363
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %361, 10
  %369 = and i1 %367, %368
  %370 = xor i1 %367, %368
  %371 = or i1 %369, %370
  %372 = or i1 %367, %368
  br i1 %371, label %373, label %596

; <label>:373:                                    ; preds = %359, %596
  %374 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %375 = bitcast %"struct.std::__detail::_Hash_node"* %374 to %"struct.std::__detail::_Hash_node_base"*
  store %"struct.std::__detail::_Hash_node_base"* %375, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  %376 = load i32, i32* @x.325
  %377 = load i32, i32* @y.326
  %378 = add i32 %376, -1406855705
  %379 = sub i32 %378, 1
  %380 = sub i32 %379, -1406855705
  %381 = sub i32 %376, 1
  %382 = mul i32 %376, %380
  %383 = urem i32 %382, 2
  %384 = icmp eq i32 %383, 0
  %385 = icmp slt i32 %377, 10
  %386 = xor i1 %384, true
  %387 = xor i1 %385, true
  %388 = xor i1 false, true
  %389 = and i1 %386, false
  %390 = and i1 %384, %388
  %391 = and i1 %387, false
  %392 = and i1 %385, %388
  %393 = or i1 %389, %390
  %394 = or i1 %391, %392
  %395 = xor i1 %393, %394
  %396 = or i1 %386, %387
  %397 = xor i1 %396, true
  %398 = or i1 false, %388
  %399 = and i1 %397, %398
  %400 = or i1 %395, %399
  %401 = or i1 %384, %385
  br i1 %400, label %402, label %596

; <label>:402:                                    ; preds = %373
  br label %403

; <label>:403:                                    ; preds = %402
  %404 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %405 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %404) #3
  store %"struct.std::__detail::_Hash_node"* %405, %"struct.std::__detail::_Hash_node"** %8, align 8
  br label %211

; <label>:406:                                    ; preds = %211
  br label %485

; <label>:407:                                    ; preds = %453, %357
  %408 = load i32, i32* @x.325
  %409 = load i32, i32* @y.326
  %410 = sub i32 %408, 493790725
  %411 = sub i32 %410, 1
  %412 = add i32 %411, 493790725
  %413 = sub i32 %408, 1
  %414 = mul i32 %408, %412
  %415 = urem i32 %414, 2
  %416 = icmp eq i32 %415, 0
  %417 = icmp slt i32 %409, 10
  %418 = and i1 %416, %417
  %419 = xor i1 %416, %417
  %420 = or i1 %418, %419
  %421 = or i1 %416, %417
  br i1 %420, label %422, label %599

; <label>:422:                                    ; preds = %407, %599
  %423 = landingpad { i8*, i32 }
          cleanup
  %424 = extractvalue { i8*, i32 } %423, 0
  store i8* %424, i8** %9, align 8
  %425 = extractvalue { i8*, i32 } %423, 1
  store i32 %425, i32* %10, align 4
  %426 = load i32, i32* @x.325
  %427 = load i32, i32* @y.326
  %428 = sub i32 %426, 937353746
  %429 = sub i32 %428, 1
  %430 = add i32 %429, 937353746
  %431 = sub i32 %426, 1
  %432 = mul i32 %426, %430
  %433 = urem i32 %432, 2
  %434 = icmp eq i32 %433, 0
  %435 = icmp slt i32 %427, 10
  %436 = xor i1 %434, true
  %437 = xor i1 %435, true
  %438 = xor i1 true, true
  %439 = and i1 %436, true
  %440 = and i1 %434, %438
  %441 = and i1 %437, true
  %442 = and i1 %435, %438
  %443 = or i1 %439, %440
  %444 = or i1 %441, %442
  %445 = xor i1 %443, %444
  %446 = or i1 %436, %437
  %447 = xor i1 %446, true
  %448 = or i1 true, %438
  %449 = and i1 %447, %448
  %450 = or i1 %445, %449
  %451 = or i1 %434, %435
  br i1 %450, label %452, label %599

; <label>:452:                                    ; preds = %422
  invoke void @__cxa_end_catch()
          to label %454 unwind label %491

; <label>:453:                                    ; preds = %358, %356
  invoke void @__cxa_rethrow() #12
          to label %536 unwind label %407

; <label>:454:                                    ; preds = %452
  %455 = load i32, i32* @x.325
  %456 = load i32, i32* @y.326
  %457 = sub i32 %455, 1248363922
  %458 = sub i32 %457, 1
  %459 = add i32 %458, 1248363922
  %460 = sub i32 %455, 1
  %461 = mul i32 %455, %459
  %462 = urem i32 %461, 2
  %463 = icmp eq i32 %462, 0
  %464 = icmp slt i32 %456, 10
  %465 = and i1 %463, %464
  %466 = xor i1 %463, %464
  %467 = or i1 %465, %466
  %468 = or i1 %463, %464
  br i1 %467, label %469, label %603

; <label>:469:                                    ; preds = %454, %603
  %470 = load i32, i32* @x.325
  %471 = load i32, i32* @y.326
  %472 = sub i32 %470, 1404090447
  %473 = sub i32 %472, 1
  %474 = add i32 %473, 1404090447
  %475 = sub i32 %470, 1
  %476 = mul i32 %470, %474
  %477 = urem i32 %476, 2
  %478 = icmp eq i32 %477, 0
  %479 = icmp slt i32 %471, 10
  %480 = and i1 %478, %479
  %481 = xor i1 %478, %479
  %482 = or i1 %480, %481
  %483 = or i1 %478, %479
  br i1 %482, label %484, label %603

; <label>:484:                                    ; preds = %469
  br label %486

; <label>:485:                                    ; preds = %58, %406
  ret void

; <label>:486:                                    ; preds = %484
  %487 = load i8*, i8** %9, align 8
  %488 = load i32, i32* %10, align 4
  %489 = insertvalue { i8*, i32 } undef, i8* %487, 0
  %490 = insertvalue { i8*, i32 } %489, i32 %488, 1
  resume { i8*, i32 } %490

; <label>:491:                                    ; preds = %452
  %492 = load i32, i32* @x.325
  %493 = load i32, i32* @y.326
  %494 = sub i32 %492, 1658343795
  %495 = sub i32 %494, 1
  %496 = add i32 %495, 1658343795
  %497 = sub i32 %492, 1
  %498 = mul i32 %492, %496
  %499 = urem i32 %498, 2
  %500 = icmp eq i32 %499, 0
  %501 = icmp slt i32 %493, 10
  %502 = xor i1 %500, true
  %503 = xor i1 %501, true
  %504 = xor i1 false, true
  %505 = and i1 %502, false
  %506 = and i1 %500, %504
  %507 = and i1 %503, false
  %508 = and i1 %501, %504
  %509 = or i1 %505, %506
  %510 = or i1 %507, %508
  %511 = xor i1 %509, %510
  %512 = or i1 %502, %503
  %513 = xor i1 %512, true
  %514 = or i1 false, %504
  %515 = and i1 %513, %514
  %516 = or i1 %511, %515
  %517 = or i1 %500, %501
  br i1 %516, label %518, label %604

; <label>:518:                                    ; preds = %491, %604
  %519 = landingpad { i8*, i32 }
          catch i8* null
  %520 = extractvalue { i8*, i32 } %519, 0
  call void @__clang_call_terminate(i8* %520) #11
  %521 = load i32, i32* @x.325
  %522 = load i32, i32* @y.326
  %523 = sub i32 %521, 2048510417
  %524 = sub i32 %523, 1
  %525 = add i32 %524, 2048510417
  %526 = sub i32 %521, 1
  %527 = mul i32 %521, %525
  %528 = urem i32 %527, 2
  %529 = icmp eq i32 %528, 0
  %530 = icmp slt i32 %522, 10
  %531 = and i1 %529, %530
  %532 = xor i1 %529, %530
  %533 = or i1 %531, %532
  %534 = or i1 %529, %530
  br i1 %533, label %535, label %604

; <label>:535:                                    ; preds = %518
  unreachable

; <label>:536:                                    ; preds = %453
  %537 = load i32, i32* @x.325
  %538 = load i32, i32* @y.326
  %539 = sub i32 %537, 491889120
  %540 = sub i32 %539, 1
  %541 = add i32 %540, 491889120
  %542 = sub i32 %537, 1
  %543 = mul i32 %537, %541
  %544 = urem i32 %543, 2
  %545 = icmp eq i32 %544, 0
  %546 = icmp slt i32 %538, 10
  %547 = and i1 %545, %546
  %548 = xor i1 %545, %546
  %549 = or i1 %547, %548
  %550 = or i1 %545, %546
  br i1 %549, label %551, label %607

; <label>:551:                                    ; preds = %536, %607
  %552 = load i32, i32* @x.325
  %553 = load i32, i32* @y.326
  %554 = sub i32 0, 1
  %555 = add i32 %552, %554
  %556 = sub i32 %552, 1
  %557 = mul i32 %552, %555
  %558 = urem i32 %557, 2
  %559 = icmp eq i32 %558, 0
  %560 = icmp slt i32 %553, 10
  %561 = and i1 %559, %560
  %562 = xor i1 %559, %560
  %563 = or i1 %561, %562
  %564 = or i1 %559, %560
  br i1 %563, label %565, label %607

; <label>:565:                                    ; preds = %551
  unreachable

; <label>:566:                                    ; preds = %43, %29
  br label %43

; <label>:567:                                    ; preds = %86, %59
  %568 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5, align 8
  br label %86

; <label>:569:                                    ; preds = %135, %120
  store %"struct.std::__detail::_Hash_node"* %119, %"struct.std::__detail::_Hash_node"** %11, align 8
  %570 = bitcast %"class.std::_Hashtable"* %14 to %"struct.std::__detail::_Hash_code_base"*
  %571 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %572 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  br label %135

; <label>:573:                                    ; preds = %169, %154
  %574 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %575 = bitcast %"struct.std::__detail::_Hash_node"* %574 to %"struct.std::__detail::_Hash_node_base"*
  %576 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 2
  %577 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %576, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %575, %"struct.std::__detail::_Hash_node_base"** %577, align 8
  %578 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 2
  %579 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 0
  %580 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %579, align 8
  %581 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %582 = call i64 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexEPNS4_10_Hash_nodeIS2_Lb0EEE(%"class.std::_Hashtable"* %14, %"struct.std::__detail::_Hash_node"* %581) #3
  %583 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %580, i64 %582
  store %"struct.std::__detail::_Hash_node_base"* %578, %"struct.std::__detail::_Hash_node_base"** %583, align 8
  %584 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %585 = bitcast %"struct.std::__detail::_Hash_node"* %584 to %"struct.std::__detail::_Hash_node_base"*
  store %"struct.std::__detail::_Hash_node_base"* %585, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  %586 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %587 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %586) #3
  store %"struct.std::__detail::_Hash_node"* %587, %"struct.std::__detail::_Hash_node"** %8, align 8
  br label %169

; <label>:588:                                    ; preds = %241, %214
  %589 = load %class.anon*, %class.anon** %6, align 8
  %590 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  br label %241

; <label>:591:                                    ; preds = %325, %298
  %592 = load i8*, i8** %9, align 8
  %593 = call i8* @__cxa_begin_catch(i8* %592) #3
  call void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv(%"class.std::_Hashtable"* %14) #3
  %594 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  %595 = icmp ne %"struct.std::__detail::_Hash_node_base"** %594, null
  br label %325

; <label>:596:                                    ; preds = %373, %359
  %597 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %598 = bitcast %"struct.std::__detail::_Hash_node"* %597 to %"struct.std::__detail::_Hash_node_base"*
  store %"struct.std::__detail::_Hash_node_base"* %598, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  br label %373

; <label>:599:                                    ; preds = %422, %407
  %600 = landingpad { i8*, i32 }
          cleanup
  %601 = extractvalue { i8*, i32 } %600, 0
  store i8* %601, i8** %9, align 8
  %602 = extractvalue { i8*, i32 } %600, 1
  store i32 %602, i32* %10, align 4
  br label %422

; <label>:603:                                    ; preds = %469, %454
  br label %469

; <label>:604:                                    ; preds = %518, %491
  %605 = landingpad { i8*, i32 }
          catch i8* null
  %606 = extractvalue { i8*, i32 } %605, 0
  call void @__clang_call_terminate(i8* %606) #11
  br label %518

; <label>:607:                                    ; preds = %551, %536
  br label %551
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE37select_on_container_copy_constructionERKS6_(%"class.std::allocator.9"* noalias sret, %"class.std::allocator.9"* dereferenceable(1)) #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %1, %"class.std::allocator.9"** %3, align 8
  %4 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %3, align 8
  call void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEC2ERKS5_(%"class.std::allocator.9"* %0, %"class.std::allocator.9"* dereferenceable(1) %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEC2ERKS5_(%"class.std::allocator.9"*, %"class.std::allocator.9"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.329
  %6 = load i32, i32* @y.330
  %7 = sub i32 %5, -1887826294
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1887826294
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1152557843, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1152557843, label %19
    i32 -2028467140, label %27
    i32 -683380038, label %60
    i32 -966246804, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -2028467140, i32 -966246804
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.9"*, align 8
  %29 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %28, align 8
  store %"class.std::allocator.9"* %1, %"class.std::allocator.9"** %29, align 8
  %30 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %28, align 8
  %31 = bitcast %"class.std::allocator.9"* %30 to %"class.__gnu_cxx::new_allocator.10"*
  %32 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %29, align 8
  %33 = bitcast %"class.std::allocator.9"* %32 to %"class.__gnu_cxx::new_allocator.10"*
  call void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEC2ERKS7_(%"class.__gnu_cxx::new_allocator.10"* %31, %"class.__gnu_cxx::new_allocator.10"* dereferenceable(1) %33) #3
  %34 = load i32, i32* @x.329
  %35 = load i32, i32* @y.330
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -683380038, i32 -966246804
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::allocator.9"*, align 8
  %63 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %62, align 8
  store %"class.std::allocator.9"* %1, %"class.std::allocator.9"** %63, align 8
  %64 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %62, align 8
  %65 = bitcast %"class.std::allocator.9"* %64 to %"class.__gnu_cxx::new_allocator.10"*
  %66 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %63, align 8
  %67 = bitcast %"class.std::allocator.9"* %66 to %"class.__gnu_cxx::new_allocator.10"*
  call void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEC2ERKS7_(%"class.__gnu_cxx::new_allocator.10"* %65, %"class.__gnu_cxx::new_allocator.10"* dereferenceable(1) %67) #3
  store i32 -2028467140, i32* %15
  br label %68

; <label>:68:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEC2ERKS7_(%"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %1, %"class.__gnu_cxx::new_allocator.10"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EE7_S_cgetERKS7_(%"struct.std::__detail::_Hashtable_ebo_helper.8"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.9"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.333
  %6 = load i32, i32* @y.334
  %7 = sub i32 %5, 380949956
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 380949956
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1265667083, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1265667083, label %19
    i32 1519623716, label %27
    i32 1361153208, label %58
    i32 2031252368, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1519623716, i32 2031252368
  store i32 %26, i32* %15
  br label %64

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.8"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.8"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.8"** %28, align 8
  %29 = load %"struct.std::__detail::_Hashtable_ebo_helper.8"*, %"struct.std::__detail::_Hashtable_ebo_helper.8"** %28, align 8
  %30 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.8"* %29 to %"class.std::allocator.9"*
  store %"class.std::allocator.9"* %30, %"class.std::allocator.9"** %2
  %31 = load i32, i32* @x.333
  %32 = load i32, i32* @y.334
  %33 = add i32 %31, 731648101
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 731648101
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 1361153208, i32 2031252368
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"class.std::allocator.9"*, %"class.std::allocator.9"** %2
  ret %"class.std::allocator.9"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.8"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.8"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.8"** %61, align 8
  %62 = load %"struct.std::__detail::_Hashtable_ebo_helper.8"*, %"struct.std::__detail::_Hashtable_ebo_helper.8"** %61, align 8
  %63 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.8"* %62 to %"class.std::allocator.9"*
  store i32 1519623716, i32* %15
  br label %64

; <label>:64:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.9"* @_ZSt7forwardISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEEOT_RNSt16remove_referenceIS7_E4typeE(%"class.std::allocator.9"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"class.std::allocator.9"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.335
  %6 = load i32, i32* @y.336
  %7 = add i32 %5, 2136713180
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 2136713180
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1617589594, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1617589594, label %19
    i32 925306081, label %39
    i32 -1117814591, label %68
    i32 122648837, label %70
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 925306081, i32 122648837
  store i32 %38, i32* %15
  br label %73

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %40, align 8
  %41 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %40, align 8
  store %"class.std::allocator.9"* %41, %"class.std::allocator.9"** %2
  %42 = load i32, i32* @x.335
  %43 = load i32, i32* @y.336
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -1117814591, i32 122648837
  store i32 %67, i32* %15
  br label %73

; <label>:68:                                     ; preds = %16
  %69 = load volatile %"class.std::allocator.9"*, %"class.std::allocator.9"** %2
  ret %"class.std::allocator.9"* %69

; <label>:70:                                     ; preds = %16
  %71 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %71, align 8
  %72 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %71, align 8
  store i32 925306081, i32* %15
  br label %73

; <label>:73:                                     ; preds = %70, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EEC2IS6_EEOT_(%"struct.std::__detail::_Hashtable_ebo_helper.8"*, %"class.std::allocator.9"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.8"*, align 8
  %4 = alloca %"class.std::allocator.9"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.8"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.8"** %3, align 8
  store %"class.std::allocator.9"* %1, %"class.std::allocator.9"** %4, align 8
  %5 = load %"struct.std::__detail::_Hashtable_ebo_helper.8"*, %"struct.std::__detail::_Hashtable_ebo_helper.8"** %3, align 8
  %6 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.8"* %5 to %"class.std::allocator.9"*
  %7 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.9"* @_ZSt7forwardISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEEOT_RNSt16remove_referenceIS7_E4typeE(%"class.std::allocator.9"* dereferenceable(1) %7) #3
  call void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEC2ERKS5_(%"class.std::allocator.9"* %6, %"class.std::allocator.9"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node_base"** @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_allocate_bucketsEm(%"class.std::_Hashtable"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"class.std::_Hashtable"*
  %5 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %6 = alloca %"class.std::_Hashtable"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %6, align 8
  store %"class.std::_Hashtable"* %8, %"class.std::_Hashtable"** %4
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %3
  %10 = alloca i32
  store i32 -944806252, i32* %10
  br label %11

; <label>:11:                                     ; preds = %2, %79
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 -944806252, label %14
    i32 -81304014, label %18
    i32 777306569, label %34
    i32 -1675830346, label %66
    i32 -1741608397, label %67
    i32 -637176574, label %72
    i32 -2122331386, label %74
  ]

; <label>:13:                                     ; preds = %11
  br label %79

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp eq i64 %15, 1
  %17 = select i1 %16, i32 -81304014, i32 -1741608397
  store i32 %17, i32* %10
  br label %79

; <label>:18:                                     ; preds = %11
  %19 = load i32, i32* @x.339
  %20 = load i32, i32* @y.340
  %21 = add i32 %19, 886372272
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, 886372272
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 777306569, i32 -2122331386
  store i32 %33, i32* %10
  br label %79

; <label>:34:                                     ; preds = %11
  %35 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %36 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %35, i32 0, i32 5
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %36, align 8
  %37 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %38 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %37, i32 0, i32 5
  store %"struct.std::__detail::_Hash_node_base"** %38, %"struct.std::__detail::_Hash_node_base"*** %5, align 8
  %39 = load i32, i32* @x.339
  %40 = load i32, i32* @y.340
  %41 = add i32 %39, 650507579
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, 650507579
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 -1675830346, i32 -2122331386
  store i32 %65, i32* %10
  br label %79

; <label>:66:                                     ; preds = %11
  store i32 -637176574, i32* %10
  br label %79

; <label>:67:                                     ; preds = %11
  %68 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %69 = bitcast %"class.std::_Hashtable"* %68 to %"struct.std::__detail::_Hashtable_alloc"*
  %70 = load i64, i64* %7, align 8
  %71 = call %"struct.std::__detail::_Hash_node_base"** @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE19_M_allocate_bucketsEm(%"struct.std::__detail::_Hashtable_alloc"* %69, i64 %70)
  store %"struct.std::__detail::_Hash_node_base"** %71, %"struct.std::__detail::_Hash_node_base"*** %5, align 8
  store i32 -637176574, i32* %10
  br label %79

; <label>:72:                                     ; preds = %11
  %73 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %5, align 8
  ret %"struct.std::__detail::_Hash_node_base"** %73

; <label>:74:                                     ; preds = %11
  %75 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %76 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %75, i32 0, i32 5
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %76, align 8
  %77 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %78 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %77, i32 0, i32 5
  store %"struct.std::__detail::_Hash_node_base"** %78, %"struct.std::__detail::_Hash_node_base"*** %5, align 8
  store i32 777306569, i32* %10
  br label %79

; <label>:79:                                     ; preds = %74, %67, %66, %34, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEC1ERKSF_ENKUlPKNS4_10_Hash_nodeIS2_Lb0EEEE_clESL_(%class.anon*, %"struct.std::__detail::_Hash_node"*) #0 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Hash_node"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.341
  %7 = load i32, i32* @y.342
  %8 = add i32 %6, 976454467
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 976454467
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -691724482, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %79
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -691724482, label %20
    i32 1981557441, label %40
    i32 1411093734, label %66
    i32 1051199670, label %68
  ]

; <label>:19:                                     ; preds = %17
  br label %79

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1981557441, i32 1051199670
  store i32 %39, i32* %16
  br label %79

; <label>:40:                                     ; preds = %17
  %41 = alloca %class.anon*, align 8
  %42 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %class.anon* %0, %class.anon** %41, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %42, align 8
  %43 = load %class.anon*, %class.anon** %41, align 8
  %44 = getelementptr inbounds %class.anon, %class.anon* %43, i32 0, i32 0
  %45 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %44, align 8
  %46 = bitcast %"class.std::_Hashtable"* %45 to %"struct.std::__detail::_Hashtable_alloc"*
  %47 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %42, align 8
  %48 = bitcast %"struct.std::__detail::_Hash_node"* %47 to %"struct.std::__detail::_Hash_node_value_base"*
  %49 = call dereferenceable(16) %"struct.std::pair"* @_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKixEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base"* %48) #3
  %50 = call %"struct.std::__detail::_Hash_node"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE16_M_allocate_nodeIJRKS4_EEEPS5_DpOT_(%"struct.std::__detail::_Hashtable_alloc"* %46, %"struct.std::pair"* dereferenceable(16) %49)
  store %"struct.std::__detail::_Hash_node"* %50, %"struct.std::__detail::_Hash_node"** %3
  %51 = load i32, i32* @x.341
  %52 = load i32, i32* @y.342
  %53 = sub i32 %51, 1477813513
  %54 = sub i32 %53, 1
  %55 = add i32 %54, 1477813513
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 1411093734, i32 1051199670
  store i32 %65, i32* %16
  br label %79

; <label>:66:                                     ; preds = %17
  %67 = load volatile %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %3
  ret %"struct.std::__detail::_Hash_node"* %67

; <label>:68:                                     ; preds = %17
  %69 = alloca %class.anon*, align 8
  %70 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %class.anon* %0, %class.anon** %69, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %70, align 8
  %71 = load %class.anon*, %class.anon** %69, align 8
  %72 = getelementptr inbounds %class.anon, %class.anon* %71, i32 0, i32 0
  %73 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %72, align 8
  %74 = bitcast %"class.std::_Hashtable"* %73 to %"struct.std::__detail::_Hashtable_alloc"*
  %75 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %70, align 8
  %76 = bitcast %"struct.std::__detail::_Hash_node"* %75 to %"struct.std::__detail::_Hash_node_value_base"*
  %77 = call dereferenceable(16) %"struct.std::pair"* @_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKixEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base"* %76) #3
  %78 = call %"struct.std::__detail::_Hash_node"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE16_M_allocate_nodeIJRKS4_EEEPS5_DpOT_(%"struct.std::__detail::_Hashtable_alloc"* %74, %"struct.std::pair"* dereferenceable(16) %77)
  store i32 1981557441, i32* %16
  br label %79

; <label>:79:                                     ; preds = %68, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE12_M_copy_codeEPNS_10_Hash_nodeIS3_Lb0EEEPKSB_(%"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"*) #4 comdat align 2 {
  %4 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %6 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %4, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %5, align 8
  store %"struct.std::__detail::_Hash_node"* %2, %"struct.std::__detail::_Hash_node"** %6, align 8
  %7 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexEPNS4_10_Hash_nodeIS2_Lb0EEE(%"class.std::_Hashtable"*, %"struct.std::__detail::_Hash_node"*) #4 comdat align 2 {
  %3 = alloca %"class.std::_Hashtable"*, align 8
  %4 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %3, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %4, align 8
  %5 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %3, align 8
  %6 = bitcast %"class.std::_Hashtable"* %5 to %"struct.std::__detail::_Hash_code_base"*
  %7 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %4, align 8
  %8 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %5, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = call i64 @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE15_M_bucket_indexEPKNS_10_Hash_nodeIS3_Lb0EEEm(%"struct.std::__detail::_Hash_code_base"* %6, %"struct.std::__detail::_Hash_node"* %7, i64 %9) #3
  ret i64 %10
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node_base"** @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE19_M_allocate_bucketsEm(%"struct.std::__detail::_Hashtable_alloc"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::allocator.15", align 1
  %6 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %7 = alloca i8*
  %8 = alloca i32
  %9 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %3, align 8
  store i64 %1, i64* %4, align 8
  %10 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %3, align 8
  %11 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %10)
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeISt4pairIKixELb0EEEEERKSaIT_E(%"class.std::allocator.15"* %5, %"class.std::allocator.9"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %4, align 8
  %13 = invoke %"struct.std::__detail::_Hash_node_base"** @_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE8allocateERS3_m(%"class.std::allocator.15"* dereferenceable(1) %5, i64 %12)
          to label %14 unwind label %22

; <label>:14:                                     ; preds = %2
  store %"struct.std::__detail::_Hash_node_base"** %13, %"struct.std::__detail::_Hash_node_base"*** %6, align 8
  %15 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %6, align 8
  %16 = call %"struct.std::__detail::_Hash_node_base"** @_ZSt11__addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_(%"struct.std::__detail::_Hash_node_base"** dereferenceable(8) %15) #3
  store %"struct.std::__detail::_Hash_node_base"** %16, %"struct.std::__detail::_Hash_node_base"*** %9, align 8
  %17 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %9, align 8
  %18 = bitcast %"struct.std::__detail::_Hash_node_base"** %17 to i8*
  %19 = load i64, i64* %4, align 8
  %20 = mul i64 %19, 8
  call void @llvm.memset.p0i8.i64(i8* %18, i8 0, i64 %20, i32 8, i1 false)
  %21 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %9, align 8
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.std::allocator.15"* %5) #3
  ret %"struct.std::__detail::_Hash_node_base"** %21

; <label>:22:                                     ; preds = %2
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  store i8* %24, i8** %7, align 8
  %25 = extractvalue { i8*, i32 } %23, 1
  store i32 %25, i32* %8, align 4
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.std::allocator.15"* %5) #3
  br label %26

; <label>:26:                                     ; preds = %22
  %27 = load i8*, i8** %7, align 8
  %28 = load i32, i32* %8, align 4
  %29 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %30 = insertvalue { i8*, i32 } %29, i32 %28, 1
  resume { i8*, i32 } %30
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node_base"** @_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE8allocateERS3_m(%"class.std::allocator.15"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.15"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %3, align 8
  %6 = bitcast %"class.std::allocator.15"* %5 to %"class.__gnu_cxx::new_allocator.16"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::__detail::_Hash_node_base"** @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"* %6, i64 %7, i8* null)
  ret %"struct.std::__detail::_Hash_node_base"** %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node_base"** @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.351
  %9 = load i32, i32* @y.352
  %10 = sub i32 %8, 317775577
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 317775577
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 737995188, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %97
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 737995188, label %22
    i32 -880562958, label %42
    i32 -934094515, label %79
    i32 65943596, label %82
    i32 357936640, label %83
    i32 1302246905, label %89
  ]

; <label>:21:                                     ; preds = %19
  br label %97

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -880562958, i32 1302246905
  store i32 %41, i32* %18
  br label %97

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %44 = alloca i64, align 8
  store i64* %44, i64** %5
  %45 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %43, align 8
  %46 = load volatile i64*, i64** %5
  store i64 %1, i64* %46, align 8
  store i8* %2, i8** %45, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %43, align 8
  %48 = load volatile i64*, i64** %5
  %49 = load i64, i64* %48, align 8
  %50 = call i64 @_ZNK9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"* %47) #3
  %51 = icmp ugt i64 %49, %50
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.351
  %53 = load i32, i32* @y.352
  %54 = sub i32 %52, -956907427
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -956907427
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 -934094515, i32 1302246905
  store i32 %78, i32* %18
  br label %97

; <label>:79:                                     ; preds = %19
  %80 = load volatile i1, i1* %4
  %81 = select i1 %80, i32 65943596, i32 357936640
  store i32 %81, i32* %18
  br label %97

; <label>:82:                                     ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:83:                                     ; preds = %19
  %84 = load volatile i64*, i64** %5
  %85 = load i64, i64* %84, align 8
  %86 = mul i64 %85, 8
  %87 = call i8* @_Znwm(i64 %86)
  %88 = bitcast i8* %87 to %"struct.std::__detail::_Hash_node_base"**
  ret %"struct.std::__detail::_Hash_node_base"** %88

; <label>:89:                                     ; preds = %19
  %90 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %91 = alloca i64, align 8
  %92 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %90, align 8
  store i64 %1, i64* %91, align 8
  store i8* %2, i8** %92, align 8
  %93 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %90, align 8
  %94 = load i64, i64* %91, align 8
  %95 = call i64 @_ZNK9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"* %93) #3
  %96 = icmp ugt i64 %94, %95
  store i32 -880562958, i32* %18
  br label %97

; <label>:97:                                     ; preds = %89, %79, %42, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.353
  %5 = load i32, i32* @y.354
  %6 = add i32 %4, 219864048
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 219864048
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1396519996, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1396519996, label %18
    i32 600506479, label %38
    i32 -777879909, label %56
    i32 1890060433, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 600506479, i32 1890060433
  store i32 %37, i32* %14
  br label %60

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %39, align 8
  %41 = load i32, i32* @x.353
  %42 = load i32, i32* @y.354
  %43 = sub i32 %41, -459043479
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -459043479
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -777879909, i32 1890060433
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret i64 2305843009213693951

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %58, align 8
  store i32 600506479, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE16_M_allocate_nodeIJRKS4_EEEPS5_DpOT_(%"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::pair"* dereferenceable(16)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %6 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %7 = alloca %"class.std::allocator.12", align 1
  %8 = alloca i8*
  %9 = alloca i32
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %10 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %3, align 8
  %11 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %10)
  %12 = call %"struct.std::__detail::_Hash_node"* @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE8allocateERS6_m(%"class.std::allocator.9"* dereferenceable(1) %11, i64 1)
  store %"struct.std::__detail::_Hash_node"* %12, %"struct.std::__detail::_Hash_node"** %5, align 8
  %13 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %5, align 8
  %14 = call %"struct.std::__detail::_Hash_node"* @_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEPT_RS6_(%"struct.std::__detail::_Hash_node"* dereferenceable(24) %13) #3
  store %"struct.std::__detail::_Hash_node"* %14, %"struct.std::__detail::_Hash_node"** %6, align 8
  %15 = invoke dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %10)
          to label %16 unwind label %111

; <label>:16:                                     ; preds = %2
  %17 = load i32, i32* @x.355
  %18 = load i32, i32* @y.356
  %19 = sub i32 %17, -279521403
  %20 = sub i32 %19, 1
  %21 = add i32 %20, -279521403
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  br i1 %29, label %31, label %452

; <label>:31:                                     ; preds = %16, %452
  call void @_ZNSaISt4pairIKixEEC2INSt8__detail10_Hash_nodeIS1_Lb0EEEEERKSaIT_E(%"class.std::allocator.12"* %7, %"class.std::allocator.9"* dereferenceable(1) %15) #3
  %32 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %6, align 8
  %33 = bitcast %"struct.std::__detail::_Hash_node"* %32 to i8*
  %34 = bitcast i8* %33 to %"struct.std::__detail::_Hash_node"*
  call void @_ZNSt8__detail10_Hash_nodeISt4pairIKixELb0EEC2Ev(%"struct.std::__detail::_Hash_node"* %34) #3
  %35 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %6, align 8
  %36 = bitcast %"struct.std::__detail::_Hash_node"* %35 to %"struct.std::__detail::_Hash_node_value_base"*
  %37 = call %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"* %36) #3
  %38 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %39 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIKixEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair"* dereferenceable(16) %38) #3
  %40 = load i32, i32* @x.355
  %41 = load i32, i32* @y.356
  %42 = add i32 %40, -303922973
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -303922973
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  br i1 %64, label %66, label %452

; <label>:66:                                     ; preds = %31
  invoke void @_ZNSt16allocator_traitsISaISt4pairIKixEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_(%"class.std::allocator.12"* dereferenceable(1) %7, %"struct.std::pair"* %37, %"struct.std::pair"* dereferenceable(16) %39)
          to label %67 unwind label %115

; <label>:67:                                     ; preds = %66
  %68 = load i32, i32* @x.355
  %69 = load i32, i32* @y.356
  %70 = add i32 %68, 957696358
  %71 = sub i32 %70, 1
  %72 = sub i32 %71, 957696358
  %73 = sub i32 %68, 1
  %74 = mul i32 %68, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %69, 10
  %78 = xor i1 %76, true
  %79 = xor i1 %77, true
  %80 = xor i1 false, true
  %81 = and i1 %78, false
  %82 = and i1 %76, %80
  %83 = and i1 %79, false
  %84 = and i1 %77, %80
  %85 = or i1 %81, %82
  %86 = or i1 %83, %84
  %87 = xor i1 %85, %86
  %88 = or i1 %78, %79
  %89 = xor i1 %88, true
  %90 = or i1 false, %80
  %91 = and i1 %89, %90
  %92 = or i1 %87, %91
  %93 = or i1 %76, %77
  br i1 %92, label %94, label %461

; <label>:94:                                     ; preds = %67, %461
  %95 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %6, align 8
  call void @_ZNSaISt4pairIKixEED2Ev(%"class.std::allocator.12"* %7) #3
  %96 = load i32, i32* @x.355
  %97 = load i32, i32* @y.356
  %98 = add i32 %96, -2010036816
  %99 = sub i32 %98, 1
  %100 = sub i32 %99, -2010036816
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = and i1 %104, %105
  %107 = xor i1 %104, %105
  %108 = or i1 %106, %107
  %109 = or i1 %104, %105
  br i1 %108, label %110, label %461

; <label>:110:                                    ; preds = %94
  ret %"struct.std::__detail::_Hash_node"* %95

; <label>:111:                                    ; preds = %2
  %112 = landingpad { i8*, i32 }
          catch i8* null
  %113 = extractvalue { i8*, i32 } %112, 0
  store i8* %113, i8** %8, align 8
  %114 = extractvalue { i8*, i32 } %112, 1
  store i32 %114, i32* %9, align 4
  br label %160

; <label>:115:                                    ; preds = %66
  %116 = load i32, i32* @x.355
  %117 = load i32, i32* @y.356
  %118 = sub i32 %116, 1813158804
  %119 = sub i32 %118, 1
  %120 = add i32 %119, 1813158804
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = and i1 %124, %125
  %127 = xor i1 %124, %125
  %128 = or i1 %126, %127
  %129 = or i1 %124, %125
  br i1 %128, label %130, label %463

; <label>:130:                                    ; preds = %115, %463
  %131 = landingpad { i8*, i32 }
          catch i8* null
  %132 = extractvalue { i8*, i32 } %131, 0
  store i8* %132, i8** %8, align 8
  %133 = extractvalue { i8*, i32 } %131, 1
  store i32 %133, i32* %9, align 4
  call void @_ZNSaISt4pairIKixEED2Ev(%"class.std::allocator.12"* %7) #3
  %134 = load i32, i32* @x.355
  %135 = load i32, i32* @y.356
  %136 = sub i32 0, 1
  %137 = add i32 %134, %136
  %138 = sub i32 %134, 1
  %139 = mul i32 %134, %137
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %135, 10
  %143 = xor i1 %141, true
  %144 = xor i1 %142, true
  %145 = xor i1 true, true
  %146 = and i1 %143, true
  %147 = and i1 %141, %145
  %148 = and i1 %144, true
  %149 = and i1 %142, %145
  %150 = or i1 %146, %147
  %151 = or i1 %148, %149
  %152 = xor i1 %150, %151
  %153 = or i1 %143, %144
  %154 = xor i1 %153, true
  %155 = or i1 true, %145
  %156 = and i1 %154, %155
  %157 = or i1 %152, %156
  %158 = or i1 %141, %142
  br i1 %157, label %159, label %463

; <label>:159:                                    ; preds = %130
  br label %160

; <label>:160:                                    ; preds = %159, %111
  %161 = load i32, i32* @x.355
  %162 = load i32, i32* @y.356
  %163 = sub i32 0, 1
  %164 = add i32 %161, %163
  %165 = sub i32 %161, 1
  %166 = mul i32 %161, %164
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %162, 10
  %170 = and i1 %168, %169
  %171 = xor i1 %168, %169
  %172 = or i1 %170, %171
  %173 = or i1 %168, %169
  br i1 %172, label %174, label %467

; <label>:174:                                    ; preds = %160, %467
  %175 = load i8*, i8** %8, align 8
  %176 = call i8* @__cxa_begin_catch(i8* %175) #3
  %177 = load i32, i32* @x.355
  %178 = load i32, i32* @y.356
  %179 = sub i32 0, 1
  %180 = add i32 %177, %179
  %181 = sub i32 %177, 1
  %182 = mul i32 %177, %180
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %178, 10
  %186 = and i1 %184, %185
  %187 = xor i1 %184, %185
  %188 = or i1 %186, %187
  %189 = or i1 %184, %185
  br i1 %188, label %190, label %467

; <label>:190:                                    ; preds = %174
  %191 = invoke dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %10)
          to label %192 unwind label %195

; <label>:192:                                    ; preds = %190
  %193 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %5, align 8
  invoke void @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE10deallocateERS6_PS5_m(%"class.std::allocator.9"* dereferenceable(1) %191, %"struct.std::__detail::_Hash_node"* %193, i64 1)
          to label %194 unwind label %195

; <label>:194:                                    ; preds = %192
  invoke void @__cxa_rethrow() #12
          to label %398 unwind label %195

; <label>:195:                                    ; preds = %194, %192, %190
  %196 = load i32, i32* @x.355
  %197 = load i32, i32* @y.356
  %198 = add i32 %196, 1284948734
  %199 = sub i32 %198, 1
  %200 = sub i32 %199, 1284948734
  %201 = sub i32 %196, 1
  %202 = mul i32 %196, %200
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %197, 10
  %206 = xor i1 %204, true
  %207 = xor i1 %205, true
  %208 = xor i1 false, true
  %209 = and i1 %206, false
  %210 = and i1 %204, %208
  %211 = and i1 %207, false
  %212 = and i1 %205, %208
  %213 = or i1 %209, %210
  %214 = or i1 %211, %212
  %215 = xor i1 %213, %214
  %216 = or i1 %206, %207
  %217 = xor i1 %216, true
  %218 = or i1 false, %208
  %219 = and i1 %217, %218
  %220 = or i1 %215, %219
  %221 = or i1 %204, %205
  br i1 %220, label %222, label %470

; <label>:222:                                    ; preds = %195, %470
  %223 = landingpad { i8*, i32 }
          cleanup
  %224 = extractvalue { i8*, i32 } %223, 0
  store i8* %224, i8** %8, align 8
  %225 = extractvalue { i8*, i32 } %223, 1
  store i32 %225, i32* %9, align 4
  %226 = load i32, i32* @x.355
  %227 = load i32, i32* @y.356
  %228 = sub i32 %226, -705715108
  %229 = sub i32 %228, 1
  %230 = add i32 %229, -705715108
  %231 = sub i32 %226, 1
  %232 = mul i32 %226, %230
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %227, 10
  %236 = and i1 %234, %235
  %237 = xor i1 %234, %235
  %238 = or i1 %236, %237
  %239 = or i1 %234, %235
  br i1 %238, label %240, label %470

; <label>:240:                                    ; preds = %222
  invoke void @__cxa_end_catch()
          to label %241 unwind label %355

; <label>:241:                                    ; preds = %240
  %242 = load i32, i32* @x.355
  %243 = load i32, i32* @y.356
  %244 = sub i32 %242, -1859985431
  %245 = sub i32 %244, 1
  %246 = add i32 %245, -1859985431
  %247 = sub i32 %242, 1
  %248 = mul i32 %242, %246
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %243, 10
  %252 = xor i1 %250, true
  %253 = xor i1 %251, true
  %254 = xor i1 true, true
  %255 = and i1 %252, true
  %256 = and i1 %250, %254
  %257 = and i1 %253, true
  %258 = and i1 %251, %254
  %259 = or i1 %255, %256
  %260 = or i1 %257, %258
  %261 = xor i1 %259, %260
  %262 = or i1 %252, %253
  %263 = xor i1 %262, true
  %264 = or i1 true, %254
  %265 = and i1 %263, %264
  %266 = or i1 %261, %265
  %267 = or i1 %250, %251
  br i1 %266, label %268, label %474

; <label>:268:                                    ; preds = %241, %474
  %269 = load i32, i32* @x.355
  %270 = load i32, i32* @y.356
  %271 = sub i32 %269, 1439419233
  %272 = sub i32 %271, 1
  %273 = add i32 %272, 1439419233
  %274 = sub i32 %269, 1
  %275 = mul i32 %269, %273
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %270, 10
  %279 = xor i1 %277, true
  %280 = xor i1 %278, true
  %281 = xor i1 false, true
  %282 = and i1 %279, false
  %283 = and i1 %277, %281
  %284 = and i1 %280, false
  %285 = and i1 %278, %281
  %286 = or i1 %282, %283
  %287 = or i1 %284, %285
  %288 = xor i1 %286, %287
  %289 = or i1 %279, %280
  %290 = xor i1 %289, true
  %291 = or i1 false, %281
  %292 = and i1 %290, %291
  %293 = or i1 %288, %292
  %294 = or i1 %277, %278
  br i1 %293, label %295, label %474

; <label>:295:                                    ; preds = %268
  br label %350
                                                  ; No predecessors!
  %297 = load i32, i32* @x.355
  %298 = load i32, i32* @y.356
  %299 = add i32 %297, -1651156304
  %300 = sub i32 %299, 1
  %301 = sub i32 %300, -1651156304
  %302 = sub i32 %297, 1
  %303 = mul i32 %297, %301
  %304 = urem i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %298, 10
  %307 = xor i1 %305, true
  %308 = xor i1 %306, true
  %309 = xor i1 true, true
  %310 = and i1 %307, true
  %311 = and i1 %305, %309
  %312 = and i1 %308, true
  %313 = and i1 %306, %309
  %314 = or i1 %310, %311
  %315 = or i1 %312, %313
  %316 = xor i1 %314, %315
  %317 = or i1 %307, %308
  %318 = xor i1 %317, true
  %319 = or i1 true, %309
  %320 = and i1 %318, %319
  %321 = or i1 %316, %320
  %322 = or i1 %305, %306
  br i1 %321, label %323, label %475

; <label>:323:                                    ; preds = %296, %475
  call void @llvm.trap()
  %324 = load i32, i32* @x.355
  %325 = load i32, i32* @y.356
  %326 = sub i32 0, 1
  %327 = add i32 %324, %326
  %328 = sub i32 %324, 1
  %329 = mul i32 %324, %327
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %325, 10
  %333 = xor i1 %331, true
  %334 = xor i1 %332, true
  %335 = xor i1 false, true
  %336 = and i1 %333, false
  %337 = and i1 %331, %335
  %338 = and i1 %334, false
  %339 = and i1 %332, %335
  %340 = or i1 %336, %337
  %341 = or i1 %338, %339
  %342 = xor i1 %340, %341
  %343 = or i1 %333, %334
  %344 = xor i1 %343, true
  %345 = or i1 false, %335
  %346 = and i1 %344, %345
  %347 = or i1 %342, %346
  %348 = or i1 %331, %332
  br i1 %347, label %349, label %475

; <label>:349:                                    ; preds = %323
  unreachable

; <label>:350:                                    ; preds = %295
  %351 = load i8*, i8** %8, align 8
  %352 = load i32, i32* %9, align 4
  %353 = insertvalue { i8*, i32 } undef, i8* %351, 0
  %354 = insertvalue { i8*, i32 } %353, i32 %352, 1
  resume { i8*, i32 } %354

; <label>:355:                                    ; preds = %240
  %356 = load i32, i32* @x.355
  %357 = load i32, i32* @y.356
  %358 = sub i32 0, 1
  %359 = add i32 %356, %358
  %360 = sub i32 %356, 1
  %361 = mul i32 %356, %359
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %357, 10
  %365 = and i1 %363, %364
  %366 = xor i1 %363, %364
  %367 = or i1 %365, %366
  %368 = or i1 %363, %364
  br i1 %367, label %369, label %476

; <label>:369:                                    ; preds = %355, %476
  %370 = landingpad { i8*, i32 }
          catch i8* null
  %371 = extractvalue { i8*, i32 } %370, 0
  call void @__clang_call_terminate(i8* %371) #11
  %372 = load i32, i32* @x.355
  %373 = load i32, i32* @y.356
  %374 = sub i32 0, 1
  %375 = add i32 %372, %374
  %376 = sub i32 %372, 1
  %377 = mul i32 %372, %375
  %378 = urem i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = icmp slt i32 %373, 10
  %381 = xor i1 %379, true
  %382 = xor i1 %380, true
  %383 = xor i1 false, true
  %384 = and i1 %381, false
  %385 = and i1 %379, %383
  %386 = and i1 %382, false
  %387 = and i1 %380, %383
  %388 = or i1 %384, %385
  %389 = or i1 %386, %387
  %390 = xor i1 %388, %389
  %391 = or i1 %381, %382
  %392 = xor i1 %391, true
  %393 = or i1 false, %383
  %394 = and i1 %392, %393
  %395 = or i1 %390, %394
  %396 = or i1 %379, %380
  br i1 %395, label %397, label %476

; <label>:397:                                    ; preds = %369
  unreachable

; <label>:398:                                    ; preds = %194
  %399 = load i32, i32* @x.355
  %400 = load i32, i32* @y.356
  %401 = sub i32 0, 1
  %402 = add i32 %399, %401
  %403 = sub i32 %399, 1
  %404 = mul i32 %399, %402
  %405 = urem i32 %404, 2
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %400, 10
  %408 = xor i1 %406, true
  %409 = xor i1 %407, true
  %410 = xor i1 false, true
  %411 = and i1 %408, false
  %412 = and i1 %406, %410
  %413 = and i1 %409, false
  %414 = and i1 %407, %410
  %415 = or i1 %411, %412
  %416 = or i1 %413, %414
  %417 = xor i1 %415, %416
  %418 = or i1 %408, %409
  %419 = xor i1 %418, true
  %420 = or i1 false, %410
  %421 = and i1 %419, %420
  %422 = or i1 %417, %421
  %423 = or i1 %406, %407
  br i1 %422, label %424, label %479

; <label>:424:                                    ; preds = %398, %479
  %425 = load i32, i32* @x.355
  %426 = load i32, i32* @y.356
  %427 = add i32 %425, 2069844982
  %428 = sub i32 %427, 1
  %429 = sub i32 %428, 2069844982
  %430 = sub i32 %425, 1
  %431 = mul i32 %425, %429
  %432 = urem i32 %431, 2
  %433 = icmp eq i32 %432, 0
  %434 = icmp slt i32 %426, 10
  %435 = xor i1 %433, true
  %436 = xor i1 %434, true
  %437 = xor i1 false, true
  %438 = and i1 %435, false
  %439 = and i1 %433, %437
  %440 = and i1 %436, false
  %441 = and i1 %434, %437
  %442 = or i1 %438, %439
  %443 = or i1 %440, %441
  %444 = xor i1 %442, %443
  %445 = or i1 %435, %436
  %446 = xor i1 %445, true
  %447 = or i1 false, %437
  %448 = and i1 %446, %447
  %449 = or i1 %444, %448
  %450 = or i1 %433, %434
  br i1 %449, label %451, label %479

; <label>:451:                                    ; preds = %424
  unreachable

; <label>:452:                                    ; preds = %31, %16
  call void @_ZNSaISt4pairIKixEEC2INSt8__detail10_Hash_nodeIS1_Lb0EEEEERKSaIT_E(%"class.std::allocator.12"* %7, %"class.std::allocator.9"* dereferenceable(1) %15) #3
  %453 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %6, align 8
  %454 = bitcast %"struct.std::__detail::_Hash_node"* %453 to i8*
  %455 = bitcast i8* %454 to %"struct.std::__detail::_Hash_node"*
  call void @_ZNSt8__detail10_Hash_nodeISt4pairIKixELb0EEC2Ev(%"struct.std::__detail::_Hash_node"* %455) #3
  %456 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %6, align 8
  %457 = bitcast %"struct.std::__detail::_Hash_node"* %456 to %"struct.std::__detail::_Hash_node_value_base"*
  %458 = call %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"* %457) #3
  %459 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %460 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIKixEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair"* dereferenceable(16) %459) #3
  br label %31

; <label>:461:                                    ; preds = %94, %67
  %462 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %6, align 8
  call void @_ZNSaISt4pairIKixEED2Ev(%"class.std::allocator.12"* %7) #3
  br label %94

; <label>:463:                                    ; preds = %130, %115
  %464 = landingpad { i8*, i32 }
          catch i8* null
  %465 = extractvalue { i8*, i32 } %464, 0
  store i8* %465, i8** %8, align 8
  %466 = extractvalue { i8*, i32 } %464, 1
  store i32 %466, i32* %9, align 4
  call void @_ZNSaISt4pairIKixEED2Ev(%"class.std::allocator.12"* %7) #3
  br label %130

; <label>:467:                                    ; preds = %174, %160
  %468 = load i8*, i8** %8, align 8
  %469 = call i8* @__cxa_begin_catch(i8* %468) #3
  br label %174

; <label>:470:                                    ; preds = %222, %195
  %471 = landingpad { i8*, i32 }
          cleanup
  %472 = extractvalue { i8*, i32 } %471, 0
  store i8* %472, i8** %8, align 8
  %473 = extractvalue { i8*, i32 } %471, 1
  store i32 %473, i32* %9, align 4
  br label %222

; <label>:474:                                    ; preds = %268, %241
  br label %268

; <label>:475:                                    ; preds = %323, %296
  call void @llvm.trap()
  br label %323

; <label>:476:                                    ; preds = %369, %355
  %477 = landingpad { i8*, i32 }
          catch i8* null
  %478 = extractvalue { i8*, i32 } %477, 0
  call void @__clang_call_terminate(i8* %478) #11
  br label %369

; <label>:479:                                    ; preds = %424, %398
  br label %424
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair"* @_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKixEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node_value_base"*, align 8
  store %"struct.std::__detail::_Hash_node_value_base"* %0, %"struct.std::__detail::_Hash_node_value_base"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node_value_base"*, %"struct.std::__detail::_Hash_node_value_base"** %2, align 8
  %4 = call %"struct.std::pair"* @_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"* %3) #3
  ret %"struct.std::pair"* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE8allocateERS6_m(%"class.std::allocator.9"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.9"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %3, align 8
  %6 = bitcast %"class.std::allocator.9"* %5 to %"class.__gnu_cxx::new_allocator.10"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::__detail::_Hash_node"* @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.10"* %6, i64 %7, i8* null)
  ret %"struct.std::__detail::_Hash_node"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail10_Hash_nodeISt4pairIKixELb0EEC2Ev(%"struct.std::__detail::_Hash_node"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_node"* %0, %"struct.std::__detail::_Hash_node"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hash_node"* %3 to %"struct.std::__detail::_Hash_node_value_base"*
  call void @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEEC2Ev(%"struct.std::__detail::_Hash_node_value_base"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIKixEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_(%"class.std::allocator.12"* dereferenceable(1), %"struct.std::pair"*, %"struct.std::pair"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.363
  %7 = load i32, i32* @y.364
  %8 = add i32 %6, -141472091
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -141472091
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -258152739, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %74
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -258152739, label %20
    i32 1312596461, label %40
    i32 -853992864, label %64
    i32 -993630056, label %65
  ]

; <label>:19:                                     ; preds = %17
  br label %74

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1312596461, i32 -993630056
  store i32 %39, i32* %16
  br label %74

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.12"*, align 8
  %42 = alloca %"struct.std::pair"*, align 8
  %43 = alloca %"struct.std::pair"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %41, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %42, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %43, align 8
  %44 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %41, align 8
  %45 = bitcast %"class.std::allocator.12"* %44 to %"class.__gnu_cxx::new_allocator.13"*
  %46 = load %"struct.std::pair"*, %"struct.std::pair"** %42, align 8
  %47 = load %"struct.std::pair"*, %"struct.std::pair"** %43, align 8
  %48 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIKixEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair"* dereferenceable(16) %47) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIKixEE9constructIS3_JRKS3_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.13"* %45, %"struct.std::pair"* %46, %"struct.std::pair"* dereferenceable(16) %48)
  %49 = load i32, i32* @x.363
  %50 = load i32, i32* @y.364
  %51 = add i32 %49, 1630074961
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, 1630074961
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 -853992864, i32 -993630056
  store i32 %63, i32* %16
  br label %74

; <label>:64:                                     ; preds = %17
  ret void

; <label>:65:                                     ; preds = %17
  %66 = alloca %"class.std::allocator.12"*, align 8
  %67 = alloca %"struct.std::pair"*, align 8
  %68 = alloca %"struct.std::pair"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %66, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %67, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %68, align 8
  %69 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %66, align 8
  %70 = bitcast %"class.std::allocator.12"* %69 to %"class.__gnu_cxx::new_allocator.13"*
  %71 = load %"struct.std::pair"*, %"struct.std::pair"** %67, align 8
  %72 = load %"struct.std::pair"*, %"struct.std::pair"** %68, align 8
  %73 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIKixEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair"* dereferenceable(16) %72) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIKixEE9constructIS3_JRKS3_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.13"* %70, %"struct.std::pair"* %71, %"struct.std::pair"* dereferenceable(16) %73)
  store i32 1312596461, i32* %16
  br label %74

; <label>:74:                                     ; preds = %65, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIKixEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair"* dereferenceable(16)) #4 comdat {
  %2 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %2, align 8
  %3 = load %"struct.std::pair"*, %"struct.std::pair"** %2, align 8
  ret %"struct.std::pair"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.10"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.367
  %9 = load i32, i32* @y.368
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 2121071063, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %128
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 2121071063, label %21
    i32 1404859586, label %41
    i32 -1742301611, label %77
    i32 1016710439, label %80
    i32 740985870, label %96
    i32 -1092618630, label %112
    i32 453771012, label %113
    i32 -1208761565, label %119
    i32 -1057644413, label %127
  ]

; <label>:20:                                     ; preds = %18
  br label %128

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1404859586, i32 -1208761565
  store i32 %40, i32* %17
  br label %128

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %43 = alloca i64, align 8
  store i64* %43, i64** %5
  %44 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %42, align 8
  %45 = load volatile i64*, i64** %5
  store i64 %1, i64* %45, align 8
  store i8* %2, i8** %44, align 8
  %46 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %42, align 8
  %47 = load volatile i64*, i64** %5
  %48 = load i64, i64* %47, align 8
  %49 = call i64 @_ZNK9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.10"* %46) #3
  %50 = icmp ugt i64 %48, %49
  store i1 %50, i1* %4
  %51 = load i32, i32* @x.367
  %52 = load i32, i32* @y.368
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -1742301611, i32 -1208761565
  store i32 %76, i32* %17
  br label %128

; <label>:77:                                     ; preds = %18
  %78 = load volatile i1, i1* %4
  %79 = select i1 %78, i32 1016710439, i32 453771012
  store i32 %79, i32* %17
  br label %128

; <label>:80:                                     ; preds = %18
  %81 = load i32, i32* @x.367
  %82 = load i32, i32* @y.368
  %83 = add i32 %81, 570104856
  %84 = sub i32 %83, 1
  %85 = sub i32 %84, 570104856
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  %95 = select i1 %93, i32 740985870, i32 -1057644413
  store i32 %95, i32* %17
  br label %128

; <label>:96:                                     ; preds = %18
  call void @_ZSt17__throw_bad_allocv() #12
  %97 = load i32, i32* @x.367
  %98 = load i32, i32* @y.368
  %99 = add i32 %97, 2086400186
  %100 = sub i32 %99, 1
  %101 = sub i32 %100, 2086400186
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  %111 = select i1 %109, i32 -1092618630, i32 -1057644413
  store i32 %111, i32* %17
  br label %128

; <label>:112:                                    ; preds = %18
  unreachable

; <label>:113:                                    ; preds = %18
  %114 = load volatile i64*, i64** %5
  %115 = load i64, i64* %114, align 8
  %116 = mul i64 %115, 24
  %117 = call i8* @_Znwm(i64 %116)
  %118 = bitcast i8* %117 to %"struct.std::__detail::_Hash_node"*
  ret %"struct.std::__detail::_Hash_node"* %118

; <label>:119:                                    ; preds = %18
  %120 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %121 = alloca i64, align 8
  %122 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %120, align 8
  store i64 %1, i64* %121, align 8
  store i8* %2, i8** %122, align 8
  %123 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %120, align 8
  %124 = load i64, i64* %121, align 8
  %125 = call i64 @_ZNK9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.10"* %123) #3
  %126 = icmp ugt i64 %124, %125
  store i32 1404859586, i32* %17
  br label %128

; <label>:127:                                    ; preds = %18
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 740985870, i32* %17
  br label %128

; <label>:128:                                    ; preds = %127, %119, %96, %80, %77, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.10"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEEC2Ev(%"struct.std::__detail::_Hash_node_value_base"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node_value_base"*, align 8
  store %"struct.std::__detail::_Hash_node_value_base"* %0, %"struct.std::__detail::_Hash_node_value_base"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node_value_base"*, %"struct.std::__detail::_Hash_node_value_base"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hash_node_value_base"* %3 to %"struct.std::__detail::_Hash_node_base"*
  call void @_ZNSt8__detail15_Hash_node_baseC2Ev(%"struct.std::__detail::_Hash_node_base"* %4) #3
  %5 = getelementptr inbounds %"struct.std::__detail::_Hash_node_value_base", %"struct.std::__detail::_Hash_node_value_base"* %3, i32 0, i32 1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIKixEE9constructIS3_JRKS3_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.13"*, %"struct.std::pair"*, %"struct.std::pair"* dereferenceable(16)) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  %5 = alloca %"struct.std::pair"*, align 8
  %6 = alloca %"struct.std::pair"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %4, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %5, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %4, align 8
  %8 = load %"struct.std::pair"*, %"struct.std::pair"** %5, align 8
  %9 = bitcast %"struct.std::pair"* %8 to i8*
  %10 = bitcast i8* %9 to %"struct.std::pair"*
  %11 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %12 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIKixEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair"* dereferenceable(16) %11) #3
  %13 = bitcast %"struct.std::pair"* %10 to i8*
  %14 = bitcast %"struct.std::pair"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 16, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"* @_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node_value_base"*, align 8
  store %"struct.std::__detail::_Hash_node_value_base"* %0, %"struct.std::__detail::_Hash_node_value_base"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node_value_base"*, %"struct.std::__detail::_Hash_node_value_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::__detail::_Hash_node_value_base", %"struct.std::__detail::_Hash_node_value_base"* %3, i32 0, i32 1
  %5 = call %"struct.std::pair"* @_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKixEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_buffer"* %4) #3
  ret %"struct.std::pair"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"* @_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKixEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_buffer"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_buffer"*, align 8
  store %"struct.__gnu_cxx::__aligned_buffer"* %0, %"struct.__gnu_cxx::__aligned_buffer"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_buffer"*, %"struct.__gnu_cxx::__aligned_buffer"** %2, align 8
  %4 = call i8* @_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKixEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_buffer"* %3) #3
  %5 = bitcast i8* %4 to %"struct.std::pair"*
  ret %"struct.std::pair"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKixEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_buffer"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_buffer"*, align 8
  store %"struct.__gnu_cxx::__aligned_buffer"* %0, %"struct.__gnu_cxx::__aligned_buffer"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_buffer"*, %"struct.__gnu_cxx::__aligned_buffer"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_buffer", %"struct.__gnu_cxx::__aligned_buffer"* %3, i32 0, i32 0
  %5 = bitcast %"union.std::aligned_storage<16, 8>::type"* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE15_M_bucket_indexEPKNS_10_Hash_nodeIS3_Lb0EEEm(%"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_node"*, i64) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.381
  %5 = load i32, i32* @y.382
  %6 = sub i32 %4, -1992567781
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1992567781
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %114

; <label>:18:                                     ; preds = %3, %114
  %19 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  %20 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %21 = alloca i64, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %19, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %20, align 8
  store i64 %2, i64* %21, align 8
  %22 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %19, align 8
  %23 = load i32, i32* @x.381
  %24 = load i32, i32* @y.382
  %25 = sub i32 0, 1
  %26 = add i32 %23, %25
  %27 = sub i32 %23, 1
  %28 = mul i32 %23, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %24, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  br i1 %34, label %36, label %114

; <label>:36:                                     ; preds = %18
  %37 = invoke dereferenceable(1) %"struct.std::__detail::_Mod_range_hashing"* @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE5_M_h2Ev(%"struct.std::__detail::_Hash_code_base"* %22)
          to label %38 unwind label %111

; <label>:38:                                     ; preds = %36
  %39 = invoke dereferenceable(1) %"struct.std::hash"* @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE5_M_h1Ev(%"struct.std::__detail::_Hash_code_base"* %22)
          to label %40 unwind label %111

; <label>:40:                                     ; preds = %38
  %41 = load i32, i32* @x.381
  %42 = load i32, i32* @y.382
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  br i1 %52, label %54, label %119

; <label>:54:                                     ; preds = %40, %119
  %55 = load i32, i32* @x.381
  %56 = load i32, i32* @y.382
  %57 = add i32 %55, 743023154
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, 743023154
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  br i1 %67, label %69, label %119

; <label>:69:                                     ; preds = %54
  %70 = invoke dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE10_M_extractEv(%"struct.std::__detail::_Hash_code_base"* %22)
          to label %71 unwind label %111

; <label>:71:                                     ; preds = %69
  %72 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %20, align 8
  %73 = bitcast %"struct.std::__detail::_Hash_node"* %72 to %"struct.std::__detail::_Hash_node_value_base"*
  %74 = call dereferenceable(16) %"struct.std::pair"* @_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKixEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base"* %73) #3
  %75 = invoke dereferenceable(4) i32* @_ZNKSt8__detail10_Select1stclIRKSt4pairIKixEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS7_(%"struct.std::__detail::_Select1st"* %70, %"struct.std::pair"* dereferenceable(16) %74)
          to label %76 unwind label %111

; <label>:76:                                     ; preds = %71
  %77 = load i32, i32* @x.381
  %78 = load i32, i32* @y.382
  %79 = sub i32 %77, 888723736
  %80 = sub i32 %79, 1
  %81 = add i32 %80, 888723736
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = and i1 %85, %86
  %88 = xor i1 %85, %86
  %89 = or i1 %87, %88
  %90 = or i1 %85, %86
  br i1 %89, label %91, label %120

; <label>:91:                                     ; preds = %76, %120
  %92 = load i32, i32* %75, align 4
  %93 = call i64 @_ZNKSt4hashIiEclEi(%"struct.std::hash"* %39, i32 %92) #3
  %94 = load i64, i64* %21, align 8
  %95 = call i64 @_ZNKSt8__detail18_Mod_range_hashingclEmm(%"struct.std::__detail::_Mod_range_hashing"* %37, i64 %93, i64 %94) #3
  %96 = load i32, i32* @x.381
  %97 = load i32, i32* @y.382
  %98 = sub i32 %96, -525741410
  %99 = sub i32 %98, 1
  %100 = add i32 %99, -525741410
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = and i1 %104, %105
  %107 = xor i1 %104, %105
  %108 = or i1 %106, %107
  %109 = or i1 %104, %105
  br i1 %108, label %110, label %120

; <label>:110:                                    ; preds = %91
  ret i64 %95

; <label>:111:                                    ; preds = %71, %69, %38, %36
  %112 = landingpad { i8*, i32 }
          catch i8* null
  %113 = extractvalue { i8*, i32 } %112, 0
  call void @__clang_call_terminate(i8* %113) #11
  unreachable

; <label>:114:                                    ; preds = %18, %3
  %115 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  %116 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %117 = alloca i64, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %115, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %116, align 8
  store i64 %2, i64* %117, align 8
  %118 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %115, align 8
  br label %18

; <label>:119:                                    ; preds = %54, %40
  br label %54

; <label>:120:                                    ; preds = %91, %76
  %121 = load i32, i32* %75, align 4
  %122 = call i64 @_ZNKSt4hashIiEclEi(%"struct.std::hash"* %39, i32 %121) #3
  %123 = load i64, i64* %21, align 8
  %124 = call i64 @_ZNKSt8__detail18_Mod_range_hashingclEmm(%"struct.std::__detail::_Mod_range_hashing"* %37, i64 %122, i64 %123) #3
  br label %91
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(1) %"struct.std::__detail::_Mod_range_hashing"* @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE5_M_h2Ev(%"struct.std::__detail::_Hash_code_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Mod_range_hashing"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.383
  %6 = load i32, i32* @y.384
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 85006019, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 85006019, label %18
    i32 -312009508, label %26
    i32 -1264937742, label %57
    i32 2128236830, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -312009508, i32 2128236830
  store i32 %25, i32* %14
  br label %64

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %27, align 8
  %28 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %27, align 8
  %29 = bitcast %"struct.std::__detail::_Hash_code_base"* %28 to %"struct.std::__detail::_Hashtable_ebo_helper.6"*
  %30 = call dereferenceable(1) %"struct.std::__detail::_Mod_range_hashing"* @_ZNSt8__detail21_Hashtable_ebo_helperILi2ENS_18_Mod_range_hashingELb1EE7_S_cgetERKS2_(%"struct.std::__detail::_Hashtable_ebo_helper.6"* dereferenceable(1) %29)
  store %"struct.std::__detail::_Mod_range_hashing"* %30, %"struct.std::__detail::_Mod_range_hashing"** %2
  %31 = load i32, i32* @x.383
  %32 = load i32, i32* @y.384
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1264937742, i32 2128236830
  store i32 %56, i32* %14
  br label %64

; <label>:57:                                     ; preds = %15
  %58 = load volatile %"struct.std::__detail::_Mod_range_hashing"*, %"struct.std::__detail::_Mod_range_hashing"** %2
  ret %"struct.std::__detail::_Mod_range_hashing"* %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %60, align 8
  %61 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %60, align 8
  %62 = bitcast %"struct.std::__detail::_Hash_code_base"* %61 to %"struct.std::__detail::_Hashtable_ebo_helper.6"*
  %63 = call dereferenceable(1) %"struct.std::__detail::_Mod_range_hashing"* @_ZNSt8__detail21_Hashtable_ebo_helperILi2ENS_18_Mod_range_hashingELb1EE7_S_cgetERKS2_(%"struct.std::__detail::_Hashtable_ebo_helper.6"* dereferenceable(1) %62)
  store i32 -312009508, i32* %14
  br label %64

; <label>:64:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt8__detail18_Mod_range_hashingclEmm(%"struct.std::__detail::_Mod_range_hashing"*, i64, i64) #4 comdat align 2 {
  %4 = alloca %"struct.std::__detail::_Mod_range_hashing"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store %"struct.std::__detail::_Mod_range_hashing"* %0, %"struct.std::__detail::_Mod_range_hashing"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::__detail::_Mod_range_hashing"*, %"struct.std::__detail::_Mod_range_hashing"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i64, i64* %6, align 8
  %10 = urem i64 %8, %9
  ret i64 %10
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(1) %"struct.std::hash"* @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE5_M_h1Ev(%"struct.std::__detail::_Hash_code_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hash_code_base"* %3 to %"struct.std::__detail::_Hashtable_ebo_helper.5"*
  %5 = call dereferenceable(1) %"struct.std::hash"* @_ZNSt8__detail21_Hashtable_ebo_helperILi1ESt4hashIiELb1EE7_S_cgetERKS3_(%"struct.std::__detail::_Hashtable_ebo_helper.5"* dereferenceable(1) %4)
  ret %"struct.std::hash"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt4hashIiEclEi(%"struct.std::hash"*, i32) #4 comdat align 2 {
  %3 = alloca %"struct.std::hash"*, align 8
  %4 = alloca i32, align 4
  store %"struct.std::hash"* %0, %"struct.std::hash"** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %"struct.std::hash"*, %"struct.std::hash"** %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = sext i32 %6 to i64
  ret i64 %7
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE10_M_extractEv(%"struct.std::__detail::_Hash_code_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hash_code_base"* %3 to %"struct.std::__detail::_Hashtable_ebo_helper"*
  %5 = call dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_10_Select1stELb1EE7_S_cgetERKS2_(%"struct.std::__detail::_Hashtable_ebo_helper"* dereferenceable(1) %4)
  ret %"struct.std::__detail::_Select1st"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNKSt8__detail10_Select1stclIRKSt4pairIKixEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS7_(%"struct.std::__detail::_Select1st"*, %"struct.std::pair"* dereferenceable(16)) #4 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Select1st"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::__detail::_Select1st"* %0, %"struct.std::__detail::_Select1st"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"struct.std::__detail::_Select1st"*, %"struct.std::__detail::_Select1st"** %3, align 8
  %6 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %7 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIKixEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair"* dereferenceable(16) %6) #3
  %8 = call dereferenceable(4) i32* @_ZSt3getILm0EKixERKNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERKS5_(%"struct.std::pair"* dereferenceable(16) %7) #3
  ret i32* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::__detail::_Mod_range_hashing"* @_ZNSt8__detail21_Hashtable_ebo_helperILi2ENS_18_Mod_range_hashingELb1EE7_S_cgetERKS2_(%"struct.std::__detail::_Hashtable_ebo_helper.6"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.6"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.6"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.6"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_ebo_helper.6"*, %"struct.std::__detail::_Hashtable_ebo_helper.6"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.6"* %3 to %"struct.std::__detail::_Mod_range_hashing"*
  ret %"struct.std::__detail::_Mod_range_hashing"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::hash"* @_ZNSt8__detail21_Hashtable_ebo_helperILi1ESt4hashIiELb1EE7_S_cgetERKS3_(%"struct.std::__detail::_Hashtable_ebo_helper.5"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.5"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.5"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.5"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_ebo_helper.5"*, %"struct.std::__detail::_Hashtable_ebo_helper.5"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.5"* %3 to %"struct.std::hash"*
  ret %"struct.std::hash"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_10_Select1stELb1EE7_S_cgetERKS2_(%"struct.std::__detail::_Hashtable_ebo_helper"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Select1st"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.399
  %6 = load i32, i32* @y.400
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 827835833, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %63
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 827835833, label %18
    i32 393249877, label %26
    i32 832158689, label %57
    i32 775941353, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %63

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 393249877, i32 775941353
  store i32 %25, i32* %14
  br label %63

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::__detail::_Hashtable_ebo_helper"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper"* %0, %"struct.std::__detail::_Hashtable_ebo_helper"** %27, align 8
  %28 = load %"struct.std::__detail::_Hashtable_ebo_helper"*, %"struct.std::__detail::_Hashtable_ebo_helper"** %27, align 8
  %29 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper"* %28 to %"struct.std::__detail::_Select1st"*
  store %"struct.std::__detail::_Select1st"* %29, %"struct.std::__detail::_Select1st"** %2
  %30 = load i32, i32* @x.399
  %31 = load i32, i32* @y.400
  %32 = add i32 %30, 1087067713
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 1087067713
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 832158689, i32 775941353
  store i32 %56, i32* %14
  br label %63

; <label>:57:                                     ; preds = %15
  %58 = load volatile %"struct.std::__detail::_Select1st"*, %"struct.std::__detail::_Select1st"** %2
  ret %"struct.std::__detail::_Select1st"* %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"struct.std::__detail::_Hashtable_ebo_helper"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper"* %0, %"struct.std::__detail::_Hashtable_ebo_helper"** %60, align 8
  %61 = load %"struct.std::__detail::_Hashtable_ebo_helper"*, %"struct.std::__detail::_Hashtable_ebo_helper"** %60, align 8
  %62 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper"* %61 to %"struct.std::__detail::_Select1st"*
  store i32 393249877, i32* %14
  br label %63

; <label>:63:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3getILm0EKixERKNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERKS5_(%"struct.std::pair"* dereferenceable(16)) #4 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.401
  %6 = load i32, i32* @y.402
  %7 = add i32 %5, 1333874360
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1333874360
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 745543688, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 745543688, label %19
    i32 -1467345502, label %27
    i32 127482110, label %57
    i32 -210684411, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1467345502, i32 -210684411
  store i32 %26, i32* %15
  br label %63

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %28, align 8
  %29 = load %"struct.std::pair"*, %"struct.std::pair"** %28, align 8
  %30 = call dereferenceable(4) i32* @_ZNSt10__pair_getILm0EE11__const_getIKixEERKT_RKSt4pairIS3_T0_E(%"struct.std::pair"* dereferenceable(16) %29) #3
  store i32* %30, i32** %2
  %31 = load i32, i32* @x.401
  %32 = load i32, i32* @y.402
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 127482110, i32 -210684411
  store i32 %56, i32* %15
  br label %63

; <label>:57:                                     ; preds = %16
  %58 = load volatile i32*, i32** %2
  ret i32* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %60, align 8
  %61 = load %"struct.std::pair"*, %"struct.std::pair"** %60, align 8
  %62 = call dereferenceable(4) i32* @_ZNSt10__pair_getILm0EE11__const_getIKixEERKT_RKSt4pairIS3_T0_E(%"struct.std::pair"* dereferenceable(16) %61) #3
  store i32 -1467345502, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt10__pair_getILm0EE11__const_getIKixEERKT_RKSt4pairIS3_T0_E(%"struct.std::pair"* dereferenceable(16)) #4 comdat align 2 {
  %2 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %2, align 8
  %3 = load %"struct.std::pair"*, %"struct.std::pair"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %3, i32 0, i32 0
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEC2ERKSC_(%"class.__gnu_cxx::__normal_iterator.18"*, %"class.std::unordered_map"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.18"*, align 8
  %4 = alloca %"class.std::unordered_map"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.18"* %0, %"class.__gnu_cxx::__normal_iterator.18"** %3, align 8
  store %"class.std::unordered_map"** %1, %"class.std::unordered_map"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.18"*, %"class.__gnu_cxx::__normal_iterator.18"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %5, i32 0, i32 0
  %7 = load %"class.std::unordered_map"**, %"class.std::unordered_map"*** %4, align 8
  %8 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  store %"class.std::unordered_map"* %8, %"class.std::unordered_map"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEEvT_SH_(%"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %3, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %7, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %4, i32 0, i32 0
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %8, align 8
  %9 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %5 to i8*
  %10 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 8, i32 8, i1 false)
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %6 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %5, i32 0, i32 0
  %14 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %13, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %6, i32 0, i32 0
  %16 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %15, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISD_SaISD_EEEEEEvT_SJ_(%"class.std::unordered_map"* %14, %"class.std::unordered_map"* %16)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISD_SaISD_EEEEEEvT_SJ_(%"class.std::unordered_map"*, %"class.std::unordered_map"*) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %3, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %5, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %4, i32 0, i32 0
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %6, align 8
  %7 = alloca i32
  store i32 413455428, i32* %7
  br label %8

; <label>:8:                                      ; preds = %2, %20
  %9 = load i32, i32* %7
  switch i32 %9, label %10 [
    i32 413455428, label %11
    i32 296559797, label %14
    i32 -1071581186, label %17
    i32 -668659014, label %19
  ]

; <label>:10:                                     ; preds = %8
  br label %20

; <label>:11:                                     ; preds = %8
  %12 = call zeroext i1 @_ZN9__gnu_cxxneIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEEbRKNS_17__normal_iteratorIT_T0_EESK_(%"class.__gnu_cxx::__normal_iterator.19"* dereferenceable(8) %3, %"class.__gnu_cxx::__normal_iterator.19"* dereferenceable(8) %4) #3
  %13 = select i1 %12, i32 296559797, i32 -668659014
  store i32 %13, i32* %7
  br label %20

; <label>:14:                                     ; preds = %8
  %15 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.19"* %3) #3
  %16 = call %"class.std::unordered_map"* @_ZSt11__addressofISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEPT_RSA_(%"class.std::unordered_map"* dereferenceable(56) %15) #3
  call void @_ZSt8_DestroyISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvPT_(%"class.std::unordered_map"* %16)
  store i32 -1071581186, i32* %7
  br label %20

; <label>:17:                                     ; preds = %8
  %18 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.19"* @_ZN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEppEv(%"class.__gnu_cxx::__normal_iterator.19"* %3) #3
  store i32 413455428, i32* %7
  br label %20

; <label>:19:                                     ; preds = %8
  ret void

; <label>:20:                                     ; preds = %17, %14, %11, %10
  br label %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEEbRKNS_17__normal_iteratorIT_T0_EESK_(%"class.__gnu_cxx::__normal_iterator.19"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.19"* dereferenceable(8)) #4 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.19"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.19"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.19"* %0, %"class.__gnu_cxx::__normal_iterator.19"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.19"* %1, %"class.__gnu_cxx::__normal_iterator.19"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %3, align 8
  %6 = call dereferenceable(8) %"class.std::unordered_map"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.19"* %5) #3
  %7 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %4, align 8
  %9 = call dereferenceable(8) %"class.std::unordered_map"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.19"* %8) #3
  %10 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %9, align 8
  %11 = icmp ne %"class.std::unordered_map"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(56) %"class.std::unordered_map"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.19"*) #4 comdat align 2 {
  %2 = alloca %"class.std::unordered_map"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.413
  %6 = load i32, i32* @y.414
  %7 = add i32 %5, 693242426
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 693242426
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1756040874, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1756040874, label %19
    i32 -1662867116, label %27
    i32 -1747264843, label %47
    i32 -86687673, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1662867116, i32 -86687673
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.19"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.19"* %0, %"class.__gnu_cxx::__normal_iterator.19"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %28, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %29, i32 0, i32 0
  %31 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %30, align 8
  store %"class.std::unordered_map"* %31, %"class.std::unordered_map"** %2
  %32 = load i32, i32* @x.413
  %33 = load i32, i32* @y.414
  %34 = add i32 %32, -729313608
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -729313608
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -1747264843, i32 -86687673
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile %"class.std::unordered_map"*, %"class.std::unordered_map"** %2
  ret %"class.std::unordered_map"* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.__gnu_cxx::__normal_iterator.19"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.19"* %0, %"class.__gnu_cxx::__normal_iterator.19"** %50, align 8
  %51 = load %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %50, align 8
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %51, i32 0, i32 0
  %53 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %52, align 8
  store i32 -1662867116, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.19"* @_ZN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEppEv(%"class.__gnu_cxx::__normal_iterator.19"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.19"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.415
  %6 = load i32, i32* @y.416
  %7 = add i32 %5, -1168971386
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1168971386
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2134799100, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2134799100, label %19
    i32 -1613955404, label %39
    i32 1006262554, label %60
    i32 2136940093, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1613955404, i32 2136940093
  store i32 %38, i32* %15
  br label %68

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.19"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.19"* %0, %"class.__gnu_cxx::__normal_iterator.19"** %40, align 8
  %41 = load %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %40, align 8
  store %"class.__gnu_cxx::__normal_iterator.19"* %41, %"class.__gnu_cxx::__normal_iterator.19"** %2
  %42 = load volatile %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %2
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %42, i32 0, i32 0
  %44 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %43, align 8
  %45 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %44, i32 1
  store %"class.std::unordered_map"* %45, %"class.std::unordered_map"** %43, align 8
  %46 = load i32, i32* @x.415
  %47 = load i32, i32* @y.416
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 1006262554, i32 2136940093
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %2
  ret %"class.__gnu_cxx::__normal_iterator.19"* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.__gnu_cxx::__normal_iterator.19"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.19"* %0, %"class.__gnu_cxx::__normal_iterator.19"** %63, align 8
  %64 = load %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %63, align 8
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %64, i32 0, i32 0
  %66 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %65, align 8
  %67 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %66, i32 1
  store %"class.std::unordered_map"* %67, %"class.std::unordered_map"** %65, align 8
  store i32 -1613955404, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::unordered_map"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.19"*) #4 comdat align 2 {
  %2 = alloca %"class.std::unordered_map"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.417
  %6 = load i32, i32* @y.418
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1980114517, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1980114517, label %18
    i32 632772335, label %38
    i32 913586133, label %56
    i32 449164703, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 632772335, i32 449164703
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.19"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.19"* %0, %"class.__gnu_cxx::__normal_iterator.19"** %39, align 8
  %40 = load %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %39, align 8
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %40, i32 0, i32 0
  store %"class.std::unordered_map"** %41, %"class.std::unordered_map"*** %2
  %42 = load i32, i32* @x.417
  %43 = load i32, i32* @y.418
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 913586133, i32 449164703
  store i32 %55, i32* %14
  br label %62

; <label>:56:                                     ; preds = %15
  %57 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %2
  ret %"class.std::unordered_map"** %57

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.__gnu_cxx::__normal_iterator.19"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.19"* %0, %"class.__gnu_cxx::__normal_iterator.19"** %59, align 8
  %60 = load %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %59, align 8
  %61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %60, i32 0, i32 0
  store i32 632772335, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEENS1_IPSB_SG_EEET1_T0_SL_SK_(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %8 = alloca %"class.std::unordered_map"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %5, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %6, i32 0, i32 0
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %7, i32 0, i32 0
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %14, align 8
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %9 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %9, i32 0, i32 0
  %18 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %17, align 8
  %19 = call %"class.std::unordered_map"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEENSt11_Niter_baseIT_E13iterator_typeESJ_(%"class.std::unordered_map"* %18)
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %10 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %10, i32 0, i32 0
  %23 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %22, align 8
  %24 = call %"class.std::unordered_map"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEENSt11_Niter_baseIT_E13iterator_typeESJ_(%"class.std::unordered_map"* %23)
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %11 to i8*
  %26 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 8, i1 false)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %11, i32 0, i32 0
  %28 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %27, align 8
  %29 = call %"class.std::unordered_map"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEENSt11_Niter_baseIT_E13iterator_typeESI_(%"class.std::unordered_map"* %28)
  %30 = call %"class.std::unordered_map"* @_ZSt13__copy_move_aILb0EPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEPS9_ET1_T0_SE_SD_(%"class.std::unordered_map"* %19, %"class.std::unordered_map"* %24, %"class.std::unordered_map"* %29)
  store %"class.std::unordered_map"* %30, %"class.std::unordered_map"** %8, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEC2ERKSB_(%"class.__gnu_cxx::__normal_iterator.19"* %4, %"class.std::unordered_map"** dereferenceable(8) %8) #3
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %4, i32 0, i32 0
  %32 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %31, align 8
  ret %"class.std::unordered_map"* %32
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEENSt11_Miter_baseIT_E13iterator_typeESJ_(%"class.std::unordered_map"*) #0 comdat {
  %2 = alloca %"class.std::unordered_map"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.421
  %6 = load i32, i32* @y.422
  %7 = add i32 %5, 1166945557
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1166945557
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1164100333, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %82
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1164100333, label %19
    i32 504779750, label %27
    i32 182417611, label %67
    i32 -1093085756, label %69
  ]

; <label>:18:                                     ; preds = %16
  br label %82

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 504779750, i32 -1093085756
  store i32 %26, i32* %15
  br label %82

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %29, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %31, align 8
  %32 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %30 to i8*
  %33 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 8, i32 8, i1 false)
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %30, i32 0, i32 0
  %35 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %34, align 8
  %36 = call %"class.std::unordered_map"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEELb0EE7_S_baseESH_(%"class.std::unordered_map"* %35)
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %28, i32 0, i32 0
  store %"class.std::unordered_map"* %36, %"class.std::unordered_map"** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %28, i32 0, i32 0
  %39 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %38, align 8
  store %"class.std::unordered_map"* %39, %"class.std::unordered_map"** %2
  %40 = load i32, i32* @x.421
  %41 = load i32, i32* @y.422
  %42 = add i32 %40, -1072890637
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -1072890637
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 182417611, i32 -1093085756
  store i32 %66, i32* %15
  br label %82

; <label>:67:                                     ; preds = %16
  %68 = load volatile %"class.std::unordered_map"*, %"class.std::unordered_map"** %2
  ret %"class.std::unordered_map"* %68

; <label>:69:                                     ; preds = %16
  %70 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %71 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %72 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %73 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %71, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %73, align 8
  %74 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %72 to i8*
  %75 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %74, i8* %75, i64 8, i32 8, i1 false)
  %76 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %72, i32 0, i32 0
  %77 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %76, align 8
  %78 = call %"class.std::unordered_map"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEELb0EE7_S_baseESH_(%"class.std::unordered_map"* %77)
  %79 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %70, i32 0, i32 0
  store %"class.std::unordered_map"* %78, %"class.std::unordered_map"** %79, align 8
  %80 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %70, i32 0, i32 0
  %81 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %80, align 8
  store i32 504779750, i32* %15
  br label %82

; <label>:82:                                     ; preds = %69, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt13__copy_move_aILb0EPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEPS9_ET1_T0_SE_SD_(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat {
  %4 = alloca %"class.std::unordered_map"*, align 8
  %5 = alloca %"class.std::unordered_map"*, align 8
  %6 = alloca %"class.std::unordered_map"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %4, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %5, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %6, align 8
  store i8 0, i8* %7, align 1
  %8 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %9 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %5, align 8
  %10 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  %11 = call %"class.std::unordered_map"* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEPSC_EET0_T_SH_SG_(%"class.std::unordered_map"* %8, %"class.std::unordered_map"* %9, %"class.std::unordered_map"* %10)
  ret %"class.std::unordered_map"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEENSt11_Niter_baseIT_E13iterator_typeESJ_(%"class.std::unordered_map"*) #0 comdat {
  %2 = alloca %"class.std::unordered_map"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.425
  %6 = load i32, i32* @y.426
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1318853479, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %85
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1318853479, label %18
    i32 2066325318, label %38
    i32 -1939570897, label %74
    i32 -1374041518, label %76
  ]

; <label>:17:                                     ; preds = %15
  br label %85

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 2066325318, i32 -1374041518
  store i32 %37, i32* %14
  br label %85

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %39, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %41, align 8
  %42 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %40 to i8*
  %43 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 8, i32 8, i1 false)
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %40, i32 0, i32 0
  %45 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %44, align 8
  %46 = call %"class.std::unordered_map"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEELb1EE7_S_baseESH_(%"class.std::unordered_map"* %45)
  store %"class.std::unordered_map"* %46, %"class.std::unordered_map"** %2
  %47 = load i32, i32* @x.425
  %48 = load i32, i32* @y.426
  %49 = add i32 %47, -1216270393
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -1216270393
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -1939570897, i32 -1374041518
  store i32 %73, i32* %14
  br label %85

; <label>:74:                                     ; preds = %15
  %75 = load volatile %"class.std::unordered_map"*, %"class.std::unordered_map"** %2
  ret %"class.std::unordered_map"* %75

; <label>:76:                                     ; preds = %15
  %77 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %78 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %79 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %77, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %79, align 8
  %80 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %78 to i8*
  %81 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %80, i8* %81, i64 8, i32 8, i1 false)
  %82 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %78, i32 0, i32 0
  %83 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %82, align 8
  %84 = call %"class.std::unordered_map"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEELb1EE7_S_baseESH_(%"class.std::unordered_map"* %83)
  store i32 2066325318, i32* %14
  br label %85

; <label>:85:                                     ; preds = %76, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEENSt11_Niter_baseIT_E13iterator_typeESI_(%"class.std::unordered_map"*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %2, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %3, i32 0, i32 0
  %8 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  %9 = call %"class.std::unordered_map"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEELb1EE7_S_baseESG_(%"class.std::unordered_map"* %8)
  ret %"class.std::unordered_map"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEC2ERKSB_(%"class.__gnu_cxx::__normal_iterator.19"*, %"class.std::unordered_map"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.19"*, align 8
  %4 = alloca %"class.std::unordered_map"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.19"* %0, %"class.__gnu_cxx::__normal_iterator.19"** %3, align 8
  store %"class.std::unordered_map"** %1, %"class.std::unordered_map"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %5, i32 0, i32 0
  %7 = load %"class.std::unordered_map"**, %"class.std::unordered_map"*** %4, align 8
  %8 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  store %"class.std::unordered_map"* %8, %"class.std::unordered_map"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEPSC_EET0_T_SH_SG_(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat align 2 {
  %4 = alloca %"class.std::unordered_map"*, align 8
  %5 = alloca %"class.std::unordered_map"*, align 8
  %6 = alloca %"class.std::unordered_map"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %4, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %5, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %6, align 8
  %8 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %5, align 8
  %9 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %10 = ptrtoint %"class.std::unordered_map"* %8 to i64
  %11 = ptrtoint %"class.std::unordered_map"* %9 to i64
  %12 = sub i64 %10, -4367445138457260358
  %13 = sub i64 %12, %11
  %14 = add i64 %13, -4367445138457260358
  %15 = sub i64 %10, %11
  %16 = sdiv exact i64 %14, 56
  store i64 %16, i64* %7, align 8
  %17 = alloca i32
  store i32 -435975987, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %41
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -435975987, label %21
    i32 265422260, label %25
    i32 93216691, label %33
    i32 801811951, label %39
  ]

; <label>:20:                                     ; preds = %18
  br label %41

; <label>:21:                                     ; preds = %18
  %22 = load i64, i64* %7, align 8
  %23 = icmp sgt i64 %22, 0
  %24 = select i1 %23, i32 265422260, i32 801811951
  store i32 %24, i32* %17
  br label %41

; <label>:25:                                     ; preds = %18
  %26 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %27 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  %28 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEaSERKS8_(%"class.std::unordered_map"* %27, %"class.std::unordered_map"* dereferenceable(56) %26)
  %29 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %30 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %29, i32 1
  store %"class.std::unordered_map"* %30, %"class.std::unordered_map"** %4, align 8
  %31 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  %32 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %31, i32 1
  store %"class.std::unordered_map"* %32, %"class.std::unordered_map"** %6, align 8
  store i32 93216691, i32* %17
  br label %41

; <label>:33:                                     ; preds = %18
  %34 = load i64, i64* %7, align 8
  %35 = sub i64 %34, -3594713740305390592
  %36 = add i64 %35, -1
  %37 = add i64 %36, -3594713740305390592
  %38 = add nsw i64 %34, -1
  store i64 %37, i64* %7, align 8
  store i32 -435975987, i32* %17
  br label %41

; <label>:39:                                     ; preds = %18
  %40 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  ret %"class.std::unordered_map"* %40

; <label>:41:                                     ; preds = %33, %25, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(56) %"class.std::unordered_map"* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEaSERKS8_(%"class.std::unordered_map"*, %"class.std::unordered_map"* dereferenceable(56)) #0 comdat align 2 {
  %3 = alloca %"class.std::unordered_map"*, align 8
  %4 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %3, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %4, align 8
  %5 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %3, align 8
  %6 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %5, i32 0, i32 0
  %7 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %8 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %7, i32 0, i32 0
  %9 = call dereferenceable(56) %"class.std::_Hashtable"* @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEaSERKSF_(%"class.std::_Hashtable"* %6, %"class.std::_Hashtable"* dereferenceable(56) %8)
  ret %"class.std::unordered_map"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(56) %"class.std::_Hashtable"* @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEaSERKSF_(%"class.std::_Hashtable"*, %"class.std::_Hashtable"* dereferenceable(56)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Hashtable"*, align 8
  %4 = alloca %"class.std::_Hashtable"*, align 8
  %5 = alloca %"class.std::_Hashtable"*, align 8
  %6 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"struct.std::__detail::_ReuseOrAllocNode", align 8
  %11 = alloca i8*
  %12 = alloca i32
  %13 = alloca %class.anon.20, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %4, align 8
  store %"class.std::_Hashtable"* %1, %"class.std::_Hashtable"** %5, align 8
  %14 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4, align 8
  %15 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5, align 8
  %16 = icmp eq %"class.std::_Hashtable"* %15, %14
  br i1 %16, label %17, label %18

; <label>:17:                                     ; preds = %2
  store %"class.std::_Hashtable"* %14, %"class.std::_Hashtable"** %3, align 8
  br label %297

; <label>:18:                                     ; preds = %2
  store %"struct.std::__detail::_Hash_node_base"** null, %"struct.std::__detail::_Hash_node_base"*** %6, align 8
  %19 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  store i64 %20, i64* %7, align 8
  %21 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 4
  %22 = call i64 @_ZNKSt8__detail20_Prime_rehash_policy8_M_stateEv(%"struct.std::__detail::_Prime_rehash_policy"* %21)
  store i64 %22, i64* %9, align 8
  store i64* %9, i64** %8, align 8
  %23 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5, align 8
  %26 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %25, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = icmp ne i64 %24, %27
  br i1 %28, label %29, label %41

; <label>:29:                                     ; preds = %18
  %30 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 0
  %31 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %30, align 8
  store %"struct.std::__detail::_Hash_node_base"** %31, %"struct.std::__detail::_Hash_node_base"*** %6, align 8
  %32 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5, align 8
  %33 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %32, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = call %"struct.std::__detail::_Hash_node_base"** @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_allocate_bucketsEm(%"class.std::_Hashtable"* %14, i64 %34)
  %36 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"** %35, %"struct.std::__detail::_Hash_node_base"*** %36, align 8
  %37 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5, align 8
  %38 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %37, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 1
  store i64 %39, i64* %40, align 8
  br label %48

; <label>:41:                                     ; preds = %18
  %42 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 0
  %43 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %42, align 8
  %44 = bitcast %"struct.std::__detail::_Hash_node_base"** %43 to i8*
  %45 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = mul i64 %46, 8
  call void @llvm.memset.p0i8.i64(i8* %44, i8 0, i64 %47, i32 8, i1 false)
  br label %48

; <label>:48:                                     ; preds = %41, %29
  %49 = load i32, i32* @x.435
  %50 = load i32, i32* @y.436
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  br i1 %60, label %62, label %348

; <label>:62:                                     ; preds = %48, %348
  %63 = bitcast %"class.std::_Hashtable"* %14 to %"struct.std::__detail::_Hashtable_base"*
  %64 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5, align 8
  %65 = bitcast %"class.std::_Hashtable"* %64 to %"struct.std::__detail::_Hashtable_base"*
  %66 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5, align 8
  %67 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %66, i32 0, i32 3
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 3
  store i64 %68, i64* %69, align 8
  %70 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5, align 8
  %71 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %70, i32 0, i32 4
  %72 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 4
  %73 = bitcast %"struct.std::__detail::_Prime_rehash_policy"* %72 to i8*
  %74 = bitcast %"struct.std::__detail::_Prime_rehash_policy"* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 16, i32 8, i1 false)
  %75 = load i32, i32* @x.435
  %76 = load i32, i32* @y.436
  %77 = add i32 %75, -2136797225
  %78 = sub i32 %77, 1
  %79 = sub i32 %78, -2136797225
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = and i1 %83, %84
  %86 = xor i1 %83, %84
  %87 = or i1 %85, %86
  %88 = or i1 %83, %84
  br i1 %87, label %89, label %348

; <label>:89:                                     ; preds = %62
  %90 = invoke %"struct.std::__detail::_Hash_node"* @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_beginEv(%"class.std::_Hashtable"* %14)
          to label %91 unwind label %188

; <label>:91:                                     ; preds = %89
  %92 = bitcast %"class.std::_Hashtable"* %14 to %"struct.std::__detail::_Hashtable_alloc"*
  invoke void @_ZNSt8__detail17_ReuseOrAllocNodeISaINS_10_Hash_nodeISt4pairIKixELb0EEEEEC2EPS5_RNS_16_Hashtable_allocIS6_EE(%"struct.std::__detail::_ReuseOrAllocNode"* %10, %"struct.std::__detail::_Hash_node"* %90, %"struct.std::__detail::_Hashtable_alloc"* dereferenceable(1) %92)
          to label %93 unwind label %188

; <label>:93:                                     ; preds = %91
  %94 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 2
  %95 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %94, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %95, align 8
  %96 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5, align 8
  %97 = getelementptr inbounds %class.anon.20, %class.anon.20* %13, i32 0, i32 0
  store %"struct.std::__detail::_ReuseOrAllocNode"* %10, %"struct.std::__detail::_ReuseOrAllocNode"** %97, align 8
  invoke void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_assignIZNSF_aSERKSF_EUlPKNS4_10_Hash_nodeIS2_Lb0EEEE0_EEvSI_RKT_(%"class.std::_Hashtable"* %14, %"class.std::_Hashtable"* dereferenceable(56) %96, %class.anon.20* dereferenceable(8) %13)
          to label %98 unwind label %192

; <label>:98:                                     ; preds = %93
  %99 = load i32, i32* @x.435
  %100 = load i32, i32* @y.436
  %101 = add i32 %99, -1589248163
  %102 = sub i32 %101, 1
  %103 = sub i32 %102, -1589248163
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = and i1 %107, %108
  %110 = xor i1 %107, %108
  %111 = or i1 %109, %110
  %112 = or i1 %107, %108
  br i1 %111, label %113, label %361

; <label>:113:                                    ; preds = %98, %361
  %114 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %6, align 8
  %115 = icmp ne %"struct.std::__detail::_Hash_node_base"** %114, null
  %116 = load i32, i32* @x.435
  %117 = load i32, i32* @y.436
  %118 = add i32 %116, 946519810
  %119 = sub i32 %118, 1
  %120 = sub i32 %119, 946519810
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = xor i1 %124, true
  %127 = xor i1 %125, true
  %128 = xor i1 false, true
  %129 = and i1 %126, false
  %130 = and i1 %124, %128
  %131 = and i1 %127, false
  %132 = and i1 %125, %128
  %133 = or i1 %129, %130
  %134 = or i1 %131, %132
  %135 = xor i1 %133, %134
  %136 = or i1 %126, %127
  %137 = xor i1 %136, true
  %138 = or i1 false, %128
  %139 = and i1 %137, %138
  %140 = or i1 %135, %139
  %141 = or i1 %124, %125
  br i1 %140, label %142, label %361

; <label>:142:                                    ; preds = %113
  br i1 %115, label %143, label %283

; <label>:143:                                    ; preds = %142
  %144 = load i32, i32* @x.435
  %145 = load i32, i32* @y.436
  %146 = sub i32 0, 1
  %147 = add i32 %144, %146
  %148 = sub i32 %144, 1
  %149 = mul i32 %144, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %145, 10
  %153 = and i1 %151, %152
  %154 = xor i1 %151, %152
  %155 = or i1 %153, %154
  %156 = or i1 %151, %152
  br i1 %155, label %157, label %364

; <label>:157:                                    ; preds = %143, %364
  %158 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %6, align 8
  %159 = load i64, i64* %7, align 8
  %160 = load i32, i32* @x.435
  %161 = load i32, i32* @y.436
  %162 = add i32 %160, 114360382
  %163 = sub i32 %162, 1
  %164 = sub i32 %163, 114360382
  %165 = sub i32 %160, 1
  %166 = mul i32 %160, %164
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %161, 10
  %170 = xor i1 %168, true
  %171 = xor i1 %169, true
  %172 = xor i1 true, true
  %173 = and i1 %170, true
  %174 = and i1 %168, %172
  %175 = and i1 %171, true
  %176 = and i1 %169, %172
  %177 = or i1 %173, %174
  %178 = or i1 %175, %176
  %179 = xor i1 %177, %178
  %180 = or i1 %170, %171
  %181 = xor i1 %180, true
  %182 = or i1 true, %172
  %183 = and i1 %181, %182
  %184 = or i1 %179, %183
  %185 = or i1 %168, %169
  br i1 %184, label %186, label %364

; <label>:186:                                    ; preds = %157
  invoke void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_deallocate_bucketsEPPNS4_15_Hash_node_baseEm(%"class.std::_Hashtable"* %14, %"struct.std::__detail::_Hash_node_base"** %158, i64 %159)
          to label %187 unwind label %192

; <label>:187:                                    ; preds = %186
  br label %283

; <label>:188:                                    ; preds = %91, %89
  %189 = landingpad { i8*, i32 }
          catch i8* null
  %190 = extractvalue { i8*, i32 } %189, 0
  store i8* %190, i8** %11, align 8
  %191 = extractvalue { i8*, i32 } %189, 1
  store i32 %191, i32* %12, align 4
  br label %196

; <label>:192:                                    ; preds = %186, %93
  %193 = landingpad { i8*, i32 }
          catch i8* null
  %194 = extractvalue { i8*, i32 } %193, 0
  store i8* %194, i8** %11, align 8
  %195 = extractvalue { i8*, i32 } %193, 1
  store i32 %195, i32* %12, align 4
  call void @_ZNSt8__detail17_ReuseOrAllocNodeISaINS_10_Hash_nodeISt4pairIKixELb0EEEEED2Ev(%"struct.std::__detail::_ReuseOrAllocNode"* %10) #3
  br label %196

; <label>:196:                                    ; preds = %192, %188
  %197 = load i8*, i8** %11, align 8
  %198 = call i8* @__cxa_begin_catch(i8* %197) #3
  %199 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %6, align 8
  %200 = icmp ne %"struct.std::__detail::_Hash_node_base"** %199, null
  br i1 %200, label %201, label %288

; <label>:201:                                    ; preds = %196
  invoke void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_deallocate_bucketsEv(%"class.std::_Hashtable"* %14)
          to label %202 unwind label %284

; <label>:202:                                    ; preds = %201
  %203 = load i32, i32* @x.435
  %204 = load i32, i32* @y.436
  %205 = sub i32 %203, -1530639586
  %206 = sub i32 %205, 1
  %207 = add i32 %206, -1530639586
  %208 = sub i32 %203, 1
  %209 = mul i32 %203, %207
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %204, 10
  %213 = and i1 %211, %212
  %214 = xor i1 %211, %212
  %215 = or i1 %213, %214
  %216 = or i1 %211, %212
  br i1 %215, label %217, label %367

; <label>:217:                                    ; preds = %202, %367
  %218 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 4
  %219 = load i64*, i64** %8, align 8
  %220 = load i64, i64* %219, align 8
  %221 = load i32, i32* @x.435
  %222 = load i32, i32* @y.436
  %223 = add i32 %221, 1514241687
  %224 = sub i32 %223, 1
  %225 = sub i32 %224, 1514241687
  %226 = sub i32 %221, 1
  %227 = mul i32 %221, %225
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %222, 10
  %231 = xor i1 %229, true
  %232 = xor i1 %230, true
  %233 = xor i1 false, true
  %234 = and i1 %231, false
  %235 = and i1 %229, %233
  %236 = and i1 %232, false
  %237 = and i1 %230, %233
  %238 = or i1 %234, %235
  %239 = or i1 %236, %237
  %240 = xor i1 %238, %239
  %241 = or i1 %231, %232
  %242 = xor i1 %241, true
  %243 = or i1 false, %233
  %244 = and i1 %242, %243
  %245 = or i1 %240, %244
  %246 = or i1 %229, %230
  br i1 %245, label %247, label %367

; <label>:247:                                    ; preds = %217
  invoke void @_ZNSt8__detail20_Prime_rehash_policy8_M_resetEm(%"struct.std::__detail::_Prime_rehash_policy"* %218, i64 %220)
          to label %248 unwind label %284

; <label>:248:                                    ; preds = %247
  %249 = load i32, i32* @x.435
  %250 = load i32, i32* @y.436
  %251 = add i32 %249, 1662877167
  %252 = sub i32 %251, 1
  %253 = sub i32 %252, 1662877167
  %254 = sub i32 %249, 1
  %255 = mul i32 %249, %253
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %250, 10
  %259 = and i1 %257, %258
  %260 = xor i1 %257, %258
  %261 = or i1 %259, %260
  %262 = or i1 %257, %258
  br i1 %261, label %263, label %371

; <label>:263:                                    ; preds = %248, %371
  %264 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %6, align 8
  %265 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"** %264, %"struct.std::__detail::_Hash_node_base"*** %265, align 8
  %266 = load i64, i64* %7, align 8
  %267 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 1
  store i64 %266, i64* %267, align 8
  %268 = load i32, i32* @x.435
  %269 = load i32, i32* @y.436
  %270 = add i32 %268, 348976552
  %271 = sub i32 %270, 1
  %272 = sub i32 %271, 348976552
  %273 = sub i32 %268, 1
  %274 = mul i32 %268, %272
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %269, 10
  %278 = and i1 %276, %277
  %279 = xor i1 %276, %277
  %280 = or i1 %278, %279
  %281 = or i1 %276, %277
  br i1 %280, label %282, label %371

; <label>:282:                                    ; preds = %263
  br label %288

; <label>:283:                                    ; preds = %187, %142
  call void @_ZNSt8__detail17_ReuseOrAllocNodeISaINS_10_Hash_nodeISt4pairIKixELb0EEEEED2Ev(%"struct.std::__detail::_ReuseOrAllocNode"* %10) #3
  br label %296

; <label>:284:                                    ; preds = %288, %247, %201
  %285 = landingpad { i8*, i32 }
          cleanup
  %286 = extractvalue { i8*, i32 } %285, 0
  store i8* %286, i8** %11, align 8
  %287 = extractvalue { i8*, i32 } %285, 1
  store i32 %287, i32* %12, align 4
  invoke void @__cxa_end_catch()
          to label %295 unwind label %344

; <label>:288:                                    ; preds = %282, %196
  %289 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 0
  %290 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %289, align 8
  %291 = bitcast %"struct.std::__detail::_Hash_node_base"** %290 to i8*
  %292 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 1
  %293 = load i64, i64* %292, align 8
  %294 = mul i64 %293, 8
  call void @llvm.memset.p0i8.i64(i8* %291, i8 0, i64 %294, i32 8, i1 false)
  invoke void @__cxa_rethrow() #12
          to label %347 unwind label %284

; <label>:295:                                    ; preds = %284
  br label %299

; <label>:296:                                    ; preds = %283
  store %"class.std::_Hashtable"* %14, %"class.std::_Hashtable"** %3, align 8
  br label %297

; <label>:297:                                    ; preds = %296, %17
  %298 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %3, align 8
  ret %"class.std::_Hashtable"* %298

; <label>:299:                                    ; preds = %295
  %300 = load i32, i32* @x.435
  %301 = load i32, i32* @y.436
  %302 = sub i32 0, 1
  %303 = add i32 %300, %302
  %304 = sub i32 %300, 1
  %305 = mul i32 %300, %303
  %306 = urem i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %301, 10
  %309 = xor i1 %307, true
  %310 = xor i1 %308, true
  %311 = xor i1 true, true
  %312 = and i1 %309, true
  %313 = and i1 %307, %311
  %314 = and i1 %310, true
  %315 = and i1 %308, %311
  %316 = or i1 %312, %313
  %317 = or i1 %314, %315
  %318 = xor i1 %316, %317
  %319 = or i1 %309, %310
  %320 = xor i1 %319, true
  %321 = or i1 true, %311
  %322 = and i1 %320, %321
  %323 = or i1 %318, %322
  %324 = or i1 %307, %308
  br i1 %323, label %325, label %376

; <label>:325:                                    ; preds = %299, %376
  %326 = load i8*, i8** %11, align 8
  %327 = load i32, i32* %12, align 4
  %328 = insertvalue { i8*, i32 } undef, i8* %326, 0
  %329 = insertvalue { i8*, i32 } %328, i32 %327, 1
  %330 = load i32, i32* @x.435
  %331 = load i32, i32* @y.436
  %332 = sub i32 0, 1
  %333 = add i32 %330, %332
  %334 = sub i32 %330, 1
  %335 = mul i32 %330, %333
  %336 = urem i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %331, 10
  %339 = and i1 %337, %338
  %340 = xor i1 %337, %338
  %341 = or i1 %339, %340
  %342 = or i1 %337, %338
  br i1 %341, label %343, label %376

; <label>:343:                                    ; preds = %325
  resume { i8*, i32 } %329

; <label>:344:                                    ; preds = %284
  %345 = landingpad { i8*, i32 }
          catch i8* null
  %346 = extractvalue { i8*, i32 } %345, 0
  call void @__clang_call_terminate(i8* %346) #11
  unreachable

; <label>:347:                                    ; preds = %288
  unreachable

; <label>:348:                                    ; preds = %62, %48
  %349 = bitcast %"class.std::_Hashtable"* %14 to %"struct.std::__detail::_Hashtable_base"*
  %350 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5, align 8
  %351 = bitcast %"class.std::_Hashtable"* %350 to %"struct.std::__detail::_Hashtable_base"*
  %352 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5, align 8
  %353 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %352, i32 0, i32 3
  %354 = load i64, i64* %353, align 8
  %355 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 3
  store i64 %354, i64* %355, align 8
  %356 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5, align 8
  %357 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %356, i32 0, i32 4
  %358 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 4
  %359 = bitcast %"struct.std::__detail::_Prime_rehash_policy"* %358 to i8*
  %360 = bitcast %"struct.std::__detail::_Prime_rehash_policy"* %357 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %359, i8* %360, i64 16, i32 8, i1 false)
  br label %62

; <label>:361:                                    ; preds = %113, %98
  %362 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %6, align 8
  %363 = icmp ne %"struct.std::__detail::_Hash_node_base"** %362, null
  br label %113

; <label>:364:                                    ; preds = %157, %143
  %365 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %6, align 8
  %366 = load i64, i64* %7, align 8
  br label %157

; <label>:367:                                    ; preds = %217, %202
  %368 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 4
  %369 = load i64*, i64** %8, align 8
  %370 = load i64, i64* %369, align 8
  br label %217

; <label>:371:                                    ; preds = %263, %248
  %372 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %6, align 8
  %373 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"** %372, %"struct.std::__detail::_Hash_node_base"*** %373, align 8
  %374 = load i64, i64* %7, align 8
  %375 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 1
  store i64 %374, i64* %375, align 8
  br label %263

; <label>:376:                                    ; preds = %325, %299
  %377 = load i8*, i8** %11, align 8
  %378 = load i32, i32* %12, align 4
  %379 = insertvalue { i8*, i32 } undef, i8* %377, 0
  %380 = insertvalue { i8*, i32 } %379, i32 %378, 1
  br label %325
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt8__detail20_Prime_rehash_policy8_M_stateEv(%"struct.std::__detail::_Prime_rehash_policy"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.437
  %6 = load i32, i32* @y.438
  %7 = sub i32 %5, -1454512273
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1454512273
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1561350046, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1561350046, label %19
    i32 -1232707537, label %27
    i32 835693518, label %59
    i32 -695428301, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1232707537, i32 -695428301
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::__detail::_Prime_rehash_policy"*, align 8
  store %"struct.std::__detail::_Prime_rehash_policy"* %0, %"struct.std::__detail::_Prime_rehash_policy"** %28, align 8
  %29 = load %"struct.std::__detail::_Prime_rehash_policy"*, %"struct.std::__detail::_Prime_rehash_policy"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Prime_rehash_policy"* %29, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %2
  %32 = load i32, i32* @x.437
  %33 = load i32, i32* @y.438
  %34 = sub i32 %32, -401048394
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -401048394
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 835693518, i32 -695428301
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i64, i64* %2
  ret i64 %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::__detail::_Prime_rehash_policy"*, align 8
  store %"struct.std::__detail::_Prime_rehash_policy"* %0, %"struct.std::__detail::_Prime_rehash_policy"** %62, align 8
  %63 = load %"struct.std::__detail::_Prime_rehash_policy"*, %"struct.std::__detail::_Prime_rehash_policy"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Prime_rehash_policy"* %63, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  store i32 -1232707537, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail17_ReuseOrAllocNodeISaINS_10_Hash_nodeISt4pairIKixELb0EEEEEC2EPS5_RNS_16_Hashtable_allocIS6_EE(%"struct.std::__detail::_ReuseOrAllocNode"*, %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hashtable_alloc"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::__detail::_ReuseOrAllocNode"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %6 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  store %"struct.std::__detail::_ReuseOrAllocNode"* %0, %"struct.std::__detail::_ReuseOrAllocNode"** %4, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %5, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %2, %"struct.std::__detail::_Hashtable_alloc"** %6, align 8
  %7 = load %"struct.std::__detail::_ReuseOrAllocNode"*, %"struct.std::__detail::_ReuseOrAllocNode"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::__detail::_ReuseOrAllocNode", %"struct.std::__detail::_ReuseOrAllocNode"* %7, i32 0, i32 0
  %9 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %5, align 8
  store %"struct.std::__detail::_Hash_node"* %9, %"struct.std::__detail::_Hash_node"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::__detail::_ReuseOrAllocNode", %"struct.std::__detail::_ReuseOrAllocNode"* %7, i32 0, i32 1
  %11 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %6, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %11, %"struct.std::__detail::_Hashtable_alloc"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_assignIZNSF_aSERKSF_EUlPKNS4_10_Hash_nodeIS2_Lb0EEEE0_EEvSI_RKT_(%"class.std::_Hashtable"*, %"class.std::_Hashtable"* dereferenceable(56), %class.anon.20* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Hashtable"*, align 8
  %5 = alloca %"class.std::_Hashtable"*, align 8
  %6 = alloca %class.anon.20*, align 8
  %7 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %8 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  %11 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %12 = alloca %"struct.std::__detail::_Hash_node_base"*, align 8
  %13 = alloca i64, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %4, align 8
  store %"class.std::_Hashtable"* %1, %"class.std::_Hashtable"** %5, align 8
  store %class.anon.20* %2, %class.anon.20** %6, align 8
  %14 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4, align 8
  store %"struct.std::__detail::_Hash_node_base"** null, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  %15 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 0
  %16 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %15, align 8
  %17 = icmp ne %"struct.std::__detail::_Hash_node_base"** %16, null
  br i1 %17, label %23, label %18

; <label>:18:                                     ; preds = %3
  %19 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = call %"struct.std::__detail::_Hash_node_base"** @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_allocate_bucketsEm(%"class.std::_Hashtable"* %14, i64 %20)
  store %"struct.std::__detail::_Hash_node_base"** %21, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  %22 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"** %21, %"struct.std::__detail::_Hash_node_base"*** %22, align 8
  br label %23

; <label>:23:                                     ; preds = %18, %3
  %24 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5, align 8
  %25 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %24, i32 0, i32 2
  %26 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %25, i32 0, i32 0
  %27 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %26, align 8
  %28 = icmp ne %"struct.std::__detail::_Hash_node_base"* %27, null
  br i1 %28, label %30, label %29

; <label>:29:                                     ; preds = %23
  br label %350

; <label>:30:                                     ; preds = %23
  %31 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5, align 8
  %32 = invoke %"struct.std::__detail::_Hash_node"* @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_beginEv(%"class.std::_Hashtable"* %31)
          to label %33 unwind label %242

; <label>:33:                                     ; preds = %30
  %34 = load i32, i32* @x.441
  %35 = load i32, i32* @y.442
  %36 = sub i32 %34, -343590085
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -343590085
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  br i1 %58, label %60, label %401

; <label>:60:                                     ; preds = %33, %401
  store %"struct.std::__detail::_Hash_node"* %32, %"struct.std::__detail::_Hash_node"** %8, align 8
  %61 = load %class.anon.20*, %class.anon.20** %6, align 8
  %62 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %63 = load i32, i32* @x.441
  %64 = load i32, i32* @y.442
  %65 = sub i32 %63, 354359707
  %66 = sub i32 %65, 1
  %67 = add i32 %66, 354359707
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = and i1 %71, %72
  %74 = xor i1 %71, %72
  %75 = or i1 %73, %74
  %76 = or i1 %71, %72
  br i1 %75, label %77, label %401

; <label>:77:                                     ; preds = %60
  %78 = invoke %"struct.std::__detail::_Hash_node"* @_ZZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEaSERKSF_ENKUlPKNS4_10_Hash_nodeIS2_Lb0EEEE0_clESL_(%class.anon.20* %61, %"struct.std::__detail::_Hash_node"* %62)
          to label %79 unwind label %242

; <label>:79:                                     ; preds = %77
  %80 = load i32, i32* @x.441
  %81 = load i32, i32* @y.442
  %82 = add i32 %80, -16158975
  %83 = sub i32 %82, 1
  %84 = sub i32 %83, -16158975
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  br i1 %92, label %94, label %404

; <label>:94:                                     ; preds = %79, %404
  store %"struct.std::__detail::_Hash_node"* %78, %"struct.std::__detail::_Hash_node"** %11, align 8
  %95 = bitcast %"class.std::_Hashtable"* %14 to %"struct.std::__detail::_Hash_code_base"*
  %96 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %97 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %98 = load i32, i32* @x.441
  %99 = load i32, i32* @y.442
  %100 = add i32 %98, 648096052
  %101 = sub i32 %100, 1
  %102 = sub i32 %101, 648096052
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = xor i1 %106, true
  %109 = xor i1 %107, true
  %110 = xor i1 false, true
  %111 = and i1 %108, false
  %112 = and i1 %106, %110
  %113 = and i1 %109, false
  %114 = and i1 %107, %110
  %115 = or i1 %111, %112
  %116 = or i1 %113, %114
  %117 = xor i1 %115, %116
  %118 = or i1 %108, %109
  %119 = xor i1 %118, true
  %120 = or i1 false, %110
  %121 = and i1 %119, %120
  %122 = or i1 %117, %121
  %123 = or i1 %106, %107
  br i1 %122, label %124, label %404

; <label>:124:                                    ; preds = %94
  invoke void @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE12_M_copy_codeEPNS_10_Hash_nodeIS3_Lb0EEEPKSB_(%"struct.std::__detail::_Hash_code_base"* %95, %"struct.std::__detail::_Hash_node"* %96, %"struct.std::__detail::_Hash_node"* %97)
          to label %125 unwind label %242

; <label>:125:                                    ; preds = %124
  %126 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %127 = bitcast %"struct.std::__detail::_Hash_node"* %126 to %"struct.std::__detail::_Hash_node_base"*
  %128 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 2
  %129 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %128, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %127, %"struct.std::__detail::_Hash_node_base"** %129, align 8
  %130 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 2
  %131 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 0
  %132 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %131, align 8
  %133 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %134 = call i64 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexEPNS4_10_Hash_nodeIS2_Lb0EEE(%"class.std::_Hashtable"* %14, %"struct.std::__detail::_Hash_node"* %133) #3
  %135 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %132, i64 %134
  store %"struct.std::__detail::_Hash_node_base"* %130, %"struct.std::__detail::_Hash_node_base"** %135, align 8
  %136 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %137 = bitcast %"struct.std::__detail::_Hash_node"* %136 to %"struct.std::__detail::_Hash_node_base"*
  store %"struct.std::__detail::_Hash_node_base"* %137, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  %138 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %139 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %138) #3
  store %"struct.std::__detail::_Hash_node"* %139, %"struct.std::__detail::_Hash_node"** %8, align 8
  br label %140

; <label>:140:                                    ; preds = %286, %125
  %141 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %142 = icmp ne %"struct.std::__detail::_Hash_node"* %141, null
  br i1 %142, label %143, label %289

; <label>:143:                                    ; preds = %140
  %144 = load %class.anon.20*, %class.anon.20** %6, align 8
  %145 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %146 = invoke %"struct.std::__detail::_Hash_node"* @_ZZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEaSERKSF_ENKUlPKNS4_10_Hash_nodeIS2_Lb0EEEE0_clESL_(%class.anon.20* %144, %"struct.std::__detail::_Hash_node"* %145)
          to label %147 unwind label %242

; <label>:147:                                    ; preds = %143
  %148 = load i32, i32* @x.441
  %149 = load i32, i32* @y.442
  %150 = sub i32 %148, 1970035701
  %151 = sub i32 %150, 1
  %152 = add i32 %151, 1970035701
  %153 = sub i32 %148, 1
  %154 = mul i32 %148, %152
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %149, 10
  %158 = and i1 %156, %157
  %159 = xor i1 %156, %157
  %160 = or i1 %158, %159
  %161 = or i1 %156, %157
  br i1 %160, label %162, label %408

; <label>:162:                                    ; preds = %147, %408
  store %"struct.std::__detail::_Hash_node"* %146, %"struct.std::__detail::_Hash_node"** %11, align 8
  %163 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %164 = bitcast %"struct.std::__detail::_Hash_node"* %163 to %"struct.std::__detail::_Hash_node_base"*
  %165 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  %166 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %165, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %164, %"struct.std::__detail::_Hash_node_base"** %166, align 8
  %167 = bitcast %"class.std::_Hashtable"* %14 to %"struct.std::__detail::_Hash_code_base"*
  %168 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %169 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %170 = load i32, i32* @x.441
  %171 = load i32, i32* @y.442
  %172 = sub i32 %170, -476056637
  %173 = sub i32 %172, 1
  %174 = add i32 %173, -476056637
  %175 = sub i32 %170, 1
  %176 = mul i32 %170, %174
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %171, 10
  %180 = xor i1 %178, true
  %181 = xor i1 %179, true
  %182 = xor i1 true, true
  %183 = and i1 %180, true
  %184 = and i1 %178, %182
  %185 = and i1 %181, true
  %186 = and i1 %179, %182
  %187 = or i1 %183, %184
  %188 = or i1 %185, %186
  %189 = xor i1 %187, %188
  %190 = or i1 %180, %181
  %191 = xor i1 %190, true
  %192 = or i1 true, %182
  %193 = and i1 %191, %192
  %194 = or i1 %189, %193
  %195 = or i1 %178, %179
  br i1 %194, label %196, label %408

; <label>:196:                                    ; preds = %162
  invoke void @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE12_M_copy_codeEPNS_10_Hash_nodeIS3_Lb0EEEPKSB_(%"struct.std::__detail::_Hash_code_base"* %167, %"struct.std::__detail::_Hash_node"* %168, %"struct.std::__detail::_Hash_node"* %169)
          to label %197 unwind label %242

; <label>:197:                                    ; preds = %196
  %198 = load i32, i32* @x.441
  %199 = load i32, i32* @y.442
  %200 = add i32 %198, -1616758154
  %201 = sub i32 %200, 1
  %202 = sub i32 %201, -1616758154
  %203 = sub i32 %198, 1
  %204 = mul i32 %198, %202
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %199, 10
  %208 = and i1 %206, %207
  %209 = xor i1 %206, %207
  %210 = or i1 %208, %209
  %211 = or i1 %206, %207
  br i1 %210, label %212, label %416

; <label>:212:                                    ; preds = %197, %416
  %213 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %214 = call i64 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexEPNS4_10_Hash_nodeIS2_Lb0EEE(%"class.std::_Hashtable"* %14, %"struct.std::__detail::_Hash_node"* %213) #3
  store i64 %214, i64* %13, align 8
  %215 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 0
  %216 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %215, align 8
  %217 = load i64, i64* %13, align 8
  %218 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %216, i64 %217
  %219 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %218, align 8
  %220 = icmp ne %"struct.std::__detail::_Hash_node_base"* %219, null
  %221 = load i32, i32* @x.441
  %222 = load i32, i32* @y.442
  %223 = sub i32 %221, -246333713
  %224 = sub i32 %223, 1
  %225 = add i32 %224, -246333713
  %226 = sub i32 %221, 1
  %227 = mul i32 %221, %225
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %222, 10
  %231 = and i1 %229, %230
  %232 = xor i1 %229, %230
  %233 = or i1 %231, %232
  %234 = or i1 %229, %230
  br i1 %233, label %235, label %416

; <label>:235:                                    ; preds = %212
  br i1 %220, label %253, label %236

; <label>:236:                                    ; preds = %235
  %237 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  %238 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 0
  %239 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %238, align 8
  %240 = load i64, i64* %13, align 8
  %241 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %239, i64 %240
  store %"struct.std::__detail::_Hash_node_base"* %237, %"struct.std::__detail::_Hash_node_base"** %241, align 8
  br label %253

; <label>:242:                                    ; preds = %196, %143, %124, %77, %30
  %243 = landingpad { i8*, i32 }
          catch i8* null
  %244 = extractvalue { i8*, i32 } %243, 0
  store i8* %244, i8** %9, align 8
  %245 = extractvalue { i8*, i32 } %243, 1
  store i32 %245, i32* %10, align 4
  br label %246

; <label>:246:                                    ; preds = %242
  %247 = load i8*, i8** %9, align 8
  %248 = call i8* @__cxa_begin_catch(i8* %247) #3
  call void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv(%"class.std::_Hashtable"* %14) #3
  %249 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  %250 = icmp ne %"struct.std::__detail::_Hash_node_base"** %249, null
  br i1 %250, label %251, label %294

; <label>:251:                                    ; preds = %246
  invoke void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_deallocate_bucketsEv(%"class.std::_Hashtable"* %14)
          to label %252 unwind label %290

; <label>:252:                                    ; preds = %251
  br label %294

; <label>:253:                                    ; preds = %236, %235
  %254 = load i32, i32* @x.441
  %255 = load i32, i32* @y.442
  %256 = add i32 %254, 1452860326
  %257 = sub i32 %256, 1
  %258 = sub i32 %257, 1452860326
  %259 = sub i32 %254, 1
  %260 = mul i32 %254, %258
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %255, 10
  %264 = and i1 %262, %263
  %265 = xor i1 %262, %263
  %266 = or i1 %264, %265
  %267 = or i1 %262, %263
  br i1 %266, label %268, label %425

; <label>:268:                                    ; preds = %253, %425
  %269 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %270 = bitcast %"struct.std::__detail::_Hash_node"* %269 to %"struct.std::__detail::_Hash_node_base"*
  store %"struct.std::__detail::_Hash_node_base"* %270, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  %271 = load i32, i32* @x.441
  %272 = load i32, i32* @y.442
  %273 = add i32 %271, 1991864548
  %274 = sub i32 %273, 1
  %275 = sub i32 %274, 1991864548
  %276 = sub i32 %271, 1
  %277 = mul i32 %271, %275
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %272, 10
  %281 = and i1 %279, %280
  %282 = xor i1 %279, %280
  %283 = or i1 %281, %282
  %284 = or i1 %279, %280
  br i1 %283, label %285, label %425

; <label>:285:                                    ; preds = %268
  br label %286

; <label>:286:                                    ; preds = %285
  %287 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %288 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %287) #3
  store %"struct.std::__detail::_Hash_node"* %288, %"struct.std::__detail::_Hash_node"** %8, align 8
  br label %140

; <label>:289:                                    ; preds = %140
  br label %350

; <label>:290:                                    ; preds = %294, %251
  %291 = landingpad { i8*, i32 }
          cleanup
  %292 = extractvalue { i8*, i32 } %291, 0
  store i8* %292, i8** %9, align 8
  %293 = extractvalue { i8*, i32 } %291, 1
  store i32 %293, i32* %10, align 4
  invoke void @__cxa_end_catch()
          to label %295 unwind label %356

; <label>:294:                                    ; preds = %252, %246
  invoke void @__cxa_rethrow() #12
          to label %400 unwind label %290

; <label>:295:                                    ; preds = %290
  %296 = load i32, i32* @x.441
  %297 = load i32, i32* @y.442
  %298 = add i32 %296, 483006962
  %299 = sub i32 %298, 1
  %300 = sub i32 %299, 483006962
  %301 = sub i32 %296, 1
  %302 = mul i32 %296, %300
  %303 = urem i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %297, 10
  %306 = xor i1 %304, true
  %307 = xor i1 %305, true
  %308 = xor i1 true, true
  %309 = and i1 %306, true
  %310 = and i1 %304, %308
  %311 = and i1 %307, true
  %312 = and i1 %305, %308
  %313 = or i1 %309, %310
  %314 = or i1 %311, %312
  %315 = xor i1 %313, %314
  %316 = or i1 %306, %307
  %317 = xor i1 %316, true
  %318 = or i1 true, %308
  %319 = and i1 %317, %318
  %320 = or i1 %315, %319
  %321 = or i1 %304, %305
  br i1 %320, label %322, label %428

; <label>:322:                                    ; preds = %295, %428
  %323 = load i32, i32* @x.441
  %324 = load i32, i32* @y.442
  %325 = add i32 %323, -1374030220
  %326 = sub i32 %325, 1
  %327 = sub i32 %326, -1374030220
  %328 = sub i32 %323, 1
  %329 = mul i32 %323, %327
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %324, 10
  %333 = xor i1 %331, true
  %334 = xor i1 %332, true
  %335 = xor i1 true, true
  %336 = and i1 %333, true
  %337 = and i1 %331, %335
  %338 = and i1 %334, true
  %339 = and i1 %332, %335
  %340 = or i1 %336, %337
  %341 = or i1 %338, %339
  %342 = xor i1 %340, %341
  %343 = or i1 %333, %334
  %344 = xor i1 %343, true
  %345 = or i1 true, %335
  %346 = and i1 %344, %345
  %347 = or i1 %342, %346
  %348 = or i1 %331, %332
  br i1 %347, label %349, label %428

; <label>:349:                                    ; preds = %322
  br label %351

; <label>:350:                                    ; preds = %29, %289
  ret void

; <label>:351:                                    ; preds = %349
  %352 = load i8*, i8** %9, align 8
  %353 = load i32, i32* %10, align 4
  %354 = insertvalue { i8*, i32 } undef, i8* %352, 0
  %355 = insertvalue { i8*, i32 } %354, i32 %353, 1
  resume { i8*, i32 } %355

; <label>:356:                                    ; preds = %290
  %357 = load i32, i32* @x.441
  %358 = load i32, i32* @y.442
  %359 = sub i32 0, 1
  %360 = add i32 %357, %359
  %361 = sub i32 %357, 1
  %362 = mul i32 %357, %360
  %363 = urem i32 %362, 2
  %364 = icmp eq i32 %363, 0
  %365 = icmp slt i32 %358, 10
  %366 = and i1 %364, %365
  %367 = xor i1 %364, %365
  %368 = or i1 %366, %367
  %369 = or i1 %364, %365
  br i1 %368, label %370, label %429

; <label>:370:                                    ; preds = %356, %429
  %371 = landingpad { i8*, i32 }
          catch i8* null
  %372 = extractvalue { i8*, i32 } %371, 0
  call void @__clang_call_terminate(i8* %372) #11
  %373 = load i32, i32* @x.441
  %374 = load i32, i32* @y.442
  %375 = sub i32 %373, -1777936455
  %376 = sub i32 %375, 1
  %377 = add i32 %376, -1777936455
  %378 = sub i32 %373, 1
  %379 = mul i32 %373, %377
  %380 = urem i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %374, 10
  %383 = xor i1 %381, true
  %384 = xor i1 %382, true
  %385 = xor i1 true, true
  %386 = and i1 %383, true
  %387 = and i1 %381, %385
  %388 = and i1 %384, true
  %389 = and i1 %382, %385
  %390 = or i1 %386, %387
  %391 = or i1 %388, %389
  %392 = xor i1 %390, %391
  %393 = or i1 %383, %384
  %394 = xor i1 %393, true
  %395 = or i1 true, %385
  %396 = and i1 %394, %395
  %397 = or i1 %392, %396
  %398 = or i1 %381, %382
  br i1 %397, label %399, label %429

; <label>:399:                                    ; preds = %370
  unreachable

; <label>:400:                                    ; preds = %294
  unreachable

; <label>:401:                                    ; preds = %60, %33
  store %"struct.std::__detail::_Hash_node"* %32, %"struct.std::__detail::_Hash_node"** %8, align 8
  %402 = load %class.anon.20*, %class.anon.20** %6, align 8
  %403 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  br label %60

; <label>:404:                                    ; preds = %94, %79
  store %"struct.std::__detail::_Hash_node"* %78, %"struct.std::__detail::_Hash_node"** %11, align 8
  %405 = bitcast %"class.std::_Hashtable"* %14 to %"struct.std::__detail::_Hash_code_base"*
  %406 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %407 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  br label %94

; <label>:408:                                    ; preds = %162, %147
  store %"struct.std::__detail::_Hash_node"* %146, %"struct.std::__detail::_Hash_node"** %11, align 8
  %409 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %410 = bitcast %"struct.std::__detail::_Hash_node"* %409 to %"struct.std::__detail::_Hash_node_base"*
  %411 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  %412 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %411, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %410, %"struct.std::__detail::_Hash_node_base"** %412, align 8
  %413 = bitcast %"class.std::_Hashtable"* %14 to %"struct.std::__detail::_Hash_code_base"*
  %414 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %415 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  br label %162

; <label>:416:                                    ; preds = %212, %197
  %417 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %418 = call i64 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexEPNS4_10_Hash_nodeIS2_Lb0EEE(%"class.std::_Hashtable"* %14, %"struct.std::__detail::_Hash_node"* %417) #3
  store i64 %418, i64* %13, align 8
  %419 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 0
  %420 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %419, align 8
  %421 = load i64, i64* %13, align 8
  %422 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %420, i64 %421
  %423 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %422, align 8
  %424 = icmp ne %"struct.std::__detail::_Hash_node_base"* %423, null
  br label %212

; <label>:425:                                    ; preds = %268, %253
  %426 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %427 = bitcast %"struct.std::__detail::_Hash_node"* %426 to %"struct.std::__detail::_Hash_node_base"*
  store %"struct.std::__detail::_Hash_node_base"* %427, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  br label %268

; <label>:428:                                    ; preds = %322, %295
  br label %322

; <label>:429:                                    ; preds = %370, %356
  %430 = landingpad { i8*, i32 }
          catch i8* null
  %431 = extractvalue { i8*, i32 } %430, 0
  call void @__clang_call_terminate(i8* %431) #11
  br label %370
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail17_ReuseOrAllocNodeISaINS_10_Hash_nodeISt4pairIKixELb0EEEEED2Ev(%"struct.std::__detail::_ReuseOrAllocNode"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::__detail::_ReuseOrAllocNode"*, align 8
  store %"struct.std::__detail::_ReuseOrAllocNode"* %0, %"struct.std::__detail::_ReuseOrAllocNode"** %2, align 8
  %3 = load %"struct.std::__detail::_ReuseOrAllocNode"*, %"struct.std::__detail::_ReuseOrAllocNode"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::__detail::_ReuseOrAllocNode", %"struct.std::__detail::_ReuseOrAllocNode"* %3, i32 0, i32 1
  %5 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__detail::_ReuseOrAllocNode", %"struct.std::__detail::_ReuseOrAllocNode"* %3, i32 0, i32 0
  %7 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %6, align 8
  invoke void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE19_M_deallocate_nodesEPS5_(%"struct.std::__detail::_Hashtable_alloc"* %5, %"struct.std::__detail::_Hash_node"* %7)
          to label %8 unwind label %9

; <label>:8:                                      ; preds = %1
  ret void

; <label>:9:                                      ; preds = %1
  %10 = landingpad { i8*, i32 }
          catch i8* null
  %11 = extractvalue { i8*, i32 } %10, 0
  call void @__clang_call_terminate(i8* %11) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail20_Prime_rehash_policy8_M_resetEm(%"struct.std::__detail::_Prime_rehash_policy"*, i64) #4 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Prime_rehash_policy"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::__detail::_Prime_rehash_policy"* %0, %"struct.std::__detail::_Prime_rehash_policy"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::__detail::_Prime_rehash_policy"*, %"struct.std::__detail::_Prime_rehash_policy"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = getelementptr inbounds %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Prime_rehash_policy"* %5, i32 0, i32 1
  store i64 %6, i64* %7, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEaSERKSF_ENKUlPKNS4_10_Hash_nodeIS2_Lb0EEEE0_clESL_(%class.anon.20*, %"struct.std::__detail::_Hash_node"*) #0 comdat align 2 {
  %3 = alloca %class.anon.20*, align 8
  %4 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %class.anon.20* %0, %class.anon.20** %3, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %4, align 8
  %5 = load %class.anon.20*, %class.anon.20** %3, align 8
  %6 = getelementptr inbounds %class.anon.20, %class.anon.20* %5, i32 0, i32 0
  %7 = load %"struct.std::__detail::_ReuseOrAllocNode"*, %"struct.std::__detail::_ReuseOrAllocNode"** %6, align 8
  %8 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %4, align 8
  %9 = bitcast %"struct.std::__detail::_Hash_node"* %8 to %"struct.std::__detail::_Hash_node_value_base"*
  %10 = call dereferenceable(16) %"struct.std::pair"* @_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKixEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base"* %9) #3
  %11 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail17_ReuseOrAllocNodeISaINS_10_Hash_nodeISt4pairIKixELb0EEEEEclIRKS4_EEPS5_OT_(%"struct.std::__detail::_ReuseOrAllocNode"* %7, %"struct.std::pair"* dereferenceable(16) %10)
  ret %"struct.std::__detail::_Hash_node"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail17_ReuseOrAllocNodeISaINS_10_Hash_nodeISt4pairIKixELb0EEEEEclIRKS4_EEPS5_OT_(%"struct.std::__detail::_ReuseOrAllocNode"*, %"struct.std::pair"* dereferenceable(16)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.449
  %4 = load i32, i32* @y.450
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %412

; <label>:16:                                     ; preds = %2, %412
  %17 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %18 = alloca %"struct.std::__detail::_ReuseOrAllocNode"*, align 8
  %19 = alloca %"struct.std::pair"*, align 8
  %20 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %21 = alloca %"class.std::allocator.12", align 1
  %22 = alloca i8*
  %23 = alloca i32
  store %"struct.std::__detail::_ReuseOrAllocNode"* %0, %"struct.std::__detail::_ReuseOrAllocNode"** %18, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %19, align 8
  %24 = load %"struct.std::__detail::_ReuseOrAllocNode"*, %"struct.std::__detail::_ReuseOrAllocNode"** %18, align 8
  %25 = getelementptr inbounds %"struct.std::__detail::_ReuseOrAllocNode", %"struct.std::__detail::_ReuseOrAllocNode"* %24, i32 0, i32 0
  %26 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %25, align 8
  %27 = icmp ne %"struct.std::__detail::_Hash_node"* %26, null
  %28 = load i32, i32* @x.449
  %29 = load i32, i32* @y.450
  %30 = add i32 %28, 557372012
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, 557372012
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  br i1 %40, label %42, label %412

; <label>:42:                                     ; preds = %16
  br i1 %27, label %43, label %270

; <label>:43:                                     ; preds = %42
  %44 = getelementptr inbounds %"struct.std::__detail::_ReuseOrAllocNode", %"struct.std::__detail::_ReuseOrAllocNode"* %24, i32 0, i32 0
  %45 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %44, align 8
  store %"struct.std::__detail::_Hash_node"* %45, %"struct.std::__detail::_Hash_node"** %20, align 8
  %46 = getelementptr inbounds %"struct.std::__detail::_ReuseOrAllocNode", %"struct.std::__detail::_ReuseOrAllocNode"* %24, i32 0, i32 0
  %47 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %46, align 8
  %48 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %47) #3
  %49 = getelementptr inbounds %"struct.std::__detail::_ReuseOrAllocNode", %"struct.std::__detail::_ReuseOrAllocNode"* %24, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %48, %"struct.std::__detail::_Hash_node"** %49, align 8
  %50 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %20, align 8
  %51 = bitcast %"struct.std::__detail::_Hash_node"* %50 to %"struct.std::__detail::_Hash_node_base"*
  %52 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %51, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %52, align 8
  %53 = getelementptr inbounds %"struct.std::__detail::_ReuseOrAllocNode", %"struct.std::__detail::_ReuseOrAllocNode"* %24, i32 0, i32 1
  %54 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %53, align 8
  %55 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %54)
  call void @_ZNSaISt4pairIKixEEC2INSt8__detail10_Hash_nodeIS1_Lb0EEEEERKSaIT_E(%"class.std::allocator.12"* %21, %"class.std::allocator.9"* dereferenceable(1) %55) #3
  %56 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %20, align 8
  %57 = bitcast %"struct.std::__detail::_Hash_node"* %56 to %"struct.std::__detail::_Hash_node_value_base"*
  %58 = call %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"* %57) #3
  invoke void @_ZNSt16allocator_traitsISaISt4pairIKixEEE7destroyIS2_EEvRS3_PT_(%"class.std::allocator.12"* dereferenceable(1) %21, %"struct.std::pair"* %58)
          to label %59 unwind label %96

; <label>:59:                                     ; preds = %43
  %60 = load i32, i32* @x.449
  %61 = load i32, i32* @y.450
  %62 = add i32 %60, -243298499
  %63 = sub i32 %62, 1
  %64 = sub i32 %63, -243298499
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  br i1 %72, label %74, label %424

; <label>:74:                                     ; preds = %59, %424
  %75 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %20, align 8
  %76 = bitcast %"struct.std::__detail::_Hash_node"* %75 to %"struct.std::__detail::_Hash_node_value_base"*
  %77 = call %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"* %76) #3
  %78 = load %"struct.std::pair"*, %"struct.std::pair"** %19, align 8
  %79 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIKixEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair"* dereferenceable(16) %78) #3
  %80 = load i32, i32* @x.449
  %81 = load i32, i32* @y.450
  %82 = sub i32 %80, 1315767188
  %83 = sub i32 %82, 1
  %84 = add i32 %83, 1315767188
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  br i1 %92, label %94, label %424

; <label>:94:                                     ; preds = %74
  invoke void @_ZNSt16allocator_traitsISaISt4pairIKixEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_(%"class.std::allocator.12"* dereferenceable(1) %21, %"struct.std::pair"* %77, %"struct.std::pair"* dereferenceable(16) %79)
          to label %95 unwind label %100

; <label>:95:                                     ; preds = %94
  br label %213

; <label>:96:                                     ; preds = %43
  %97 = landingpad { i8*, i32 }
          cleanup
  %98 = extractvalue { i8*, i32 } %97, 0
  store i8* %98, i8** %22, align 8
  %99 = extractvalue { i8*, i32 } %97, 1
  store i32 %99, i32* %23, align 4
  br label %215

; <label>:100:                                    ; preds = %94
  %101 = load i32, i32* @x.449
  %102 = load i32, i32* @y.450
  %103 = sub i32 0, 1
  %104 = add i32 %101, %103
  %105 = sub i32 %101, 1
  %106 = mul i32 %101, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %102, 10
  %110 = xor i1 %108, true
  %111 = xor i1 %109, true
  %112 = xor i1 false, true
  %113 = and i1 %110, false
  %114 = and i1 %108, %112
  %115 = and i1 %111, false
  %116 = and i1 %109, %112
  %117 = or i1 %113, %114
  %118 = or i1 %115, %116
  %119 = xor i1 %117, %118
  %120 = or i1 %110, %111
  %121 = xor i1 %120, true
  %122 = or i1 false, %112
  %123 = and i1 %121, %122
  %124 = or i1 %119, %123
  %125 = or i1 %108, %109
  br i1 %124, label %126, label %430

; <label>:126:                                    ; preds = %100, %430
  %127 = landingpad { i8*, i32 }
          catch i8* null
  %128 = extractvalue { i8*, i32 } %127, 0
  store i8* %128, i8** %22, align 8
  %129 = extractvalue { i8*, i32 } %127, 1
  store i32 %129, i32* %23, align 4
  %130 = load i32, i32* @x.449
  %131 = load i32, i32* @y.450
  %132 = sub i32 0, 1
  %133 = add i32 %130, %132
  %134 = sub i32 %130, 1
  %135 = mul i32 %130, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %131, 10
  %139 = xor i1 %137, true
  %140 = xor i1 %138, true
  %141 = xor i1 false, true
  %142 = and i1 %139, false
  %143 = and i1 %137, %141
  %144 = and i1 %140, false
  %145 = and i1 %138, %141
  %146 = or i1 %142, %143
  %147 = or i1 %144, %145
  %148 = xor i1 %146, %147
  %149 = or i1 %139, %140
  %150 = xor i1 %149, true
  %151 = or i1 false, %141
  %152 = and i1 %150, %151
  %153 = or i1 %148, %152
  %154 = or i1 %137, %138
  br i1 %153, label %155, label %430

; <label>:155:                                    ; preds = %126
  br label %156

; <label>:156:                                    ; preds = %155
  %157 = load i8*, i8** %22, align 8
  %158 = call i8* @__cxa_begin_catch(i8* %157) #3
  %159 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %20, align 8
  %160 = getelementptr inbounds %"struct.std::__detail::_ReuseOrAllocNode", %"struct.std::__detail::_ReuseOrAllocNode"* %24, i32 0, i32 1
  %161 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %160, align 8
  %162 = invoke dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %161)
          to label %163 unwind label %208

; <label>:163:                                    ; preds = %156
  %164 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %20, align 8
  invoke void @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE10deallocateERS6_PS5_m(%"class.std::allocator.9"* dereferenceable(1) %162, %"struct.std::__detail::_Hash_node"* %164, i64 1)
          to label %165 unwind label %208

; <label>:165:                                    ; preds = %163
  %166 = load i32, i32* @x.449
  %167 = load i32, i32* @y.450
  %168 = add i32 %166, 814992912
  %169 = sub i32 %168, 1
  %170 = sub i32 %169, 814992912
  %171 = sub i32 %166, 1
  %172 = mul i32 %166, %170
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %167, 10
  %176 = xor i1 %174, true
  %177 = xor i1 %175, true
  %178 = xor i1 false, true
  %179 = and i1 %176, false
  %180 = and i1 %174, %178
  %181 = and i1 %177, false
  %182 = and i1 %175, %178
  %183 = or i1 %179, %180
  %184 = or i1 %181, %182
  %185 = xor i1 %183, %184
  %186 = or i1 %176, %177
  %187 = xor i1 %186, true
  %188 = or i1 false, %178
  %189 = and i1 %187, %188
  %190 = or i1 %185, %189
  %191 = or i1 %174, %175
  br i1 %190, label %192, label %434

; <label>:192:                                    ; preds = %165, %434
  %193 = load i32, i32* @x.449
  %194 = load i32, i32* @y.450
  %195 = add i32 %193, 937097651
  %196 = sub i32 %195, 1
  %197 = sub i32 %196, 937097651
  %198 = sub i32 %193, 1
  %199 = mul i32 %193, %197
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %194, 10
  %203 = and i1 %201, %202
  %204 = xor i1 %201, %202
  %205 = or i1 %203, %204
  %206 = or i1 %201, %202
  br i1 %205, label %207, label %434

; <label>:207:                                    ; preds = %192
  invoke void @__cxa_rethrow() #12
          to label %411 unwind label %208

; <label>:208:                                    ; preds = %207, %163, %156
  %209 = landingpad { i8*, i32 }
          cleanup
  %210 = extractvalue { i8*, i32 } %209, 0
  store i8* %210, i8** %22, align 8
  %211 = extractvalue { i8*, i32 } %209, 1
  store i32 %211, i32* %23, align 4
  invoke void @__cxa_end_catch()
          to label %212 unwind label %408

; <label>:212:                                    ; preds = %208
  br label %215

; <label>:213:                                    ; preds = %95
  %214 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %20, align 8
  store %"struct.std::__detail::_Hash_node"* %214, %"struct.std::__detail::_Hash_node"** %17, align 8
  call void @_ZNSaISt4pairIKixEED2Ev(%"class.std::allocator.12"* %21) #3
  br label %330

; <label>:215:                                    ; preds = %212, %96
  %216 = load i32, i32* @x.449
  %217 = load i32, i32* @y.450
  %218 = sub i32 %216, -1539738720
  %219 = sub i32 %218, 1
  %220 = add i32 %219, -1539738720
  %221 = sub i32 %216, 1
  %222 = mul i32 %216, %220
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %217, 10
  %226 = xor i1 %224, true
  %227 = xor i1 %225, true
  %228 = xor i1 false, true
  %229 = and i1 %226, false
  %230 = and i1 %224, %228
  %231 = and i1 %227, false
  %232 = and i1 %225, %228
  %233 = or i1 %229, %230
  %234 = or i1 %231, %232
  %235 = xor i1 %233, %234
  %236 = or i1 %226, %227
  %237 = xor i1 %236, true
  %238 = or i1 false, %228
  %239 = and i1 %237, %238
  %240 = or i1 %235, %239
  %241 = or i1 %224, %225
  br i1 %240, label %242, label %435

; <label>:242:                                    ; preds = %215, %435
  call void @_ZNSaISt4pairIKixEED2Ev(%"class.std::allocator.12"* %21) #3
  %243 = load i32, i32* @x.449
  %244 = load i32, i32* @y.450
  %245 = add i32 %243, 690420975
  %246 = sub i32 %245, 1
  %247 = sub i32 %246, 690420975
  %248 = sub i32 %243, 1
  %249 = mul i32 %243, %247
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %244, 10
  %253 = xor i1 %251, true
  %254 = xor i1 %252, true
  %255 = xor i1 true, true
  %256 = and i1 %253, true
  %257 = and i1 %251, %255
  %258 = and i1 %254, true
  %259 = and i1 %252, %255
  %260 = or i1 %256, %257
  %261 = or i1 %258, %259
  %262 = xor i1 %260, %261
  %263 = or i1 %253, %254
  %264 = xor i1 %263, true
  %265 = or i1 true, %255
  %266 = and i1 %264, %265
  %267 = or i1 %262, %266
  %268 = or i1 %251, %252
  br i1 %267, label %269, label %435

; <label>:269:                                    ; preds = %242
  br label %374

; <label>:270:                                    ; preds = %42
  %271 = load i32, i32* @x.449
  %272 = load i32, i32* @y.450
  %273 = add i32 %271, 122829992
  %274 = sub i32 %273, 1
  %275 = sub i32 %274, 122829992
  %276 = sub i32 %271, 1
  %277 = mul i32 %271, %275
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %272, 10
  %281 = xor i1 %279, true
  %282 = xor i1 %280, true
  %283 = xor i1 true, true
  %284 = and i1 %281, true
  %285 = and i1 %279, %283
  %286 = and i1 %282, true
  %287 = and i1 %280, %283
  %288 = or i1 %284, %285
  %289 = or i1 %286, %287
  %290 = xor i1 %288, %289
  %291 = or i1 %281, %282
  %292 = xor i1 %291, true
  %293 = or i1 true, %283
  %294 = and i1 %292, %293
  %295 = or i1 %290, %294
  %296 = or i1 %279, %280
  br i1 %295, label %297, label %436

; <label>:297:                                    ; preds = %270, %436
  %298 = getelementptr inbounds %"struct.std::__detail::_ReuseOrAllocNode", %"struct.std::__detail::_ReuseOrAllocNode"* %24, i32 0, i32 1
  %299 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %298, align 8
  %300 = load %"struct.std::pair"*, %"struct.std::pair"** %19, align 8
  %301 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIKixEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair"* dereferenceable(16) %300) #3
  %302 = call %"struct.std::__detail::_Hash_node"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE16_M_allocate_nodeIJRKS4_EEEPS5_DpOT_(%"struct.std::__detail::_Hashtable_alloc"* %299, %"struct.std::pair"* dereferenceable(16) %301)
  store %"struct.std::__detail::_Hash_node"* %302, %"struct.std::__detail::_Hash_node"** %17, align 8
  %303 = load i32, i32* @x.449
  %304 = load i32, i32* @y.450
  %305 = add i32 %303, 727875588
  %306 = sub i32 %305, 1
  %307 = sub i32 %306, 727875588
  %308 = sub i32 %303, 1
  %309 = mul i32 %303, %307
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %304, 10
  %313 = xor i1 %311, true
  %314 = xor i1 %312, true
  %315 = xor i1 false, true
  %316 = and i1 %313, false
  %317 = and i1 %311, %315
  %318 = and i1 %314, false
  %319 = and i1 %312, %315
  %320 = or i1 %316, %317
  %321 = or i1 %318, %319
  %322 = xor i1 %320, %321
  %323 = or i1 %313, %314
  %324 = xor i1 %323, true
  %325 = or i1 false, %315
  %326 = and i1 %324, %325
  %327 = or i1 %322, %326
  %328 = or i1 %311, %312
  br i1 %327, label %329, label %436

; <label>:329:                                    ; preds = %297
  br label %330

; <label>:330:                                    ; preds = %329, %213
  %331 = load i32, i32* @x.449
  %332 = load i32, i32* @y.450
  %333 = sub i32 %331, -1297156276
  %334 = sub i32 %333, 1
  %335 = add i32 %334, -1297156276
  %336 = sub i32 %331, 1
  %337 = mul i32 %331, %335
  %338 = urem i32 %337, 2
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %332, 10
  %341 = xor i1 %339, true
  %342 = xor i1 %340, true
  %343 = xor i1 false, true
  %344 = and i1 %341, false
  %345 = and i1 %339, %343
  %346 = and i1 %342, false
  %347 = and i1 %340, %343
  %348 = or i1 %344, %345
  %349 = or i1 %346, %347
  %350 = xor i1 %348, %349
  %351 = or i1 %341, %342
  %352 = xor i1 %351, true
  %353 = or i1 false, %343
  %354 = and i1 %352, %353
  %355 = or i1 %350, %354
  %356 = or i1 %339, %340
  br i1 %355, label %357, label %442

; <label>:357:                                    ; preds = %330, %442
  %358 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %17, align 8
  %359 = load i32, i32* @x.449
  %360 = load i32, i32* @y.450
  %361 = add i32 %359, 944224112
  %362 = sub i32 %361, 1
  %363 = sub i32 %362, 944224112
  %364 = sub i32 %359, 1
  %365 = mul i32 %359, %363
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %360, 10
  %369 = and i1 %367, %368
  %370 = xor i1 %367, %368
  %371 = or i1 %369, %370
  %372 = or i1 %367, %368
  br i1 %371, label %373, label %442

; <label>:373:                                    ; preds = %357
  ret %"struct.std::__detail::_Hash_node"* %358

; <label>:374:                                    ; preds = %269
  %375 = load i32, i32* @x.449
  %376 = load i32, i32* @y.450
  %377 = sub i32 0, 1
  %378 = add i32 %375, %377
  %379 = sub i32 %375, 1
  %380 = mul i32 %375, %378
  %381 = urem i32 %380, 2
  %382 = icmp eq i32 %381, 0
  %383 = icmp slt i32 %376, 10
  %384 = and i1 %382, %383
  %385 = xor i1 %382, %383
  %386 = or i1 %384, %385
  %387 = or i1 %382, %383
  br i1 %386, label %388, label %444

; <label>:388:                                    ; preds = %374, %444
  %389 = load i8*, i8** %22, align 8
  %390 = load i32, i32* %23, align 4
  %391 = insertvalue { i8*, i32 } undef, i8* %389, 0
  %392 = insertvalue { i8*, i32 } %391, i32 %390, 1
  %393 = load i32, i32* @x.449
  %394 = load i32, i32* @y.450
  %395 = sub i32 %393, -1955053190
  %396 = sub i32 %395, 1
  %397 = add i32 %396, -1955053190
  %398 = sub i32 %393, 1
  %399 = mul i32 %393, %397
  %400 = urem i32 %399, 2
  %401 = icmp eq i32 %400, 0
  %402 = icmp slt i32 %394, 10
  %403 = and i1 %401, %402
  %404 = xor i1 %401, %402
  %405 = or i1 %403, %404
  %406 = or i1 %401, %402
  br i1 %405, label %407, label %444

; <label>:407:                                    ; preds = %388
  resume { i8*, i32 } %392

; <label>:408:                                    ; preds = %208
  %409 = landingpad { i8*, i32 }
          catch i8* null
  %410 = extractvalue { i8*, i32 } %409, 0
  call void @__clang_call_terminate(i8* %410) #11
  unreachable

; <label>:411:                                    ; preds = %207
  unreachable

; <label>:412:                                    ; preds = %16, %2
  %413 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %414 = alloca %"struct.std::__detail::_ReuseOrAllocNode"*, align 8
  %415 = alloca %"struct.std::pair"*, align 8
  %416 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %417 = alloca %"class.std::allocator.12", align 1
  %418 = alloca i8*
  %419 = alloca i32
  store %"struct.std::__detail::_ReuseOrAllocNode"* %0, %"struct.std::__detail::_ReuseOrAllocNode"** %414, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %415, align 8
  %420 = load %"struct.std::__detail::_ReuseOrAllocNode"*, %"struct.std::__detail::_ReuseOrAllocNode"** %414, align 8
  %421 = getelementptr inbounds %"struct.std::__detail::_ReuseOrAllocNode", %"struct.std::__detail::_ReuseOrAllocNode"* %420, i32 0, i32 0
  %422 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %421, align 8
  %423 = icmp ne %"struct.std::__detail::_Hash_node"* %422, null
  br label %16

; <label>:424:                                    ; preds = %74, %59
  %425 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %20, align 8
  %426 = bitcast %"struct.std::__detail::_Hash_node"* %425 to %"struct.std::__detail::_Hash_node_value_base"*
  %427 = call %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"* %426) #3
  %428 = load %"struct.std::pair"*, %"struct.std::pair"** %19, align 8
  %429 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIKixEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair"* dereferenceable(16) %428) #3
  br label %74

; <label>:430:                                    ; preds = %126, %100
  %431 = landingpad { i8*, i32 }
          catch i8* null
  %432 = extractvalue { i8*, i32 } %431, 0
  store i8* %432, i8** %22, align 8
  %433 = extractvalue { i8*, i32 } %431, 1
  store i32 %433, i32* %23, align 4
  br label %126

; <label>:434:                                    ; preds = %192, %165
  br label %192

; <label>:435:                                    ; preds = %242, %215
  call void @_ZNSaISt4pairIKixEED2Ev(%"class.std::allocator.12"* %21) #3
  br label %242

; <label>:436:                                    ; preds = %297, %270
  %437 = getelementptr inbounds %"struct.std::__detail::_ReuseOrAllocNode", %"struct.std::__detail::_ReuseOrAllocNode"* %24, i32 0, i32 1
  %438 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %437, align 8
  %439 = load %"struct.std::pair"*, %"struct.std::pair"** %19, align 8
  %440 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIKixEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair"* dereferenceable(16) %439) #3
  %441 = call %"struct.std::__detail::_Hash_node"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE16_M_allocate_nodeIJRKS4_EEEPS5_DpOT_(%"struct.std::__detail::_Hashtable_alloc"* %438, %"struct.std::pair"* dereferenceable(16) %440)
  store %"struct.std::__detail::_Hash_node"* %441, %"struct.std::__detail::_Hash_node"** %17, align 8
  br label %297

; <label>:442:                                    ; preds = %357, %330
  %443 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %17, align 8
  br label %357

; <label>:444:                                    ; preds = %388, %374
  %445 = load i8*, i8** %22, align 8
  %446 = load i32, i32* %23, align 4
  %447 = insertvalue { i8*, i32 } undef, i8* %445, 0
  %448 = insertvalue { i8*, i32 } %447, i32 %446, 1
  br label %388
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEELb1EE7_S_baseESH_(%"class.std::unordered_map"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %2, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %3, align 8
  %4 = call dereferenceable(8) %"class.std::unordered_map"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.18"* %2) #3
  %5 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  ret %"class.std::unordered_map"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEELb1EE7_S_baseESG_(%"class.std::unordered_map"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %2, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %3, align 8
  %4 = call dereferenceable(8) %"class.std::unordered_map"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.19"* %2) #3
  %5 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  ret %"class.std::unordered_map"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEELb0EE7_S_baseESH_(%"class.std::unordered_map"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %3, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %2 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %2, i32 0, i32 0
  %8 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  ret %"class.std::unordered_map"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt14__copy_move_a2ILb0EPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_ET1_T0_SC_SB_(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat {
  %4 = alloca %"class.std::unordered_map"*, align 8
  %5 = alloca %"class.std::unordered_map"*, align 8
  %6 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %4, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %5, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %6, align 8
  %7 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %8 = call %"class.std::unordered_map"* @_ZSt12__niter_baseIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEENSt11_Niter_baseIT_E13iterator_typeESC_(%"class.std::unordered_map"* %7)
  %9 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %5, align 8
  %10 = call %"class.std::unordered_map"* @_ZSt12__niter_baseIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEENSt11_Niter_baseIT_E13iterator_typeESC_(%"class.std::unordered_map"* %9)
  %11 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  %12 = call %"class.std::unordered_map"* @_ZSt12__niter_baseIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEENSt11_Niter_baseIT_E13iterator_typeESC_(%"class.std::unordered_map"* %11)
  %13 = call %"class.std::unordered_map"* @_ZSt13__copy_move_aILb0EPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_ET1_T0_SC_SB_(%"class.std::unordered_map"* %8, %"class.std::unordered_map"* %10, %"class.std::unordered_map"* %12)
  ret %"class.std::unordered_map"* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt12__miter_baseIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEENSt11_Miter_baseIT_E13iterator_typeESC_(%"class.std::unordered_map"*) #4 comdat {
  %2 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %2, align 8
  %3 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %2, align 8
  %4 = call %"class.std::unordered_map"* @_ZNSt10_Iter_baseIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEELb0EE7_S_baseESA_(%"class.std::unordered_map"* %3)
  ret %"class.std::unordered_map"* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt13__copy_move_aILb0EPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_ET1_T0_SC_SB_(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat {
  %4 = alloca %"class.std::unordered_map"*, align 8
  %5 = alloca %"class.std::unordered_map"*, align 8
  %6 = alloca %"class.std::unordered_map"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %4, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %5, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %6, align 8
  store i8 0, i8* %7, align 1
  %8 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %9 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %5, align 8
  %10 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  %11 = call %"class.std::unordered_map"* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESD_EET0_T_SF_SE_(%"class.std::unordered_map"* %8, %"class.std::unordered_map"* %9, %"class.std::unordered_map"* %10)
  ret %"class.std::unordered_map"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt12__niter_baseIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEENSt11_Niter_baseIT_E13iterator_typeESC_(%"class.std::unordered_map"*) #0 comdat {
  %2 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %2, align 8
  %3 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %2, align 8
  %4 = call %"class.std::unordered_map"* @_ZNSt10_Iter_baseIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEELb0EE7_S_baseESA_(%"class.std::unordered_map"* %3)
  ret %"class.std::unordered_map"* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESD_EET0_T_SF_SE_(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"class.std::unordered_map"*, align 8
  %6 = alloca %"class.std::unordered_map"*, align 8
  %7 = alloca %"class.std::unordered_map"*, align 8
  %8 = alloca i64, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %5, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %6, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %7, align 8
  %9 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  %10 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %5, align 8
  %11 = ptrtoint %"class.std::unordered_map"* %9 to i64
  %12 = ptrtoint %"class.std::unordered_map"* %10 to i64
  %13 = sub i64 %11, -2510231178233136044
  %14 = sub i64 %13, %12
  %15 = add i64 %14, -2510231178233136044
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 56
  store i64 %17, i64* %8, align 8
  %18 = alloca i32
  store i32 -1190073089, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %89
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1190073089, label %22
    i32 -425910681, label %50
    i32 1392325971, label %67
    i32 619084203, label %70
    i32 2128328145, label %78
    i32 -1545429008, label %84
    i32 -793528896, label %86
  ]

; <label>:21:                                     ; preds = %19
  br label %89

; <label>:22:                                     ; preds = %19
  %23 = load i32, i32* @x.465
  %24 = load i32, i32* @y.466
  %25 = sub i32 %23, -2073791178
  %26 = sub i32 %25, 1
  %27 = add i32 %26, -2073791178
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 false, true
  %36 = and i1 %33, false
  %37 = and i1 %31, %35
  %38 = and i1 %34, false
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 false, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  %49 = select i1 %47, i32 -425910681, i32 -793528896
  store i32 %49, i32* %18
  br label %89

; <label>:50:                                     ; preds = %19
  %51 = load i64, i64* %8, align 8
  %52 = icmp sgt i64 %51, 0
  store i1 %52, i1* %4
  %53 = load i32, i32* @x.465
  %54 = load i32, i32* @y.466
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 1392325971, i32 -793528896
  store i32 %66, i32* %18
  br label %89

; <label>:67:                                     ; preds = %19
  %68 = load volatile i1, i1* %4
  %69 = select i1 %68, i32 619084203, i32 -1545429008
  store i32 %69, i32* %18
  br label %89

; <label>:70:                                     ; preds = %19
  %71 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %5, align 8
  %72 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  %73 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEaSERKS8_(%"class.std::unordered_map"* %72, %"class.std::unordered_map"* dereferenceable(56) %71)
  %74 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %5, align 8
  %75 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %74, i32 1
  store %"class.std::unordered_map"* %75, %"class.std::unordered_map"** %5, align 8
  %76 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  %77 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %76, i32 1
  store %"class.std::unordered_map"* %77, %"class.std::unordered_map"** %7, align 8
  store i32 2128328145, i32* %18
  br label %89

; <label>:78:                                     ; preds = %19
  %79 = load i64, i64* %8, align 8
  %80 = sub i64 %79, -595114863586152223
  %81 = add i64 %80, -1
  %82 = add i64 %81, -595114863586152223
  %83 = add nsw i64 %79, -1
  store i64 %82, i64* %8, align 8
  store i32 -1190073089, i32* %18
  br label %89

; <label>:84:                                     ; preds = %19
  %85 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  ret %"class.std::unordered_map"* %85

; <label>:86:                                     ; preds = %19
  %87 = load i64, i64* %8, align 8
  %88 = icmp sgt i64 %87, 0
  store i32 -425910681, i32* %18
  br label %89

; <label>:89:                                     ; preds = %86, %78, %70, %67, %50, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNSt10_Iter_baseIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEELb0EE7_S_baseESA_(%"class.std::unordered_map"*) #4 comdat align 2 {
  %2 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %2, align 8
  %3 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %2, align 8
  ret %"class.std::unordered_map"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt18uninitialized_copyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_ET0_T_SC_SB_(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat {
  %4 = alloca %"class.std::unordered_map"*, align 8
  %5 = alloca %"class.std::unordered_map"*, align 8
  %6 = alloca %"class.std::unordered_map"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %4, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %5, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %9 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %5, align 8
  %10 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  %11 = call %"class.std::unordered_map"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESC_EET0_T_SE_SD_(%"class.std::unordered_map"* %8, %"class.std::unordered_map"* %9, %"class.std::unordered_map"* %10)
  ret %"class.std::unordered_map"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESC_EET0_T_SE_SD_(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.471
  %5 = load i32, i32* @y.472
  %6 = add i32 %4, -994282803
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -994282803
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 false, true
  %17 = and i1 %14, false
  %18 = and i1 %12, %16
  %19 = and i1 %15, false
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 false, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %341

; <label>:30:                                     ; preds = %3, %341
  %31 = alloca %"class.std::unordered_map"*, align 8
  %32 = alloca %"class.std::unordered_map"*, align 8
  %33 = alloca %"class.std::unordered_map"*, align 8
  %34 = alloca %"class.std::unordered_map"*, align 8
  %35 = alloca i8*
  %36 = alloca i32
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %31, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %32, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %33, align 8
  %37 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %33, align 8
  store %"class.std::unordered_map"* %37, %"class.std::unordered_map"** %34, align 8
  %38 = load i32, i32* @x.471
  %39 = load i32, i32* @y.472
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  br i1 %49, label %51, label %341

; <label>:51:                                     ; preds = %30
  br label %52

; <label>:52:                                     ; preds = %91, %51
  %53 = load i32, i32* @x.471
  %54 = load i32, i32* @y.472
  %55 = sub i32 %53, 2135040277
  %56 = sub i32 %55, 1
  %57 = add i32 %56, 2135040277
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  br i1 %65, label %67, label %349

; <label>:67:                                     ; preds = %52, %349
  %68 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %31, align 8
  %69 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %32, align 8
  %70 = icmp ne %"class.std::unordered_map"* %68, %69
  %71 = load i32, i32* @x.471
  %72 = load i32, i32* @y.472
  %73 = add i32 %71, -1653759946
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, -1653759946
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  br i1 %83, label %85, label %349

; <label>:85:                                     ; preds = %67
  br i1 %70, label %86, label %188

; <label>:86:                                     ; preds = %85
  %87 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %34, align 8
  %88 = call %"class.std::unordered_map"* @_ZSt11__addressofISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEPT_RSA_(%"class.std::unordered_map"* dereferenceable(56) %87) #3
  %89 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %31, align 8
  invoke void @_ZSt10_ConstructISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEJRS9_EEvPT_DpOT0_(%"class.std::unordered_map"* %88, %"class.std::unordered_map"* dereferenceable(56) %89)
          to label %90 unwind label %96

; <label>:90:                                     ; preds = %86
  br label %91

; <label>:91:                                     ; preds = %90
  %92 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %31, align 8
  %93 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %92, i32 1
  store %"class.std::unordered_map"* %93, %"class.std::unordered_map"** %31, align 8
  %94 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %34, align 8
  %95 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %94, i32 1
  store %"class.std::unordered_map"* %95, %"class.std::unordered_map"** %34, align 8
  br label %52

; <label>:96:                                     ; preds = %86
  %97 = load i32, i32* @x.471
  %98 = load i32, i32* @y.472
  %99 = sub i32 0, 1
  %100 = add i32 %97, %99
  %101 = sub i32 %97, 1
  %102 = mul i32 %97, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %98, 10
  %106 = xor i1 %104, true
  %107 = xor i1 %105, true
  %108 = xor i1 false, true
  %109 = and i1 %106, false
  %110 = and i1 %104, %108
  %111 = and i1 %107, false
  %112 = and i1 %105, %108
  %113 = or i1 %109, %110
  %114 = or i1 %111, %112
  %115 = xor i1 %113, %114
  %116 = or i1 %106, %107
  %117 = xor i1 %116, true
  %118 = or i1 false, %108
  %119 = and i1 %117, %118
  %120 = or i1 %115, %119
  %121 = or i1 %104, %105
  br i1 %120, label %122, label %353

; <label>:122:                                    ; preds = %96, %353
  %123 = landingpad { i8*, i32 }
          catch i8* null
  %124 = extractvalue { i8*, i32 } %123, 0
  store i8* %124, i8** %35, align 8
  %125 = extractvalue { i8*, i32 } %123, 1
  store i32 %125, i32* %36, align 4
  %126 = load i32, i32* @x.471
  %127 = load i32, i32* @y.472
  %128 = add i32 %126, 189557791
  %129 = sub i32 %128, 1
  %130 = sub i32 %129, 189557791
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = and i1 %134, %135
  %137 = xor i1 %134, %135
  %138 = or i1 %136, %137
  %139 = or i1 %134, %135
  br i1 %138, label %140, label %353

; <label>:140:                                    ; preds = %122
  br label %141

; <label>:141:                                    ; preds = %140
  %142 = load i8*, i8** %35, align 8
  %143 = call i8* @__cxa_begin_catch(i8* %142) #3
  %144 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %33, align 8
  %145 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %34, align 8
  invoke void @_ZSt8_DestroyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvT_SB_(%"class.std::unordered_map"* %144, %"class.std::unordered_map"* %145)
          to label %146 unwind label %244

; <label>:146:                                    ; preds = %141
  %147 = load i32, i32* @x.471
  %148 = load i32, i32* @y.472
  %149 = add i32 %147, -484736775
  %150 = sub i32 %149, 1
  %151 = sub i32 %150, -484736775
  %152 = sub i32 %147, 1
  %153 = mul i32 %147, %151
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %148, 10
  %157 = xor i1 %155, true
  %158 = xor i1 %156, true
  %159 = xor i1 false, true
  %160 = and i1 %157, false
  %161 = and i1 %155, %159
  %162 = and i1 %158, false
  %163 = and i1 %156, %159
  %164 = or i1 %160, %161
  %165 = or i1 %162, %163
  %166 = xor i1 %164, %165
  %167 = or i1 %157, %158
  %168 = xor i1 %167, true
  %169 = or i1 false, %159
  %170 = and i1 %168, %169
  %171 = or i1 %166, %170
  %172 = or i1 %155, %156
  br i1 %171, label %173, label %357

; <label>:173:                                    ; preds = %146, %357
  %174 = load i32, i32* @x.471
  %175 = load i32, i32* @y.472
  %176 = sub i32 0, 1
  %177 = add i32 %174, %176
  %178 = sub i32 %174, 1
  %179 = mul i32 %174, %177
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %175, 10
  %183 = and i1 %181, %182
  %184 = xor i1 %181, %182
  %185 = or i1 %183, %184
  %186 = or i1 %181, %182
  br i1 %185, label %187, label %357

; <label>:187:                                    ; preds = %173
  invoke void @__cxa_rethrow() #12
          to label %298 unwind label %244

; <label>:188:                                    ; preds = %85
  %189 = load i32, i32* @x.471
  %190 = load i32, i32* @y.472
  %191 = add i32 %189, -803012435
  %192 = sub i32 %191, 1
  %193 = sub i32 %192, -803012435
  %194 = sub i32 %189, 1
  %195 = mul i32 %189, %193
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %190, 10
  %199 = xor i1 %197, true
  %200 = xor i1 %198, true
  %201 = xor i1 false, true
  %202 = and i1 %199, false
  %203 = and i1 %197, %201
  %204 = and i1 %200, false
  %205 = and i1 %198, %201
  %206 = or i1 %202, %203
  %207 = or i1 %204, %205
  %208 = xor i1 %206, %207
  %209 = or i1 %199, %200
  %210 = xor i1 %209, true
  %211 = or i1 false, %201
  %212 = and i1 %210, %211
  %213 = or i1 %208, %212
  %214 = or i1 %197, %198
  br i1 %213, label %215, label %358

; <label>:215:                                    ; preds = %188, %358
  %216 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %34, align 8
  %217 = load i32, i32* @x.471
  %218 = load i32, i32* @y.472
  %219 = add i32 %217, -431858701
  %220 = sub i32 %219, 1
  %221 = sub i32 %220, -431858701
  %222 = sub i32 %217, 1
  %223 = mul i32 %217, %221
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %218, 10
  %227 = xor i1 %225, true
  %228 = xor i1 %226, true
  %229 = xor i1 false, true
  %230 = and i1 %227, false
  %231 = and i1 %225, %229
  %232 = and i1 %228, false
  %233 = and i1 %226, %229
  %234 = or i1 %230, %231
  %235 = or i1 %232, %233
  %236 = xor i1 %234, %235
  %237 = or i1 %227, %228
  %238 = xor i1 %237, true
  %239 = or i1 false, %229
  %240 = and i1 %238, %239
  %241 = or i1 %236, %240
  %242 = or i1 %225, %226
  br i1 %241, label %243, label %358

; <label>:243:                                    ; preds = %215
  ret %"class.std::unordered_map"* %216

; <label>:244:                                    ; preds = %187, %141
  %245 = landingpad { i8*, i32 }
          cleanup
  %246 = extractvalue { i8*, i32 } %245, 0
  store i8* %246, i8** %35, align 8
  %247 = extractvalue { i8*, i32 } %245, 1
  store i32 %247, i32* %36, align 4
  invoke void @__cxa_end_catch()
          to label %248 unwind label %295

; <label>:248:                                    ; preds = %244
  br label %290
                                                  ; No predecessors!
  %250 = load i32, i32* @x.471
  %251 = load i32, i32* @y.472
  %252 = sub i32 0, 1
  %253 = add i32 %250, %252
  %254 = sub i32 %250, 1
  %255 = mul i32 %250, %253
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %251, 10
  %259 = xor i1 %257, true
  %260 = xor i1 %258, true
  %261 = xor i1 true, true
  %262 = and i1 %259, true
  %263 = and i1 %257, %261
  %264 = and i1 %260, true
  %265 = and i1 %258, %261
  %266 = or i1 %262, %263
  %267 = or i1 %264, %265
  %268 = xor i1 %266, %267
  %269 = or i1 %259, %260
  %270 = xor i1 %269, true
  %271 = or i1 true, %261
  %272 = and i1 %270, %271
  %273 = or i1 %268, %272
  %274 = or i1 %257, %258
  br i1 %273, label %275, label %360

; <label>:275:                                    ; preds = %249, %360
  call void @llvm.trap()
  %276 = load i32, i32* @x.471
  %277 = load i32, i32* @y.472
  %278 = sub i32 0, 1
  %279 = add i32 %276, %278
  %280 = sub i32 %276, 1
  %281 = mul i32 %276, %279
  %282 = urem i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %277, 10
  %285 = and i1 %283, %284
  %286 = xor i1 %283, %284
  %287 = or i1 %285, %286
  %288 = or i1 %283, %284
  br i1 %287, label %289, label %360

; <label>:289:                                    ; preds = %275
  unreachable

; <label>:290:                                    ; preds = %248
  %291 = load i8*, i8** %35, align 8
  %292 = load i32, i32* %36, align 4
  %293 = insertvalue { i8*, i32 } undef, i8* %291, 0
  %294 = insertvalue { i8*, i32 } %293, i32 %292, 1
  resume { i8*, i32 } %294

; <label>:295:                                    ; preds = %244
  %296 = landingpad { i8*, i32 }
          catch i8* null
  %297 = extractvalue { i8*, i32 } %296, 0
  call void @__clang_call_terminate(i8* %297) #11
  unreachable

; <label>:298:                                    ; preds = %187
  %299 = load i32, i32* @x.471
  %300 = load i32, i32* @y.472
  %301 = add i32 %299, -1375121402
  %302 = sub i32 %301, 1
  %303 = sub i32 %302, -1375121402
  %304 = sub i32 %299, 1
  %305 = mul i32 %299, %303
  %306 = urem i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %300, 10
  %309 = and i1 %307, %308
  %310 = xor i1 %307, %308
  %311 = or i1 %309, %310
  %312 = or i1 %307, %308
  br i1 %311, label %313, label %361

; <label>:313:                                    ; preds = %298, %361
  %314 = load i32, i32* @x.471
  %315 = load i32, i32* @y.472
  %316 = add i32 %314, 1174861970
  %317 = sub i32 %316, 1
  %318 = sub i32 %317, 1174861970
  %319 = sub i32 %314, 1
  %320 = mul i32 %314, %318
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %315, 10
  %324 = xor i1 %322, true
  %325 = xor i1 %323, true
  %326 = xor i1 false, true
  %327 = and i1 %324, false
  %328 = and i1 %322, %326
  %329 = and i1 %325, false
  %330 = and i1 %323, %326
  %331 = or i1 %327, %328
  %332 = or i1 %329, %330
  %333 = xor i1 %331, %332
  %334 = or i1 %324, %325
  %335 = xor i1 %334, true
  %336 = or i1 false, %326
  %337 = and i1 %335, %336
  %338 = or i1 %333, %337
  %339 = or i1 %322, %323
  br i1 %338, label %340, label %361

; <label>:340:                                    ; preds = %313
  unreachable

; <label>:341:                                    ; preds = %30, %3
  %342 = alloca %"class.std::unordered_map"*, align 8
  %343 = alloca %"class.std::unordered_map"*, align 8
  %344 = alloca %"class.std::unordered_map"*, align 8
  %345 = alloca %"class.std::unordered_map"*, align 8
  %346 = alloca i8*
  %347 = alloca i32
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %342, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %343, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %344, align 8
  %348 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %344, align 8
  store %"class.std::unordered_map"* %348, %"class.std::unordered_map"** %345, align 8
  br label %30

; <label>:349:                                    ; preds = %67, %52
  %350 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %31, align 8
  %351 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %32, align 8
  %352 = icmp ne %"class.std::unordered_map"* %350, %351
  br label %67

; <label>:353:                                    ; preds = %122, %96
  %354 = landingpad { i8*, i32 }
          catch i8* null
  %355 = extractvalue { i8*, i32 } %354, 0
  store i8* %355, i8** %35, align 8
  %356 = extractvalue { i8*, i32 } %354, 1
  store i32 %356, i32* %36, align 4
  br label %122

; <label>:357:                                    ; preds = %173, %146
  br label %173

; <label>:358:                                    ; preds = %215, %188
  %359 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %34, align 8
  br label %215

; <label>:360:                                    ; preds = %275, %249
  call void @llvm.trap()
  br label %275

; <label>:361:                                    ; preds = %313, %298
  br label %313
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEJRS9_EEvPT_DpOT0_(%"class.std::unordered_map"*, %"class.std::unordered_map"* dereferenceable(56)) #0 comdat {
  %3 = alloca %"class.std::unordered_map"*, align 8
  %4 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %3, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %4, align 8
  %5 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %3, align 8
  %6 = bitcast %"class.std::unordered_map"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::unordered_map"*
  %8 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %9 = call dereferenceable(56) %"class.std::unordered_map"* @_ZSt7forwardIRSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEOT_RNSt16remove_referenceISB_E4typeE(%"class.std::unordered_map"* dereferenceable(56) %8) #3
  call void @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEC2ERKS8_(%"class.std::unordered_map"* %7, %"class.std::unordered_map"* dereferenceable(56) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(56) %"class.std::unordered_map"* @_ZSt7forwardIRSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEOT_RNSt16remove_referenceISB_E4typeE(%"class.std::unordered_map"* dereferenceable(56)) #4 comdat {
  %2 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %2, align 8
  %3 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %2, align 8
  ret %"class.std::unordered_map"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EES2_ISE_SaISE_EEEELb1EE7_S_baseESI_(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %4 = call dereferenceable(8) %"class.std::vector.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EES1_ISD_SaISD_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %2) #3
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  ret %"class.std::vector.0"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EES1_ISD_SaISD_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret %"class.std::vector.0"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EES1_ISD_SaISD_EEEC2ERKSE_(%"class.__gnu_cxx::__normal_iterator"*, %"class.std::vector.0"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.std::vector.0"**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.std::vector.0"** %1, %"class.std::vector.0"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.0"**, %"class.std::vector.0"*** %4, align 8
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  store %"class.std::vector.0"* %8, %"class.std::vector.0"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt20uninitialized_fill_nIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEmSC_ET_SE_T0_RKT1_(%"class.std::vector.0"*, i64, %"class.std::vector.0"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.0"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %11 = call %"class.std::vector.0"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EEmSE_EET_SG_T0_RKT1_(%"class.std::vector.0"* %8, i64 %9, %"class.std::vector.0"* dereferenceable(24) %10)
  ret %"class.std::vector.0"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EEmSE_EET_SG_T0_RKT1_(%"class.std::vector.0"*, i64, %"class.std::vector.0"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.0"*, align 8
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %6, align 8
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  store %"class.std::vector.0"* %10, %"class.std::vector.0"** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %48, %3
  %12 = load i32, i32* @x.485
  %13 = load i32, i32* @y.486
  %14 = sub i32 0, 1
  %15 = add i32 %12, %14
  %16 = sub i32 %12, 1
  %17 = mul i32 %12, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %13, 10
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  br i1 %23, label %25, label %178

; <label>:25:                                     ; preds = %11, %178
  %26 = load i64, i64* %5, align 8
  %27 = icmp ugt i64 %26, 0
  %28 = load i32, i32* @x.485
  %29 = load i32, i32* @y.486
  %30 = sub i32 %28, -1994766579
  %31 = sub i32 %30, 1
  %32 = add i32 %31, -1994766579
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  br i1 %40, label %42, label %178

; <label>:42:                                     ; preds = %25
  br i1 %27, label %43, label %66

; <label>:43:                                     ; preds = %42
  %44 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %45 = call %"class.std::vector.0"* @_ZSt11__addressofISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEPT_RSD_(%"class.std::vector.0"* dereferenceable(24) %44) #3
  %46 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  invoke void @_ZSt10_ConstructISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEJRKSC_EEvPT_DpOT0_(%"class.std::vector.0"* %45, %"class.std::vector.0"* dereferenceable(24) %46)
          to label %47 unwind label %56

; <label>:47:                                     ; preds = %43
  br label %48

; <label>:48:                                     ; preds = %47
  %49 = load i64, i64* %5, align 8
  %50 = add i64 %49, 4672983122212685440
  %51 = add i64 %50, -1
  %52 = sub i64 %51, 4672983122212685440
  %53 = add i64 %49, -1
  store i64 %52, i64* %5, align 8
  %54 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %55 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %54, i32 1
  store %"class.std::vector.0"* %55, %"class.std::vector.0"** %7, align 8
  br label %11

; <label>:56:                                     ; preds = %43
  %57 = landingpad { i8*, i32 }
          catch i8* null
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %8, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %9, align 4
  br label %60

; <label>:60:                                     ; preds = %56
  %61 = load i8*, i8** %8, align 8
  %62 = call i8* @__cxa_begin_catch(i8* %61) #3
  %63 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %64 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEvT_SE_(%"class.std::vector.0"* %63, %"class.std::vector.0"* %64)
          to label %65 unwind label %68

; <label>:65:                                     ; preds = %60
  invoke void @__cxa_rethrow() #12
          to label %177 unwind label %68

; <label>:66:                                     ; preds = %42
  %67 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  ret %"class.std::vector.0"* %67

; <label>:68:                                     ; preds = %65, %60
  %69 = landingpad { i8*, i32 }
          cleanup
  %70 = extractvalue { i8*, i32 } %69, 0
  store i8* %70, i8** %8, align 8
  %71 = extractvalue { i8*, i32 } %69, 1
  store i32 %71, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %72 unwind label %121

; <label>:72:                                     ; preds = %68
  %73 = load i32, i32* @x.485
  %74 = load i32, i32* @y.486
  %75 = add i32 %73, 969860041
  %76 = sub i32 %75, 1
  %77 = sub i32 %76, 969860041
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  br i1 %85, label %87, label %181

; <label>:87:                                     ; preds = %72, %181
  %88 = load i32, i32* @x.485
  %89 = load i32, i32* @y.486
  %90 = add i32 %88, 639454125
  %91 = sub i32 %90, 1
  %92 = sub i32 %91, 639454125
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = xor i1 %96, true
  %99 = xor i1 %97, true
  %100 = xor i1 false, true
  %101 = and i1 %98, false
  %102 = and i1 %96, %100
  %103 = and i1 %99, false
  %104 = and i1 %97, %100
  %105 = or i1 %101, %102
  %106 = or i1 %103, %104
  %107 = xor i1 %105, %106
  %108 = or i1 %98, %99
  %109 = xor i1 %108, true
  %110 = or i1 false, %100
  %111 = and i1 %109, %110
  %112 = or i1 %107, %111
  %113 = or i1 %96, %97
  br i1 %112, label %114, label %181

; <label>:114:                                    ; preds = %87
  br label %116
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:116:                                    ; preds = %114
  %117 = load i8*, i8** %8, align 8
  %118 = load i32, i32* %9, align 4
  %119 = insertvalue { i8*, i32 } undef, i8* %117, 0
  %120 = insertvalue { i8*, i32 } %119, i32 %118, 1
  resume { i8*, i32 } %120

; <label>:121:                                    ; preds = %68
  %122 = load i32, i32* @x.485
  %123 = load i32, i32* @y.486
  %124 = sub i32 %122, -1360014935
  %125 = sub i32 %124, 1
  %126 = add i32 %125, -1360014935
  %127 = sub i32 %122, 1
  %128 = mul i32 %122, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %123, 10
  %132 = xor i1 %130, true
  %133 = xor i1 %131, true
  %134 = xor i1 true, true
  %135 = and i1 %132, true
  %136 = and i1 %130, %134
  %137 = and i1 %133, true
  %138 = and i1 %131, %134
  %139 = or i1 %135, %136
  %140 = or i1 %137, %138
  %141 = xor i1 %139, %140
  %142 = or i1 %132, %133
  %143 = xor i1 %142, true
  %144 = or i1 true, %134
  %145 = and i1 %143, %144
  %146 = or i1 %141, %145
  %147 = or i1 %130, %131
  br i1 %146, label %148, label %182

; <label>:148:                                    ; preds = %121, %182
  %149 = landingpad { i8*, i32 }
          catch i8* null
  %150 = extractvalue { i8*, i32 } %149, 0
  call void @__clang_call_terminate(i8* %150) #11
  %151 = load i32, i32* @x.485
  %152 = load i32, i32* @y.486
  %153 = sub i32 0, 1
  %154 = add i32 %151, %153
  %155 = sub i32 %151, 1
  %156 = mul i32 %151, %154
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %152, 10
  %160 = xor i1 %158, true
  %161 = xor i1 %159, true
  %162 = xor i1 false, true
  %163 = and i1 %160, false
  %164 = and i1 %158, %162
  %165 = and i1 %161, false
  %166 = and i1 %159, %162
  %167 = or i1 %163, %164
  %168 = or i1 %165, %166
  %169 = xor i1 %167, %168
  %170 = or i1 %160, %161
  %171 = xor i1 %170, true
  %172 = or i1 false, %162
  %173 = and i1 %171, %172
  %174 = or i1 %169, %173
  %175 = or i1 %158, %159
  br i1 %174, label %176, label %182

; <label>:176:                                    ; preds = %148
  unreachable

; <label>:177:                                    ; preds = %65
  unreachable

; <label>:178:                                    ; preds = %25, %11
  %179 = load i64, i64* %5, align 8
  %180 = icmp ugt i64 %179, 0
  br label %25

; <label>:181:                                    ; preds = %87, %72
  br label %87

; <label>:182:                                    ; preds = %148, %121
  %183 = landingpad { i8*, i32 }
          catch i8* null
  %184 = extractvalue { i8*, i32 } %183, 0
  call void @__clang_call_terminate(i8* %184) #11
  br label %148
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEJRKSC_EEvPT_DpOT0_(%"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.487
  %6 = load i32, i32* @y.488
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 196147531, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %57
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 196147531, label %18
    i32 1869144134, label %26
    i32 -717191999, label %48
    i32 2129650973, label %49
  ]

; <label>:17:                                     ; preds = %15
  br label %57

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1869144134, i32 2129650973
  store i32 %25, i32* %14
  br label %57

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.0"*, align 8
  %28 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %27, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %28, align 8
  %29 = load %"class.std::vector.0"*, %"class.std::vector.0"** %27, align 8
  %30 = bitcast %"class.std::vector.0"* %29 to i8*
  %31 = bitcast i8* %30 to %"class.std::vector.0"*
  %32 = load %"class.std::vector.0"*, %"class.std::vector.0"** %28, align 8
  %33 = call dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardIRKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEOT_RNSt16remove_referenceISF_E4typeE(%"class.std::vector.0"* dereferenceable(24) %32) #3
  call void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2ERKSB_(%"class.std::vector.0"* %31, %"class.std::vector.0"* dereferenceable(24) %33)
  %34 = load i32, i32* @x.487
  %35 = load i32, i32* @y.488
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 -717191999, i32 2129650973
  store i32 %47, i32* %14
  br label %57

; <label>:48:                                     ; preds = %15
  ret void

; <label>:49:                                     ; preds = %15
  %50 = alloca %"class.std::vector.0"*, align 8
  %51 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %50, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %51, align 8
  %52 = load %"class.std::vector.0"*, %"class.std::vector.0"** %50, align 8
  %53 = bitcast %"class.std::vector.0"* %52 to i8*
  %54 = bitcast i8* %53 to %"class.std::vector.0"*
  %55 = load %"class.std::vector.0"*, %"class.std::vector.0"** %51, align 8
  %56 = call dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardIRKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEOT_RNSt16remove_referenceISF_E4typeE(%"class.std::vector.0"* dereferenceable(24) %55) #3
  call void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2ERKSB_(%"class.std::vector.0"* %54, %"class.std::vector.0"* dereferenceable(24) %56)
  store i32 1869144134, i32* %14
  br label %57

; <label>:57:                                     ; preds = %49, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardIRKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEOT_RNSt16remove_referenceISF_E4typeE(%"class.std::vector.0"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.0"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.489
  %6 = load i32, i32* @y.490
  %7 = add i32 %5, 108141797
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 108141797
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1932755298, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %50
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1932755298, label %19
    i32 -825228409, label %27
    i32 1360714914, label %45
    i32 -1567180384, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %50

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -825228409, i32 -1567180384
  store i32 %26, i32* %15
  br label %50

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %28, align 8
  %29 = load %"class.std::vector.0"*, %"class.std::vector.0"** %28, align 8
  store %"class.std::vector.0"* %29, %"class.std::vector.0"** %2
  %30 = load i32, i32* @x.489
  %31 = load i32, i32* @y.490
  %32 = sub i32 %30, -1845948842
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -1845948842
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 1360714914, i32 -1567180384
  store i32 %44, i32* %15
  br label %50

; <label>:45:                                     ; preds = %16
  %46 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %2
  ret %"class.std::vector.0"* %46

; <label>:47:                                     ; preds = %16
  %48 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %48, align 8
  %49 = load %"class.std::vector.0"*, %"class.std::vector.0"** %48, align 8
  store i32 -825228409, i32* %15
  br label %50

; <label>:50:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2ERKSB_(%"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca %"class.std::allocator.2", align 1
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %11 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %12 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %13 = call i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE4sizeEv(%"class.std::vector.0"* %12) #3
  %14 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %15 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %16 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %15) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEE17_S_select_on_copyERKSB_(%"class.std::allocator.2"* sret %5, %"class.std::allocator.2"* dereferenceable(1) %16)
  invoke void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2EmRKSA_(%"struct.std::_Vector_base.1"* %11, i64 %13, %"class.std::allocator.2"* dereferenceable(1) %5)
          to label %17 unwind label %39

; <label>:17:                                     ; preds = %2
  call void @_ZNSaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEED2Ev(%"class.std::allocator.2"* %5) #3
  %18 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %19 = call %"class.std::unordered_map"* @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE5beginEv(%"class.std::vector.0"* %18) #3
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %8, i32 0, i32 0
  store %"class.std::unordered_map"* %19, %"class.std::unordered_map"** %20, align 8
  %21 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %22 = call %"class.std::unordered_map"* @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE3endEv(%"class.std::vector.0"* %21) #3
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %9, i32 0, i32 0
  store %"class.std::unordered_map"* %22, %"class.std::unordered_map"** %23, align 8
  %24 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %25, i32 0, i32 0
  %27 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %26, align 8
  %28 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %29 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %28) #3
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %8, i32 0, i32 0
  %31 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %30, align 8
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %9, i32 0, i32 0
  %33 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %32, align 8
  %34 = invoke %"class.std::unordered_map"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEPSB_SB_ET0_T_SK_SJ_RSaIT1_E(%"class.std::unordered_map"* %31, %"class.std::unordered_map"* %33, %"class.std::unordered_map"* %27, %"class.std::allocator.2"* dereferenceable(1) %29)
          to label %35 unwind label %43

; <label>:35:                                     ; preds = %17
  %36 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %37, i32 0, i32 1
  store %"class.std::unordered_map"* %34, %"class.std::unordered_map"** %38, align 8
  ret void

; <label>:39:                                     ; preds = %2
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  store i8* %41, i8** %6, align 8
  %42 = extractvalue { i8*, i32 } %40, 1
  store i32 %42, i32* %7, align 4
  call void @_ZNSaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEED2Ev(%"class.std::allocator.2"* %5) #3
  br label %48

; <label>:43:                                     ; preds = %17
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = extractvalue { i8*, i32 } %44, 0
  store i8* %45, i8** %6, align 8
  %46 = extractvalue { i8*, i32 } %44, 1
  store i32 %46, i32* %7, align 4
  %47 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EED2Ev(%"struct.std::_Vector_base.1"* %47) #3
  br label %48

; <label>:48:                                     ; preds = %43, %39
  %49 = load i8*, i8** %6, align 8
  %50 = load i32, i32* %7, align 4
  %51 = insertvalue { i8*, i32 } undef, i8* %49, 0
  %52 = insertvalue { i8*, i32 } %51, i32 %50, 1
  resume { i8*, i32 } %52
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEE17_S_select_on_copyERKSB_(%"class.std::allocator.2"* noalias sret, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %3, align 8
  %4 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  call void @_ZNSt16allocator_traitsISaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEE37select_on_container_copy_constructionERKSA_(%"class.std::allocator.2"* sret %0, %"class.std::allocator.2"* dereferenceable(1) %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.495
  %6 = load i32, i32* @y.496
  %7 = add i32 %5, -1261799578
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1261799578
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -550019626, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -550019626, label %19
    i32 -1060860878, label %27
    i32 449921432, label %47
    i32 -1631125949, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1060860878, i32 -1631125949
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %28, align 8
  %29 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %30 to %"class.std::allocator.2"*
  store %"class.std::allocator.2"* %31, %"class.std::allocator.2"** %2
  %32 = load i32, i32* @x.495
  %33 = load i32, i32* @y.496
  %34 = add i32 %32, 2034020024
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 2034020024
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 449921432, i32 -1631125949
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile %"class.std::allocator.2"*, %"class.std::allocator.2"** %2
  ret %"class.std::allocator.2"* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %50, align 8
  %51 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %50, align 8
  %52 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %51, i32 0, i32 0
  %53 = bitcast %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %52 to %"class.std::allocator.2"*
  store i32 -1060860878, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2EmRKSA_(%"struct.std::_Vector_base.1"*, i64, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.1"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %9 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %6, align 8
  call void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_implC2ERKSA_(%"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %10, %"class.std::allocator.2"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE17_M_create_storageEm(%"struct.std::_Vector_base.1"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = load i32, i32* @x.497
  %16 = load i32, i32* @y.498
  %17 = sub i32 0, 1
  %18 = add i32 %15, %17
  %19 = sub i32 %15, 1
  %20 = mul i32 %15, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %16, 10
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  br i1 %38, label %40, label %64

; <label>:40:                                     ; preds = %14, %64
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %7, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %10) #3
  %44 = load i32, i32* @x.497
  %45 = load i32, i32* @y.498
  %46 = add i32 %44, 860956398
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 860956398
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  br i1 %56, label %58, label %64

; <label>:58:                                     ; preds = %40
  br label %59

; <label>:59:                                     ; preds = %58
  %60 = load i8*, i8** %7, align 8
  %61 = load i32, i32* %8, align 4
  %62 = insertvalue { i8*, i32 } undef, i8* %60, 0
  %63 = insertvalue { i8*, i32 } %62, i32 %61, 1
  resume { i8*, i32 } %63

; <label>:64:                                     ; preds = %40, %14
  %65 = landingpad { i8*, i32 }
          cleanup
  %66 = extractvalue { i8*, i32 } %65, 0
  store i8* %66, i8** %7, align 8
  %67 = extractvalue { i8*, i32 } %65, 1
  store i32 %67, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %10) #3
  br label %40
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEED2Ev(%"class.std::allocator.2"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEED2Ev(%"class.__gnu_cxx::new_allocator.3"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEE37select_on_container_copy_constructionERKSA_(%"class.std::allocator.2"* noalias sret, %"class.std::allocator.2"* dereferenceable(1)) #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %3, align 8
  %4 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  call void @_ZNSaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEC2ERKS9_(%"class.std::allocator.2"* %0, %"class.std::allocator.2"* dereferenceable(1) %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEC2ERKS9_(%"class.std::allocator.2"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEC2ERKSB_(%"class.__gnu_cxx::new_allocator.3"* %6, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEC2ERKSB_(%"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %1, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_implC2ERKSA_(%"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.507
  %6 = load i32, i32* @y.508
  %7 = sub i32 %5, -2097388073
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -2097388073
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1503645967, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %60
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1503645967, label %19
    i32 1008550785, label %27
    i32 -308364656, label %50
    i32 -1571086266, label %51
  ]

; <label>:18:                                     ; preds = %16
  br label %60

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1008550785, i32 -1571086266
  store i32 %26, i32* %15
  br label %60

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*, align 8
  %29 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"** %28, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %29, align 8
  %30 = load %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"** %28, align 8
  %31 = bitcast %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %30 to %"class.std::allocator.2"*
  %32 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %29, align 8
  call void @_ZNSaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEC2ERKS9_(%"class.std::allocator.2"* %31, %"class.std::allocator.2"* dereferenceable(1) %32) #3
  %33 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %30, i32 0, i32 0
  store %"class.std::unordered_map"* null, %"class.std::unordered_map"** %33, align 8
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %30, i32 0, i32 1
  store %"class.std::unordered_map"* null, %"class.std::unordered_map"** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %30, i32 0, i32 2
  store %"class.std::unordered_map"* null, %"class.std::unordered_map"** %35, align 8
  %36 = load i32, i32* @x.507
  %37 = load i32, i32* @y.508
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -308364656, i32 -1571086266
  store i32 %49, i32* %15
  br label %60

; <label>:50:                                     ; preds = %16
  ret void

; <label>:51:                                     ; preds = %16
  %52 = alloca %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*, align 8
  %53 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"** %52, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %53, align 8
  %54 = load %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"** %52, align 8
  %55 = bitcast %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %54 to %"class.std::allocator.2"*
  %56 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %53, align 8
  call void @_ZNSaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEC2ERKS9_(%"class.std::allocator.2"* %55, %"class.std::allocator.2"* dereferenceable(1) %56) #3
  %57 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %54, i32 0, i32 0
  store %"class.std::unordered_map"* null, %"class.std::unordered_map"** %57, align 8
  %58 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %54, i32 0, i32 1
  store %"class.std::unordered_map"* null, %"class.std::unordered_map"** %58, align 8
  %59 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %54, i32 0, i32 2
  store %"class.std::unordered_map"* null, %"class.std::unordered_map"** %59, align 8
  store i32 1008550785, i32* %15
  br label %60

; <label>:60:                                     ; preds = %51, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE17_M_create_storageEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.1"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"class.std::unordered_map"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %8, i32 0, i32 0
  store %"class.std::unordered_map"* %7, %"class.std::unordered_map"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %13, i32 0, i32 1
  store %"class.std::unordered_map"* %12, %"class.std::unordered_map"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %20, i32 0, i32 2
  store %"class.std::unordered_map"* %19, %"class.std::unordered_map"** %21, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt10__fill_n_aIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEmSC_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeESH_T0_RKSG_(%"class.std::vector.0"*, i64, %"class.std::vector.0"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.0"*
  %5 = alloca i1
  %6 = alloca i64*
  %7 = alloca %"class.std::vector.0"**
  %8 = alloca %"class.std::vector.0"**
  %9 = alloca i1
  %10 = alloca i1
  %11 = load i32, i32* @x.511
  %12 = load i32, i32* @y.512
  %13 = sub i32 0, 1
  %14 = add i32 %11, %13
  %15 = sub i32 %11, 1
  %16 = mul i32 %11, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %10
  %19 = icmp slt i32 %12, 10
  store i1 %19, i1* %9
  %20 = alloca i32
  store i32 988356368, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %209
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 988356368, label %24
    i32 -1294287798, label %44
    i32 599908387, label %80
    i32 -262795703, label %81
    i32 -558565412, label %96
    i32 1571373399, label %127
    i32 586371147, label %130
    i32 244118107, label %136
    i32 1974477813, label %148
    i32 -1639089366, label %176
    i32 -1642761920, label %194
    i32 1280741561, label %196
    i32 -2147058911, label %202
    i32 -666825085, label %206
  ]

; <label>:23:                                     ; preds = %21
  br label %209

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %10
  %26 = load volatile i1, i1* %9
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 true, true
  %30 = and i1 %27, true
  %31 = and i1 %25, %29
  %32 = and i1 %28, true
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 true, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 -1294287798, i32 1280741561
  store i32 %43, i32* %20
  br label %209

; <label>:44:                                     ; preds = %21
  %45 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"** %45, %"class.std::vector.0"*** %8
  %46 = alloca i64, align 8
  %47 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"** %47, %"class.std::vector.0"*** %7
  %48 = alloca i64, align 8
  store i64* %48, i64** %6
  %49 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %49, align 8
  store i64 %1, i64* %46, align 8
  %50 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %7
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %50, align 8
  %51 = load i64, i64* %46, align 8
  %52 = load volatile i64*, i64** %6
  store i64 %51, i64* %52, align 8
  %53 = load i32, i32* @x.511
  %54 = load i32, i32* @y.512
  %55 = sub i32 %53, 1227162976
  %56 = sub i32 %55, 1
  %57 = add i32 %56, 1227162976
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 false, true
  %66 = and i1 %63, false
  %67 = and i1 %61, %65
  %68 = and i1 %64, false
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 false, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 599908387, i32 1280741561
  store i32 %79, i32* %20
  br label %209

; <label>:80:                                     ; preds = %21
  store i32 -262795703, i32* %20
  br label %209

; <label>:81:                                     ; preds = %21
  %82 = load i32, i32* @x.511
  %83 = load i32, i32* @y.512
  %84 = sub i32 0, 1
  %85 = add i32 %82, %84
  %86 = sub i32 %82, 1
  %87 = mul i32 %82, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %83, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  %95 = select i1 %93, i32 -558565412, i32 -2147058911
  store i32 %95, i32* %20
  br label %209

; <label>:96:                                     ; preds = %21
  %97 = load volatile i64*, i64** %6
  %98 = load i64, i64* %97, align 8
  %99 = icmp ugt i64 %98, 0
  store i1 %99, i1* %5
  %100 = load i32, i32* @x.511
  %101 = load i32, i32* @y.512
  %102 = sub i32 %100, 2023530
  %103 = sub i32 %102, 1
  %104 = add i32 %103, 2023530
  %105 = sub i32 %100, 1
  %106 = mul i32 %100, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %101, 10
  %110 = xor i1 %108, true
  %111 = xor i1 %109, true
  %112 = xor i1 true, true
  %113 = and i1 %110, true
  %114 = and i1 %108, %112
  %115 = and i1 %111, true
  %116 = and i1 %109, %112
  %117 = or i1 %113, %114
  %118 = or i1 %115, %116
  %119 = xor i1 %117, %118
  %120 = or i1 %110, %111
  %121 = xor i1 %120, true
  %122 = or i1 true, %112
  %123 = and i1 %121, %122
  %124 = or i1 %119, %123
  %125 = or i1 %108, %109
  %126 = select i1 %124, i32 1571373399, i32 -2147058911
  store i32 %126, i32* %20
  br label %209

; <label>:127:                                    ; preds = %21
  %128 = load volatile i1, i1* %5
  %129 = select i1 %128, i32 586371147, i32 1974477813
  store i32 %129, i32* %20
  br label %209

; <label>:130:                                    ; preds = %21
  %131 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %7
  %132 = load %"class.std::vector.0"*, %"class.std::vector.0"** %131, align 8
  %133 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %8
  %134 = load %"class.std::vector.0"*, %"class.std::vector.0"** %133, align 8
  %135 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEaSERKSB_(%"class.std::vector.0"* %134, %"class.std::vector.0"* dereferenceable(24) %132)
  store i32 244118107, i32* %20
  br label %209

; <label>:136:                                    ; preds = %21
  %137 = load volatile i64*, i64** %6
  %138 = load i64, i64* %137, align 8
  %139 = sub i64 %138, -8813596543758523881
  %140 = add i64 %139, -1
  %141 = add i64 %140, -8813596543758523881
  %142 = add i64 %138, -1
  %143 = load volatile i64*, i64** %6
  store i64 %141, i64* %143, align 8
  %144 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %8
  %145 = load %"class.std::vector.0"*, %"class.std::vector.0"** %144, align 8
  %146 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %145, i32 1
  %147 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %8
  store %"class.std::vector.0"* %146, %"class.std::vector.0"** %147, align 8
  store i32 -262795703, i32* %20
  br label %209

; <label>:148:                                    ; preds = %21
  %149 = load i32, i32* @x.511
  %150 = load i32, i32* @y.512
  %151 = add i32 %149, -1046119818
  %152 = sub i32 %151, 1
  %153 = sub i32 %152, -1046119818
  %154 = sub i32 %149, 1
  %155 = mul i32 %149, %153
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %150, 10
  %159 = xor i1 %157, true
  %160 = xor i1 %158, true
  %161 = xor i1 true, true
  %162 = and i1 %159, true
  %163 = and i1 %157, %161
  %164 = and i1 %160, true
  %165 = and i1 %158, %161
  %166 = or i1 %162, %163
  %167 = or i1 %164, %165
  %168 = xor i1 %166, %167
  %169 = or i1 %159, %160
  %170 = xor i1 %169, true
  %171 = or i1 true, %161
  %172 = and i1 %170, %171
  %173 = or i1 %168, %172
  %174 = or i1 %157, %158
  %175 = select i1 %173, i32 -1639089366, i32 -666825085
  store i32 %175, i32* %20
  br label %209

; <label>:176:                                    ; preds = %21
  %177 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %8
  %178 = load %"class.std::vector.0"*, %"class.std::vector.0"** %177, align 8
  store %"class.std::vector.0"* %178, %"class.std::vector.0"** %4
  %179 = load i32, i32* @x.511
  %180 = load i32, i32* @y.512
  %181 = sub i32 %179, 388705246
  %182 = sub i32 %181, 1
  %183 = add i32 %182, 388705246
  %184 = sub i32 %179, 1
  %185 = mul i32 %179, %183
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %180, 10
  %189 = and i1 %187, %188
  %190 = xor i1 %187, %188
  %191 = or i1 %189, %190
  %192 = or i1 %187, %188
  %193 = select i1 %191, i32 -1642761920, i32 -666825085
  store i32 %193, i32* %20
  br label %209

; <label>:194:                                    ; preds = %21
  %195 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  ret %"class.std::vector.0"* %195

; <label>:196:                                    ; preds = %21
  %197 = alloca %"class.std::vector.0"*, align 8
  %198 = alloca i64, align 8
  %199 = alloca %"class.std::vector.0"*, align 8
  %200 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %197, align 8
  store i64 %1, i64* %198, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %199, align 8
  %201 = load i64, i64* %198, align 8
  store i64 %201, i64* %200, align 8
  store i32 -1294287798, i32* %20
  br label %209

; <label>:202:                                    ; preds = %21
  %203 = load volatile i64*, i64** %6
  %204 = load i64, i64* %203, align 8
  %205 = icmp ugt i64 %204, 0
  store i32 -558565412, i32* %20
  br label %209

; <label>:206:                                    ; preds = %21
  %207 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %8
  %208 = load %"class.std::vector.0"*, %"class.std::vector.0"** %207, align 8
  store i32 -1639089366, i32* %20
  br label %209

; <label>:209:                                    ; preds = %206, %202, %196, %176, %148, %136, %130, %127, %96, %81, %80, %44, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt12__niter_baseIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEENSt11_Niter_baseIT_E13iterator_typeESF_(%"class.std::vector.0"*) #0 comdat {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = call %"class.std::vector.0"* @_ZNSt10_Iter_baseIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EELb0EE7_S_baseESD_(%"class.std::vector.0"* %3)
  ret %"class.std::vector.0"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt10_Iter_baseIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EELb0EE7_S_baseESD_(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  ret %"class.std::vector.0"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE14_M_fill_assignEmRKS9_(%"class.std::vector.0"*, i64, %"class.std::unordered_map"* dereferenceable(56)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.std::vector.0"*
  %8 = alloca %"class.std::vector.0"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"class.std::unordered_map"*, align 8
  %11 = alloca %"class.std::vector.0", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %8, align 8
  store i64 %1, i64* %9, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %10, align 8
  %14 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  store %"class.std::vector.0"* %14, %"class.std::vector.0"** %7
  %15 = load i64, i64* %9, align 8
  store i64 %15, i64* %6
  %16 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %17 = call i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE8capacityEv(%"class.std::vector.0"* %16) #3
  store i64 %17, i64* %5
  %18 = alloca i32
  store i32 -1985647223, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %151
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1985647223, label %22
    i32 -600582027, label %27
    i32 -279153819, label %38
    i32 411283762, label %66
    i32 1372675404, label %98
    i32 1871276726, label %101
    i32 -1970173912, label %134
    i32 1781125014, label %144
    i32 1609512004, label %145
    i32 1908260279, label %146
  ]

; <label>:21:                                     ; preds = %19
  br label %151

; <label>:22:                                     ; preds = %19
  %23 = load volatile i64, i64* %6
  %24 = load volatile i64, i64* %5
  %25 = icmp ugt i64 %23, %24
  %26 = select i1 %25, i32 -600582027, i32 -279153819
  store i32 %26, i32* %18
  br label %151

; <label>:27:                                     ; preds = %19
  %28 = load i64, i64* %9, align 8
  %29 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %10, align 8
  %30 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %31 = bitcast %"class.std::vector.0"* %30 to %"struct.std::_Vector_base.1"*
  %32 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %31) #3
  call void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2EmRKS9_RKSA_(%"class.std::vector.0"* %11, i64 %28, %"class.std::unordered_map"* dereferenceable(56) %29, %"class.std::allocator.2"* dereferenceable(1) %32)
  %33 = bitcast %"class.std::vector.0"* %11 to %"struct.std::_Vector_base.1"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %33, i32 0, i32 0
  %35 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %36 = bitcast %"class.std::vector.0"* %35 to %"struct.std::_Vector_base.1"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %36, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_impl12_M_swap_dataERSC_(%"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %34, %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* dereferenceable(24) %37) #3
  call void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EED2Ev(%"class.std::vector.0"* %11) #3
  store i32 1609512004, i32* %18
  br label %151

; <label>:38:                                     ; preds = %19
  %39 = load i32, i32* @x.517
  %40 = load i32, i32* @y.518
  %41 = add i32 %39, 158463013
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, 158463013
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 411283762, i32 1908260279
  store i32 %65, i32* %18
  br label %151

; <label>:66:                                     ; preds = %19
  %67 = load i64, i64* %9, align 8
  %68 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %69 = call i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE4sizeEv(%"class.std::vector.0"* %68) #3
  %70 = icmp ugt i64 %67, %69
  store i1 %70, i1* %4
  %71 = load i32, i32* @x.517
  %72 = load i32, i32* @y.518
  %73 = add i32 %71, -2117782890
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, -2117782890
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 true, true
  %84 = and i1 %81, true
  %85 = and i1 %79, %83
  %86 = and i1 %82, true
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 true, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  %97 = select i1 %95, i32 1372675404, i32 1908260279
  store i32 %97, i32* %18
  br label %151

; <label>:98:                                     ; preds = %19
  %99 = load volatile i1, i1* %4
  %100 = select i1 %99, i32 1871276726, i32 -1970173912
  store i32 %100, i32* %18
  br label %151

; <label>:101:                                    ; preds = %19
  %102 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %103 = call %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE5beginEv(%"class.std::vector.0"* %102) #3
  %104 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %12, i32 0, i32 0
  store %"class.std::unordered_map"* %103, %"class.std::unordered_map"** %104, align 8
  %105 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %106 = call %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE3endEv(%"class.std::vector.0"* %105) #3
  %107 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %13, i32 0, i32 0
  store %"class.std::unordered_map"* %106, %"class.std::unordered_map"** %107, align 8
  %108 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %10, align 8
  %109 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %12, i32 0, i32 0
  %110 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %109, align 8
  %111 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %13, i32 0, i32 0
  %112 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %111, align 8
  call void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEESB_EvT_SH_RKT0_(%"class.std::unordered_map"* %110, %"class.std::unordered_map"* %112, %"class.std::unordered_map"* dereferenceable(56) %108)
  %113 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %114 = bitcast %"class.std::vector.0"* %113 to %"struct.std::_Vector_base.1"*
  %115 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %114, i32 0, i32 0
  %116 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %115, i32 0, i32 1
  %117 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %116, align 8
  %118 = load i64, i64* %9, align 8
  %119 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %120 = call i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE4sizeEv(%"class.std::vector.0"* %119) #3
  %121 = sub i64 %118, 7650549409091311452
  %122 = sub i64 %121, %120
  %123 = add i64 %122, 7650549409091311452
  %124 = sub i64 %118, %120
  %125 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %10, align 8
  %126 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %127 = bitcast %"class.std::vector.0"* %126 to %"struct.std::_Vector_base.1"*
  %128 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %127) #3
  %129 = call %"class.std::unordered_map"* @_ZSt24__uninitialized_fill_n_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_S9_ET_SB_T0_RKT1_RSaIT2_E(%"class.std::unordered_map"* %117, i64 %123, %"class.std::unordered_map"* dereferenceable(56) %125, %"class.std::allocator.2"* dereferenceable(1) %128)
  %130 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %131 = bitcast %"class.std::vector.0"* %130 to %"struct.std::_Vector_base.1"*
  %132 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %131, i32 0, i32 0
  %133 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %132, i32 0, i32 1
  store %"class.std::unordered_map"* %129, %"class.std::unordered_map"** %133, align 8
  store i32 1781125014, i32* %18
  br label %151

; <label>:134:                                    ; preds = %19
  %135 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %136 = bitcast %"class.std::vector.0"* %135 to %"struct.std::_Vector_base.1"*
  %137 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %136, i32 0, i32 0
  %138 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %137, i32 0, i32 0
  %139 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %138, align 8
  %140 = load i64, i64* %9, align 8
  %141 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %10, align 8
  %142 = call %"class.std::unordered_map"* @_ZSt6fill_nIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_ET_SB_T0_RKT1_(%"class.std::unordered_map"* %139, i64 %140, %"class.std::unordered_map"* dereferenceable(56) %141)
  %143 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  call void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE15_M_erase_at_endEPS9_(%"class.std::vector.0"* %143, %"class.std::unordered_map"* %142) #3
  store i32 1781125014, i32* %18
  br label %151

; <label>:144:                                    ; preds = %19
  store i32 1609512004, i32* %18
  br label %151

; <label>:145:                                    ; preds = %19
  ret void

; <label>:146:                                    ; preds = %19
  %147 = load i64, i64* %9, align 8
  %148 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %149 = call i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE4sizeEv(%"class.std::vector.0"* %148) #3
  %150 = icmp ugt i64 %147, %149
  store i32 411283762, i32* %18
  br label %151

; <label>:151:                                    ; preds = %146, %144, %134, %101, %98, %66, %38, %27, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2EmRKS9_RKSA_(%"class.std::vector.0"*, i64, %"class.std::unordered_map"* dereferenceable(56), %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::unordered_map"*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %12 = bitcast %"class.std::vector.0"* %11 to %"struct.std::_Vector_base.1"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %8, align 8
  call void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2EmRKSA_(%"struct.std::_Vector_base.1"* %12, i64 %13, %"class.std::allocator.2"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  invoke void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE18_M_fill_initializeEmRKS9_(%"class.std::vector.0"* %11, i64 %15, %"class.std::unordered_map"* dereferenceable(56) %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %4
  ret void

; <label>:18:                                     ; preds = %4
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %9, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %10, align 4
  %22 = bitcast %"class.std::vector.0"* %11 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EED2Ev(%"struct.std::_Vector_base.1"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %9, align 8
  %25 = load i32, i32* %10, align 4
  %26 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_impl12_M_swap_dataERSC_(%"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* dereferenceable(24)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %1, %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvRT_SC_(%"class.std::unordered_map"** dereferenceable(8) %6, %"class.std::unordered_map"** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvRT_SC_(%"class.std::unordered_map"** dereferenceable(8) %9, %"class.std::unordered_map"** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvRT_SC_(%"class.std::unordered_map"** dereferenceable(8) %12, %"class.std::unordered_map"** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEESB_EvT_SH_RKT0_(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"* dereferenceable(56)) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %6 = alloca %"class.std::unordered_map"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %4, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %5, i32 0, i32 0
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %10, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %7, i32 0, i32 0
  %14 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %13, align 8
  %15 = call %"class.std::unordered_map"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEENSt11_Niter_baseIT_E13iterator_typeESI_(%"class.std::unordered_map"* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %8, i32 0, i32 0
  %19 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %18, align 8
  %20 = call %"class.std::unordered_map"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEENSt11_Niter_baseIT_E13iterator_typeESI_(%"class.std::unordered_map"* %19)
  %21 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  call void @_ZSt8__fill_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEES9_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SG_RKSD_(%"class.std::unordered_map"* %15, %"class.std::unordered_map"* %20, %"class.std::unordered_map"* dereferenceable(56) %21)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt24__uninitialized_fill_n_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_S9_ET_SB_T0_RKT1_RSaIT2_E(%"class.std::unordered_map"*, i64, %"class.std::unordered_map"* dereferenceable(56), %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::unordered_map"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::unordered_map"*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %9 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  %12 = call %"class.std::unordered_map"* @_ZSt20uninitialized_fill_nIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_ET_SB_T0_RKT1_(%"class.std::unordered_map"* %9, i64 %10, %"class.std::unordered_map"* dereferenceable(56) %11)
  ret %"class.std::unordered_map"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE15_M_erase_at_endEPS9_(%"class.std::vector.0"*, %"class.std::unordered_map"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %7 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %8, i32 0, i32 1
  %10 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %9, align 8
  %11 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %12 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %11) #3
  invoke void @_ZSt8_DestroyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEES9_EvT_SB_RSaIT0_E(%"class.std::unordered_map"* %6, %"class.std::unordered_map"* %10, %"class.std::allocator.2"* dereferenceable(1) %12)
          to label %13 unwind label %18

; <label>:13:                                     ; preds = %2
  %14 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %15 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %16, i32 0, i32 1
  store %"class.std::unordered_map"* %14, %"class.std::unordered_map"** %17, align 8
  ret void

; <label>:18:                                     ; preds = %2
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  call void @__clang_call_terminate(i8* %20) #11
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt6fill_nIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_ET_SB_T0_RKT1_(%"class.std::unordered_map"*, i64, %"class.std::unordered_map"* dereferenceable(56)) #0 comdat {
  %4 = alloca %"class.std::unordered_map"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.529
  %8 = load i32, i32* @y.530
  %9 = sub i32 %7, -1832541169
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -1832541169
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1319683146, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %64
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1319683146, label %21
    i32 -1948237757, label %29
    i32 1114191044, label %53
    i32 -472447648, label %55
  ]

; <label>:20:                                     ; preds = %18
  br label %64

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1948237757, i32 -472447648
  store i32 %28, i32* %17
  br label %64

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::unordered_map"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %30, align 8
  store i64 %1, i64* %31, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %32, align 8
  %33 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %30, align 8
  %34 = call %"class.std::unordered_map"* @_ZSt12__niter_baseIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEENSt11_Niter_baseIT_E13iterator_typeESC_(%"class.std::unordered_map"* %33)
  %35 = load i64, i64* %31, align 8
  %36 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %32, align 8
  %37 = call %"class.std::unordered_map"* @_ZSt10__fill_n_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeESE_T0_RKSD_(%"class.std::unordered_map"* %34, i64 %35, %"class.std::unordered_map"* dereferenceable(56) %36)
  store %"class.std::unordered_map"* %37, %"class.std::unordered_map"** %4
  %38 = load i32, i32* @x.529
  %39 = load i32, i32* @y.530
  %40 = add i32 %38, 1298782815
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 1298782815
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 1114191044, i32 -472447648
  store i32 %52, i32* %17
  br label %64

; <label>:53:                                     ; preds = %18
  %54 = load volatile %"class.std::unordered_map"*, %"class.std::unordered_map"** %4
  ret %"class.std::unordered_map"* %54

; <label>:55:                                     ; preds = %18
  %56 = alloca %"class.std::unordered_map"*, align 8
  %57 = alloca i64, align 8
  %58 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %56, align 8
  store i64 %1, i64* %57, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %58, align 8
  %59 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %56, align 8
  %60 = call %"class.std::unordered_map"* @_ZSt12__niter_baseIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEENSt11_Niter_baseIT_E13iterator_typeESC_(%"class.std::unordered_map"* %59)
  %61 = load i64, i64* %57, align 8
  %62 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %58, align 8
  %63 = call %"class.std::unordered_map"* @_ZSt10__fill_n_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeESE_T0_RKSD_(%"class.std::unordered_map"* %60, i64 %61, %"class.std::unordered_map"* dereferenceable(56) %62)
  store i32 -1948237757, i32* %17
  br label %64

; <label>:64:                                     ; preds = %55, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE18_M_fill_initializeEmRKS9_(%"class.std::vector.0"*, i64, %"class.std::unordered_map"* dereferenceable(56)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.531
  %7 = load i32, i32* @y.532
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1506302342, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %88
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1506302342, label %19
    i32 694832021, label %39
    i32 273470884, label %70
    i32 1964083061, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %88

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 694832021, i32 1964083061
  store i32 %38, i32* %15
  br label %88

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.0"*, align 8
  %41 = alloca i64, align 8
  %42 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %40, align 8
  store i64 %1, i64* %41, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %42, align 8
  %43 = load %"class.std::vector.0"*, %"class.std::vector.0"** %40, align 8
  %44 = bitcast %"class.std::vector.0"* %43 to %"struct.std::_Vector_base.1"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %45, i32 0, i32 0
  %47 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %46, align 8
  %48 = load i64, i64* %41, align 8
  %49 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %42, align 8
  %50 = bitcast %"class.std::vector.0"* %43 to %"struct.std::_Vector_base.1"*
  %51 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %50) #3
  %52 = call %"class.std::unordered_map"* @_ZSt24__uninitialized_fill_n_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_S9_ET_SB_T0_RKT1_RSaIT2_E(%"class.std::unordered_map"* %47, i64 %48, %"class.std::unordered_map"* dereferenceable(56) %49, %"class.std::allocator.2"* dereferenceable(1) %51)
  %53 = bitcast %"class.std::vector.0"* %43 to %"struct.std::_Vector_base.1"*
  %54 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %54, i32 0, i32 1
  store %"class.std::unordered_map"* %52, %"class.std::unordered_map"** %55, align 8
  %56 = load i32, i32* @x.531
  %57 = load i32, i32* @y.532
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 273470884, i32 1964083061
  store i32 %69, i32* %15
  br label %88

; <label>:70:                                     ; preds = %16
  ret void

; <label>:71:                                     ; preds = %16
  %72 = alloca %"class.std::vector.0"*, align 8
  %73 = alloca i64, align 8
  %74 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %72, align 8
  store i64 %1, i64* %73, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %74, align 8
  %75 = load %"class.std::vector.0"*, %"class.std::vector.0"** %72, align 8
  %76 = bitcast %"class.std::vector.0"* %75 to %"struct.std::_Vector_base.1"*
  %77 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %77, i32 0, i32 0
  %79 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %78, align 8
  %80 = load i64, i64* %73, align 8
  %81 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %74, align 8
  %82 = bitcast %"class.std::vector.0"* %75 to %"struct.std::_Vector_base.1"*
  %83 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %82) #3
  %84 = call %"class.std::unordered_map"* @_ZSt24__uninitialized_fill_n_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_S9_ET_SB_T0_RKT1_RSaIT2_E(%"class.std::unordered_map"* %79, i64 %80, %"class.std::unordered_map"* dereferenceable(56) %81, %"class.std::allocator.2"* dereferenceable(1) %83)
  %85 = bitcast %"class.std::vector.0"* %75 to %"struct.std::_Vector_base.1"*
  %86 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %85, i32 0, i32 0
  %87 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %86, i32 0, i32 1
  store %"class.std::unordered_map"* %84, %"class.std::unordered_map"** %87, align 8
  store i32 694832021, i32* %15
  br label %88

; <label>:88:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvRT_SC_(%"class.std::unordered_map"** dereferenceable(8), %"class.std::unordered_map"** dereferenceable(8)) #4 comdat {
  %3 = alloca %"class.std::unordered_map"**, align 8
  %4 = alloca %"class.std::unordered_map"**, align 8
  %5 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"** %0, %"class.std::unordered_map"*** %3, align 8
  store %"class.std::unordered_map"** %1, %"class.std::unordered_map"*** %4, align 8
  %6 = load %"class.std::unordered_map"**, %"class.std::unordered_map"*** %3, align 8
  %7 = call dereferenceable(8) %"class.std::unordered_map"** @_ZSt4moveIRPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEONSt16remove_referenceIT_E4typeEOSD_(%"class.std::unordered_map"** dereferenceable(8) %6) #3
  %8 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  store %"class.std::unordered_map"* %8, %"class.std::unordered_map"** %5, align 8
  %9 = load %"class.std::unordered_map"**, %"class.std::unordered_map"*** %4, align 8
  %10 = call dereferenceable(8) %"class.std::unordered_map"** @_ZSt4moveIRPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEONSt16remove_referenceIT_E4typeEOSD_(%"class.std::unordered_map"** dereferenceable(8) %9) #3
  %11 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %10, align 8
  %12 = load %"class.std::unordered_map"**, %"class.std::unordered_map"*** %3, align 8
  store %"class.std::unordered_map"* %11, %"class.std::unordered_map"** %12, align 8
  %13 = call dereferenceable(8) %"class.std::unordered_map"** @_ZSt4moveIRPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEONSt16remove_referenceIT_E4typeEOSD_(%"class.std::unordered_map"** dereferenceable(8) %5) #3
  %14 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %13, align 8
  %15 = load %"class.std::unordered_map"**, %"class.std::unordered_map"*** %4, align 8
  store %"class.std::unordered_map"* %14, %"class.std::unordered_map"** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::unordered_map"** @_ZSt4moveIRPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEONSt16remove_referenceIT_E4typeEOSD_(%"class.std::unordered_map"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"class.std::unordered_map"**, align 8
  store %"class.std::unordered_map"** %0, %"class.std::unordered_map"*** %2, align 8
  %3 = load %"class.std::unordered_map"**, %"class.std::unordered_map"*** %2, align 8
  ret %"class.std::unordered_map"** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8__fill_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEES9_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SG_RKSD_(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"* dereferenceable(56)) #0 comdat {
  %4 = alloca %"class.std::unordered_map"*, align 8
  %5 = alloca %"class.std::unordered_map"*, align 8
  %6 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %4, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %5, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %6, align 8
  %7 = alloca i32
  store i32 -1524950422, i32* %7
  br label %8

; <label>:8:                                      ; preds = %3, %56
  %9 = load i32, i32* %7
  switch i32 %9, label %10 [
    i32 -1524950422, label %11
    i32 755279174, label %16
    i32 -1462239372, label %20
    i32 1964513945, label %23
    i32 -370766985, label %39
    i32 -125338621, label %54
    i32 826866693, label %55
  ]

; <label>:10:                                     ; preds = %8
  br label %56

; <label>:11:                                     ; preds = %8
  %12 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %13 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %5, align 8
  %14 = icmp ne %"class.std::unordered_map"* %12, %13
  %15 = select i1 %14, i32 755279174, i32 1964513945
  store i32 %15, i32* %7
  br label %56

; <label>:16:                                     ; preds = %8
  %17 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  %18 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %19 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEaSERKS8_(%"class.std::unordered_map"* %18, %"class.std::unordered_map"* dereferenceable(56) %17)
  store i32 -1462239372, i32* %7
  br label %56

; <label>:20:                                     ; preds = %8
  %21 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %22 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %21, i32 1
  store %"class.std::unordered_map"* %22, %"class.std::unordered_map"** %4, align 8
  store i32 -1524950422, i32* %7
  br label %56

; <label>:23:                                     ; preds = %8
  %24 = load i32, i32* @x.537
  %25 = load i32, i32* @y.538
  %26 = sub i32 %24, 501973861
  %27 = sub i32 %26, 1
  %28 = add i32 %27, 501973861
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  %38 = select i1 %36, i32 -370766985, i32 826866693
  store i32 %38, i32* %7
  br label %56

; <label>:39:                                     ; preds = %8
  %40 = load i32, i32* @x.537
  %41 = load i32, i32* @y.538
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -125338621, i32 826866693
  store i32 %53, i32* %7
  br label %56

; <label>:54:                                     ; preds = %8
  ret void

; <label>:55:                                     ; preds = %8
  store i32 -370766985, i32* %7
  br label %56

; <label>:56:                                     ; preds = %55, %39, %23, %20, %16, %11, %10
  br label %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt20uninitialized_fill_nIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_ET_SB_T0_RKT1_(%"class.std::unordered_map"*, i64, %"class.std::unordered_map"* dereferenceable(56)) #0 comdat {
  %4 = alloca %"class.std::unordered_map"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::unordered_map"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  %11 = call %"class.std::unordered_map"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmSB_EET_SD_T0_RKT1_(%"class.std::unordered_map"* %8, i64 %9, %"class.std::unordered_map"* dereferenceable(56) %10)
  ret %"class.std::unordered_map"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmSB_EET_SD_T0_RKT1_(%"class.std::unordered_map"*, i64, %"class.std::unordered_map"* dereferenceable(56)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::unordered_map"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::unordered_map"*, align 8
  %7 = alloca %"class.std::unordered_map"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %6, align 8
  %10 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  store %"class.std::unordered_map"* %10, %"class.std::unordered_map"** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %101, %3
  %12 = load i32, i32* @x.541
  %13 = load i32, i32* @y.542
  %14 = sub i32 0, 1
  %15 = add i32 %12, %14
  %16 = sub i32 %12, 1
  %17 = mul i32 %12, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %13, 10
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  br i1 %23, label %25, label %385

; <label>:25:                                     ; preds = %11, %385
  %26 = load i64, i64* %5, align 8
  %27 = icmp ugt i64 %26, 0
  %28 = load i32, i32* @x.541
  %29 = load i32, i32* @y.542
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  br i1 %39, label %41, label %385

; <label>:41:                                     ; preds = %25
  br i1 %27, label %42, label %202

; <label>:42:                                     ; preds = %41
  %43 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  %44 = call %"class.std::unordered_map"* @_ZSt11__addressofISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEPT_RSA_(%"class.std::unordered_map"* dereferenceable(56) %43) #3
  %45 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  invoke void @_ZSt10_ConstructISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEJRKS9_EEvPT_DpOT0_(%"class.std::unordered_map"* %44, %"class.std::unordered_map"* dereferenceable(56) %45)
          to label %46 unwind label %110

; <label>:46:                                     ; preds = %42
  %47 = load i32, i32* @x.541
  %48 = load i32, i32* @y.542
  %49 = add i32 %47, 699918101
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, 699918101
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  br i1 %71, label %73, label %388

; <label>:73:                                     ; preds = %46, %388
  %74 = load i32, i32* @x.541
  %75 = load i32, i32* @y.542
  %76 = sub i32 %74, 1534325083
  %77 = sub i32 %76, 1
  %78 = add i32 %77, 1534325083
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = xor i1 %82, true
  %85 = xor i1 %83, true
  %86 = xor i1 true, true
  %87 = and i1 %84, true
  %88 = and i1 %82, %86
  %89 = and i1 %85, true
  %90 = and i1 %83, %86
  %91 = or i1 %87, %88
  %92 = or i1 %89, %90
  %93 = xor i1 %91, %92
  %94 = or i1 %84, %85
  %95 = xor i1 %94, true
  %96 = or i1 true, %86
  %97 = and i1 %95, %96
  %98 = or i1 %93, %97
  %99 = or i1 %82, %83
  br i1 %98, label %100, label %388

; <label>:100:                                    ; preds = %73
  br label %101

; <label>:101:                                    ; preds = %100
  %102 = load i64, i64* %5, align 8
  %103 = sub i64 0, %102
  %104 = sub i64 0, -1
  %105 = add i64 %103, %104
  %106 = sub i64 0, %105
  %107 = add i64 %102, -1
  store i64 %106, i64* %5, align 8
  %108 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  %109 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %108, i32 1
  store %"class.std::unordered_map"* %109, %"class.std::unordered_map"** %7, align 8
  br label %11

; <label>:110:                                    ; preds = %42
  %111 = load i32, i32* @x.541
  %112 = load i32, i32* @y.542
  %113 = add i32 %111, -1566704517
  %114 = sub i32 %113, 1
  %115 = sub i32 %114, -1566704517
  %116 = sub i32 %111, 1
  %117 = mul i32 %111, %115
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %112, 10
  %121 = and i1 %119, %120
  %122 = xor i1 %119, %120
  %123 = or i1 %121, %122
  %124 = or i1 %119, %120
  br i1 %123, label %125, label %389

; <label>:125:                                    ; preds = %110, %389
  %126 = landingpad { i8*, i32 }
          catch i8* null
  %127 = extractvalue { i8*, i32 } %126, 0
  store i8* %127, i8** %8, align 8
  %128 = extractvalue { i8*, i32 } %126, 1
  store i32 %128, i32* %9, align 4
  %129 = load i32, i32* @x.541
  %130 = load i32, i32* @y.542
  %131 = add i32 %129, -1575123370
  %132 = sub i32 %131, 1
  %133 = sub i32 %132, -1575123370
  %134 = sub i32 %129, 1
  %135 = mul i32 %129, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %130, 10
  %139 = xor i1 %137, true
  %140 = xor i1 %138, true
  %141 = xor i1 true, true
  %142 = and i1 %139, true
  %143 = and i1 %137, %141
  %144 = and i1 %140, true
  %145 = and i1 %138, %141
  %146 = or i1 %142, %143
  %147 = or i1 %144, %145
  %148 = xor i1 %146, %147
  %149 = or i1 %139, %140
  %150 = xor i1 %149, true
  %151 = or i1 true, %141
  %152 = and i1 %150, %151
  %153 = or i1 %148, %152
  %154 = or i1 %137, %138
  br i1 %153, label %155, label %389

; <label>:155:                                    ; preds = %125
  br label %156

; <label>:156:                                    ; preds = %155
  %157 = load i8*, i8** %8, align 8
  %158 = call i8* @__cxa_begin_catch(i8* %157) #3
  %159 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %160 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvT_SB_(%"class.std::unordered_map"* %159, %"class.std::unordered_map"* %160)
          to label %161 unwind label %245

; <label>:161:                                    ; preds = %156
  %162 = load i32, i32* @x.541
  %163 = load i32, i32* @y.542
  %164 = sub i32 0, 1
  %165 = add i32 %162, %164
  %166 = sub i32 %162, 1
  %167 = mul i32 %162, %165
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %163, 10
  %171 = xor i1 %169, true
  %172 = xor i1 %170, true
  %173 = xor i1 false, true
  %174 = and i1 %171, false
  %175 = and i1 %169, %173
  %176 = and i1 %172, false
  %177 = and i1 %170, %173
  %178 = or i1 %174, %175
  %179 = or i1 %176, %177
  %180 = xor i1 %178, %179
  %181 = or i1 %171, %172
  %182 = xor i1 %181, true
  %183 = or i1 false, %173
  %184 = and i1 %182, %183
  %185 = or i1 %180, %184
  %186 = or i1 %169, %170
  br i1 %185, label %187, label %393

; <label>:187:                                    ; preds = %161, %393
  %188 = load i32, i32* @x.541
  %189 = load i32, i32* @y.542
  %190 = sub i32 0, 1
  %191 = add i32 %188, %190
  %192 = sub i32 %188, 1
  %193 = mul i32 %188, %191
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %189, 10
  %197 = and i1 %195, %196
  %198 = xor i1 %195, %196
  %199 = or i1 %197, %198
  %200 = or i1 %195, %196
  br i1 %199, label %201, label %393

; <label>:201:                                    ; preds = %187
  invoke void @__cxa_rethrow() #12
          to label %384 unwind label %245

; <label>:202:                                    ; preds = %41
  %203 = load i32, i32* @x.541
  %204 = load i32, i32* @y.542
  %205 = sub i32 0, 1
  %206 = add i32 %203, %205
  %207 = sub i32 %203, 1
  %208 = mul i32 %203, %206
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %204, 10
  %212 = and i1 %210, %211
  %213 = xor i1 %210, %211
  %214 = or i1 %212, %213
  %215 = or i1 %210, %211
  br i1 %214, label %216, label %394

; <label>:216:                                    ; preds = %202, %394
  %217 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  %218 = load i32, i32* @x.541
  %219 = load i32, i32* @y.542
  %220 = add i32 %218, 1929845272
  %221 = sub i32 %220, 1
  %222 = sub i32 %221, 1929845272
  %223 = sub i32 %218, 1
  %224 = mul i32 %218, %222
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %219, 10
  %228 = xor i1 %226, true
  %229 = xor i1 %227, true
  %230 = xor i1 false, true
  %231 = and i1 %228, false
  %232 = and i1 %226, %230
  %233 = and i1 %229, false
  %234 = and i1 %227, %230
  %235 = or i1 %231, %232
  %236 = or i1 %233, %234
  %237 = xor i1 %235, %236
  %238 = or i1 %228, %229
  %239 = xor i1 %238, true
  %240 = or i1 false, %230
  %241 = and i1 %239, %240
  %242 = or i1 %237, %241
  %243 = or i1 %226, %227
  br i1 %242, label %244, label %394

; <label>:244:                                    ; preds = %216
  ret %"class.std::unordered_map"* %217

; <label>:245:                                    ; preds = %201, %156
  %246 = load i32, i32* @x.541
  %247 = load i32, i32* @y.542
  %248 = add i32 %246, -614142326
  %249 = sub i32 %248, 1
  %250 = sub i32 %249, -614142326
  %251 = sub i32 %246, 1
  %252 = mul i32 %246, %250
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %247, 10
  %256 = xor i1 %254, true
  %257 = xor i1 %255, true
  %258 = xor i1 true, true
  %259 = and i1 %256, true
  %260 = and i1 %254, %258
  %261 = and i1 %257, true
  %262 = and i1 %255, %258
  %263 = or i1 %259, %260
  %264 = or i1 %261, %262
  %265 = xor i1 %263, %264
  %266 = or i1 %256, %257
  %267 = xor i1 %266, true
  %268 = or i1 true, %258
  %269 = and i1 %267, %268
  %270 = or i1 %265, %269
  %271 = or i1 %254, %255
  br i1 %270, label %272, label %396

; <label>:272:                                    ; preds = %245, %396
  %273 = landingpad { i8*, i32 }
          cleanup
  %274 = extractvalue { i8*, i32 } %273, 0
  store i8* %274, i8** %8, align 8
  %275 = extractvalue { i8*, i32 } %273, 1
  store i32 %275, i32* %9, align 4
  %276 = load i32, i32* @x.541
  %277 = load i32, i32* @y.542
  %278 = add i32 %276, -1733782438
  %279 = sub i32 %278, 1
  %280 = sub i32 %279, -1733782438
  %281 = sub i32 %276, 1
  %282 = mul i32 %276, %280
  %283 = urem i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %277, 10
  %286 = xor i1 %284, true
  %287 = xor i1 %285, true
  %288 = xor i1 false, true
  %289 = and i1 %286, false
  %290 = and i1 %284, %288
  %291 = and i1 %287, false
  %292 = and i1 %285, %288
  %293 = or i1 %289, %290
  %294 = or i1 %291, %292
  %295 = xor i1 %293, %294
  %296 = or i1 %286, %287
  %297 = xor i1 %296, true
  %298 = or i1 false, %288
  %299 = and i1 %297, %298
  %300 = or i1 %295, %299
  %301 = or i1 %284, %285
  br i1 %300, label %302, label %396

; <label>:302:                                    ; preds = %272
  invoke void @__cxa_end_catch()
          to label %303 unwind label %381

; <label>:303:                                    ; preds = %302
  br label %347
                                                  ; No predecessors!
  %305 = load i32, i32* @x.541
  %306 = load i32, i32* @y.542
  %307 = sub i32 %305, -1156368744
  %308 = sub i32 %307, 1
  %309 = add i32 %308, -1156368744
  %310 = sub i32 %305, 1
  %311 = mul i32 %305, %309
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %306, 10
  %315 = and i1 %313, %314
  %316 = xor i1 %313, %314
  %317 = or i1 %315, %316
  %318 = or i1 %313, %314
  br i1 %317, label %319, label %400

; <label>:319:                                    ; preds = %304, %400
  call void @llvm.trap()
  %320 = load i32, i32* @x.541
  %321 = load i32, i32* @y.542
  %322 = sub i32 %320, 170567156
  %323 = sub i32 %322, 1
  %324 = add i32 %323, 170567156
  %325 = sub i32 %320, 1
  %326 = mul i32 %320, %324
  %327 = urem i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %321, 10
  %330 = xor i1 %328, true
  %331 = xor i1 %329, true
  %332 = xor i1 false, true
  %333 = and i1 %330, false
  %334 = and i1 %328, %332
  %335 = and i1 %331, false
  %336 = and i1 %329, %332
  %337 = or i1 %333, %334
  %338 = or i1 %335, %336
  %339 = xor i1 %337, %338
  %340 = or i1 %330, %331
  %341 = xor i1 %340, true
  %342 = or i1 false, %332
  %343 = and i1 %341, %342
  %344 = or i1 %339, %343
  %345 = or i1 %328, %329
  br i1 %344, label %346, label %400

; <label>:346:                                    ; preds = %319
  unreachable

; <label>:347:                                    ; preds = %303
  %348 = load i32, i32* @x.541
  %349 = load i32, i32* @y.542
  %350 = sub i32 0, 1
  %351 = add i32 %348, %350
  %352 = sub i32 %348, 1
  %353 = mul i32 %348, %351
  %354 = urem i32 %353, 2
  %355 = icmp eq i32 %354, 0
  %356 = icmp slt i32 %349, 10
  %357 = and i1 %355, %356
  %358 = xor i1 %355, %356
  %359 = or i1 %357, %358
  %360 = or i1 %355, %356
  br i1 %359, label %361, label %401

; <label>:361:                                    ; preds = %347, %401
  %362 = load i8*, i8** %8, align 8
  %363 = load i32, i32* %9, align 4
  %364 = insertvalue { i8*, i32 } undef, i8* %362, 0
  %365 = insertvalue { i8*, i32 } %364, i32 %363, 1
  %366 = load i32, i32* @x.541
  %367 = load i32, i32* @y.542
  %368 = sub i32 %366, -155300959
  %369 = sub i32 %368, 1
  %370 = add i32 %369, -155300959
  %371 = sub i32 %366, 1
  %372 = mul i32 %366, %370
  %373 = urem i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %367, 10
  %376 = and i1 %374, %375
  %377 = xor i1 %374, %375
  %378 = or i1 %376, %377
  %379 = or i1 %374, %375
  br i1 %378, label %380, label %401

; <label>:380:                                    ; preds = %361
  resume { i8*, i32 } %365

; <label>:381:                                    ; preds = %302
  %382 = landingpad { i8*, i32 }
          catch i8* null
  %383 = extractvalue { i8*, i32 } %382, 0
  call void @__clang_call_terminate(i8* %383) #11
  unreachable

; <label>:384:                                    ; preds = %201
  unreachable

; <label>:385:                                    ; preds = %25, %11
  %386 = load i64, i64* %5, align 8
  %387 = icmp ugt i64 %386, 0
  br label %25

; <label>:388:                                    ; preds = %73, %46
  br label %73

; <label>:389:                                    ; preds = %125, %110
  %390 = landingpad { i8*, i32 }
          catch i8* null
  %391 = extractvalue { i8*, i32 } %390, 0
  store i8* %391, i8** %8, align 8
  %392 = extractvalue { i8*, i32 } %390, 1
  store i32 %392, i32* %9, align 4
  br label %125

; <label>:393:                                    ; preds = %187, %161
  br label %187

; <label>:394:                                    ; preds = %216, %202
  %395 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  br label %216

; <label>:396:                                    ; preds = %272, %245
  %397 = landingpad { i8*, i32 }
          cleanup
  %398 = extractvalue { i8*, i32 } %397, 0
  store i8* %398, i8** %8, align 8
  %399 = extractvalue { i8*, i32 } %397, 1
  store i32 %399, i32* %9, align 4
  br label %272

; <label>:400:                                    ; preds = %319, %304
  call void @llvm.trap()
  br label %319

; <label>:401:                                    ; preds = %361, %347
  %402 = load i8*, i8** %8, align 8
  %403 = load i32, i32* %9, align 4
  %404 = insertvalue { i8*, i32 } undef, i8* %402, 0
  %405 = insertvalue { i8*, i32 } %404, i32 %403, 1
  br label %361
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt10__fill_n_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeESE_T0_RKSD_(%"class.std::unordered_map"*, i64, %"class.std::unordered_map"* dereferenceable(56)) #0 comdat {
  %4 = alloca i1
  %5 = alloca %"class.std::unordered_map"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::unordered_map"*, align 8
  %8 = alloca i64, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %7, align 8
  %9 = load i64, i64* %6, align 8
  store i64 %9, i64* %8, align 8
  %10 = alloca i32
  store i32 -1879260628, i32* %10
  br label %11

; <label>:11:                                     ; preds = %3, %150
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 -1879260628, label %14
    i32 1839115460, label %42
    i32 -2047862817, label %59
    i32 -556854401, label %62
    i32 -1199982177, label %66
    i32 -1325299467, label %94
    i32 -599627879, label %129
    i32 -650311216, label %130
    i32 1265652279, label %132
    i32 1855046367, label %135
  ]

; <label>:13:                                     ; preds = %11
  br label %150

; <label>:14:                                     ; preds = %11
  %15 = load i32, i32* @x.543
  %16 = load i32, i32* @y.544
  %17 = sub i32 %15, 2015740428
  %18 = sub i32 %17, 1
  %19 = add i32 %18, 2015740428
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %16, 10
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 1839115460, i32 1265652279
  store i32 %41, i32* %10
  br label %150

; <label>:42:                                     ; preds = %11
  %43 = load i64, i64* %8, align 8
  %44 = icmp ugt i64 %43, 0
  store i1 %44, i1* %4
  %45 = load i32, i32* @x.543
  %46 = load i32, i32* @y.544
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -2047862817, i32 1265652279
  store i32 %58, i32* %10
  br label %150

; <label>:59:                                     ; preds = %11
  %60 = load volatile i1, i1* %4
  %61 = select i1 %60, i32 -556854401, i32 -650311216
  store i32 %61, i32* %10
  br label %150

; <label>:62:                                     ; preds = %11
  %63 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  %64 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %5, align 8
  %65 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEaSERKS8_(%"class.std::unordered_map"* %64, %"class.std::unordered_map"* dereferenceable(56) %63)
  store i32 -1199982177, i32* %10
  br label %150

; <label>:66:                                     ; preds = %11
  %67 = load i32, i32* @x.543
  %68 = load i32, i32* @y.544
  %69 = sub i32 %67, -971585825
  %70 = sub i32 %69, 1
  %71 = add i32 %70, -971585825
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 false, true
  %80 = and i1 %77, false
  %81 = and i1 %75, %79
  %82 = and i1 %78, false
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 false, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  %93 = select i1 %91, i32 -1325299467, i32 1855046367
  store i32 %93, i32* %10
  br label %150

; <label>:94:                                     ; preds = %11
  %95 = load i64, i64* %8, align 8
  %96 = sub i64 %95, 7966538932346155839
  %97 = add i64 %96, -1
  %98 = add i64 %97, 7966538932346155839
  %99 = add i64 %95, -1
  store i64 %98, i64* %8, align 8
  %100 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %5, align 8
  %101 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %100, i32 1
  store %"class.std::unordered_map"* %101, %"class.std::unordered_map"** %5, align 8
  %102 = load i32, i32* @x.543
  %103 = load i32, i32* @y.544
  %104 = sub i32 %102, -1217462294
  %105 = sub i32 %104, 1
  %106 = add i32 %105, -1217462294
  %107 = sub i32 %102, 1
  %108 = mul i32 %102, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %103, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 false, true
  %115 = and i1 %112, false
  %116 = and i1 %110, %114
  %117 = and i1 %113, false
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 false, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  %128 = select i1 %126, i32 -599627879, i32 1855046367
  store i32 %128, i32* %10
  br label %150

; <label>:129:                                    ; preds = %11
  store i32 -1879260628, i32* %10
  br label %150

; <label>:130:                                    ; preds = %11
  %131 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %5, align 8
  ret %"class.std::unordered_map"* %131

; <label>:132:                                    ; preds = %11
  %133 = load i64, i64* %8, align 8
  %134 = icmp ugt i64 %133, 0
  store i32 1839115460, i32* %10
  br label %150

; <label>:135:                                    ; preds = %11
  %136 = load i64, i64* %8, align 8
  %137 = sub i64 0, %136
  %138 = add i64 0, %137
  %139 = sub i64 0, %136
  %140 = sub i64 %138, -1255946428485719857
  %141 = add i64 %140, -1
  %142 = add i64 %141, -1255946428485719857
  %143 = add i64 %138, -1
  %144 = sub i64 %136, -3159513497523251847
  %145 = add i64 %144, -1
  %146 = add i64 %145, -3159513497523251847
  %147 = add i64 %136, -1
  store i64 %146, i64* %8, align 8
  %148 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %5, align 8
  %149 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %148, i32 1
  store %"class.std::unordered_map"* %149, %"class.std::unordered_map"** %5, align 8
  store i32 -1325299467, i32* %10
  br label %150

; <label>:150:                                    ; preds = %135, %132, %129, %94, %66, %62, %59, %42, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8__detail9_Map_baseIiSt4pairIKixESaIS3_ENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb0ELb0ELb1EEELb1EEixEOi(%"struct.std::__detail::_Map_base"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Hash_node"*
  %4 = alloca i64*, align 8
  %5 = alloca %"struct.std::__detail::_Map_base"*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.std::_Hashtable"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %11 = alloca %"class.std::tuple", align 8
  %12 = alloca %"class.std::tuple.21", align 1
  %13 = alloca %"struct.std::__detail::_Node_iterator", align 8
  store %"struct.std::__detail::_Map_base"* %0, %"struct.std::__detail::_Map_base"** %5, align 8
  store i32* %1, i32** %6, align 8
  %14 = load %"struct.std::__detail::_Map_base"*, %"struct.std::__detail::_Map_base"** %5, align 8
  %15 = bitcast %"struct.std::__detail::_Map_base"* %14 to %"class.std::_Hashtable"*
  store %"class.std::_Hashtable"* %15, %"class.std::_Hashtable"** %7, align 8
  %16 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %7, align 8
  %17 = bitcast %"class.std::_Hashtable"* %16 to %"struct.std::__detail::_Hash_code_base"*
  %18 = load i32*, i32** %6, align 8
  %19 = call i64 @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE12_M_hash_codeERS2_(%"struct.std::__detail::_Hash_code_base"* %17, i32* dereferenceable(4) %18)
  store i64 %19, i64* %8, align 8
  %20 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %7, align 8
  %21 = load i32*, i32** %6, align 8
  %22 = load i64, i64* %8, align 8
  %23 = call i64 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexERS1_m(%"class.std::_Hashtable"* %20, i32* dereferenceable(4) %21, i64 %22)
  store i64 %23, i64* %9, align 8
  %24 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %7, align 8
  %25 = load i64, i64* %9, align 8
  %26 = load i32*, i32** %6, align 8
  %27 = load i64, i64* %8, align 8
  %28 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE12_M_find_nodeEmRS1_m(%"class.std::_Hashtable"* %24, i64 %25, i32* dereferenceable(4) %26, i64 %27)
  store %"struct.std::__detail::_Hash_node"* %28, %"struct.std::__detail::_Hash_node"** %10, align 8
  %29 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  store %"struct.std::__detail::_Hash_node"* %29, %"struct.std::__detail::_Hash_node"** %3
  %30 = alloca i32
  store i32 -261240651, i32* %30
  br label %31

; <label>:31:                                     ; preds = %2, %127
  %32 = load i32, i32* %30
  switch i32 %32, label %33 [
    i32 -261240651, label %34
    i32 1368507067, label %38
    i32 2109009222, label %54
    i32 -1702700408, label %100
    i32 827441556, label %101
    i32 -1647249086, label %106
    i32 -613133298, label %108
  ]

; <label>:33:                                     ; preds = %31
  br label %127

; <label>:34:                                     ; preds = %31
  %35 = load volatile %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %3
  %36 = icmp ne %"struct.std::__detail::_Hash_node"* %35, null
  %37 = select i1 %36, i32 827441556, i32 1368507067
  store i32 %37, i32* %30
  br label %127

; <label>:38:                                     ; preds = %31
  %39 = load i32, i32* @x.545
  %40 = load i32, i32* @y.546
  %41 = add i32 %39, 860368988
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, 860368988
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 2109009222, i32 -613133298
  store i32 %53, i32* %30
  br label %127

; <label>:54:                                     ; preds = %31
  %55 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %7, align 8
  %56 = bitcast %"class.std::_Hashtable"* %55 to %"struct.std::__detail::_Hashtable_alloc"*
  %57 = load i32*, i32** %6, align 8
  %58 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %57) #3
  %59 = call i32* @_ZSt16forward_as_tupleIJiEESt5tupleIJDpOT_EES3_(i32* dereferenceable(4) %58) #3
  %60 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %11, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %60, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %61, i32 0, i32 0
  store i32* %59, i32** %62, align 8
  %63 = call %"struct.std::__detail::_Hash_node"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJOiEESC_IJEEEEEPS5_DpOT_(%"struct.std::__detail::_Hashtable_alloc"* %56, %"struct.std::piecewise_construct_t"* dereferenceable(1) @_ZStL19piecewise_construct, %"class.std::tuple"* dereferenceable(8) %11, %"class.std::tuple.21"* dereferenceable(1) %12)
  store %"struct.std::__detail::_Hash_node"* %63, %"struct.std::__detail::_Hash_node"** %10, align 8
  %64 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %7, align 8
  %65 = load i64, i64* %9, align 8
  %66 = load i64, i64* %8, align 8
  %67 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %68 = call %"struct.std::__detail::_Hash_node"* @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNS4_10_Hash_nodeIS2_Lb0EEE(%"class.std::_Hashtable"* %64, i64 %65, i64 %66, %"struct.std::__detail::_Hash_node"* %67)
  %69 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %13, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %69, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %68, %"struct.std::__detail::_Hash_node"** %70, align 8
  %71 = call %"struct.std::pair"* @_ZNKSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEptEv(%"struct.std::__detail::_Node_iterator"* %13) #3
  %72 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %71, i32 0, i32 1
  store i64* %72, i64** %4, align 8
  %73 = load i32, i32* @x.545
  %74 = load i32, i32* @y.546
  %75 = sub i32 %73, 987881324
  %76 = sub i32 %75, 1
  %77 = add i32 %76, 987881324
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = xor i1 %81, true
  %84 = xor i1 %82, true
  %85 = xor i1 false, true
  %86 = and i1 %83, false
  %87 = and i1 %81, %85
  %88 = and i1 %84, false
  %89 = and i1 %82, %85
  %90 = or i1 %86, %87
  %91 = or i1 %88, %89
  %92 = xor i1 %90, %91
  %93 = or i1 %83, %84
  %94 = xor i1 %93, true
  %95 = or i1 false, %85
  %96 = and i1 %94, %95
  %97 = or i1 %92, %96
  %98 = or i1 %81, %82
  %99 = select i1 %97, i32 -1702700408, i32 -613133298
  store i32 %99, i32* %30
  br label %127

; <label>:100:                                    ; preds = %31
  store i32 -1647249086, i32* %30
  br label %127

; <label>:101:                                    ; preds = %31
  %102 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %103 = bitcast %"struct.std::__detail::_Hash_node"* %102 to %"struct.std::__detail::_Hash_node_value_base"*
  %104 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base"* %103) #3
  %105 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %104, i32 0, i32 1
  store i64* %105, i64** %4, align 8
  store i32 -1647249086, i32* %30
  br label %127

; <label>:106:                                    ; preds = %31
  %107 = load i64*, i64** %4, align 8
  ret i64* %107

; <label>:108:                                    ; preds = %31
  %109 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %7, align 8
  %110 = bitcast %"class.std::_Hashtable"* %109 to %"struct.std::__detail::_Hashtable_alloc"*
  %111 = load i32*, i32** %6, align 8
  %112 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %111) #3
  %113 = call i32* @_ZSt16forward_as_tupleIJiEESt5tupleIJDpOT_EES3_(i32* dereferenceable(4) %112) #3
  %114 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %11, i32 0, i32 0
  %115 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %114, i32 0, i32 0
  %116 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %115, i32 0, i32 0
  store i32* %113, i32** %116, align 8
  %117 = call %"struct.std::__detail::_Hash_node"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJOiEESC_IJEEEEEPS5_DpOT_(%"struct.std::__detail::_Hashtable_alloc"* %110, %"struct.std::piecewise_construct_t"* dereferenceable(1) @_ZStL19piecewise_construct, %"class.std::tuple"* dereferenceable(8) %11, %"class.std::tuple.21"* dereferenceable(1) %12)
  store %"struct.std::__detail::_Hash_node"* %117, %"struct.std::__detail::_Hash_node"** %10, align 8
  %118 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %7, align 8
  %119 = load i64, i64* %9, align 8
  %120 = load i64, i64* %8, align 8
  %121 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %122 = call %"struct.std::__detail::_Hash_node"* @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNS4_10_Hash_nodeIS2_Lb0EEE(%"class.std::_Hashtable"* %118, i64 %119, i64 %120, %"struct.std::__detail::_Hash_node"* %121)
  %123 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %13, i32 0, i32 0
  %124 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %123, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %122, %"struct.std::__detail::_Hash_node"** %124, align 8
  %125 = call %"struct.std::pair"* @_ZNKSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEptEv(%"struct.std::__detail::_Node_iterator"* %13) #3
  %126 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %125, i32 0, i32 1
  store i64* %126, i64** %4, align 8
  store i32 2109009222, i32* %30
  br label %127

; <label>:127:                                    ; preds = %108, %101, %100, %54, %38, %34, %33
  br label %31
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4)) #4 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.547
  %6 = load i32, i32* @y.548
  %7 = sub i32 %5, -429524024
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -429524024
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 514592563, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %50
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 514592563, label %19
    i32 1709951714, label %27
    i32 -1582855898, label %45
    i32 -1653783730, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %50

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1709951714, i32 -1653783730
  store i32 %26, i32* %15
  br label %50

; <label>:27:                                     ; preds = %16
  %28 = alloca i32*, align 8
  store i32* %0, i32** %28, align 8
  %29 = load i32*, i32** %28, align 8
  store i32* %29, i32** %2
  %30 = load i32, i32* @x.547
  %31 = load i32, i32* @y.548
  %32 = sub i32 %30, -528198110
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -528198110
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -1582855898, i32 -1653783730
  store i32 %44, i32* %15
  br label %50

; <label>:45:                                     ; preds = %16
  %46 = load volatile i32*, i32** %2
  ret i32* %46

; <label>:47:                                     ; preds = %16
  %48 = alloca i32*, align 8
  store i32* %0, i32** %48, align 8
  %49 = load i32*, i32** %48, align 8
  store i32 1709951714, i32* %15
  br label %50

; <label>:50:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE12_M_hash_codeERS2_(%"struct.std::__detail::_Hash_code_base"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.549
  %7 = load i32, i32* @y.550
  %8 = add i32 %6, 765283479
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 765283479
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1081114037, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %85
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1081114037, label %20
    i32 1357180285, label %40
    i32 982646239, label %75
    i32 1356852871, label %77
  ]

; <label>:19:                                     ; preds = %17
  br label %85

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1357180285, i32 1356852871
  store i32 %39, i32* %16
  br label %85

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  %42 = alloca i32*, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %41, align 8
  store i32* %1, i32** %42, align 8
  %43 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %41, align 8
  %44 = call dereferenceable(1) %"struct.std::hash"* @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE5_M_h1Ev(%"struct.std::__detail::_Hash_code_base"* %43)
  %45 = load i32*, i32** %42, align 8
  %46 = load i32, i32* %45, align 4
  %47 = call i64 @_ZNKSt4hashIiEclEi(%"struct.std::hash"* %44, i32 %46) #3
  store i64 %47, i64* %3
  %48 = load i32, i32* @x.549
  %49 = load i32, i32* @y.550
  %50 = add i32 %48, -124804733
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, -124804733
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 982646239, i32 1356852871
  store i32 %74, i32* %16
  br label %85

; <label>:75:                                     ; preds = %17
  %76 = load volatile i64, i64* %3
  ret i64 %76

; <label>:77:                                     ; preds = %17
  %78 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  %79 = alloca i32*, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %78, align 8
  store i32* %1, i32** %79, align 8
  %80 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %78, align 8
  %81 = call dereferenceable(1) %"struct.std::hash"* @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE5_M_h1Ev(%"struct.std::__detail::_Hash_code_base"* %80)
  %82 = load i32*, i32** %79, align 8
  %83 = load i32, i32* %82, align 4
  %84 = call i64 @_ZNKSt4hashIiEclEi(%"struct.std::hash"* %81, i32 %83) #3
  store i32 1357180285, i32* %16
  br label %85

; <label>:85:                                     ; preds = %77, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexERS1_m(%"class.std::_Hashtable"*, i32* dereferenceable(4), i64) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.551
  %8 = load i32, i32* @y.552
  %9 = sub i32 %7, 2117448760
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 2117448760
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 2106697401, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %79
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 2106697401, label %21
    i32 1996134374, label %41
    i32 -811061355, label %66
    i32 -52390583, label %68
  ]

; <label>:20:                                     ; preds = %18
  br label %79

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1996134374, i32 -52390583
  store i32 %40, i32* %17
  br label %79

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::_Hashtable"*, align 8
  %43 = alloca i32*, align 8
  %44 = alloca i64, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %42, align 8
  store i32* %1, i32** %43, align 8
  store i64 %2, i64* %44, align 8
  %45 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %42, align 8
  %46 = bitcast %"class.std::_Hashtable"* %45 to %"struct.std::__detail::_Hash_code_base"*
  %47 = load i32*, i32** %43, align 8
  %48 = load i64, i64* %44, align 8
  %49 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %45, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = call i64 @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE15_M_bucket_indexERS2_mm(%"struct.std::__detail::_Hash_code_base"* %46, i32* dereferenceable(4) %47, i64 %48, i64 %50)
  store i64 %51, i64* %4
  %52 = load i32, i32* @x.551
  %53 = load i32, i32* @y.552
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 -811061355, i32 -52390583
  store i32 %65, i32* %17
  br label %79

; <label>:66:                                     ; preds = %18
  %67 = load volatile i64, i64* %4
  ret i64 %67

; <label>:68:                                     ; preds = %18
  %69 = alloca %"class.std::_Hashtable"*, align 8
  %70 = alloca i32*, align 8
  %71 = alloca i64, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %69, align 8
  store i32* %1, i32** %70, align 8
  store i64 %2, i64* %71, align 8
  %72 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %69, align 8
  %73 = bitcast %"class.std::_Hashtable"* %72 to %"struct.std::__detail::_Hash_code_base"*
  %74 = load i32*, i32** %70, align 8
  %75 = load i64, i64* %71, align 8
  %76 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %72, i32 0, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = call i64 @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE15_M_bucket_indexERS2_mm(%"struct.std::__detail::_Hash_code_base"* %73, i32* dereferenceable(4) %74, i64 %75, i64 %77)
  store i32 1996134374, i32* %17
  br label %79

; <label>:79:                                     ; preds = %68, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE12_M_find_nodeEmRS1_m(%"class.std::_Hashtable"*, i64, i32* dereferenceable(4), i64) #0 comdat align 2 {
  %5 = alloca %"struct.std::__detail::_Hash_node"*
  %6 = alloca %"struct.std::__detail::_Hash_node_base"*
  %7 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %8 = alloca %"class.std::_Hashtable"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %"struct.std::__detail::_Hash_node_base"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %8, align 8
  store i64 %1, i64* %9, align 8
  store i32* %2, i32** %10, align 8
  store i64 %3, i64* %11, align 8
  %13 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %8, align 8
  %14 = load i64, i64* %9, align 8
  %15 = load i32*, i32** %10, align 8
  %16 = load i64, i64* %11, align 8
  %17 = call %"struct.std::__detail::_Hash_node_base"* @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS1_m(%"class.std::_Hashtable"* %13, i64 %14, i32* dereferenceable(4) %15, i64 %16)
  store %"struct.std::__detail::_Hash_node_base"* %17, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  %18 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  store %"struct.std::__detail::_Hash_node_base"* %18, %"struct.std::__detail::_Hash_node_base"** %6
  %19 = alloca i32
  store i32 876399319, i32* %19
  br label %20

; <label>:20:                                     ; preds = %4, %126
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 876399319, label %23
    i32 1897541533, label %27
    i32 1071243357, label %32
    i32 -800714923, label %47
    i32 863243413, label %63
    i32 -704689606, label %64
    i32 -973263912, label %92
    i32 -1957957874, label %121
    i32 -319705655, label %123
    i32 1086677450, label %124
  ]

; <label>:22:                                     ; preds = %20
  br label %126

; <label>:23:                                     ; preds = %20
  %24 = load volatile %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %6
  %25 = icmp ne %"struct.std::__detail::_Hash_node_base"* %24, null
  %26 = select i1 %25, i32 1897541533, i32 1071243357
  store i32 %26, i32* %19
  br label %126

; <label>:27:                                     ; preds = %20
  %28 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  %29 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %28, i32 0, i32 0
  %30 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %29, align 8
  %31 = bitcast %"struct.std::__detail::_Hash_node_base"* %30 to %"struct.std::__detail::_Hash_node"*
  store %"struct.std::__detail::_Hash_node"* %31, %"struct.std::__detail::_Hash_node"** %7, align 8
  store i32 -704689606, i32* %19
  br label %126

; <label>:32:                                     ; preds = %20
  %33 = load i32, i32* @x.553
  %34 = load i32, i32* @y.554
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -800714923, i32 -319705655
  store i32 %46, i32* %19
  br label %126

; <label>:47:                                     ; preds = %20
  store %"struct.std::__detail::_Hash_node"* null, %"struct.std::__detail::_Hash_node"** %7, align 8
  %48 = load i32, i32* @x.553
  %49 = load i32, i32* @y.554
  %50 = add i32 %48, -1841728049
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, -1841728049
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 863243413, i32 -319705655
  store i32 %62, i32* %19
  br label %126

; <label>:63:                                     ; preds = %20
  store i32 -704689606, i32* %19
  br label %126

; <label>:64:                                     ; preds = %20
  %65 = load i32, i32* @x.553
  %66 = load i32, i32* @y.554
  %67 = sub i32 %65, -766171792
  %68 = sub i32 %67, 1
  %69 = add i32 %68, -766171792
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = xor i1 %73, true
  %76 = xor i1 %74, true
  %77 = xor i1 false, true
  %78 = and i1 %75, false
  %79 = and i1 %73, %77
  %80 = and i1 %76, false
  %81 = and i1 %74, %77
  %82 = or i1 %78, %79
  %83 = or i1 %80, %81
  %84 = xor i1 %82, %83
  %85 = or i1 %75, %76
  %86 = xor i1 %85, true
  %87 = or i1 false, %77
  %88 = and i1 %86, %87
  %89 = or i1 %84, %88
  %90 = or i1 %73, %74
  %91 = select i1 %89, i32 -973263912, i32 1086677450
  store i32 %91, i32* %19
  br label %126

; <label>:92:                                     ; preds = %20
  %93 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %7, align 8
  store %"struct.std::__detail::_Hash_node"* %93, %"struct.std::__detail::_Hash_node"** %5
  %94 = load i32, i32* @x.553
  %95 = load i32, i32* @y.554
  %96 = sub i32 %94, 1146209850
  %97 = sub i32 %96, 1
  %98 = add i32 %97, 1146209850
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = xor i1 %102, true
  %105 = xor i1 %103, true
  %106 = xor i1 true, true
  %107 = and i1 %104, true
  %108 = and i1 %102, %106
  %109 = and i1 %105, true
  %110 = and i1 %103, %106
  %111 = or i1 %107, %108
  %112 = or i1 %109, %110
  %113 = xor i1 %111, %112
  %114 = or i1 %104, %105
  %115 = xor i1 %114, true
  %116 = or i1 true, %106
  %117 = and i1 %115, %116
  %118 = or i1 %113, %117
  %119 = or i1 %102, %103
  %120 = select i1 %118, i32 -1957957874, i32 1086677450
  store i32 %120, i32* %19
  br label %126

; <label>:121:                                    ; preds = %20
  %122 = load volatile %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %5
  ret %"struct.std::__detail::_Hash_node"* %122

; <label>:123:                                    ; preds = %20
  store %"struct.std::__detail::_Hash_node"* null, %"struct.std::__detail::_Hash_node"** %7, align 8
  store i32 -800714923, i32* %19
  br label %126

; <label>:124:                                    ; preds = %20
  %125 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %7, align 8
  store i32 -973263912, i32* %19
  br label %126

; <label>:126:                                    ; preds = %124, %123, %92, %64, %63, %47, %32, %27, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJOiEESC_IJEEEEEPS5_DpOT_(%"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.21"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.555
  %6 = load i32, i32* @y.556
  %7 = sub i32 %5, -66622162
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -66622162
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %6, 10
  %15 = xor i1 %13, true
  %16 = xor i1 %14, true
  %17 = xor i1 false, true
  %18 = and i1 %15, false
  %19 = and i1 %13, %17
  %20 = and i1 %16, false
  %21 = and i1 %14, %17
  %22 = or i1 %18, %19
  %23 = or i1 %20, %21
  %24 = xor i1 %22, %23
  %25 = or i1 %15, %16
  %26 = xor i1 %25, true
  %27 = or i1 false, %17
  %28 = and i1 %26, %27
  %29 = or i1 %24, %28
  %30 = or i1 %13, %14
  br i1 %29, label %31, label %271

; <label>:31:                                     ; preds = %4, %271
  %32 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  %33 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %34 = alloca %"class.std::tuple"*, align 8
  %35 = alloca %"class.std::tuple.21"*, align 8
  %36 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %37 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %38 = alloca %"class.std::allocator.12", align 1
  %39 = alloca i8*
  %40 = alloca i32
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %32, align 8
  store %"struct.std::piecewise_construct_t"* %1, %"struct.std::piecewise_construct_t"** %33, align 8
  store %"class.std::tuple"* %2, %"class.std::tuple"** %34, align 8
  store %"class.std::tuple.21"* %3, %"class.std::tuple.21"** %35, align 8
  %41 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %32, align 8
  %42 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %41)
  %43 = call %"struct.std::__detail::_Hash_node"* @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE8allocateERS6_m(%"class.std::allocator.9"* dereferenceable(1) %42, i64 1)
  store %"struct.std::__detail::_Hash_node"* %43, %"struct.std::__detail::_Hash_node"** %36, align 8
  %44 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %36, align 8
  %45 = call %"struct.std::__detail::_Hash_node"* @_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEPT_RS6_(%"struct.std::__detail::_Hash_node"* dereferenceable(24) %44) #3
  store %"struct.std::__detail::_Hash_node"* %45, %"struct.std::__detail::_Hash_node"** %37, align 8
  %46 = load i32, i32* @x.555
  %47 = load i32, i32* @y.556
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  br i1 %69, label %71, label %271

; <label>:71:                                     ; preds = %31
  %72 = invoke dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %41)
          to label %73 unwind label %130

; <label>:73:                                     ; preds = %71
  call void @_ZNSaISt4pairIKixEEC2INSt8__detail10_Hash_nodeIS1_Lb0EEEEERKSaIT_E(%"class.std::allocator.12"* %38, %"class.std::allocator.9"* dereferenceable(1) %72) #3
  %74 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %37, align 8
  %75 = bitcast %"struct.std::__detail::_Hash_node"* %74 to i8*
  %76 = bitcast i8* %75 to %"struct.std::__detail::_Hash_node"*
  call void @_ZNSt8__detail10_Hash_nodeISt4pairIKixELb0EEC2Ev(%"struct.std::__detail::_Hash_node"* %76) #3
  %77 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %37, align 8
  %78 = bitcast %"struct.std::__detail::_Hash_node"* %77 to %"struct.std::__detail::_Hash_node_value_base"*
  %79 = call %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"* %78) #3
  %80 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %33, align 8
  %81 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %80) #3
  %82 = load %"class.std::tuple"*, %"class.std::tuple"** %34, align 8
  %83 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJOiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::tuple"* dereferenceable(8) %82) #3
  %84 = load %"class.std::tuple.21"*, %"class.std::tuple.21"** %35, align 8
  %85 = call dereferenceable(1) %"class.std::tuple.21"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.21"* dereferenceable(1) %84) #3
  invoke void @_ZNSt16allocator_traitsISaISt4pairIKixEEE9constructIS2_JRKSt21piecewise_construct_tSt5tupleIJOiEES9_IJEEEEEvRS3_PT_DpOT0_(%"class.std::allocator.12"* dereferenceable(1) %38, %"struct.std::pair"* %79, %"struct.std::piecewise_construct_t"* dereferenceable(1) %81, %"class.std::tuple"* dereferenceable(8) %83, %"class.std::tuple.21"* dereferenceable(1) %85)
          to label %86 unwind label %175

; <label>:86:                                     ; preds = %73
  %87 = load i32, i32* @x.555
  %88 = load i32, i32* @y.556
  %89 = sub i32 %87, -1207776135
  %90 = sub i32 %89, 1
  %91 = add i32 %90, -1207776135
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = and i1 %95, %96
  %98 = xor i1 %95, %96
  %99 = or i1 %97, %98
  %100 = or i1 %95, %96
  br i1 %99, label %101, label %286

; <label>:101:                                    ; preds = %86, %286
  %102 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %37, align 8
  call void @_ZNSaISt4pairIKixEED2Ev(%"class.std::allocator.12"* %38) #3
  %103 = load i32, i32* @x.555
  %104 = load i32, i32* @y.556
  %105 = add i32 %103, 400485283
  %106 = sub i32 %105, 1
  %107 = sub i32 %106, 400485283
  %108 = sub i32 %103, 1
  %109 = mul i32 %103, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %104, 10
  %113 = xor i1 %111, true
  %114 = xor i1 %112, true
  %115 = xor i1 false, true
  %116 = and i1 %113, false
  %117 = and i1 %111, %115
  %118 = and i1 %114, false
  %119 = and i1 %112, %115
  %120 = or i1 %116, %117
  %121 = or i1 %118, %119
  %122 = xor i1 %120, %121
  %123 = or i1 %113, %114
  %124 = xor i1 %123, true
  %125 = or i1 false, %115
  %126 = and i1 %124, %125
  %127 = or i1 %122, %126
  %128 = or i1 %111, %112
  br i1 %127, label %129, label %286

; <label>:129:                                    ; preds = %101
  ret %"struct.std::__detail::_Hash_node"* %102

; <label>:130:                                    ; preds = %71
  %131 = load i32, i32* @x.555
  %132 = load i32, i32* @y.556
  %133 = sub i32 0, 1
  %134 = add i32 %131, %133
  %135 = sub i32 %131, 1
  %136 = mul i32 %131, %134
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %132, 10
  %140 = xor i1 %138, true
  %141 = xor i1 %139, true
  %142 = xor i1 true, true
  %143 = and i1 %140, true
  %144 = and i1 %138, %142
  %145 = and i1 %141, true
  %146 = and i1 %139, %142
  %147 = or i1 %143, %144
  %148 = or i1 %145, %146
  %149 = xor i1 %147, %148
  %150 = or i1 %140, %141
  %151 = xor i1 %150, true
  %152 = or i1 true, %142
  %153 = and i1 %151, %152
  %154 = or i1 %149, %153
  %155 = or i1 %138, %139
  br i1 %154, label %156, label %288

; <label>:156:                                    ; preds = %130, %288
  %157 = landingpad { i8*, i32 }
          catch i8* null
  %158 = extractvalue { i8*, i32 } %157, 0
  store i8* %158, i8** %39, align 8
  %159 = extractvalue { i8*, i32 } %157, 1
  store i32 %159, i32* %40, align 4
  %160 = load i32, i32* @x.555
  %161 = load i32, i32* @y.556
  %162 = sub i32 %160, -1457082730
  %163 = sub i32 %162, 1
  %164 = add i32 %163, -1457082730
  %165 = sub i32 %160, 1
  %166 = mul i32 %160, %164
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %161, 10
  %170 = and i1 %168, %169
  %171 = xor i1 %168, %169
  %172 = or i1 %170, %171
  %173 = or i1 %168, %169
  br i1 %172, label %174, label %288

; <label>:174:                                    ; preds = %156
  br label %208

; <label>:175:                                    ; preds = %73
  %176 = load i32, i32* @x.555
  %177 = load i32, i32* @y.556
  %178 = add i32 %176, -225889760
  %179 = sub i32 %178, 1
  %180 = sub i32 %179, -225889760
  %181 = sub i32 %176, 1
  %182 = mul i32 %176, %180
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %177, 10
  %186 = and i1 %184, %185
  %187 = xor i1 %184, %185
  %188 = or i1 %186, %187
  %189 = or i1 %184, %185
  br i1 %188, label %190, label %292

; <label>:190:                                    ; preds = %175, %292
  %191 = landingpad { i8*, i32 }
          catch i8* null
  %192 = extractvalue { i8*, i32 } %191, 0
  store i8* %192, i8** %39, align 8
  %193 = extractvalue { i8*, i32 } %191, 1
  store i32 %193, i32* %40, align 4
  call void @_ZNSaISt4pairIKixEED2Ev(%"class.std::allocator.12"* %38) #3
  %194 = load i32, i32* @x.555
  %195 = load i32, i32* @y.556
  %196 = sub i32 0, 1
  %197 = add i32 %194, %196
  %198 = sub i32 %194, 1
  %199 = mul i32 %194, %197
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %195, 10
  %203 = and i1 %201, %202
  %204 = xor i1 %201, %202
  %205 = or i1 %203, %204
  %206 = or i1 %201, %202
  br i1 %205, label %207, label %292

; <label>:207:                                    ; preds = %190
  br label %208

; <label>:208:                                    ; preds = %207, %174
  %209 = load i8*, i8** %39, align 8
  %210 = call i8* @__cxa_begin_catch(i8* %209) #3
  %211 = invoke dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %41)
          to label %212 unwind label %215

; <label>:212:                                    ; preds = %208
  %213 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %36, align 8
  invoke void @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE10deallocateERS6_PS5_m(%"class.std::allocator.9"* dereferenceable(1) %211, %"struct.std::__detail::_Hash_node"* %213, i64 1)
          to label %214 unwind label %215

; <label>:214:                                    ; preds = %212
  invoke void @__cxa_rethrow() #12
          to label %270 unwind label %215

; <label>:215:                                    ; preds = %214, %212, %208
  %216 = landingpad { i8*, i32 }
          cleanup
  %217 = extractvalue { i8*, i32 } %216, 0
  store i8* %217, i8** %39, align 8
  %218 = extractvalue { i8*, i32 } %216, 1
  store i32 %218, i32* %40, align 4
  invoke void @__cxa_end_catch()
          to label %219 unwind label %267

; <label>:219:                                    ; preds = %215
  br label %262
                                                  ; No predecessors!
  %221 = load i32, i32* @x.555
  %222 = load i32, i32* @y.556
  %223 = sub i32 0, 1
  %224 = add i32 %221, %223
  %225 = sub i32 %221, 1
  %226 = mul i32 %221, %224
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %222, 10
  %230 = and i1 %228, %229
  %231 = xor i1 %228, %229
  %232 = or i1 %230, %231
  %233 = or i1 %228, %229
  br i1 %232, label %234, label %296

; <label>:234:                                    ; preds = %220, %296
  call void @llvm.trap()
  %235 = load i32, i32* @x.555
  %236 = load i32, i32* @y.556
  %237 = add i32 %235, -658351217
  %238 = sub i32 %237, 1
  %239 = sub i32 %238, -658351217
  %240 = sub i32 %235, 1
  %241 = mul i32 %235, %239
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %236, 10
  %245 = xor i1 %243, true
  %246 = xor i1 %244, true
  %247 = xor i1 true, true
  %248 = and i1 %245, true
  %249 = and i1 %243, %247
  %250 = and i1 %246, true
  %251 = and i1 %244, %247
  %252 = or i1 %248, %249
  %253 = or i1 %250, %251
  %254 = xor i1 %252, %253
  %255 = or i1 %245, %246
  %256 = xor i1 %255, true
  %257 = or i1 true, %247
  %258 = and i1 %256, %257
  %259 = or i1 %254, %258
  %260 = or i1 %243, %244
  br i1 %259, label %261, label %296

; <label>:261:                                    ; preds = %234
  unreachable

; <label>:262:                                    ; preds = %219
  %263 = load i8*, i8** %39, align 8
  %264 = load i32, i32* %40, align 4
  %265 = insertvalue { i8*, i32 } undef, i8* %263, 0
  %266 = insertvalue { i8*, i32 } %265, i32 %264, 1
  resume { i8*, i32 } %266

; <label>:267:                                    ; preds = %215
  %268 = landingpad { i8*, i32 }
          catch i8* null
  %269 = extractvalue { i8*, i32 } %268, 0
  call void @__clang_call_terminate(i8* %269) #11
  unreachable

; <label>:270:                                    ; preds = %214
  unreachable

; <label>:271:                                    ; preds = %31, %4
  %272 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  %273 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %274 = alloca %"class.std::tuple"*, align 8
  %275 = alloca %"class.std::tuple.21"*, align 8
  %276 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %277 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %278 = alloca %"class.std::allocator.12", align 1
  %279 = alloca i8*
  %280 = alloca i32
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %272, align 8
  store %"struct.std::piecewise_construct_t"* %1, %"struct.std::piecewise_construct_t"** %273, align 8
  store %"class.std::tuple"* %2, %"class.std::tuple"** %274, align 8
  store %"class.std::tuple.21"* %3, %"class.std::tuple.21"** %275, align 8
  %281 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %272, align 8
  %282 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %281)
  %283 = call %"struct.std::__detail::_Hash_node"* @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE8allocateERS6_m(%"class.std::allocator.9"* dereferenceable(1) %282, i64 1)
  store %"struct.std::__detail::_Hash_node"* %283, %"struct.std::__detail::_Hash_node"** %276, align 8
  %284 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %276, align 8
  %285 = call %"struct.std::__detail::_Hash_node"* @_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEPT_RS6_(%"struct.std::__detail::_Hash_node"* dereferenceable(24) %284) #3
  store %"struct.std::__detail::_Hash_node"* %285, %"struct.std::__detail::_Hash_node"** %277, align 8
  br label %31

; <label>:286:                                    ; preds = %101, %86
  %287 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %37, align 8
  call void @_ZNSaISt4pairIKixEED2Ev(%"class.std::allocator.12"* %38) #3
  br label %101

; <label>:288:                                    ; preds = %156, %130
  %289 = landingpad { i8*, i32 }
          catch i8* null
  %290 = extractvalue { i8*, i32 } %289, 0
  store i8* %290, i8** %39, align 8
  %291 = extractvalue { i8*, i32 } %289, 1
  store i32 %291, i32* %40, align 4
  br label %156

; <label>:292:                                    ; preds = %190, %175
  %293 = landingpad { i8*, i32 }
          catch i8* null
  %294 = extractvalue { i8*, i32 } %293, 0
  store i8* %294, i8** %39, align 8
  %295 = extractvalue { i8*, i32 } %293, 1
  store i32 %295, i32* %40, align 4
  call void @_ZNSaISt4pairIKixEED2Ev(%"class.std::allocator.12"* %38) #3
  br label %190

; <label>:296:                                    ; preds = %234, %220
  call void @llvm.trap()
  br label %234
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt16forward_as_tupleIJiEESt5tupleIJDpOT_EES3_(i32* dereferenceable(4)) #4 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.557
  %3 = load i32, i32* @y.558
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %55

; <label>:15:                                     ; preds = %1, %55
  %16 = alloca %"class.std::tuple", align 8
  %17 = alloca i32*, align 8
  store i32* %0, i32** %17, align 8
  %18 = load i32*, i32** %17, align 8
  %19 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %18) #3
  %20 = load i32, i32* @x.557
  %21 = load i32, i32* @y.558
  %22 = sub i32 %20, 1515628648
  %23 = sub i32 %22, 1
  %24 = add i32 %23, 1515628648
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 false, true
  %33 = and i1 %30, false
  %34 = and i1 %28, %32
  %35 = and i1 %31, false
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 false, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  br i1 %44, label %46, label %55

; <label>:46:                                     ; preds = %15
  invoke void @_ZNSt5tupleIJOiEEC2IJiEvEEDpOT_(%"class.std::tuple"* %16, i32* dereferenceable(4) %19)
          to label %47 unwind label %52

; <label>:47:                                     ; preds = %46
  %48 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %16, i32 0, i32 0
  %49 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %48, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %49, i32 0, i32 0
  %51 = load i32*, i32** %50, align 8
  ret i32* %51

; <label>:52:                                     ; preds = %46
  %53 = landingpad { i8*, i32 }
          catch i8* null
  %54 = extractvalue { i8*, i32 } %53, 0
  call void @__clang_call_terminate(i8* %54) #11
  unreachable

; <label>:55:                                     ; preds = %15, %1
  %56 = alloca %"class.std::tuple", align 8
  %57 = alloca i32*, align 8
  store i32* %0, i32** %57, align 8
  %58 = load i32*, i32** %57, align 8
  %59 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %58) #3
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNS4_10_Hash_nodeIS2_Lb0EEE(%"class.std::_Hashtable"*, i64, i64, %"struct.std::__detail::_Hash_node"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %6 = alloca %"class.std::_Hashtable"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %10 = alloca i64*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %"struct.std::pair.23", align 8
  %13 = alloca i8*
  %14 = alloca i32
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i64 %2, i64* %8, align 8
  store %"struct.std::__detail::_Hash_node"* %3, %"struct.std::__detail::_Hash_node"** %9, align 8
  %15 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %6, align 8
  %16 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %15, i32 0, i32 4
  %17 = call i64 @_ZNKSt8__detail20_Prime_rehash_policy8_M_stateEv(%"struct.std::__detail::_Prime_rehash_policy"* %16)
  store i64 %17, i64* %11, align 8
  store i64* %11, i64** %10, align 8
  %18 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %15, i32 0, i32 4
  %19 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %15, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %15, i32 0, i32 3
  %22 = load i64, i64* %21, align 8
  %23 = call { i8, i64 } @_ZNKSt8__detail20_Prime_rehash_policy14_M_need_rehashEmmm(%"struct.std::__detail::_Prime_rehash_policy"* %18, i64 %20, i64 %22, i64 1)
  %24 = bitcast %"struct.std::pair.23"* %12 to { i8, i64 }*
  %25 = getelementptr inbounds { i8, i64 }, { i8, i64 }* %24, i32 0, i32 0
  %26 = extractvalue { i8, i64 } %23, 0
  store i8 %26, i8* %25, align 8
  %27 = getelementptr inbounds { i8, i64 }, { i8, i64 }* %24, i32 0, i32 1
  %28 = extractvalue { i8, i64 } %23, 1
  store i64 %28, i64* %27, align 8
  %29 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %12, i32 0, i32 0
  %30 = load i8, i8* %29, align 8
  %31 = trunc i8 %30 to i1
  br i1 %31, label %32, label %88

; <label>:32:                                     ; preds = %4
  %33 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %12, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = load i64*, i64** %10, align 8
  invoke void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_rehashEmRKm(%"class.std::_Hashtable"* %15, i64 %34, i64* dereferenceable(8) %35)
          to label %36 unwind label %48

; <label>:36:                                     ; preds = %32
  %37 = bitcast %"class.std::_Hashtable"* %15 to %"struct.std::__detail::_Hash_code_base"*
  %38 = invoke dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE10_M_extractEv(%"struct.std::__detail::_Hash_code_base"* %37)
          to label %39 unwind label %48

; <label>:39:                                     ; preds = %36
  %40 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  %41 = bitcast %"struct.std::__detail::_Hash_node"* %40 to %"struct.std::__detail::_Hash_node_value_base"*
  %42 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base"* %41) #3
  %43 = invoke dereferenceable(4) i32* @_ZNKSt8__detail10_Select1stclIRSt4pairIKixEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS6_(%"struct.std::__detail::_Select1st"* %38, %"struct.std::pair"* dereferenceable(16) %42)
          to label %44 unwind label %48

; <label>:44:                                     ; preds = %39
  %45 = load i64, i64* %8, align 8
  %46 = invoke i64 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexERS1_m(%"class.std::_Hashtable"* %15, i32* dereferenceable(4) %43, i64 %45)
          to label %47 unwind label %48

; <label>:47:                                     ; preds = %44
  store i64 %46, i64* %7, align 8
  br label %88

; <label>:48:                                     ; preds = %124, %88, %44, %39, %36, %32
  %49 = load i32, i32* @x.559
  %50 = load i32, i32* @y.560
  %51 = add i32 %49, 432588968
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, 432588968
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  br i1 %61, label %63, label %245

; <label>:63:                                     ; preds = %48, %245
  %64 = landingpad { i8*, i32 }
          catch i8* null
  %65 = extractvalue { i8*, i32 } %64, 0
  store i8* %65, i8** %13, align 8
  %66 = extractvalue { i8*, i32 } %64, 1
  store i32 %66, i32* %14, align 4
  %67 = load i32, i32* @x.559
  %68 = load i32, i32* @y.560
  %69 = add i32 %67, -1652487886
  %70 = sub i32 %69, 1
  %71 = sub i32 %70, -1652487886
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  br i1 %79, label %81, label %245

; <label>:81:                                     ; preds = %63
  br label %82

; <label>:82:                                     ; preds = %81
  %83 = load i8*, i8** %13, align 8
  %84 = call i8* @__cxa_begin_catch(i8* %83) #3
  %85 = bitcast %"class.std::_Hashtable"* %15 to %"struct.std::__detail::_Hashtable_alloc"*
  %86 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  invoke void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE18_M_deallocate_nodeEPS5_(%"struct.std::__detail::_Hashtable_alloc"* %85, %"struct.std::__detail::_Hash_node"* %86)
          to label %87 unwind label %135

; <label>:87:                                     ; preds = %82
  invoke void @__cxa_rethrow() #12
          to label %244 unwind label %135

; <label>:88:                                     ; preds = %47, %4
  %89 = bitcast %"class.std::_Hashtable"* %15 to %"struct.std::__detail::_Hash_code_base"*
  %90 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  %91 = load i64, i64* %8, align 8
  invoke void @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE13_M_store_codeEPNS_10_Hash_nodeIS3_Lb0EEEm(%"struct.std::__detail::_Hash_code_base"* %89, %"struct.std::__detail::_Hash_node"* %90, i64 %91)
          to label %92 unwind label %48

; <label>:92:                                     ; preds = %88
  %93 = load i32, i32* @x.559
  %94 = load i32, i32* @y.560
  %95 = add i32 %93, -1769257668
  %96 = sub i32 %95, 1
  %97 = sub i32 %96, -1769257668
  %98 = sub i32 %93, 1
  %99 = mul i32 %93, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %94, 10
  %103 = and i1 %101, %102
  %104 = xor i1 %101, %102
  %105 = or i1 %103, %104
  %106 = or i1 %101, %102
  br i1 %105, label %107, label %249

; <label>:107:                                    ; preds = %92, %249
  %108 = load i64, i64* %7, align 8
  %109 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  %110 = load i32, i32* @x.559
  %111 = load i32, i32* @y.560
  %112 = add i32 %110, -1099182302
  %113 = sub i32 %112, 1
  %114 = sub i32 %113, -1099182302
  %115 = sub i32 %110, 1
  %116 = mul i32 %110, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %111, 10
  %120 = and i1 %118, %119
  %121 = xor i1 %118, %119
  %122 = or i1 %120, %121
  %123 = or i1 %118, %119
  br i1 %122, label %124, label %249

; <label>:124:                                    ; preds = %107
  invoke void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE22_M_insert_bucket_beginEmPNS4_10_Hash_nodeIS2_Lb0EEE(%"class.std::_Hashtable"* %15, i64 %108, %"struct.std::__detail::_Hash_node"* %109)
          to label %125 unwind label %48

; <label>:125:                                    ; preds = %124
  %126 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %15, i32 0, i32 3
  %127 = load i64, i64* %126, align 8
  %128 = sub i64 0, 1
  %129 = sub i64 %127, %128
  %130 = add i64 %127, 1
  store i64 %129, i64* %126, align 8
  %131 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  call void @_ZNSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEC2EPNS_10_Hash_nodeIS3_Lb0EEE(%"struct.std::__detail::_Node_iterator"* %5, %"struct.std::__detail::_Hash_node"* %131) #3
  %132 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %5, i32 0, i32 0
  %133 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %132, i32 0, i32 0
  %134 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %133, align 8
  ret %"struct.std::__detail::_Hash_node"* %134

; <label>:135:                                    ; preds = %87, %82
  %136 = landingpad { i8*, i32 }
          cleanup
  %137 = extractvalue { i8*, i32 } %136, 0
  store i8* %137, i8** %13, align 8
  %138 = extractvalue { i8*, i32 } %136, 1
  store i32 %138, i32* %14, align 4
  invoke void @__cxa_end_catch()
          to label %139 unwind label %188

; <label>:139:                                    ; preds = %135
  br label %183
                                                  ; No predecessors!
  %141 = load i32, i32* @x.559
  %142 = load i32, i32* @y.560
  %143 = sub i32 %141, 1364021663
  %144 = sub i32 %143, 1
  %145 = add i32 %144, 1364021663
  %146 = sub i32 %141, 1
  %147 = mul i32 %141, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %142, 10
  %151 = xor i1 %149, true
  %152 = xor i1 %150, true
  %153 = xor i1 true, true
  %154 = and i1 %151, true
  %155 = and i1 %149, %153
  %156 = and i1 %152, true
  %157 = and i1 %150, %153
  %158 = or i1 %154, %155
  %159 = or i1 %156, %157
  %160 = xor i1 %158, %159
  %161 = or i1 %151, %152
  %162 = xor i1 %161, true
  %163 = or i1 true, %153
  %164 = and i1 %162, %163
  %165 = or i1 %160, %164
  %166 = or i1 %149, %150
  br i1 %165, label %167, label %252

; <label>:167:                                    ; preds = %140, %252
  call void @llvm.trap()
  %168 = load i32, i32* @x.559
  %169 = load i32, i32* @y.560
  %170 = add i32 %168, -1929720245
  %171 = sub i32 %170, 1
  %172 = sub i32 %171, -1929720245
  %173 = sub i32 %168, 1
  %174 = mul i32 %168, %172
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %169, 10
  %178 = and i1 %176, %177
  %179 = xor i1 %176, %177
  %180 = or i1 %178, %179
  %181 = or i1 %176, %177
  br i1 %180, label %182, label %252

; <label>:182:                                    ; preds = %167
  unreachable

; <label>:183:                                    ; preds = %139
  %184 = load i8*, i8** %13, align 8
  %185 = load i32, i32* %14, align 4
  %186 = insertvalue { i8*, i32 } undef, i8* %184, 0
  %187 = insertvalue { i8*, i32 } %186, i32 %185, 1
  resume { i8*, i32 } %187

; <label>:188:                                    ; preds = %135
  %189 = load i32, i32* @x.559
  %190 = load i32, i32* @y.560
  %191 = sub i32 0, 1
  %192 = add i32 %189, %191
  %193 = sub i32 %189, 1
  %194 = mul i32 %189, %192
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %190, 10
  %198 = xor i1 %196, true
  %199 = xor i1 %197, true
  %200 = xor i1 true, true
  %201 = and i1 %198, true
  %202 = and i1 %196, %200
  %203 = and i1 %199, true
  %204 = and i1 %197, %200
  %205 = or i1 %201, %202
  %206 = or i1 %203, %204
  %207 = xor i1 %205, %206
  %208 = or i1 %198, %199
  %209 = xor i1 %208, true
  %210 = or i1 true, %200
  %211 = and i1 %209, %210
  %212 = or i1 %207, %211
  %213 = or i1 %196, %197
  br i1 %212, label %214, label %253

; <label>:214:                                    ; preds = %188, %253
  %215 = landingpad { i8*, i32 }
          catch i8* null
  %216 = extractvalue { i8*, i32 } %215, 0
  call void @__clang_call_terminate(i8* %216) #11
  %217 = load i32, i32* @x.559
  %218 = load i32, i32* @y.560
  %219 = add i32 %217, -549117665
  %220 = sub i32 %219, 1
  %221 = sub i32 %220, -549117665
  %222 = sub i32 %217, 1
  %223 = mul i32 %217, %221
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %218, 10
  %227 = xor i1 %225, true
  %228 = xor i1 %226, true
  %229 = xor i1 false, true
  %230 = and i1 %227, false
  %231 = and i1 %225, %229
  %232 = and i1 %228, false
  %233 = and i1 %226, %229
  %234 = or i1 %230, %231
  %235 = or i1 %232, %233
  %236 = xor i1 %234, %235
  %237 = or i1 %227, %228
  %238 = xor i1 %237, true
  %239 = or i1 false, %229
  %240 = and i1 %238, %239
  %241 = or i1 %236, %240
  %242 = or i1 %225, %226
  br i1 %241, label %243, label %253

; <label>:243:                                    ; preds = %214
  unreachable

; <label>:244:                                    ; preds = %87
  unreachable

; <label>:245:                                    ; preds = %63, %48
  %246 = landingpad { i8*, i32 }
          catch i8* null
  %247 = extractvalue { i8*, i32 } %246, 0
  store i8* %247, i8** %13, align 8
  %248 = extractvalue { i8*, i32 } %246, 1
  store i32 %248, i32* %14, align 4
  br label %63

; <label>:249:                                    ; preds = %107, %92
  %250 = load i64, i64* %7, align 8
  %251 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  br label %107

; <label>:252:                                    ; preds = %167, %140
  call void @llvm.trap()
  br label %167

; <label>:253:                                    ; preds = %214, %188
  %254 = landingpad { i8*, i32 }
          catch i8* null
  %255 = extractvalue { i8*, i32 } %254, 0
  call void @__clang_call_terminate(i8* %255) #11
  br label %214
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"* @_ZNKSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEptEv(%"struct.std::__detail::_Node_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Node_iterator"*, align 8
  store %"struct.std::__detail::_Node_iterator"* %0, %"struct.std::__detail::_Node_iterator"** %2, align 8
  %3 = load %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Node_iterator"* %3 to %"struct.std::__detail::_Node_iterator_base"*
  %5 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %4, i32 0, i32 0
  %6 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %5, align 8
  %7 = bitcast %"struct.std::__detail::_Hash_node"* %6 to %"struct.std::__detail::_Hash_node_value_base"*
  %8 = call %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"* %7) #3
  ret %"struct.std::pair"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE15_M_bucket_indexERS2_mm(%"struct.std::__detail::_Hash_code_base"*, i32* dereferenceable(4), i64, i64) #0 comdat align 2 {
  %5 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %5, align 8
  store i32* %1, i32** %6, align 8
  store i64 %2, i64* %7, align 8
  store i64 %3, i64* %8, align 8
  %9 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %5, align 8
  %10 = call dereferenceable(1) %"struct.std::__detail::_Mod_range_hashing"* @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE5_M_h2Ev(%"struct.std::__detail::_Hash_code_base"* %9)
  %11 = load i64, i64* %7, align 8
  %12 = load i64, i64* %8, align 8
  %13 = call i64 @_ZNKSt8__detail18_Mod_range_hashingclEmm(%"struct.std::__detail::_Mod_range_hashing"* %10, i64 %11, i64 %12) #3
  ret i64 %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node_base"* @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS1_m(%"class.std::_Hashtable"*, i64, i32* dereferenceable(4), i64) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca %"struct.std::__detail::_Hash_node_base"*
  %7 = alloca %"class.std::_Hashtable"*
  %8 = alloca %"struct.std::__detail::_Hash_node_base"*, align 8
  %9 = alloca %"class.std::_Hashtable"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i64, align 8
  %13 = alloca %"struct.std::__detail::_Hash_node_base"*, align 8
  %14 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %9, align 8
  store i64 %1, i64* %10, align 8
  store i32* %2, i32** %11, align 8
  store i64 %3, i64* %12, align 8
  %15 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %9, align 8
  store %"class.std::_Hashtable"* %15, %"class.std::_Hashtable"** %7
  %16 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %7
  %17 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %16, i32 0, i32 0
  %18 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %17, align 8
  %19 = load i64, i64* %10, align 8
  %20 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %18, i64 %19
  %21 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %20, align 8
  store %"struct.std::__detail::_Hash_node_base"* %21, %"struct.std::__detail::_Hash_node_base"** %13, align 8
  %22 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %13, align 8
  store %"struct.std::__detail::_Hash_node_base"* %22, %"struct.std::__detail::_Hash_node_base"** %6
  %23 = alloca i32
  store i32 -861288043, i32* %23
  br label %24

; <label>:24:                                     ; preds = %4, %259
  %25 = load i32, i32* %23
  switch i32 %25, label %26 [
    i32 -861288043, label %27
    i32 2079248191, label %31
    i32 -176992225, label %59
    i32 -40828697, label %74
    i32 -30055102, label %75
    i32 116945484, label %80
    i32 -1847225422, label %96
    i32 1705640331, label %130
    i32 1532854778, label %133
    i32 751729794, label %135
    i32 -1022861859, label %142
    i32 836844581, label %150
    i32 -990526004, label %151
    i32 -319690446, label %166
    i32 1028592672, label %196
    i32 1472217488, label %197
    i32 -282854071, label %200
    i32 1103315648, label %216
    i32 1362539306, label %244
    i32 1831792909, label %245
    i32 -1829852699, label %247
    i32 -1964875683, label %248
    i32 -839611216, label %255
    i32 1381920744, label %258
  ]

; <label>:26:                                     ; preds = %24
  br label %259

; <label>:27:                                     ; preds = %24
  %28 = load volatile %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %6
  %29 = icmp ne %"struct.std::__detail::_Hash_node_base"* %28, null
  %30 = select i1 %29, i32 -30055102, i32 2079248191
  store i32 %30, i32* %23
  br label %259

; <label>:31:                                     ; preds = %24
  %32 = load i32, i32* @x.565
  %33 = load i32, i32* @y.566
  %34 = sub i32 %32, 1044566175
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 1044566175
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -176992225, i32 -1829852699
  store i32 %58, i32* %23
  br label %259

; <label>:59:                                     ; preds = %24
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %8, align 8
  %60 = load i32, i32* @x.565
  %61 = load i32, i32* @y.566
  %62 = sub i32 0, 1
  %63 = add i32 %60, %62
  %64 = sub i32 %60, 1
  %65 = mul i32 %60, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %61, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 -40828697, i32 -1829852699
  store i32 %73, i32* %23
  br label %259

; <label>:74:                                     ; preds = %24
  store i32 1831792909, i32* %23
  br label %259

; <label>:75:                                     ; preds = %24
  %76 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %13, align 8
  %77 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %76, i32 0, i32 0
  %78 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %77, align 8
  %79 = bitcast %"struct.std::__detail::_Hash_node_base"* %78 to %"struct.std::__detail::_Hash_node"*
  store %"struct.std::__detail::_Hash_node"* %79, %"struct.std::__detail::_Hash_node"** %14, align 8
  store i32 116945484, i32* %23
  br label %259

; <label>:80:                                     ; preds = %24
  %81 = load i32, i32* @x.565
  %82 = load i32, i32* @y.566
  %83 = add i32 %81, -932318086
  %84 = sub i32 %83, 1
  %85 = sub i32 %84, -932318086
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  %95 = select i1 %93, i32 -1847225422, i32 -1964875683
  store i32 %95, i32* %23
  br label %259

; <label>:96:                                     ; preds = %24
  %97 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %7
  %98 = bitcast %"class.std::_Hashtable"* %97 to %"struct.std::__detail::_Hashtable_base"*
  %99 = load i32*, i32** %11, align 8
  %100 = load i64, i64* %12, align 8
  %101 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %14, align 8
  %102 = call zeroext i1 @_ZNKSt8__detail15_Hashtable_baseIiSt4pairIKixENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_equalsERS2_mPNS_10_Hash_nodeIS3_Lb0EEE(%"struct.std::__detail::_Hashtable_base"* %98, i32* dereferenceable(4) %99, i64 %100, %"struct.std::__detail::_Hash_node"* %101)
  store i1 %102, i1* %5
  %103 = load i32, i32* @x.565
  %104 = load i32, i32* @y.566
  %105 = add i32 %103, -1056481949
  %106 = sub i32 %105, 1
  %107 = sub i32 %106, -1056481949
  %108 = sub i32 %103, 1
  %109 = mul i32 %103, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %104, 10
  %113 = xor i1 %111, true
  %114 = xor i1 %112, true
  %115 = xor i1 false, true
  %116 = and i1 %113, false
  %117 = and i1 %111, %115
  %118 = and i1 %114, false
  %119 = and i1 %112, %115
  %120 = or i1 %116, %117
  %121 = or i1 %118, %119
  %122 = xor i1 %120, %121
  %123 = or i1 %113, %114
  %124 = xor i1 %123, true
  %125 = or i1 false, %115
  %126 = and i1 %124, %125
  %127 = or i1 %122, %126
  %128 = or i1 %111, %112
  %129 = select i1 %127, i32 1705640331, i32 -1964875683
  store i32 %129, i32* %23
  br label %259

; <label>:130:                                    ; preds = %24
  %131 = load volatile i1, i1* %5
  %132 = select i1 %131, i32 1532854778, i32 751729794
  store i32 %132, i32* %23
  br label %259

; <label>:133:                                    ; preds = %24
  %134 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %13, align 8
  store %"struct.std::__detail::_Hash_node_base"* %134, %"struct.std::__detail::_Hash_node_base"** %8, align 8
  store i32 1831792909, i32* %23
  br label %259

; <label>:135:                                    ; preds = %24
  %136 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %14, align 8
  %137 = bitcast %"struct.std::__detail::_Hash_node"* %136 to %"struct.std::__detail::_Hash_node_base"*
  %138 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %137, i32 0, i32 0
  %139 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %138, align 8
  %140 = icmp ne %"struct.std::__detail::_Hash_node_base"* %139, null
  %141 = select i1 %140, i32 -1022861859, i32 836844581
  store i32 %141, i32* %23
  br label %259

; <label>:142:                                    ; preds = %24
  %143 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %14, align 8
  %144 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %143) #3
  %145 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %7
  %146 = call i64 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexEPNS4_10_Hash_nodeIS2_Lb0EEE(%"class.std::_Hashtable"* %145, %"struct.std::__detail::_Hash_node"* %144) #3
  %147 = load i64, i64* %10, align 8
  %148 = icmp ne i64 %146, %147
  %149 = select i1 %148, i32 836844581, i32 -990526004
  store i32 %149, i32* %23
  br label %259

; <label>:150:                                    ; preds = %24
  store i32 -282854071, i32* %23
  br label %259

; <label>:151:                                    ; preds = %24
  %152 = load i32, i32* @x.565
  %153 = load i32, i32* @y.566
  %154 = sub i32 0, 1
  %155 = add i32 %152, %154
  %156 = sub i32 %152, 1
  %157 = mul i32 %152, %155
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %153, 10
  %161 = and i1 %159, %160
  %162 = xor i1 %159, %160
  %163 = or i1 %161, %162
  %164 = or i1 %159, %160
  %165 = select i1 %163, i32 -319690446, i32 -839611216
  store i32 %165, i32* %23
  br label %259

; <label>:166:                                    ; preds = %24
  %167 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %14, align 8
  %168 = bitcast %"struct.std::__detail::_Hash_node"* %167 to %"struct.std::__detail::_Hash_node_base"*
  store %"struct.std::__detail::_Hash_node_base"* %168, %"struct.std::__detail::_Hash_node_base"** %13, align 8
  %169 = load i32, i32* @x.565
  %170 = load i32, i32* @y.566
  %171 = sub i32 %169, -1178347286
  %172 = sub i32 %171, 1
  %173 = add i32 %172, -1178347286
  %174 = sub i32 %169, 1
  %175 = mul i32 %169, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %170, 10
  %179 = xor i1 %177, true
  %180 = xor i1 %178, true
  %181 = xor i1 true, true
  %182 = and i1 %179, true
  %183 = and i1 %177, %181
  %184 = and i1 %180, true
  %185 = and i1 %178, %181
  %186 = or i1 %182, %183
  %187 = or i1 %184, %185
  %188 = xor i1 %186, %187
  %189 = or i1 %179, %180
  %190 = xor i1 %189, true
  %191 = or i1 true, %181
  %192 = and i1 %190, %191
  %193 = or i1 %188, %192
  %194 = or i1 %177, %178
  %195 = select i1 %193, i32 1028592672, i32 -839611216
  store i32 %195, i32* %23
  br label %259

; <label>:196:                                    ; preds = %24
  store i32 1472217488, i32* %23
  br label %259

; <label>:197:                                    ; preds = %24
  %198 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %14, align 8
  %199 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %198) #3
  store %"struct.std::__detail::_Hash_node"* %199, %"struct.std::__detail::_Hash_node"** %14, align 8
  store i32 116945484, i32* %23
  br label %259

; <label>:200:                                    ; preds = %24
  %201 = load i32, i32* @x.565
  %202 = load i32, i32* @y.566
  %203 = sub i32 %201, 1088766145
  %204 = sub i32 %203, 1
  %205 = add i32 %204, 1088766145
  %206 = sub i32 %201, 1
  %207 = mul i32 %201, %205
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %202, 10
  %211 = and i1 %209, %210
  %212 = xor i1 %209, %210
  %213 = or i1 %211, %212
  %214 = or i1 %209, %210
  %215 = select i1 %213, i32 1103315648, i32 1381920744
  store i32 %215, i32* %23
  br label %259

; <label>:216:                                    ; preds = %24
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %8, align 8
  %217 = load i32, i32* @x.565
  %218 = load i32, i32* @y.566
  %219 = sub i32 %217, 1569866140
  %220 = sub i32 %219, 1
  %221 = add i32 %220, 1569866140
  %222 = sub i32 %217, 1
  %223 = mul i32 %217, %221
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %218, 10
  %227 = xor i1 %225, true
  %228 = xor i1 %226, true
  %229 = xor i1 false, true
  %230 = and i1 %227, false
  %231 = and i1 %225, %229
  %232 = and i1 %228, false
  %233 = and i1 %226, %229
  %234 = or i1 %230, %231
  %235 = or i1 %232, %233
  %236 = xor i1 %234, %235
  %237 = or i1 %227, %228
  %238 = xor i1 %237, true
  %239 = or i1 false, %229
  %240 = and i1 %238, %239
  %241 = or i1 %236, %240
  %242 = or i1 %225, %226
  %243 = select i1 %241, i32 1362539306, i32 1381920744
  store i32 %243, i32* %23
  br label %259

; <label>:244:                                    ; preds = %24
  store i32 1831792909, i32* %23
  br label %259

; <label>:245:                                    ; preds = %24
  %246 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %8, align 8
  ret %"struct.std::__detail::_Hash_node_base"* %246

; <label>:247:                                    ; preds = %24
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %8, align 8
  store i32 -176992225, i32* %23
  br label %259

; <label>:248:                                    ; preds = %24
  %249 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %7
  %250 = bitcast %"class.std::_Hashtable"* %249 to %"struct.std::__detail::_Hashtable_base"*
  %251 = load i32*, i32** %11, align 8
  %252 = load i64, i64* %12, align 8
  %253 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %14, align 8
  %254 = call zeroext i1 @_ZNKSt8__detail15_Hashtable_baseIiSt4pairIKixENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_equalsERS2_mPNS_10_Hash_nodeIS3_Lb0EEE(%"struct.std::__detail::_Hashtable_base"* %250, i32* dereferenceable(4) %251, i64 %252, %"struct.std::__detail::_Hash_node"* %253)
  store i32 -1847225422, i32* %23
  br label %259

; <label>:255:                                    ; preds = %24
  %256 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %14, align 8
  %257 = bitcast %"struct.std::__detail::_Hash_node"* %256 to %"struct.std::__detail::_Hash_node_base"*
  store %"struct.std::__detail::_Hash_node_base"* %257, %"struct.std::__detail::_Hash_node_base"** %13, align 8
  store i32 -319690446, i32* %23
  br label %259

; <label>:258:                                    ; preds = %24
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %8, align 8
  store i32 1103315648, i32* %23
  br label %259

; <label>:259:                                    ; preds = %258, %255, %248, %247, %244, %216, %200, %197, %196, %166, %151, %150, %142, %135, %133, %130, %96, %80, %75, %74, %59, %31, %27, %26
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNKSt8__detail15_Hashtable_baseIiSt4pairIKixENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_equalsERS2_mPNS_10_Hash_nodeIS3_Lb0EEE(%"struct.std::__detail::_Hashtable_base"*, i32* dereferenceable(4), i64, %"struct.std::__detail::_Hash_node"*) #0 comdat align 2 {
  %5 = alloca %"struct.std::__detail::_Hashtable_base"*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hashtable_base"* %0, %"struct.std::__detail::_Hashtable_base"** %5, align 8
  store i32* %1, i32** %6, align 8
  store i64 %2, i64* %7, align 8
  store %"struct.std::__detail::_Hash_node"* %3, %"struct.std::__detail::_Hash_node"** %8, align 8
  %9 = load %"struct.std::__detail::_Hashtable_base"*, %"struct.std::__detail::_Hashtable_base"** %5, align 8
  %10 = call dereferenceable(1) %"struct.std::equal_to"* @_ZNKSt8__detail15_Hashtable_baseIiSt4pairIKixENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE5_M_eqEv(%"struct.std::__detail::_Hashtable_base"* %9)
  %11 = bitcast %"struct.std::__detail::_Hashtable_base"* %9 to %"struct.std::__detail::_Hash_code_base"*
  %12 = call dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE10_M_extractEv(%"struct.std::__detail::_Hash_code_base"* %11)
  %13 = load i32*, i32** %6, align 8
  %14 = load i64, i64* %7, align 8
  %15 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %16 = call zeroext i1 @_ZNSt8__detail13_Equal_helperIiSt4pairIKixENS_10_Select1stESt8equal_toIiEmLb0EE9_S_equalsERKS6_RKS4_RS2_mPNS_10_Hash_nodeIS3_Lb0EEE(%"struct.std::equal_to"* dereferenceable(1) %10, %"struct.std::__detail::_Select1st"* dereferenceable(1) %12, i32* dereferenceable(4) %13, i64 %14, %"struct.std::__detail::_Hash_node"* %15)
  ret i1 %16
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNSt8__detail13_Equal_helperIiSt4pairIKixENS_10_Select1stESt8equal_toIiEmLb0EE9_S_equalsERKS6_RKS4_RS2_mPNS_10_Hash_nodeIS3_Lb0EEE(%"struct.std::equal_to"* dereferenceable(1), %"struct.std::__detail::_Select1st"* dereferenceable(1), i32* dereferenceable(4), i64, %"struct.std::__detail::_Hash_node"*) #0 comdat align 2 {
  %6 = alloca i1
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.569
  %10 = load i32, i32* @y.570
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 1395480744, i32* %18
  br label %19

; <label>:19:                                     ; preds = %5, %75
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1395480744, label %22
    i32 730169625, label %30
    i32 -225374070, label %59
    i32 1115906712, label %61
  ]

; <label>:21:                                     ; preds = %19
  br label %75

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %8
  %24 = load volatile i1, i1* %7
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 730169625, i32 1115906712
  store i32 %29, i32* %18
  br label %75

; <label>:30:                                     ; preds = %19
  %31 = alloca %"struct.std::equal_to"*, align 8
  %32 = alloca %"struct.std::__detail::_Select1st"*, align 8
  %33 = alloca i32*, align 8
  %34 = alloca i64, align 8
  %35 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::equal_to"* %0, %"struct.std::equal_to"** %31, align 8
  store %"struct.std::__detail::_Select1st"* %1, %"struct.std::__detail::_Select1st"** %32, align 8
  store i32* %2, i32** %33, align 8
  store i64 %3, i64* %34, align 8
  store %"struct.std::__detail::_Hash_node"* %4, %"struct.std::__detail::_Hash_node"** %35, align 8
  %36 = load %"struct.std::equal_to"*, %"struct.std::equal_to"** %31, align 8
  %37 = load i32*, i32** %33, align 8
  %38 = load %"struct.std::__detail::_Select1st"*, %"struct.std::__detail::_Select1st"** %32, align 8
  %39 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %35, align 8
  %40 = bitcast %"struct.std::__detail::_Hash_node"* %39 to %"struct.std::__detail::_Hash_node_value_base"*
  %41 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base"* %40) #3
  %42 = call dereferenceable(4) i32* @_ZNKSt8__detail10_Select1stclIRSt4pairIKixEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS6_(%"struct.std::__detail::_Select1st"* %38, %"struct.std::pair"* dereferenceable(16) %41)
  %43 = call zeroext i1 @_ZNKSt8equal_toIiEclERKiS2_(%"struct.std::equal_to"* %36, i32* dereferenceable(4) %37, i32* dereferenceable(4) %42)
  store i1 %43, i1* %6
  %44 = load i32, i32* @x.569
  %45 = load i32, i32* @y.570
  %46 = sub i32 %44, -740144512
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -740144512
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -225374070, i32 1115906712
  store i32 %58, i32* %18
  br label %75

; <label>:59:                                     ; preds = %19
  %60 = load volatile i1, i1* %6
  ret i1 %60

; <label>:61:                                     ; preds = %19
  %62 = alloca %"struct.std::equal_to"*, align 8
  %63 = alloca %"struct.std::__detail::_Select1st"*, align 8
  %64 = alloca i32*, align 8
  %65 = alloca i64, align 8
  %66 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::equal_to"* %0, %"struct.std::equal_to"** %62, align 8
  store %"struct.std::__detail::_Select1st"* %1, %"struct.std::__detail::_Select1st"** %63, align 8
  store i32* %2, i32** %64, align 8
  store i64 %3, i64* %65, align 8
  store %"struct.std::__detail::_Hash_node"* %4, %"struct.std::__detail::_Hash_node"** %66, align 8
  %67 = load %"struct.std::equal_to"*, %"struct.std::equal_to"** %62, align 8
  %68 = load i32*, i32** %64, align 8
  %69 = load %"struct.std::__detail::_Select1st"*, %"struct.std::__detail::_Select1st"** %63, align 8
  %70 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %66, align 8
  %71 = bitcast %"struct.std::__detail::_Hash_node"* %70 to %"struct.std::__detail::_Hash_node_value_base"*
  %72 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base"* %71) #3
  %73 = call dereferenceable(4) i32* @_ZNKSt8__detail10_Select1stclIRSt4pairIKixEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS6_(%"struct.std::__detail::_Select1st"* %69, %"struct.std::pair"* dereferenceable(16) %72)
  %74 = call zeroext i1 @_ZNKSt8equal_toIiEclERKiS2_(%"struct.std::equal_to"* %67, i32* dereferenceable(4) %68, i32* dereferenceable(4) %73)
  store i32 730169625, i32* %18
  br label %75

; <label>:75:                                     ; preds = %61, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(1) %"struct.std::equal_to"* @_ZNKSt8__detail15_Hashtable_baseIiSt4pairIKixENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE5_M_eqEv(%"struct.std::__detail::_Hashtable_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::equal_to"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.571
  %6 = load i32, i32* @y.572
  %7 = add i32 %5, -819511682
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -819511682
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -286245744, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -286245744, label %19
    i32 -336848799, label %39
    i32 1148756055, label %59
    i32 681921933, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -336848799, i32 681921933
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::__detail::_Hashtable_base"*, align 8
  store %"struct.std::__detail::_Hashtable_base"* %0, %"struct.std::__detail::_Hashtable_base"** %40, align 8
  %41 = load %"struct.std::__detail::_Hashtable_base"*, %"struct.std::__detail::_Hashtable_base"** %40, align 8
  %42 = bitcast %"struct.std::__detail::_Hashtable_base"* %41 to %"struct.std::__detail::_Hashtable_ebo_helper.7"*
  %43 = call dereferenceable(1) %"struct.std::equal_to"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toIiELb1EE7_S_cgetERKS3_(%"struct.std::__detail::_Hashtable_ebo_helper.7"* dereferenceable(1) %42)
  store %"struct.std::equal_to"* %43, %"struct.std::equal_to"** %2
  %44 = load i32, i32* @x.571
  %45 = load i32, i32* @y.572
  %46 = sub i32 %44, 1153279685
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1153279685
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1148756055, i32 681921933
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"struct.std::equal_to"*, %"struct.std::equal_to"** %2
  ret %"struct.std::equal_to"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::__detail::_Hashtable_base"*, align 8
  store %"struct.std::__detail::_Hashtable_base"* %0, %"struct.std::__detail::_Hashtable_base"** %62, align 8
  %63 = load %"struct.std::__detail::_Hashtable_base"*, %"struct.std::__detail::_Hashtable_base"** %62, align 8
  %64 = bitcast %"struct.std::__detail::_Hashtable_base"* %63 to %"struct.std::__detail::_Hashtable_ebo_helper.7"*
  %65 = call dereferenceable(1) %"struct.std::equal_to"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toIiELb1EE7_S_cgetERKS3_(%"struct.std::__detail::_Hashtable_ebo_helper.7"* dereferenceable(1) %64)
  store i32 -336848799, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt8equal_toIiEclERKiS2_(%"struct.std::equal_to"*, i32* dereferenceable(4), i32* dereferenceable(4)) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.573
  %8 = load i32, i32* @y.574
  %9 = sub i32 %7, 349660123
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 349660123
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 305087063, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %77
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 305087063, label %21
    i32 1769523822, label %41
    i32 88085021, label %65
    i32 -2104460772, label %67
  ]

; <label>:20:                                     ; preds = %18
  br label %77

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1769523822, i32 -2104460772
  store i32 %40, i32* %17
  br label %77

; <label>:41:                                     ; preds = %18
  %42 = alloca %"struct.std::equal_to"*, align 8
  %43 = alloca i32*, align 8
  %44 = alloca i32*, align 8
  store %"struct.std::equal_to"* %0, %"struct.std::equal_to"** %42, align 8
  store i32* %1, i32** %43, align 8
  store i32* %2, i32** %44, align 8
  %45 = load %"struct.std::equal_to"*, %"struct.std::equal_to"** %42, align 8
  %46 = load i32*, i32** %43, align 8
  %47 = load i32, i32* %46, align 4
  %48 = load i32*, i32** %44, align 8
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %47, %49
  store i1 %50, i1* %4
  %51 = load i32, i32* @x.573
  %52 = load i32, i32* @y.574
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 88085021, i32 -2104460772
  store i32 %64, i32* %17
  br label %77

; <label>:65:                                     ; preds = %18
  %66 = load volatile i1, i1* %4
  ret i1 %66

; <label>:67:                                     ; preds = %18
  %68 = alloca %"struct.std::equal_to"*, align 8
  %69 = alloca i32*, align 8
  %70 = alloca i32*, align 8
  store %"struct.std::equal_to"* %0, %"struct.std::equal_to"** %68, align 8
  store i32* %1, i32** %69, align 8
  store i32* %2, i32** %70, align 8
  %71 = load %"struct.std::equal_to"*, %"struct.std::equal_to"** %68, align 8
  %72 = load i32*, i32** %69, align 8
  %73 = load i32, i32* %72, align 4
  %74 = load i32*, i32** %70, align 8
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %73, %75
  store i32 1769523822, i32* %17
  br label %77

; <label>:77:                                     ; preds = %67, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNKSt8__detail10_Select1stclIRSt4pairIKixEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS6_(%"struct.std::__detail::_Select1st"*, %"struct.std::pair"* dereferenceable(16)) #4 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.575
  %7 = load i32, i32* @y.576
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1024596850, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1024596850, label %19
    i32 194108398, label %27
    i32 -1714702070, label %61
    i32 -1991173486, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 194108398, i32 -1991173486
  store i32 %26, i32* %15
  br label %70

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::__detail::_Select1st"*, align 8
  %29 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::__detail::_Select1st"* %0, %"struct.std::__detail::_Select1st"** %28, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %29, align 8
  %30 = load %"struct.std::__detail::_Select1st"*, %"struct.std::__detail::_Select1st"** %28, align 8
  %31 = load %"struct.std::pair"*, %"struct.std::pair"** %29, align 8
  %32 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRSt4pairIKixEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::pair"* dereferenceable(16) %31) #3
  %33 = call dereferenceable(4) i32* @_ZSt3getILm0EKixERNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERS5_(%"struct.std::pair"* dereferenceable(16) %32) #3
  store i32* %33, i32** %3
  %34 = load i32, i32* @x.575
  %35 = load i32, i32* @y.576
  %36 = add i32 %34, -309904447
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, -309904447
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -1714702070, i32 -1991173486
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  %62 = load volatile i32*, i32** %3
  ret i32* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"struct.std::__detail::_Select1st"*, align 8
  %65 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::__detail::_Select1st"* %0, %"struct.std::__detail::_Select1st"** %64, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %65, align 8
  %66 = load %"struct.std::__detail::_Select1st"*, %"struct.std::__detail::_Select1st"** %64, align 8
  %67 = load %"struct.std::pair"*, %"struct.std::pair"** %65, align 8
  %68 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRSt4pairIKixEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::pair"* dereferenceable(16) %67) #3
  %69 = call dereferenceable(4) i32* @_ZSt3getILm0EKixERNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERS5_(%"struct.std::pair"* dereferenceable(16) %68) #3
  store i32 194108398, i32* %15
  br label %70

; <label>:70:                                     ; preds = %63, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3getILm0EKixERNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERS5_(%"struct.std::pair"* dereferenceable(16)) #4 comdat {
  %2 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %2, align 8
  %3 = load %"struct.std::pair"*, %"struct.std::pair"** %2, align 8
  %4 = call dereferenceable(4) i32* @_ZNSt10__pair_getILm0EE5__getIKixEERT_RSt4pairIS3_T0_E(%"struct.std::pair"* dereferenceable(16) %3) #3
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRSt4pairIKixEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::pair"* dereferenceable(16)) #4 comdat {
  %2 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %2, align 8
  %3 = load %"struct.std::pair"*, %"struct.std::pair"** %2, align 8
  ret %"struct.std::pair"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt10__pair_getILm0EE5__getIKixEERT_RSt4pairIS3_T0_E(%"struct.std::pair"* dereferenceable(16)) #4 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.581
  %6 = load i32, i32* @y.582
  %7 = sub i32 %5, -1720350027
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1720350027
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 516627057, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 516627057, label %19
    i32 -945149155, label %27
    i32 -1689979588, label %58
    i32 -57955866, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -945149155, i32 -57955866
  store i32 %26, i32* %15
  br label %64

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %28, align 8
  %29 = load %"struct.std::pair"*, %"struct.std::pair"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %29, i32 0, i32 0
  store i32* %30, i32** %2
  %31 = load i32, i32* @x.581
  %32 = load i32, i32* @y.582
  %33 = add i32 %31, 963284867
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 963284867
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -1689979588, i32 -57955866
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  %59 = load volatile i32*, i32** %2
  ret i32* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %61, align 8
  %62 = load %"struct.std::pair"*, %"struct.std::pair"** %61, align 8
  %63 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %62, i32 0, i32 0
  store i32 -945149155, i32* %15
  br label %64

; <label>:64:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::equal_to"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toIiELb1EE7_S_cgetERKS3_(%"struct.std::__detail::_Hashtable_ebo_helper.7"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.7"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.7"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.7"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_ebo_helper.7"*, %"struct.std::__detail::_Hashtable_ebo_helper.7"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.7"* %3 to %"struct.std::equal_to"*
  ret %"struct.std::equal_to"* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIKixEEE9constructIS2_JRKSt21piecewise_construct_tSt5tupleIJOiEES9_IJEEEEEvRS3_PT_DpOT0_(%"class.std::allocator.12"* dereferenceable(1), %"struct.std::pair"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.21"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.585
  %9 = load i32, i32* @y.586
  %10 = add i32 %8, 1115377837
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 1115377837
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 423011413, i32* %18
  br label %19

; <label>:19:                                     ; preds = %5, %100
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 423011413, label %22
    i32 -1488725229, label %42
    i32 389423736, label %84
    i32 445744558, label %85
  ]

; <label>:21:                                     ; preds = %19
  br label %100

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -1488725229, i32 445744558
  store i32 %41, i32* %18
  br label %100

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.std::allocator.12"*, align 8
  %44 = alloca %"struct.std::pair"*, align 8
  %45 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %46 = alloca %"class.std::tuple"*, align 8
  %47 = alloca %"class.std::tuple.21"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %43, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %44, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %45, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %46, align 8
  store %"class.std::tuple.21"* %4, %"class.std::tuple.21"** %47, align 8
  %48 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %43, align 8
  %49 = bitcast %"class.std::allocator.12"* %48 to %"class.__gnu_cxx::new_allocator.13"*
  %50 = load %"struct.std::pair"*, %"struct.std::pair"** %44, align 8
  %51 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %45, align 8
  %52 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %51) #3
  %53 = load %"class.std::tuple"*, %"class.std::tuple"** %46, align 8
  %54 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJOiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::tuple"* dereferenceable(8) %53) #3
  %55 = load %"class.std::tuple.21"*, %"class.std::tuple.21"** %47, align 8
  %56 = call dereferenceable(1) %"class.std::tuple.21"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.21"* dereferenceable(1) %55) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIKixEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJOiEES9_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.13"* %49, %"struct.std::pair"* %50, %"struct.std::piecewise_construct_t"* dereferenceable(1) %52, %"class.std::tuple"* dereferenceable(8) %54, %"class.std::tuple.21"* dereferenceable(1) %56)
  %57 = load i32, i32* @x.585
  %58 = load i32, i32* @y.586
  %59 = add i32 %57, 1007607578
  %60 = sub i32 %59, 1
  %61 = sub i32 %60, 1007607578
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = xor i1 %65, true
  %68 = xor i1 %66, true
  %69 = xor i1 false, true
  %70 = and i1 %67, false
  %71 = and i1 %65, %69
  %72 = and i1 %68, false
  %73 = and i1 %66, %69
  %74 = or i1 %70, %71
  %75 = or i1 %72, %73
  %76 = xor i1 %74, %75
  %77 = or i1 %67, %68
  %78 = xor i1 %77, true
  %79 = or i1 false, %69
  %80 = and i1 %78, %79
  %81 = or i1 %76, %80
  %82 = or i1 %65, %66
  %83 = select i1 %81, i32 389423736, i32 445744558
  store i32 %83, i32* %18
  br label %100

; <label>:84:                                     ; preds = %19
  ret void

; <label>:85:                                     ; preds = %19
  %86 = alloca %"class.std::allocator.12"*, align 8
  %87 = alloca %"struct.std::pair"*, align 8
  %88 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %89 = alloca %"class.std::tuple"*, align 8
  %90 = alloca %"class.std::tuple.21"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %86, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %87, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %88, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %89, align 8
  store %"class.std::tuple.21"* %4, %"class.std::tuple.21"** %90, align 8
  %91 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %86, align 8
  %92 = bitcast %"class.std::allocator.12"* %91 to %"class.__gnu_cxx::new_allocator.13"*
  %93 = load %"struct.std::pair"*, %"struct.std::pair"** %87, align 8
  %94 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %88, align 8
  %95 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %94) #3
  %96 = load %"class.std::tuple"*, %"class.std::tuple"** %89, align 8
  %97 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJOiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::tuple"* dereferenceable(8) %96) #3
  %98 = load %"class.std::tuple.21"*, %"class.std::tuple.21"** %90, align 8
  %99 = call dereferenceable(1) %"class.std::tuple.21"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.21"* dereferenceable(1) %98) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIKixEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJOiEES9_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.13"* %92, %"struct.std::pair"* %93, %"struct.std::piecewise_construct_t"* dereferenceable(1) %95, %"class.std::tuple"* dereferenceable(8) %97, %"class.std::tuple.21"* dereferenceable(1) %99)
  store i32 -1488725229, i32* %18
  br label %100

; <label>:100:                                    ; preds = %85, %42, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"struct.std::piecewise_construct_t"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.587
  %6 = load i32, i32* @y.588
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1597004990, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %48
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1597004990, label %18
    i32 1961610164, label %26
    i32 942900156, label %43
    i32 735257764, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %48

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1961610164, i32 735257764
  store i32 %25, i32* %14
  br label %48

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::piecewise_construct_t"*, align 8
  store %"struct.std::piecewise_construct_t"* %0, %"struct.std::piecewise_construct_t"** %27, align 8
  %28 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %27, align 8
  store %"struct.std::piecewise_construct_t"* %28, %"struct.std::piecewise_construct_t"** %2
  %29 = load i32, i32* @x.587
  %30 = load i32, i32* @y.588
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 942900156, i32 735257764
  store i32 %42, i32* %14
  br label %48

; <label>:43:                                     ; preds = %15
  %44 = load volatile %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %2
  ret %"struct.std::piecewise_construct_t"* %44

; <label>:45:                                     ; preds = %15
  %46 = alloca %"struct.std::piecewise_construct_t"*, align 8
  store %"struct.std::piecewise_construct_t"* %0, %"struct.std::piecewise_construct_t"** %46, align 8
  %47 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %46, align 8
  store i32 1961610164, i32* %14
  br label %48

; <label>:48:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJOiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::tuple"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %2, align 8
  %3 = load %"class.std::tuple"*, %"class.std::tuple"** %2, align 8
  ret %"class.std::tuple"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::tuple.21"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.21"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"class.std::tuple.21"*, align 8
  store %"class.std::tuple.21"* %0, %"class.std::tuple.21"** %2, align 8
  %3 = load %"class.std::tuple.21"*, %"class.std::tuple.21"** %2, align 8
  ret %"class.std::tuple.21"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIKixEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJOiEES9_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.13"*, %"struct.std::pair"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.21"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  %7 = alloca %"struct.std::pair"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple"*, align 8
  %10 = alloca %"class.std::tuple.21"*, align 8
  %11 = alloca %"struct.std::piecewise_construct_t", align 1
  %12 = alloca %"class.std::tuple", align 8
  %13 = alloca %"class.std::tuple.21", align 1
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %6, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %9, align 8
  store %"class.std::tuple.21"* %4, %"class.std::tuple.21"** %10, align 8
  %14 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %6, align 8
  %15 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %16 = bitcast %"struct.std::pair"* %15 to i8*
  %17 = bitcast i8* %16 to %"struct.std::pair"*
  %18 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %19 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %18) #3
  %20 = load %"class.std::tuple"*, %"class.std::tuple"** %9, align 8
  %21 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJOiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::tuple"* dereferenceable(8) %20) #3
  call void @_ZNSt5tupleIJOiEEC2EOS1_(%"class.std::tuple"* %12, %"class.std::tuple"* dereferenceable(8) %21) #3
  %22 = load %"class.std::tuple.21"*, %"class.std::tuple.21"** %10, align 8
  %23 = call dereferenceable(1) %"class.std::tuple.21"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.21"* dereferenceable(1) %22) #3
  %24 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %12, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %25, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  call void @_ZNSt4pairIKixEC2IJOiEJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE(%"struct.std::pair"* %17, i32* %27)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5tupleIJOiEEC2EOS1_(%"class.std::tuple"*, %"class.std::tuple"* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::tuple"*, align 8
  %4 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %3, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %4, align 8
  %5 = load %"class.std::tuple"*, %"class.std::tuple"** %3, align 8
  %6 = bitcast %"class.std::tuple"* %5 to %"struct.std::_Tuple_impl"*
  %7 = load %"class.std::tuple"*, %"class.std::tuple"** %4, align 8
  %8 = bitcast %"class.std::tuple"* %7 to %"struct.std::_Tuple_impl"*
  call void @_ZNSt11_Tuple_implILm0EJOiEEC2EOS1_(%"struct.std::_Tuple_impl"* %6, %"struct.std::_Tuple_impl"* dereferenceable(8) %8) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt4pairIKixEC2IJOiEJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE(%"struct.std::pair"*, i32*) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.597
  %6 = load i32, i32* @y.598
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1510430237, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %76
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1510430237, label %18
    i32 -1412539320, label %26
    i32 -1386737762, label %64
    i32 696300914, label %65
  ]

; <label>:17:                                     ; preds = %15
  br label %76

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1412539320, i32 696300914
  store i32 %25, i32* %14
  br label %76

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::piecewise_construct_t", align 1
  %28 = alloca %"class.std::tuple", align 8
  %29 = alloca %"class.std::tuple.21", align 1
  %30 = alloca %"struct.std::pair"*, align 8
  %31 = alloca %"struct.std::_Index_tuple", align 1
  %32 = alloca %"struct.std::_Index_tuple.22", align 1
  %33 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %28, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %34, i32 0, i32 0
  store i32* %1, i32** %35, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %30, align 8
  %36 = load %"struct.std::pair"*, %"struct.std::pair"** %30, align 8
  call void @_ZNSt4pairIKixEC2IJOiEJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE(%"struct.std::pair"* %36, %"class.std::tuple"* dereferenceable(8) %28, %"class.std::tuple.21"* dereferenceable(1) %29)
  %37 = load i32, i32* @x.597
  %38 = load i32, i32* @y.598
  %39 = add i32 %37, -1539775031
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, -1539775031
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -1386737762, i32 696300914
  store i32 %63, i32* %14
  br label %76

; <label>:64:                                     ; preds = %15
  ret void

; <label>:65:                                     ; preds = %15
  %66 = alloca %"struct.std::piecewise_construct_t", align 1
  %67 = alloca %"class.std::tuple", align 8
  %68 = alloca %"class.std::tuple.21", align 1
  %69 = alloca %"struct.std::pair"*, align 8
  %70 = alloca %"struct.std::_Index_tuple", align 1
  %71 = alloca %"struct.std::_Index_tuple.22", align 1
  %72 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %67, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %72, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %73, i32 0, i32 0
  store i32* %1, i32** %74, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %69, align 8
  %75 = load %"struct.std::pair"*, %"struct.std::pair"** %69, align 8
  call void @_ZNSt4pairIKixEC2IJOiEJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE(%"struct.std::pair"* %75, %"class.std::tuple"* dereferenceable(8) %67, %"class.std::tuple.21"* dereferenceable(1) %68)
  store i32 -1412539320, i32* %14
  br label %76

; <label>:76:                                     ; preds = %65, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJOiEEC2EOS1_(%"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"* dereferenceable(8)) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Tuple_impl"*, align 8
  %4 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %3, align 8
  store %"struct.std::_Tuple_impl"* %1, %"struct.std::_Tuple_impl"** %4, align 8
  %5 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Tuple_impl"* %5 to %"struct.std::_Head_base"*
  %7 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %4, align 8
  %8 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm0EJOiEE7_M_headERS1_(%"struct.std::_Tuple_impl"* dereferenceable(8) %7) #3
  %9 = call dereferenceable(4) i32* @_ZSt7forwardIOiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %8) #3
  invoke void @_ZNSt10_Head_baseILm0EOiLb0EEC2IiEEOT_(%"struct.std::_Head_base"* %6, i32* dereferenceable(4) %9)
          to label %10 unwind label %65

; <label>:10:                                     ; preds = %2
  %11 = load i32, i32* @x.599
  %12 = load i32, i32* @y.600
  %13 = add i32 %11, -1247387740
  %14 = sub i32 %13, 1
  %15 = sub i32 %14, -1247387740
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %12, 10
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  br i1 %35, label %37, label %68

; <label>:37:                                     ; preds = %10, %68
  %38 = load i32, i32* @x.599
  %39 = load i32, i32* @y.600
  %40 = sub i32 %38, 829284446
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 829284446
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  br i1 %62, label %64, label %68

; <label>:64:                                     ; preds = %37
  ret void

; <label>:65:                                     ; preds = %2
  %66 = landingpad { i8*, i32 }
          catch i8* null
  %67 = extractvalue { i8*, i32 } %66, 0
  call void @__clang_call_terminate(i8* %67) #11
  unreachable

; <label>:68:                                     ; preds = %37, %10
  br label %37
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIOiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4)) #4 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt11_Tuple_implILm0EJOiEE7_M_headERS1_(%"struct.std::_Tuple_impl"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl"* %3 to %"struct.std::_Head_base"*
  %5 = call dereferenceable(4) i32* @_ZNSt10_Head_baseILm0EOiLb0EE7_M_headERS1_(%"struct.std::_Head_base"* dereferenceable(8) %4) #3
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm0EOiLb0EEC2IiEEOT_(%"struct.std::_Head_base"*, i32* dereferenceable(4)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Head_base"*, align 8
  %4 = alloca i32*, align 8
  store %"struct.std::_Head_base"* %0, %"struct.std::_Head_base"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %5, i32 0, i32 0
  %7 = load i32*, i32** %4, align 8
  %8 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %7) #3
  store i32* %8, i32** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt10_Head_baseILm0EOiLb0EE7_M_headERS1_(%"struct.std::_Head_base"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Head_base"*, align 8
  store %"struct.std::_Head_base"* %0, %"struct.std::_Head_base"** %2, align 8
  %3 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4)) #4 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIKixEC2IJOiEJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE(%"struct.std::pair"*, %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.21"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::_Index_tuple", align 1
  %5 = alloca %"struct.std::_Index_tuple.22", align 1
  %6 = alloca %"struct.std::pair"*, align 8
  %7 = alloca %"class.std::tuple"*, align 8
  %8 = alloca %"class.std::tuple.21"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %6, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %7, align 8
  store %"class.std::tuple.21"* %2, %"class.std::tuple.21"** %8, align 8
  %9 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %10 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %9, i32 0, i32 0
  %11 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  %12 = call dereferenceable(4) i32* @_ZSt3getILm0EJOiEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS5_(%"class.std::tuple"* dereferenceable(8) %11) #3
  %13 = call dereferenceable(4) i32* @_ZSt7forwardIOiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %12) #3
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %10, align 8
  %15 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %9, i32 0, i32 1
  store i64 0, i64* %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3getILm0EJOiEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS5_(%"class.std::tuple"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %2, align 8
  %3 = load %"class.std::tuple"*, %"class.std::tuple"** %2, align 8
  %4 = bitcast %"class.std::tuple"* %3 to %"struct.std::_Tuple_impl"*
  %5 = call dereferenceable(4) i32* @_ZSt12__get_helperILm0EOiJEERT0_RSt11_Tuple_implIXT_EJS1_DpT1_EE(%"struct.std::_Tuple_impl"* dereferenceable(8) %4) #3
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt12__get_helperILm0EOiJEERT0_RSt11_Tuple_implIXT_EJS1_DpT1_EE(%"struct.std::_Tuple_impl"* dereferenceable(8)) #4 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.615
  %6 = load i32, i32* @y.616
  %7 = add i32 %5, -798946832
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -798946832
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1134760871, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1134760871, label %19
    i32 -1583056887, label %39
    i32 -1560524962, label %57
    i32 -981787009, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1583056887, i32 -981787009
  store i32 %38, i32* %15
  br label %63

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %40, align 8
  %41 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %40, align 8
  %42 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm0EJOiEE7_M_headERS1_(%"struct.std::_Tuple_impl"* dereferenceable(8) %41) #3
  store i32* %42, i32** %2
  %43 = load i32, i32* @x.615
  %44 = load i32, i32* @y.616
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1560524962, i32 -981787009
  store i32 %56, i32* %15
  br label %63

; <label>:57:                                     ; preds = %16
  %58 = load volatile i32*, i32** %2
  ret i32* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %60, align 8
  %61 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %60, align 8
  %62 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm0EJOiEE7_M_headERS1_(%"struct.std::_Tuple_impl"* dereferenceable(8) %61) #3
  store i32 -1583056887, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5tupleIJOiEEC2IJiEvEEDpOT_(%"class.std::tuple"*, i32* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::tuple"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::tuple"*, %"class.std::tuple"** %3, align 8
  %6 = bitcast %"class.std::tuple"* %5 to %"struct.std::_Tuple_impl"*
  %7 = load i32*, i32** %4, align 8
  %8 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %7) #3
  call void @_ZNSt11_Tuple_implILm0EJOiEEC2IiEEOT_(%"struct.std::_Tuple_impl"* %6, i32* dereferenceable(4) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJOiEEC2IiEEOT_(%"struct.std::_Tuple_impl"*, i32* dereferenceable(4)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Tuple_impl"*, align 8
  %4 = alloca i32*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Tuple_impl"* %5 to %"struct.std::_Head_base"*
  %7 = load i32*, i32** %4, align 8
  %8 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %7) #3
  call void @_ZNSt10_Head_baseILm0EOiLb0EEC2IiEEOT_(%"struct.std::_Head_base"* %6, i32* dereferenceable(4) %8)
  ret void
}

declare { i8, i64 } @_ZNKSt8__detail20_Prime_rehash_policy14_M_need_rehashEmmm(%"struct.std::__detail::_Prime_rehash_policy"*, i64, i64, i64) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_rehashEmRKm(%"class.std::_Hashtable"*, i64, i64* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Hashtable"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"struct.std::integral_constant", align 1
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %10 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4, align 8
  %11 = load i64, i64* %5, align 8
  invoke void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE(%"class.std::_Hashtable"* %10, i64 %11)
          to label %12 unwind label %13

; <label>:12:                                     ; preds = %3
  br label %70

; <label>:13:                                     ; preds = %3
  %14 = landingpad { i8*, i32 }
          catch i8* null
  %15 = extractvalue { i8*, i32 } %14, 0
  store i8* %15, i8** %8, align 8
  %16 = extractvalue { i8*, i32 } %14, 1
  store i32 %16, i32* %9, align 4
  br label %17

; <label>:17:                                     ; preds = %13
  %18 = load i8*, i8** %8, align 8
  %19 = call i8* @__cxa_begin_catch(i8* %18) #3
  %20 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %10, i32 0, i32 4
  %21 = load i64*, i64** %6, align 8
  %22 = load i64, i64* %21, align 8
  invoke void @_ZNSt8__detail20_Prime_rehash_policy8_M_resetEm(%"struct.std::__detail::_Prime_rehash_policy"* %20, i64 %22)
          to label %23 unwind label %65

; <label>:23:                                     ; preds = %17
  %24 = load i32, i32* @x.621
  %25 = load i32, i32* @y.622
  %26 = sub i32 0, 1
  %27 = add i32 %24, %26
  %28 = sub i32 %24, 1
  %29 = mul i32 %24, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %25, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  br i1 %35, label %37, label %80

; <label>:37:                                     ; preds = %23, %80
  %38 = load i32, i32* @x.621
  %39 = load i32, i32* @y.622
  %40 = add i32 %38, 479498083
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 479498083
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  br i1 %62, label %64, label %80

; <label>:64:                                     ; preds = %37
  invoke void @__cxa_rethrow() #12
          to label %79 unwind label %65

; <label>:65:                                     ; preds = %64, %17
  %66 = landingpad { i8*, i32 }
          cleanup
  %67 = extractvalue { i8*, i32 } %66, 0
  store i8* %67, i8** %8, align 8
  %68 = extractvalue { i8*, i32 } %66, 1
  store i32 %68, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %69 unwind label %76

; <label>:69:                                     ; preds = %65
  br label %71

; <label>:70:                                     ; preds = %12
  ret void

; <label>:71:                                     ; preds = %69
  %72 = load i8*, i8** %8, align 8
  %73 = load i32, i32* %9, align 4
  %74 = insertvalue { i8*, i32 } undef, i8* %72, 0
  %75 = insertvalue { i8*, i32 } %74, i32 %73, 1
  resume { i8*, i32 } %75

; <label>:76:                                     ; preds = %65
  %77 = landingpad { i8*, i32 }
          catch i8* null
  %78 = extractvalue { i8*, i32 } %77, 0
  call void @__clang_call_terminate(i8* %78) #11
  unreachable

; <label>:79:                                     ; preds = %64
  unreachable

; <label>:80:                                     ; preds = %37, %23
  br label %37
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE10_M_extractEv(%"struct.std::__detail::_Hash_code_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hash_code_base"* %3 to %"struct.std::__detail::_Hashtable_ebo_helper"*
  %5 = call dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_10_Select1stELb1EE6_S_getERS2_(%"struct.std::__detail::_Hashtable_ebo_helper"* dereferenceable(1) %4)
  ret %"struct.std::__detail::_Select1st"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE13_M_store_codeEPNS_10_Hash_nodeIS3_Lb0EEEm(%"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_node"*, i64) #4 comdat align 2 {
  %4 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %4, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE22_M_insert_bucket_beginEmPNS4_10_Hash_nodeIS2_Lb0EEE(%"class.std::_Hashtable"*, i64, %"struct.std::__detail::_Hash_node"*) #4 comdat align 2 {
  %4 = alloca %"struct.std::__detail::_Hash_node_base"*
  %5 = alloca %"class.std::_Hashtable"*
  %6 = alloca %"class.std::_Hashtable"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %6, align 8
  store i64 %1, i64* %7, align 8
  store %"struct.std::__detail::_Hash_node"* %2, %"struct.std::__detail::_Hash_node"** %8, align 8
  %9 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %6, align 8
  store %"class.std::_Hashtable"* %9, %"class.std::_Hashtable"** %5
  %10 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %11 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %10, i32 0, i32 0
  %12 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %11, align 8
  %13 = load i64, i64* %7, align 8
  %14 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %12, i64 %13
  %15 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %14, align 8
  store %"struct.std::__detail::_Hash_node_base"* %15, %"struct.std::__detail::_Hash_node_base"** %4
  %16 = alloca i32
  store i32 -712742323, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %253
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -712742323, label %20
    i32 713931171, label %24
    i32 -1437652863, label %51
    i32 -914513076, label %87
    i32 -632794964, label %88
    i32 1945272751, label %107
    i32 -422184196, label %134
    i32 1194940759, label %159
    i32 1566114715, label %160
    i32 -2055613971, label %188
    i32 1337601062, label %211
    i32 1259112816, label %212
    i32 1422053807, label %213
    i32 744096487, label %234
    i32 -1853401154, label %245
  ]

; <label>:19:                                     ; preds = %17
  br label %253

; <label>:20:                                     ; preds = %17
  %21 = load volatile %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %4
  %22 = icmp ne %"struct.std::__detail::_Hash_node_base"* %21, null
  %23 = select i1 %22, i32 713931171, i32 -632794964
  store i32 %23, i32* %16
  br label %253

; <label>:24:                                     ; preds = %17
  %25 = load i32, i32* @x.627
  %26 = load i32, i32* @y.628
  %27 = sub i32 0, 1
  %28 = add i32 %25, %27
  %29 = sub i32 %25, 1
  %30 = mul i32 %25, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %26, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 true, true
  %37 = and i1 %34, true
  %38 = and i1 %32, %36
  %39 = and i1 %35, true
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 true, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  %50 = select i1 %48, i32 -1437652863, i32 1422053807
  store i32 %50, i32* %16
  br label %253

; <label>:51:                                     ; preds = %17
  %52 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %53 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %52, i32 0, i32 0
  %54 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %54, i64 %55
  %57 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %56, align 8
  %58 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %57, i32 0, i32 0
  %59 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %58, align 8
  %60 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %61 = bitcast %"struct.std::__detail::_Hash_node"* %60 to %"struct.std::__detail::_Hash_node_base"*
  %62 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %61, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %59, %"struct.std::__detail::_Hash_node_base"** %62, align 8
  %63 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %64 = bitcast %"struct.std::__detail::_Hash_node"* %63 to %"struct.std::__detail::_Hash_node_base"*
  %65 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %66 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %65, i32 0, i32 0
  %67 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %66, align 8
  %68 = load i64, i64* %7, align 8
  %69 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %67, i64 %68
  %70 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %69, align 8
  %71 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %70, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %64, %"struct.std::__detail::_Hash_node_base"** %71, align 8
  %72 = load i32, i32* @x.627
  %73 = load i32, i32* @y.628
  %74 = add i32 %72, -1780021938
  %75 = sub i32 %74, 1
  %76 = sub i32 %75, -1780021938
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  %86 = select i1 %84, i32 -914513076, i32 1422053807
  store i32 %86, i32* %16
  br label %253

; <label>:87:                                     ; preds = %17
  store i32 1259112816, i32* %16
  br label %253

; <label>:88:                                     ; preds = %17
  %89 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %90 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %89, i32 0, i32 2
  %91 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %90, i32 0, i32 0
  %92 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %91, align 8
  %93 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %94 = bitcast %"struct.std::__detail::_Hash_node"* %93 to %"struct.std::__detail::_Hash_node_base"*
  %95 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %94, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %92, %"struct.std::__detail::_Hash_node_base"** %95, align 8
  %96 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %97 = bitcast %"struct.std::__detail::_Hash_node"* %96 to %"struct.std::__detail::_Hash_node_base"*
  %98 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %99 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %98, i32 0, i32 2
  %100 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %99, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %97, %"struct.std::__detail::_Hash_node_base"** %100, align 8
  %101 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %102 = bitcast %"struct.std::__detail::_Hash_node"* %101 to %"struct.std::__detail::_Hash_node_base"*
  %103 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %102, i32 0, i32 0
  %104 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %103, align 8
  %105 = icmp ne %"struct.std::__detail::_Hash_node_base"* %104, null
  %106 = select i1 %105, i32 1945272751, i32 1566114715
  store i32 %106, i32* %16
  br label %253

; <label>:107:                                    ; preds = %17
  %108 = load i32, i32* @x.627
  %109 = load i32, i32* @y.628
  %110 = sub i32 0, 1
  %111 = add i32 %108, %110
  %112 = sub i32 %108, 1
  %113 = mul i32 %108, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %109, 10
  %117 = xor i1 %115, true
  %118 = xor i1 %116, true
  %119 = xor i1 true, true
  %120 = and i1 %117, true
  %121 = and i1 %115, %119
  %122 = and i1 %118, true
  %123 = and i1 %116, %119
  %124 = or i1 %120, %121
  %125 = or i1 %122, %123
  %126 = xor i1 %124, %125
  %127 = or i1 %117, %118
  %128 = xor i1 %127, true
  %129 = or i1 true, %119
  %130 = and i1 %128, %129
  %131 = or i1 %126, %130
  %132 = or i1 %115, %116
  %133 = select i1 %131, i32 -422184196, i32 744096487
  store i32 %133, i32* %16
  br label %253

; <label>:134:                                    ; preds = %17
  %135 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %136 = bitcast %"struct.std::__detail::_Hash_node"* %135 to %"struct.std::__detail::_Hash_node_base"*
  %137 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %138 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %137, i32 0, i32 0
  %139 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %138, align 8
  %140 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %141 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %140) #3
  %142 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %143 = call i64 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexEPNS4_10_Hash_nodeIS2_Lb0EEE(%"class.std::_Hashtable"* %142, %"struct.std::__detail::_Hash_node"* %141) #3
  %144 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %139, i64 %143
  store %"struct.std::__detail::_Hash_node_base"* %136, %"struct.std::__detail::_Hash_node_base"** %144, align 8
  %145 = load i32, i32* @x.627
  %146 = load i32, i32* @y.628
  %147 = sub i32 0, 1
  %148 = add i32 %145, %147
  %149 = sub i32 %145, 1
  %150 = mul i32 %145, %148
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %146, 10
  %154 = and i1 %152, %153
  %155 = xor i1 %152, %153
  %156 = or i1 %154, %155
  %157 = or i1 %152, %153
  %158 = select i1 %156, i32 1194940759, i32 744096487
  store i32 %158, i32* %16
  br label %253

; <label>:159:                                    ; preds = %17
  store i32 1566114715, i32* %16
  br label %253

; <label>:160:                                    ; preds = %17
  %161 = load i32, i32* @x.627
  %162 = load i32, i32* @y.628
  %163 = add i32 %161, -1481348306
  %164 = sub i32 %163, 1
  %165 = sub i32 %164, -1481348306
  %166 = sub i32 %161, 1
  %167 = mul i32 %161, %165
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %162, 10
  %171 = xor i1 %169, true
  %172 = xor i1 %170, true
  %173 = xor i1 false, true
  %174 = and i1 %171, false
  %175 = and i1 %169, %173
  %176 = and i1 %172, false
  %177 = and i1 %170, %173
  %178 = or i1 %174, %175
  %179 = or i1 %176, %177
  %180 = xor i1 %178, %179
  %181 = or i1 %171, %172
  %182 = xor i1 %181, true
  %183 = or i1 false, %173
  %184 = and i1 %182, %183
  %185 = or i1 %180, %184
  %186 = or i1 %169, %170
  %187 = select i1 %185, i32 -2055613971, i32 -1853401154
  store i32 %187, i32* %16
  br label %253

; <label>:188:                                    ; preds = %17
  %189 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %190 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %189, i32 0, i32 2
  %191 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %192 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %191, i32 0, i32 0
  %193 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %192, align 8
  %194 = load i64, i64* %7, align 8
  %195 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %193, i64 %194
  store %"struct.std::__detail::_Hash_node_base"* %190, %"struct.std::__detail::_Hash_node_base"** %195, align 8
  %196 = load i32, i32* @x.627
  %197 = load i32, i32* @y.628
  %198 = sub i32 %196, 1100254524
  %199 = sub i32 %198, 1
  %200 = add i32 %199, 1100254524
  %201 = sub i32 %196, 1
  %202 = mul i32 %196, %200
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %197, 10
  %206 = and i1 %204, %205
  %207 = xor i1 %204, %205
  %208 = or i1 %206, %207
  %209 = or i1 %204, %205
  %210 = select i1 %208, i32 1337601062, i32 -1853401154
  store i32 %210, i32* %16
  br label %253

; <label>:211:                                    ; preds = %17
  store i32 1259112816, i32* %16
  br label %253

; <label>:212:                                    ; preds = %17
  ret void

; <label>:213:                                    ; preds = %17
  %214 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %215 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %214, i32 0, i32 0
  %216 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %215, align 8
  %217 = load i64, i64* %7, align 8
  %218 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %216, i64 %217
  %219 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %218, align 8
  %220 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %219, i32 0, i32 0
  %221 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %220, align 8
  %222 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %223 = bitcast %"struct.std::__detail::_Hash_node"* %222 to %"struct.std::__detail::_Hash_node_base"*
  %224 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %223, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %221, %"struct.std::__detail::_Hash_node_base"** %224, align 8
  %225 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %226 = bitcast %"struct.std::__detail::_Hash_node"* %225 to %"struct.std::__detail::_Hash_node_base"*
  %227 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %228 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %227, i32 0, i32 0
  %229 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %228, align 8
  %230 = load i64, i64* %7, align 8
  %231 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %229, i64 %230
  %232 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %231, align 8
  %233 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %232, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %226, %"struct.std::__detail::_Hash_node_base"** %233, align 8
  store i32 -1437652863, i32* %16
  br label %253

; <label>:234:                                    ; preds = %17
  %235 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %236 = bitcast %"struct.std::__detail::_Hash_node"* %235 to %"struct.std::__detail::_Hash_node_base"*
  %237 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %238 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %237, i32 0, i32 0
  %239 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %238, align 8
  %240 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %241 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %240) #3
  %242 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %243 = call i64 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexEPNS4_10_Hash_nodeIS2_Lb0EEE(%"class.std::_Hashtable"* %242, %"struct.std::__detail::_Hash_node"* %241) #3
  %244 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %239, i64 %243
  store %"struct.std::__detail::_Hash_node_base"* %236, %"struct.std::__detail::_Hash_node_base"** %244, align 8
  store i32 -422184196, i32* %16
  br label %253

; <label>:245:                                    ; preds = %17
  %246 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %247 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %246, i32 0, i32 2
  %248 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %249 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %248, i32 0, i32 0
  %250 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %249, align 8
  %251 = load i64, i64* %7, align 8
  %252 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %250, i64 %251
  store %"struct.std::__detail::_Hash_node_base"* %247, %"struct.std::__detail::_Hash_node_base"** %252, align 8
  store i32 -2055613971, i32* %16
  br label %253

; <label>:253:                                    ; preds = %245, %234, %213, %211, %188, %160, %159, %134, %107, %88, %87, %51, %24, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE(%"class.std::_Hashtable"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::_Hashtable"*
  %5 = alloca i64*
  %6 = alloca %"struct.std::__detail::_Hash_node"**
  %7 = alloca i64*
  %8 = alloca %"struct.std::__detail::_Hash_node"**
  %9 = alloca %"struct.std::__detail::_Hash_node_base"***
  %10 = alloca i64*
  %11 = alloca i1
  %12 = alloca i1
  %13 = load i32, i32* @x.629
  %14 = load i32, i32* @y.630
  %15 = sub i32 %13, -1873745819
  %16 = sub i32 %15, 1
  %17 = add i32 %16, -1873745819
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  store i1 %21, i1* %12
  %22 = icmp slt i32 %14, 10
  store i1 %22, i1* %11
  %23 = alloca i32
  store i32 -1969236070, i32* %23
  br label %24

; <label>:24:                                     ; preds = %2, %270
  %25 = load i32, i32* %23
  switch i32 %25, label %26 [
    i32 -1969236070, label %27
    i32 1370191093, label %47
    i32 -813946899, label %84
    i32 -948097262, label %85
    i32 861839040, label %90
    i32 757196593, label %106
    i32 1697008514, label %153
    i32 397739761, label %156
    i32 1565234556, label %185
    i32 406561158, label %194
    i32 1456882890, label %198
    i32 1488169539, label %221
    i32 -1488406874, label %225
    i32 -1689912006, label %235
    i32 1326617020, label %250
  ]

; <label>:26:                                     ; preds = %24
  br label %270

; <label>:27:                                     ; preds = %24
  %28 = load volatile i1, i1* %12
  %29 = load volatile i1, i1* %11
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 false, true
  %33 = and i1 %30, false
  %34 = and i1 %28, %32
  %35 = and i1 %31, false
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 false, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 1370191093, i32 -1689912006
  store i32 %46, i32* %23
  br label %270

; <label>:47:                                     ; preds = %24
  %48 = alloca %"struct.std::integral_constant", align 1
  %49 = alloca %"class.std::_Hashtable"*, align 8
  %50 = alloca i64, align 8
  store i64* %50, i64** %10
  %51 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"struct.std::__detail::_Hash_node_base"*** %51, %"struct.std::__detail::_Hash_node_base"**** %9
  %52 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_node"** %52, %"struct.std::__detail::_Hash_node"*** %8
  %53 = alloca i64, align 8
  store i64* %53, i64** %7
  %54 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_node"** %54, %"struct.std::__detail::_Hash_node"*** %6
  %55 = alloca i64, align 8
  store i64* %55, i64** %5
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %49, align 8
  %56 = load volatile i64*, i64** %10
  store i64 %1, i64* %56, align 8
  %57 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %49, align 8
  store %"class.std::_Hashtable"* %57, %"class.std::_Hashtable"** %4
  %58 = load volatile i64*, i64** %10
  %59 = load i64, i64* %58, align 8
  %60 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %61 = call %"struct.std::__detail::_Hash_node_base"** @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_allocate_bucketsEm(%"class.std::_Hashtable"* %60, i64 %59)
  %62 = load volatile %"struct.std::__detail::_Hash_node_base"***, %"struct.std::__detail::_Hash_node_base"**** %9
  store %"struct.std::__detail::_Hash_node_base"** %61, %"struct.std::__detail::_Hash_node_base"*** %62, align 8
  %63 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %64 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_beginEv(%"class.std::_Hashtable"* %63)
  %65 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %8
  store %"struct.std::__detail::_Hash_node"* %64, %"struct.std::__detail::_Hash_node"** %65, align 8
  %66 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %67 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %66, i32 0, i32 2
  %68 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %67, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %68, align 8
  %69 = load volatile i64*, i64** %7
  store i64 0, i64* %69, align 8
  %70 = load i32, i32* @x.629
  %71 = load i32, i32* @y.630
  %72 = sub i32 0, 1
  %73 = add i32 %70, %72
  %74 = sub i32 %70, 1
  %75 = mul i32 %70, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %71, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  %83 = select i1 %81, i32 -813946899, i32 -1689912006
  store i32 %83, i32* %23
  br label %270

; <label>:84:                                     ; preds = %24
  store i32 -948097262, i32* %23
  br label %270

; <label>:85:                                     ; preds = %24
  %86 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %8
  %87 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %86, align 8
  %88 = icmp ne %"struct.std::__detail::_Hash_node"* %87, null
  %89 = select i1 %88, i32 861839040, i32 -1488406874
  store i32 %89, i32* %23
  br label %270

; <label>:90:                                     ; preds = %24
  %91 = load i32, i32* @x.629
  %92 = load i32, i32* @y.630
  %93 = sub i32 %91, 1866537128
  %94 = sub i32 %93, 1
  %95 = add i32 %94, 1866537128
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  %105 = select i1 %103, i32 757196593, i32 1326617020
  store i32 %105, i32* %23
  br label %270

; <label>:106:                                    ; preds = %24
  %107 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %8
  %108 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %107, align 8
  %109 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %108) #3
  %110 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %6
  store %"struct.std::__detail::_Hash_node"* %109, %"struct.std::__detail::_Hash_node"** %110, align 8
  %111 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %112 = bitcast %"class.std::_Hashtable"* %111 to %"struct.std::__detail::_Hash_code_base"*
  %113 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %8
  %114 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %113, align 8
  %115 = load volatile i64*, i64** %10
  %116 = load i64, i64* %115, align 8
  %117 = call i64 @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE15_M_bucket_indexEPKNS_10_Hash_nodeIS3_Lb0EEEm(%"struct.std::__detail::_Hash_code_base"* %112, %"struct.std::__detail::_Hash_node"* %114, i64 %116) #3
  %118 = load volatile i64*, i64** %5
  store i64 %117, i64* %118, align 8
  %119 = load volatile %"struct.std::__detail::_Hash_node_base"***, %"struct.std::__detail::_Hash_node_base"**** %9
  %120 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %119, align 8
  %121 = load volatile i64*, i64** %5
  %122 = load i64, i64* %121, align 8
  %123 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %120, i64 %122
  %124 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %123, align 8
  %125 = icmp ne %"struct.std::__detail::_Hash_node_base"* %124, null
  store i1 %125, i1* %3
  %126 = load i32, i32* @x.629
  %127 = load i32, i32* @y.630
  %128 = add i32 %126, -375533113
  %129 = sub i32 %128, 1
  %130 = sub i32 %129, -375533113
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = xor i1 %134, true
  %137 = xor i1 %135, true
  %138 = xor i1 false, true
  %139 = and i1 %136, false
  %140 = and i1 %134, %138
  %141 = and i1 %137, false
  %142 = and i1 %135, %138
  %143 = or i1 %139, %140
  %144 = or i1 %141, %142
  %145 = xor i1 %143, %144
  %146 = or i1 %136, %137
  %147 = xor i1 %146, true
  %148 = or i1 false, %138
  %149 = and i1 %147, %148
  %150 = or i1 %145, %149
  %151 = or i1 %134, %135
  %152 = select i1 %150, i32 1697008514, i32 1326617020
  store i32 %152, i32* %23
  br label %270

; <label>:153:                                    ; preds = %24
  %154 = load volatile i1, i1* %3
  %155 = select i1 %154, i32 1456882890, i32 397739761
  store i32 %155, i32* %23
  br label %270

; <label>:156:                                    ; preds = %24
  %157 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %158 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %157, i32 0, i32 2
  %159 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %158, i32 0, i32 0
  %160 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %159, align 8
  %161 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %8
  %162 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %161, align 8
  %163 = bitcast %"struct.std::__detail::_Hash_node"* %162 to %"struct.std::__detail::_Hash_node_base"*
  %164 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %163, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %160, %"struct.std::__detail::_Hash_node_base"** %164, align 8
  %165 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %8
  %166 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %165, align 8
  %167 = bitcast %"struct.std::__detail::_Hash_node"* %166 to %"struct.std::__detail::_Hash_node_base"*
  %168 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %169 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %168, i32 0, i32 2
  %170 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %169, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %167, %"struct.std::__detail::_Hash_node_base"** %170, align 8
  %171 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %172 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %171, i32 0, i32 2
  %173 = load volatile %"struct.std::__detail::_Hash_node_base"***, %"struct.std::__detail::_Hash_node_base"**** %9
  %174 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %173, align 8
  %175 = load volatile i64*, i64** %5
  %176 = load i64, i64* %175, align 8
  %177 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %174, i64 %176
  store %"struct.std::__detail::_Hash_node_base"* %172, %"struct.std::__detail::_Hash_node_base"** %177, align 8
  %178 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %8
  %179 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %178, align 8
  %180 = bitcast %"struct.std::__detail::_Hash_node"* %179 to %"struct.std::__detail::_Hash_node_base"*
  %181 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %180, i32 0, i32 0
  %182 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %181, align 8
  %183 = icmp ne %"struct.std::__detail::_Hash_node_base"* %182, null
  %184 = select i1 %183, i32 1565234556, i32 406561158
  store i32 %184, i32* %23
  br label %270

; <label>:185:                                    ; preds = %24
  %186 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %8
  %187 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %186, align 8
  %188 = bitcast %"struct.std::__detail::_Hash_node"* %187 to %"struct.std::__detail::_Hash_node_base"*
  %189 = load volatile %"struct.std::__detail::_Hash_node_base"***, %"struct.std::__detail::_Hash_node_base"**** %9
  %190 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %189, align 8
  %191 = load volatile i64*, i64** %7
  %192 = load i64, i64* %191, align 8
  %193 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %190, i64 %192
  store %"struct.std::__detail::_Hash_node_base"* %188, %"struct.std::__detail::_Hash_node_base"** %193, align 8
  store i32 406561158, i32* %23
  br label %270

; <label>:194:                                    ; preds = %24
  %195 = load volatile i64*, i64** %5
  %196 = load i64, i64* %195, align 8
  %197 = load volatile i64*, i64** %7
  store i64 %196, i64* %197, align 8
  store i32 1488169539, i32* %23
  br label %270

; <label>:198:                                    ; preds = %24
  %199 = load volatile %"struct.std::__detail::_Hash_node_base"***, %"struct.std::__detail::_Hash_node_base"**** %9
  %200 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %199, align 8
  %201 = load volatile i64*, i64** %5
  %202 = load i64, i64* %201, align 8
  %203 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %200, i64 %202
  %204 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %203, align 8
  %205 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %204, i32 0, i32 0
  %206 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %205, align 8
  %207 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %8
  %208 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %207, align 8
  %209 = bitcast %"struct.std::__detail::_Hash_node"* %208 to %"struct.std::__detail::_Hash_node_base"*
  %210 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %209, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %206, %"struct.std::__detail::_Hash_node_base"** %210, align 8
  %211 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %8
  %212 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %211, align 8
  %213 = bitcast %"struct.std::__detail::_Hash_node"* %212 to %"struct.std::__detail::_Hash_node_base"*
  %214 = load volatile %"struct.std::__detail::_Hash_node_base"***, %"struct.std::__detail::_Hash_node_base"**** %9
  %215 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %214, align 8
  %216 = load volatile i64*, i64** %5
  %217 = load i64, i64* %216, align 8
  %218 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %215, i64 %217
  %219 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %218, align 8
  %220 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %219, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %213, %"struct.std::__detail::_Hash_node_base"** %220, align 8
  store i32 1488169539, i32* %23
  br label %270

; <label>:221:                                    ; preds = %24
  %222 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %6
  %223 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %222, align 8
  %224 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %8
  store %"struct.std::__detail::_Hash_node"* %223, %"struct.std::__detail::_Hash_node"** %224, align 8
  store i32 -948097262, i32* %23
  br label %270

; <label>:225:                                    ; preds = %24
  %226 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  call void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_deallocate_bucketsEv(%"class.std::_Hashtable"* %226)
  %227 = load volatile i64*, i64** %10
  %228 = load i64, i64* %227, align 8
  %229 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %230 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %229, i32 0, i32 1
  store i64 %228, i64* %230, align 8
  %231 = load volatile %"struct.std::__detail::_Hash_node_base"***, %"struct.std::__detail::_Hash_node_base"**** %9
  %232 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %231, align 8
  %233 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %234 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %233, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"** %232, %"struct.std::__detail::_Hash_node_base"*** %234, align 8
  ret void

; <label>:235:                                    ; preds = %24
  %236 = alloca %"struct.std::integral_constant", align 1
  %237 = alloca %"class.std::_Hashtable"*, align 8
  %238 = alloca i64, align 8
  %239 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %240 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %241 = alloca i64, align 8
  %242 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %243 = alloca i64, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %237, align 8
  store i64 %1, i64* %238, align 8
  %244 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %237, align 8
  %245 = load i64, i64* %238, align 8
  %246 = call %"struct.std::__detail::_Hash_node_base"** @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_allocate_bucketsEm(%"class.std::_Hashtable"* %244, i64 %245)
  store %"struct.std::__detail::_Hash_node_base"** %246, %"struct.std::__detail::_Hash_node_base"*** %239, align 8
  %247 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_beginEv(%"class.std::_Hashtable"* %244)
  store %"struct.std::__detail::_Hash_node"* %247, %"struct.std::__detail::_Hash_node"** %240, align 8
  %248 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %244, i32 0, i32 2
  %249 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %248, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %249, align 8
  store i64 0, i64* %241, align 8
  store i32 1370191093, i32* %23
  br label %270

; <label>:250:                                    ; preds = %24
  %251 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %8
  %252 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %251, align 8
  %253 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %252) #3
  %254 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %6
  store %"struct.std::__detail::_Hash_node"* %253, %"struct.std::__detail::_Hash_node"** %254, align 8
  %255 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %256 = bitcast %"class.std::_Hashtable"* %255 to %"struct.std::__detail::_Hash_code_base"*
  %257 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %8
  %258 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %257, align 8
  %259 = load volatile i64*, i64** %10
  %260 = load i64, i64* %259, align 8
  %261 = call i64 @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE15_M_bucket_indexEPKNS_10_Hash_nodeIS3_Lb0EEEm(%"struct.std::__detail::_Hash_code_base"* %256, %"struct.std::__detail::_Hash_node"* %258, i64 %260) #3
  %262 = load volatile i64*, i64** %5
  store i64 %261, i64* %262, align 8
  %263 = load volatile %"struct.std::__detail::_Hash_node_base"***, %"struct.std::__detail::_Hash_node_base"**** %9
  %264 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %263, align 8
  %265 = load volatile i64*, i64** %5
  %266 = load i64, i64* %265, align 8
  %267 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %264, i64 %266
  %268 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %267, align 8
  %269 = icmp ne %"struct.std::__detail::_Hash_node_base"* %268, null
  store i32 757196593, i32* %23
  br label %270

; <label>:270:                                    ; preds = %250, %235, %221, %198, %194, %185, %156, %153, %106, %90, %85, %84, %47, %27, %26
  br label %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_10_Select1stELb1EE6_S_getERS2_(%"struct.std::__detail::_Hashtable_ebo_helper"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_ebo_helper"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper"* %0, %"struct.std::__detail::_Hashtable_ebo_helper"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_ebo_helper"*, %"struct.std::__detail::_Hashtable_ebo_helper"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper"* %3 to %"struct.std::__detail::_Select1st"*
  ret %"struct.std::__detail::_Select1st"* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8__detail9_Map_baseIiSt4pairIKixESaIS3_ENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb0ELb0ELb1EEELb1EEixERS2_(%"struct.std::__detail::_Map_base"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Hash_node"*
  %4 = alloca i64*, align 8
  %5 = alloca %"struct.std::__detail::_Map_base"*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.std::_Hashtable"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %11 = alloca %"class.std::tuple.24", align 8
  %12 = alloca %"class.std::tuple.21", align 1
  %13 = alloca %"struct.std::__detail::_Node_iterator", align 8
  store %"struct.std::__detail::_Map_base"* %0, %"struct.std::__detail::_Map_base"** %5, align 8
  store i32* %1, i32** %6, align 8
  %14 = load %"struct.std::__detail::_Map_base"*, %"struct.std::__detail::_Map_base"** %5, align 8
  %15 = bitcast %"struct.std::__detail::_Map_base"* %14 to %"class.std::_Hashtable"*
  store %"class.std::_Hashtable"* %15, %"class.std::_Hashtable"** %7, align 8
  %16 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %7, align 8
  %17 = bitcast %"class.std::_Hashtable"* %16 to %"struct.std::__detail::_Hash_code_base"*
  %18 = load i32*, i32** %6, align 8
  %19 = call i64 @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE12_M_hash_codeERS2_(%"struct.std::__detail::_Hash_code_base"* %17, i32* dereferenceable(4) %18)
  store i64 %19, i64* %8, align 8
  %20 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %7, align 8
  %21 = load i32*, i32** %6, align 8
  %22 = load i64, i64* %8, align 8
  %23 = call i64 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexERS1_m(%"class.std::_Hashtable"* %20, i32* dereferenceable(4) %21, i64 %22)
  store i64 %23, i64* %9, align 8
  %24 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %7, align 8
  %25 = load i64, i64* %9, align 8
  %26 = load i32*, i32** %6, align 8
  %27 = load i64, i64* %8, align 8
  %28 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE12_M_find_nodeEmRS1_m(%"class.std::_Hashtable"* %24, i64 %25, i32* dereferenceable(4) %26, i64 %27)
  store %"struct.std::__detail::_Hash_node"* %28, %"struct.std::__detail::_Hash_node"** %10, align 8
  %29 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  store %"struct.std::__detail::_Hash_node"* %29, %"struct.std::__detail::_Hash_node"** %3
  %30 = alloca i32
  store i32 -1765268430, i32* %30
  br label %31

; <label>:31:                                     ; preds = %2, %59
  %32 = load i32, i32* %30
  switch i32 %32, label %33 [
    i32 -1765268430, label %34
    i32 1615442895, label %38
    i32 717409305, label %52
    i32 455943005, label %57
  ]

; <label>:33:                                     ; preds = %31
  br label %59

; <label>:34:                                     ; preds = %31
  %35 = load volatile %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %3
  %36 = icmp ne %"struct.std::__detail::_Hash_node"* %35, null
  %37 = select i1 %36, i32 717409305, i32 1615442895
  store i32 %37, i32* %30
  br label %59

; <label>:38:                                     ; preds = %31
  %39 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %7, align 8
  %40 = bitcast %"class.std::_Hashtable"* %39 to %"struct.std::__detail::_Hashtable_alloc"*
  %41 = load i32*, i32** %6, align 8
  call void @_ZNSt5tupleIJRKiEEC2ES1_(%"class.std::tuple.24"* %11, i32* dereferenceable(4) %41)
  %42 = call %"struct.std::__detail::_Hash_node"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS3_EESC_IJEEEEEPS5_DpOT_(%"struct.std::__detail::_Hashtable_alloc"* %40, %"struct.std::piecewise_construct_t"* dereferenceable(1) @_ZStL19piecewise_construct, %"class.std::tuple.24"* dereferenceable(8) %11, %"class.std::tuple.21"* dereferenceable(1) %12)
  store %"struct.std::__detail::_Hash_node"* %42, %"struct.std::__detail::_Hash_node"** %10, align 8
  %43 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %7, align 8
  %44 = load i64, i64* %9, align 8
  %45 = load i64, i64* %8, align 8
  %46 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %47 = call %"struct.std::__detail::_Hash_node"* @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNS4_10_Hash_nodeIS2_Lb0EEE(%"class.std::_Hashtable"* %43, i64 %44, i64 %45, %"struct.std::__detail::_Hash_node"* %46)
  %48 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %13, i32 0, i32 0
  %49 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %48, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %47, %"struct.std::__detail::_Hash_node"** %49, align 8
  %50 = call %"struct.std::pair"* @_ZNKSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEptEv(%"struct.std::__detail::_Node_iterator"* %13) #3
  %51 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %50, i32 0, i32 1
  store i64* %51, i64** %4, align 8
  store i32 455943005, i32* %30
  br label %59

; <label>:52:                                     ; preds = %31
  %53 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %54 = bitcast %"struct.std::__detail::_Hash_node"* %53 to %"struct.std::__detail::_Hash_node_value_base"*
  %55 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base"* %54) #3
  %56 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %55, i32 0, i32 1
  store i64* %56, i64** %4, align 8
  store i32 455943005, i32* %30
  br label %59

; <label>:57:                                     ; preds = %31
  %58 = load i64*, i64** %4, align 8
  ret i64* %58

; <label>:59:                                     ; preds = %52, %38, %34, %33
  br label %31
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS3_EESC_IJEEEEEPS5_DpOT_(%"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.24"* dereferenceable(8), %"class.std::tuple.21"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  %6 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %7 = alloca %"class.std::tuple.24"*, align 8
  %8 = alloca %"class.std::tuple.21"*, align 8
  %9 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %10 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %11 = alloca %"class.std::allocator.12", align 1
  %12 = alloca i8*
  %13 = alloca i32
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %5, align 8
  store %"struct.std::piecewise_construct_t"* %1, %"struct.std::piecewise_construct_t"** %6, align 8
  store %"class.std::tuple.24"* %2, %"class.std::tuple.24"** %7, align 8
  store %"class.std::tuple.21"* %3, %"class.std::tuple.21"** %8, align 8
  %14 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %5, align 8
  %15 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %14)
  %16 = call %"struct.std::__detail::_Hash_node"* @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE8allocateERS6_m(%"class.std::allocator.9"* dereferenceable(1) %15, i64 1)
  store %"struct.std::__detail::_Hash_node"* %16, %"struct.std::__detail::_Hash_node"** %9, align 8
  %17 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  %18 = call %"struct.std::__detail::_Hash_node"* @_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEPT_RS6_(%"struct.std::__detail::_Hash_node"* dereferenceable(24) %17) #3
  store %"struct.std::__detail::_Hash_node"* %18, %"struct.std::__detail::_Hash_node"** %10, align 8
  %19 = invoke dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %14)
          to label %20 unwind label %35

; <label>:20:                                     ; preds = %4
  call void @_ZNSaISt4pairIKixEEC2INSt8__detail10_Hash_nodeIS1_Lb0EEEEERKSaIT_E(%"class.std::allocator.12"* %11, %"class.std::allocator.9"* dereferenceable(1) %19) #3
  %21 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %22 = bitcast %"struct.std::__detail::_Hash_node"* %21 to i8*
  %23 = bitcast i8* %22 to %"struct.std::__detail::_Hash_node"*
  call void @_ZNSt8__detail10_Hash_nodeISt4pairIKixELb0EEC2Ev(%"struct.std::__detail::_Hash_node"* %23) #3
  %24 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %25 = bitcast %"struct.std::__detail::_Hash_node"* %24 to %"struct.std::__detail::_Hash_node_value_base"*
  %26 = call %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"* %25) #3
  %27 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %6, align 8
  %28 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %27) #3
  %29 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %7, align 8
  %30 = call dereferenceable(8) %"class.std::tuple.24"* @_ZSt7forwardISt5tupleIJRKiEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.24"* dereferenceable(8) %29) #3
  %31 = load %"class.std::tuple.21"*, %"class.std::tuple.21"** %8, align 8
  %32 = call dereferenceable(1) %"class.std::tuple.21"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.21"* dereferenceable(1) %31) #3
  invoke void @_ZNSt16allocator_traitsISaISt4pairIKixEEE9constructIS2_JRKSt21piecewise_construct_tSt5tupleIJRS1_EES9_IJEEEEEvRS3_PT_DpOT0_(%"class.std::allocator.12"* dereferenceable(1) %11, %"struct.std::pair"* %26, %"struct.std::piecewise_construct_t"* dereferenceable(1) %28, %"class.std::tuple.24"* dereferenceable(8) %30, %"class.std::tuple.21"* dereferenceable(1) %32)
          to label %33 unwind label %80

; <label>:33:                                     ; preds = %20
  %34 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  call void @_ZNSaISt4pairIKixEED2Ev(%"class.std::allocator.12"* %11) #3
  ret %"struct.std::__detail::_Hash_node"* %34

; <label>:35:                                     ; preds = %4
  %36 = load i32, i32* @x.635
  %37 = load i32, i32* @y.636
  %38 = sub i32 %36, 670970169
  %39 = sub i32 %38, 1
  %40 = add i32 %39, 670970169
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  br i1 %48, label %50, label %148

; <label>:50:                                     ; preds = %35, %148
  %51 = landingpad { i8*, i32 }
          catch i8* null
  %52 = extractvalue { i8*, i32 } %51, 0
  store i8* %52, i8** %12, align 8
  %53 = extractvalue { i8*, i32 } %51, 1
  store i32 %53, i32* %13, align 4
  %54 = load i32, i32* @x.635
  %55 = load i32, i32* @y.636
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 false, true
  %66 = and i1 %63, false
  %67 = and i1 %61, %65
  %68 = and i1 %64, false
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 false, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  br i1 %77, label %79, label %148

; <label>:79:                                     ; preds = %50
  br label %84

; <label>:80:                                     ; preds = %20
  %81 = landingpad { i8*, i32 }
          catch i8* null
  %82 = extractvalue { i8*, i32 } %81, 0
  store i8* %82, i8** %12, align 8
  %83 = extractvalue { i8*, i32 } %81, 1
  store i32 %83, i32* %13, align 4
  call void @_ZNSaISt4pairIKixEED2Ev(%"class.std::allocator.12"* %11) #3
  br label %84

; <label>:84:                                     ; preds = %80, %79
  %85 = load i8*, i8** %12, align 8
  %86 = call i8* @__cxa_begin_catch(i8* %85) #3
  %87 = invoke dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %14)
          to label %88 unwind label %91

; <label>:88:                                     ; preds = %84
  %89 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  invoke void @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE10deallocateERS6_PS5_m(%"class.std::allocator.9"* dereferenceable(1) %87, %"struct.std::__detail::_Hash_node"* %89, i64 1)
          to label %90 unwind label %91

; <label>:90:                                     ; preds = %88
  invoke void @__cxa_rethrow() #12
          to label %147 unwind label %91

; <label>:91:                                     ; preds = %90, %88, %84
  %92 = landingpad { i8*, i32 }
          cleanup
  %93 = extractvalue { i8*, i32 } %92, 0
  store i8* %93, i8** %12, align 8
  %94 = extractvalue { i8*, i32 } %92, 1
  store i32 %94, i32* %13, align 4
  invoke void @__cxa_end_catch()
          to label %95 unwind label %102

; <label>:95:                                     ; preds = %91
  br label %97
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:97:                                     ; preds = %95
  %98 = load i8*, i8** %12, align 8
  %99 = load i32, i32* %13, align 4
  %100 = insertvalue { i8*, i32 } undef, i8* %98, 0
  %101 = insertvalue { i8*, i32 } %100, i32 %99, 1
  resume { i8*, i32 } %101

; <label>:102:                                    ; preds = %91
  %103 = load i32, i32* @x.635
  %104 = load i32, i32* @y.636
  %105 = sub i32 %103, 766232991
  %106 = sub i32 %105, 1
  %107 = add i32 %106, 766232991
  %108 = sub i32 %103, 1
  %109 = mul i32 %103, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %104, 10
  %113 = and i1 %111, %112
  %114 = xor i1 %111, %112
  %115 = or i1 %113, %114
  %116 = or i1 %111, %112
  br i1 %115, label %117, label %152

; <label>:117:                                    ; preds = %102, %152
  %118 = landingpad { i8*, i32 }
          catch i8* null
  %119 = extractvalue { i8*, i32 } %118, 0
  call void @__clang_call_terminate(i8* %119) #11
  %120 = load i32, i32* @x.635
  %121 = load i32, i32* @y.636
  %122 = add i32 %120, -31070000
  %123 = sub i32 %122, 1
  %124 = sub i32 %123, -31070000
  %125 = sub i32 %120, 1
  %126 = mul i32 %120, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %121, 10
  %130 = xor i1 %128, true
  %131 = xor i1 %129, true
  %132 = xor i1 false, true
  %133 = and i1 %130, false
  %134 = and i1 %128, %132
  %135 = and i1 %131, false
  %136 = and i1 %129, %132
  %137 = or i1 %133, %134
  %138 = or i1 %135, %136
  %139 = xor i1 %137, %138
  %140 = or i1 %130, %131
  %141 = xor i1 %140, true
  %142 = or i1 false, %132
  %143 = and i1 %141, %142
  %144 = or i1 %139, %143
  %145 = or i1 %128, %129
  br i1 %144, label %146, label %152

; <label>:146:                                    ; preds = %117
  unreachable

; <label>:147:                                    ; preds = %90
  unreachable

; <label>:148:                                    ; preds = %50, %35
  %149 = landingpad { i8*, i32 }
          catch i8* null
  %150 = extractvalue { i8*, i32 } %149, 0
  store i8* %150, i8** %12, align 8
  %151 = extractvalue { i8*, i32 } %149, 1
  store i32 %151, i32* %13, align 4
  br label %50

; <label>:152:                                    ; preds = %117, %102
  %153 = landingpad { i8*, i32 }
          catch i8* null
  %154 = extractvalue { i8*, i32 } %153, 0
  call void @__clang_call_terminate(i8* %154) #11
  br label %117
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5tupleIJRKiEEC2ES1_(%"class.std::tuple.24"*, i32* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::tuple.24"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::tuple.24"* %0, %"class.std::tuple.24"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %3, align 8
  %6 = bitcast %"class.std::tuple.24"* %5 to %"struct.std::_Tuple_impl.25"*
  %7 = load i32*, i32** %4, align 8
  call void @_ZNSt11_Tuple_implILm0EJRKiEEC2ES1_(%"struct.std::_Tuple_impl.25"* %6, i32* dereferenceable(4) %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIKixEEE9constructIS2_JRKSt21piecewise_construct_tSt5tupleIJRS1_EES9_IJEEEEEvRS3_PT_DpOT0_(%"class.std::allocator.12"* dereferenceable(1), %"struct.std::pair"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.24"* dereferenceable(8), %"class.std::tuple.21"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.639
  %9 = load i32, i32* @y.640
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -479916235, i32* %17
  br label %18

; <label>:18:                                     ; preds = %5, %74
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -479916235, label %21
    i32 -813464957, label %29
    i32 -704692853, label %58
    i32 -635127747, label %59
  ]

; <label>:20:                                     ; preds = %18
  br label %74

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -813464957, i32 -635127747
  store i32 %28, i32* %17
  br label %74

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::allocator.12"*, align 8
  %31 = alloca %"struct.std::pair"*, align 8
  %32 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %33 = alloca %"class.std::tuple.24"*, align 8
  %34 = alloca %"class.std::tuple.21"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %30, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %31, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %32, align 8
  store %"class.std::tuple.24"* %3, %"class.std::tuple.24"** %33, align 8
  store %"class.std::tuple.21"* %4, %"class.std::tuple.21"** %34, align 8
  %35 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %30, align 8
  %36 = bitcast %"class.std::allocator.12"* %35 to %"class.__gnu_cxx::new_allocator.13"*
  %37 = load %"struct.std::pair"*, %"struct.std::pair"** %31, align 8
  %38 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %32, align 8
  %39 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %38) #3
  %40 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %33, align 8
  %41 = call dereferenceable(8) %"class.std::tuple.24"* @_ZSt7forwardISt5tupleIJRKiEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.24"* dereferenceable(8) %40) #3
  %42 = load %"class.std::tuple.21"*, %"class.std::tuple.21"** %34, align 8
  %43 = call dereferenceable(1) %"class.std::tuple.21"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.21"* dereferenceable(1) %42) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIKixEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJRS2_EES9_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.13"* %36, %"struct.std::pair"* %37, %"struct.std::piecewise_construct_t"* dereferenceable(1) %39, %"class.std::tuple.24"* dereferenceable(8) %41, %"class.std::tuple.21"* dereferenceable(1) %43)
  %44 = load i32, i32* @x.639
  %45 = load i32, i32* @y.640
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -704692853, i32 -635127747
  store i32 %57, i32* %17
  br label %74

; <label>:58:                                     ; preds = %18
  ret void

; <label>:59:                                     ; preds = %18
  %60 = alloca %"class.std::allocator.12"*, align 8
  %61 = alloca %"struct.std::pair"*, align 8
  %62 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %63 = alloca %"class.std::tuple.24"*, align 8
  %64 = alloca %"class.std::tuple.21"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %60, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %61, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %62, align 8
  store %"class.std::tuple.24"* %3, %"class.std::tuple.24"** %63, align 8
  store %"class.std::tuple.21"* %4, %"class.std::tuple.21"** %64, align 8
  %65 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %60, align 8
  %66 = bitcast %"class.std::allocator.12"* %65 to %"class.__gnu_cxx::new_allocator.13"*
  %67 = load %"struct.std::pair"*, %"struct.std::pair"** %61, align 8
  %68 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %62, align 8
  %69 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %68) #3
  %70 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %63, align 8
  %71 = call dereferenceable(8) %"class.std::tuple.24"* @_ZSt7forwardISt5tupleIJRKiEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.24"* dereferenceable(8) %70) #3
  %72 = load %"class.std::tuple.21"*, %"class.std::tuple.21"** %64, align 8
  %73 = call dereferenceable(1) %"class.std::tuple.21"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.21"* dereferenceable(1) %72) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIKixEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJRS2_EES9_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.13"* %66, %"struct.std::pair"* %67, %"struct.std::piecewise_construct_t"* dereferenceable(1) %69, %"class.std::tuple.24"* dereferenceable(8) %71, %"class.std::tuple.21"* dereferenceable(1) %73)
  store i32 -813464957, i32* %17
  br label %74

; <label>:74:                                     ; preds = %59, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::tuple.24"* @_ZSt7forwardISt5tupleIJRKiEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.24"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"class.std::tuple.24"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.641
  %6 = load i32, i32* @y.642
  %7 = add i32 %5, -226920640
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -226920640
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1495637685, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1495637685, label %19
    i32 799343601, label %27
    i32 -2049965077, label %57
    i32 -2075483792, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 799343601, i32 -2075483792
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::tuple.24"*, align 8
  store %"class.std::tuple.24"* %0, %"class.std::tuple.24"** %28, align 8
  %29 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %28, align 8
  store %"class.std::tuple.24"* %29, %"class.std::tuple.24"** %2
  %30 = load i32, i32* @x.641
  %31 = load i32, i32* @y.642
  %32 = sub i32 %30, 221772819
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 221772819
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -2049965077, i32 -2075483792
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"class.std::tuple.24"*, %"class.std::tuple.24"** %2
  ret %"class.std::tuple.24"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.std::tuple.24"*, align 8
  store %"class.std::tuple.24"* %0, %"class.std::tuple.24"** %60, align 8
  %61 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %60, align 8
  store i32 799343601, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIKixEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJRS2_EES9_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.13"*, %"struct.std::pair"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.24"* dereferenceable(8), %"class.std::tuple.21"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  %7 = alloca %"struct.std::pair"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple.24"*, align 8
  %10 = alloca %"class.std::tuple.21"*, align 8
  %11 = alloca %"struct.std::piecewise_construct_t", align 1
  %12 = alloca %"class.std::tuple.24", align 8
  %13 = alloca %"class.std::tuple.21", align 1
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %6, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple.24"* %3, %"class.std::tuple.24"** %9, align 8
  store %"class.std::tuple.21"* %4, %"class.std::tuple.21"** %10, align 8
  %14 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %6, align 8
  %15 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %16 = bitcast %"struct.std::pair"* %15 to i8*
  %17 = bitcast i8* %16 to %"struct.std::pair"*
  %18 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %19 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %18) #3
  %20 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %9, align 8
  %21 = call dereferenceable(8) %"class.std::tuple.24"* @_ZSt7forwardISt5tupleIJRKiEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.24"* dereferenceable(8) %20) #3
  call void @_ZNSt5tupleIJRKiEEC2EOS2_(%"class.std::tuple.24"* %12, %"class.std::tuple.24"* dereferenceable(8) %21) #3
  %22 = load %"class.std::tuple.21"*, %"class.std::tuple.21"** %10, align 8
  %23 = call dereferenceable(1) %"class.std::tuple.21"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.21"* dereferenceable(1) %22) #3
  %24 = getelementptr inbounds %"class.std::tuple.24", %"class.std::tuple.24"* %12, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Tuple_impl.25", %"struct.std::_Tuple_impl.25"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Head_base.26", %"struct.std::_Head_base.26"* %25, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  call void @_ZNSt4pairIKixEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE(%"struct.std::pair"* %17, i32* %27)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5tupleIJRKiEEC2EOS2_(%"class.std::tuple.24"*, %"class.std::tuple.24"* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.645
  %6 = load i32, i32* @y.646
  %7 = sub i32 %5, -874906690
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -874906690
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 16581330, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %57
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 16581330, label %19
    i32 693140907, label %27
    i32 -1986481163, label %49
    i32 1490226773, label %50
  ]

; <label>:18:                                     ; preds = %16
  br label %57

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 693140907, i32 1490226773
  store i32 %26, i32* %15
  br label %57

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::tuple.24"*, align 8
  %29 = alloca %"class.std::tuple.24"*, align 8
  store %"class.std::tuple.24"* %0, %"class.std::tuple.24"** %28, align 8
  store %"class.std::tuple.24"* %1, %"class.std::tuple.24"** %29, align 8
  %30 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %28, align 8
  %31 = bitcast %"class.std::tuple.24"* %30 to %"struct.std::_Tuple_impl.25"*
  %32 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %29, align 8
  %33 = bitcast %"class.std::tuple.24"* %32 to %"struct.std::_Tuple_impl.25"*
  call void @_ZNSt11_Tuple_implILm0EJRKiEEC2EOS2_(%"struct.std::_Tuple_impl.25"* %31, %"struct.std::_Tuple_impl.25"* dereferenceable(8) %33) #3
  %34 = load i32, i32* @x.645
  %35 = load i32, i32* @y.646
  %36 = add i32 %34, -1097743644
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, -1097743644
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -1986481163, i32 1490226773
  store i32 %48, i32* %15
  br label %57

; <label>:49:                                     ; preds = %16
  ret void

; <label>:50:                                     ; preds = %16
  %51 = alloca %"class.std::tuple.24"*, align 8
  %52 = alloca %"class.std::tuple.24"*, align 8
  store %"class.std::tuple.24"* %0, %"class.std::tuple.24"** %51, align 8
  store %"class.std::tuple.24"* %1, %"class.std::tuple.24"** %52, align 8
  %53 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %51, align 8
  %54 = bitcast %"class.std::tuple.24"* %53 to %"struct.std::_Tuple_impl.25"*
  %55 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %52, align 8
  %56 = bitcast %"class.std::tuple.24"* %55 to %"struct.std::_Tuple_impl.25"*
  call void @_ZNSt11_Tuple_implILm0EJRKiEEC2EOS2_(%"struct.std::_Tuple_impl.25"* %54, %"struct.std::_Tuple_impl.25"* dereferenceable(8) %56) #3
  store i32 693140907, i32* %15
  br label %57

; <label>:57:                                     ; preds = %50, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt4pairIKixEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE(%"struct.std::pair"*, i32*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::piecewise_construct_t", align 1
  %4 = alloca %"class.std::tuple.24", align 8
  %5 = alloca %"class.std::tuple.21", align 1
  %6 = alloca %"struct.std::pair"*, align 8
  %7 = alloca %"struct.std::_Index_tuple", align 1
  %8 = alloca %"struct.std::_Index_tuple.22", align 1
  %9 = getelementptr inbounds %"class.std::tuple.24", %"class.std::tuple.24"* %4, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Tuple_impl.25", %"struct.std::_Tuple_impl.25"* %9, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Head_base.26", %"struct.std::_Head_base.26"* %10, i32 0, i32 0
  store i32* %1, i32** %11, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %6, align 8
  %12 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  call void @_ZNSt4pairIKixEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE(%"struct.std::pair"* %12, %"class.std::tuple.24"* dereferenceable(8) %4, %"class.std::tuple.21"* dereferenceable(1) %5)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJRKiEEC2EOS2_(%"struct.std::_Tuple_impl.25"*, %"struct.std::_Tuple_impl.25"* dereferenceable(8)) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Tuple_impl.25"*, align 8
  %4 = alloca %"struct.std::_Tuple_impl.25"*, align 8
  store %"struct.std::_Tuple_impl.25"* %0, %"struct.std::_Tuple_impl.25"** %3, align 8
  store %"struct.std::_Tuple_impl.25"* %1, %"struct.std::_Tuple_impl.25"** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.25"*, %"struct.std::_Tuple_impl.25"** %3, align 8
  %6 = bitcast %"struct.std::_Tuple_impl.25"* %5 to %"struct.std::_Head_base.26"*
  %7 = load %"struct.std::_Tuple_impl.25"*, %"struct.std::_Tuple_impl.25"** %4, align 8
  %8 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm0EJRKiEE7_M_headERS2_(%"struct.std::_Tuple_impl.25"* dereferenceable(8) %7) #3
  %9 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %8) #3
  invoke void @_ZNSt10_Head_baseILm0ERKiLb0EEC2ES1_(%"struct.std::_Head_base.26"* %6, i32* dereferenceable(4) %9)
          to label %10 unwind label %11

; <label>:10:                                     ; preds = %2
  ret void

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* @x.649
  %13 = load i32, i32* @y.650
  %14 = sub i32 %12, -652476679
  %15 = sub i32 %14, 1
  %16 = add i32 %15, -652476679
  %17 = sub i32 %12, 1
  %18 = mul i32 %12, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %13, 10
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  br i1 %36, label %38, label %56

; <label>:38:                                     ; preds = %11, %56
  %39 = landingpad { i8*, i32 }
          catch i8* null
  %40 = extractvalue { i8*, i32 } %39, 0
  call void @__clang_call_terminate(i8* %40) #11
  %41 = load i32, i32* @x.649
  %42 = load i32, i32* @y.650
  %43 = sub i32 %41, -1965445610
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -1965445610
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  br i1 %53, label %55, label %56

; <label>:55:                                     ; preds = %38
  unreachable

; <label>:56:                                     ; preds = %38, %11
  %57 = landingpad { i8*, i32 }
          catch i8* null
  %58 = extractvalue { i8*, i32 } %57, 0
  call void @__clang_call_terminate(i8* %58) #11
  br label %38
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4)) #4 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt11_Tuple_implILm0EJRKiEE7_M_headERS2_(%"struct.std::_Tuple_impl.25"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.25"*, align 8
  store %"struct.std::_Tuple_impl.25"* %0, %"struct.std::_Tuple_impl.25"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.25"*, %"struct.std::_Tuple_impl.25"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.25"* %3 to %"struct.std::_Head_base.26"*
  %5 = call dereferenceable(4) i32* @_ZNSt10_Head_baseILm0ERKiLb0EE7_M_headERS2_(%"struct.std::_Head_base.26"* dereferenceable(8) %4) #3
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm0ERKiLb0EEC2ES1_(%"struct.std::_Head_base.26"*, i32* dereferenceable(4)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Head_base.26"*, align 8
  %4 = alloca i32*, align 8
  store %"struct.std::_Head_base.26"* %0, %"struct.std::_Head_base.26"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"struct.std::_Head_base.26"*, %"struct.std::_Head_base.26"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Head_base.26", %"struct.std::_Head_base.26"* %5, i32 0, i32 0
  %7 = load i32*, i32** %4, align 8
  store i32* %7, i32** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt10_Head_baseILm0ERKiLb0EE7_M_headERS2_(%"struct.std::_Head_base.26"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.657
  %6 = load i32, i32* @y.658
  %7 = sub i32 %5, -1507230123
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1507230123
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -787738742, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -787738742, label %19
    i32 312889497, label %27
    i32 -201349021, label %59
    i32 1708837063, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 312889497, i32 1708837063
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Head_base.26"*, align 8
  store %"struct.std::_Head_base.26"* %0, %"struct.std::_Head_base.26"** %28, align 8
  %29 = load %"struct.std::_Head_base.26"*, %"struct.std::_Head_base.26"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Head_base.26", %"struct.std::_Head_base.26"* %29, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  store i32* %31, i32** %2
  %32 = load i32, i32* @x.657
  %33 = load i32, i32* @y.658
  %34 = sub i32 %32, 2137719600
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 2137719600
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -201349021, i32 1708837063
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i32*, i32** %2
  ret i32* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_Head_base.26"*, align 8
  store %"struct.std::_Head_base.26"* %0, %"struct.std::_Head_base.26"** %62, align 8
  %63 = load %"struct.std::_Head_base.26"*, %"struct.std::_Head_base.26"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::_Head_base.26", %"struct.std::_Head_base.26"* %63, i32 0, i32 0
  %65 = load i32*, i32** %64, align 8
  store i32 312889497, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIKixEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE(%"struct.std::pair"*, %"class.std::tuple.24"* dereferenceable(8), %"class.std::tuple.21"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.659
  %7 = load i32, i32* @y.660
  %8 = add i32 %6, 1767033042
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1767033042
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -406345273, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %82
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -406345273, label %20
    i32 -847064942, label %40
    i32 -605768666, label %68
    i32 83764972, label %69
  ]

; <label>:19:                                     ; preds = %17
  br label %82

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -847064942, i32 83764972
  store i32 %39, i32* %16
  br label %82

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::_Index_tuple", align 1
  %42 = alloca %"struct.std::_Index_tuple.22", align 1
  %43 = alloca %"struct.std::pair"*, align 8
  %44 = alloca %"class.std::tuple.24"*, align 8
  %45 = alloca %"class.std::tuple.21"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %43, align 8
  store %"class.std::tuple.24"* %1, %"class.std::tuple.24"** %44, align 8
  store %"class.std::tuple.21"* %2, %"class.std::tuple.21"** %45, align 8
  %46 = load %"struct.std::pair"*, %"struct.std::pair"** %43, align 8
  %47 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %46, i32 0, i32 0
  %48 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %44, align 8
  %49 = call dereferenceable(4) i32* @_ZSt3getILm0EJRKiEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_(%"class.std::tuple.24"* dereferenceable(8) %48) #3
  %50 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %49) #3
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %47, align 8
  %52 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %46, i32 0, i32 1
  store i64 0, i64* %52, align 8
  %53 = load i32, i32* @x.659
  %54 = load i32, i32* @y.660
  %55 = sub i32 %53, -182347074
  %56 = sub i32 %55, 1
  %57 = add i32 %56, -182347074
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 -605768666, i32 83764972
  store i32 %67, i32* %16
  br label %82

; <label>:68:                                     ; preds = %17
  ret void

; <label>:69:                                     ; preds = %17
  %70 = alloca %"struct.std::_Index_tuple", align 1
  %71 = alloca %"struct.std::_Index_tuple.22", align 1
  %72 = alloca %"struct.std::pair"*, align 8
  %73 = alloca %"class.std::tuple.24"*, align 8
  %74 = alloca %"class.std::tuple.21"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %72, align 8
  store %"class.std::tuple.24"* %1, %"class.std::tuple.24"** %73, align 8
  store %"class.std::tuple.21"* %2, %"class.std::tuple.21"** %74, align 8
  %75 = load %"struct.std::pair"*, %"struct.std::pair"** %72, align 8
  %76 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %75, i32 0, i32 0
  %77 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %73, align 8
  %78 = call dereferenceable(4) i32* @_ZSt3getILm0EJRKiEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_(%"class.std::tuple.24"* dereferenceable(8) %77) #3
  %79 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %78) #3
  %80 = load i32, i32* %79, align 4
  store i32 %80, i32* %76, align 8
  %81 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %75, i32 0, i32 1
  store i64 0, i64* %81, align 8
  store i32 -847064942, i32* %16
  br label %82

; <label>:82:                                     ; preds = %69, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3getILm0EJRKiEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_(%"class.std::tuple.24"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"class.std::tuple.24"*, align 8
  store %"class.std::tuple.24"* %0, %"class.std::tuple.24"** %2, align 8
  %3 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %2, align 8
  %4 = bitcast %"class.std::tuple.24"* %3 to %"struct.std::_Tuple_impl.25"*
  %5 = call dereferenceable(4) i32* @_ZSt12__get_helperILm0ERKiJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE(%"struct.std::_Tuple_impl.25"* dereferenceable(8) %4) #3
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt12__get_helperILm0ERKiJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE(%"struct.std::_Tuple_impl.25"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Tuple_impl.25"*, align 8
  store %"struct.std::_Tuple_impl.25"* %0, %"struct.std::_Tuple_impl.25"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.25"*, %"struct.std::_Tuple_impl.25"** %2, align 8
  %4 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm0EJRKiEE7_M_headERS2_(%"struct.std::_Tuple_impl.25"* dereferenceable(8) %3) #3
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJRKiEEC2ES1_(%"struct.std::_Tuple_impl.25"*, i32* dereferenceable(4)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.665
  %6 = load i32, i32* @y.666
  %7 = sub i32 %5, -1162297763
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1162297763
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -694161569, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %79
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -694161569, label %19
    i32 281749304, label %39
    i32 -1842107533, label %72
    i32 -1321862346, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %79

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 281749304, i32 -1321862346
  store i32 %38, i32* %15
  br label %79

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Tuple_impl.25"*, align 8
  %41 = alloca i32*, align 8
  store %"struct.std::_Tuple_impl.25"* %0, %"struct.std::_Tuple_impl.25"** %40, align 8
  store i32* %1, i32** %41, align 8
  %42 = load %"struct.std::_Tuple_impl.25"*, %"struct.std::_Tuple_impl.25"** %40, align 8
  %43 = bitcast %"struct.std::_Tuple_impl.25"* %42 to %"struct.std::_Head_base.26"*
  %44 = load i32*, i32** %41, align 8
  call void @_ZNSt10_Head_baseILm0ERKiLb0EEC2ES1_(%"struct.std::_Head_base.26"* %43, i32* dereferenceable(4) %44)
  %45 = load i32, i32* @x.665
  %46 = load i32, i32* @y.666
  %47 = sub i32 %45, -1705457877
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -1705457877
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -1842107533, i32 -1321862346
  store i32 %71, i32* %15
  br label %79

; <label>:72:                                     ; preds = %16
  ret void

; <label>:73:                                     ; preds = %16
  %74 = alloca %"struct.std::_Tuple_impl.25"*, align 8
  %75 = alloca i32*, align 8
  store %"struct.std::_Tuple_impl.25"* %0, %"struct.std::_Tuple_impl.25"** %74, align 8
  store i32* %1, i32** %75, align 8
  %76 = load %"struct.std::_Tuple_impl.25"*, %"struct.std::_Tuple_impl.25"** %74, align 8
  %77 = bitcast %"struct.std::_Tuple_impl.25"* %76 to %"struct.std::_Head_base.26"*
  %78 = load i32*, i32** %75, align 8
  call void @_ZNSt10_Head_baseILm0ERKiLb0EEC2ES1_(%"struct.std::_Head_base.26"* %77, i32* dereferenceable(4) %78)
  store i32 281749304, i32* %15
  br label %79

; <label>:79:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s779616240.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind }
attributes #12 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
