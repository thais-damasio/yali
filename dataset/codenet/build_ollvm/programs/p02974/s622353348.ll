; ModuleID = 'Project_CodeNet_C++1400/p02974/s622353348.cpp'
source_filename = "Project_CodeNet_C++1400/p02974/s622353348.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"struct.std::piecewise_construct_t" = type { i8 }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl" = type { %"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"* }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl" = type { %"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"* }
%"class.std::unordered_map" = type { %"class.std::_Hashtable" }
%"class.std::_Hashtable" = type { %"struct.std::__detail::_Hash_node_base"**, i64, %"struct.std::__detail::_Hash_node_base", i64, %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Hash_node_base"* }
%"struct.std::__detail::_Hash_node_base" = type { %"struct.std::__detail::_Hash_node_base"* }
%"struct.std::__detail::_Prime_rehash_policy" = type { float, i64 }
%"struct.std::pair" = type { i32, i64 }
%"struct.std::__detail::_Node_iterator" = type { %"struct.std::__detail::_Node_iterator_base" }
%"struct.std::__detail::_Node_iterator_base" = type { %"struct.std::__detail::_Hash_node"* }
%"struct.std::__detail::_Hash_node" = type { %"struct.std::__detail::_Hash_node_value_base" }
%"struct.std::__detail::_Hash_node_value_base" = type { %"struct.std::__detail::_Hash_node_base", %"struct.__gnu_cxx::__aligned_buffer" }
%"struct.__gnu_cxx::__aligned_buffer" = type { %"union.std::aligned_storage<16, 8>::type" }
%"union.std::aligned_storage<16, 8>::type" = type { [16 x i8] }
%"class.std::allocator.2" = type { i8 }
%"struct.std::__detail::_Map_base" = type { i8 }
%"class.std::allocator" = type { i8 }
%"struct.std::__detail::_Hashtable_base" = type { i8 }
%"struct.std::__detail::_Insert" = type { i8 }
%"struct.std::__detail::_Rehash_base" = type { i8 }
%"struct.std::__detail::_Equality" = type { i8 }
%"struct.std::__detail::_Hashtable_alloc" = type { i8 }
%"struct.std::__detail::_Hashtable_ebo_helper.8" = type { i8 }
%"class.std::allocator.9" = type { i8 }
%"class.__gnu_cxx::new_allocator.10" = type { i8 }
%"class.std::allocator.12" = type { i8 }
%"class.__gnu_cxx::new_allocator.13" = type { i8 }
%"class.std::allocator.15" = type { i8 }
%"class.__gnu_cxx::new_allocator.16" = type { i8 }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.__gnu_cxx::new_allocator.3" = type { i8 }
%"class.__gnu_cxx::__normal_iterator" = type { %"class.std::vector.0"* }
%"class.__gnu_cxx::__normal_iterator.18" = type { %"class.std::unordered_map"* }
%"class.__gnu_cxx::__normal_iterator.19" = type { %"class.std::unordered_map"* }
%class.anon = type { %"class.std::_Hashtable"* }
%"struct.std::__detail::_Hash_code_base" = type { i8 }
%"struct.std::__detail::_Mod_range_hashing" = type { i8 }
%"struct.std::hash" = type { i8 }
%"struct.std::__detail::_Select1st" = type { i8 }
%"struct.std::__detail::_Hashtable_ebo_helper.6" = type { i8 }
%"struct.std::__detail::_Hashtable_ebo_helper.5" = type { i8 }
%"struct.std::__detail::_Hashtable_ebo_helper" = type { i8 }
%"struct.std::__detail::_ReuseOrAllocNode" = type { %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hashtable_alloc"* }
%class.anon.20 = type { %"struct.std::__detail::_ReuseOrAllocNode"* }
%"class.std::tuple" = type { %"struct.std::_Tuple_impl" }
%"struct.std::_Tuple_impl" = type { %"struct.std::_Head_base" }
%"struct.std::_Head_base" = type { i32* }
%"class.std::tuple.21" = type { i8 }
%"struct.std::pair.23" = type { i8, i64 }
%"struct.std::equal_to" = type { i8 }
%"struct.std::__detail::_Hashtable_ebo_helper.7" = type { i8 }
%"struct.std::_Index_tuple" = type { i8 }
%"struct.std::_Index_tuple.22" = type { i8 }
%"struct.std::integral_constant" = type { i8 }
%"class.std::tuple.24" = type { %"struct.std::_Tuple_impl.25" }
%"struct.std::_Tuple_impl.25" = type { %"struct.std::_Head_base.26" }
%"struct.std::_Head_base.26" = type { i32* }

$_ZNKSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE4sizeEv = comdat any

$_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm = comdat any

$_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE4sizeEv = comdat any

$_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEixEm = comdat any

$_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEE5beginEv = comdat any

$_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEE3endEv = comdat any

$_ZNSt8__detailneISt4pairIKixELb0EEEbRKNS_19_Node_iterator_baseIT_XT0_EEES8_ = comdat any

$_ZNKSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEdeEv = comdat any

$_ZNSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEppEv = comdat any

$_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEC2Ev = comdat any

$_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE6assignEmRKSB_ = comdat any

$_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2Ev = comdat any

$_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EED2Ev = comdat any

$_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE6assignEmRKS9_ = comdat any

$_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEC2Ev = comdat any

$_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEED2Ev = comdat any

$_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEixEOi = comdat any

$_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEixERS5_ = comdat any

$_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EED2Ev = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEC2Ev = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEEC2Ev = comdat any

$_ZNSt8__detail15_Hash_node_baseC2Ev = comdat any

$_ZNSt8__detail20_Prime_rehash_policyC2Ef = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EEC2Ev = comdat any

$_ZNSaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEC2Ev = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEED2Ev = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_deallocate_bucketsEv = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE19_M_deallocate_nodesEPS5_ = comdat any

$_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_beginEv = comdat any

$_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE18_M_deallocate_nodeEPS5_ = comdat any

$_ZNSt14pointer_traitsIPNSt8__detail10_Hash_nodeISt4pairIKixELb0EEEE10pointer_toERS5_ = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv = comdat any

$_ZNSaISt4pairIKixEEC2INSt8__detail10_Hash_nodeIS1_Lb0EEEEERKSaIT_E = comdat any

$_ZNSt16allocator_traitsISaISt4pairIKixEEE7destroyIS2_EEvRS3_PT_ = comdat any

$_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv = comdat any

$_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE10deallocateERS6_PS5_m = comdat any

$_ZNSaISt4pairIKixEED2Ev = comdat any

$_ZSt9addressofINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEPT_RS6_ = comdat any

$_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEPT_RS6_ = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EE6_S_getERS7_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIKixEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIKixEE7destroyIS3_EEvPT_ = comdat any

$_ZN9__gnu_cxx16__aligned_bufferISt4pairIKixEE6_M_ptrEv = comdat any

$_ZN9__gnu_cxx16__aligned_bufferISt4pairIKixEE7_M_addrEv = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEE10deallocateEPS6_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIKixEED2Ev = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_deallocate_bucketsEPPNS4_15_Hash_node_baseEm = comdat any

$_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_uses_single_bucketEPPNS4_15_Hash_node_baseE = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm = comdat any

$_ZNSt14pointer_traitsIPPNSt8__detail15_Hash_node_baseEE10pointer_toERS2_ = comdat any

$_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeISt4pairIKixELb0EEEEERKSaIT_E = comdat any

$_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE10deallocateERS3_PS2_m = comdat any

$_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev = comdat any

$_ZSt9addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_ = comdat any

$_ZSt11__addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEED2Ev = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEED2Ev = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE5beginEv = comdat any

$_ZNSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEC2EPNS_10_Hash_nodeIS3_Lb0EEE = comdat any

$_ZNSt8__detail19_Node_iterator_baseISt4pairIKixELb0EEC2EPNS_10_Hash_nodeIS3_Lb0EEE = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE3endEv = comdat any

$_ZNSt8__detail19_Node_iterator_baseISt4pairIKixELb0EE7_M_incrEv = comdat any

$_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE4_M_vEv = comdat any

$_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEEC2Ev = comdat any

$_ZSt8_DestroyIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESC_EvT_SE_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EED2Ev = comdat any

$_ZSt8_DestroyIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEvT_SE_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EEEEvT_SG_ = comdat any

$_ZSt8_DestroyISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEvPT_ = comdat any

$_ZSt11__addressofISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEPT_RSD_ = comdat any

$_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE13_M_deallocateEPSC_m = comdat any

$_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEE10deallocateERSD_PSC_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEE10deallocateEPSD_m = comdat any

$_ZNSaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEED2Ev = comdat any

$_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEC2Ev = comdat any

$_ZSt8_DestroyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEES9_EvT_SB_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EED2Ev = comdat any

$_ZSt8_DestroyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvT_SB_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEEvT_SD_ = comdat any

$_ZSt8_DestroyISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvPT_ = comdat any

$_ZSt11__addressofISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEPT_RSA_ = comdat any

$_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE13_M_deallocateEPS9_m = comdat any

$_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEE10deallocateERSA_PS9_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEE10deallocateEPSA_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEED2Ev = comdat any

$_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE14_M_fill_assignEmRKSB_ = comdat any

$_ZNKSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE8capacityEv = comdat any

$_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEC2EmRKSB_RKSC_ = comdat any

$_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_impl12_M_swap_dataERSF_ = comdat any

$_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EES2_ISE_SaISE_EEEESE_EvT_SJ_RKT0_ = comdat any

$_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE5beginEv = comdat any

$_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE3endEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEmSC_SC_ET_SE_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE15_M_erase_at_endEPSB_ = comdat any

$_ZSt6fill_nIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEmSC_ET_SE_T0_RKT1_ = comdat any

$_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EEC2EmRKSD_ = comdat any

$_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE18_M_fill_initializeEmRKSB_ = comdat any

$_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_implC2ERKSD_ = comdat any

$_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE17_M_create_storageEm = comdat any

$_ZNSaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEEC2ERKSC_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEEC2ERKSE_ = comdat any

$_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEE8allocateERSD_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEE8max_sizeEv = comdat any

$_ZSt4swapIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEvRT_SF_ = comdat any

$_ZSt4moveIRPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEONSt16remove_referenceIT_E4typeEOSG_ = comdat any

$_ZSt8__fill_aIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESC_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SJ_RKSG_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EES2_ISE_SaISE_EEEEENSt11_Niter_baseIT_E13iterator_typeESK_ = comdat any

$_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEaSERKSB_ = comdat any

$_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE8capacityEv = comdat any

$_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS9_SB_EEEEPS9_mT_SJ_ = comdat any

$_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE5beginEv = comdat any

$_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE3endEv = comdat any

$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEESB_EvT_SH_RSaIT0_E = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEENS1_IPSB_SG_EEET0_T_SL_SK_ = comdat any

$_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE5beginEv = comdat any

$_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE3endEv = comdat any

$_ZSt4copyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_ET0_T_SC_SB_ = comdat any

$_ZSt22__uninitialized_copy_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_S9_ET0_T_SC_SB_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE11_M_allocateEm = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEPSB_SB_ET0_T_SK_SJ_RSaIT1_E = comdat any

$_ZNSt16allocator_traitsISaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEE8allocateERSA_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEE8max_sizeEv = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEPSB_ET0_T_SK_SJ_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISD_SaISD_EEEEPSD_EET0_T_SM_SL_ = comdat any

$_ZN9__gnu_cxxneIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEEbRKNS_17__normal_iteratorIT_T0_EESL_ = comdat any

$_ZSt10_ConstructISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEJRKS9_EEvPT_DpOT0_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEppEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEE4baseEv = comdat any

$_ZSt7forwardIRKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEOT_RNSt16remove_referenceISC_E4typeE = comdat any

$_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEC2ERKS8_ = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEC2ERKSF_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE17_S_select_on_copyERKS7_ = comdat any

$_ZNKSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEEC2IS6_EEOT_ = comdat any

$_ZNSaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEED2Ev = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_assignIZNSF_C1ERKSF_EUlPKNS4_10_Hash_nodeIS2_Lb0EEEE_EEvSI_RKT_ = comdat any

$_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE37select_on_container_copy_constructionERKS6_ = comdat any

$_ZNSaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEC2ERKS5_ = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEC2ERKS7_ = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EE7_S_cgetERKS7_ = comdat any

$_ZSt7forwardISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEEOT_RNSt16remove_referenceIS7_E4typeE = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EEC2IS6_EEOT_ = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_allocate_bucketsEm = comdat any

$_ZZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEC1ERKSF_ENKUlPKNS4_10_Hash_nodeIS2_Lb0EEEE_clESL_ = comdat any

$_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE12_M_copy_codeEPNS_10_Hash_nodeIS3_Lb0EEEPKSB_ = comdat any

$_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexEPNS4_10_Hash_nodeIS2_Lb0EEE = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE19_M_allocate_bucketsEm = comdat any

$_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8max_sizeEv = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE16_M_allocate_nodeIJRKS4_EEEPS5_DpOT_ = comdat any

$_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKixEE4_M_vEv = comdat any

$_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE8allocateERS6_m = comdat any

$_ZNSt8__detail10_Hash_nodeISt4pairIKixELb0EEC2Ev = comdat any

$_ZNSt16allocator_traitsISaISt4pairIKixEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_ = comdat any

$_ZSt7forwardIRKSt4pairIKixEEOT_RNSt16remove_referenceIS5_E4typeE = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEE8max_sizeEv = comdat any

$_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIKixEE9constructIS3_JRKS3_EEEvPT_DpOT0_ = comdat any

$_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKixEE6_M_ptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKixEE7_M_addrEv = comdat any

$_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE15_M_bucket_indexEPKNS_10_Hash_nodeIS3_Lb0EEEm = comdat any

$_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE5_M_h2Ev = comdat any

$_ZNKSt8__detail18_Mod_range_hashingclEmm = comdat any

$_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE5_M_h1Ev = comdat any

$_ZNKSt4hashIiEclEi = comdat any

$_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE10_M_extractEv = comdat any

$_ZNKSt8__detail10_Select1stclIRKSt4pairIKixEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS7_ = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi2ENS_18_Mod_range_hashingELb1EE7_S_cgetERKS2_ = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi1ESt4hashIiELb1EE7_S_cgetERKS3_ = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_10_Select1stELb1EE7_S_cgetERKS2_ = comdat any

$_ZSt3getILm0EKixERKNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERKS5_ = comdat any

$_ZNSt10__pair_getILm0EE11__const_getIKixEERKT_RKSt4pairIS3_T0_E = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEC2ERKSC_ = comdat any

$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEEvT_SH_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISD_SaISD_EEEEEEvT_SJ_ = comdat any

$_ZN9__gnu_cxxneIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEEbRKNS_17__normal_iteratorIT_T0_EESK_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEppEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEE4baseEv = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEENS1_IPSB_SG_EEET1_T0_SL_SK_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEENSt11_Miter_baseIT_E13iterator_typeESJ_ = comdat any

$_ZSt13__copy_move_aILb0EPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEPS9_ET1_T0_SE_SD_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEENSt11_Niter_baseIT_E13iterator_typeESJ_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEENSt11_Niter_baseIT_E13iterator_typeESI_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEC2ERKSB_ = comdat any

$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEPSC_EET0_T_SH_SG_ = comdat any

$_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEaSERKS8_ = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEaSERKSF_ = comdat any

$_ZNKSt8__detail20_Prime_rehash_policy8_M_stateEv = comdat any

$_ZNSt8__detail17_ReuseOrAllocNodeISaINS_10_Hash_nodeISt4pairIKixELb0EEEEEC2EPS5_RNS_16_Hashtable_allocIS6_EE = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_assignIZNSF_aSERKSF_EUlPKNS4_10_Hash_nodeIS2_Lb0EEEE0_EEvSI_RKT_ = comdat any

$_ZNSt8__detail17_ReuseOrAllocNodeISaINS_10_Hash_nodeISt4pairIKixELb0EEEEED2Ev = comdat any

$_ZNSt8__detail20_Prime_rehash_policy8_M_resetEm = comdat any

$_ZZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEaSERKSF_ENKUlPKNS4_10_Hash_nodeIS2_Lb0EEEE0_clESL_ = comdat any

$_ZNKSt8__detail17_ReuseOrAllocNodeISaINS_10_Hash_nodeISt4pairIKixELb0EEEEEclIRKS4_EEPS5_OT_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEELb1EE7_S_baseESH_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEELb1EE7_S_baseESG_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEELb0EE7_S_baseESH_ = comdat any

$_ZSt14__copy_move_a2ILb0EPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_ET1_T0_SC_SB_ = comdat any

$_ZSt12__miter_baseIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEENSt11_Miter_baseIT_E13iterator_typeESC_ = comdat any

$_ZSt13__copy_move_aILb0EPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_ET1_T0_SC_SB_ = comdat any

$_ZSt12__niter_baseIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEENSt11_Niter_baseIT_E13iterator_typeESC_ = comdat any

$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESD_EET0_T_SF_SE_ = comdat any

$_ZNSt10_Iter_baseIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEELb0EE7_S_baseESA_ = comdat any

$_ZSt18uninitialized_copyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_ET0_T_SC_SB_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESC_EET0_T_SE_SD_ = comdat any

$_ZSt10_ConstructISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEJRS9_EEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEOT_RNSt16remove_referenceISB_E4typeE = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EES2_ISE_SaISE_EEEELb1EE7_S_baseESI_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EES1_ISD_SaISD_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EES1_ISD_SaISD_EEEC2ERKSE_ = comdat any

$_ZSt20uninitialized_fill_nIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEmSC_ET_SE_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EEmSE_EET_SG_T0_RKT1_ = comdat any

$_ZSt10_ConstructISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEJRKSC_EEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEOT_RNSt16remove_referenceISF_E4typeE = comdat any

$_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2ERKSB_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEE17_S_select_on_copyERKSB_ = comdat any

$_ZNKSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2EmRKSA_ = comdat any

$_ZNSaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEED2Ev = comdat any

$_ZNSt16allocator_traitsISaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEE37select_on_container_copy_constructionERKSA_ = comdat any

$_ZNSaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEC2ERKS9_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEC2ERKSB_ = comdat any

$_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_implC2ERKSA_ = comdat any

$_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE17_M_create_storageEm = comdat any

$_ZSt10__fill_n_aIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEmSC_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeESH_T0_RKSG_ = comdat any

$_ZSt12__niter_baseIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEENSt11_Niter_baseIT_E13iterator_typeESF_ = comdat any

$_ZNSt10_Iter_baseIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EELb0EE7_S_baseESD_ = comdat any

$_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE14_M_fill_assignEmRKS9_ = comdat any

$_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2EmRKS9_RKSA_ = comdat any

$_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_impl12_M_swap_dataERSC_ = comdat any

$_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEESB_EvT_SH_RKT0_ = comdat any

$_ZSt24__uninitialized_fill_n_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_S9_ET_SB_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE15_M_erase_at_endEPS9_ = comdat any

$_ZSt6fill_nIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_ET_SB_T0_RKT1_ = comdat any

$_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE18_M_fill_initializeEmRKS9_ = comdat any

$_ZSt4swapIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvRT_SC_ = comdat any

$_ZSt4moveIRPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEONSt16remove_referenceIT_E4typeEOSD_ = comdat any

$_ZSt8__fill_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEES9_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SG_RKSD_ = comdat any

$_ZSt20uninitialized_fill_nIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_ET_SB_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmSB_EET_SD_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeESE_T0_RKSD_ = comdat any

$_ZNSt8__detail9_Map_baseIiSt4pairIKixESaIS3_ENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb0ELb0ELb1EEELb1EEixEOi = comdat any

$_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE12_M_hash_codeERS2_ = comdat any

$_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexERS1_m = comdat any

$_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE12_M_find_nodeEmRS1_m = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJOiEESC_IJEEEEEPS5_DpOT_ = comdat any

$_ZSt16forward_as_tupleIJiEESt5tupleIJDpOT_EES3_ = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNS4_10_Hash_nodeIS2_Lb0EEE = comdat any

$_ZNKSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEptEv = comdat any

$_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE15_M_bucket_indexERS2_mm = comdat any

$_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS1_m = comdat any

$_ZNKSt8__detail15_Hashtable_baseIiSt4pairIKixENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_equalsERS2_mPNS_10_Hash_nodeIS3_Lb0EEE = comdat any

$_ZNSt8__detail13_Equal_helperIiSt4pairIKixENS_10_Select1stESt8equal_toIiEmLb0EE9_S_equalsERKS6_RKS4_RS2_mPNS_10_Hash_nodeIS3_Lb0EEE = comdat any

$_ZNKSt8__detail15_Hashtable_baseIiSt4pairIKixENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE5_M_eqEv = comdat any

$_ZNKSt8equal_toIiEclERKiS2_ = comdat any

$_ZNKSt8__detail10_Select1stclIRSt4pairIKixEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS6_ = comdat any

$_ZSt3getILm0EKixERNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERS5_ = comdat any

$_ZSt7forwardIRSt4pairIKixEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZNSt10__pair_getILm0EE5__getIKixEERT_RSt4pairIS3_T0_E = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toIiELb1EE7_S_cgetERKS3_ = comdat any

$_ZNSt16allocator_traitsISaISt4pairIKixEEE9constructIS2_JRKSt21piecewise_construct_tSt5tupleIJOiEES9_IJEEEEEvRS3_PT_DpOT0_ = comdat any

$_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZSt7forwardISt5tupleIJOiEEEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIKixEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJOiEES9_IJEEEEEvPT_DpOT0_ = comdat any

$_ZNSt5tupleIJOiEEC2EOS1_ = comdat any

$_ZNSt4pairIKixEC2IJOiEJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE = comdat any

$_ZNSt11_Tuple_implILm0EJOiEEC2EOS1_ = comdat any

$_ZSt7forwardIOiEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZNSt11_Tuple_implILm0EJOiEE7_M_headERS1_ = comdat any

$_ZNSt10_Head_baseILm0EOiLb0EEC2IiEEOT_ = comdat any

$_ZNSt10_Head_baseILm0EOiLb0EE7_M_headERS1_ = comdat any

$_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZNSt4pairIKixEC2IJOiEJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE = comdat any

$_ZSt3getILm0EJOiEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS5_ = comdat any

$_ZSt12__get_helperILm0EOiJEERT0_RSt11_Tuple_implIXT_EJS1_DpT1_EE = comdat any

$_ZNSt5tupleIJOiEEC2IJiEvEEDpOT_ = comdat any

$_ZNSt11_Tuple_implILm0EJOiEEC2IiEEOT_ = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_rehashEmRKm = comdat any

$_ZNSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE10_M_extractEv = comdat any

$_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE13_M_store_codeEPNS_10_Hash_nodeIS3_Lb0EEEm = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE22_M_insert_bucket_beginEmPNS4_10_Hash_nodeIS2_Lb0EEE = comdat any

$_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_10_Select1stELb1EE6_S_getERS2_ = comdat any

$_ZNSt8__detail9_Map_baseIiSt4pairIKixESaIS3_ENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb0ELb0ELb1EEELb1EEixERS2_ = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS3_EESC_IJEEEEEPS5_DpOT_ = comdat any

$_ZNSt5tupleIJRKiEEC2ES1_ = comdat any

$_ZNSt16allocator_traitsISaISt4pairIKixEEE9constructIS2_JRKSt21piecewise_construct_tSt5tupleIJRS1_EES9_IJEEEEEvRS3_PT_DpOT0_ = comdat any

$_ZSt7forwardISt5tupleIJRKiEEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIKixEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJRS2_EES9_IJEEEEEvPT_DpOT0_ = comdat any

$_ZNSt5tupleIJRKiEEC2EOS2_ = comdat any

$_ZNSt4pairIKixEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE = comdat any

$_ZNSt11_Tuple_implILm0EJRKiEEC2EOS2_ = comdat any

$_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt11_Tuple_implILm0EJRKiEE7_M_headERS2_ = comdat any

$_ZNSt10_Head_baseILm0ERKiLb0EEC2ES1_ = comdat any

$_ZNSt10_Head_baseILm0ERKiLb0EE7_M_headERS2_ = comdat any

$_ZNSt4pairIKixEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE = comdat any

$_ZSt3getILm0EJRKiEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_ = comdat any

$_ZSt12__get_helperILm0ERKiJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm0EJRKiEEC2ES1_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [2 x i8] c" \00", align 1
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZStL19piecewise_construct = internal constant %"struct.std::piecewise_construct_t" undef, align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s622353348.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0
@x.159 = common global i32 0
@y.160 = common global i32 0
@x.161 = common global i32 0
@y.162 = common global i32 0
@x.163 = common global i32 0
@y.164 = common global i32 0
@x.165 = common global i32 0
@y.166 = common global i32 0
@x.167 = common global i32 0
@y.168 = common global i32 0
@x.169 = common global i32 0
@y.170 = common global i32 0
@x.171 = common global i32 0
@y.172 = common global i32 0
@x.173 = common global i32 0
@y.174 = common global i32 0
@x.175 = common global i32 0
@y.176 = common global i32 0
@x.177 = common global i32 0
@y.178 = common global i32 0
@x.179 = common global i32 0
@y.180 = common global i32 0
@x.181 = common global i32 0
@y.182 = common global i32 0
@x.183 = common global i32 0
@y.184 = common global i32 0
@x.185 = common global i32 0
@y.186 = common global i32 0
@x.187 = common global i32 0
@y.188 = common global i32 0
@x.189 = common global i32 0
@y.190 = common global i32 0
@x.191 = common global i32 0
@y.192 = common global i32 0
@x.193 = common global i32 0
@y.194 = common global i32 0
@x.195 = common global i32 0
@y.196 = common global i32 0
@x.197 = common global i32 0
@y.198 = common global i32 0
@x.199 = common global i32 0
@y.200 = common global i32 0
@x.201 = common global i32 0
@y.202 = common global i32 0
@x.203 = common global i32 0
@y.204 = common global i32 0
@x.205 = common global i32 0
@y.206 = common global i32 0
@x.207 = common global i32 0
@y.208 = common global i32 0
@x.209 = common global i32 0
@y.210 = common global i32 0
@x.211 = common global i32 0
@y.212 = common global i32 0
@x.213 = common global i32 0
@y.214 = common global i32 0
@x.215 = common global i32 0
@y.216 = common global i32 0
@x.217 = common global i32 0
@y.218 = common global i32 0
@x.219 = common global i32 0
@y.220 = common global i32 0
@x.221 = common global i32 0
@y.222 = common global i32 0
@x.223 = common global i32 0
@y.224 = common global i32 0
@x.225 = common global i32 0
@y.226 = common global i32 0
@x.227 = common global i32 0
@y.228 = common global i32 0
@x.229 = common global i32 0
@y.230 = common global i32 0
@x.231 = common global i32 0
@y.232 = common global i32 0
@x.233 = common global i32 0
@y.234 = common global i32 0
@x.235 = common global i32 0
@y.236 = common global i32 0
@x.237 = common global i32 0
@y.238 = common global i32 0
@x.239 = common global i32 0
@y.240 = common global i32 0
@x.241 = common global i32 0
@y.242 = common global i32 0
@x.243 = common global i32 0
@y.244 = common global i32 0
@x.245 = common global i32 0
@y.246 = common global i32 0
@x.247 = common global i32 0
@y.248 = common global i32 0
@x.249 = common global i32 0
@y.250 = common global i32 0
@x.251 = common global i32 0
@y.252 = common global i32 0
@x.253 = common global i32 0
@y.254 = common global i32 0
@x.255 = common global i32 0
@y.256 = common global i32 0
@x.257 = common global i32 0
@y.258 = common global i32 0
@x.259 = common global i32 0
@y.260 = common global i32 0
@x.261 = common global i32 0
@y.262 = common global i32 0
@x.263 = common global i32 0
@y.264 = common global i32 0
@x.265 = common global i32 0
@y.266 = common global i32 0
@x.267 = common global i32 0
@y.268 = common global i32 0
@x.269 = common global i32 0
@y.270 = common global i32 0
@x.271 = common global i32 0
@y.272 = common global i32 0
@x.273 = common global i32 0
@y.274 = common global i32 0
@x.275 = common global i32 0
@y.276 = common global i32 0
@x.277 = common global i32 0
@y.278 = common global i32 0
@x.279 = common global i32 0
@y.280 = common global i32 0
@x.281 = common global i32 0
@y.282 = common global i32 0
@x.283 = common global i32 0
@y.284 = common global i32 0
@x.285 = common global i32 0
@y.286 = common global i32 0
@x.287 = common global i32 0
@y.288 = common global i32 0
@x.289 = common global i32 0
@y.290 = common global i32 0
@x.291 = common global i32 0
@y.292 = common global i32 0
@x.293 = common global i32 0
@y.294 = common global i32 0
@x.295 = common global i32 0
@y.296 = common global i32 0
@x.297 = common global i32 0
@y.298 = common global i32 0
@x.299 = common global i32 0
@y.300 = common global i32 0
@x.301 = common global i32 0
@y.302 = common global i32 0
@x.303 = common global i32 0
@y.304 = common global i32 0
@x.305 = common global i32 0
@y.306 = common global i32 0
@x.307 = common global i32 0
@y.308 = common global i32 0
@x.309 = common global i32 0
@y.310 = common global i32 0
@x.311 = common global i32 0
@y.312 = common global i32 0
@x.313 = common global i32 0
@y.314 = common global i32 0
@x.315 = common global i32 0
@y.316 = common global i32 0
@x.317 = common global i32 0
@y.318 = common global i32 0
@x.319 = common global i32 0
@y.320 = common global i32 0
@x.321 = common global i32 0
@y.322 = common global i32 0
@x.323 = common global i32 0
@y.324 = common global i32 0
@x.325 = common global i32 0
@y.326 = common global i32 0
@x.327 = common global i32 0
@y.328 = common global i32 0
@x.329 = common global i32 0
@y.330 = common global i32 0
@x.331 = common global i32 0
@y.332 = common global i32 0
@x.333 = common global i32 0
@y.334 = common global i32 0
@x.335 = common global i32 0
@y.336 = common global i32 0
@x.337 = common global i32 0
@y.338 = common global i32 0
@x.339 = common global i32 0
@y.340 = common global i32 0
@x.341 = common global i32 0
@y.342 = common global i32 0
@x.343 = common global i32 0
@y.344 = common global i32 0
@x.345 = common global i32 0
@y.346 = common global i32 0
@x.347 = common global i32 0
@y.348 = common global i32 0
@x.349 = common global i32 0
@y.350 = common global i32 0
@x.351 = common global i32 0
@y.352 = common global i32 0
@x.353 = common global i32 0
@y.354 = common global i32 0
@x.355 = common global i32 0
@y.356 = common global i32 0
@x.357 = common global i32 0
@y.358 = common global i32 0
@x.359 = common global i32 0
@y.360 = common global i32 0
@x.361 = common global i32 0
@y.362 = common global i32 0
@x.363 = common global i32 0
@y.364 = common global i32 0
@x.365 = common global i32 0
@y.366 = common global i32 0
@x.367 = common global i32 0
@y.368 = common global i32 0
@x.369 = common global i32 0
@y.370 = common global i32 0
@x.371 = common global i32 0
@y.372 = common global i32 0
@x.373 = common global i32 0
@y.374 = common global i32 0
@x.375 = common global i32 0
@y.376 = common global i32 0
@x.377 = common global i32 0
@y.378 = common global i32 0
@x.379 = common global i32 0
@y.380 = common global i32 0
@x.381 = common global i32 0
@y.382 = common global i32 0
@x.383 = common global i32 0
@y.384 = common global i32 0
@x.385 = common global i32 0
@y.386 = common global i32 0
@x.387 = common global i32 0
@y.388 = common global i32 0
@x.389 = common global i32 0
@y.390 = common global i32 0
@x.391 = common global i32 0
@y.392 = common global i32 0
@x.393 = common global i32 0
@y.394 = common global i32 0
@x.395 = common global i32 0
@y.396 = common global i32 0
@x.397 = common global i32 0
@y.398 = common global i32 0
@x.399 = common global i32 0
@y.400 = common global i32 0
@x.401 = common global i32 0
@y.402 = common global i32 0
@x.403 = common global i32 0
@y.404 = common global i32 0
@x.405 = common global i32 0
@y.406 = common global i32 0
@x.407 = common global i32 0
@y.408 = common global i32 0
@x.409 = common global i32 0
@y.410 = common global i32 0
@x.411 = common global i32 0
@y.412 = common global i32 0
@x.413 = common global i32 0
@y.414 = common global i32 0
@x.415 = common global i32 0
@y.416 = common global i32 0
@x.417 = common global i32 0
@y.418 = common global i32 0
@x.419 = common global i32 0
@y.420 = common global i32 0
@x.421 = common global i32 0
@y.422 = common global i32 0
@x.423 = common global i32 0
@y.424 = common global i32 0
@x.425 = common global i32 0
@y.426 = common global i32 0
@x.427 = common global i32 0
@y.428 = common global i32 0
@x.429 = common global i32 0
@y.430 = common global i32 0
@x.431 = common global i32 0
@y.432 = common global i32 0
@x.433 = common global i32 0
@y.434 = common global i32 0
@x.435 = common global i32 0
@y.436 = common global i32 0
@x.437 = common global i32 0
@y.438 = common global i32 0
@x.439 = common global i32 0
@y.440 = common global i32 0
@x.441 = common global i32 0
@y.442 = common global i32 0
@x.443 = common global i32 0
@y.444 = common global i32 0
@x.445 = common global i32 0
@y.446 = common global i32 0
@x.447 = common global i32 0
@y.448 = common global i32 0
@x.449 = common global i32 0
@y.450 = common global i32 0
@x.451 = common global i32 0
@y.452 = common global i32 0
@x.453 = common global i32 0
@y.454 = common global i32 0
@x.455 = common global i32 0
@y.456 = common global i32 0
@x.457 = common global i32 0
@y.458 = common global i32 0
@x.459 = common global i32 0
@y.460 = common global i32 0
@x.461 = common global i32 0
@y.462 = common global i32 0
@x.463 = common global i32 0
@y.464 = common global i32 0
@x.465 = common global i32 0
@y.466 = common global i32 0
@x.467 = common global i32 0
@y.468 = common global i32 0
@x.469 = common global i32 0
@y.470 = common global i32 0
@x.471 = common global i32 0
@y.472 = common global i32 0
@x.473 = common global i32 0
@y.474 = common global i32 0
@x.475 = common global i32 0
@y.476 = common global i32 0
@x.477 = common global i32 0
@y.478 = common global i32 0
@x.479 = common global i32 0
@y.480 = common global i32 0
@x.481 = common global i32 0
@y.482 = common global i32 0
@x.483 = common global i32 0
@y.484 = common global i32 0
@x.485 = common global i32 0
@y.486 = common global i32 0
@x.487 = common global i32 0
@y.488 = common global i32 0
@x.489 = common global i32 0
@y.490 = common global i32 0
@x.491 = common global i32 0
@y.492 = common global i32 0
@x.493 = common global i32 0
@y.494 = common global i32 0
@x.495 = common global i32 0
@y.496 = common global i32 0
@x.497 = common global i32 0
@y.498 = common global i32 0
@x.499 = common global i32 0
@y.500 = common global i32 0
@x.501 = common global i32 0
@y.502 = common global i32 0
@x.503 = common global i32 0
@y.504 = common global i32 0
@x.505 = common global i32 0
@y.506 = common global i32 0
@x.507 = common global i32 0
@y.508 = common global i32 0
@x.509 = common global i32 0
@y.510 = common global i32 0
@x.511 = common global i32 0
@y.512 = common global i32 0
@x.513 = common global i32 0
@y.514 = common global i32 0
@x.515 = common global i32 0
@y.516 = common global i32 0
@x.517 = common global i32 0
@y.518 = common global i32 0
@x.519 = common global i32 0
@y.520 = common global i32 0
@x.521 = common global i32 0
@y.522 = common global i32 0
@x.523 = common global i32 0
@y.524 = common global i32 0
@x.525 = common global i32 0
@y.526 = common global i32 0
@x.527 = common global i32 0
@y.528 = common global i32 0
@x.529 = common global i32 0
@y.530 = common global i32 0
@x.531 = common global i32 0
@y.532 = common global i32 0
@x.533 = common global i32 0
@y.534 = common global i32 0
@x.535 = common global i32 0
@y.536 = common global i32 0
@x.537 = common global i32 0
@y.538 = common global i32 0
@x.539 = common global i32 0
@y.540 = common global i32 0
@x.541 = common global i32 0
@y.542 = common global i32 0
@x.543 = common global i32 0
@y.544 = common global i32 0
@x.545 = common global i32 0
@y.546 = common global i32 0
@x.547 = common global i32 0
@y.548 = common global i32 0
@x.549 = common global i32 0
@y.550 = common global i32 0
@x.551 = common global i32 0
@y.552 = common global i32 0
@x.553 = common global i32 0
@y.554 = common global i32 0
@x.555 = common global i32 0
@y.556 = common global i32 0
@x.557 = common global i32 0
@y.558 = common global i32 0
@x.559 = common global i32 0
@y.560 = common global i32 0
@x.561 = common global i32 0
@y.562 = common global i32 0
@x.563 = common global i32 0
@y.564 = common global i32 0
@x.565 = common global i32 0
@y.566 = common global i32 0
@x.567 = common global i32 0
@y.568 = common global i32 0
@x.569 = common global i32 0
@y.570 = common global i32 0
@x.571 = common global i32 0
@y.572 = common global i32 0
@x.573 = common global i32 0
@y.574 = common global i32 0
@x.575 = common global i32 0
@y.576 = common global i32 0
@x.577 = common global i32 0
@y.578 = common global i32 0
@x.579 = common global i32 0
@y.580 = common global i32 0
@x.581 = common global i32 0
@y.582 = common global i32 0
@x.583 = common global i32 0
@y.584 = common global i32 0
@x.585 = common global i32 0
@y.586 = common global i32 0
@x.587 = common global i32 0
@y.588 = common global i32 0
@x.589 = common global i32 0
@y.590 = common global i32 0
@x.591 = common global i32 0
@y.592 = common global i32 0
@x.593 = common global i32 0
@y.594 = common global i32 0
@x.595 = common global i32 0
@y.596 = common global i32 0
@x.597 = common global i32 0
@y.598 = common global i32 0
@x.599 = common global i32 0
@y.600 = common global i32 0
@x.601 = common global i32 0
@y.602 = common global i32 0
@x.603 = common global i32 0
@y.604 = common global i32 0
@x.605 = common global i32 0
@y.606 = common global i32 0
@x.607 = common global i32 0
@y.608 = common global i32 0
@x.609 = common global i32 0
@y.610 = common global i32 0
@x.611 = common global i32 0
@y.612 = common global i32 0
@x.613 = common global i32 0
@y.614 = common global i32 0
@x.615 = common global i32 0
@y.616 = common global i32 0
@x.617 = common global i32 0
@y.618 = common global i32 0
@x.619 = common global i32 0
@y.620 = common global i32 0
@x.621 = common global i32 0
@y.622 = common global i32 0
@x.623 = common global i32 0
@y.624 = common global i32 0
@x.625 = common global i32 0
@y.626 = common global i32 0
@x.627 = common global i32 0
@y.628 = common global i32 0
@x.629 = common global i32 0
@y.630 = common global i32 0
@x.631 = common global i32 0
@y.632 = common global i32 0
@x.633 = common global i32 0
@y.634 = common global i32 0
@x.635 = common global i32 0
@y.636 = common global i32 0
@x.637 = common global i32 0
@y.638 = common global i32 0
@x.639 = common global i32 0
@y.640 = common global i32 0
@x.641 = common global i32 0
@y.642 = common global i32 0
@x.643 = common global i32 0
@y.644 = common global i32 0
@x.645 = common global i32 0
@y.646 = common global i32 0
@x.647 = common global i32 0
@y.648 = common global i32 0
@x.649 = common global i32 0
@y.650 = common global i32 0
@x.651 = common global i32 0
@y.652 = common global i32 0
@x.653 = common global i32 0
@y.654 = common global i32 0
@x.655 = common global i32 0
@y.656 = common global i32 0
@x.657 = common global i32 0
@y.658 = common global i32 0
@x.659 = common global i32 0
@y.660 = common global i32 0
@x.661 = common global i32 0
@y.662 = common global i32 0
@x.663 = common global i32 0
@y.664 = common global i32 0
@x.665 = common global i32 0
@y.666 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define void @_Z9limit_addRxx(i64* dereferenceable(8), i64) #4 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1
  %6 = load i32, i32* @y.2
  %7 = sub i32 %5, -272636286
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -272636286
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1472422645, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %102
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1472422645, label %19
    i32 -2106652622, label %27
    i32 -229593460, label %54
    i32 -1439220737, label %55
  ]

; <label>:18:                                     ; preds = %16
  br label %102

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -2106652622, i32 -1439220737
  store i32 %26, i32* %15
  br label %102

; <label>:27:                                     ; preds = %16
  %28 = alloca i64*, align 8
  %29 = alloca i64, align 8
  store i64* %0, i64** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load i64*, i64** %28, align 8
  %31 = load i64, i64* %30, align 8
  %32 = load i64, i64* %29, align 8
  %33 = sub i64 %31, 7535435389784154686
  %34 = add i64 %33, %32
  %35 = add i64 %34, 7535435389784154686
  %36 = add nsw i64 %31, %32
  %37 = srem i64 %35, 1000000007
  %38 = load i64*, i64** %28, align 8
  store i64 %37, i64* %38, align 8
  %39 = load i32, i32* @x.1
  %40 = load i32, i32* @y.2
  %41 = add i32 %39, -1964055817
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, -1964055817
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -229593460, i32 -1439220737
  store i32 %53, i32* %15
  br label %102

; <label>:54:                                     ; preds = %16
  ret void

; <label>:55:                                     ; preds = %16
  %56 = alloca i64*, align 8
  %57 = alloca i64, align 8
  store i64* %0, i64** %56, align 8
  store i64 %1, i64* %57, align 8
  %58 = load i64*, i64** %56, align 8
  %59 = load i64, i64* %58, align 8
  %60 = load i64, i64* %57, align 8
  %61 = add i64 %59, 1720021582942522907
  %62 = sub i64 %61, %60
  %63 = sub i64 %62, 1720021582942522907
  %64 = sub i64 %59, %60
  %65 = mul i64 %63, %60
  %66 = shl i64 %59, %60
  %67 = shl i64 %59, %60
  %68 = sub i64 0, %59
  %69 = add i64 0, %68
  %70 = sub i64 0, %59
  %71 = sub i64 0, %69
  %72 = sub i64 0, %60
  %73 = add i64 %71, %72
  %74 = sub i64 0, %73
  %75 = add i64 %69, %60
  %76 = shl i64 %59, %60
  %77 = sub i64 0, %59
  %78 = add i64 0, %77
  %79 = sub i64 0, %59
  %80 = sub i64 0, %60
  %81 = sub i64 %78, %80
  %82 = add i64 %78, %60
  %83 = sub i64 0, %60
  %84 = sub i64 %59, %83
  %85 = add nsw i64 %59, %60
  %86 = shl i64 %84, 1000000007
  %87 = shl i64 %84, 1000000007
  %88 = sub i64 0, %84
  %89 = add i64 0, %88
  %90 = sub i64 0, %84
  %91 = add i64 %89, -791209712475201159
  %92 = add i64 %91, 1000000007
  %93 = sub i64 %92, -791209712475201159
  %94 = add i64 %89, 1000000007
  %95 = sub i64 %84, 7674375950642898036
  %96 = sub i64 %95, 1000000007
  %97 = add i64 %96, 7674375950642898036
  %98 = sub i64 %84, 1000000007
  %99 = mul i64 %97, 1000000007
  %100 = srem i64 %84, 1000000007
  %101 = load i64*, i64** %56, align 8
  store i64 %100, i64* %101, align 8
  store i32 -2106652622, i32* %15
  br label %102

; <label>:102:                                    ; preds = %55, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define void @_Z4dumpRSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE(%"class.std::vector"* dereferenceable(24)) #0 {
  %2 = alloca i1
  %3 = alloca i64*
  %4 = alloca i32*
  %5 = alloca %"struct.std::pair"*
  %6 = alloca %"struct.std::__detail::_Node_iterator"*
  %7 = alloca %"struct.std::__detail::_Node_iterator"*
  %8 = alloca %"class.std::unordered_map"**
  %9 = alloca i64*
  %10 = alloca i32*
  %11 = alloca i32*
  %12 = alloca i32*
  %13 = alloca %"class.std::vector"**
  %14 = alloca i1
  %15 = alloca i1
  %16 = load i32, i32* @x.3
  %17 = load i32, i32* @y.4
  %18 = sub i32 %16, 1865400261
  %19 = sub i32 %18, 1
  %20 = add i32 %19, 1865400261
  %21 = sub i32 %16, 1
  %22 = mul i32 %16, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  store i1 %24, i1* %15
  %25 = icmp slt i32 %17, 10
  store i1 %25, i1* %14
  %26 = alloca i32
  store i32 78812876, i32* %26
  br label %27

; <label>:27:                                     ; preds = %1, %315
  %28 = load i32, i32* %26
  switch i32 %28, label %29 [
    i32 78812876, label %30
    i32 -1964568244, label %50
    i32 -793169783, label %83
    i32 -1333304074, label %84
    i32 530661784, label %91
    i32 -1311023187, label %102
    i32 2074898887, label %130
    i32 -761240155, label %163
    i32 -614003497, label %166
    i32 -672264352, label %189
    i32 1518581133, label %196
    i32 1575955352, label %226
    i32 499356694, label %229
    i32 -1855132485, label %245
    i32 406743058, label %273
    i32 -1587518638, label %274
    i32 -2133782339, label %283
    i32 -181419865, label %284
    i32 763465742, label %291
    i32 -844957482, label %292
    i32 198321188, label %307
    i32 1998217508, label %314
  ]

; <label>:29:                                     ; preds = %27
  br label %315

; <label>:30:                                     ; preds = %27
  %31 = load volatile i1, i1* %15
  %32 = load volatile i1, i1* %14
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 false, true
  %36 = and i1 %33, false
  %37 = and i1 %31, %35
  %38 = and i1 %34, false
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 false, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  %49 = select i1 %47, i32 -1964568244, i32 -844957482
  store i32 %49, i32* %26
  br label %315

; <label>:50:                                     ; preds = %27
  %51 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"** %51, %"class.std::vector"*** %13
  %52 = alloca i32, align 4
  store i32* %52, i32** %12
  %53 = alloca i32, align 4
  store i32* %53, i32** %11
  %54 = alloca i32, align 4
  store i32* %54, i32** %10
  %55 = alloca i64, align 8
  store i64* %55, i64** %9
  %56 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"** %56, %"class.std::unordered_map"*** %8
  %57 = alloca %"struct.std::__detail::_Node_iterator", align 8
  store %"struct.std::__detail::_Node_iterator"* %57, %"struct.std::__detail::_Node_iterator"** %7
  %58 = alloca %"struct.std::__detail::_Node_iterator", align 8
  store %"struct.std::__detail::_Node_iterator"* %58, %"struct.std::__detail::_Node_iterator"** %6
  %59 = alloca %"struct.std::pair", align 8
  store %"struct.std::pair"* %59, %"struct.std::pair"** %5
  %60 = alloca i32, align 4
  store i32* %60, i32** %4
  %61 = alloca i64, align 8
  store i64* %61, i64** %3
  %62 = load volatile %"class.std::vector"**, %"class.std::vector"*** %13
  store %"class.std::vector"* %0, %"class.std::vector"** %62, align 8
  %63 = load volatile %"class.std::vector"**, %"class.std::vector"*** %13
  %64 = load %"class.std::vector"*, %"class.std::vector"** %63, align 8
  %65 = call i64 @_ZNKSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE4sizeEv(%"class.std::vector"* %64) #3
  %66 = trunc i64 %65 to i32
  %67 = load volatile i32*, i32** %12
  store i32 %66, i32* %67, align 4
  %68 = load volatile i32*, i32** %11
  store i32 0, i32* %68, align 4
  %69 = load i32, i32* @x.3
  %70 = load i32, i32* @y.4
  %71 = sub i32 0, 1
  %72 = add i32 %69, %71
  %73 = sub i32 %69, 1
  %74 = mul i32 %69, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %70, 10
  %78 = and i1 %76, %77
  %79 = xor i1 %76, %77
  %80 = or i1 %78, %79
  %81 = or i1 %76, %77
  %82 = select i1 %80, i32 -793169783, i32 -844957482
  store i32 %82, i32* %26
  br label %315

; <label>:83:                                     ; preds = %27
  store i32 -1333304074, i32* %26
  br label %315

; <label>:84:                                     ; preds = %27
  %85 = load volatile i32*, i32** %11
  %86 = load i32, i32* %85, align 4
  %87 = load volatile i32*, i32** %12
  %88 = load i32, i32* %87, align 4
  %89 = icmp slt i32 %86, %88
  %90 = select i1 %89, i32 530661784, i32 763465742
  store i32 %90, i32* %26
  br label %315

; <label>:91:                                     ; preds = %27
  %92 = load volatile %"class.std::vector"**, %"class.std::vector"*** %13
  %93 = load %"class.std::vector"*, %"class.std::vector"** %92, align 8
  %94 = load volatile i32*, i32** %11
  %95 = load i32, i32* %94, align 4
  %96 = sext i32 %95 to i64
  %97 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm(%"class.std::vector"* %93, i64 %96) #3
  %98 = call i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE4sizeEv(%"class.std::vector.0"* %97) #3
  %99 = trunc i64 %98 to i32
  %100 = load volatile i32*, i32** %10
  store i32 %99, i32* %100, align 4
  %101 = load volatile i64*, i64** %9
  store i64 0, i64* %101, align 8
  store i32 -1311023187, i32* %26
  br label %315

; <label>:102:                                    ; preds = %27
  %103 = load i32, i32* @x.3
  %104 = load i32, i32* @y.4
  %105 = add i32 %103, -518151487
  %106 = sub i32 %105, 1
  %107 = sub i32 %106, -518151487
  %108 = sub i32 %103, 1
  %109 = mul i32 %103, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %104, 10
  %113 = xor i1 %111, true
  %114 = xor i1 %112, true
  %115 = xor i1 true, true
  %116 = and i1 %113, true
  %117 = and i1 %111, %115
  %118 = and i1 %114, true
  %119 = and i1 %112, %115
  %120 = or i1 %116, %117
  %121 = or i1 %118, %119
  %122 = xor i1 %120, %121
  %123 = or i1 %113, %114
  %124 = xor i1 %123, true
  %125 = or i1 true, %115
  %126 = and i1 %124, %125
  %127 = or i1 %122, %126
  %128 = or i1 %111, %112
  %129 = select i1 %127, i32 2074898887, i32 198321188
  store i32 %129, i32* %26
  br label %315

; <label>:130:                                    ; preds = %27
  %131 = load volatile i64*, i64** %9
  %132 = load i64, i64* %131, align 8
  %133 = load volatile i32*, i32** %10
  %134 = load i32, i32* %133, align 4
  %135 = sext i32 %134 to i64
  %136 = icmp slt i64 %132, %135
  store i1 %136, i1* %2
  %137 = load i32, i32* @x.3
  %138 = load i32, i32* @y.4
  %139 = sub i32 0, 1
  %140 = add i32 %137, %139
  %141 = sub i32 %137, 1
  %142 = mul i32 %137, %140
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %138, 10
  %146 = xor i1 %144, true
  %147 = xor i1 %145, true
  %148 = xor i1 false, true
  %149 = and i1 %146, false
  %150 = and i1 %144, %148
  %151 = and i1 %147, false
  %152 = and i1 %145, %148
  %153 = or i1 %149, %150
  %154 = or i1 %151, %152
  %155 = xor i1 %153, %154
  %156 = or i1 %146, %147
  %157 = xor i1 %156, true
  %158 = or i1 false, %148
  %159 = and i1 %157, %158
  %160 = or i1 %155, %159
  %161 = or i1 %144, %145
  %162 = select i1 %160, i32 -761240155, i32 198321188
  store i32 %162, i32* %26
  br label %315

; <label>:163:                                    ; preds = %27
  %164 = load volatile i1, i1* %2
  %165 = select i1 %164, i32 -614003497, i32 -2133782339
  store i32 %165, i32* %26
  br label %315

; <label>:166:                                    ; preds = %27
  %167 = load volatile %"class.std::vector"**, %"class.std::vector"*** %13
  %168 = load %"class.std::vector"*, %"class.std::vector"** %167, align 8
  %169 = load volatile i32*, i32** %11
  %170 = load i32, i32* %169, align 4
  %171 = sext i32 %170 to i64
  %172 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm(%"class.std::vector"* %168, i64 %171) #3
  %173 = load volatile i64*, i64** %9
  %174 = load i64, i64* %173, align 8
  %175 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEixEm(%"class.std::vector.0"* %172, i64 %174) #3
  %176 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %8
  store %"class.std::unordered_map"* %175, %"class.std::unordered_map"** %176, align 8
  %177 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %8
  %178 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %177, align 8
  %179 = call %"struct.std::__detail::_Hash_node"* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEE5beginEv(%"class.std::unordered_map"* %178) #3
  %180 = load volatile %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %7
  %181 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %180, i32 0, i32 0
  %182 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %181, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %179, %"struct.std::__detail::_Hash_node"** %182, align 8
  %183 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %8
  %184 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %183, align 8
  %185 = call %"struct.std::__detail::_Hash_node"* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEE3endEv(%"class.std::unordered_map"* %184) #3
  %186 = load volatile %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %6
  %187 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %186, i32 0, i32 0
  %188 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %187, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %185, %"struct.std::__detail::_Hash_node"** %188, align 8
  store i32 -672264352, i32* %26
  br label %315

; <label>:189:                                    ; preds = %27
  %190 = load volatile %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %7
  %191 = bitcast %"struct.std::__detail::_Node_iterator"* %190 to %"struct.std::__detail::_Node_iterator_base"*
  %192 = load volatile %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %6
  %193 = bitcast %"struct.std::__detail::_Node_iterator"* %192 to %"struct.std::__detail::_Node_iterator_base"*
  %194 = call zeroext i1 @_ZNSt8__detailneISt4pairIKixELb0EEEbRKNS_19_Node_iterator_baseIT_XT0_EEES8_(%"struct.std::__detail::_Node_iterator_base"* dereferenceable(8) %191, %"struct.std::__detail::_Node_iterator_base"* dereferenceable(8) %193) #3
  %195 = select i1 %194, i32 1518581133, i32 499356694
  store i32 %195, i32* %26
  br label %315

; <label>:196:                                    ; preds = %27
  %197 = load volatile %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %7
  %198 = call dereferenceable(16) %"struct.std::pair"* @_ZNKSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEdeEv(%"struct.std::__detail::_Node_iterator"* %197) #3
  %199 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %5
  %200 = bitcast %"struct.std::pair"* %199 to i8*
  %201 = bitcast %"struct.std::pair"* %198 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %200, i8* %201, i64 16, i32 8, i1 false)
  %202 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %5
  %203 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %202, i32 0, i32 0
  %204 = load i32, i32* %203, align 8
  %205 = load volatile i32*, i32** %4
  store i32 %204, i32* %205, align 4
  %206 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %5
  %207 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %206, i32 0, i32 1
  %208 = load i64, i64* %207, align 8
  %209 = load volatile i64*, i64** %3
  store i64 %208, i64* %209, align 8
  %210 = load volatile i32*, i32** %11
  %211 = load i32, i32* %210, align 4
  %212 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* @_ZSt4cout, i32 %211)
  %213 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %212, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0))
  %214 = load volatile i64*, i64** %9
  %215 = load i64, i64* %214, align 8
  %216 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* %213, i64 %215)
  %217 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %216, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0))
  %218 = load volatile i32*, i32** %4
  %219 = load i32, i32* %218, align 4
  %220 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %217, i32 %219)
  %221 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %220, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0))
  %222 = load volatile i64*, i64** %3
  %223 = load i64, i64* %222, align 8
  %224 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* %221, i64 %223)
  %225 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %224, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  store i32 1575955352, i32* %26
  br label %315

; <label>:226:                                    ; preds = %27
  %227 = load volatile %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %7
  %228 = call dereferenceable(8) %"struct.std::__detail::_Node_iterator"* @_ZNSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEppEv(%"struct.std::__detail::_Node_iterator"* %227) #3
  store i32 -672264352, i32* %26
  br label %315

; <label>:229:                                    ; preds = %27
  %230 = load i32, i32* @x.3
  %231 = load i32, i32* @y.4
  %232 = add i32 %230, -1389789062
  %233 = sub i32 %232, 1
  %234 = sub i32 %233, -1389789062
  %235 = sub i32 %230, 1
  %236 = mul i32 %230, %234
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %231, 10
  %240 = and i1 %238, %239
  %241 = xor i1 %238, %239
  %242 = or i1 %240, %241
  %243 = or i1 %238, %239
  %244 = select i1 %242, i32 -1855132485, i32 1998217508
  store i32 %244, i32* %26
  br label %315

; <label>:245:                                    ; preds = %27
  %246 = load i32, i32* @x.3
  %247 = load i32, i32* @y.4
  %248 = add i32 %246, 1549977897
  %249 = sub i32 %248, 1
  %250 = sub i32 %249, 1549977897
  %251 = sub i32 %246, 1
  %252 = mul i32 %246, %250
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %247, 10
  %256 = xor i1 %254, true
  %257 = xor i1 %255, true
  %258 = xor i1 false, true
  %259 = and i1 %256, false
  %260 = and i1 %254, %258
  %261 = and i1 %257, false
  %262 = and i1 %255, %258
  %263 = or i1 %259, %260
  %264 = or i1 %261, %262
  %265 = xor i1 %263, %264
  %266 = or i1 %256, %257
  %267 = xor i1 %266, true
  %268 = or i1 false, %258
  %269 = and i1 %267, %268
  %270 = or i1 %265, %269
  %271 = or i1 %254, %255
  %272 = select i1 %270, i32 406743058, i32 1998217508
  store i32 %272, i32* %26
  br label %315

; <label>:273:                                    ; preds = %27
  store i32 -1587518638, i32* %26
  br label %315

; <label>:274:                                    ; preds = %27
  %275 = load volatile i64*, i64** %9
  %276 = load i64, i64* %275, align 8
  %277 = sub i64 0, %276
  %278 = sub i64 0, 1
  %279 = add i64 %277, %278
  %280 = sub i64 0, %279
  %281 = add nsw i64 %276, 1
  %282 = load volatile i64*, i64** %9
  store i64 %280, i64* %282, align 8
  store i32 -1311023187, i32* %26
  br label %315

; <label>:283:                                    ; preds = %27
  store i32 -181419865, i32* %26
  br label %315

; <label>:284:                                    ; preds = %27
  %285 = load volatile i32*, i32** %11
  %286 = load i32, i32* %285, align 4
  %287 = sub i32 0, 1
  %288 = sub i32 %286, %287
  %289 = add nsw i32 %286, 1
  %290 = load volatile i32*, i32** %11
  store i32 %288, i32* %290, align 4
  store i32 -1333304074, i32* %26
  br label %315

; <label>:291:                                    ; preds = %27
  ret void

; <label>:292:                                    ; preds = %27
  %293 = alloca %"class.std::vector"*, align 8
  %294 = alloca i32, align 4
  %295 = alloca i32, align 4
  %296 = alloca i32, align 4
  %297 = alloca i64, align 8
  %298 = alloca %"class.std::unordered_map"*, align 8
  %299 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %300 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %301 = alloca %"struct.std::pair", align 8
  %302 = alloca i32, align 4
  %303 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %293, align 8
  %304 = load %"class.std::vector"*, %"class.std::vector"** %293, align 8
  %305 = call i64 @_ZNKSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE4sizeEv(%"class.std::vector"* %304) #3
  %306 = trunc i64 %305 to i32
  store i32 %306, i32* %294, align 4
  store i32 0, i32* %295, align 4
  store i32 -1964568244, i32* %26
  br label %315

; <label>:307:                                    ; preds = %27
  %308 = load volatile i64*, i64** %9
  %309 = load i64, i64* %308, align 8
  %310 = load volatile i32*, i32** %10
  %311 = load i32, i32* %310, align 4
  %312 = sext i32 %311 to i64
  %313 = icmp slt i64 %309, %312
  store i32 2074898887, i32* %26
  br label %315

; <label>:314:                                    ; preds = %27
  store i32 -1855132485, i32* %26
  br label %315

; <label>:315:                                    ; preds = %314, %307, %292, %284, %283, %274, %273, %245, %229, %226, %196, %189, %166, %163, %130, %102, %91, %84, %83, %50, %30, %29
  br label %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE4sizeEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %8 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  %12 = ptrtoint %"class.std::vector.0"* %7 to i64
  %13 = ptrtoint %"class.std::vector.0"* %11 to i64
  %14 = add i64 %12, -1683752283581832803
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, -1683752283581832803
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 24
  ret i64 %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm(%"class.std::vector"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.7
  %7 = load i32, i32* @y.8
  %8 = sub i32 %6, -574532536
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -574532536
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1760025083, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %77
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1760025083, label %20
    i32 -1734501190, label %28
    i32 1443581606, label %65
    i32 25836880, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %77

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1734501190, i32 25836880
  store i32 %27, i32* %16
  br label %77

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8
  %32 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load %"class.std::vector.0"*, %"class.std::vector.0"** %34, align 8
  %36 = load i64, i64* %30, align 8
  %37 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %35, i64 %36
  store %"class.std::vector.0"* %37, %"class.std::vector.0"** %3
  %38 = load i32, i32* @x.7
  %39 = load i32, i32* @y.8
  %40 = add i32 %38, 1517576796
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 1517576796
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 1443581606, i32 25836880
  store i32 %64, i32* %16
  br label %77

; <label>:65:                                     ; preds = %17
  %66 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %3
  ret %"class.std::vector.0"* %66

; <label>:67:                                     ; preds = %17
  %68 = alloca %"class.std::vector"*, align 8
  %69 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %68, align 8
  store i64 %1, i64* %69, align 8
  %70 = load %"class.std::vector"*, %"class.std::vector"** %68, align 8
  %71 = bitcast %"class.std::vector"* %70 to %"struct.std::_Vector_base"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %72, i32 0, i32 0
  %74 = load %"class.std::vector.0"*, %"class.std::vector.0"** %73, align 8
  %75 = load i64, i64* %69, align 8
  %76 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %74, i64 %75
  store i32 -1734501190, i32* %16
  br label %77

; <label>:77:                                     ; preds = %67, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE4sizeEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  %8 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %10, align 8
  %12 = ptrtoint %"class.std::unordered_map"* %7 to i64
  %13 = ptrtoint %"class.std::unordered_map"* %11 to i64
  %14 = add i64 %12, -7897434314758782630
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, -7897434314758782630
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 56
  ret i64 %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(56) %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEixEm(%"class.std::vector.0"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %9, i64 %10
  ret %"class.std::unordered_map"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEE5beginEv(%"class.std::unordered_map"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %3 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %3, align 8
  %4 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %3, align 8
  %5 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %4, i32 0, i32 0
  %6 = call %"struct.std::__detail::_Hash_node"* @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE5beginEv(%"class.std::_Hashtable"* %5) #3
  %7 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %2, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %7, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %6, %"struct.std::__detail::_Hash_node"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %2, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %9, i32 0, i32 0
  %11 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  ret %"struct.std::__detail::_Hash_node"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEE3endEv(%"class.std::unordered_map"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %3 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %3, align 8
  %4 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %3, align 8
  %5 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %4, i32 0, i32 0
  %6 = call %"struct.std::__detail::_Hash_node"* @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE3endEv(%"class.std::_Hashtable"* %5) #3
  %7 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %2, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %7, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %6, %"struct.std::__detail::_Hash_node"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %2, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %9, i32 0, i32 0
  %11 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  ret %"struct.std::__detail::_Hash_node"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNSt8__detailneISt4pairIKixELb0EEEbRKNS_19_Node_iterator_baseIT_XT0_EEES8_(%"struct.std::__detail::_Node_iterator_base"* dereferenceable(8), %"struct.std::__detail::_Node_iterator_base"* dereferenceable(8)) #4 comdat {
  %3 = alloca %"struct.std::__detail::_Node_iterator_base"*, align 8
  %4 = alloca %"struct.std::__detail::_Node_iterator_base"*, align 8
  store %"struct.std::__detail::_Node_iterator_base"* %0, %"struct.std::__detail::_Node_iterator_base"** %3, align 8
  store %"struct.std::__detail::_Node_iterator_base"* %1, %"struct.std::__detail::_Node_iterator_base"** %4, align 8
  %5 = load %"struct.std::__detail::_Node_iterator_base"*, %"struct.std::__detail::_Node_iterator_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %5, i32 0, i32 0
  %7 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %6, align 8
  %8 = load %"struct.std::__detail::_Node_iterator_base"*, %"struct.std::__detail::_Node_iterator_base"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %8, i32 0, i32 0
  %10 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  %11 = icmp ne %"struct.std::__detail::_Hash_node"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair"* @_ZNKSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEdeEv(%"struct.std::__detail::_Node_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Node_iterator"*, align 8
  store %"struct.std::__detail::_Node_iterator"* %0, %"struct.std::__detail::_Node_iterator"** %2, align 8
  %3 = load %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Node_iterator"* %3 to %"struct.std::__detail::_Node_iterator_base"*
  %5 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %4, i32 0, i32 0
  %6 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %5, align 8
  %7 = bitcast %"struct.std::__detail::_Hash_node"* %6 to %"struct.std::__detail::_Hash_node_value_base"*
  %8 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base"* %7) #3
  ret %"struct.std::pair"* %8
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #5

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::__detail::_Node_iterator"* @_ZNSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEppEv(%"struct.std::__detail::_Node_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Node_iterator"*, align 8
  store %"struct.std::__detail::_Node_iterator"* %0, %"struct.std::__detail::_Node_iterator"** %2, align 8
  %3 = load %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Node_iterator"* %3 to %"struct.std::__detail::_Node_iterator_base"*
  call void @_ZNSt8__detail19_Node_iterator_baseISt4pairIKixELb0EE7_M_incrEv(%"struct.std::__detail::_Node_iterator_base"* %4) #3
  ret %"struct.std::__detail::_Node_iterator"* %3
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() #6 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %"class.std::vector", align 8
  %5 = alloca %"class.std::vector.0", align 8
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.std::unordered_map", align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  %15 = alloca %"class.std::unordered_map"*, align 8
  %16 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %17 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %18 = alloca %"struct.std::pair", align 8
  %19 = alloca i32, align 4
  %20 = alloca i64, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %24 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %2)
  %25 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %3)
  call void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEC2Ev(%"class.std::vector"* %4) #3
  %26 = load i32, i32* %2, align 4
  %27 = sub i32 0, %26
  %28 = sub i32 0, 1
  %29 = add i32 %27, %28
  %30 = sub i32 0, %29
  %31 = add nsw i32 %26, 1
  %32 = sext i32 %30 to i64
  call void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2Ev(%"class.std::vector.0"* %5) #3
  invoke void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE6assignEmRKSB_(%"class.std::vector"* %4, i64 %32, %"class.std::vector.0"* dereferenceable(24) %5)
          to label %33 unwind label %98

; <label>:33:                                     ; preds = %0
  %34 = load i32, i32* @x.23
  %35 = load i32, i32* @y.24
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %532

; <label>:59:                                     ; preds = %33, %532
  call void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EED2Ev(%"class.std::vector.0"* %5) #3
  %60 = call i64 @_ZNKSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE4sizeEv(%"class.std::vector"* %4) #3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %8, align 4
  store i32 0, i32* %9, align 4
  %62 = load i32, i32* @x.23
  %63 = load i32, i32* @y.24
  %64 = sub i32 0, 1
  %65 = add i32 %62, %64
  %66 = sub i32 %62, 1
  %67 = mul i32 %62, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %63, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  br i1 %73, label %75, label %532

; <label>:75:                                     ; preds = %59
  br label %76

; <label>:76:                                     ; preds = %92, %75
  %77 = load i32, i32* %9, align 4
  %78 = load i32, i32* %8, align 4
  %79 = icmp slt i32 %77, %78
  br i1 %79, label %80, label %106

; <label>:80:                                     ; preds = %76
  %81 = load i32, i32* %9, align 4
  %82 = sext i32 %81 to i64
  %83 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm(%"class.std::vector"* %4, i64 %82) #3
  %84 = load i32, i32* %9, align 4
  %85 = sub i32 %84, 1420258239
  %86 = add i32 %85, 1
  %87 = add i32 %86, 1420258239
  %88 = add nsw i32 %84, 1
  %89 = sext i32 %87 to i64
  %90 = bitcast %"class.std::unordered_map"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* %90, i8 0, i64 56, i32 8, i1 false)
  call void @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEC2Ev(%"class.std::unordered_map"* %10) #3
  invoke void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE6assignEmRKS9_(%"class.std::vector.0"* %83, i64 %89, %"class.std::unordered_map"* dereferenceable(56) %10)
          to label %91 unwind label %102

; <label>:91:                                     ; preds = %80
  call void @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEED2Ev(%"class.std::unordered_map"* %10) #3
  br label %92

; <label>:92:                                     ; preds = %91
  %93 = load i32, i32* %9, align 4
  %94 = add i32 %93, 406961454
  %95 = add i32 %94, 1
  %96 = sub i32 %95, 406961454
  %97 = add nsw i32 %93, 1
  store i32 %96, i32* %9, align 4
  br label %76

; <label>:98:                                     ; preds = %0
  %99 = landingpad { i8*, i32 }
          cleanup
  %100 = extractvalue { i8*, i32 } %99, 0
  store i8* %100, i8** %6, align 8
  %101 = extractvalue { i8*, i32 } %99, 1
  store i32 %101, i32* %7, align 4
  call void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EED2Ev(%"class.std::vector.0"* %5) #3
  br label %526

; <label>:102:                                    ; preds = %80
  %103 = landingpad { i8*, i32 }
          cleanup
  %104 = extractvalue { i8*, i32 } %103, 0
  store i8* %104, i8** %6, align 8
  %105 = extractvalue { i8*, i32 } %103, 1
  store i32 %105, i32* %7, align 4
  call void @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEED2Ev(%"class.std::unordered_map"* %10) #3
  br label %526

; <label>:106:                                    ; preds = %76
  %107 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm(%"class.std::vector"* %4, i64 0) #3
  %108 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEixEm(%"class.std::vector.0"* %107, i64 0) #3
  store i32 0, i32* %11, align 4
  %109 = invoke dereferenceable(8) i64* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEixEOi(%"class.std::unordered_map"* %108, i32* dereferenceable(4) %11)
          to label %110 unwind label %438

; <label>:110:                                    ; preds = %106
  %111 = load i32, i32* @x.23
  %112 = load i32, i32* @y.24
  %113 = sub i32 0, 1
  %114 = add i32 %111, %113
  %115 = sub i32 %111, 1
  %116 = mul i32 %111, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %112, 10
  %120 = and i1 %118, %119
  %121 = xor i1 %118, %119
  %122 = or i1 %120, %121
  %123 = or i1 %118, %119
  br i1 %122, label %124, label %535

; <label>:124:                                    ; preds = %110, %535
  store i64 1, i64* %109, align 8
  store i32 0, i32* %12, align 4
  %125 = load i32, i32* @x.23
  %126 = load i32, i32* @y.24
  %127 = sub i32 0, 1
  %128 = add i32 %125, %127
  %129 = sub i32 %125, 1
  %130 = mul i32 %125, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %126, 10
  %134 = xor i1 %132, true
  %135 = xor i1 %133, true
  %136 = xor i1 true, true
  %137 = and i1 %134, true
  %138 = and i1 %132, %136
  %139 = and i1 %135, true
  %140 = and i1 %133, %136
  %141 = or i1 %137, %138
  %142 = or i1 %139, %140
  %143 = xor i1 %141, %142
  %144 = or i1 %134, %135
  %145 = xor i1 %144, true
  %146 = or i1 true, %136
  %147 = and i1 %145, %146
  %148 = or i1 %143, %147
  %149 = or i1 %132, %133
  br i1 %148, label %150, label %535

; <label>:150:                                    ; preds = %124
  br label %151

; <label>:151:                                    ; preds = %453, %150
  %152 = load i32, i32* %12, align 4
  %153 = load i32, i32* %2, align 4
  %154 = icmp slt i32 %152, %153
  br i1 %154, label %155, label %460

; <label>:155:                                    ; preds = %151
  %156 = load i32, i32* %12, align 4
  %157 = sext i32 %156 to i64
  %158 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm(%"class.std::vector"* %4, i64 %157) #3
  %159 = call i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE4sizeEv(%"class.std::vector.0"* %158) #3
  %160 = trunc i64 %159 to i32
  store i32 %160, i32* %13, align 4
  store i64 0, i64* %14, align 8
  br label %161

; <label>:161:                                    ; preds = %446, %155
  %162 = load i64, i64* %14, align 8
  %163 = load i32, i32* %13, align 4
  %164 = sext i32 %163 to i64
  %165 = icmp slt i64 %162, %164
  br i1 %165, label %166, label %452

; <label>:166:                                    ; preds = %161
  %167 = load i32, i32* %12, align 4
  %168 = sext i32 %167 to i64
  %169 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm(%"class.std::vector"* %4, i64 %168) #3
  %170 = load i64, i64* %14, align 8
  %171 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEixEm(%"class.std::vector.0"* %169, i64 %170) #3
  store %"class.std::unordered_map"* %171, %"class.std::unordered_map"** %15, align 8
  %172 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %15, align 8
  %173 = call %"struct.std::__detail::_Hash_node"* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEE5beginEv(%"class.std::unordered_map"* %172) #3
  %174 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %16, i32 0, i32 0
  %175 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %174, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %173, %"struct.std::__detail::_Hash_node"** %175, align 8
  %176 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %15, align 8
  %177 = call %"struct.std::__detail::_Hash_node"* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEE3endEv(%"class.std::unordered_map"* %176) #3
  %178 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %17, i32 0, i32 0
  %179 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %178, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %177, %"struct.std::__detail::_Hash_node"** %179, align 8
  br label %180

; <label>:180:                                    ; preds = %443, %166
  %181 = load i32, i32* @x.23
  %182 = load i32, i32* @y.24
  %183 = sub i32 0, 1
  %184 = add i32 %181, %183
  %185 = sub i32 %181, 1
  %186 = mul i32 %181, %184
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %182, 10
  %190 = and i1 %188, %189
  %191 = xor i1 %188, %189
  %192 = or i1 %190, %191
  %193 = or i1 %188, %189
  br i1 %192, label %194, label %536

; <label>:194:                                    ; preds = %180, %536
  %195 = bitcast %"struct.std::__detail::_Node_iterator"* %16 to %"struct.std::__detail::_Node_iterator_base"*
  %196 = bitcast %"struct.std::__detail::_Node_iterator"* %17 to %"struct.std::__detail::_Node_iterator_base"*
  %197 = call zeroext i1 @_ZNSt8__detailneISt4pairIKixELb0EEEbRKNS_19_Node_iterator_baseIT_XT0_EEES8_(%"struct.std::__detail::_Node_iterator_base"* dereferenceable(8) %195, %"struct.std::__detail::_Node_iterator_base"* dereferenceable(8) %196) #3
  %198 = load i32, i32* @x.23
  %199 = load i32, i32* @y.24
  %200 = sub i32 0, 1
  %201 = add i32 %198, %200
  %202 = sub i32 %198, 1
  %203 = mul i32 %198, %201
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %199, 10
  %207 = xor i1 %205, true
  %208 = xor i1 %206, true
  %209 = xor i1 false, true
  %210 = and i1 %207, false
  %211 = and i1 %205, %209
  %212 = and i1 %208, false
  %213 = and i1 %206, %209
  %214 = or i1 %210, %211
  %215 = or i1 %212, %213
  %216 = xor i1 %214, %215
  %217 = or i1 %207, %208
  %218 = xor i1 %217, true
  %219 = or i1 false, %209
  %220 = and i1 %218, %219
  %221 = or i1 %216, %220
  %222 = or i1 %205, %206
  br i1 %221, label %223, label %536

; <label>:223:                                    ; preds = %194
  br i1 %197, label %224, label %445

; <label>:224:                                    ; preds = %223
  %225 = load i32, i32* @x.23
  %226 = load i32, i32* @y.24
  %227 = add i32 %225, 1933121597
  %228 = sub i32 %227, 1
  %229 = sub i32 %228, 1933121597
  %230 = sub i32 %225, 1
  %231 = mul i32 %225, %229
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %226, 10
  %235 = xor i1 %233, true
  %236 = xor i1 %234, true
  %237 = xor i1 false, true
  %238 = and i1 %235, false
  %239 = and i1 %233, %237
  %240 = and i1 %236, false
  %241 = and i1 %234, %237
  %242 = or i1 %238, %239
  %243 = or i1 %240, %241
  %244 = xor i1 %242, %243
  %245 = or i1 %235, %236
  %246 = xor i1 %245, true
  %247 = or i1 false, %237
  %248 = and i1 %246, %247
  %249 = or i1 %244, %248
  %250 = or i1 %233, %234
  br i1 %249, label %251, label %540

; <label>:251:                                    ; preds = %224, %540
  %252 = call dereferenceable(16) %"struct.std::pair"* @_ZNKSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEdeEv(%"struct.std::__detail::_Node_iterator"* %16) #3
  %253 = bitcast %"struct.std::pair"* %18 to i8*
  %254 = bitcast %"struct.std::pair"* %252 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %253, i8* %254, i64 16, i32 8, i1 false)
  %255 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %18, i32 0, i32 0
  %256 = load i32, i32* %255, align 8
  store i32 %256, i32* %19, align 4
  %257 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %18, i32 0, i32 1
  %258 = load i64, i64* %257, align 8
  store i64 %258, i64* %20, align 8
  %259 = load i32, i32* %12, align 4
  %260 = sub i32 %259, -1822007035
  %261 = add i32 %260, 1
  %262 = add i32 %261, -1822007035
  %263 = add nsw i32 %259, 1
  %264 = sext i32 %262 to i64
  %265 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm(%"class.std::vector"* %4, i64 %264) #3
  %266 = load i64, i64* %14, align 8
  %267 = add i64 %266, 5879494670867562486
  %268 = add i64 %267, 1
  %269 = sub i64 %268, 5879494670867562486
  %270 = add nsw i64 %266, 1
  %271 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEixEm(%"class.std::vector.0"* %265, i64 %269) #3
  %272 = load i32, i32* %19, align 4
  %273 = sext i32 %272 to i64
  %274 = load i64, i64* %14, align 8
  %275 = sub i64 0, 1
  %276 = sub i64 %274, %275
  %277 = add nsw i64 %274, 1
  %278 = mul nsw i64 2, %276
  %279 = add i64 %273, -2762973468652737564
  %280 = add i64 %279, %278
  %281 = sub i64 %280, -2762973468652737564
  %282 = add nsw i64 %273, %278
  %283 = trunc i64 %281 to i32
  store i32 %283, i32* %21, align 4
  %284 = load i32, i32* @x.23
  %285 = load i32, i32* @y.24
  %286 = sub i32 0, 1
  %287 = add i32 %284, %286
  %288 = sub i32 %284, 1
  %289 = mul i32 %284, %287
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %285, 10
  %293 = xor i1 %291, true
  %294 = xor i1 %292, true
  %295 = xor i1 true, true
  %296 = and i1 %293, true
  %297 = and i1 %291, %295
  %298 = and i1 %294, true
  %299 = and i1 %292, %295
  %300 = or i1 %296, %297
  %301 = or i1 %298, %299
  %302 = xor i1 %300, %301
  %303 = or i1 %293, %294
  %304 = xor i1 %303, true
  %305 = or i1 true, %295
  %306 = and i1 %304, %305
  %307 = or i1 %302, %306
  %308 = or i1 %291, %292
  br i1 %307, label %309, label %540

; <label>:309:                                    ; preds = %251
  %310 = invoke dereferenceable(8) i64* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEixEOi(%"class.std::unordered_map"* %271, i32* dereferenceable(4) %21)
          to label %311 unwind label %438

; <label>:311:                                    ; preds = %309
  %312 = load i64, i64* %20, align 8
  invoke void @_Z9limit_addRxx(i64* dereferenceable(8) %310, i64 %312)
          to label %313 unwind label %438

; <label>:313:                                    ; preds = %311
  %314 = load i32, i32* %12, align 4
  %315 = sub i32 %314, -319657418
  %316 = add i32 %315, 1
  %317 = add i32 %316, -319657418
  %318 = add nsw i32 %314, 1
  %319 = sext i32 %317 to i64
  %320 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm(%"class.std::vector"* %4, i64 %319) #3
  %321 = load i64, i64* %14, align 8
  %322 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEixEm(%"class.std::vector.0"* %320, i64 %321) #3
  %323 = load i32, i32* %19, align 4
  %324 = sext i32 %323 to i64
  %325 = load i64, i64* %14, align 8
  %326 = mul nsw i64 2, %325
  %327 = sub i64 0, %324
  %328 = sub i64 0, %326
  %329 = add i64 %327, %328
  %330 = sub i64 0, %329
  %331 = add nsw i64 %324, %326
  %332 = trunc i64 %330 to i32
  store i32 %332, i32* %22, align 4
  %333 = invoke dereferenceable(8) i64* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEixEOi(%"class.std::unordered_map"* %322, i32* dereferenceable(4) %22)
          to label %334 unwind label %438

; <label>:334:                                    ; preds = %313
  %335 = load i64, i64* %20, align 8
  %336 = load i64, i64* %14, align 8
  %337 = load i64, i64* %14, align 8
  %338 = sub i64 0, %336
  %339 = sub i64 0, %337
  %340 = add i64 %338, %339
  %341 = sub i64 0, %340
  %342 = add nsw i64 %336, %337
  %343 = sub i64 %341, 3186149076982826421
  %344 = add i64 %343, 1
  %345 = add i64 %344, 3186149076982826421
  %346 = add nsw i64 %341, 1
  %347 = mul nsw i64 %335, %345
  invoke void @_Z9limit_addRxx(i64* dereferenceable(8) %333, i64 %347)
          to label %348 unwind label %438

; <label>:348:                                    ; preds = %334
  %349 = load i64, i64* %14, align 8
  %350 = icmp sgt i64 %349, 0
  br i1 %350, label %351, label %442

; <label>:351:                                    ; preds = %348
  %352 = load i32, i32* %12, align 4
  %353 = sub i32 0, 1
  %354 = sub i32 %352, %353
  %355 = add nsw i32 %352, 1
  %356 = sext i32 %354 to i64
  %357 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm(%"class.std::vector"* %4, i64 %356) #3
  %358 = load i64, i64* %14, align 8
  %359 = sub i64 %358, -4314461140873475245
  %360 = sub i64 %359, 1
  %361 = add i64 %360, -4314461140873475245
  %362 = sub nsw i64 %358, 1
  %363 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEixEm(%"class.std::vector.0"* %357, i64 %361) #3
  %364 = load i32, i32* %19, align 4
  %365 = sext i32 %364 to i64
  %366 = load i64, i64* %14, align 8
  %367 = sub i64 %366, -2425580148300148753
  %368 = sub i64 %367, 1
  %369 = add i64 %368, -2425580148300148753
  %370 = sub nsw i64 %366, 1
  %371 = mul nsw i64 2, %369
  %372 = sub i64 %365, -35833909405054466
  %373 = add i64 %372, %371
  %374 = add i64 %373, -35833909405054466
  %375 = add nsw i64 %365, %371
  %376 = trunc i64 %374 to i32
  store i32 %376, i32* %23, align 4
  %377 = invoke dereferenceable(8) i64* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEixEOi(%"class.std::unordered_map"* %363, i32* dereferenceable(4) %23)
          to label %378 unwind label %438

; <label>:378:                                    ; preds = %351
  %379 = load i64, i64* %20, align 8
  %380 = load i64, i64* %14, align 8
  %381 = load i64, i64* %14, align 8
  %382 = mul nsw i64 %380, %381
  %383 = mul nsw i64 %379, %382
  invoke void @_Z9limit_addRxx(i64* dereferenceable(8) %377, i64 %383)
          to label %384 unwind label %438

; <label>:384:                                    ; preds = %378
  %385 = load i32, i32* @x.23
  %386 = load i32, i32* @y.24
  %387 = sub i32 %385, 2046881464
  %388 = sub i32 %387, 1
  %389 = add i32 %388, 2046881464
  %390 = sub i32 %385, 1
  %391 = mul i32 %385, %389
  %392 = urem i32 %391, 2
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %386, 10
  %395 = xor i1 %393, true
  %396 = xor i1 %394, true
  %397 = xor i1 true, true
  %398 = and i1 %395, true
  %399 = and i1 %393, %397
  %400 = and i1 %396, true
  %401 = and i1 %394, %397
  %402 = or i1 %398, %399
  %403 = or i1 %400, %401
  %404 = xor i1 %402, %403
  %405 = or i1 %395, %396
  %406 = xor i1 %405, true
  %407 = or i1 true, %397
  %408 = and i1 %406, %407
  %409 = or i1 %404, %408
  %410 = or i1 %393, %394
  br i1 %409, label %411, label %655

; <label>:411:                                    ; preds = %384, %655
  %412 = load i32, i32* @x.23
  %413 = load i32, i32* @y.24
  %414 = sub i32 0, 1
  %415 = add i32 %412, %414
  %416 = sub i32 %412, 1
  %417 = mul i32 %412, %415
  %418 = urem i32 %417, 2
  %419 = icmp eq i32 %418, 0
  %420 = icmp slt i32 %413, 10
  %421 = xor i1 %419, true
  %422 = xor i1 %420, true
  %423 = xor i1 false, true
  %424 = and i1 %421, false
  %425 = and i1 %419, %423
  %426 = and i1 %422, false
  %427 = and i1 %420, %423
  %428 = or i1 %424, %425
  %429 = or i1 %426, %427
  %430 = xor i1 %428, %429
  %431 = or i1 %421, %422
  %432 = xor i1 %431, true
  %433 = or i1 false, %423
  %434 = and i1 %432, %433
  %435 = or i1 %430, %434
  %436 = or i1 %419, %420
  br i1 %435, label %437, label %655

; <label>:437:                                    ; preds = %411
  br label %442

; <label>:438:                                    ; preds = %522, %466, %460, %378, %351, %334, %313, %311, %309, %106
  %439 = landingpad { i8*, i32 }
          cleanup
  %440 = extractvalue { i8*, i32 } %439, 0
  store i8* %440, i8** %6, align 8
  %441 = extractvalue { i8*, i32 } %439, 1
  store i32 %441, i32* %7, align 4
  br label %526

; <label>:442:                                    ; preds = %437, %348
  br label %443

; <label>:443:                                    ; preds = %442
  %444 = call dereferenceable(8) %"struct.std::__detail::_Node_iterator"* @_ZNSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEppEv(%"struct.std::__detail::_Node_iterator"* %16) #3
  br label %180

; <label>:445:                                    ; preds = %223
  br label %446

; <label>:446:                                    ; preds = %445
  %447 = load i64, i64* %14, align 8
  %448 = add i64 %447, -7350920104445119853
  %449 = add i64 %448, 1
  %450 = sub i64 %449, -7350920104445119853
  %451 = add nsw i64 %447, 1
  store i64 %450, i64* %14, align 8
  br label %161

; <label>:452:                                    ; preds = %161
  br label %453

; <label>:453:                                    ; preds = %452
  %454 = load i32, i32* %12, align 4
  %455 = sub i32 0, %454
  %456 = sub i32 0, 1
  %457 = add i32 %455, %456
  %458 = sub i32 0, %457
  %459 = add nsw i32 %454, 1
  store i32 %458, i32* %12, align 4
  br label %151

; <label>:460:                                    ; preds = %151
  %461 = load i32, i32* %2, align 4
  %462 = sext i32 %461 to i64
  %463 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm(%"class.std::vector"* %4, i64 %462) #3
  %464 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEixEm(%"class.std::vector.0"* %463, i64 0) #3
  %465 = invoke dereferenceable(8) i64* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEixERS5_(%"class.std::unordered_map"* %464, i32* dereferenceable(4) %3)
          to label %466 unwind label %438

; <label>:466:                                    ; preds = %460
  %467 = load i64, i64* %465, align 8
  %468 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %467)
          to label %469 unwind label %438

; <label>:469:                                    ; preds = %466
  %470 = load i32, i32* @x.23
  %471 = load i32, i32* @y.24
  %472 = sub i32 0, 1
  %473 = add i32 %470, %472
  %474 = sub i32 %470, 1
  %475 = mul i32 %470, %473
  %476 = urem i32 %475, 2
  %477 = icmp eq i32 %476, 0
  %478 = icmp slt i32 %471, 10
  %479 = xor i1 %477, true
  %480 = xor i1 %478, true
  %481 = xor i1 true, true
  %482 = and i1 %479, true
  %483 = and i1 %477, %481
  %484 = and i1 %480, true
  %485 = and i1 %478, %481
  %486 = or i1 %482, %483
  %487 = or i1 %484, %485
  %488 = xor i1 %486, %487
  %489 = or i1 %479, %480
  %490 = xor i1 %489, true
  %491 = or i1 true, %481
  %492 = and i1 %490, %491
  %493 = or i1 %488, %492
  %494 = or i1 %477, %478
  br i1 %493, label %495, label %656

; <label>:495:                                    ; preds = %469, %656
  %496 = load i32, i32* @x.23
  %497 = load i32, i32* @y.24
  %498 = add i32 %496, 948897375
  %499 = sub i32 %498, 1
  %500 = sub i32 %499, 948897375
  %501 = sub i32 %496, 1
  %502 = mul i32 %496, %500
  %503 = urem i32 %502, 2
  %504 = icmp eq i32 %503, 0
  %505 = icmp slt i32 %497, 10
  %506 = xor i1 %504, true
  %507 = xor i1 %505, true
  %508 = xor i1 false, true
  %509 = and i1 %506, false
  %510 = and i1 %504, %508
  %511 = and i1 %507, false
  %512 = and i1 %505, %508
  %513 = or i1 %509, %510
  %514 = or i1 %511, %512
  %515 = xor i1 %513, %514
  %516 = or i1 %506, %507
  %517 = xor i1 %516, true
  %518 = or i1 false, %508
  %519 = and i1 %517, %518
  %520 = or i1 %515, %519
  %521 = or i1 %504, %505
  br i1 %520, label %522, label %656

; <label>:522:                                    ; preds = %495
  %523 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %468, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %524 unwind label %438

; <label>:524:                                    ; preds = %522
  store i32 0, i32* %1, align 4
  call void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EED2Ev(%"class.std::vector"* %4) #3
  %525 = load i32, i32* %1, align 4
  ret i32 %525

; <label>:526:                                    ; preds = %438, %102, %98
  call void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EED2Ev(%"class.std::vector"* %4) #3
  br label %527

; <label>:527:                                    ; preds = %526
  %528 = load i8*, i8** %6, align 8
  %529 = load i32, i32* %7, align 4
  %530 = insertvalue { i8*, i32 } undef, i8* %528, 0
  %531 = insertvalue { i8*, i32 } %530, i32 %529, 1
  resume { i8*, i32 } %531

; <label>:532:                                    ; preds = %59, %33
  call void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EED2Ev(%"class.std::vector.0"* %5) #3
  %533 = call i64 @_ZNKSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE4sizeEv(%"class.std::vector"* %4) #3
  %534 = trunc i64 %533 to i32
  store i32 %534, i32* %8, align 4
  store i32 0, i32* %9, align 4
  br label %59

; <label>:535:                                    ; preds = %124, %110
  store i64 1, i64* %109, align 8
  store i32 0, i32* %12, align 4
  br label %124

; <label>:536:                                    ; preds = %194, %180
  %537 = bitcast %"struct.std::__detail::_Node_iterator"* %16 to %"struct.std::__detail::_Node_iterator_base"*
  %538 = bitcast %"struct.std::__detail::_Node_iterator"* %17 to %"struct.std::__detail::_Node_iterator_base"*
  %539 = call zeroext i1 @_ZNSt8__detailneISt4pairIKixELb0EEEbRKNS_19_Node_iterator_baseIT_XT0_EEES8_(%"struct.std::__detail::_Node_iterator_base"* dereferenceable(8) %537, %"struct.std::__detail::_Node_iterator_base"* dereferenceable(8) %538) #3
  br label %194

; <label>:540:                                    ; preds = %251, %224
  %541 = call dereferenceable(16) %"struct.std::pair"* @_ZNKSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEdeEv(%"struct.std::__detail::_Node_iterator"* %16) #3
  %542 = bitcast %"struct.std::pair"* %18 to i8*
  %543 = bitcast %"struct.std::pair"* %541 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %542, i8* %543, i64 16, i32 8, i1 false)
  %544 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %18, i32 0, i32 0
  %545 = load i32, i32* %544, align 8
  store i32 %545, i32* %19, align 4
  %546 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %18, i32 0, i32 1
  %547 = load i64, i64* %546, align 8
  store i64 %547, i64* %20, align 8
  %548 = load i32, i32* %12, align 4
  %549 = shl i32 %548, 1
  %550 = sub i32 0, 1
  %551 = add i32 %548, %550
  %552 = sub i32 %548, 1
  %553 = mul i32 %551, 1
  %554 = add i32 0, -1797726106
  %555 = sub i32 %554, %548
  %556 = sub i32 %555, -1797726106
  %557 = sub i32 0, %548
  %558 = sub i32 %556, 1808247398
  %559 = add i32 %558, 1
  %560 = add i32 %559, 1808247398
  %561 = add i32 %556, 1
  %562 = add i32 %548, -726095648
  %563 = sub i32 %562, 1
  %564 = sub i32 %563, -726095648
  %565 = sub i32 %548, 1
  %566 = mul i32 %564, 1
  %567 = sub i32 0, 1
  %568 = sub i32 %548, %567
  %569 = add nsw i32 %548, 1
  %570 = sext i32 %568 to i64
  %571 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEixEm(%"class.std::vector"* %4, i64 %570) #3
  %572 = load i64, i64* %14, align 8
  %573 = sub i64 0, 1
  %574 = add i64 %572, %573
  %575 = sub i64 %572, 1
  %576 = mul i64 %574, 1
  %577 = sub i64 %572, 7543546551254269542
  %578 = sub i64 %577, 1
  %579 = add i64 %578, 7543546551254269542
  %580 = sub i64 %572, 1
  %581 = mul i64 %579, 1
  %582 = sub i64 0, %572
  %583 = sub i64 0, 1
  %584 = add i64 %582, %583
  %585 = sub i64 0, %584
  %586 = add nsw i64 %572, 1
  %587 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEixEm(%"class.std::vector.0"* %571, i64 %585) #3
  %588 = load i32, i32* %19, align 4
  %589 = sext i32 %588 to i64
  %590 = load i64, i64* %14, align 8
  %591 = sub i64 0, %590
  %592 = add i64 0, %591
  %593 = sub i64 0, %590
  %594 = sub i64 0, %592
  %595 = sub i64 0, 1
  %596 = add i64 %594, %595
  %597 = sub i64 0, %596
  %598 = add i64 %592, 1
  %599 = shl i64 %590, 1
  %600 = sub i64 0, 65354331011779926
  %601 = sub i64 %600, %590
  %602 = add i64 %601, 65354331011779926
  %603 = sub i64 0, %590
  %604 = sub i64 0, 1
  %605 = sub i64 %602, %604
  %606 = add i64 %602, 1
  %607 = sub i64 0, %590
  %608 = add i64 0, %607
  %609 = sub i64 0, %590
  %610 = sub i64 0, %608
  %611 = sub i64 0, 1
  %612 = add i64 %610, %611
  %613 = sub i64 0, %612
  %614 = add i64 %608, 1
  %615 = sub i64 %590, 676987608938873466
  %616 = sub i64 %615, 1
  %617 = add i64 %616, 676987608938873466
  %618 = sub i64 %590, 1
  %619 = mul i64 %617, 1
  %620 = sub i64 0, 4684538387324138497
  %621 = sub i64 %620, %590
  %622 = add i64 %621, 4684538387324138497
  %623 = sub i64 0, %590
  %624 = add i64 %622, -613520780660137065
  %625 = add i64 %624, 1
  %626 = sub i64 %625, -613520780660137065
  %627 = add i64 %622, 1
  %628 = add i64 %590, 951523888982912656
  %629 = add i64 %628, 1
  %630 = sub i64 %629, 951523888982912656
  %631 = add nsw i64 %590, 1
  %632 = sub i64 0, %630
  %633 = add i64 2, %632
  %634 = sub i64 2, %630
  %635 = mul i64 %633, %630
  %636 = shl i64 2, %630
  %637 = add i64 2, 6989325593077502177
  %638 = sub i64 %637, %630
  %639 = sub i64 %638, 6989325593077502177
  %640 = sub i64 2, %630
  %641 = mul i64 %639, %630
  %642 = mul nsw i64 2, %630
  %643 = add i64 0, -1450429997931547212
  %644 = sub i64 %643, %589
  %645 = sub i64 %644, -1450429997931547212
  %646 = sub i64 0, %589
  %647 = sub i64 0, %642
  %648 = sub i64 %645, %647
  %649 = add i64 %645, %642
  %650 = add i64 %589, -4638446485190931418
  %651 = add i64 %650, %642
  %652 = sub i64 %651, -4638446485190931418
  %653 = add nsw i64 %589, %642
  %654 = trunc i64 %652 to i32
  store i32 %654, i32* %21, align 4
  br label %251

; <label>:655:                                    ; preds = %411, %384
  br label %411

; <label>:656:                                    ; preds = %495, %469
  br label %495
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEC2Ev(%"class.std::vector"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  invoke void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EEC2Ev(%"struct.std::_Vector_base"* %4)
          to label %5 unwind label %35

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.25
  %7 = load i32, i32* @y.26
  %8 = add i32 %6, -1590737747
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1590737747
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %7, 10
  %16 = and i1 %14, %15
  %17 = xor i1 %14, %15
  %18 = or i1 %16, %17
  %19 = or i1 %14, %15
  br i1 %18, label %20, label %38

; <label>:20:                                     ; preds = %5, %38
  %21 = load i32, i32* @x.25
  %22 = load i32, i32* @y.26
  %23 = sub i32 0, 1
  %24 = add i32 %21, %23
  %25 = sub i32 %21, 1
  %26 = mul i32 %21, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %22, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  br i1 %32, label %34, label %38

; <label>:34:                                     ; preds = %20
  ret void

; <label>:35:                                     ; preds = %1
  %36 = landingpad { i8*, i32 }
          catch i8* null
  %37 = extractvalue { i8*, i32 } %36, 0
  call void @__clang_call_terminate(i8* %37) #11
  unreachable

; <label>:38:                                     ; preds = %20, %5
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE6assignEmRKSB_(%"class.std::vector"*, i64, %"class.std::vector.0"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %6, align 8
  %7 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  call void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE14_M_fill_assignEmRKSB_(%"class.std::vector"* %7, i64 %8, %"class.std::vector.0"* dereferenceable(24) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2Ev(%"class.std::vector.0"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.29
  %3 = load i32, i32* @y.30
  %4 = add i32 %2, 979366282
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 979366282
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %38

; <label>:16:                                     ; preds = %1, %38
  %17 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %17, align 8
  %18 = load %"class.std::vector.0"*, %"class.std::vector.0"** %17, align 8
  %19 = bitcast %"class.std::vector.0"* %18 to %"struct.std::_Vector_base.1"*
  %20 = load i32, i32* @x.29
  %21 = load i32, i32* @y.30
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  br i1 %31, label %33, label %38

; <label>:33:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2Ev(%"struct.std::_Vector_base.1"* %19)
          to label %34 unwind label %35

; <label>:34:                                     ; preds = %33
  ret void

; <label>:35:                                     ; preds = %33
  %36 = landingpad { i8*, i32 }
          catch i8* null
  %37 = extractvalue { i8*, i32 } %36, 0
  call void @__clang_call_terminate(i8* %37) #11
  unreachable

; <label>:38:                                     ; preds = %16, %1
  %39 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %39, align 8
  %40 = load %"class.std::vector.0"*, %"class.std::vector.0"** %39, align 8
  %41 = bitcast %"class.std::vector.0"* %40 to %"struct.std::_Vector_base.1"*
  br label %16
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EED2Ev(%"class.std::vector.0"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.31
  %3 = load i32, i32* @y.32
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %108

; <label>:15:                                     ; preds = %1, %108
  %16 = alloca %"class.std::vector.0"*, align 8
  %17 = alloca i8*
  %18 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %16, align 8
  %19 = load %"class.std::vector.0"*, %"class.std::vector.0"** %16, align 8
  %20 = bitcast %"class.std::vector.0"* %19 to %"struct.std::_Vector_base.1"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %21, i32 0, i32 0
  %23 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %22, align 8
  %24 = bitcast %"class.std::vector.0"* %19 to %"struct.std::_Vector_base.1"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %25, i32 0, i32 1
  %27 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %26, align 8
  %28 = bitcast %"class.std::vector.0"* %19 to %"struct.std::_Vector_base.1"*
  %29 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %28) #3
  %30 = load i32, i32* @x.31
  %31 = load i32, i32* @y.32
  %32 = sub i32 %30, 1840988819
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 1840988819
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  br i1 %54, label %56, label %108

; <label>:56:                                     ; preds = %15
  invoke void @_ZSt8_DestroyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEES9_EvT_SB_RSaIT0_E(%"class.std::unordered_map"* %23, %"class.std::unordered_map"* %27, %"class.std::allocator.2"* dereferenceable(1) %29)
          to label %57 unwind label %59

; <label>:57:                                     ; preds = %56
  %58 = bitcast %"class.std::vector.0"* %19 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EED2Ev(%"struct.std::_Vector_base.1"* %58) #3
  ret void

; <label>:59:                                     ; preds = %56
  %60 = landingpad { i8*, i32 }
          catch i8* null
  %61 = extractvalue { i8*, i32 } %60, 0
  store i8* %61, i8** %17, align 8
  %62 = extractvalue { i8*, i32 } %60, 1
  store i32 %62, i32* %18, align 4
  %63 = bitcast %"class.std::vector.0"* %19 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EED2Ev(%"struct.std::_Vector_base.1"* %63) #3
  br label %64

; <label>:64:                                     ; preds = %59
  %65 = load i32, i32* @x.31
  %66 = load i32, i32* @y.32
  %67 = add i32 %65, 2016491059
  %68 = sub i32 %67, 1
  %69 = sub i32 %68, 2016491059
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  br i1 %77, label %79, label %123

; <label>:79:                                     ; preds = %64, %123
  %80 = load i8*, i8** %17, align 8
  call void @__clang_call_terminate(i8* %80) #11
  %81 = load i32, i32* @x.31
  %82 = load i32, i32* @y.32
  %83 = add i32 %81, -1196267965
  %84 = sub i32 %83, 1
  %85 = sub i32 %84, -1196267965
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = xor i1 %89, true
  %92 = xor i1 %90, true
  %93 = xor i1 true, true
  %94 = and i1 %91, true
  %95 = and i1 %89, %93
  %96 = and i1 %92, true
  %97 = and i1 %90, %93
  %98 = or i1 %94, %95
  %99 = or i1 %96, %97
  %100 = xor i1 %98, %99
  %101 = or i1 %91, %92
  %102 = xor i1 %101, true
  %103 = or i1 true, %93
  %104 = and i1 %102, %103
  %105 = or i1 %100, %104
  %106 = or i1 %89, %90
  br i1 %105, label %107, label %123

; <label>:107:                                    ; preds = %79
  unreachable

; <label>:108:                                    ; preds = %15, %1
  %109 = alloca %"class.std::vector.0"*, align 8
  %110 = alloca i8*
  %111 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %109, align 8
  %112 = load %"class.std::vector.0"*, %"class.std::vector.0"** %109, align 8
  %113 = bitcast %"class.std::vector.0"* %112 to %"struct.std::_Vector_base.1"*
  %114 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %113, i32 0, i32 0
  %115 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %114, i32 0, i32 0
  %116 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %115, align 8
  %117 = bitcast %"class.std::vector.0"* %112 to %"struct.std::_Vector_base.1"*
  %118 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %117, i32 0, i32 0
  %119 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %118, i32 0, i32 1
  %120 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %119, align 8
  %121 = bitcast %"class.std::vector.0"* %112 to %"struct.std::_Vector_base.1"*
  %122 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %121) #3
  br label %15

; <label>:123:                                    ; preds = %79, %64
  %124 = load i8*, i8** %17, align 8
  call void @__clang_call_terminate(i8* %124) #11
  br label %79
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE6assignEmRKS9_(%"class.std::vector.0"*, i64, %"class.std::unordered_map"* dereferenceable(56)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %6, align 8
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  call void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE14_M_fill_assignEmRKS9_(%"class.std::vector.0"* %7, i64 %8, %"class.std::unordered_map"* dereferenceable(56) %9)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEC2Ev(%"class.std::unordered_map"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %2, align 8
  %3 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %2, align 8
  %4 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %3, i32 0, i32 0
  call void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEC2Ev(%"class.std::_Hashtable"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEED2Ev(%"class.std::unordered_map"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %2, align 8
  %3 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %2, align 8
  %4 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %3, i32 0, i32 0
  call void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEED2Ev(%"class.std::_Hashtable"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEixEOi(%"class.std::unordered_map"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca %"class.std::unordered_map"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %3, align 8
  %6 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %5, i32 0, i32 0
  %7 = bitcast %"class.std::_Hashtable"* %6 to %"struct.std::__detail::_Map_base"*
  %8 = load i32*, i32** %4, align 8
  %9 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %8) #3
  %10 = call dereferenceable(8) i64* @_ZNSt8__detail9_Map_baseIiSt4pairIKixESaIS3_ENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb0ELb0ELb1EEELb1EEixEOi(%"struct.std::__detail::_Map_base"* %7, i32* dereferenceable(4) %9)
  ret i64* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEixERS5_(%"class.std::unordered_map"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca %"class.std::unordered_map"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %3, align 8
  %6 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %5, i32 0, i32 0
  %7 = bitcast %"class.std::_Hashtable"* %6 to %"struct.std::__detail::_Map_base"*
  %8 = load i32*, i32** %4, align 8
  %9 = call dereferenceable(8) i64* @_ZNSt8__detail9_Map_baseIiSt4pairIKixESaIS3_ENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb0ELb0ELb1EEELb1EEixERS2_(%"struct.std::__detail::_Map_base"* %7, i32* dereferenceable(4) %8)
  ret i64* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EED2Ev(%"class.std::vector"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  %10 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::vector.0"*, %"class.std::vector.0"** %12, align 8
  %14 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14) #3
  invoke void @_ZSt8_DestroyIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESC_EvT_SE_RSaIT0_E(%"class.std::vector.0"* %9, %"class.std::vector.0"* %13, %"class.std::allocator"* dereferenceable(1) %15)
          to label %16 unwind label %72

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.43
  %18 = load i32, i32* @y.44
  %19 = add i32 %17, 1847155854
  %20 = sub i32 %19, 1
  %21 = sub i32 %20, 1847155854
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 true, true
  %30 = and i1 %27, true
  %31 = and i1 %25, %29
  %32 = and i1 %28, true
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 true, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  br i1 %41, label %43, label %79

; <label>:43:                                     ; preds = %16, %79
  %44 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EED2Ev(%"struct.std::_Vector_base"* %44) #3
  %45 = load i32, i32* @x.43
  %46 = load i32, i32* @y.44
  %47 = sub i32 %45, -626615184
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -626615184
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  br i1 %69, label %71, label %79

; <label>:71:                                     ; preds = %43
  ret void

; <label>:72:                                     ; preds = %1
  %73 = landingpad { i8*, i32 }
          catch i8* null
  %74 = extractvalue { i8*, i32 } %73, 0
  store i8* %74, i8** %3, align 8
  %75 = extractvalue { i8*, i32 } %73, 1
  store i32 %75, i32* %4, align 4
  %76 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EED2Ev(%"struct.std::_Vector_base"* %76) #3
  br label %77

; <label>:77:                                     ; preds = %72
  %78 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %78) #11
  unreachable

; <label>:79:                                     ; preds = %43, %16
  %80 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EED2Ev(%"struct.std::_Vector_base"* %80) #3
  br label %43
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEC2Ev(%"class.std::_Hashtable"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::_Hashtable"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %2, align 8
  %3 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %2, align 8
  %4 = bitcast %"class.std::_Hashtable"* %3 to %"struct.std::__detail::_Hashtable_base"*
  %5 = bitcast %"class.std::_Hashtable"* %3 to %"struct.std::__detail::_Map_base"*
  %6 = bitcast %"class.std::_Hashtable"* %3 to %"struct.std::__detail::_Insert"*
  %7 = bitcast %"class.std::_Hashtable"* %3 to %"struct.std::__detail::_Rehash_base"*
  %8 = bitcast %"class.std::_Hashtable"* %3 to %"struct.std::__detail::_Equality"*
  %9 = bitcast %"class.std::_Hashtable"* %3 to %"struct.std::__detail::_Hashtable_alloc"*
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEEC2Ev(%"struct.std::__detail::_Hashtable_alloc"* %9) #3
  %10 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 5
  store %"struct.std::__detail::_Hash_node_base"** %11, %"struct.std::__detail::_Hash_node_base"*** %10, align 8
  %12 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 1
  store i64 1, i64* %12, align 8
  %13 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 2
  call void @_ZNSt8__detail15_Hash_node_baseC2Ev(%"struct.std::__detail::_Hash_node_base"* %13) #3
  %14 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 3
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 4
  call void @_ZNSt8__detail20_Prime_rehash_policyC2Ef(%"struct.std::__detail::_Prime_rehash_policy"* %15, float 1.000000e+00) #3
  %16 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 5
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %16, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEEC2Ev(%"struct.std::__detail::_Hashtable_alloc"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.47
  %5 = load i32, i32* @y.48
  %6 = add i32 %4, 2071953450
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 2071953450
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1962904709, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1962904709, label %18
    i32 -947107504, label %38
    i32 1369738268, label %69
    i32 -1031318782, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -947107504, i32 -1031318782
  store i32 %37, i32* %14
  br label %74

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %39, align 8
  %40 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %39, align 8
  %41 = bitcast %"struct.std::__detail::_Hashtable_alloc"* %40 to %"struct.std::__detail::_Hashtable_ebo_helper.8"*
  call void @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EEC2Ev(%"struct.std::__detail::_Hashtable_ebo_helper.8"* %41) #3
  %42 = load i32, i32* @x.47
  %43 = load i32, i32* @y.48
  %44 = sub i32 %42, -247436073
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -247436073
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1369738268, i32 -1031318782
  store i32 %68, i32* %14
  br label %74

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %71, align 8
  %72 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %71, align 8
  %73 = bitcast %"struct.std::__detail::_Hashtable_alloc"* %72 to %"struct.std::__detail::_Hashtable_ebo_helper.8"*
  call void @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EEC2Ev(%"struct.std::__detail::_Hashtable_ebo_helper.8"* %73) #3
  store i32 -947107504, i32* %14
  br label %74

; <label>:74:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail15_Hash_node_baseC2Ev(%"struct.std::__detail::_Hash_node_base"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node_base"*, align 8
  store %"struct.std::__detail::_Hash_node_base"* %0, %"struct.std::__detail::_Hash_node_base"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %3, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail20_Prime_rehash_policyC2Ef(%"struct.std::__detail::_Prime_rehash_policy"*, float) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Prime_rehash_policy"*, align 8
  %4 = alloca float, align 4
  store %"struct.std::__detail::_Prime_rehash_policy"* %0, %"struct.std::__detail::_Prime_rehash_policy"** %3, align 8
  store float %1, float* %4, align 4
  %5 = load %"struct.std::__detail::_Prime_rehash_policy"*, %"struct.std::__detail::_Prime_rehash_policy"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Prime_rehash_policy"* %5, i32 0, i32 0
  %7 = load float, float* %4, align 4
  store float %7, float* %6, align 8
  %8 = getelementptr inbounds %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Prime_rehash_policy"* %5, i32 0, i32 1
  store i64 0, i64* %8, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EEC2Ev(%"struct.std::__detail::_Hashtable_ebo_helper.8"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.8"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.8"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.8"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_ebo_helper.8"*, %"struct.std::__detail::_Hashtable_ebo_helper.8"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.8"* %3 to %"class.std::allocator.9"*
  call void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEC2Ev(%"class.std::allocator.9"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEC2Ev(%"class.std::allocator.9"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %2, align 8
  %3 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %2, align 8
  %4 = bitcast %"class.std::allocator.9"* %3 to %"class.__gnu_cxx::new_allocator.10"*
  call void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEC2Ev(%"class.__gnu_cxx::new_allocator.10"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEC2Ev(%"class.__gnu_cxx::new_allocator.10"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEED2Ev(%"class.std::_Hashtable"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::_Hashtable"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %2, align 8
  %5 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %2, align 8
  call void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv(%"class.std::_Hashtable"* %5) #3
  invoke void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_deallocate_bucketsEv(%"class.std::_Hashtable"* %5)
          to label %6 unwind label %8

; <label>:6:                                      ; preds = %1
  %7 = bitcast %"class.std::_Hashtable"* %5 to %"struct.std::__detail::_Hashtable_alloc"*
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEED2Ev(%"struct.std::__detail::_Hashtable_alloc"* %7) #3
  ret void

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* @x.59
  %10 = load i32, i32* @y.60
  %11 = sub i32 %9, -650828422
  %12 = sub i32 %11, 1
  %13 = add i32 %12, -650828422
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %10, 10
  %19 = xor i1 %17, true
  %20 = xor i1 %18, true
  %21 = xor i1 true, true
  %22 = and i1 %19, true
  %23 = and i1 %17, %21
  %24 = and i1 %20, true
  %25 = and i1 %18, %21
  %26 = or i1 %22, %23
  %27 = or i1 %24, %25
  %28 = xor i1 %26, %27
  %29 = or i1 %19, %20
  %30 = xor i1 %29, true
  %31 = or i1 true, %21
  %32 = and i1 %30, %31
  %33 = or i1 %28, %32
  %34 = or i1 %17, %18
  br i1 %33, label %35, label %99

; <label>:35:                                     ; preds = %8, %99
  %36 = landingpad { i8*, i32 }
          catch i8* null
  %37 = extractvalue { i8*, i32 } %36, 0
  store i8* %37, i8** %3, align 8
  %38 = extractvalue { i8*, i32 } %36, 1
  store i32 %38, i32* %4, align 4
  %39 = bitcast %"class.std::_Hashtable"* %5 to %"struct.std::__detail::_Hashtable_alloc"*
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEED2Ev(%"struct.std::__detail::_Hashtable_alloc"* %39) #3
  %40 = load i32, i32* @x.59
  %41 = load i32, i32* @y.60
  %42 = sub i32 %40, 216794481
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 216794481
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  br i1 %52, label %54, label %99

; <label>:54:                                     ; preds = %35
  br label %55

; <label>:55:                                     ; preds = %54
  %56 = load i32, i32* @x.59
  %57 = load i32, i32* @y.60
  %58 = add i32 %56, -1656116743
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, -1656116743
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 true, true
  %69 = and i1 %66, true
  %70 = and i1 %64, %68
  %71 = and i1 %67, true
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 true, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  br i1 %80, label %82, label %104

; <label>:82:                                     ; preds = %55, %104
  %83 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %83) #11
  %84 = load i32, i32* @x.59
  %85 = load i32, i32* @y.60
  %86 = sub i32 %84, -1866330931
  %87 = sub i32 %86, 1
  %88 = add i32 %87, -1866330931
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = and i1 %92, %93
  %95 = xor i1 %92, %93
  %96 = or i1 %94, %95
  %97 = or i1 %92, %93
  br i1 %96, label %98, label %104

; <label>:98:                                     ; preds = %82
  unreachable

; <label>:99:                                     ; preds = %35, %8
  %100 = landingpad { i8*, i32 }
          catch i8* null
  %101 = extractvalue { i8*, i32 } %100, 0
  store i8* %101, i8** %3, align 8
  %102 = extractvalue { i8*, i32 } %100, 1
  store i32 %102, i32* %4, align 4
  %103 = bitcast %"class.std::_Hashtable"* %5 to %"struct.std::__detail::_Hashtable_alloc"*
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEED2Ev(%"struct.std::__detail::_Hashtable_alloc"* %103) #3
  br label %35

; <label>:104:                                    ; preds = %82, %55
  %105 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %105) #11
  br label %82
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv(%"class.std::_Hashtable"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.61
  %3 = load i32, i32* @y.62
  %4 = sub i32 %2, -1784939746
  %5 = sub i32 %4, 1
  %6 = add i32 %5, -1784939746
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %132

; <label>:28:                                     ; preds = %1, %132
  %29 = alloca %"class.std::_Hashtable"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %29, align 8
  %30 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %29, align 8
  %31 = bitcast %"class.std::_Hashtable"* %30 to %"struct.std::__detail::_Hashtable_alloc"*
  %32 = load i32, i32* @x.61
  %33 = load i32, i32* @y.62
  %34 = add i32 %32, -213064553
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -213064553
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %132

; <label>:46:                                     ; preds = %28
  %47 = invoke %"struct.std::__detail::_Hash_node"* @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_beginEv(%"class.std::_Hashtable"* %30)
          to label %48 unwind label %129

; <label>:48:                                     ; preds = %46
  %49 = load i32, i32* @x.61
  %50 = load i32, i32* @y.62
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  br i1 %60, label %62, label %136

; <label>:62:                                     ; preds = %48, %136
  %63 = load i32, i32* @x.61
  %64 = load i32, i32* @y.62
  %65 = sub i32 %63, -1984359518
  %66 = sub i32 %65, 1
  %67 = add i32 %66, -1984359518
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = xor i1 %71, true
  %74 = xor i1 %72, true
  %75 = xor i1 true, true
  %76 = and i1 %73, true
  %77 = and i1 %71, %75
  %78 = and i1 %74, true
  %79 = and i1 %72, %75
  %80 = or i1 %76, %77
  %81 = or i1 %78, %79
  %82 = xor i1 %80, %81
  %83 = or i1 %73, %74
  %84 = xor i1 %83, true
  %85 = or i1 true, %75
  %86 = and i1 %84, %85
  %87 = or i1 %82, %86
  %88 = or i1 %71, %72
  br i1 %87, label %89, label %136

; <label>:89:                                     ; preds = %62
  invoke void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE19_M_deallocate_nodesEPS5_(%"struct.std::__detail::_Hashtable_alloc"* %31, %"struct.std::__detail::_Hash_node"* %47)
          to label %90 unwind label %129

; <label>:90:                                     ; preds = %89
  %91 = load i32, i32* @x.61
  %92 = load i32, i32* @y.62
  %93 = sub i32 %91, -1266170704
  %94 = sub i32 %93, 1
  %95 = add i32 %94, -1266170704
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  br i1 %103, label %105, label %137

; <label>:105:                                    ; preds = %90, %137
  %106 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %30, i32 0, i32 0
  %107 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %106, align 8
  %108 = bitcast %"struct.std::__detail::_Hash_node_base"** %107 to i8*
  %109 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %30, i32 0, i32 1
  %110 = load i64, i64* %109, align 8
  %111 = mul i64 %110, 8
  call void @llvm.memset.p0i8.i64(i8* %108, i8 0, i64 %111, i32 8, i1 false)
  %112 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %30, i32 0, i32 3
  store i64 0, i64* %112, align 8
  %113 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %30, i32 0, i32 2
  %114 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %113, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %114, align 8
  %115 = load i32, i32* @x.61
  %116 = load i32, i32* @y.62
  %117 = sub i32 0, 1
  %118 = add i32 %115, %117
  %119 = sub i32 %115, 1
  %120 = mul i32 %115, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %116, 10
  %124 = and i1 %122, %123
  %125 = xor i1 %122, %123
  %126 = or i1 %124, %125
  %127 = or i1 %122, %123
  br i1 %126, label %128, label %137

; <label>:128:                                    ; preds = %105
  ret void

; <label>:129:                                    ; preds = %89, %46
  %130 = landingpad { i8*, i32 }
          catch i8* null
  %131 = extractvalue { i8*, i32 } %130, 0
  call void @__clang_call_terminate(i8* %131) #11
  unreachable

; <label>:132:                                    ; preds = %28, %1
  %133 = alloca %"class.std::_Hashtable"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %133, align 8
  %134 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %133, align 8
  %135 = bitcast %"class.std::_Hashtable"* %134 to %"struct.std::__detail::_Hashtable_alloc"*
  br label %28

; <label>:136:                                    ; preds = %62, %48
  br label %62

; <label>:137:                                    ; preds = %105, %90
  %138 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %30, i32 0, i32 0
  %139 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %138, align 8
  %140 = bitcast %"struct.std::__detail::_Hash_node_base"** %139 to i8*
  %141 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %30, i32 0, i32 1
  %142 = load i64, i64* %141, align 8
  %143 = add i64 0, 4222257728580674304
  %144 = sub i64 %143, %142
  %145 = sub i64 %144, 4222257728580674304
  %146 = sub i64 0, %142
  %147 = sub i64 0, 8
  %148 = sub i64 %145, %147
  %149 = add i64 %145, 8
  %150 = mul i64 %142, 8
  call void @llvm.memset.p0i8.i64(i8* %140, i8 0, i64 %150, i32 8, i1 false)
  %151 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %30, i32 0, i32 3
  store i64 0, i64* %151, align 8
  %152 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %30, i32 0, i32 2
  %153 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %152, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %153, align 8
  br label %105
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_deallocate_bucketsEv(%"class.std::_Hashtable"*) #0 comdat align 2 {
  %2 = alloca %"class.std::_Hashtable"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %2, align 8
  %3 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 0
  %5 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %4, align 8
  %6 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  call void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_deallocate_bucketsEPPNS4_15_Hash_node_baseEm(%"class.std::_Hashtable"* %3, %"struct.std::__detail::_Hash_node_base"** %5, i64 %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEED2Ev(%"struct.std::__detail::_Hashtable_alloc"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_alloc"* %3 to %"struct.std::__detail::_Hashtable_ebo_helper.8"*
  call void @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EED2Ev(%"struct.std::__detail::_Hashtable_ebo_helper.8"* %4) #3
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #7 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #11
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE19_M_deallocate_nodesEPS5_(%"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hash_node"*) #0 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Hashtable_alloc"*
  %4 = alloca %"struct.std::__detail::_Hash_node"**
  %5 = alloca %"struct.std::__detail::_Hash_node"**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.69
  %9 = load i32, i32* @y.70
  %10 = add i32 %8, -1566082452
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -1566082452
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1275067479, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %86
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1275067479, label %22
    i32 249456275, label %30
    i32 -417011983, label %63
    i32 815290818, label %64
    i32 -1219567571, label %69
    i32 -167328586, label %80
    i32 190863047, label %81
  ]

; <label>:21:                                     ; preds = %19
  br label %86

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 249456275, i32 190863047
  store i32 %29, i32* %18
  br label %86

; <label>:30:                                     ; preds = %19
  %31 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  %32 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_node"** %32, %"struct.std::__detail::_Hash_node"*** %5
  %33 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_node"** %33, %"struct.std::__detail::_Hash_node"*** %4
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %31, align 8
  %34 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %5
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %34, align 8
  %35 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %31, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %35, %"struct.std::__detail::_Hashtable_alloc"** %3
  %36 = load i32, i32* @x.69
  %37 = load i32, i32* @y.70
  %38 = sub i32 %36, -2045743842
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -2045743842
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 -417011983, i32 190863047
  store i32 %62, i32* %18
  br label %86

; <label>:63:                                     ; preds = %19
  store i32 815290818, i32* %18
  br label %86

; <label>:64:                                     ; preds = %19
  %65 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %5
  %66 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %65, align 8
  %67 = icmp ne %"struct.std::__detail::_Hash_node"* %66, null
  %68 = select i1 %67, i32 -1219567571, i32 -167328586
  store i32 %68, i32* %18
  br label %86

; <label>:69:                                     ; preds = %19
  %70 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %5
  %71 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %70, align 8
  %72 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %4
  store %"struct.std::__detail::_Hash_node"* %71, %"struct.std::__detail::_Hash_node"** %72, align 8
  %73 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %5
  %74 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %73, align 8
  %75 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %74) #3
  %76 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %5
  store %"struct.std::__detail::_Hash_node"* %75, %"struct.std::__detail::_Hash_node"** %76, align 8
  %77 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %4
  %78 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %77, align 8
  %79 = load volatile %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %3
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE18_M_deallocate_nodeEPS5_(%"struct.std::__detail::_Hashtable_alloc"* %79, %"struct.std::__detail::_Hash_node"* %78)
  store i32 815290818, i32* %18
  br label %86

; <label>:80:                                     ; preds = %19
  ret void

; <label>:81:                                     ; preds = %19
  %82 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  %83 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %84 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %82, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %83, align 8
  %85 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %82, align 8
  store i32 249456275, i32* %18
  br label %86

; <label>:86:                                     ; preds = %81, %69, %64, %63, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_beginEv(%"class.std::_Hashtable"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Hashtable"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %2, align 8
  %3 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 2
  %5 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %4, i32 0, i32 0
  %6 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %5, align 8
  %7 = bitcast %"struct.std::__detail::_Hash_node_base"* %6 to %"struct.std::__detail::_Hash_node"*
  ret %"struct.std::__detail::_Hash_node"* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_node"* %0, %"struct.std::__detail::_Hash_node"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hash_node"* %3 to %"struct.std::__detail::_Hash_node_base"*
  %5 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %4, i32 0, i32 0
  %6 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %5, align 8
  %7 = bitcast %"struct.std::__detail::_Hash_node_base"* %6 to %"struct.std::__detail::_Hash_node"*
  ret %"struct.std::__detail::_Hash_node"* %7
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE18_M_deallocate_nodeEPS5_(%"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hash_node"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  %4 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %6 = alloca %"class.std::allocator.12", align 1
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %3, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %4, align 8
  %9 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %3, align 8
  %10 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %4, align 8
  %11 = call %"struct.std::__detail::_Hash_node"* @_ZNSt14pointer_traitsIPNSt8__detail10_Hash_nodeISt4pairIKixELb0EEEE10pointer_toERS5_(%"struct.std::__detail::_Hash_node"* dereferenceable(24) %10) #3
  store %"struct.std::__detail::_Hash_node"* %11, %"struct.std::__detail::_Hash_node"** %5, align 8
  %12 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %9)
  call void @_ZNSaISt4pairIKixEEC2INSt8__detail10_Hash_nodeIS1_Lb0EEEEERKSaIT_E(%"class.std::allocator.12"* %6, %"class.std::allocator.9"* dereferenceable(1) %12) #3
  %13 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %4, align 8
  %14 = bitcast %"struct.std::__detail::_Hash_node"* %13 to %"struct.std::__detail::_Hash_node_value_base"*
  %15 = call %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"* %14) #3
  invoke void @_ZNSt16allocator_traitsISaISt4pairIKixEEE7destroyIS2_EEvRS3_PT_(%"class.std::allocator.12"* dereferenceable(1) %6, %"struct.std::pair"* %15)
          to label %16 unwind label %22

; <label>:16:                                     ; preds = %2
  %17 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %4, align 8
  %18 = invoke dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %9)
          to label %19 unwind label %22

; <label>:19:                                     ; preds = %16
  %20 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %5, align 8
  invoke void @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE10deallocateERS6_PS5_m(%"class.std::allocator.9"* dereferenceable(1) %18, %"struct.std::__detail::_Hash_node"* %20, i64 1)
          to label %21 unwind label %22

; <label>:21:                                     ; preds = %19
  call void @_ZNSaISt4pairIKixEED2Ev(%"class.std::allocator.12"* %6) #3
  ret void

; <label>:22:                                     ; preds = %19, %16, %2
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  store i8* %24, i8** %7, align 8
  %25 = extractvalue { i8*, i32 } %23, 1
  store i32 %25, i32* %8, align 4
  call void @_ZNSaISt4pairIKixEED2Ev(%"class.std::allocator.12"* %6) #3
  br label %26

; <label>:26:                                     ; preds = %22
  %27 = load i8*, i8** %7, align 8
  %28 = load i32, i32* %8, align 4
  %29 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %30 = insertvalue { i8*, i32 } %29, i32 %28, 1
  resume { i8*, i32 } %30
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNSt14pointer_traitsIPNSt8__detail10_Hash_nodeISt4pairIKixELb0EEEE10pointer_toERS5_(%"struct.std::__detail::_Hash_node"* dereferenceable(24)) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_node"* %0, %"struct.std::__detail::_Hash_node"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %2, align 8
  %4 = call %"struct.std::__detail::_Hash_node"* @_ZSt9addressofINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEPT_RS6_(%"struct.std::__detail::_Hash_node"* dereferenceable(24) %3) #3
  ret %"struct.std::__detail::_Hash_node"* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_alloc"* %3 to %"struct.std::__detail::_Hashtable_ebo_helper.8"*
  %5 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EE6_S_getERS7_(%"struct.std::__detail::_Hashtable_ebo_helper.8"* dereferenceable(1) %4)
  ret %"class.std::allocator.9"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt4pairIKixEEC2INSt8__detail10_Hash_nodeIS1_Lb0EEEEERKSaIT_E(%"class.std::allocator.12"*, %"class.std::allocator.9"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.81
  %6 = load i32, i32* @y.82
  %7 = add i32 %5, -2120497208
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -2120497208
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 364142885, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %52
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 364142885, label %19
    i32 -1586185821, label %27
    i32 -365622386, label %46
    i32 806313003, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %52

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1586185821, i32 806313003
  store i32 %26, i32* %15
  br label %52

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.12"*, align 8
  %29 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %28, align 8
  store %"class.std::allocator.9"* %1, %"class.std::allocator.9"** %29, align 8
  %30 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %28, align 8
  %31 = bitcast %"class.std::allocator.12"* %30 to %"class.__gnu_cxx::new_allocator.13"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIKixEEC2Ev(%"class.__gnu_cxx::new_allocator.13"* %31) #3
  %32 = load i32, i32* @x.81
  %33 = load i32, i32* @y.82
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -365622386, i32 806313003
  store i32 %45, i32* %15
  br label %52

; <label>:46:                                     ; preds = %16
  ret void

; <label>:47:                                     ; preds = %16
  %48 = alloca %"class.std::allocator.12"*, align 8
  %49 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %48, align 8
  store %"class.std::allocator.9"* %1, %"class.std::allocator.9"** %49, align 8
  %50 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %48, align 8
  %51 = bitcast %"class.std::allocator.12"* %50 to %"class.__gnu_cxx::new_allocator.13"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIKixEEC2Ev(%"class.__gnu_cxx::new_allocator.13"* %51) #3
  store i32 -1586185821, i32* %15
  br label %52

; <label>:52:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIKixEEE7destroyIS2_EEvRS3_PT_(%"class.std::allocator.12"* dereferenceable(1), %"struct.std::pair"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.12"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %3, align 8
  %6 = bitcast %"class.std::allocator.12"* %5 to %"class.__gnu_cxx::new_allocator.13"*
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIKixEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator.13"* %6, %"struct.std::pair"* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node_value_base"*, align 8
  store %"struct.std::__detail::_Hash_node_value_base"* %0, %"struct.std::__detail::_Hash_node_value_base"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node_value_base"*, %"struct.std::__detail::_Hash_node_value_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::__detail::_Hash_node_value_base", %"struct.std::__detail::_Hash_node_value_base"* %3, i32 0, i32 1
  %5 = call %"struct.std::pair"* @_ZN9__gnu_cxx16__aligned_bufferISt4pairIKixEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_buffer"* %4) #3
  ret %"struct.std::pair"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE10deallocateERS6_PS5_m(%"class.std::allocator.9"* dereferenceable(1), %"struct.std::__detail::_Hash_node"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.9"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %4, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %4, align 8
  %8 = bitcast %"class.std::allocator.9"* %7 to %"class.__gnu_cxx::new_allocator.10"*
  %9 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator.10"* %8, %"struct.std::__detail::_Hash_node"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt4pairIKixEED2Ev(%"class.std::allocator.12"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.89
  %5 = load i32, i32* @y.90
  %6 = sub i32 %4, -848341604
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -848341604
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1311796591, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1311796591, label %18
    i32 1898861241, label %26
    i32 -784568820, label %57
    i32 118931812, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1898861241, i32 118931812
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.12"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %27, align 8
  %28 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %27, align 8
  %29 = bitcast %"class.std::allocator.12"* %28 to %"class.__gnu_cxx::new_allocator.13"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIKixEED2Ev(%"class.__gnu_cxx::new_allocator.13"* %29) #3
  %30 = load i32, i32* @x.89
  %31 = load i32, i32* @y.90
  %32 = sub i32 %30, 1312836820
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 1312836820
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -784568820, i32 118931812
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::allocator.12"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %59, align 8
  %60 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %59, align 8
  %61 = bitcast %"class.std::allocator.12"* %60 to %"class.__gnu_cxx::new_allocator.13"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIKixEED2Ev(%"class.__gnu_cxx::new_allocator.13"* %61) #3
  store i32 1898861241, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZSt9addressofINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEPT_RS6_(%"struct.std::__detail::_Hash_node"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_node"* %0, %"struct.std::__detail::_Hash_node"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %2, align 8
  %4 = call %"struct.std::__detail::_Hash_node"* @_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEPT_RS6_(%"struct.std::__detail::_Hash_node"* dereferenceable(24) %3) #3
  ret %"struct.std::__detail::_Hash_node"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEPT_RS6_(%"struct.std::__detail::_Hash_node"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_node"* %0, %"struct.std::__detail::_Hash_node"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hash_node"* %3 to i8*
  %5 = bitcast i8* %4 to %"struct.std::__detail::_Hash_node"*
  ret %"struct.std::__detail::_Hash_node"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EE6_S_getERS7_(%"struct.std::__detail::_Hashtable_ebo_helper.8"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.8"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.8"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.8"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_ebo_helper.8"*, %"struct.std::__detail::_Hashtable_ebo_helper.8"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.8"* %3 to %"class.std::allocator.9"*
  ret %"class.std::allocator.9"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIKixEEC2Ev(%"class.__gnu_cxx::new_allocator.13"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIKixEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator.13"*, %"struct.std::pair"*) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.99
  %6 = load i32, i32* @y.100
  %7 = add i32 %5, -1557699396
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1557699396
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -60793119, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -60793119, label %19
    i32 -1552595085, label %39
    i32 -1912107070, label %58
    i32 -949173860, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1552595085, i32 -949173860
  store i32 %38, i32* %15
  br label %64

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  %41 = alloca %"struct.std::pair"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %40, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %41, align 8
  %42 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %40, align 8
  %43 = load %"struct.std::pair"*, %"struct.std::pair"** %41, align 8
  %44 = load i32, i32* @x.99
  %45 = load i32, i32* @y.100
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -1912107070, i32 -949173860
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  ret void

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  %61 = alloca %"struct.std::pair"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %60, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %61, align 8
  %62 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %60, align 8
  %63 = load %"struct.std::pair"*, %"struct.std::pair"** %61, align 8
  store i32 -1552595085, i32* %15
  br label %64

; <label>:64:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"* @_ZN9__gnu_cxx16__aligned_bufferISt4pairIKixEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_buffer"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_buffer"*, align 8
  store %"struct.__gnu_cxx::__aligned_buffer"* %0, %"struct.__gnu_cxx::__aligned_buffer"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_buffer"*, %"struct.__gnu_cxx::__aligned_buffer"** %2, align 8
  %4 = call i8* @_ZN9__gnu_cxx16__aligned_bufferISt4pairIKixEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_buffer"* %3) #3
  %5 = bitcast i8* %4 to %"struct.std::pair"*
  ret %"struct.std::pair"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZN9__gnu_cxx16__aligned_bufferISt4pairIKixEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_buffer"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_buffer"*, align 8
  store %"struct.__gnu_cxx::__aligned_buffer"* %0, %"struct.__gnu_cxx::__aligned_buffer"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_buffer"*, %"struct.__gnu_cxx::__aligned_buffer"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_buffer", %"struct.__gnu_cxx::__aligned_buffer"* %3, i32 0, i32 0
  %5 = bitcast %"union.std::aligned_storage<16, 8>::type"* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator.10"*, %"struct.std::__detail::_Hash_node"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %4, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %4, align 8
  %8 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %5, align 8
  %9 = bitcast %"struct.std::__detail::_Hash_node"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIKixEED2Ev(%"class.__gnu_cxx::new_allocator.13"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_deallocate_bucketsEPPNS4_15_Hash_node_baseEm(%"class.std::_Hashtable"*, %"struct.std::__detail::_Hash_node_base"**, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::__detail::_Hash_node_base"**
  %5 = alloca %"class.std::_Hashtable"*
  %6 = alloca %"class.std::_Hashtable"*, align 8
  %7 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %8 = alloca i64, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %6, align 8
  store %"struct.std::__detail::_Hash_node_base"** %1, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %6, align 8
  store %"class.std::_Hashtable"* %9, %"class.std::_Hashtable"** %5
  %10 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  store %"struct.std::__detail::_Hash_node_base"** %10, %"struct.std::__detail::_Hash_node_base"*** %4
  %11 = alloca i32
  store i32 -2101426477, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %115
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -2101426477, label %15
    i32 -587293417, label %20
    i32 644605922, label %48
    i32 2052804506, label %64
    i32 -1387546551, label %65
    i32 1897236365, label %70
    i32 882520141, label %97
    i32 1465849072, label %112
    i32 1755085606, label %113
    i32 759064100, label %114
  ]

; <label>:14:                                     ; preds = %12
  br label %115

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %17 = load volatile %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %4
  %18 = call zeroext i1 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_uses_single_bucketEPPNS4_15_Hash_node_baseE(%"class.std::_Hashtable"* %16, %"struct.std::__detail::_Hash_node_base"** %17)
  %19 = select i1 %18, i32 -587293417, i32 -1387546551
  store i32 %19, i32* %11
  br label %115

; <label>:20:                                     ; preds = %12
  %21 = load i32, i32* @x.109
  %22 = load i32, i32* @y.110
  %23 = add i32 %21, 337216861
  %24 = sub i32 %23, 1
  %25 = sub i32 %24, 337216861
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 false, true
  %34 = and i1 %31, false
  %35 = and i1 %29, %33
  %36 = and i1 %32, false
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 false, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  %47 = select i1 %45, i32 644605922, i32 1755085606
  store i32 %47, i32* %11
  br label %115

; <label>:48:                                     ; preds = %12
  %49 = load i32, i32* @x.109
  %50 = load i32, i32* @y.110
  %51 = sub i32 %49, -1319781982
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -1319781982
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 2052804506, i32 1755085606
  store i32 %63, i32* %11
  br label %115

; <label>:64:                                     ; preds = %12
  store i32 1897236365, i32* %11
  br label %115

; <label>:65:                                     ; preds = %12
  %66 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %67 = bitcast %"class.std::_Hashtable"* %66 to %"struct.std::__detail::_Hashtable_alloc"*
  %68 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  %69 = load i64, i64* %8, align 8
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm(%"struct.std::__detail::_Hashtable_alloc"* %67, %"struct.std::__detail::_Hash_node_base"** %68, i64 %69)
  store i32 1897236365, i32* %11
  br label %115

; <label>:70:                                     ; preds = %12
  %71 = load i32, i32* @x.109
  %72 = load i32, i32* @y.110
  %73 = sub i32 0, 1
  %74 = add i32 %71, %73
  %75 = sub i32 %71, 1
  %76 = mul i32 %71, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %72, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 false, true
  %83 = and i1 %80, false
  %84 = and i1 %78, %82
  %85 = and i1 %81, false
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 false, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  %96 = select i1 %94, i32 882520141, i32 759064100
  store i32 %96, i32* %11
  br label %115

; <label>:97:                                     ; preds = %12
  %98 = load i32, i32* @x.109
  %99 = load i32, i32* @y.110
  %100 = sub i32 0, 1
  %101 = add i32 %98, %100
  %102 = sub i32 %98, 1
  %103 = mul i32 %98, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %99, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  %111 = select i1 %109, i32 1465849072, i32 759064100
  store i32 %111, i32* %11
  br label %115

; <label>:112:                                    ; preds = %12
  ret void

; <label>:113:                                    ; preds = %12
  store i32 644605922, i32* %11
  br label %115

; <label>:114:                                    ; preds = %12
  store i32 882520141, i32* %11
  br label %115

; <label>:115:                                    ; preds = %114, %113, %97, %70, %65, %64, %48, %20, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_uses_single_bucketEPPNS4_15_Hash_node_baseE(%"class.std::_Hashtable"*, %"struct.std::__detail::_Hash_node_base"**) #4 comdat align 2 {
  %3 = alloca %"class.std::_Hashtable"*, align 8
  %4 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %3, align 8
  store %"struct.std::__detail::_Hash_node_base"** %1, %"struct.std::__detail::_Hash_node_base"*** %4, align 8
  %5 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %3, align 8
  %6 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %4, align 8
  %7 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %5, i32 0, i32 5
  %8 = icmp eq %"struct.std::__detail::_Hash_node_base"** %6, %7
  ret i1 %8
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm(%"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hash_node_base"**, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %8 = alloca %"class.std::allocator.15", align 1
  %9 = alloca i8*
  %10 = alloca i32
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %4, align 8
  store %"struct.std::__detail::_Hash_node_base"** %1, %"struct.std::__detail::_Hash_node_base"*** %5, align 8
  store i64 %2, i64* %6, align 8
  %11 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %4, align 8
  %12 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %5, align 8
  %13 = call %"struct.std::__detail::_Hash_node_base"** @_ZNSt14pointer_traitsIPPNSt8__detail15_Hash_node_baseEE10pointer_toERS2_(%"struct.std::__detail::_Hash_node_base"** dereferenceable(8) %12) #3
  store %"struct.std::__detail::_Hash_node_base"** %13, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  %14 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %11)
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeISt4pairIKixELb0EEEEERKSaIT_E(%"class.std::allocator.15"* %8, %"class.std::allocator.9"* dereferenceable(1) %14) #3
  %15 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  %16 = load i64, i64* %6, align 8
  invoke void @_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE10deallocateERS3_PS2_m(%"class.std::allocator.15"* dereferenceable(1) %8, %"struct.std::__detail::_Hash_node_base"** %15, i64 %16)
          to label %17 unwind label %60

; <label>:17:                                     ; preds = %3
  %18 = load i32, i32* @x.113
  %19 = load i32, i32* @y.114
  %20 = add i32 %18, -38393450
  %21 = sub i32 %20, 1
  %22 = sub i32 %21, -38393450
  %23 = sub i32 %18, 1
  %24 = mul i32 %18, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %19, 10
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 true, true
  %31 = and i1 %28, true
  %32 = and i1 %26, %30
  %33 = and i1 %29, true
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 true, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  br i1 %42, label %44, label %98

; <label>:44:                                     ; preds = %17, %98
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.std::allocator.15"* %8) #3
  %45 = load i32, i32* @x.113
  %46 = load i32, i32* @y.114
  %47 = add i32 %45, -798295339
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -798295339
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  br i1 %57, label %59, label %98

; <label>:59:                                     ; preds = %44
  ret void

; <label>:60:                                     ; preds = %3
  %61 = load i32, i32* @x.113
  %62 = load i32, i32* @y.114
  %63 = sub i32 0, 1
  %64 = add i32 %61, %63
  %65 = sub i32 %61, 1
  %66 = mul i32 %61, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %62, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  br i1 %72, label %74, label %99

; <label>:74:                                     ; preds = %60, %99
  %75 = landingpad { i8*, i32 }
          cleanup
  %76 = extractvalue { i8*, i32 } %75, 0
  store i8* %76, i8** %9, align 8
  %77 = extractvalue { i8*, i32 } %75, 1
  store i32 %77, i32* %10, align 4
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.std::allocator.15"* %8) #3
  %78 = load i32, i32* @x.113
  %79 = load i32, i32* @y.114
  %80 = add i32 %78, 1690257097
  %81 = sub i32 %80, 1
  %82 = sub i32 %81, 1690257097
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = and i1 %86, %87
  %89 = xor i1 %86, %87
  %90 = or i1 %88, %89
  %91 = or i1 %86, %87
  br i1 %90, label %92, label %99

; <label>:92:                                     ; preds = %74
  br label %93

; <label>:93:                                     ; preds = %92
  %94 = load i8*, i8** %9, align 8
  %95 = load i32, i32* %10, align 4
  %96 = insertvalue { i8*, i32 } undef, i8* %94, 0
  %97 = insertvalue { i8*, i32 } %96, i32 %95, 1
  resume { i8*, i32 } %97

; <label>:98:                                     ; preds = %44, %17
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.std::allocator.15"* %8) #3
  br label %44

; <label>:99:                                     ; preds = %74, %60
  %100 = landingpad { i8*, i32 }
          cleanup
  %101 = extractvalue { i8*, i32 } %100, 0
  store i8* %101, i8** %9, align 8
  %102 = extractvalue { i8*, i32 } %100, 1
  store i32 %102, i32* %10, align 4
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.std::allocator.15"* %8) #3
  br label %74
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node_base"** @_ZNSt14pointer_traitsIPPNSt8__detail15_Hash_node_baseEE10pointer_toERS2_(%"struct.std::__detail::_Hash_node_base"** dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"struct.std::__detail::_Hash_node_base"** %0, %"struct.std::__detail::_Hash_node_base"*** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %2, align 8
  %4 = call %"struct.std::__detail::_Hash_node_base"** @_ZSt9addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_(%"struct.std::__detail::_Hash_node_base"** dereferenceable(8) %3) #3
  ret %"struct.std::__detail::_Hash_node_base"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeISt4pairIKixELb0EEEEERKSaIT_E(%"class.std::allocator.15"*, %"class.std::allocator.9"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.15"*, align 8
  %4 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %3, align 8
  store %"class.std::allocator.9"* %1, %"class.std::allocator.9"** %4, align 8
  %5 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %3, align 8
  %6 = bitcast %"class.std::allocator.15"* %5 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev(%"class.__gnu_cxx::new_allocator.16"* %6) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE10deallocateERS3_PS2_m(%"class.std::allocator.15"* dereferenceable(1), %"struct.std::__detail::_Hash_node_base"**, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.119
  %7 = load i32, i32* @y.120
  %8 = sub i32 %6, 747796593
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 747796593
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1721195091, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %60
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1721195091, label %20
    i32 1772730281, label %28
    i32 -135859491, label %51
    i32 1730050787, label %52
  ]

; <label>:19:                                     ; preds = %17
  br label %60

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1772730281, i32 1730050787
  store i32 %27, i32* %16
  br label %60

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.15"*, align 8
  %30 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %31 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %29, align 8
  store %"struct.std::__detail::_Hash_node_base"** %1, %"struct.std::__detail::_Hash_node_base"*** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %29, align 8
  %33 = bitcast %"class.std::allocator.15"* %32 to %"class.__gnu_cxx::new_allocator.16"*
  %34 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %30, align 8
  %35 = load i64, i64* %31, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.16"* %33, %"struct.std::__detail::_Hash_node_base"** %34, i64 %35)
  %36 = load i32, i32* @x.119
  %37 = load i32, i32* @y.120
  %38 = add i32 %36, -908298037
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, -908298037
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 -135859491, i32 1730050787
  store i32 %50, i32* %16
  br label %60

; <label>:51:                                     ; preds = %17
  ret void

; <label>:52:                                     ; preds = %17
  %53 = alloca %"class.std::allocator.15"*, align 8
  %54 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %55 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %53, align 8
  store %"struct.std::__detail::_Hash_node_base"** %1, %"struct.std::__detail::_Hash_node_base"*** %54, align 8
  store i64 %2, i64* %55, align 8
  %56 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %53, align 8
  %57 = bitcast %"class.std::allocator.15"* %56 to %"class.__gnu_cxx::new_allocator.16"*
  %58 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %54, align 8
  %59 = load i64, i64* %55, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.16"* %57, %"struct.std::__detail::_Hash_node_base"** %58, i64 %59)
  store i32 1772730281, i32* %16
  br label %60

; <label>:60:                                     ; preds = %52, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.std::allocator.15"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %2, align 8
  %3 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %2, align 8
  %4 = bitcast %"class.std::allocator.15"* %3 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.__gnu_cxx::new_allocator.16"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node_base"** @_ZSt9addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_(%"struct.std::__detail::_Hash_node_base"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"struct.std::__detail::_Hash_node_base"** %0, %"struct.std::__detail::_Hash_node_base"*** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %2, align 8
  %4 = call %"struct.std::__detail::_Hash_node_base"** @_ZSt11__addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_(%"struct.std::__detail::_Hash_node_base"** dereferenceable(8) %3) #3
  ret %"struct.std::__detail::_Hash_node_base"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node_base"** @_ZSt11__addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_(%"struct.std::__detail::_Hash_node_base"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::__detail::_Hash_node_base"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.125
  %6 = load i32, i32* @y.126
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1665195476, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1665195476, label %18
    i32 1953322294, label %26
    i32 -1769494585, label %58
    i32 250532113, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1953322294, i32 250532113
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"struct.std::__detail::_Hash_node_base"** %0, %"struct.std::__detail::_Hash_node_base"*** %27, align 8
  %28 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %27, align 8
  %29 = bitcast %"struct.std::__detail::_Hash_node_base"** %28 to i8*
  %30 = bitcast i8* %29 to %"struct.std::__detail::_Hash_node_base"**
  store %"struct.std::__detail::_Hash_node_base"** %30, %"struct.std::__detail::_Hash_node_base"*** %2
  %31 = load i32, i32* @x.125
  %32 = load i32, i32* @y.126
  %33 = sub i32 %31, -23521894
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -23521894
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -1769494585, i32 250532113
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %2
  ret %"struct.std::__detail::_Hash_node_base"** %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"struct.std::__detail::_Hash_node_base"** %0, %"struct.std::__detail::_Hash_node_base"*** %61, align 8
  %62 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %61, align 8
  %63 = bitcast %"struct.std::__detail::_Hash_node_base"** %62 to i8*
  %64 = bitcast i8* %63 to %"struct.std::__detail::_Hash_node_base"**
  store i32 1953322294, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev(%"class.__gnu_cxx::new_allocator.16"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.16"*, %"struct.std::__detail::_Hash_node_base"**, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %4, align 8
  store %"struct.std::__detail::_Hash_node_base"** %1, %"struct.std::__detail::_Hash_node_base"*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %4, align 8
  %8 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %5, align 8
  %9 = bitcast %"struct.std::__detail::_Hash_node_base"** %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.__gnu_cxx::new_allocator.16"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.131
  %5 = load i32, i32* @y.132
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1740218695, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %47
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1740218695, label %17
    i32 1697871172, label %25
    i32 -1454610913, label %43
    i32 -984000723, label %44
  ]

; <label>:16:                                     ; preds = %14
  br label %47

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 1697871172, i32 -984000723
  store i32 %24, i32* %13
  br label %47

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %26, align 8
  %28 = load i32, i32* @x.131
  %29 = load i32, i32* @y.132
  %30 = sub i32 %28, -1061037058
  %31 = sub i32 %30, 1
  %32 = add i32 %31, -1061037058
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 -1454610913, i32 -984000723
  store i32 %42, i32* %13
  br label %47

; <label>:43:                                     ; preds = %14
  ret void

; <label>:44:                                     ; preds = %14
  %45 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %45, align 8
  %46 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %45, align 8
  store i32 1697871172, i32* %13
  br label %47

; <label>:47:                                     ; preds = %44, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EED2Ev(%"struct.std::__detail::_Hashtable_ebo_helper.8"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.133
  %5 = load i32, i32* @y.134
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 798500852, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %61
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 798500852, label %17
    i32 1219783574, label %37
    i32 1510152278, label %56
    i32 1260805489, label %57
  ]

; <label>:16:                                     ; preds = %14
  br label %61

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 1219783574, i32 1260805489
  store i32 %36, i32* %13
  br label %61

; <label>:37:                                     ; preds = %14
  %38 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.8"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.8"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.8"** %38, align 8
  %39 = load %"struct.std::__detail::_Hashtable_ebo_helper.8"*, %"struct.std::__detail::_Hashtable_ebo_helper.8"** %38, align 8
  %40 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.8"* %39 to %"class.std::allocator.9"*
  call void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEED2Ev(%"class.std::allocator.9"* %40) #3
  %41 = load i32, i32* @x.133
  %42 = load i32, i32* @y.134
  %43 = sub i32 %41, 2097720932
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 2097720932
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 1510152278, i32 1260805489
  store i32 %55, i32* %13
  br label %61

; <label>:56:                                     ; preds = %14
  ret void

; <label>:57:                                     ; preds = %14
  %58 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.8"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.8"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.8"** %58, align 8
  %59 = load %"struct.std::__detail::_Hashtable_ebo_helper.8"*, %"struct.std::__detail::_Hashtable_ebo_helper.8"** %58, align 8
  %60 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.8"* %59 to %"class.std::allocator.9"*
  call void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEED2Ev(%"class.std::allocator.9"* %60) #3
  store i32 1219783574, i32* %13
  br label %61

; <label>:61:                                     ; preds = %57, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEED2Ev(%"class.__gnu_cxx::new_allocator.10"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE5beginEv(%"class.std::_Hashtable"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %3 = alloca %"class.std::_Hashtable"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %3, align 8
  %4 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %3, align 8
  %5 = invoke %"struct.std::__detail::_Hash_node"* @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_beginEv(%"class.std::_Hashtable"* %4)
          to label %6 unwind label %10

; <label>:6:                                      ; preds = %1
  call void @_ZNSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEC2EPNS_10_Hash_nodeIS3_Lb0EEE(%"struct.std::__detail::_Node_iterator"* %2, %"struct.std::__detail::_Hash_node"* %5) #3
  %7 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %2, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %7, i32 0, i32 0
  %9 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  ret %"struct.std::__detail::_Hash_node"* %9

; <label>:10:                                     ; preds = %1
  %11 = load i32, i32* @x.137
  %12 = load i32, i32* @y.138
  %13 = sub i32 %11, -1363266184
  %14 = sub i32 %13, 1
  %15 = add i32 %14, -1363266184
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %12, 10
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  br i1 %23, label %25, label %54

; <label>:25:                                     ; preds = %10, %54
  %26 = landingpad { i8*, i32 }
          catch i8* null
  %27 = extractvalue { i8*, i32 } %26, 0
  call void @__clang_call_terminate(i8* %27) #11
  %28 = load i32, i32* @x.137
  %29 = load i32, i32* @y.138
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 true, true
  %40 = and i1 %37, true
  %41 = and i1 %35, %39
  %42 = and i1 %38, true
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 true, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  br i1 %51, label %53, label %54

; <label>:53:                                     ; preds = %25
  unreachable

; <label>:54:                                     ; preds = %25, %10
  %55 = landingpad { i8*, i32 }
          catch i8* null
  %56 = extractvalue { i8*, i32 } %55, 0
  call void @__clang_call_terminate(i8* %56) #11
  br label %25
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEC2EPNS_10_Hash_nodeIS3_Lb0EEE(%"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Hash_node"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Node_iterator"*, align 8
  %4 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Node_iterator"* %0, %"struct.std::__detail::_Node_iterator"** %3, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %4, align 8
  %5 = load %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %3, align 8
  %6 = bitcast %"struct.std::__detail::_Node_iterator"* %5 to %"struct.std::__detail::_Node_iterator_base"*
  %7 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %4, align 8
  call void @_ZNSt8__detail19_Node_iterator_baseISt4pairIKixELb0EEC2EPNS_10_Hash_nodeIS3_Lb0EEE(%"struct.std::__detail::_Node_iterator_base"* %6, %"struct.std::__detail::_Hash_node"* %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail19_Node_iterator_baseISt4pairIKixELb0EEC2EPNS_10_Hash_nodeIS3_Lb0EEE(%"struct.std::__detail::_Node_iterator_base"*, %"struct.std::__detail::_Hash_node"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Node_iterator_base"*, align 8
  %4 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Node_iterator_base"* %0, %"struct.std::__detail::_Node_iterator_base"** %3, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %4, align 8
  %5 = load %"struct.std::__detail::_Node_iterator_base"*, %"struct.std::__detail::_Node_iterator_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %5, i32 0, i32 0
  %7 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %4, align 8
  store %"struct.std::__detail::_Hash_node"* %7, %"struct.std::__detail::_Hash_node"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE3endEv(%"class.std::_Hashtable"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %3 = alloca %"class.std::_Hashtable"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %3, align 8
  %4 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %3, align 8
  call void @_ZNSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEC2EPNS_10_Hash_nodeIS3_Lb0EEE(%"struct.std::__detail::_Node_iterator"* %2, %"struct.std::__detail::_Hash_node"* null) #3
  %5 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %2, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %5, i32 0, i32 0
  %7 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %6, align 8
  ret %"struct.std::__detail::_Hash_node"* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail19_Node_iterator_baseISt4pairIKixELb0EE7_M_incrEv(%"struct.std::__detail::_Node_iterator_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Node_iterator_base"*, align 8
  store %"struct.std::__detail::_Node_iterator_base"* %0, %"struct.std::__detail::_Node_iterator_base"** %2, align 8
  %3 = load %"struct.std::__detail::_Node_iterator_base"*, %"struct.std::__detail::_Node_iterator_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %3, i32 0, i32 0
  %5 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %4, align 8
  %6 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %5) #3
  %7 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %3, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %6, %"struct.std::__detail::_Hash_node"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::pair"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.147
  %6 = load i32, i32* @y.148
  %7 = add i32 %5, -1319632771
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1319632771
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2085883378, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2085883378, label %19
    i32 -1425840986, label %27
    i32 -887415544, label %58
    i32 442952636, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1425840986, i32 442952636
  store i32 %26, i32* %15
  br label %64

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::__detail::_Hash_node_value_base"*, align 8
  store %"struct.std::__detail::_Hash_node_value_base"* %0, %"struct.std::__detail::_Hash_node_value_base"** %28, align 8
  %29 = load %"struct.std::__detail::_Hash_node_value_base"*, %"struct.std::__detail::_Hash_node_value_base"** %28, align 8
  %30 = call %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"* %29) #3
  store %"struct.std::pair"* %30, %"struct.std::pair"** %2
  %31 = load i32, i32* @x.147
  %32 = load i32, i32* @y.148
  %33 = sub i32 %31, -1290014402
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -1290014402
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -887415544, i32 442952636
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %2
  ret %"struct.std::pair"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"struct.std::__detail::_Hash_node_value_base"*, align 8
  store %"struct.std::__detail::_Hash_node_value_base"* %0, %"struct.std::__detail::_Hash_node_value_base"** %61, align 8
  %62 = load %"struct.std::__detail::_Hash_node_value_base"*, %"struct.std::__detail::_Hash_node_value_base"** %61, align 8
  %63 = call %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"* %62) #3
  store i32 -1425840986, i32* %15
  br label %64

; <label>:64:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EEC2Ev(%"struct.std::_Vector_base"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.151
  %5 = load i32, i32* @y.152
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -909026139, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %55
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -909026139, label %17
    i32 -834316053, label %25
    i32 849081542, label %47
    i32 -1137830072, label %48
  ]

; <label>:16:                                     ; preds = %14
  br label %55

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -834316053, i32 -1137830072
  store i32 %24, i32* %13
  br label %55

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"** %26, align 8
  %27 = load %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"** %26, align 8
  %28 = bitcast %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %27 to %"class.std::allocator"*
  call void @_ZNSaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEEC2Ev(%"class.std::allocator"* %28) #3
  %29 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %27, i32 0, i32 0
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %29, align 8
  %30 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %27, i32 0, i32 1
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %30, align 8
  %31 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %27, i32 0, i32 2
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %31, align 8
  %32 = load i32, i32* @x.151
  %33 = load i32, i32* @y.152
  %34 = sub i32 %32, 1040652592
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 1040652592
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 849081542, i32 -1137830072
  store i32 %46, i32* %13
  br label %55

; <label>:47:                                     ; preds = %14
  ret void

; <label>:48:                                     ; preds = %14
  %49 = alloca %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"** %49, align 8
  %50 = load %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"** %49, align 8
  %51 = bitcast %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %50 to %"class.std::allocator"*
  call void @_ZNSaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEEC2Ev(%"class.std::allocator"* %51) #3
  %52 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %50, i32 0, i32 0
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %52, align 8
  %53 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %50, i32 0, i32 1
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %53, align 8
  %54 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %50, i32 0, i32 2
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %54, align 8
  store i32 -834316053, i32* %13
  br label %55

; <label>:55:                                     ; preds = %48, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEEC2Ev(%"class.std::allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.153
  %5 = load i32, i32* @y.154
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -454472323, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %49
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -454472323, label %17
    i32 -255124193, label %25
    i32 -64643858, label %44
    i32 -1573785725, label %45
  ]

; <label>:16:                                     ; preds = %14
  br label %49

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -255124193, i32 -1573785725
  store i32 %24, i32* %13
  br label %49

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %26, align 8
  %27 = load %"class.std::allocator"*, %"class.std::allocator"** %26, align 8
  %28 = bitcast %"class.std::allocator"* %27 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEEC2Ev(%"class.__gnu_cxx::new_allocator"* %28) #3
  %29 = load i32, i32* @x.153
  %30 = load i32, i32* @y.154
  %31 = add i32 %29, -1369623140
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, -1369623140
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -64643858, i32 -1573785725
  store i32 %43, i32* %13
  br label %49

; <label>:44:                                     ; preds = %14
  ret void

; <label>:45:                                     ; preds = %14
  %46 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %46, align 8
  %47 = load %"class.std::allocator"*, %"class.std::allocator"** %46, align 8
  %48 = bitcast %"class.std::allocator"* %47 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEEC2Ev(%"class.__gnu_cxx::new_allocator"* %48) #3
  store i32 -255124193, i32* %13
  br label %49

; <label>:49:                                     ; preds = %45, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEEC2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.155
  %5 = load i32, i32* @y.156
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1696508830, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %59
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1696508830, label %17
    i32 -1118419627, label %25
    i32 -980614592, label %55
    i32 -641799572, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %59

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -1118419627, i32 -641799572
  store i32 %24, i32* %13
  br label %59

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %26, align 8
  %28 = load i32, i32* @x.155
  %29 = load i32, i32* @y.156
  %30 = sub i32 %28, -838318742
  %31 = sub i32 %30, 1
  %32 = add i32 %31, -838318742
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 -980614592, i32 -641799572
  store i32 %54, i32* %13
  br label %59

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %57, align 8
  store i32 -1118419627, i32* %13
  br label %59

; <label>:59:                                     ; preds = %56, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESC_EvT_SE_RSaIT0_E(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  call void @_ZSt8_DestroyIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEvT_SE_(%"class.std::vector.0"* %7, %"class.std::vector.0"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::vector.0"*, %"class.std::vector.0"** %13, align 8
  %15 = ptrtoint %"class.std::vector.0"* %11 to i64
  %16 = ptrtoint %"class.std::vector.0"* %14 to i64
  %17 = sub i64 0, %16
  %18 = add i64 %15, %17
  %19 = sub i64 %15, %16
  %20 = sdiv exact i64 %18, 24
  invoke void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE13_M_deallocateEPSC_m(%"struct.std::_Vector_base"* %5, %"class.std::vector.0"* %8, i64 %20)
          to label %21 unwind label %51

; <label>:21:                                     ; preds = %1
  %22 = load i32, i32* @x.161
  %23 = load i32, i32* @y.162
  %24 = sub i32 0, 1
  %25 = add i32 %22, %24
  %26 = sub i32 %22, 1
  %27 = mul i32 %22, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %23, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  br i1 %33, label %35, label %141

; <label>:35:                                     ; preds = %21, %141
  %36 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %36) #3
  %37 = load i32, i32* @x.161
  %38 = load i32, i32* @y.162
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  br i1 %48, label %50, label %141

; <label>:50:                                     ; preds = %35
  ret void

; <label>:51:                                     ; preds = %1
  %52 = load i32, i32* @x.161
  %53 = load i32, i32* @y.162
  %54 = add i32 %52, -1966543056
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, -1966543056
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  br i1 %76, label %78, label %143

; <label>:78:                                     ; preds = %51, %143
  %79 = landingpad { i8*, i32 }
          catch i8* null
  %80 = extractvalue { i8*, i32 } %79, 0
  store i8* %80, i8** %3, align 8
  %81 = extractvalue { i8*, i32 } %79, 1
  store i32 %81, i32* %4, align 4
  %82 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %82) #3
  %83 = load i32, i32* @x.161
  %84 = load i32, i32* @y.162
  %85 = sub i32 0, 1
  %86 = add i32 %83, %85
  %87 = sub i32 %83, 1
  %88 = mul i32 %83, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %84, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  br i1 %94, label %96, label %143

; <label>:96:                                     ; preds = %78
  br label %97

; <label>:97:                                     ; preds = %96
  %98 = load i32, i32* @x.161
  %99 = load i32, i32* @y.162
  %100 = add i32 %98, 951068865
  %101 = sub i32 %100, 1
  %102 = sub i32 %101, 951068865
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = and i1 %106, %107
  %109 = xor i1 %106, %107
  %110 = or i1 %108, %109
  %111 = or i1 %106, %107
  br i1 %110, label %112, label %148

; <label>:112:                                    ; preds = %97, %148
  %113 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %113) #11
  %114 = load i32, i32* @x.161
  %115 = load i32, i32* @y.162
  %116 = sub i32 %114, -818036049
  %117 = sub i32 %116, 1
  %118 = add i32 %117, -818036049
  %119 = sub i32 %114, 1
  %120 = mul i32 %114, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %115, 10
  %124 = xor i1 %122, true
  %125 = xor i1 %123, true
  %126 = xor i1 false, true
  %127 = and i1 %124, false
  %128 = and i1 %122, %126
  %129 = and i1 %125, false
  %130 = and i1 %123, %126
  %131 = or i1 %127, %128
  %132 = or i1 %129, %130
  %133 = xor i1 %131, %132
  %134 = or i1 %124, %125
  %135 = xor i1 %134, true
  %136 = or i1 false, %126
  %137 = and i1 %135, %136
  %138 = or i1 %133, %137
  %139 = or i1 %122, %123
  br i1 %138, label %140, label %148

; <label>:140:                                    ; preds = %112
  unreachable

; <label>:141:                                    ; preds = %35, %21
  %142 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %142) #3
  br label %35

; <label>:143:                                    ; preds = %78, %51
  %144 = landingpad { i8*, i32 }
          catch i8* null
  %145 = extractvalue { i8*, i32 } %144, 0
  store i8* %145, i8** %3, align 8
  %146 = extractvalue { i8*, i32 } %144, 1
  store i32 %146, i32* %4, align 4
  %147 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %147) #3
  br label %78

; <label>:148:                                    ; preds = %112, %97
  %149 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %149) #11
  br label %112
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEvT_SE_(%"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EEEEvT_SG_(%"class.std::vector.0"* %5, %"class.std::vector.0"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EEEEvT_SG_(%"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %5, align 8
  %6 = alloca i32
  store i32 39745790, i32* %6
  br label %7

; <label>:7:                                      ; preds = %2, %173
  %8 = load i32, i32* %6
  switch i32 %8, label %9 [
    i32 39745790, label %10
    i32 523018185, label %25
    i32 -1963080906, label %44
    i32 390973702, label %47
    i32 -1318844353, label %74
    i32 857094791, label %104
    i32 755948356, label %105
    i32 458036456, label %132
    i32 -1576604697, label %161
    i32 -2074447598, label %162
    i32 -2085145039, label %163
    i32 66001121, label %167
    i32 670649251, label %170
  ]

; <label>:9:                                      ; preds = %7
  br label %173

; <label>:10:                                     ; preds = %7
  %11 = load i32, i32* @x.165
  %12 = load i32, i32* @y.166
  %13 = sub i32 0, 1
  %14 = add i32 %11, %13
  %15 = sub i32 %11, 1
  %16 = mul i32 %11, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %12, 10
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 523018185, i32 -2085145039
  store i32 %24, i32* %6
  br label %173

; <label>:25:                                     ; preds = %7
  %26 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %27 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %28 = icmp ne %"class.std::vector.0"* %26, %27
  store i1 %28, i1* %3
  %29 = load i32, i32* @x.165
  %30 = load i32, i32* @y.166
  %31 = add i32 %29, -1537042700
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, -1537042700
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -1963080906, i32 -2085145039
  store i32 %43, i32* %6
  br label %173

; <label>:44:                                     ; preds = %7
  %45 = load volatile i1, i1* %3
  %46 = select i1 %45, i32 390973702, i32 -2074447598
  store i32 %46, i32* %6
  br label %173

; <label>:47:                                     ; preds = %7
  %48 = load i32, i32* @x.165
  %49 = load i32, i32* @y.166
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -1318844353, i32 66001121
  store i32 %73, i32* %6
  br label %173

; <label>:74:                                     ; preds = %7
  %75 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %76 = call %"class.std::vector.0"* @_ZSt11__addressofISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEPT_RSD_(%"class.std::vector.0"* dereferenceable(24) %75) #3
  call void @_ZSt8_DestroyISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEvPT_(%"class.std::vector.0"* %76)
  %77 = load i32, i32* @x.165
  %78 = load i32, i32* @y.166
  %79 = add i32 %77, -446356085
  %80 = sub i32 %79, 1
  %81 = sub i32 %80, -446356085
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = xor i1 %85, true
  %88 = xor i1 %86, true
  %89 = xor i1 true, true
  %90 = and i1 %87, true
  %91 = and i1 %85, %89
  %92 = and i1 %88, true
  %93 = and i1 %86, %89
  %94 = or i1 %90, %91
  %95 = or i1 %92, %93
  %96 = xor i1 %94, %95
  %97 = or i1 %87, %88
  %98 = xor i1 %97, true
  %99 = or i1 true, %89
  %100 = and i1 %98, %99
  %101 = or i1 %96, %100
  %102 = or i1 %85, %86
  %103 = select i1 %101, i32 857094791, i32 66001121
  store i32 %103, i32* %6
  br label %173

; <label>:104:                                    ; preds = %7
  store i32 755948356, i32* %6
  br label %173

; <label>:105:                                    ; preds = %7
  %106 = load i32, i32* @x.165
  %107 = load i32, i32* @y.166
  %108 = sub i32 0, 1
  %109 = add i32 %106, %108
  %110 = sub i32 %106, 1
  %111 = mul i32 %106, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %107, 10
  %115 = xor i1 %113, true
  %116 = xor i1 %114, true
  %117 = xor i1 false, true
  %118 = and i1 %115, false
  %119 = and i1 %113, %117
  %120 = and i1 %116, false
  %121 = and i1 %114, %117
  %122 = or i1 %118, %119
  %123 = or i1 %120, %121
  %124 = xor i1 %122, %123
  %125 = or i1 %115, %116
  %126 = xor i1 %125, true
  %127 = or i1 false, %117
  %128 = and i1 %126, %127
  %129 = or i1 %124, %128
  %130 = or i1 %113, %114
  %131 = select i1 %129, i32 458036456, i32 670649251
  store i32 %131, i32* %6
  br label %173

; <label>:132:                                    ; preds = %7
  %133 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %134 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %133, i32 1
  store %"class.std::vector.0"* %134, %"class.std::vector.0"** %4, align 8
  %135 = load i32, i32* @x.165
  %136 = load i32, i32* @y.166
  %137 = sub i32 0, 1
  %138 = add i32 %135, %137
  %139 = sub i32 %135, 1
  %140 = mul i32 %135, %138
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %136, 10
  %144 = xor i1 %142, true
  %145 = xor i1 %143, true
  %146 = xor i1 true, true
  %147 = and i1 %144, true
  %148 = and i1 %142, %146
  %149 = and i1 %145, true
  %150 = and i1 %143, %146
  %151 = or i1 %147, %148
  %152 = or i1 %149, %150
  %153 = xor i1 %151, %152
  %154 = or i1 %144, %145
  %155 = xor i1 %154, true
  %156 = or i1 true, %146
  %157 = and i1 %155, %156
  %158 = or i1 %153, %157
  %159 = or i1 %142, %143
  %160 = select i1 %158, i32 -1576604697, i32 670649251
  store i32 %160, i32* %6
  br label %173

; <label>:161:                                    ; preds = %7
  store i32 39745790, i32* %6
  br label %173

; <label>:162:                                    ; preds = %7
  ret void

; <label>:163:                                    ; preds = %7
  %164 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %165 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %166 = icmp ne %"class.std::vector.0"* %164, %165
  store i32 523018185, i32* %6
  br label %173

; <label>:167:                                    ; preds = %7
  %168 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %169 = call %"class.std::vector.0"* @_ZSt11__addressofISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEPT_RSD_(%"class.std::vector.0"* dereferenceable(24) %168) #3
  call void @_ZSt8_DestroyISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEvPT_(%"class.std::vector.0"* %169)
  store i32 -1318844353, i32* %6
  br label %173

; <label>:170:                                    ; preds = %7
  %171 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %172 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %171, i32 1
  store %"class.std::vector.0"* %172, %"class.std::vector.0"** %4, align 8
  store i32 458036456, i32* %6
  br label %173

; <label>:173:                                    ; preds = %170, %167, %163, %161, %132, %105, %104, %74, %47, %44, %25, %10, %9
  br label %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEvPT_(%"class.std::vector.0"*) #4 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.167
  %5 = load i32, i32* @y.168
  %6 = add i32 %4, -507920651
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -507920651
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1672205038, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1672205038, label %18
    i32 -508146310, label %26
    i32 1028826623, label %56
    i32 1872862822, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -508146310, i32 1872862822
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %27, align 8
  %28 = load %"class.std::vector.0"*, %"class.std::vector.0"** %27, align 8
  call void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EED2Ev(%"class.std::vector.0"* %28) #3
  %29 = load i32, i32* @x.167
  %30 = load i32, i32* @y.168
  %31 = add i32 %29, 152877411
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, 152877411
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 1028826623, i32 1872862822
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %58, align 8
  %59 = load %"class.std::vector.0"*, %"class.std::vector.0"** %58, align 8
  call void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EED2Ev(%"class.std::vector.0"* %59) #3
  store i32 -508146310, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt11__addressofISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEPT_RSD_(%"class.std::vector.0"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.0"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.169
  %6 = load i32, i32* @y.170
  %7 = sub i32 %5, -987923902
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -987923902
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1676545183, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1676545183, label %19
    i32 -1983663226, label %27
    i32 -1677690133, label %59
    i32 -1650191269, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1983663226, i32 -1650191269
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %28, align 8
  %29 = load %"class.std::vector.0"*, %"class.std::vector.0"** %28, align 8
  %30 = bitcast %"class.std::vector.0"* %29 to i8*
  %31 = bitcast i8* %30 to %"class.std::vector.0"*
  store %"class.std::vector.0"* %31, %"class.std::vector.0"** %2
  %32 = load i32, i32* @x.169
  %33 = load i32, i32* @y.170
  %34 = sub i32 %32, -1631215267
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -1631215267
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -1677690133, i32 -1650191269
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %2
  ret %"class.std::vector.0"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %62, align 8
  %63 = load %"class.std::vector.0"*, %"class.std::vector.0"** %62, align 8
  %64 = bitcast %"class.std::vector.0"* %63 to i8*
  %65 = bitcast i8* %64 to %"class.std::vector.0"*
  store i32 -1983663226, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE13_M_deallocateEPSC_m(%"struct.std::_Vector_base"*, %"class.std::vector.0"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.0"*
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca %"struct.std::_Vector_base"*, align 8
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %6, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6, align 8
  store %"struct.std::_Vector_base"* %9, %"struct.std::_Vector_base"** %5
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  store %"class.std::vector.0"* %10, %"class.std::vector.0"** %4
  %11 = alloca i32
  store i32 25109570, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %88
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 25109570, label %15
    i32 -353349231, label %19
    i32 668531039, label %47
    i32 1329040677, label %80
    i32 -1864196844, label %81
    i32 1572746462, label %82
  ]

; <label>:14:                                     ; preds = %12
  br label %88

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %17 = icmp ne %"class.std::vector.0"* %16, null
  %18 = select i1 %17, i32 -353349231, i32 -1864196844
  store i32 %18, i32* %11
  br label %88

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.171
  %21 = load i32, i32* @y.172
  %22 = sub i32 %20, 1988983047
  %23 = sub i32 %22, 1
  %24 = add i32 %23, 1988983047
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 false, true
  %33 = and i1 %30, false
  %34 = and i1 %28, %32
  %35 = and i1 %31, false
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 false, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 668531039, i32 1572746462
  store i32 %46, i32* %11
  br label %88

; <label>:47:                                     ; preds = %12
  %48 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %49 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %48, i32 0, i32 0
  %50 = bitcast %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %49 to %"class.std::allocator"*
  %51 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %52 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEE10deallocateERSD_PSC_m(%"class.std::allocator"* dereferenceable(1) %50, %"class.std::vector.0"* %51, i64 %52)
  %53 = load i32, i32* @x.171
  %54 = load i32, i32* @y.172
  %55 = sub i32 %53, -1022268918
  %56 = sub i32 %55, 1
  %57 = add i32 %56, -1022268918
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 1329040677, i32 1572746462
  store i32 %79, i32* %11
  br label %88

; <label>:80:                                     ; preds = %12
  store i32 -1864196844, i32* %11
  br label %88

; <label>:81:                                     ; preds = %12
  ret void

; <label>:82:                                     ; preds = %12
  %83 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %84 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %83, i32 0, i32 0
  %85 = bitcast %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %84 to %"class.std::allocator"*
  %86 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %87 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEE10deallocateERSD_PSC_m(%"class.std::allocator"* dereferenceable(1) %85, %"class.std::vector.0"* %86, i64 %87)
  store i32 668531039, i32* %11
  br label %88

; <label>:88:                                     ; preds = %82, %80, %47, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEED2Ev(%"class.std::allocator"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEE10deallocateERSD_PSC_m(%"class.std::allocator"* dereferenceable(1), %"class.std::vector.0"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEE10deallocateEPSD_m(%"class.__gnu_cxx::new_allocator"* %8, %"class.std::vector.0"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEE10deallocateEPSD_m(%"class.__gnu_cxx::new_allocator"*, %"class.std::vector.0"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %9 = bitcast %"class.std::vector.0"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEED2Ev(%"class.std::allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.179
  %5 = load i32, i32* @y.180
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -2106274246, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %61
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -2106274246, label %17
    i32 -728078907, label %37
    i32 -1985228425, label %56
    i32 155796646, label %57
  ]

; <label>:16:                                     ; preds = %14
  br label %61

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -728078907, i32 155796646
  store i32 %36, i32* %13
  br label %61

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %38, align 8
  %39 = load %"class.std::allocator"*, %"class.std::allocator"** %38, align 8
  %40 = bitcast %"class.std::allocator"* %39 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEED2Ev(%"class.__gnu_cxx::new_allocator"* %40) #3
  %41 = load i32, i32* @x.179
  %42 = load i32, i32* @y.180
  %43 = add i32 %41, 517346374
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 517346374
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -1985228425, i32 155796646
  store i32 %55, i32* %13
  br label %61

; <label>:56:                                     ; preds = %14
  ret void

; <label>:57:                                     ; preds = %14
  %58 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %58, align 8
  %59 = load %"class.std::allocator"*, %"class.std::allocator"** %58, align 8
  %60 = bitcast %"class.std::allocator"* %59 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEED2Ev(%"class.__gnu_cxx::new_allocator"* %60) #3
  store i32 -728078907, i32* %13
  br label %61

; <label>:61:                                     ; preds = %57, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEED2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.183
  %5 = load i32, i32* @y.184
  %6 = add i32 %4, 578500993
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 578500993
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 2019121686, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %50
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 2019121686, label %18
    i32 -760552416, label %26
    i32 -1671872064, label %45
    i32 1520104225, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %50

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -760552416, i32 1520104225
  store i32 %25, i32* %14
  br label %50

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %27, align 8
  %28 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %28, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %29)
  %30 = load i32, i32* @x.183
  %31 = load i32, i32* @y.184
  %32 = add i32 %30, -506511686
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -506511686
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -1671872064, i32 1520104225
  store i32 %44, i32* %14
  br label %50

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %47, align 8
  %48 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %47, align 8
  %49 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %48, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %49)
  store i32 -760552416, i32* %14
  br label %50

; <label>:50:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %3 to %"class.std::allocator.2"*
  call void @_ZNSaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEC2Ev(%"class.std::allocator.2"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %3, i32 0, i32 0
  store %"class.std::unordered_map"* null, %"class.std::unordered_map"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %3, i32 0, i32 1
  store %"class.std::unordered_map"* null, %"class.std::unordered_map"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %3, i32 0, i32 2
  store %"class.std::unordered_map"* null, %"class.std::unordered_map"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEC2Ev(%"class.std::allocator.2"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEC2Ev(%"class.__gnu_cxx::new_allocator.3"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEC2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEES9_EvT_SB_RSaIT0_E(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::unordered_map"*, align 8
  %5 = alloca %"class.std::unordered_map"*, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %4, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %7 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %8 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %5, align 8
  call void @_ZSt8_DestroyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvT_SB_(%"class.std::unordered_map"* %7, %"class.std::unordered_map"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.193
  %6 = load i32, i32* @y.194
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1120742627, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %77
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1120742627, label %18
    i32 1123897949, label %38
    i32 451547394, label %70
    i32 412691064, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %77

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1123897949, i32 412691064
  store i32 %37, i32* %14
  br label %77

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %39, align 8
  %40 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %40, i32 0, i32 0
  %42 = bitcast %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %41 to %"class.std::allocator.2"*
  store %"class.std::allocator.2"* %42, %"class.std::allocator.2"** %2
  %43 = load i32, i32* @x.193
  %44 = load i32, i32* @y.194
  %45 = sub i32 %43, 65977787
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 65977787
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 451547394, i32 412691064
  store i32 %69, i32* %14
  br label %77

; <label>:70:                                     ; preds = %15
  %71 = load volatile %"class.std::allocator.2"*, %"class.std::allocator.2"** %2
  ret %"class.std::allocator.2"* %71

; <label>:72:                                     ; preds = %15
  %73 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %73, align 8
  %74 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %73, align 8
  %75 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %74, i32 0, i32 0
  %76 = bitcast %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %75 to %"class.std::allocator.2"*
  store i32 1123897949, i32* %14
  br label %77

; <label>:77:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EED2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.195
  %3 = load i32, i32* @y.196
  %4 = add i32 %2, -972757533
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -972757533
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %125

; <label>:16:                                     ; preds = %1, %125
  %17 = alloca %"struct.std::_Vector_base.1"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %17, align 8
  %20 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %17, align 8
  %21 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %21, i32 0, i32 0
  %23 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %24, i32 0, i32 2
  %26 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %25, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %27, i32 0, i32 0
  %29 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %28, align 8
  %30 = ptrtoint %"class.std::unordered_map"* %26 to i64
  %31 = ptrtoint %"class.std::unordered_map"* %29 to i64
  %32 = add i64 %30, 1510029035807819889
  %33 = sub i64 %32, %31
  %34 = sub i64 %33, 1510029035807819889
  %35 = sub i64 %30, %31
  %36 = sdiv exact i64 %34, 56
  %37 = load i32, i32* @x.195
  %38 = load i32, i32* @y.196
  %39 = sub i32 %37, -1998232104
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -1998232104
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  br i1 %61, label %63, label %125

; <label>:63:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE13_M_deallocateEPS9_m(%"struct.std::_Vector_base.1"* %20, %"class.std::unordered_map"* %23, i64 %36)
          to label %64 unwind label %118

; <label>:64:                                     ; preds = %63
  %65 = load i32, i32* @x.195
  %66 = load i32, i32* @y.196
  %67 = sub i32 0, 1
  %68 = add i32 %65, %67
  %69 = sub i32 %65, 1
  %70 = mul i32 %65, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %66, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 true, true
  %77 = and i1 %74, true
  %78 = and i1 %72, %76
  %79 = and i1 %75, true
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 true, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  br i1 %88, label %90, label %192

; <label>:90:                                     ; preds = %64, %192
  %91 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %91) #3
  %92 = load i32, i32* @x.195
  %93 = load i32, i32* @y.196
  %94 = sub i32 0, 1
  %95 = add i32 %92, %94
  %96 = sub i32 %92, 1
  %97 = mul i32 %92, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %93, 10
  %101 = xor i1 %99, true
  %102 = xor i1 %100, true
  %103 = xor i1 true, true
  %104 = and i1 %101, true
  %105 = and i1 %99, %103
  %106 = and i1 %102, true
  %107 = and i1 %100, %103
  %108 = or i1 %104, %105
  %109 = or i1 %106, %107
  %110 = xor i1 %108, %109
  %111 = or i1 %101, %102
  %112 = xor i1 %111, true
  %113 = or i1 true, %103
  %114 = and i1 %112, %113
  %115 = or i1 %110, %114
  %116 = or i1 %99, %100
  br i1 %115, label %117, label %192

; <label>:117:                                    ; preds = %90
  ret void

; <label>:118:                                    ; preds = %63
  %119 = landingpad { i8*, i32 }
          catch i8* null
  %120 = extractvalue { i8*, i32 } %119, 0
  store i8* %120, i8** %18, align 8
  %121 = extractvalue { i8*, i32 } %119, 1
  store i32 %121, i32* %19, align 4
  %122 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %122) #3
  br label %123

; <label>:123:                                    ; preds = %118
  %124 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %124) #11
  unreachable

; <label>:125:                                    ; preds = %16, %1
  %126 = alloca %"struct.std::_Vector_base.1"*, align 8
  %127 = alloca i8*
  %128 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %126, align 8
  %129 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %126, align 8
  %130 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %129, i32 0, i32 0
  %131 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %130, i32 0, i32 0
  %132 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %131, align 8
  %133 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %129, i32 0, i32 0
  %134 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %133, i32 0, i32 2
  %135 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %134, align 8
  %136 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %129, i32 0, i32 0
  %137 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %136, i32 0, i32 0
  %138 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %137, align 8
  %139 = ptrtoint %"class.std::unordered_map"* %135 to i64
  %140 = ptrtoint %"class.std::unordered_map"* %138 to i64
  %141 = shl i64 %139, %140
  %142 = sub i64 %139, -7139007686466540487
  %143 = sub i64 %142, %140
  %144 = add i64 %143, -7139007686466540487
  %145 = sub i64 %139, %140
  %146 = mul i64 %144, %140
  %147 = add i64 %139, 8223677041493872967
  %148 = sub i64 %147, %140
  %149 = sub i64 %148, 8223677041493872967
  %150 = sub i64 %139, %140
  %151 = add i64 0, 9086603153916450078
  %152 = sub i64 %151, %149
  %153 = sub i64 %152, 9086603153916450078
  %154 = sub i64 0, %149
  %155 = sub i64 0, 56
  %156 = sub i64 %153, %155
  %157 = add i64 %153, 56
  %158 = sub i64 0, -5384879881778695281
  %159 = sub i64 %158, %149
  %160 = add i64 %159, -5384879881778695281
  %161 = sub i64 0, %149
  %162 = sub i64 0, 56
  %163 = sub i64 %160, %162
  %164 = add i64 %160, 56
  %165 = sub i64 0, %149
  %166 = add i64 0, %165
  %167 = sub i64 0, %149
  %168 = sub i64 %166, 6498736518027091795
  %169 = add i64 %168, 56
  %170 = add i64 %169, 6498736518027091795
  %171 = add i64 %166, 56
  %172 = sub i64 0, -1484018665275215128
  %173 = sub i64 %172, %149
  %174 = add i64 %173, -1484018665275215128
  %175 = sub i64 0, %149
  %176 = sub i64 0, %174
  %177 = sub i64 0, 56
  %178 = add i64 %176, %177
  %179 = sub i64 0, %178
  %180 = add i64 %174, 56
  %181 = shl i64 %149, 56
  %182 = sub i64 %149, -2009569049978233388
  %183 = sub i64 %182, 56
  %184 = add i64 %183, -2009569049978233388
  %185 = sub i64 %149, 56
  %186 = mul i64 %184, 56
  %187 = sub i64 0, 56
  %188 = add i64 %149, %187
  %189 = sub i64 %149, 56
  %190 = mul i64 %188, 56
  %191 = sdiv exact i64 %149, 56
  br label %16

; <label>:192:                                    ; preds = %90, %64
  %193 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %193) #3
  br label %90
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvT_SB_(%"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.197
  %6 = load i32, i32* @y.198
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 716893256, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %76
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 716893256, label %18
    i32 1759106472, label %38
    i32 -763704649, label %70
    i32 66410026, label %71
  ]

; <label>:17:                                     ; preds = %15
  br label %76

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1759106472, i32 66410026
  store i32 %37, i32* %14
  br label %76

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::unordered_map"*, align 8
  %40 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %39, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %40, align 8
  %41 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %39, align 8
  %42 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %40, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEEvT_SD_(%"class.std::unordered_map"* %41, %"class.std::unordered_map"* %42)
  %43 = load i32, i32* @x.197
  %44 = load i32, i32* @y.198
  %45 = sub i32 %43, -1738430556
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -1738430556
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -763704649, i32 66410026
  store i32 %69, i32* %14
  br label %76

; <label>:70:                                     ; preds = %15
  ret void

; <label>:71:                                     ; preds = %15
  %72 = alloca %"class.std::unordered_map"*, align 8
  %73 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %72, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %73, align 8
  %74 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %72, align 8
  %75 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %73, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEEvT_SD_(%"class.std::unordered_map"* %74, %"class.std::unordered_map"* %75)
  store i32 1759106472, i32* %14
  br label %76

; <label>:76:                                     ; preds = %71, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEEvT_SD_(%"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::unordered_map"**
  %5 = alloca %"class.std::unordered_map"**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.199
  %9 = load i32, i32* @y.200
  %10 = sub i32 %8, 1345557886
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 1345557886
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1627105591, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %226
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1627105591, label %22
    i32 115145620, label %30
    i32 -800808499, label %50
    i32 1627882108, label %51
    i32 1421027600, label %79
    i32 -1772290566, label %100
    i32 -2078037141, label %103
    i32 2137946502, label %107
    i32 -1766969498, label %134
    i32 1571939810, label %166
    i32 -1684691462, label %167
    i32 967423956, label %194
    i32 1051005350, label %210
    i32 -1329713713, label %211
    i32 1696316035, label %214
    i32 -1185399665, label %220
    i32 660041216, label %225
  ]

; <label>:21:                                     ; preds = %19
  br label %226

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 115145620, i32 -1329713713
  store i32 %29, i32* %18
  br label %226

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"** %31, %"class.std::unordered_map"*** %5
  %32 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"** %32, %"class.std::unordered_map"*** %4
  %33 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %5
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %33, align 8
  %34 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %4
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %34, align 8
  %35 = load i32, i32* @x.199
  %36 = load i32, i32* @y.200
  %37 = add i32 %35, 1937244866
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 1937244866
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -800808499, i32 -1329713713
  store i32 %49, i32* %18
  br label %226

; <label>:50:                                     ; preds = %19
  store i32 1627882108, i32* %18
  br label %226

; <label>:51:                                     ; preds = %19
  %52 = load i32, i32* @x.199
  %53 = load i32, i32* @y.200
  %54 = sub i32 %52, 1525325131
  %55 = sub i32 %54, 1
  %56 = add i32 %55, 1525325131
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 1421027600, i32 1696316035
  store i32 %78, i32* %18
  br label %226

; <label>:79:                                     ; preds = %19
  %80 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %5
  %81 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %80, align 8
  %82 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %4
  %83 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %82, align 8
  %84 = icmp ne %"class.std::unordered_map"* %81, %83
  store i1 %84, i1* %3
  %85 = load i32, i32* @x.199
  %86 = load i32, i32* @y.200
  %87 = add i32 %85, 547420820
  %88 = sub i32 %87, 1
  %89 = sub i32 %88, 547420820
  %90 = sub i32 %85, 1
  %91 = mul i32 %85, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %86, 10
  %95 = and i1 %93, %94
  %96 = xor i1 %93, %94
  %97 = or i1 %95, %96
  %98 = or i1 %93, %94
  %99 = select i1 %97, i32 -1772290566, i32 1696316035
  store i32 %99, i32* %18
  br label %226

; <label>:100:                                    ; preds = %19
  %101 = load volatile i1, i1* %3
  %102 = select i1 %101, i32 -2078037141, i32 -1684691462
  store i32 %102, i32* %18
  br label %226

; <label>:103:                                    ; preds = %19
  %104 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %5
  %105 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %104, align 8
  %106 = call %"class.std::unordered_map"* @_ZSt11__addressofISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEPT_RSA_(%"class.std::unordered_map"* dereferenceable(56) %105) #3
  call void @_ZSt8_DestroyISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvPT_(%"class.std::unordered_map"* %106)
  store i32 2137946502, i32* %18
  br label %226

; <label>:107:                                    ; preds = %19
  %108 = load i32, i32* @x.199
  %109 = load i32, i32* @y.200
  %110 = sub i32 0, 1
  %111 = add i32 %108, %110
  %112 = sub i32 %108, 1
  %113 = mul i32 %108, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %109, 10
  %117 = xor i1 %115, true
  %118 = xor i1 %116, true
  %119 = xor i1 false, true
  %120 = and i1 %117, false
  %121 = and i1 %115, %119
  %122 = and i1 %118, false
  %123 = and i1 %116, %119
  %124 = or i1 %120, %121
  %125 = or i1 %122, %123
  %126 = xor i1 %124, %125
  %127 = or i1 %117, %118
  %128 = xor i1 %127, true
  %129 = or i1 false, %119
  %130 = and i1 %128, %129
  %131 = or i1 %126, %130
  %132 = or i1 %115, %116
  %133 = select i1 %131, i32 -1766969498, i32 -1185399665
  store i32 %133, i32* %18
  br label %226

; <label>:134:                                    ; preds = %19
  %135 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %5
  %136 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %135, align 8
  %137 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %136, i32 1
  %138 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %5
  store %"class.std::unordered_map"* %137, %"class.std::unordered_map"** %138, align 8
  %139 = load i32, i32* @x.199
  %140 = load i32, i32* @y.200
  %141 = sub i32 %139, -174973029
  %142 = sub i32 %141, 1
  %143 = add i32 %142, -174973029
  %144 = sub i32 %139, 1
  %145 = mul i32 %139, %143
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %140, 10
  %149 = xor i1 %147, true
  %150 = xor i1 %148, true
  %151 = xor i1 false, true
  %152 = and i1 %149, false
  %153 = and i1 %147, %151
  %154 = and i1 %150, false
  %155 = and i1 %148, %151
  %156 = or i1 %152, %153
  %157 = or i1 %154, %155
  %158 = xor i1 %156, %157
  %159 = or i1 %149, %150
  %160 = xor i1 %159, true
  %161 = or i1 false, %151
  %162 = and i1 %160, %161
  %163 = or i1 %158, %162
  %164 = or i1 %147, %148
  %165 = select i1 %163, i32 1571939810, i32 -1185399665
  store i32 %165, i32* %18
  br label %226

; <label>:166:                                    ; preds = %19
  store i32 1627882108, i32* %18
  br label %226

; <label>:167:                                    ; preds = %19
  %168 = load i32, i32* @x.199
  %169 = load i32, i32* @y.200
  %170 = sub i32 0, 1
  %171 = add i32 %168, %170
  %172 = sub i32 %168, 1
  %173 = mul i32 %168, %171
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %169, 10
  %177 = xor i1 %175, true
  %178 = xor i1 %176, true
  %179 = xor i1 false, true
  %180 = and i1 %177, false
  %181 = and i1 %175, %179
  %182 = and i1 %178, false
  %183 = and i1 %176, %179
  %184 = or i1 %180, %181
  %185 = or i1 %182, %183
  %186 = xor i1 %184, %185
  %187 = or i1 %177, %178
  %188 = xor i1 %187, true
  %189 = or i1 false, %179
  %190 = and i1 %188, %189
  %191 = or i1 %186, %190
  %192 = or i1 %175, %176
  %193 = select i1 %191, i32 967423956, i32 660041216
  store i32 %193, i32* %18
  br label %226

; <label>:194:                                    ; preds = %19
  %195 = load i32, i32* @x.199
  %196 = load i32, i32* @y.200
  %197 = add i32 %195, 810236966
  %198 = sub i32 %197, 1
  %199 = sub i32 %198, 810236966
  %200 = sub i32 %195, 1
  %201 = mul i32 %195, %199
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %196, 10
  %205 = and i1 %203, %204
  %206 = xor i1 %203, %204
  %207 = or i1 %205, %206
  %208 = or i1 %203, %204
  %209 = select i1 %207, i32 1051005350, i32 660041216
  store i32 %209, i32* %18
  br label %226

; <label>:210:                                    ; preds = %19
  ret void

; <label>:211:                                    ; preds = %19
  %212 = alloca %"class.std::unordered_map"*, align 8
  %213 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %212, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %213, align 8
  store i32 115145620, i32* %18
  br label %226

; <label>:214:                                    ; preds = %19
  %215 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %5
  %216 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %215, align 8
  %217 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %4
  %218 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %217, align 8
  %219 = icmp ne %"class.std::unordered_map"* %216, %218
  store i32 1421027600, i32* %18
  br label %226

; <label>:220:                                    ; preds = %19
  %221 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %5
  %222 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %221, align 8
  %223 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %222, i32 1
  %224 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %5
  store %"class.std::unordered_map"* %223, %"class.std::unordered_map"** %224, align 8
  store i32 -1766969498, i32* %18
  br label %226

; <label>:225:                                    ; preds = %19
  store i32 967423956, i32* %18
  br label %226

; <label>:226:                                    ; preds = %225, %220, %214, %211, %194, %167, %166, %134, %107, %103, %100, %79, %51, %50, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvPT_(%"class.std::unordered_map"*) #4 comdat {
  %2 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %2, align 8
  %3 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %2, align 8
  call void @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEED2Ev(%"class.std::unordered_map"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt11__addressofISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEPT_RSA_(%"class.std::unordered_map"* dereferenceable(56)) #4 comdat {
  %2 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %2, align 8
  %3 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %2, align 8
  %4 = bitcast %"class.std::unordered_map"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::unordered_map"*
  ret %"class.std::unordered_map"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE13_M_deallocateEPS9_m(%"struct.std::_Vector_base.1"*, %"class.std::unordered_map"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::unordered_map"*
  %5 = alloca %"struct.std::_Vector_base.1"*
  %6 = alloca %"struct.std::_Vector_base.1"*, align 8
  %7 = alloca %"class.std::unordered_map"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %6, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %6, align 8
  store %"struct.std::_Vector_base.1"* %9, %"struct.std::_Vector_base.1"** %5
  %10 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  store %"class.std::unordered_map"* %10, %"class.std::unordered_map"** %4
  %11 = alloca i32
  store i32 1567484231, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1567484231, label %15
    i32 -161558428, label %19
    i32 -1581976544, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::unordered_map"*, %"class.std::unordered_map"** %4
  %17 = icmp ne %"class.std::unordered_map"* %16, null
  %18 = select i1 %17, i32 -161558428, i32 -1581976544
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %21 to %"class.std::allocator.2"*
  %23 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEE10deallocateERSA_PS9_m(%"class.std::allocator.2"* dereferenceable(1) %22, %"class.std::unordered_map"* %23, i64 %24)
  store i32 -1581976544, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %3 to %"class.std::allocator.2"*
  call void @_ZNSaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEED2Ev(%"class.std::allocator.2"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEE10deallocateERSA_PS9_m(%"class.std::allocator.2"* dereferenceable(1), %"class.std::unordered_map"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.2"*, align 8
  %5 = alloca %"class.std::unordered_map"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %4, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  %9 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEE10deallocateEPSA_m(%"class.__gnu_cxx::new_allocator.3"* %8, %"class.std::unordered_map"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEE10deallocateEPSA_m(%"class.__gnu_cxx::new_allocator.3"*, %"class.std::unordered_map"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %5 = alloca %"class.std::unordered_map"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  %8 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %5, align 8
  %9 = bitcast %"class.std::unordered_map"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEED2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE14_M_fill_assignEmRKSB_(%"class.std::vector"*, i64, %"class.std::vector.0"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"class.std::vector"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %8 = alloca %"class.std::vector"*
  %9 = alloca %"class.std::vector.0"**
  %10 = alloca i64*
  %11 = alloca i1
  %12 = alloca i1
  %13 = load i32, i32* @x.215
  %14 = load i32, i32* @y.216
  %15 = sub i32 0, 1
  %16 = add i32 %13, %15
  %17 = sub i32 %13, 1
  %18 = mul i32 %13, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  store i1 %20, i1* %12
  %21 = icmp slt i32 %14, 10
  store i1 %21, i1* %11
  %22 = alloca i32
  store i32 1452562267, i32* %22
  br label %23

; <label>:23:                                     ; preds = %3, %154
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 1452562267, label %26
    i32 1260567215, label %34
    i32 222612620, label %63
    i32 -205308722, label %66
    i32 1529198822, label %82
    i32 463902009, label %89
    i32 -815786267, label %129
    i32 -585154551, label %141
    i32 -863541195, label %142
    i32 665309721, label %143
  ]

; <label>:25:                                     ; preds = %23
  br label %154

; <label>:26:                                     ; preds = %23
  %27 = load volatile i1, i1* %12
  %28 = load volatile i1, i1* %11
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 1260567215, i32 665309721
  store i32 %33, i32* %22
  br label %154

; <label>:34:                                     ; preds = %23
  %35 = alloca %"class.std::vector"*, align 8
  %36 = alloca i64, align 8
  store i64* %36, i64** %10
  %37 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"** %37, %"class.std::vector.0"*** %9
  %38 = alloca %"class.std::vector", align 8
  store %"class.std::vector"* %38, %"class.std::vector"** %8
  %39 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %39, %"class.__gnu_cxx::__normal_iterator"** %7
  %40 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %40, %"class.__gnu_cxx::__normal_iterator"** %6
  store %"class.std::vector"* %0, %"class.std::vector"** %35, align 8
  %41 = load volatile i64*, i64** %10
  store i64 %1, i64* %41, align 8
  %42 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %9
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %42, align 8
  %43 = load %"class.std::vector"*, %"class.std::vector"** %35, align 8
  store %"class.std::vector"* %43, %"class.std::vector"** %5
  %44 = load volatile i64*, i64** %10
  %45 = load i64, i64* %44, align 8
  %46 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %47 = call i64 @_ZNKSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE8capacityEv(%"class.std::vector"* %46) #3
  %48 = icmp ugt i64 %45, %47
  store i1 %48, i1* %4
  %49 = load i32, i32* @x.215
  %50 = load i32, i32* @y.216
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 222612620, i32 665309721
  store i32 %62, i32* %22
  br label %154

; <label>:63:                                     ; preds = %23
  %64 = load volatile i1, i1* %4
  %65 = select i1 %64, i32 -205308722, i32 1529198822
  store i32 %65, i32* %22
  br label %154

; <label>:66:                                     ; preds = %23
  %67 = load volatile i64*, i64** %10
  %68 = load i64, i64* %67, align 8
  %69 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %9
  %70 = load %"class.std::vector.0"*, %"class.std::vector.0"** %69, align 8
  %71 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %72 = bitcast %"class.std::vector"* %71 to %"struct.std::_Vector_base"*
  %73 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %72) #3
  %74 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  call void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEC2EmRKSB_RKSC_(%"class.std::vector"* %74, i64 %68, %"class.std::vector.0"* dereferenceable(24) %70, %"class.std::allocator"* dereferenceable(1) %73)
  %75 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %76 = bitcast %"class.std::vector"* %75 to %"struct.std::_Vector_base"*
  %77 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %76, i32 0, i32 0
  %78 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %79 = bitcast %"class.std::vector"* %78 to %"struct.std::_Vector_base"*
  %80 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %79, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_impl12_M_swap_dataERSF_(%"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %77, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* dereferenceable(24) %80) #3
  %81 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  call void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EED2Ev(%"class.std::vector"* %81) #3
  store i32 -863541195, i32* %22
  br label %154

; <label>:82:                                     ; preds = %23
  %83 = load volatile i64*, i64** %10
  %84 = load i64, i64* %83, align 8
  %85 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %86 = call i64 @_ZNKSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE4sizeEv(%"class.std::vector"* %85) #3
  %87 = icmp ugt i64 %84, %86
  %88 = select i1 %87, i32 463902009, i32 -815786267
  store i32 %88, i32* %22
  br label %154

; <label>:89:                                     ; preds = %23
  %90 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %91 = call %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE5beginEv(%"class.std::vector"* %90) #3
  %92 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %93 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %92, i32 0, i32 0
  store %"class.std::vector.0"* %91, %"class.std::vector.0"** %93, align 8
  %94 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %95 = call %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE3endEv(%"class.std::vector"* %94) #3
  %96 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %97 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %96, i32 0, i32 0
  store %"class.std::vector.0"* %95, %"class.std::vector.0"** %97, align 8
  %98 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %9
  %99 = load %"class.std::vector.0"*, %"class.std::vector.0"** %98, align 8
  %100 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %101 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %100, i32 0, i32 0
  %102 = load %"class.std::vector.0"*, %"class.std::vector.0"** %101, align 8
  %103 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %104 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %103, i32 0, i32 0
  %105 = load %"class.std::vector.0"*, %"class.std::vector.0"** %104, align 8
  call void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EES2_ISE_SaISE_EEEESE_EvT_SJ_RKT0_(%"class.std::vector.0"* %102, %"class.std::vector.0"* %105, %"class.std::vector.0"* dereferenceable(24) %99)
  %106 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %107 = bitcast %"class.std::vector"* %106 to %"struct.std::_Vector_base"*
  %108 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %107, i32 0, i32 0
  %109 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %108, i32 0, i32 1
  %110 = load %"class.std::vector.0"*, %"class.std::vector.0"** %109, align 8
  %111 = load volatile i64*, i64** %10
  %112 = load i64, i64* %111, align 8
  %113 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %114 = call i64 @_ZNKSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE4sizeEv(%"class.std::vector"* %113) #3
  %115 = sub i64 %112, -4949541410084341471
  %116 = sub i64 %115, %114
  %117 = add i64 %116, -4949541410084341471
  %118 = sub i64 %112, %114
  %119 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %9
  %120 = load %"class.std::vector.0"*, %"class.std::vector.0"** %119, align 8
  %121 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %122 = bitcast %"class.std::vector"* %121 to %"struct.std::_Vector_base"*
  %123 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %122) #3
  %124 = call %"class.std::vector.0"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEmSC_SC_ET_SE_T0_RKT1_RSaIT2_E(%"class.std::vector.0"* %110, i64 %117, %"class.std::vector.0"* dereferenceable(24) %120, %"class.std::allocator"* dereferenceable(1) %123)
  %125 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %126 = bitcast %"class.std::vector"* %125 to %"struct.std::_Vector_base"*
  %127 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %126, i32 0, i32 0
  %128 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %127, i32 0, i32 1
  store %"class.std::vector.0"* %124, %"class.std::vector.0"** %128, align 8
  store i32 -585154551, i32* %22
  br label %154

; <label>:129:                                    ; preds = %23
  %130 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %131 = bitcast %"class.std::vector"* %130 to %"struct.std::_Vector_base"*
  %132 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %131, i32 0, i32 0
  %133 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %132, i32 0, i32 0
  %134 = load %"class.std::vector.0"*, %"class.std::vector.0"** %133, align 8
  %135 = load volatile i64*, i64** %10
  %136 = load i64, i64* %135, align 8
  %137 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %9
  %138 = load %"class.std::vector.0"*, %"class.std::vector.0"** %137, align 8
  %139 = call %"class.std::vector.0"* @_ZSt6fill_nIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEmSC_ET_SE_T0_RKT1_(%"class.std::vector.0"* %134, i64 %136, %"class.std::vector.0"* dereferenceable(24) %138)
  %140 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  call void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE15_M_erase_at_endEPSB_(%"class.std::vector"* %140, %"class.std::vector.0"* %139) #3
  store i32 -585154551, i32* %22
  br label %154

; <label>:141:                                    ; preds = %23
  store i32 -863541195, i32* %22
  br label %154

; <label>:142:                                    ; preds = %23
  ret void

; <label>:143:                                    ; preds = %23
  %144 = alloca %"class.std::vector"*, align 8
  %145 = alloca i64, align 8
  %146 = alloca %"class.std::vector.0"*, align 8
  %147 = alloca %"class.std::vector", align 8
  %148 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %149 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %144, align 8
  store i64 %1, i64* %145, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %146, align 8
  %150 = load %"class.std::vector"*, %"class.std::vector"** %144, align 8
  %151 = load i64, i64* %145, align 8
  %152 = call i64 @_ZNKSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE8capacityEv(%"class.std::vector"* %150) #3
  %153 = icmp ugt i64 %151, %152
  store i32 1260567215, i32* %22
  br label %154

; <label>:154:                                    ; preds = %143, %141, %129, %89, %82, %66, %63, %34, %26, %25
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE8capacityEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.217
  %6 = load i32, i32* @y.218
  %7 = add i32 %5, 1716599695
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1716599695
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2040883808, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %102
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2040883808, label %19
    i32 -670953440, label %39
    i32 -337361066, label %70
    i32 -1473323656, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %102

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -670953440, i32 -1473323656
  store i32 %38, i32* %15
  br label %102

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %40, align 8
  %41 = load %"class.std::vector"*, %"class.std::vector"** %40, align 8
  %42 = bitcast %"class.std::vector"* %41 to %"struct.std::_Vector_base"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %43, i32 0, i32 2
  %45 = load %"class.std::vector.0"*, %"class.std::vector.0"** %44, align 8
  %46 = bitcast %"class.std::vector"* %41 to %"struct.std::_Vector_base"*
  %47 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %46, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %47, i32 0, i32 0
  %49 = load %"class.std::vector.0"*, %"class.std::vector.0"** %48, align 8
  %50 = ptrtoint %"class.std::vector.0"* %45 to i64
  %51 = ptrtoint %"class.std::vector.0"* %49 to i64
  %52 = sub i64 0, %51
  %53 = add i64 %50, %52
  %54 = sub i64 %50, %51
  %55 = sdiv exact i64 %53, 24
  store i64 %55, i64* %2
  %56 = load i32, i32* @x.217
  %57 = load i32, i32* @y.218
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 -337361066, i32 -1473323656
  store i32 %69, i32* %15
  br label %102

; <label>:70:                                     ; preds = %16
  %71 = load volatile i64, i64* %2
  ret i64 %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %73, align 8
  %74 = load %"class.std::vector"*, %"class.std::vector"** %73, align 8
  %75 = bitcast %"class.std::vector"* %74 to %"struct.std::_Vector_base"*
  %76 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %76, i32 0, i32 2
  %78 = load %"class.std::vector.0"*, %"class.std::vector.0"** %77, align 8
  %79 = bitcast %"class.std::vector"* %74 to %"struct.std::_Vector_base"*
  %80 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %79, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %80, i32 0, i32 0
  %82 = load %"class.std::vector.0"*, %"class.std::vector.0"** %81, align 8
  %83 = ptrtoint %"class.std::vector.0"* %78 to i64
  %84 = ptrtoint %"class.std::vector.0"* %82 to i64
  %85 = shl i64 %83, %84
  %86 = sub i64 %83, 2591891311521664531
  %87 = sub i64 %86, %84
  %88 = add i64 %87, 2591891311521664531
  %89 = sub i64 %83, %84
  %90 = shl i64 %88, 24
  %91 = shl i64 %88, 24
  %92 = shl i64 %88, 24
  %93 = sub i64 0, %88
  %94 = add i64 0, %93
  %95 = sub i64 0, %88
  %96 = sub i64 0, %94
  %97 = sub i64 0, 24
  %98 = add i64 %96, %97
  %99 = sub i64 0, %98
  %100 = add i64 %94, 24
  %101 = sdiv exact i64 %88, 24
  store i32 -670953440, i32* %15
  br label %102

; <label>:102:                                    ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EEC2EmRKSB_RKSC_(%"class.std::vector"*, i64, %"class.std::vector.0"* dereferenceable(24), %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %11 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %12 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator"*, %"class.std::allocator"** %8, align 8
  call void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EEC2EmRKSD_(%"struct.std::_Vector_base"* %12, i64 %13, %"class.std::allocator"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  invoke void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE18_M_fill_initializeEmRKSB_(%"class.std::vector"* %11, i64 %15, %"class.std::vector.0"* dereferenceable(24) %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %4
  ret void

; <label>:18:                                     ; preds = %4
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %9, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %10, align 4
  %22 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EED2Ev(%"struct.std::_Vector_base"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %9, align 8
  %25 = load i32, i32* %10, align 4
  %26 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_impl12_M_swap_dataERSF_(%"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* dereferenceable(24)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %1, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEvRT_SF_(%"class.std::vector.0"** dereferenceable(8) %6, %"class.std::vector.0"** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEvRT_SF_(%"class.std::vector.0"** dereferenceable(8) %9, %"class.std::vector.0"** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEvRT_SF_(%"class.std::vector.0"** dereferenceable(8) %12, %"class.std::vector.0"** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EES2_ISE_SaISE_EEEESE_EvT_SJ_RKT0_(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.223
  %7 = load i32, i32* @y.224
  %8 = add i32 %6, -761702260
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -761702260
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1682130402, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %93
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1682130402, label %20
    i32 1626923414, label %40
    i32 149050012, label %73
    i32 -666486197, label %74
  ]

; <label>:19:                                     ; preds = %17
  br label %93

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1626923414, i32 -666486197
  store i32 %39, i32* %16
  br label %93

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %43 = alloca %"class.std::vector.0"*, align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %45 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %41, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %46, align 8
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %42, i32 0, i32 0
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %47, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %43, align 8
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator"* %44 to i8*
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 8, i1 false)
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %44, i32 0, i32 0
  %51 = load %"class.std::vector.0"*, %"class.std::vector.0"** %50, align 8
  %52 = call %"class.std::vector.0"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EES2_ISE_SaISE_EEEEENSt11_Niter_baseIT_E13iterator_typeESK_(%"class.std::vector.0"* %51)
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator"* %45 to i8*
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 8, i32 8, i1 false)
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %45, i32 0, i32 0
  %56 = load %"class.std::vector.0"*, %"class.std::vector.0"** %55, align 8
  %57 = call %"class.std::vector.0"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EES2_ISE_SaISE_EEEEENSt11_Niter_baseIT_E13iterator_typeESK_(%"class.std::vector.0"* %56)
  %58 = load %"class.std::vector.0"*, %"class.std::vector.0"** %43, align 8
  call void @_ZSt8__fill_aIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESC_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SJ_RKSG_(%"class.std::vector.0"* %52, %"class.std::vector.0"* %57, %"class.std::vector.0"* dereferenceable(24) %58)
  %59 = load i32, i32* @x.223
  %60 = load i32, i32* @y.224
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  %72 = select i1 %70, i32 149050012, i32 -666486197
  store i32 %72, i32* %16
  br label %93

; <label>:73:                                     ; preds = %17
  ret void

; <label>:74:                                     ; preds = %17
  %75 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %76 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %77 = alloca %"class.std::vector.0"*, align 8
  %78 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %79 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %80 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %75, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %80, align 8
  %81 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %76, i32 0, i32 0
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %81, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %77, align 8
  %82 = bitcast %"class.__gnu_cxx::__normal_iterator"* %78 to i8*
  %83 = bitcast %"class.__gnu_cxx::__normal_iterator"* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %82, i8* %83, i64 8, i32 8, i1 false)
  %84 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %78, i32 0, i32 0
  %85 = load %"class.std::vector.0"*, %"class.std::vector.0"** %84, align 8
  %86 = call %"class.std::vector.0"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EES2_ISE_SaISE_EEEEENSt11_Niter_baseIT_E13iterator_typeESK_(%"class.std::vector.0"* %85)
  %87 = bitcast %"class.__gnu_cxx::__normal_iterator"* %79 to i8*
  %88 = bitcast %"class.__gnu_cxx::__normal_iterator"* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* %88, i64 8, i32 8, i1 false)
  %89 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %79, i32 0, i32 0
  %90 = load %"class.std::vector.0"*, %"class.std::vector.0"** %89, align 8
  %91 = call %"class.std::vector.0"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EES2_ISE_SaISE_EEEEENSt11_Niter_baseIT_E13iterator_typeESK_(%"class.std::vector.0"* %90)
  %92 = load %"class.std::vector.0"*, %"class.std::vector.0"** %77, align 8
  call void @_ZSt8__fill_aIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESC_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SJ_RKSG_(%"class.std::vector.0"* %86, %"class.std::vector.0"* %91, %"class.std::vector.0"* dereferenceable(24) %92)
  store i32 1626923414, i32* %16
  br label %93

; <label>:93:                                     ; preds = %74, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE5beginEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %4 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %5 = bitcast %"class.std::vector"* %4 to %"struct.std::_Vector_base"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EES1_ISD_SaISD_EEEC2ERKSE_(%"class.__gnu_cxx::__normal_iterator"* %2, %"class.std::vector.0"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  ret %"class.std::vector.0"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE3endEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.227
  %6 = load i32, i32* @y.228
  %7 = sub i32 %5, 1193947863
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1193947863
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 384044349, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %86
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 384044349, label %19
    i32 -520657003, label %39
    i32 740216403, label %75
    i32 -2066849357, label %77
  ]

; <label>:18:                                     ; preds = %16
  br label %86

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -520657003, i32 -2066849357
  store i32 %38, i32* %15
  br label %86

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %41 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %41, align 8
  %42 = load %"class.std::vector"*, %"class.std::vector"** %41, align 8
  %43 = bitcast %"class.std::vector"* %42 to %"struct.std::_Vector_base"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %44, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EES1_ISD_SaISD_EEEC2ERKSE_(%"class.__gnu_cxx::__normal_iterator"* %40, %"class.std::vector.0"** dereferenceable(8) %45) #3
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  %47 = load %"class.std::vector.0"*, %"class.std::vector.0"** %46, align 8
  store %"class.std::vector.0"* %47, %"class.std::vector.0"** %2
  %48 = load i32, i32* @x.227
  %49 = load i32, i32* @y.228
  %50 = sub i32 %48, -2137417459
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -2137417459
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 740216403, i32 -2066849357
  store i32 %74, i32* %15
  br label %86

; <label>:75:                                     ; preds = %16
  %76 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %2
  ret %"class.std::vector.0"* %76

; <label>:77:                                     ; preds = %16
  %78 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %79 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %79, align 8
  %80 = load %"class.std::vector"*, %"class.std::vector"** %79, align 8
  %81 = bitcast %"class.std::vector"* %80 to %"struct.std::_Vector_base"*
  %82 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %81, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %82, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EES1_ISD_SaISD_EEEC2ERKSE_(%"class.__gnu_cxx::__normal_iterator"* %78, %"class.std::vector.0"** dereferenceable(8) %83) #3
  %84 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %78, i32 0, i32 0
  %85 = load %"class.std::vector.0"*, %"class.std::vector.0"** %84, align 8
  store i32 -520657003, i32* %15
  br label %86

; <label>:86:                                     ; preds = %77, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEmSC_SC_ET_SE_T0_RKT1_RSaIT2_E(%"class.std::vector.0"*, i64, %"class.std::vector.0"* dereferenceable(24), %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %12 = call %"class.std::vector.0"* @_ZSt20uninitialized_fill_nIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEmSC_ET_SE_T0_RKT1_(%"class.std::vector.0"* %9, i64 %10, %"class.std::vector.0"* dereferenceable(24) %11)
  ret %"class.std::vector.0"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE15_M_erase_at_endEPSB_(%"class.std::vector"*, %"class.std::vector.0"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.231
  %4 = load i32, i32* @y.232
  %5 = sub i32 %3, -938817867
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -938817867
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %63

; <label>:17:                                     ; preds = %2, %63
  %18 = alloca %"class.std::vector"*, align 8
  %19 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %18, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %19, align 8
  %20 = load %"class.std::vector"*, %"class.std::vector"** %18, align 8
  %21 = load %"class.std::vector.0"*, %"class.std::vector.0"** %19, align 8
  %22 = bitcast %"class.std::vector"* %20 to %"struct.std::_Vector_base"*
  %23 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %22, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %23, i32 0, i32 1
  %25 = load %"class.std::vector.0"*, %"class.std::vector.0"** %24, align 8
  %26 = bitcast %"class.std::vector"* %20 to %"struct.std::_Vector_base"*
  %27 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %26) #3
  %28 = load i32, i32* @x.231
  %29 = load i32, i32* @y.232
  %30 = add i32 %28, -1096182788
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, -1096182788
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  br i1 %52, label %54, label %63

; <label>:54:                                     ; preds = %17
  invoke void @_ZSt8_DestroyIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESC_EvT_SE_RSaIT0_E(%"class.std::vector.0"* %21, %"class.std::vector.0"* %25, %"class.std::allocator"* dereferenceable(1) %27)
          to label %55 unwind label %60

; <label>:55:                                     ; preds = %54
  %56 = load %"class.std::vector.0"*, %"class.std::vector.0"** %19, align 8
  %57 = bitcast %"class.std::vector"* %20 to %"struct.std::_Vector_base"*
  %58 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %57, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %58, i32 0, i32 1
  store %"class.std::vector.0"* %56, %"class.std::vector.0"** %59, align 8
  ret void

; <label>:60:                                     ; preds = %54
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  call void @__clang_call_terminate(i8* %62) #11
  unreachable

; <label>:63:                                     ; preds = %17, %2
  %64 = alloca %"class.std::vector"*, align 8
  %65 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %64, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %65, align 8
  %66 = load %"class.std::vector"*, %"class.std::vector"** %64, align 8
  %67 = load %"class.std::vector.0"*, %"class.std::vector.0"** %65, align 8
  %68 = bitcast %"class.std::vector"* %66 to %"struct.std::_Vector_base"*
  %69 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %68, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %69, i32 0, i32 1
  %71 = load %"class.std::vector.0"*, %"class.std::vector.0"** %70, align 8
  %72 = bitcast %"class.std::vector"* %66 to %"struct.std::_Vector_base"*
  %73 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %72) #3
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt6fill_nIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEmSC_ET_SE_T0_RKT1_(%"class.std::vector.0"*, i64, %"class.std::vector.0"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.0"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.233
  %8 = load i32, i32* @y.234
  %9 = sub i32 %7, 1374991144
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 1374991144
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1199747293, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %64
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1199747293, label %21
    i32 -837967827, label %29
    i32 1868333070, label %53
    i32 1633400018, label %55
  ]

; <label>:20:                                     ; preds = %18
  br label %64

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -837967827, i32 1633400018
  store i32 %28, i32* %17
  br label %64

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::vector.0"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %30, align 8
  store i64 %1, i64* %31, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %32, align 8
  %33 = load %"class.std::vector.0"*, %"class.std::vector.0"** %30, align 8
  %34 = call %"class.std::vector.0"* @_ZSt12__niter_baseIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEENSt11_Niter_baseIT_E13iterator_typeESF_(%"class.std::vector.0"* %33)
  %35 = load i64, i64* %31, align 8
  %36 = load %"class.std::vector.0"*, %"class.std::vector.0"** %32, align 8
  %37 = call %"class.std::vector.0"* @_ZSt10__fill_n_aIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEmSC_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeESH_T0_RKSG_(%"class.std::vector.0"* %34, i64 %35, %"class.std::vector.0"* dereferenceable(24) %36)
  store %"class.std::vector.0"* %37, %"class.std::vector.0"** %4
  %38 = load i32, i32* @x.233
  %39 = load i32, i32* @y.234
  %40 = sub i32 %38, -138647352
  %41 = sub i32 %40, 1
  %42 = add i32 %41, -138647352
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 1868333070, i32 1633400018
  store i32 %52, i32* %17
  br label %64

; <label>:53:                                     ; preds = %18
  %54 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  ret %"class.std::vector.0"* %54

; <label>:55:                                     ; preds = %18
  %56 = alloca %"class.std::vector.0"*, align 8
  %57 = alloca i64, align 8
  %58 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %56, align 8
  store i64 %1, i64* %57, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %58, align 8
  %59 = load %"class.std::vector.0"*, %"class.std::vector.0"** %56, align 8
  %60 = call %"class.std::vector.0"* @_ZSt12__niter_baseIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEENSt11_Niter_baseIT_E13iterator_typeESF_(%"class.std::vector.0"* %59)
  %61 = load i64, i64* %57, align 8
  %62 = load %"class.std::vector.0"*, %"class.std::vector.0"** %58, align 8
  %63 = call %"class.std::vector.0"* @_ZSt10__fill_n_aIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEmSC_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeESH_T0_RKSG_(%"class.std::vector.0"* %60, i64 %61, %"class.std::vector.0"* dereferenceable(24) %62)
  store i32 -837967827, i32* %17
  br label %64

; <label>:64:                                     ; preds = %55, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EEC2EmRKSD_(%"struct.std::_Vector_base"*, i64, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator"*, %"class.std::allocator"** %6, align 8
  call void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_implC2ERKSD_(%"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %10, %"class.std::allocator"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE17_M_create_storageEm(%"struct.std::_Vector_base"* %9, i64 %12)
          to label %13 unwind label %66

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @x.235
  %15 = load i32, i32* @y.236
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %15, 10
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  br i1 %37, label %39, label %129

; <label>:39:                                     ; preds = %13, %129
  %40 = load i32, i32* @x.235
  %41 = load i32, i32* @y.236
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  br i1 %63, label %65, label %129

; <label>:65:                                     ; preds = %39
  ret void

; <label>:66:                                     ; preds = %3
  %67 = load i32, i32* @x.235
  %68 = load i32, i32* @y.236
  %69 = add i32 %67, -426651641
  %70 = sub i32 %69, 1
  %71 = sub i32 %70, -426651641
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 false, true
  %80 = and i1 %77, false
  %81 = and i1 %75, %79
  %82 = and i1 %78, false
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 false, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  br i1 %91, label %93, label %130

; <label>:93:                                     ; preds = %66, %130
  %94 = landingpad { i8*, i32 }
          cleanup
  %95 = extractvalue { i8*, i32 } %94, 0
  store i8* %95, i8** %7, align 8
  %96 = extractvalue { i8*, i32 } %94, 1
  store i32 %96, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %10) #3
  %97 = load i32, i32* @x.235
  %98 = load i32, i32* @y.236
  %99 = add i32 %97, -2080054878
  %100 = sub i32 %99, 1
  %101 = sub i32 %100, -2080054878
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = xor i1 %105, true
  %108 = xor i1 %106, true
  %109 = xor i1 false, true
  %110 = and i1 %107, false
  %111 = and i1 %105, %109
  %112 = and i1 %108, false
  %113 = and i1 %106, %109
  %114 = or i1 %110, %111
  %115 = or i1 %112, %113
  %116 = xor i1 %114, %115
  %117 = or i1 %107, %108
  %118 = xor i1 %117, true
  %119 = or i1 false, %109
  %120 = and i1 %118, %119
  %121 = or i1 %116, %120
  %122 = or i1 %105, %106
  br i1 %121, label %123, label %130

; <label>:123:                                    ; preds = %93
  br label %124

; <label>:124:                                    ; preds = %123
  %125 = load i8*, i8** %7, align 8
  %126 = load i32, i32* %8, align 4
  %127 = insertvalue { i8*, i32 } undef, i8* %125, 0
  %128 = insertvalue { i8*, i32 } %127, i32 %126, 1
  resume { i8*, i32 } %128

; <label>:129:                                    ; preds = %39, %13
  br label %39

; <label>:130:                                    ; preds = %93, %66
  %131 = landingpad { i8*, i32 }
          cleanup
  %132 = extractvalue { i8*, i32 } %131, 0
  store i8* %132, i8** %7, align 8
  %133 = extractvalue { i8*, i32 } %131, 1
  store i32 %133, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %10) #3
  br label %93
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_ISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EESaISB_EE18_M_fill_initializeEmRKSB_(%"class.std::vector"*, i64, %"class.std::vector.0"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %6, align 8
  %7 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %8 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %14 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14) #3
  %16 = call %"class.std::vector.0"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEmSC_SC_ET_SE_T0_RKT1_RSaIT2_E(%"class.std::vector.0"* %11, i64 %12, %"class.std::vector.0"* dereferenceable(24) %13, %"class.std::allocator"* dereferenceable(1) %15)
  %17 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %18, i32 0, i32 1
  store %"class.std::vector.0"* %16, %"class.std::vector.0"** %19, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE12_Vector_implC2ERKSD_(%"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %5 to %"class.std::allocator"*
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  call void @_ZNSaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEEC2ERKSC_(%"class.std::allocator"* %6, %"class.std::allocator"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %5, i32 0, i32 0
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %5, i32 0, i32 1
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %5, i32 0, i32 2
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE17_M_create_storageEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"class.std::vector.0"* @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE11_M_allocateEm(%"struct.std::_Vector_base"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %8, i32 0, i32 0
  store %"class.std::vector.0"* %7, %"class.std::vector.0"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"class.std::vector.0"*, %"class.std::vector.0"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %13, i32 0, i32 1
  store %"class.std::vector.0"* %12, %"class.std::vector.0"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"class.std::vector.0"*, %"class.std::vector.0"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %20, i32 0, i32 2
  store %"class.std::vector.0"* %19, %"class.std::vector.0"** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEEC2ERKSC_(%"class.std::allocator"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEEC2ERKSE_(%"class.__gnu_cxx::new_allocator"* %6, %"class.__gnu_cxx::new_allocator"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEEC2ERKSE_(%"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %3, align 8
  store %"class.__gnu_cxx::new_allocator"* %1, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt12_Vector_baseISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESaISC_EE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"struct.std::_Vector_base"*
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.247
  %9 = load i32, i32* @y.248
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -1166573666, i32* %17
  %18 = alloca %"class.std::vector.0"*
  br label %19

; <label>:19:                                     ; preds = %2, %138
  %20 = load i32, i32* %17
  switch i32 %20, label %21 [
    i32 -1166573666, label %22
    i32 992891063, label %42
    i32 -636131210, label %76
    i32 -1707791244, label %79
    i32 1607506426, label %86
    i32 -1588788277, label %113
    i32 351633772, label %128
    i32 -1517270285, label %129
    i32 -1900769221, label %131
    i32 -1964546361, label %137
  ]

; <label>:21:                                     ; preds = %19
  br label %138

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 992891063, i32 -1900769221
  store i32 %41, i32* %17
  br label %138

; <label>:42:                                     ; preds = %19
  %43 = alloca %"struct.std::_Vector_base"*, align 8
  %44 = alloca i64, align 8
  store i64* %44, i64** %5
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %43, align 8
  %45 = load volatile i64*, i64** %5
  store i64 %1, i64* %45, align 8
  %46 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %43, align 8
  store %"struct.std::_Vector_base"* %46, %"struct.std::_Vector_base"** %4
  %47 = load volatile i64*, i64** %5
  %48 = load i64, i64* %47, align 8
  %49 = icmp ne i64 %48, 0
  store i1 %49, i1* %3
  %50 = load i32, i32* @x.247
  %51 = load i32, i32* @y.248
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -636131210, i32 -1900769221
  store i32 %75, i32* %17
  br label %138

; <label>:76:                                     ; preds = %19
  %77 = load volatile i1, i1* %3
  %78 = select i1 %77, i32 -1707791244, i32 1607506426
  store i32 %78, i32* %17
  br label %138

; <label>:79:                                     ; preds = %19
  %80 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4
  %81 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %80, i32 0, i32 0
  %82 = bitcast %"struct.std::_Vector_base<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >, std::allocator<std::vector<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > > > >::_Vector_impl"* %81 to %"class.std::allocator"*
  %83 = load volatile i64*, i64** %5
  %84 = load i64, i64* %83, align 8
  %85 = call %"class.std::vector.0"* @_ZNSt16allocator_traitsISaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEE8allocateERSD_m(%"class.std::allocator"* dereferenceable(1) %82, i64 %84)
  store i32 -1517270285, i32* %17
  store %"class.std::vector.0"* %85, %"class.std::vector.0"** %18
  br label %138

; <label>:86:                                     ; preds = %19
  %87 = load i32, i32* @x.247
  %88 = load i32, i32* @y.248
  %89 = sub i32 0, 1
  %90 = add i32 %87, %89
  %91 = sub i32 %87, 1
  %92 = mul i32 %87, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %88, 10
  %96 = xor i1 %94, true
  %97 = xor i1 %95, true
  %98 = xor i1 true, true
  %99 = and i1 %96, true
  %100 = and i1 %94, %98
  %101 = and i1 %97, true
  %102 = and i1 %95, %98
  %103 = or i1 %99, %100
  %104 = or i1 %101, %102
  %105 = xor i1 %103, %104
  %106 = or i1 %96, %97
  %107 = xor i1 %106, true
  %108 = or i1 true, %98
  %109 = and i1 %107, %108
  %110 = or i1 %105, %109
  %111 = or i1 %94, %95
  %112 = select i1 %110, i32 -1588788277, i32 -1964546361
  store i32 %112, i32* %17
  br label %138

; <label>:113:                                    ; preds = %19
  %114 = load i32, i32* @x.247
  %115 = load i32, i32* @y.248
  %116 = sub i32 0, 1
  %117 = add i32 %114, %116
  %118 = sub i32 %114, 1
  %119 = mul i32 %114, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %115, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  %127 = select i1 %125, i32 351633772, i32 -1964546361
  store i32 %127, i32* %17
  br label %138

; <label>:128:                                    ; preds = %19
  store i32 -1517270285, i32* %17
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %18
  br label %138

; <label>:129:                                    ; preds = %19
  %130 = load %"class.std::vector.0"*, %"class.std::vector.0"** %18
  ret %"class.std::vector.0"* %130

; <label>:131:                                    ; preds = %19
  %132 = alloca %"struct.std::_Vector_base"*, align 8
  %133 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %132, align 8
  store i64 %1, i64* %133, align 8
  %134 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %132, align 8
  %135 = load i64, i64* %133, align 8
  %136 = icmp ne i64 %135, 0
  store i32 992891063, i32* %17
  br label %138

; <label>:137:                                    ; preds = %19
  store i32 -1588788277, i32* %17
  br label %138

; <label>:138:                                    ; preds = %137, %131, %128, %113, %86, %79, %76, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt16allocator_traitsISaISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEE8allocateERSD_m(%"class.std::allocator"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector.0"* @_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %6, i64 %7, i8* null)
  ret %"class.std::vector.0"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZN9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 1621610334, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1621610334, label %16
    i32 -1032233973, label %21
    i32 -1827899458, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -1032233973, i32 -1827899458
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 24
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"class.std::vector.0"*
  ret %"class.std::vector.0"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #9

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #10

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEvRT_SF_(%"class.std::vector.0"** dereferenceable(8), %"class.std::vector.0"** dereferenceable(8)) #4 comdat {
  %3 = alloca %"class.std::vector.0"**, align 8
  %4 = alloca %"class.std::vector.0"**, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"** %0, %"class.std::vector.0"*** %3, align 8
  store %"class.std::vector.0"** %1, %"class.std::vector.0"*** %4, align 8
  %6 = load %"class.std::vector.0"**, %"class.std::vector.0"*** %3, align 8
  %7 = call dereferenceable(8) %"class.std::vector.0"** @_ZSt4moveIRPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEONSt16remove_referenceIT_E4typeEOSG_(%"class.std::vector.0"** dereferenceable(8) %6) #3
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  store %"class.std::vector.0"* %8, %"class.std::vector.0"** %5, align 8
  %9 = load %"class.std::vector.0"**, %"class.std::vector.0"*** %4, align 8
  %10 = call dereferenceable(8) %"class.std::vector.0"** @_ZSt4moveIRPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEONSt16remove_referenceIT_E4typeEOSG_(%"class.std::vector.0"** dereferenceable(8) %9) #3
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  %12 = load %"class.std::vector.0"**, %"class.std::vector.0"*** %3, align 8
  store %"class.std::vector.0"* %11, %"class.std::vector.0"** %12, align 8
  %13 = call dereferenceable(8) %"class.std::vector.0"** @_ZSt4moveIRPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEONSt16remove_referenceIT_E4typeEOSG_(%"class.std::vector.0"** dereferenceable(8) %5) #3
  %14 = load %"class.std::vector.0"*, %"class.std::vector.0"** %13, align 8
  %15 = load %"class.std::vector.0"**, %"class.std::vector.0"*** %4, align 8
  store %"class.std::vector.0"* %14, %"class.std::vector.0"** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.0"** @_ZSt4moveIRPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEONSt16remove_referenceIT_E4typeEOSG_(%"class.std::vector.0"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"class.std::vector.0"**, align 8
  store %"class.std::vector.0"** %0, %"class.std::vector.0"*** %2, align 8
  %3 = load %"class.std::vector.0"**, %"class.std::vector.0"*** %2, align 8
  ret %"class.std::vector.0"** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8__fill_aIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EESC_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SJ_RKSG_(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.0"**
  %5 = alloca %"class.std::vector.0"**
  %6 = alloca %"class.std::vector.0"**
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.259
  %10 = load i32, i32* @y.260
  %11 = sub i32 %9, -1456563763
  %12 = sub i32 %11, 1
  %13 = add i32 %12, -1456563763
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 717057576, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %127
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 717057576, label %23
    i32 904554833, label %31
    i32 1576821045, label %65
    i32 2101977176, label %66
    i32 1931142590, label %73
    i32 463659381, label %89
    i32 -524386738, label %110
    i32 -1881324913, label %111
    i32 621972691, label %116
    i32 -1288168550, label %117
    i32 -381181646, label %121
  ]

; <label>:22:                                     ; preds = %20
  br label %127

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 904554833, i32 -1288168550
  store i32 %30, i32* %19
  br label %127

; <label>:31:                                     ; preds = %20
  %32 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"** %32, %"class.std::vector.0"*** %6
  %33 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"** %33, %"class.std::vector.0"*** %5
  %34 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"** %34, %"class.std::vector.0"*** %4
  %35 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %6
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %35, align 8
  %36 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %5
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %36, align 8
  %37 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %4
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %37, align 8
  %38 = load i32, i32* @x.259
  %39 = load i32, i32* @y.260
  %40 = sub i32 %38, 1945648057
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 1945648057
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 1576821045, i32 -1288168550
  store i32 %64, i32* %19
  br label %127

; <label>:65:                                     ; preds = %20
  store i32 2101977176, i32* %19
  br label %127

; <label>:66:                                     ; preds = %20
  %67 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %6
  %68 = load %"class.std::vector.0"*, %"class.std::vector.0"** %67, align 8
  %69 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %5
  %70 = load %"class.std::vector.0"*, %"class.std::vector.0"** %69, align 8
  %71 = icmp ne %"class.std::vector.0"* %68, %70
  %72 = select i1 %71, i32 1931142590, i32 621972691
  store i32 %72, i32* %19
  br label %127

; <label>:73:                                     ; preds = %20
  %74 = load i32, i32* @x.259
  %75 = load i32, i32* @y.260
  %76 = add i32 %74, 417206769
  %77 = sub i32 %76, 1
  %78 = sub i32 %77, 417206769
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = and i1 %82, %83
  %85 = xor i1 %82, %83
  %86 = or i1 %84, %85
  %87 = or i1 %82, %83
  %88 = select i1 %86, i32 463659381, i32 -381181646
  store i32 %88, i32* %19
  br label %127

; <label>:89:                                     ; preds = %20
  %90 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %4
  %91 = load %"class.std::vector.0"*, %"class.std::vector.0"** %90, align 8
  %92 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %6
  %93 = load %"class.std::vector.0"*, %"class.std::vector.0"** %92, align 8
  %94 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEaSERKSB_(%"class.std::vector.0"* %93, %"class.std::vector.0"* dereferenceable(24) %91)
  %95 = load i32, i32* @x.259
  %96 = load i32, i32* @y.260
  %97 = sub i32 %95, -1821497120
  %98 = sub i32 %97, 1
  %99 = add i32 %98, -1821497120
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = and i1 %103, %104
  %106 = xor i1 %103, %104
  %107 = or i1 %105, %106
  %108 = or i1 %103, %104
  %109 = select i1 %107, i32 -524386738, i32 -381181646
  store i32 %109, i32* %19
  br label %127

; <label>:110:                                    ; preds = %20
  store i32 -1881324913, i32* %19
  br label %127

; <label>:111:                                    ; preds = %20
  %112 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %6
  %113 = load %"class.std::vector.0"*, %"class.std::vector.0"** %112, align 8
  %114 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %113, i32 1
  %115 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %6
  store %"class.std::vector.0"* %114, %"class.std::vector.0"** %115, align 8
  store i32 2101977176, i32* %19
  br label %127

; <label>:116:                                    ; preds = %20
  ret void

; <label>:117:                                    ; preds = %20
  %118 = alloca %"class.std::vector.0"*, align 8
  %119 = alloca %"class.std::vector.0"*, align 8
  %120 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %118, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %119, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %120, align 8
  store i32 904554833, i32* %19
  br label %127

; <label>:121:                                    ; preds = %20
  %122 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %4
  %123 = load %"class.std::vector.0"*, %"class.std::vector.0"** %122, align 8
  %124 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %6
  %125 = load %"class.std::vector.0"*, %"class.std::vector.0"** %124, align 8
  %126 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEaSERKSB_(%"class.std::vector.0"* %125, %"class.std::vector.0"* dereferenceable(24) %123)
  store i32 463659381, i32* %19
  br label %127

; <label>:127:                                    ; preds = %121, %117, %111, %110, %89, %73, %66, %65, %31, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EES2_ISE_SaISE_EEEEENSt11_Niter_baseIT_E13iterator_typeESK_(%"class.std::vector.0"*) #0 comdat {
  %2 = alloca %"class.std::vector.0"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.261
  %6 = load i32, i32* @y.262
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -2007403456, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %85
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2007403456, label %18
    i32 -33748108, label %38
    i32 -910076234, label %74
    i32 -478086022, label %76
  ]

; <label>:17:                                     ; preds = %15
  br label %85

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -33748108, i32 -478086022
  store i32 %37, i32* %14
  br label %85

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %40 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %39, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %41, align 8
  %42 = bitcast %"class.__gnu_cxx::__normal_iterator"* %40 to i8*
  %43 = bitcast %"class.__gnu_cxx::__normal_iterator"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 8, i32 8, i1 false)
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  %45 = load %"class.std::vector.0"*, %"class.std::vector.0"** %44, align 8
  %46 = call %"class.std::vector.0"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EES2_ISE_SaISE_EEEELb1EE7_S_baseESI_(%"class.std::vector.0"* %45)
  store %"class.std::vector.0"* %46, %"class.std::vector.0"** %2
  %47 = load i32, i32* @x.261
  %48 = load i32, i32* @y.262
  %49 = sub i32 %47, -794383938
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -794383938
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -910076234, i32 -478086022
  store i32 %73, i32* %14
  br label %85

; <label>:74:                                     ; preds = %15
  %75 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %2
  ret %"class.std::vector.0"* %75

; <label>:76:                                     ; preds = %15
  %77 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %78 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %79 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %77, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %79, align 8
  %80 = bitcast %"class.__gnu_cxx::__normal_iterator"* %78 to i8*
  %81 = bitcast %"class.__gnu_cxx::__normal_iterator"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %80, i8* %81, i64 8, i32 8, i1 false)
  %82 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %78, i32 0, i32 0
  %83 = load %"class.std::vector.0"*, %"class.std::vector.0"** %82, align 8
  %84 = call %"class.std::vector.0"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EES2_ISE_SaISE_EEEELb1EE7_S_baseESI_(%"class.std::vector.0"* %83)
  store i32 -33748108, i32* %14
  br label %85

; <label>:85:                                     ; preds = %76, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEaSERKSB_(%"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*
  %4 = alloca %"class.std::vector.0"*
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca %"class.std::vector.0"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"class.std::unordered_map"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %5, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %6, align 8
  %16 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  store %"class.std::vector.0"* %16, %"class.std::vector.0"** %4
  %17 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  store %"class.std::vector.0"* %17, %"class.std::vector.0"** %3
  %18 = alloca i32
  store i32 270392502, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %405
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 270392502, label %22
    i32 -744507096, label %27
    i32 -232148018, label %35
    i32 -549048627, label %102
    i32 375954519, label %108
    i32 633299200, label %136
    i32 1062221738, label %191
    i32 241758790, label %192
    i32 363903311, label %207
    i32 -1155638316, label %264
    i32 -116678892, label %265
    i32 199944526, label %266
    i32 -903906203, label %293
    i32 1575885936, label %320
    i32 -161224810, label %321
    i32 727051022, label %323
    i32 -40565324, label %351
    i32 -226942104, label %393
  ]

; <label>:21:                                     ; preds = %19
  br label %405

; <label>:22:                                     ; preds = %19
  %23 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %24 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %3
  %25 = icmp ne %"class.std::vector.0"* %24, %23
  %26 = select i1 %25, i32 -744507096, i32 -161224810
  store i32 %26, i32* %18
  br label %405

; <label>:27:                                     ; preds = %19
  %28 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %29 = call i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE4sizeEv(%"class.std::vector.0"* %28) #3
  store i64 %29, i64* %7, align 8
  %30 = load i64, i64* %7, align 8
  %31 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %32 = call i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE8capacityEv(%"class.std::vector.0"* %31) #3
  %33 = icmp ugt i64 %30, %32
  %34 = select i1 %33, i32 -232148018, i32 -549048627
  store i32 %34, i32* %18
  br label %405

; <label>:35:                                     ; preds = %19
  %36 = load i64, i64* %7, align 8
  %37 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %38 = call %"class.std::unordered_map"* @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE5beginEv(%"class.std::vector.0"* %37) #3
  %39 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %9, i32 0, i32 0
  store %"class.std::unordered_map"* %38, %"class.std::unordered_map"** %39, align 8
  %40 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %41 = call %"class.std::unordered_map"* @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE3endEv(%"class.std::vector.0"* %40) #3
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %10, i32 0, i32 0
  store %"class.std::unordered_map"* %41, %"class.std::unordered_map"** %42, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %9, i32 0, i32 0
  %44 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %43, align 8
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %10, i32 0, i32 0
  %46 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %45, align 8
  %47 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %48 = call %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS9_SB_EEEEPS9_mT_SJ_(%"class.std::vector.0"* %47, i64 %36, %"class.std::unordered_map"* %44, %"class.std::unordered_map"* %46)
  store %"class.std::unordered_map"* %48, %"class.std::unordered_map"** %8, align 8
  %49 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %50 = bitcast %"class.std::vector.0"* %49 to %"struct.std::_Vector_base.1"*
  %51 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %50, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %51, i32 0, i32 0
  %53 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %52, align 8
  %54 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %55 = bitcast %"class.std::vector.0"* %54 to %"struct.std::_Vector_base.1"*
  %56 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %55, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %56, i32 0, i32 1
  %58 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %57, align 8
  %59 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %60 = bitcast %"class.std::vector.0"* %59 to %"struct.std::_Vector_base.1"*
  %61 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %60) #3
  call void @_ZSt8_DestroyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEES9_EvT_SB_RSaIT0_E(%"class.std::unordered_map"* %53, %"class.std::unordered_map"* %58, %"class.std::allocator.2"* dereferenceable(1) %61)
  %62 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %63 = bitcast %"class.std::vector.0"* %62 to %"struct.std::_Vector_base.1"*
  %64 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %65 = bitcast %"class.std::vector.0"* %64 to %"struct.std::_Vector_base.1"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %65, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %66, i32 0, i32 0
  %68 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %67, align 8
  %69 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %70 = bitcast %"class.std::vector.0"* %69 to %"struct.std::_Vector_base.1"*
  %71 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %71, i32 0, i32 2
  %73 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %72, align 8
  %74 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %75 = bitcast %"class.std::vector.0"* %74 to %"struct.std::_Vector_base.1"*
  %76 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %76, i32 0, i32 0
  %78 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %77, align 8
  %79 = ptrtoint %"class.std::unordered_map"* %73 to i64
  %80 = ptrtoint %"class.std::unordered_map"* %78 to i64
  %81 = add i64 %79, -8537139992945118289
  %82 = sub i64 %81, %80
  %83 = sub i64 %82, -8537139992945118289
  %84 = sub i64 %79, %80
  %85 = sdiv exact i64 %83, 56
  call void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE13_M_deallocateEPS9_m(%"struct.std::_Vector_base.1"* %63, %"class.std::unordered_map"* %68, i64 %85)
  %86 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %8, align 8
  %87 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %88 = bitcast %"class.std::vector.0"* %87 to %"struct.std::_Vector_base.1"*
  %89 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %88, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %89, i32 0, i32 0
  store %"class.std::unordered_map"* %86, %"class.std::unordered_map"** %90, align 8
  %91 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %92 = bitcast %"class.std::vector.0"* %91 to %"struct.std::_Vector_base.1"*
  %93 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %92, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %93, i32 0, i32 0
  %95 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %94, align 8
  %96 = load i64, i64* %7, align 8
  %97 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %95, i64 %96
  %98 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %99 = bitcast %"class.std::vector.0"* %98 to %"struct.std::_Vector_base.1"*
  %100 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %99, i32 0, i32 0
  %101 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %100, i32 0, i32 2
  store %"class.std::unordered_map"* %97, %"class.std::unordered_map"** %101, align 8
  store i32 199944526, i32* %18
  br label %405

; <label>:102:                                    ; preds = %19
  %103 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %104 = call i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE4sizeEv(%"class.std::vector.0"* %103) #3
  %105 = load i64, i64* %7, align 8
  %106 = icmp uge i64 %104, %105
  %107 = select i1 %106, i32 375954519, i32 241758790
  store i32 %107, i32* %18
  br label %405

; <label>:108:                                    ; preds = %19
  %109 = load i32, i32* @x.263
  %110 = load i32, i32* @y.264
  %111 = sub i32 %109, -186402087
  %112 = sub i32 %111, 1
  %113 = add i32 %112, -186402087
  %114 = sub i32 %109, 1
  %115 = mul i32 %109, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %110, 10
  %119 = xor i1 %117, true
  %120 = xor i1 %118, true
  %121 = xor i1 false, true
  %122 = and i1 %119, false
  %123 = and i1 %117, %121
  %124 = and i1 %120, false
  %125 = and i1 %118, %121
  %126 = or i1 %122, %123
  %127 = or i1 %124, %125
  %128 = xor i1 %126, %127
  %129 = or i1 %119, %120
  %130 = xor i1 %129, true
  %131 = or i1 false, %121
  %132 = and i1 %130, %131
  %133 = or i1 %128, %132
  %134 = or i1 %117, %118
  %135 = select i1 %133, i32 633299200, i32 727051022
  store i32 %135, i32* %18
  br label %405

; <label>:136:                                    ; preds = %19
  %137 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %138 = call %"class.std::unordered_map"* @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE5beginEv(%"class.std::vector.0"* %137) #3
  %139 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %12, i32 0, i32 0
  store %"class.std::unordered_map"* %138, %"class.std::unordered_map"** %139, align 8
  %140 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %141 = call %"class.std::unordered_map"* @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE3endEv(%"class.std::vector.0"* %140) #3
  %142 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %13, i32 0, i32 0
  store %"class.std::unordered_map"* %141, %"class.std::unordered_map"** %142, align 8
  %143 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %144 = call %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE5beginEv(%"class.std::vector.0"* %143) #3
  %145 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %14, i32 0, i32 0
  store %"class.std::unordered_map"* %144, %"class.std::unordered_map"** %145, align 8
  %146 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %12, i32 0, i32 0
  %147 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %146, align 8
  %148 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %13, i32 0, i32 0
  %149 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %148, align 8
  %150 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %14, i32 0, i32 0
  %151 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %150, align 8
  %152 = call %"class.std::unordered_map"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEENS1_IPSB_SG_EEET0_T_SL_SK_(%"class.std::unordered_map"* %147, %"class.std::unordered_map"* %149, %"class.std::unordered_map"* %151)
  %153 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %11, i32 0, i32 0
  store %"class.std::unordered_map"* %152, %"class.std::unordered_map"** %153, align 8
  %154 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %155 = call %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE3endEv(%"class.std::vector.0"* %154) #3
  %156 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %15, i32 0, i32 0
  store %"class.std::unordered_map"* %155, %"class.std::unordered_map"** %156, align 8
  %157 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %158 = bitcast %"class.std::vector.0"* %157 to %"struct.std::_Vector_base.1"*
  %159 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %158) #3
  %160 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %11, i32 0, i32 0
  %161 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %160, align 8
  %162 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %15, i32 0, i32 0
  %163 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %162, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEESB_EvT_SH_RSaIT0_E(%"class.std::unordered_map"* %161, %"class.std::unordered_map"* %163, %"class.std::allocator.2"* dereferenceable(1) %159)
  %164 = load i32, i32* @x.263
  %165 = load i32, i32* @y.264
  %166 = sub i32 %164, 702263659
  %167 = sub i32 %166, 1
  %168 = add i32 %167, 702263659
  %169 = sub i32 %164, 1
  %170 = mul i32 %164, %168
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %165, 10
  %174 = xor i1 %172, true
  %175 = xor i1 %173, true
  %176 = xor i1 true, true
  %177 = and i1 %174, true
  %178 = and i1 %172, %176
  %179 = and i1 %175, true
  %180 = and i1 %173, %176
  %181 = or i1 %177, %178
  %182 = or i1 %179, %180
  %183 = xor i1 %181, %182
  %184 = or i1 %174, %175
  %185 = xor i1 %184, true
  %186 = or i1 true, %176
  %187 = and i1 %185, %186
  %188 = or i1 %183, %187
  %189 = or i1 %172, %173
  %190 = select i1 %188, i32 1062221738, i32 727051022
  store i32 %190, i32* %18
  br label %405

; <label>:191:                                    ; preds = %19
  store i32 -116678892, i32* %18
  br label %405

; <label>:192:                                    ; preds = %19
  %193 = load i32, i32* @x.263
  %194 = load i32, i32* @y.264
  %195 = sub i32 0, 1
  %196 = add i32 %193, %195
  %197 = sub i32 %193, 1
  %198 = mul i32 %193, %196
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %194, 10
  %202 = and i1 %200, %201
  %203 = xor i1 %200, %201
  %204 = or i1 %202, %203
  %205 = or i1 %200, %201
  %206 = select i1 %204, i32 363903311, i32 -40565324
  store i32 %206, i32* %18
  br label %405

; <label>:207:                                    ; preds = %19
  %208 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %209 = bitcast %"class.std::vector.0"* %208 to %"struct.std::_Vector_base.1"*
  %210 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %209, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %210, i32 0, i32 0
  %212 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %211, align 8
  %213 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %214 = bitcast %"class.std::vector.0"* %213 to %"struct.std::_Vector_base.1"*
  %215 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %214, i32 0, i32 0
  %216 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %215, i32 0, i32 0
  %217 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %216, align 8
  %218 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %219 = call i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE4sizeEv(%"class.std::vector.0"* %218) #3
  %220 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %217, i64 %219
  %221 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %222 = bitcast %"class.std::vector.0"* %221 to %"struct.std::_Vector_base.1"*
  %223 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %222, i32 0, i32 0
  %224 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %223, i32 0, i32 0
  %225 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %224, align 8
  %226 = call %"class.std::unordered_map"* @_ZSt4copyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_ET0_T_SC_SB_(%"class.std::unordered_map"* %212, %"class.std::unordered_map"* %220, %"class.std::unordered_map"* %225)
  %227 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %228 = bitcast %"class.std::vector.0"* %227 to %"struct.std::_Vector_base.1"*
  %229 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %228, i32 0, i32 0
  %230 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %229, i32 0, i32 0
  %231 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %230, align 8
  %232 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %233 = call i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE4sizeEv(%"class.std::vector.0"* %232) #3
  %234 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %231, i64 %233
  %235 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %236 = bitcast %"class.std::vector.0"* %235 to %"struct.std::_Vector_base.1"*
  %237 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %236, i32 0, i32 0
  %238 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %237, i32 0, i32 1
  %239 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %238, align 8
  %240 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %241 = bitcast %"class.std::vector.0"* %240 to %"struct.std::_Vector_base.1"*
  %242 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %241, i32 0, i32 0
  %243 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %242, i32 0, i32 1
  %244 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %243, align 8
  %245 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %246 = bitcast %"class.std::vector.0"* %245 to %"struct.std::_Vector_base.1"*
  %247 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %246) #3
  %248 = call %"class.std::unordered_map"* @_ZSt22__uninitialized_copy_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_S9_ET0_T_SC_SB_RSaIT1_E(%"class.std::unordered_map"* %234, %"class.std::unordered_map"* %239, %"class.std::unordered_map"* %244, %"class.std::allocator.2"* dereferenceable(1) %247)
  %249 = load i32, i32* @x.263
  %250 = load i32, i32* @y.264
  %251 = sub i32 %249, 1768057056
  %252 = sub i32 %251, 1
  %253 = add i32 %252, 1768057056
  %254 = sub i32 %249, 1
  %255 = mul i32 %249, %253
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %250, 10
  %259 = and i1 %257, %258
  %260 = xor i1 %257, %258
  %261 = or i1 %259, %260
  %262 = or i1 %257, %258
  %263 = select i1 %261, i32 -1155638316, i32 -40565324
  store i32 %263, i32* %18
  br label %405

; <label>:264:                                    ; preds = %19
  store i32 -116678892, i32* %18
  br label %405

; <label>:265:                                    ; preds = %19
  store i32 199944526, i32* %18
  br label %405

; <label>:266:                                    ; preds = %19
  %267 = load i32, i32* @x.263
  %268 = load i32, i32* @y.264
  %269 = sub i32 0, 1
  %270 = add i32 %267, %269
  %271 = sub i32 %267, 1
  %272 = mul i32 %267, %270
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %268, 10
  %276 = xor i1 %274, true
  %277 = xor i1 %275, true
  %278 = xor i1 false, true
  %279 = and i1 %276, false
  %280 = and i1 %274, %278
  %281 = and i1 %277, false
  %282 = and i1 %275, %278
  %283 = or i1 %279, %280
  %284 = or i1 %281, %282
  %285 = xor i1 %283, %284
  %286 = or i1 %276, %277
  %287 = xor i1 %286, true
  %288 = or i1 false, %278
  %289 = and i1 %287, %288
  %290 = or i1 %285, %289
  %291 = or i1 %274, %275
  %292 = select i1 %290, i32 -903906203, i32 -226942104
  store i32 %292, i32* %18
  br label %405

; <label>:293:                                    ; preds = %19
  %294 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %295 = bitcast %"class.std::vector.0"* %294 to %"struct.std::_Vector_base.1"*
  %296 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %295, i32 0, i32 0
  %297 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %296, i32 0, i32 0
  %298 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %297, align 8
  %299 = load i64, i64* %7, align 8
  %300 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %298, i64 %299
  %301 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %302 = bitcast %"class.std::vector.0"* %301 to %"struct.std::_Vector_base.1"*
  %303 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %302, i32 0, i32 0
  %304 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %303, i32 0, i32 1
  store %"class.std::unordered_map"* %300, %"class.std::unordered_map"** %304, align 8
  %305 = load i32, i32* @x.263
  %306 = load i32, i32* @y.264
  %307 = sub i32 %305, 935757290
  %308 = sub i32 %307, 1
  %309 = add i32 %308, 935757290
  %310 = sub i32 %305, 1
  %311 = mul i32 %305, %309
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %306, 10
  %315 = and i1 %313, %314
  %316 = xor i1 %313, %314
  %317 = or i1 %315, %316
  %318 = or i1 %313, %314
  %319 = select i1 %317, i32 1575885936, i32 -226942104
  store i32 %319, i32* %18
  br label %405

; <label>:320:                                    ; preds = %19
  store i32 -161224810, i32* %18
  br label %405

; <label>:321:                                    ; preds = %19
  %322 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  ret %"class.std::vector.0"* %322

; <label>:323:                                    ; preds = %19
  %324 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %325 = call %"class.std::unordered_map"* @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE5beginEv(%"class.std::vector.0"* %324) #3
  %326 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %12, i32 0, i32 0
  store %"class.std::unordered_map"* %325, %"class.std::unordered_map"** %326, align 8
  %327 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %328 = call %"class.std::unordered_map"* @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE3endEv(%"class.std::vector.0"* %327) #3
  %329 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %13, i32 0, i32 0
  store %"class.std::unordered_map"* %328, %"class.std::unordered_map"** %329, align 8
  %330 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %331 = call %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE5beginEv(%"class.std::vector.0"* %330) #3
  %332 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %14, i32 0, i32 0
  store %"class.std::unordered_map"* %331, %"class.std::unordered_map"** %332, align 8
  %333 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %12, i32 0, i32 0
  %334 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %333, align 8
  %335 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %13, i32 0, i32 0
  %336 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %335, align 8
  %337 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %14, i32 0, i32 0
  %338 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %337, align 8
  %339 = call %"class.std::unordered_map"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEENS1_IPSB_SG_EEET0_T_SL_SK_(%"class.std::unordered_map"* %334, %"class.std::unordered_map"* %336, %"class.std::unordered_map"* %338)
  %340 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %11, i32 0, i32 0
  store %"class.std::unordered_map"* %339, %"class.std::unordered_map"** %340, align 8
  %341 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %342 = call %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE3endEv(%"class.std::vector.0"* %341) #3
  %343 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %15, i32 0, i32 0
  store %"class.std::unordered_map"* %342, %"class.std::unordered_map"** %343, align 8
  %344 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %345 = bitcast %"class.std::vector.0"* %344 to %"struct.std::_Vector_base.1"*
  %346 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %345) #3
  %347 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %11, i32 0, i32 0
  %348 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %347, align 8
  %349 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %15, i32 0, i32 0
  %350 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %349, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEESB_EvT_SH_RSaIT0_E(%"class.std::unordered_map"* %348, %"class.std::unordered_map"* %350, %"class.std::allocator.2"* dereferenceable(1) %346)
  store i32 633299200, i32* %18
  br label %405

; <label>:351:                                    ; preds = %19
  %352 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %353 = bitcast %"class.std::vector.0"* %352 to %"struct.std::_Vector_base.1"*
  %354 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %353, i32 0, i32 0
  %355 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %354, i32 0, i32 0
  %356 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %355, align 8
  %357 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %358 = bitcast %"class.std::vector.0"* %357 to %"struct.std::_Vector_base.1"*
  %359 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %358, i32 0, i32 0
  %360 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %359, i32 0, i32 0
  %361 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %360, align 8
  %362 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %363 = call i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE4sizeEv(%"class.std::vector.0"* %362) #3
  %364 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %361, i64 %363
  %365 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %366 = bitcast %"class.std::vector.0"* %365 to %"struct.std::_Vector_base.1"*
  %367 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %366, i32 0, i32 0
  %368 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %367, i32 0, i32 0
  %369 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %368, align 8
  %370 = call %"class.std::unordered_map"* @_ZSt4copyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_ET0_T_SC_SB_(%"class.std::unordered_map"* %356, %"class.std::unordered_map"* %364, %"class.std::unordered_map"* %369)
  %371 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %372 = bitcast %"class.std::vector.0"* %371 to %"struct.std::_Vector_base.1"*
  %373 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %372, i32 0, i32 0
  %374 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %373, i32 0, i32 0
  %375 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %374, align 8
  %376 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %377 = call i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE4sizeEv(%"class.std::vector.0"* %376) #3
  %378 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %375, i64 %377
  %379 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %380 = bitcast %"class.std::vector.0"* %379 to %"struct.std::_Vector_base.1"*
  %381 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %380, i32 0, i32 0
  %382 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %381, i32 0, i32 1
  %383 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %382, align 8
  %384 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %385 = bitcast %"class.std::vector.0"* %384 to %"struct.std::_Vector_base.1"*
  %386 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %385, i32 0, i32 0
  %387 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %386, i32 0, i32 1
  %388 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %387, align 8
  %389 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %390 = bitcast %"class.std::vector.0"* %389 to %"struct.std::_Vector_base.1"*
  %391 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %390) #3
  %392 = call %"class.std::unordered_map"* @_ZSt22__uninitialized_copy_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_S9_ET0_T_SC_SB_RSaIT1_E(%"class.std::unordered_map"* %378, %"class.std::unordered_map"* %383, %"class.std::unordered_map"* %388, %"class.std::allocator.2"* dereferenceable(1) %391)
  store i32 363903311, i32* %18
  br label %405

; <label>:393:                                    ; preds = %19
  %394 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %395 = bitcast %"class.std::vector.0"* %394 to %"struct.std::_Vector_base.1"*
  %396 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %395, i32 0, i32 0
  %397 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %396, i32 0, i32 0
  %398 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %397, align 8
  %399 = load i64, i64* %7, align 8
  %400 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %398, i64 %399
  %401 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %402 = bitcast %"class.std::vector.0"* %401 to %"struct.std::_Vector_base.1"*
  %403 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %402, i32 0, i32 0
  %404 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %403, i32 0, i32 1
  store %"class.std::unordered_map"* %400, %"class.std::unordered_map"** %404, align 8
  store i32 -903906203, i32* %18
  br label %405

; <label>:405:                                    ; preds = %393, %351, %323, %320, %293, %266, %265, %264, %207, %192, %191, %136, %108, %102, %35, %27, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE8capacityEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %5, i32 0, i32 2
  %7 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  %8 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %10, align 8
  %12 = ptrtoint %"class.std::unordered_map"* %7 to i64
  %13 = ptrtoint %"class.std::unordered_map"* %11 to i64
  %14 = sub i64 %12, -7047159756857855339
  %15 = sub i64 %14, %13
  %16 = add i64 %15, -7047159756857855339
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 56
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS9_SB_EEEEPS9_mT_SJ_(%"class.std::vector.0"*, i64, %"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.std::unordered_map"*, align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %12 = alloca i8*
  %13 = alloca i32
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %5, i32 0, i32 0
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %6, i32 0, i32 0
  store %"class.std::unordered_map"* %3, %"class.std::unordered_map"** %15, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %7, align 8
  store i64 %1, i64* %8, align 8
  %16 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %17 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %18 = load i64, i64* %8, align 8
  %19 = call %"class.std::unordered_map"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %17, i64 %18)
  store %"class.std::unordered_map"* %19, %"class.std::unordered_map"** %9, align 8
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %10 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %11 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %9, align 8
  %25 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %26 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %25) #3
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %10, i32 0, i32 0
  %28 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %27, align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %11, i32 0, i32 0
  %30 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %29, align 8
  %31 = invoke %"class.std::unordered_map"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEPSB_SB_ET0_T_SK_SJ_RSaIT1_E(%"class.std::unordered_map"* %28, %"class.std::unordered_map"* %30, %"class.std::unordered_map"* %24, %"class.std::allocator.2"* dereferenceable(1) %26)
          to label %32 unwind label %75

; <label>:32:                                     ; preds = %4
  %33 = load i32, i32* @x.267
  %34 = load i32, i32* @y.268
  %35 = add i32 %33, -180686827
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -180686827
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %343

; <label>:59:                                     ; preds = %32, %343
  %60 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %9, align 8
  %61 = load i32, i32* @x.267
  %62 = load i32, i32* @y.268
  %63 = sub i32 0, 1
  %64 = add i32 %61, %63
  %65 = sub i32 %61, 1
  %66 = mul i32 %61, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %62, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  br i1 %72, label %74, label %343

; <label>:74:                                     ; preds = %59
  ret %"class.std::unordered_map"* %60

; <label>:75:                                     ; preds = %4
  %76 = load i32, i32* @x.267
  %77 = load i32, i32* @y.268
  %78 = add i32 %76, -309847279
  %79 = sub i32 %78, 1
  %80 = sub i32 %79, -309847279
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = and i1 %84, %85
  %87 = xor i1 %84, %85
  %88 = or i1 %86, %87
  %89 = or i1 %84, %85
  br i1 %88, label %90, label %345

; <label>:90:                                     ; preds = %75, %345
  %91 = landingpad { i8*, i32 }
          catch i8* null
  %92 = extractvalue { i8*, i32 } %91, 0
  store i8* %92, i8** %12, align 8
  %93 = extractvalue { i8*, i32 } %91, 1
  store i32 %93, i32* %13, align 4
  %94 = load i32, i32* @x.267
  %95 = load i32, i32* @y.268
  %96 = sub i32 %94, -169363674
  %97 = sub i32 %96, 1
  %98 = add i32 %97, -169363674
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = xor i1 %102, true
  %105 = xor i1 %103, true
  %106 = xor i1 true, true
  %107 = and i1 %104, true
  %108 = and i1 %102, %106
  %109 = and i1 %105, true
  %110 = and i1 %103, %106
  %111 = or i1 %107, %108
  %112 = or i1 %109, %110
  %113 = xor i1 %111, %112
  %114 = or i1 %104, %105
  %115 = xor i1 %114, true
  %116 = or i1 true, %106
  %117 = and i1 %115, %116
  %118 = or i1 %113, %117
  %119 = or i1 %102, %103
  br i1 %118, label %120, label %345

; <label>:120:                                    ; preds = %90
  br label %121

; <label>:121:                                    ; preds = %120
  %122 = load i8*, i8** %12, align 8
  %123 = call i8* @__cxa_begin_catch(i8* %122) #3
  %124 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %125 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %9, align 8
  %126 = load i64, i64* %8, align 8
  invoke void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE13_M_deallocateEPS9_m(%"struct.std::_Vector_base.1"* %124, %"class.std::unordered_map"* %125, i64 %126)
          to label %127 unwind label %180

; <label>:127:                                    ; preds = %121
  %128 = load i32, i32* @x.267
  %129 = load i32, i32* @y.268
  %130 = sub i32 0, 1
  %131 = add i32 %128, %130
  %132 = sub i32 %128, 1
  %133 = mul i32 %128, %131
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %129, 10
  %137 = xor i1 %135, true
  %138 = xor i1 %136, true
  %139 = xor i1 true, true
  %140 = and i1 %137, true
  %141 = and i1 %135, %139
  %142 = and i1 %138, true
  %143 = and i1 %136, %139
  %144 = or i1 %140, %141
  %145 = or i1 %142, %143
  %146 = xor i1 %144, %145
  %147 = or i1 %137, %138
  %148 = xor i1 %147, true
  %149 = or i1 true, %139
  %150 = and i1 %148, %149
  %151 = or i1 %146, %150
  %152 = or i1 %135, %136
  br i1 %151, label %153, label %349

; <label>:153:                                    ; preds = %127, %349
  %154 = load i32, i32* @x.267
  %155 = load i32, i32* @y.268
  %156 = sub i32 0, 1
  %157 = add i32 %154, %156
  %158 = sub i32 %154, 1
  %159 = mul i32 %154, %157
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %155, 10
  %163 = xor i1 %161, true
  %164 = xor i1 %162, true
  %165 = xor i1 false, true
  %166 = and i1 %163, false
  %167 = and i1 %161, %165
  %168 = and i1 %164, false
  %169 = and i1 %162, %165
  %170 = or i1 %166, %167
  %171 = or i1 %168, %169
  %172 = xor i1 %170, %171
  %173 = or i1 %163, %164
  %174 = xor i1 %173, true
  %175 = or i1 false, %165
  %176 = and i1 %174, %175
  %177 = or i1 %172, %176
  %178 = or i1 %161, %162
  br i1 %177, label %179, label %349

; <label>:179:                                    ; preds = %153
  invoke void @__cxa_rethrow() #12
          to label %301 unwind label %180

; <label>:180:                                    ; preds = %179, %121
  %181 = load i32, i32* @x.267
  %182 = load i32, i32* @y.268
  %183 = sub i32 0, 1
  %184 = add i32 %181, %183
  %185 = sub i32 %181, 1
  %186 = mul i32 %181, %184
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %182, 10
  %190 = xor i1 %188, true
  %191 = xor i1 %189, true
  %192 = xor i1 false, true
  %193 = and i1 %190, false
  %194 = and i1 %188, %192
  %195 = and i1 %191, false
  %196 = and i1 %189, %192
  %197 = or i1 %193, %194
  %198 = or i1 %195, %196
  %199 = xor i1 %197, %198
  %200 = or i1 %190, %191
  %201 = xor i1 %200, true
  %202 = or i1 false, %192
  %203 = and i1 %201, %202
  %204 = or i1 %199, %203
  %205 = or i1 %188, %189
  br i1 %204, label %206, label %350

; <label>:206:                                    ; preds = %180, %350
  %207 = landingpad { i8*, i32 }
          cleanup
  %208 = extractvalue { i8*, i32 } %207, 0
  store i8* %208, i8** %12, align 8
  %209 = extractvalue { i8*, i32 } %207, 1
  store i32 %209, i32* %13, align 4
  %210 = load i32, i32* @x.267
  %211 = load i32, i32* @y.268
  %212 = sub i32 %210, -289720074
  %213 = sub i32 %212, 1
  %214 = add i32 %213, -289720074
  %215 = sub i32 %210, 1
  %216 = mul i32 %210, %214
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %211, 10
  %220 = xor i1 %218, true
  %221 = xor i1 %219, true
  %222 = xor i1 true, true
  %223 = and i1 %220, true
  %224 = and i1 %218, %222
  %225 = and i1 %221, true
  %226 = and i1 %219, %222
  %227 = or i1 %223, %224
  %228 = or i1 %225, %226
  %229 = xor i1 %227, %228
  %230 = or i1 %220, %221
  %231 = xor i1 %230, true
  %232 = or i1 true, %222
  %233 = and i1 %231, %232
  %234 = or i1 %229, %233
  %235 = or i1 %218, %219
  br i1 %234, label %236, label %350

; <label>:236:                                    ; preds = %206
  invoke void @__cxa_end_catch()
          to label %237 unwind label %298

; <label>:237:                                    ; preds = %236
  br label %293
                                                  ; No predecessors!
  %239 = load i32, i32* @x.267
  %240 = load i32, i32* @y.268
  %241 = sub i32 %239, -989623505
  %242 = sub i32 %241, 1
  %243 = add i32 %242, -989623505
  %244 = sub i32 %239, 1
  %245 = mul i32 %239, %243
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %240, 10
  %249 = xor i1 %247, true
  %250 = xor i1 %248, true
  %251 = xor i1 false, true
  %252 = and i1 %249, false
  %253 = and i1 %247, %251
  %254 = and i1 %250, false
  %255 = and i1 %248, %251
  %256 = or i1 %252, %253
  %257 = or i1 %254, %255
  %258 = xor i1 %256, %257
  %259 = or i1 %249, %250
  %260 = xor i1 %259, true
  %261 = or i1 false, %251
  %262 = and i1 %260, %261
  %263 = or i1 %258, %262
  %264 = or i1 %247, %248
  br i1 %263, label %265, label %354

; <label>:265:                                    ; preds = %238, %354
  call void @llvm.trap()
  %266 = load i32, i32* @x.267
  %267 = load i32, i32* @y.268
  %268 = add i32 %266, -30486599
  %269 = sub i32 %268, 1
  %270 = sub i32 %269, -30486599
  %271 = sub i32 %266, 1
  %272 = mul i32 %266, %270
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %267, 10
  %276 = xor i1 %274, true
  %277 = xor i1 %275, true
  %278 = xor i1 false, true
  %279 = and i1 %276, false
  %280 = and i1 %274, %278
  %281 = and i1 %277, false
  %282 = and i1 %275, %278
  %283 = or i1 %279, %280
  %284 = or i1 %281, %282
  %285 = xor i1 %283, %284
  %286 = or i1 %276, %277
  %287 = xor i1 %286, true
  %288 = or i1 false, %278
  %289 = and i1 %287, %288
  %290 = or i1 %285, %289
  %291 = or i1 %274, %275
  br i1 %290, label %292, label %354

; <label>:292:                                    ; preds = %265
  unreachable

; <label>:293:                                    ; preds = %237
  %294 = load i8*, i8** %12, align 8
  %295 = load i32, i32* %13, align 4
  %296 = insertvalue { i8*, i32 } undef, i8* %294, 0
  %297 = insertvalue { i8*, i32 } %296, i32 %295, 1
  resume { i8*, i32 } %297

; <label>:298:                                    ; preds = %236
  %299 = landingpad { i8*, i32 }
          catch i8* null
  %300 = extractvalue { i8*, i32 } %299, 0
  call void @__clang_call_terminate(i8* %300) #11
  unreachable

; <label>:301:                                    ; preds = %179
  %302 = load i32, i32* @x.267
  %303 = load i32, i32* @y.268
  %304 = add i32 %302, -407967045
  %305 = sub i32 %304, 1
  %306 = sub i32 %305, -407967045
  %307 = sub i32 %302, 1
  %308 = mul i32 %302, %306
  %309 = urem i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %303, 10
  %312 = and i1 %310, %311
  %313 = xor i1 %310, %311
  %314 = or i1 %312, %313
  %315 = or i1 %310, %311
  br i1 %314, label %316, label %355

; <label>:316:                                    ; preds = %301, %355
  %317 = load i32, i32* @x.267
  %318 = load i32, i32* @y.268
  %319 = sub i32 0, 1
  %320 = add i32 %317, %319
  %321 = sub i32 %317, 1
  %322 = mul i32 %317, %320
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %318, 10
  %326 = xor i1 %324, true
  %327 = xor i1 %325, true
  %328 = xor i1 true, true
  %329 = and i1 %326, true
  %330 = and i1 %324, %328
  %331 = and i1 %327, true
  %332 = and i1 %325, %328
  %333 = or i1 %329, %330
  %334 = or i1 %331, %332
  %335 = xor i1 %333, %334
  %336 = or i1 %326, %327
  %337 = xor i1 %336, true
  %338 = or i1 true, %328
  %339 = and i1 %337, %338
  %340 = or i1 %335, %339
  %341 = or i1 %324, %325
  br i1 %340, label %342, label %355

; <label>:342:                                    ; preds = %316
  unreachable

; <label>:343:                                    ; preds = %59, %32
  %344 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %9, align 8
  br label %59

; <label>:345:                                    ; preds = %90, %75
  %346 = landingpad { i8*, i32 }
          catch i8* null
  %347 = extractvalue { i8*, i32 } %346, 0
  store i8* %347, i8** %12, align 8
  %348 = extractvalue { i8*, i32 } %346, 1
  store i32 %348, i32* %13, align 4
  br label %90

; <label>:349:                                    ; preds = %153, %127
  br label %153

; <label>:350:                                    ; preds = %206, %180
  %351 = landingpad { i8*, i32 }
          cleanup
  %352 = extractvalue { i8*, i32 } %351, 0
  store i8* %352, i8** %12, align 8
  %353 = extractvalue { i8*, i32 } %351, 1
  store i32 %353, i32* %13, align 4
  br label %206

; <label>:354:                                    ; preds = %265, %238
  call void @llvm.trap()
  br label %265

; <label>:355:                                    ; preds = %316, %301
  br label %316
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE5beginEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %8, align 8
  store %"class.std::unordered_map"* %9, %"class.std::unordered_map"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEC2ERKSC_(%"class.__gnu_cxx::__normal_iterator.18"* %2, %"class.std::unordered_map"** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %2, i32 0, i32 0
  %11 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %10, align 8
  ret %"class.std::unordered_map"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE3endEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.std::unordered_map"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.271
  %6 = load i32, i32* @y.272
  %7 = sub i32 %5, -1494014089
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1494014089
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1210097659, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %90
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1210097659, label %19
    i32 402428332, label %39
    i32 -1902810978, label %77
    i32 1108358343, label %79
  ]

; <label>:18:                                     ; preds = %16
  br label %90

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 402428332, i32 1108358343
  store i32 %38, i32* %15
  br label %90

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %41 = alloca %"class.std::vector.0"*, align 8
  %42 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %41, align 8
  %43 = load %"class.std::vector.0"*, %"class.std::vector.0"** %41, align 8
  %44 = bitcast %"class.std::vector.0"* %43 to %"struct.std::_Vector_base.1"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %45, i32 0, i32 1
  %47 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %46, align 8
  store %"class.std::unordered_map"* %47, %"class.std::unordered_map"** %42, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEC2ERKSC_(%"class.__gnu_cxx::__normal_iterator.18"* %40, %"class.std::unordered_map"** dereferenceable(8) %42) #3
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %40, i32 0, i32 0
  %49 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %48, align 8
  store %"class.std::unordered_map"* %49, %"class.std::unordered_map"** %2
  %50 = load i32, i32* @x.271
  %51 = load i32, i32* @y.272
  %52 = sub i32 %50, 1217542423
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 1217542423
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -1902810978, i32 1108358343
  store i32 %76, i32* %15
  br label %90

; <label>:77:                                     ; preds = %16
  %78 = load volatile %"class.std::unordered_map"*, %"class.std::unordered_map"** %2
  ret %"class.std::unordered_map"* %78

; <label>:79:                                     ; preds = %16
  %80 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %81 = alloca %"class.std::vector.0"*, align 8
  %82 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %81, align 8
  %83 = load %"class.std::vector.0"*, %"class.std::vector.0"** %81, align 8
  %84 = bitcast %"class.std::vector.0"* %83 to %"struct.std::_Vector_base.1"*
  %85 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %84, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %85, i32 0, i32 1
  %87 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %86, align 8
  store %"class.std::unordered_map"* %87, %"class.std::unordered_map"** %82, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEC2ERKSC_(%"class.__gnu_cxx::__normal_iterator.18"* %80, %"class.std::unordered_map"** dereferenceable(8) %82) #3
  %88 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %80, i32 0, i32 0
  %89 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %88, align 8
  store i32 402428332, i32* %15
  br label %90

; <label>:90:                                     ; preds = %79, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEESB_EvT_SH_RSaIT0_E(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %4, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %5, i32 0, i32 0
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %10, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %7, i32 0, i32 0
  %16 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %15, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %8, i32 0, i32 0
  %18 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %17, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEEvT_SH_(%"class.std::unordered_map"* %16, %"class.std::unordered_map"* %18)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEENS1_IPSB_SG_EEET0_T_SL_SK_(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %5, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %6, i32 0, i32 0
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %7, i32 0, i32 0
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %15, align 8
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %9 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %9, i32 0, i32 0
  %19 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %18, align 8
  %20 = call %"class.std::unordered_map"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEENSt11_Miter_baseIT_E13iterator_typeESJ_(%"class.std::unordered_map"* %19)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %8, i32 0, i32 0
  store %"class.std::unordered_map"* %20, %"class.std::unordered_map"** %21, align 8
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %11 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %11, i32 0, i32 0
  %25 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %24, align 8
  %26 = call %"class.std::unordered_map"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEENSt11_Miter_baseIT_E13iterator_typeESJ_(%"class.std::unordered_map"* %25)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %10, i32 0, i32 0
  store %"class.std::unordered_map"* %26, %"class.std::unordered_map"** %27, align 8
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %12 to i8*
  %29 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 8, i1 false)
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %8, i32 0, i32 0
  %31 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %30, align 8
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %10, i32 0, i32 0
  %33 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %32, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %12, i32 0, i32 0
  %35 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %34, align 8
  %36 = call %"class.std::unordered_map"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEENS1_IPSB_SG_EEET1_T0_SL_SK_(%"class.std::unordered_map"* %31, %"class.std::unordered_map"* %33, %"class.std::unordered_map"* %35)
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %4, i32 0, i32 0
  store %"class.std::unordered_map"* %36, %"class.std::unordered_map"** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %4, i32 0, i32 0
  %39 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %38, align 8
  ret %"class.std::unordered_map"* %39
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE5beginEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %4 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %5 = bitcast %"class.std::vector.0"* %4 to %"struct.std::_Vector_base.1"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEC2ERKSB_(%"class.__gnu_cxx::__normal_iterator.19"* %2, %"class.std::unordered_map"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %2, i32 0, i32 0
  %9 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %8, align 8
  ret %"class.std::unordered_map"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE3endEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %4 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %5 = bitcast %"class.std::vector.0"* %4 to %"struct.std::_Vector_base.1"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEC2ERKSB_(%"class.__gnu_cxx::__normal_iterator.19"* %2, %"class.std::unordered_map"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %2, i32 0, i32 0
  %9 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %8, align 8
  ret %"class.std::unordered_map"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt4copyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_ET0_T_SC_SB_(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat {
  %4 = alloca %"class.std::unordered_map"*, align 8
  %5 = alloca %"class.std::unordered_map"*, align 8
  %6 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %4, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %5, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %6, align 8
  %7 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %8 = call %"class.std::unordered_map"* @_ZSt12__miter_baseIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEENSt11_Miter_baseIT_E13iterator_typeESC_(%"class.std::unordered_map"* %7)
  %9 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %5, align 8
  %10 = call %"class.std::unordered_map"* @_ZSt12__miter_baseIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEENSt11_Miter_baseIT_E13iterator_typeESC_(%"class.std::unordered_map"* %9)
  %11 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  %12 = call %"class.std::unordered_map"* @_ZSt14__copy_move_a2ILb0EPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_ET1_T0_SC_SB_(%"class.std::unordered_map"* %8, %"class.std::unordered_map"* %10, %"class.std::unordered_map"* %11)
  ret %"class.std::unordered_map"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt22__uninitialized_copy_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_S9_ET0_T_SC_SB_RSaIT1_E(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::unordered_map"*, align 8
  %6 = alloca %"class.std::unordered_map"*, align 8
  %7 = alloca %"class.std::unordered_map"*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %5, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %6, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %9 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %5, align 8
  %10 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  %11 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  %12 = call %"class.std::unordered_map"* @_ZSt18uninitialized_copyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_ET0_T_SC_SB_(%"class.std::unordered_map"* %9, %"class.std::unordered_map"* %10, %"class.std::unordered_map"* %11)
  ret %"class.std::unordered_map"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE11_M_allocateEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"struct.std::_Vector_base.1"*
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.285
  %9 = load i32, i32* @y.286
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -155305336, i32* %17
  %18 = alloca %"class.std::unordered_map"*
  br label %19

; <label>:19:                                     ; preds = %2, %95
  %20 = load i32, i32* %17
  switch i32 %20, label %21 [
    i32 -155305336, label %22
    i32 -1255518702, label %42
    i32 1858621664, label %76
    i32 656063144, label %79
    i32 445363880, label %86
    i32 -855821339, label %87
    i32 -1671193548, label %89
  ]

; <label>:21:                                     ; preds = %19
  br label %95

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -1255518702, i32 -1671193548
  store i32 %41, i32* %17
  br label %95

; <label>:42:                                     ; preds = %19
  %43 = alloca %"struct.std::_Vector_base.1"*, align 8
  %44 = alloca i64, align 8
  store i64* %44, i64** %5
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %43, align 8
  %45 = load volatile i64*, i64** %5
  store i64 %1, i64* %45, align 8
  %46 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %43, align 8
  store %"struct.std::_Vector_base.1"* %46, %"struct.std::_Vector_base.1"** %4
  %47 = load volatile i64*, i64** %5
  %48 = load i64, i64* %47, align 8
  %49 = icmp ne i64 %48, 0
  store i1 %49, i1* %3
  %50 = load i32, i32* @x.285
  %51 = load i32, i32* @y.286
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 1858621664, i32 -1671193548
  store i32 %75, i32* %17
  br label %95

; <label>:76:                                     ; preds = %19
  %77 = load volatile i1, i1* %3
  %78 = select i1 %77, i32 656063144, i32 445363880
  store i32 %78, i32* %17
  br label %95

; <label>:79:                                     ; preds = %19
  %80 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %4
  %81 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %80, i32 0, i32 0
  %82 = bitcast %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %81 to %"class.std::allocator.2"*
  %83 = load volatile i64*, i64** %5
  %84 = load i64, i64* %83, align 8
  %85 = call %"class.std::unordered_map"* @_ZNSt16allocator_traitsISaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEE8allocateERSA_m(%"class.std::allocator.2"* dereferenceable(1) %82, i64 %84)
  store i32 -855821339, i32* %17
  store %"class.std::unordered_map"* %85, %"class.std::unordered_map"** %18
  br label %95

; <label>:86:                                     ; preds = %19
  store i32 -855821339, i32* %17
  store %"class.std::unordered_map"* null, %"class.std::unordered_map"** %18
  br label %95

; <label>:87:                                     ; preds = %19
  %88 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %18
  ret %"class.std::unordered_map"* %88

; <label>:89:                                     ; preds = %19
  %90 = alloca %"struct.std::_Vector_base.1"*, align 8
  %91 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %90, align 8
  store i64 %1, i64* %91, align 8
  %92 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %90, align 8
  %93 = load i64, i64* %91, align 8
  %94 = icmp ne i64 %93, 0
  store i32 -1255518702, i32* %17
  br label %95

; <label>:95:                                     ; preds = %89, %86, %79, %76, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEPSB_SB_ET0_T_SK_SJ_RSaIT1_E(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %7 = alloca %"class.std::unordered_map"*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %5, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %6, i32 0, i32 0
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %12, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %9 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %10 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %9, i32 0, i32 0
  %19 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %18, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %10, i32 0, i32 0
  %21 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %20, align 8
  %22 = call %"class.std::unordered_map"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEPSB_ET0_T_SK_SJ_(%"class.std::unordered_map"* %19, %"class.std::unordered_map"* %21, %"class.std::unordered_map"* %17)
  ret %"class.std::unordered_map"* %22
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNSt16allocator_traitsISaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEE8allocateERSA_m(%"class.std::allocator.2"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::unordered_map"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.289
  %7 = load i32, i32* @y.290
  %8 = sub i32 %6, -307465734
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -307465734
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1120068158, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %59
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1120068158, label %20
    i32 -1006311636, label %28
    i32 -711210422, label %50
    i32 -28779469, label %52
  ]

; <label>:19:                                     ; preds = %17
  br label %59

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1006311636, i32 -28779469
  store i32 %27, i32* %16
  br label %59

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.2"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %29, align 8
  %32 = bitcast %"class.std::allocator.2"* %31 to %"class.__gnu_cxx::new_allocator.3"*
  %33 = load i64, i64* %30, align 8
  %34 = call %"class.std::unordered_map"* @_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"* %32, i64 %33, i8* null)
  store %"class.std::unordered_map"* %34, %"class.std::unordered_map"** %3
  %35 = load i32, i32* @x.289
  %36 = load i32, i32* @y.290
  %37 = add i32 %35, 1034373649
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 1034373649
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -711210422, i32 -28779469
  store i32 %49, i32* %16
  br label %59

; <label>:50:                                     ; preds = %17
  %51 = load volatile %"class.std::unordered_map"*, %"class.std::unordered_map"** %3
  ret %"class.std::unordered_map"* %51

; <label>:52:                                     ; preds = %17
  %53 = alloca %"class.std::allocator.2"*, align 8
  %54 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %53, align 8
  store i64 %1, i64* %54, align 8
  %55 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %53, align 8
  %56 = bitcast %"class.std::allocator.2"* %55 to %"class.__gnu_cxx::new_allocator.3"*
  %57 = load i64, i64* %54, align 8
  %58 = call %"class.std::unordered_map"* @_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"* %56, i64 %57, i8* null)
  store i32 -1006311636, i32* %16
  br label %59

; <label>:59:                                     ; preds = %52, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -909917478, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %60
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -909917478, label %16
    i32 2137045203, label %21
    i32 627182137, label %37
    i32 -1208094028, label %53
    i32 -526761807, label %54
    i32 -1491419388, label %59
  ]

; <label>:15:                                     ; preds = %13
  br label %60

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 2137045203, i32 -526761807
  store i32 %20, i32* %12
  br label %60

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.291
  %23 = load i32, i32* @y.292
  %24 = add i32 %22, -1206639659
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, -1206639659
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 627182137, i32 -1491419388
  store i32 %36, i32* %12
  br label %60

; <label>:37:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  %38 = load i32, i32* @x.291
  %39 = load i32, i32* @y.292
  %40 = add i32 %38, -1782165236
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -1782165236
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -1208094028, i32 -1491419388
  store i32 %52, i32* %12
  br label %60

; <label>:53:                                     ; preds = %13
  unreachable

; <label>:54:                                     ; preds = %13
  %55 = load i64, i64* %7, align 8
  %56 = mul i64 %55, 56
  %57 = call i8* @_Znwm(i64 %56)
  %58 = bitcast i8* %57 to %"class.std::unordered_map"*
  ret %"class.std::unordered_map"* %58

; <label>:59:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 627182137, i32* %12
  br label %60

; <label>:60:                                     ; preds = %59, %37, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret i64 329406144173384850
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEPSB_ET0_T_SK_SJ_(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat {
  %4 = alloca %"class.std::unordered_map"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.295
  %8 = load i32, i32* @y.296
  %9 = add i32 %7, 1300183826
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 1300183826
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1151452225, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %108
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1151452225, label %21
    i32 1320483284, label %41
    i32 1565159517, label %87
    i32 699172533, label %89
  ]

; <label>:20:                                     ; preds = %18
  br label %108

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1320483284, i32 699172533
  store i32 %40, i32* %17
  br label %108

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %44 = alloca %"class.std::unordered_map"*, align 8
  %45 = alloca i8, align 1
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %42, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %48, align 8
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %43, i32 0, i32 0
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %49, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %44, align 8
  store i8 1, i8* %45, align 1
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %46 to i8*
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %47 to i8*
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %44, align 8
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %46, i32 0, i32 0
  %56 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %55, align 8
  %57 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %47, i32 0, i32 0
  %58 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %57, align 8
  %59 = call %"class.std::unordered_map"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISD_SaISD_EEEEPSD_EET0_T_SM_SL_(%"class.std::unordered_map"* %56, %"class.std::unordered_map"* %58, %"class.std::unordered_map"* %54)
  store %"class.std::unordered_map"* %59, %"class.std::unordered_map"** %4
  %60 = load i32, i32* @x.295
  %61 = load i32, i32* @y.296
  %62 = sub i32 %60, 1261652036
  %63 = sub i32 %62, 1
  %64 = add i32 %63, 1261652036
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 true, true
  %73 = and i1 %70, true
  %74 = and i1 %68, %72
  %75 = and i1 %71, true
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 true, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  %86 = select i1 %84, i32 1565159517, i32 699172533
  store i32 %86, i32* %17
  br label %108

; <label>:87:                                     ; preds = %18
  %88 = load volatile %"class.std::unordered_map"*, %"class.std::unordered_map"** %4
  ret %"class.std::unordered_map"* %88

; <label>:89:                                     ; preds = %18
  %90 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %91 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %92 = alloca %"class.std::unordered_map"*, align 8
  %93 = alloca i8, align 1
  %94 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %95 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %96 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %90, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %96, align 8
  %97 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %91, i32 0, i32 0
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %97, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %92, align 8
  store i8 1, i8* %93, align 1
  %98 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %94 to i8*
  %99 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %98, i8* %99, i64 8, i32 8, i1 false)
  %100 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %95 to i8*
  %101 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %100, i8* %101, i64 8, i32 8, i1 false)
  %102 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %92, align 8
  %103 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %94, i32 0, i32 0
  %104 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %103, align 8
  %105 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %95, i32 0, i32 0
  %106 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %105, align 8
  %107 = call %"class.std::unordered_map"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISD_SaISD_EEEEPSD_EET0_T_SM_SL_(%"class.std::unordered_map"* %104, %"class.std::unordered_map"* %106, %"class.std::unordered_map"* %102)
  store i32 1320483284, i32* %17
  br label %108

; <label>:108:                                    ; preds = %89, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISD_SaISD_EEEEPSD_EET0_T_SM_SL_(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.297
  %5 = load i32, i32* @y.298
  %6 = sub i32 %4, -994409218
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -994409218
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %287

; <label>:18:                                     ; preds = %3, %287
  %19 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %20 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %21 = alloca %"class.std::unordered_map"*, align 8
  %22 = alloca %"class.std::unordered_map"*, align 8
  %23 = alloca i8*
  %24 = alloca i32
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %19, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %25, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %20, i32 0, i32 0
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %26, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %21, align 8
  %27 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %21, align 8
  store %"class.std::unordered_map"* %27, %"class.std::unordered_map"** %22, align 8
  %28 = load i32, i32* @x.297
  %29 = load i32, i32* @y.298
  %30 = sub i32 %28, 195569366
  %31 = sub i32 %30, 1
  %32 = add i32 %31, 195569366
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  br i1 %52, label %54, label %287

; <label>:54:                                     ; preds = %18
  br label %55

; <label>:55:                                     ; preds = %103, %54
  %56 = call zeroext i1 @_ZN9__gnu_cxxneIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEEbRKNS_17__normal_iteratorIT_T0_EESL_(%"class.__gnu_cxx::__normal_iterator.18"* dereferenceable(8) %19, %"class.__gnu_cxx::__normal_iterator.18"* dereferenceable(8) %20) #3
  br i1 %56, label %57, label %187

; <label>:57:                                     ; preds = %55
  %58 = load i32, i32* @x.297
  %59 = load i32, i32* @y.298
  %60 = sub i32 0, 1
  %61 = add i32 %58, %60
  %62 = sub i32 %58, 1
  %63 = mul i32 %58, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %59, 10
  %67 = xor i1 %65, true
  %68 = xor i1 %66, true
  %69 = xor i1 false, true
  %70 = and i1 %67, false
  %71 = and i1 %65, %69
  %72 = and i1 %68, false
  %73 = and i1 %66, %69
  %74 = or i1 %70, %71
  %75 = or i1 %72, %73
  %76 = xor i1 %74, %75
  %77 = or i1 %67, %68
  %78 = xor i1 %77, true
  %79 = or i1 false, %69
  %80 = and i1 %78, %79
  %81 = or i1 %76, %80
  %82 = or i1 %65, %66
  br i1 %81, label %83, label %297

; <label>:83:                                     ; preds = %57, %297
  %84 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %22, align 8
  %85 = call %"class.std::unordered_map"* @_ZSt11__addressofISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEPT_RSA_(%"class.std::unordered_map"* dereferenceable(56) %84) #3
  %86 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNK9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.18"* %19) #3
  %87 = load i32, i32* @x.297
  %88 = load i32, i32* @y.298
  %89 = add i32 %87, -160372727
  %90 = sub i32 %89, 1
  %91 = sub i32 %90, -160372727
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = and i1 %95, %96
  %98 = xor i1 %95, %96
  %99 = or i1 %97, %98
  %100 = or i1 %95, %96
  br i1 %99, label %101, label %297

; <label>:101:                                    ; preds = %83
  invoke void @_ZSt10_ConstructISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEJRKS9_EEvPT_DpOT0_(%"class.std::unordered_map"* %85, %"class.std::unordered_map"* dereferenceable(56) %86)
          to label %102 unwind label %107

; <label>:102:                                    ; preds = %101
  br label %103

; <label>:103:                                    ; preds = %102
  %104 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.18"* @_ZN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEppEv(%"class.__gnu_cxx::__normal_iterator.18"* %19) #3
  %105 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %22, align 8
  %106 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %105, i32 1
  store %"class.std::unordered_map"* %106, %"class.std::unordered_map"** %22, align 8
  br label %55

; <label>:107:                                    ; preds = %101
  %108 = landingpad { i8*, i32 }
          catch i8* null
  %109 = extractvalue { i8*, i32 } %108, 0
  store i8* %109, i8** %23, align 8
  %110 = extractvalue { i8*, i32 } %108, 1
  store i32 %110, i32* %24, align 4
  br label %111

; <label>:111:                                    ; preds = %107
  %112 = load i32, i32* @x.297
  %113 = load i32, i32* @y.298
  %114 = sub i32 %112, -2062482773
  %115 = sub i32 %114, 1
  %116 = add i32 %115, -2062482773
  %117 = sub i32 %112, 1
  %118 = mul i32 %112, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %113, 10
  %122 = and i1 %120, %121
  %123 = xor i1 %120, %121
  %124 = or i1 %122, %123
  %125 = or i1 %120, %121
  br i1 %124, label %126, label %301

; <label>:126:                                    ; preds = %111, %301
  %127 = load i8*, i8** %23, align 8
  %128 = call i8* @__cxa_begin_catch(i8* %127) #3
  %129 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %21, align 8
  %130 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %22, align 8
  %131 = load i32, i32* @x.297
  %132 = load i32, i32* @y.298
  %133 = sub i32 0, 1
  %134 = add i32 %131, %133
  %135 = sub i32 %131, 1
  %136 = mul i32 %131, %134
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %132, 10
  %140 = xor i1 %138, true
  %141 = xor i1 %139, true
  %142 = xor i1 true, true
  %143 = and i1 %140, true
  %144 = and i1 %138, %142
  %145 = and i1 %141, true
  %146 = and i1 %139, %142
  %147 = or i1 %143, %144
  %148 = or i1 %145, %146
  %149 = xor i1 %147, %148
  %150 = or i1 %140, %141
  %151 = xor i1 %150, true
  %152 = or i1 true, %142
  %153 = and i1 %151, %152
  %154 = or i1 %149, %153
  %155 = or i1 %138, %139
  br i1 %154, label %156, label %301

; <label>:156:                                    ; preds = %126
  invoke void @_ZSt8_DestroyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvT_SB_(%"class.std::unordered_map"* %129, %"class.std::unordered_map"* %130)
          to label %157 unwind label %230

; <label>:157:                                    ; preds = %156
  %158 = load i32, i32* @x.297
  %159 = load i32, i32* @y.298
  %160 = sub i32 0, 1
  %161 = add i32 %158, %160
  %162 = sub i32 %158, 1
  %163 = mul i32 %158, %161
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %159, 10
  %167 = and i1 %165, %166
  %168 = xor i1 %165, %166
  %169 = or i1 %167, %168
  %170 = or i1 %165, %166
  br i1 %169, label %171, label %306

; <label>:171:                                    ; preds = %157, %306
  %172 = load i32, i32* @x.297
  %173 = load i32, i32* @y.298
  %174 = sub i32 %172, -946001639
  %175 = sub i32 %174, 1
  %176 = add i32 %175, -946001639
  %177 = sub i32 %172, 1
  %178 = mul i32 %172, %176
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %173, 10
  %182 = and i1 %180, %181
  %183 = xor i1 %180, %181
  %184 = or i1 %182, %183
  %185 = or i1 %180, %181
  br i1 %184, label %186, label %306

; <label>:186:                                    ; preds = %171
  invoke void @__cxa_rethrow() #12
          to label %286 unwind label %230

; <label>:187:                                    ; preds = %55
  %188 = load i32, i32* @x.297
  %189 = load i32, i32* @y.298
  %190 = sub i32 0, 1
  %191 = add i32 %188, %190
  %192 = sub i32 %188, 1
  %193 = mul i32 %188, %191
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %189, 10
  %197 = xor i1 %195, true
  %198 = xor i1 %196, true
  %199 = xor i1 true, true
  %200 = and i1 %197, true
  %201 = and i1 %195, %199
  %202 = and i1 %198, true
  %203 = and i1 %196, %199
  %204 = or i1 %200, %201
  %205 = or i1 %202, %203
  %206 = xor i1 %204, %205
  %207 = or i1 %197, %198
  %208 = xor i1 %207, true
  %209 = or i1 true, %199
  %210 = and i1 %208, %209
  %211 = or i1 %206, %210
  %212 = or i1 %195, %196
  br i1 %211, label %213, label %307

; <label>:213:                                    ; preds = %187, %307
  %214 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %22, align 8
  %215 = load i32, i32* @x.297
  %216 = load i32, i32* @y.298
  %217 = add i32 %215, 1963832850
  %218 = sub i32 %217, 1
  %219 = sub i32 %218, 1963832850
  %220 = sub i32 %215, 1
  %221 = mul i32 %215, %219
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %216, 10
  %225 = and i1 %223, %224
  %226 = xor i1 %223, %224
  %227 = or i1 %225, %226
  %228 = or i1 %223, %224
  br i1 %227, label %229, label %307

; <label>:229:                                    ; preds = %213
  ret %"class.std::unordered_map"* %214

; <label>:230:                                    ; preds = %186, %156
  %231 = landingpad { i8*, i32 }
          cleanup
  %232 = extractvalue { i8*, i32 } %231, 0
  store i8* %232, i8** %23, align 8
  %233 = extractvalue { i8*, i32 } %231, 1
  store i32 %233, i32* %24, align 4
  invoke void @__cxa_end_catch()
          to label %234 unwind label %283

; <label>:234:                                    ; preds = %230
  br label %278
                                                  ; No predecessors!
  %236 = load i32, i32* @x.297
  %237 = load i32, i32* @y.298
  %238 = add i32 %236, -1042261543
  %239 = sub i32 %238, 1
  %240 = sub i32 %239, -1042261543
  %241 = sub i32 %236, 1
  %242 = mul i32 %236, %240
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %237, 10
  %246 = xor i1 %244, true
  %247 = xor i1 %245, true
  %248 = xor i1 false, true
  %249 = and i1 %246, false
  %250 = and i1 %244, %248
  %251 = and i1 %247, false
  %252 = and i1 %245, %248
  %253 = or i1 %249, %250
  %254 = or i1 %251, %252
  %255 = xor i1 %253, %254
  %256 = or i1 %246, %247
  %257 = xor i1 %256, true
  %258 = or i1 false, %248
  %259 = and i1 %257, %258
  %260 = or i1 %255, %259
  %261 = or i1 %244, %245
  br i1 %260, label %262, label %309

; <label>:262:                                    ; preds = %235, %309
  call void @llvm.trap()
  %263 = load i32, i32* @x.297
  %264 = load i32, i32* @y.298
  %265 = sub i32 %263, -2088829348
  %266 = sub i32 %265, 1
  %267 = add i32 %266, -2088829348
  %268 = sub i32 %263, 1
  %269 = mul i32 %263, %267
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %264, 10
  %273 = and i1 %271, %272
  %274 = xor i1 %271, %272
  %275 = or i1 %273, %274
  %276 = or i1 %271, %272
  br i1 %275, label %277, label %309

; <label>:277:                                    ; preds = %262
  unreachable

; <label>:278:                                    ; preds = %234
  %279 = load i8*, i8** %23, align 8
  %280 = load i32, i32* %24, align 4
  %281 = insertvalue { i8*, i32 } undef, i8* %279, 0
  %282 = insertvalue { i8*, i32 } %281, i32 %280, 1
  resume { i8*, i32 } %282

; <label>:283:                                    ; preds = %230
  %284 = landingpad { i8*, i32 }
          catch i8* null
  %285 = extractvalue { i8*, i32 } %284, 0
  call void @__clang_call_terminate(i8* %285) #11
  unreachable

; <label>:286:                                    ; preds = %186
  unreachable

; <label>:287:                                    ; preds = %18, %3
  %288 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %289 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %290 = alloca %"class.std::unordered_map"*, align 8
  %291 = alloca %"class.std::unordered_map"*, align 8
  %292 = alloca i8*
  %293 = alloca i32
  %294 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %288, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %294, align 8
  %295 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %289, i32 0, i32 0
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %295, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %290, align 8
  %296 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %290, align 8
  store %"class.std::unordered_map"* %296, %"class.std::unordered_map"** %291, align 8
  br label %18

; <label>:297:                                    ; preds = %83, %57
  %298 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %22, align 8
  %299 = call %"class.std::unordered_map"* @_ZSt11__addressofISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEPT_RSA_(%"class.std::unordered_map"* dereferenceable(56) %298) #3
  %300 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNK9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.18"* %19) #3
  br label %83

; <label>:301:                                    ; preds = %126, %111
  %302 = load i8*, i8** %23, align 8
  %303 = call i8* @__cxa_begin_catch(i8* %302) #3
  %304 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %21, align 8
  %305 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %22, align 8
  br label %126

; <label>:306:                                    ; preds = %171, %157
  br label %171

; <label>:307:                                    ; preds = %213, %187
  %308 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %22, align 8
  br label %213

; <label>:309:                                    ; preds = %262, %235
  call void @llvm.trap()
  br label %262
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEEbRKNS_17__normal_iteratorIT_T0_EESL_(%"class.__gnu_cxx::__normal_iterator.18"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.18"* dereferenceable(8)) #4 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.18"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.18"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.18"* %0, %"class.__gnu_cxx::__normal_iterator.18"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.18"* %1, %"class.__gnu_cxx::__normal_iterator.18"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.18"*, %"class.__gnu_cxx::__normal_iterator.18"** %3, align 8
  %6 = call dereferenceable(8) %"class.std::unordered_map"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.18"* %5) #3
  %7 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.18"*, %"class.__gnu_cxx::__normal_iterator.18"** %4, align 8
  %9 = call dereferenceable(8) %"class.std::unordered_map"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.18"* %8) #3
  %10 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %9, align 8
  %11 = icmp ne %"class.std::unordered_map"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEJRKS9_EEvPT_DpOT0_(%"class.std::unordered_map"*, %"class.std::unordered_map"* dereferenceable(56)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.301
  %6 = load i32, i32* @y.302
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -2010687167, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %69
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2010687167, label %18
    i32 -913009072, label %38
    i32 1600710507, label %60
    i32 -1154180588, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %69

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -913009072, i32 -1154180588
  store i32 %37, i32* %14
  br label %69

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::unordered_map"*, align 8
  %40 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %39, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %40, align 8
  %41 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %39, align 8
  %42 = bitcast %"class.std::unordered_map"* %41 to i8*
  %43 = bitcast i8* %42 to %"class.std::unordered_map"*
  %44 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %40, align 8
  %45 = call dereferenceable(56) %"class.std::unordered_map"* @_ZSt7forwardIRKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEOT_RNSt16remove_referenceISC_E4typeE(%"class.std::unordered_map"* dereferenceable(56) %44) #3
  call void @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEC2ERKS8_(%"class.std::unordered_map"* %43, %"class.std::unordered_map"* dereferenceable(56) %45)
  %46 = load i32, i32* @x.301
  %47 = load i32, i32* @y.302
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 1600710507, i32 -1154180588
  store i32 %59, i32* %14
  br label %69

; <label>:60:                                     ; preds = %15
  ret void

; <label>:61:                                     ; preds = %15
  %62 = alloca %"class.std::unordered_map"*, align 8
  %63 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %62, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %63, align 8
  %64 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %62, align 8
  %65 = bitcast %"class.std::unordered_map"* %64 to i8*
  %66 = bitcast i8* %65 to %"class.std::unordered_map"*
  %67 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %63, align 8
  %68 = call dereferenceable(56) %"class.std::unordered_map"* @_ZSt7forwardIRKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEOT_RNSt16remove_referenceISC_E4typeE(%"class.std::unordered_map"* dereferenceable(56) %67) #3
  call void @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEC2ERKS8_(%"class.std::unordered_map"* %66, %"class.std::unordered_map"* dereferenceable(56) %68)
  store i32 -913009072, i32* %14
  br label %69

; <label>:69:                                     ; preds = %61, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(56) %"class.std::unordered_map"* @_ZNK9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.18"*) #4 comdat align 2 {
  %2 = alloca %"class.std::unordered_map"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.303
  %6 = load i32, i32* @y.304
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 603116118, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %53
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 603116118, label %18
    i32 -1221262864, label %26
    i32 1568269277, label %46
    i32 -470140092, label %48
  ]

; <label>:17:                                     ; preds = %15
  br label %53

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1221262864, i32 -470140092
  store i32 %25, i32* %14
  br label %53

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.18"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.18"* %0, %"class.__gnu_cxx::__normal_iterator.18"** %27, align 8
  %28 = load %"class.__gnu_cxx::__normal_iterator.18"*, %"class.__gnu_cxx::__normal_iterator.18"** %27, align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %28, i32 0, i32 0
  %30 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %29, align 8
  store %"class.std::unordered_map"* %30, %"class.std::unordered_map"** %2
  %31 = load i32, i32* @x.303
  %32 = load i32, i32* @y.304
  %33 = add i32 %31, 242193977
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 242193977
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 1568269277, i32 -470140092
  store i32 %45, i32* %14
  br label %53

; <label>:46:                                     ; preds = %15
  %47 = load volatile %"class.std::unordered_map"*, %"class.std::unordered_map"** %2
  ret %"class.std::unordered_map"* %47

; <label>:48:                                     ; preds = %15
  %49 = alloca %"class.__gnu_cxx::__normal_iterator.18"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.18"* %0, %"class.__gnu_cxx::__normal_iterator.18"** %49, align 8
  %50 = load %"class.__gnu_cxx::__normal_iterator.18"*, %"class.__gnu_cxx::__normal_iterator.18"** %49, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %50, i32 0, i32 0
  %52 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %51, align 8
  store i32 -1221262864, i32* %14
  br label %53

; <label>:53:                                     ; preds = %48, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.18"* @_ZN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEppEv(%"class.__gnu_cxx::__normal_iterator.18"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.18"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.305
  %6 = load i32, i32* @y.306
  %7 = add i32 %5, 1312210726
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1312210726
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 260980062, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 260980062, label %19
    i32 -1430215440, label %27
    i32 -1759257520, label %61
    i32 -1935144285, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1430215440, i32 -1935144285
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.18"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.18"* %0, %"class.__gnu_cxx::__normal_iterator.18"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator.18"*, %"class.__gnu_cxx::__normal_iterator.18"** %28, align 8
  store %"class.__gnu_cxx::__normal_iterator.18"* %29, %"class.__gnu_cxx::__normal_iterator.18"** %2
  %30 = load volatile %"class.__gnu_cxx::__normal_iterator.18"*, %"class.__gnu_cxx::__normal_iterator.18"** %2
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %30, i32 0, i32 0
  %32 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %31, align 8
  %33 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %32, i32 1
  store %"class.std::unordered_map"* %33, %"class.std::unordered_map"** %31, align 8
  %34 = load i32, i32* @x.305
  %35 = load i32, i32* @y.306
  %36 = sub i32 %34, -1648830903
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -1648830903
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -1759257520, i32 -1935144285
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  %62 = load volatile %"class.__gnu_cxx::__normal_iterator.18"*, %"class.__gnu_cxx::__normal_iterator.18"** %2
  ret %"class.__gnu_cxx::__normal_iterator.18"* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.__gnu_cxx::__normal_iterator.18"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.18"* %0, %"class.__gnu_cxx::__normal_iterator.18"** %64, align 8
  %65 = load %"class.__gnu_cxx::__normal_iterator.18"*, %"class.__gnu_cxx::__normal_iterator.18"** %64, align 8
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %65, i32 0, i32 0
  %67 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %66, align 8
  %68 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %67, i32 1
  store %"class.std::unordered_map"* %68, %"class.std::unordered_map"** %66, align 8
  store i32 -1430215440, i32* %15
  br label %69

; <label>:69:                                     ; preds = %63, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::unordered_map"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.18"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.18"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.18"* %0, %"class.__gnu_cxx::__normal_iterator.18"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.18"*, %"class.__gnu_cxx::__normal_iterator.18"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %3, i32 0, i32 0
  ret %"class.std::unordered_map"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(56) %"class.std::unordered_map"* @_ZSt7forwardIRKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEOT_RNSt16remove_referenceISC_E4typeE(%"class.std::unordered_map"* dereferenceable(56)) #4 comdat {
  %2 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %2, align 8
  %3 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %2, align 8
  ret %"class.std::unordered_map"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEC2ERKS8_(%"class.std::unordered_map"*, %"class.std::unordered_map"* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::unordered_map"*, align 8
  %4 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %3, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %4, align 8
  %5 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %3, align 8
  %6 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %5, i32 0, i32 0
  %7 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %8 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %7, i32 0, i32 0
  call void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEC2ERKSF_(%"class.std::_Hashtable"* %6, %"class.std::_Hashtable"* dereferenceable(56) %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEC2ERKSF_(%"class.std::_Hashtable"*, %"class.std::_Hashtable"* dereferenceable(56)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Hashtable"*, align 8
  %4 = alloca %"class.std::_Hashtable"*, align 8
  %5 = alloca %"class.std::allocator.9", align 1
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %class.anon, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %3, align 8
  store %"class.std::_Hashtable"* %1, %"class.std::_Hashtable"** %4, align 8
  %9 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %3, align 8
  %10 = bitcast %"class.std::_Hashtable"* %9 to %"struct.std::__detail::_Hashtable_base"*
  %11 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4, align 8
  %12 = bitcast %"class.std::_Hashtable"* %11 to %"struct.std::__detail::_Hashtable_base"*
  %13 = bitcast %"class.std::_Hashtable"* %9 to %"struct.std::__detail::_Map_base"*
  %14 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4, align 8
  %15 = bitcast %"class.std::_Hashtable"* %14 to %"struct.std::__detail::_Map_base"*
  %16 = bitcast %"class.std::_Hashtable"* %9 to %"struct.std::__detail::_Insert"*
  %17 = bitcast %"class.std::_Hashtable"* %9 to %"struct.std::__detail::_Rehash_base"*
  %18 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4, align 8
  %19 = bitcast %"class.std::_Hashtable"* %18 to %"struct.std::__detail::_Rehash_base"*
  %20 = bitcast %"class.std::_Hashtable"* %9 to %"struct.std::__detail::_Equality"*
  %21 = bitcast %"class.std::_Hashtable"* %9 to %"struct.std::__detail::_Hashtable_alloc"*
  %22 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4, align 8
  %23 = bitcast %"class.std::_Hashtable"* %22 to %"struct.std::__detail::_Hashtable_alloc"*
  %24 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNKSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %23)
  call void @_ZN9__gnu_cxx14__alloc_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE17_S_select_on_copyERKS7_(%"class.std::allocator.9"* sret %5, %"class.std::allocator.9"* dereferenceable(1) %24)
  invoke void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEEC2IS6_EEOT_(%"struct.std::__detail::_Hashtable_alloc"* %21, %"class.std::allocator.9"* dereferenceable(1) %5)
          to label %25 unwind label %75

; <label>:25:                                     ; preds = %2
  call void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEED2Ev(%"class.std::allocator.9"* %5) #3
  %26 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %9, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"** null, %"struct.std::__detail::_Hash_node_base"*** %26, align 8
  %27 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %9, i32 0, i32 1
  %28 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4, align 8
  %29 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %28, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %27, align 8
  %31 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %9, i32 0, i32 2
  call void @_ZNSt8__detail15_Hash_node_baseC2Ev(%"struct.std::__detail::_Hash_node_base"* %31) #3
  %32 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %9, i32 0, i32 3
  %33 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4, align 8
  %34 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %33, i32 0, i32 3
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %32, align 8
  %36 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %9, i32 0, i32 4
  %37 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4, align 8
  %38 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %37, i32 0, i32 4
  %39 = bitcast %"struct.std::__detail::_Prime_rehash_policy"* %36 to i8*
  %40 = bitcast %"struct.std::__detail::_Prime_rehash_policy"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 16, i32 8, i1 false)
  %41 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %9, i32 0, i32 5
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %41, align 8
  %42 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4, align 8
  %43 = getelementptr inbounds %class.anon, %class.anon* %8, i32 0, i32 0
  store %"class.std::_Hashtable"* %9, %"class.std::_Hashtable"** %43, align 8
  invoke void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_assignIZNSF_C1ERKSF_EUlPKNS4_10_Hash_nodeIS2_Lb0EEEE_EEvSI_RKT_(%"class.std::_Hashtable"* %9, %"class.std::_Hashtable"* dereferenceable(56) %42, %class.anon* dereferenceable(8) %8)
          to label %44 unwind label %79

; <label>:44:                                     ; preds = %25
  %45 = load i32, i32* @x.313
  %46 = load i32, i32* @y.314
  %47 = sub i32 %45, 458630504
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 458630504
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  br i1 %57, label %59, label %142

; <label>:59:                                     ; preds = %44, %142
  %60 = load i32, i32* @x.313
  %61 = load i32, i32* @y.314
  %62 = sub i32 %60, -557754109
  %63 = sub i32 %62, 1
  %64 = add i32 %63, -557754109
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  br i1 %72, label %74, label %142

; <label>:74:                                     ; preds = %59
  ret void

; <label>:75:                                     ; preds = %2
  %76 = landingpad { i8*, i32 }
          cleanup
  %77 = extractvalue { i8*, i32 } %76, 0
  store i8* %77, i8** %6, align 8
  %78 = extractvalue { i8*, i32 } %76, 1
  store i32 %78, i32* %7, align 4
  call void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEED2Ev(%"class.std::allocator.9"* %5) #3
  br label %84

; <label>:79:                                     ; preds = %25
  %80 = landingpad { i8*, i32 }
          cleanup
  %81 = extractvalue { i8*, i32 } %80, 0
  store i8* %81, i8** %6, align 8
  %82 = extractvalue { i8*, i32 } %80, 1
  store i32 %82, i32* %7, align 4
  %83 = bitcast %"class.std::_Hashtable"* %9 to %"struct.std::__detail::_Hashtable_alloc"*
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEED2Ev(%"struct.std::__detail::_Hashtable_alloc"* %83) #3
  br label %84

; <label>:84:                                     ; preds = %79, %75
  %85 = load i32, i32* @x.313
  %86 = load i32, i32* @y.314
  %87 = add i32 %85, 191719912
  %88 = sub i32 %87, 1
  %89 = sub i32 %88, 191719912
  %90 = sub i32 %85, 1
  %91 = mul i32 %85, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %86, 10
  %95 = xor i1 %93, true
  %96 = xor i1 %94, true
  %97 = xor i1 true, true
  %98 = and i1 %95, true
  %99 = and i1 %93, %97
  %100 = and i1 %96, true
  %101 = and i1 %94, %97
  %102 = or i1 %98, %99
  %103 = or i1 %100, %101
  %104 = xor i1 %102, %103
  %105 = or i1 %95, %96
  %106 = xor i1 %105, true
  %107 = or i1 true, %97
  %108 = and i1 %106, %107
  %109 = or i1 %104, %108
  %110 = or i1 %93, %94
  br i1 %109, label %111, label %143

; <label>:111:                                    ; preds = %84, %143
  %112 = load i8*, i8** %6, align 8
  %113 = load i32, i32* %7, align 4
  %114 = insertvalue { i8*, i32 } undef, i8* %112, 0
  %115 = insertvalue { i8*, i32 } %114, i32 %113, 1
  %116 = load i32, i32* @x.313
  %117 = load i32, i32* @y.314
  %118 = sub i32 0, 1
  %119 = add i32 %116, %118
  %120 = sub i32 %116, 1
  %121 = mul i32 %116, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %117, 10
  %125 = xor i1 %123, true
  %126 = xor i1 %124, true
  %127 = xor i1 false, true
  %128 = and i1 %125, false
  %129 = and i1 %123, %127
  %130 = and i1 %126, false
  %131 = and i1 %124, %127
  %132 = or i1 %128, %129
  %133 = or i1 %130, %131
  %134 = xor i1 %132, %133
  %135 = or i1 %125, %126
  %136 = xor i1 %135, true
  %137 = or i1 false, %127
  %138 = and i1 %136, %137
  %139 = or i1 %134, %138
  %140 = or i1 %123, %124
  br i1 %139, label %141, label %143

; <label>:141:                                    ; preds = %111
  resume { i8*, i32 } %115

; <label>:142:                                    ; preds = %59, %44
  br label %59

; <label>:143:                                    ; preds = %111, %84
  %144 = load i8*, i8** %6, align 8
  %145 = load i32, i32* %7, align 4
  %146 = insertvalue { i8*, i32 } undef, i8* %144, 0
  %147 = insertvalue { i8*, i32 } %146, i32 %145, 1
  br label %111
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE17_S_select_on_copyERKS7_(%"class.std::allocator.9"* noalias sret, %"class.std::allocator.9"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %1, %"class.std::allocator.9"** %3, align 8
  %4 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %3, align 8
  call void @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE37select_on_container_copy_constructionERKS6_(%"class.std::allocator.9"* sret %0, %"class.std::allocator.9"* dereferenceable(1) %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.9"* @_ZNKSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"*) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.9"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.317
  %6 = load i32, i32* @y.318
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 589061621, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %52
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 589061621, label %18
    i32 -433153864, label %26
    i32 510134382, label %45
    i32 933027289, label %47
  ]

; <label>:17:                                     ; preds = %15
  br label %52

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -433153864, i32 933027289
  store i32 %25, i32* %14
  br label %52

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %27, align 8
  %28 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %27, align 8
  %29 = bitcast %"struct.std::__detail::_Hashtable_alloc"* %28 to %"struct.std::__detail::_Hashtable_ebo_helper.8"*
  %30 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EE7_S_cgetERKS7_(%"struct.std::__detail::_Hashtable_ebo_helper.8"* dereferenceable(1) %29)
  store %"class.std::allocator.9"* %30, %"class.std::allocator.9"** %2
  %31 = load i32, i32* @x.317
  %32 = load i32, i32* @y.318
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 510134382, i32 933027289
  store i32 %44, i32* %14
  br label %52

; <label>:45:                                     ; preds = %15
  %46 = load volatile %"class.std::allocator.9"*, %"class.std::allocator.9"** %2
  ret %"class.std::allocator.9"* %46

; <label>:47:                                     ; preds = %15
  %48 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %48, align 8
  %49 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %48, align 8
  %50 = bitcast %"struct.std::__detail::_Hashtable_alloc"* %49 to %"struct.std::__detail::_Hashtable_ebo_helper.8"*
  %51 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EE7_S_cgetERKS7_(%"struct.std::__detail::_Hashtable_ebo_helper.8"* dereferenceable(1) %50)
  store i32 -433153864, i32* %14
  br label %52

; <label>:52:                                     ; preds = %47, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEEC2IS6_EEOT_(%"struct.std::__detail::_Hashtable_alloc"*, %"class.std::allocator.9"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  %4 = alloca %"class.std::allocator.9"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %3, align 8
  store %"class.std::allocator.9"* %1, %"class.std::allocator.9"** %4, align 8
  %5 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %3, align 8
  %6 = bitcast %"struct.std::__detail::_Hashtable_alloc"* %5 to %"struct.std::__detail::_Hashtable_ebo_helper.8"*
  %7 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.9"* @_ZSt7forwardISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEEOT_RNSt16remove_referenceIS7_E4typeE(%"class.std::allocator.9"* dereferenceable(1) %7) #3
  call void @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EEC2IS6_EEOT_(%"struct.std::__detail::_Hashtable_ebo_helper.8"* %6, %"class.std::allocator.9"* dereferenceable(1) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEED2Ev(%"class.std::allocator.9"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %2, align 8
  %3 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %2, align 8
  %4 = bitcast %"class.std::allocator.9"* %3 to %"class.__gnu_cxx::new_allocator.10"*
  call void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEED2Ev(%"class.__gnu_cxx::new_allocator.10"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_assignIZNSF_C1ERKSF_EUlPKNS4_10_Hash_nodeIS2_Lb0EEEE_EEvSI_RKT_(%"class.std::_Hashtable"*, %"class.std::_Hashtable"* dereferenceable(56), %class.anon* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Hashtable"*, align 8
  %5 = alloca %"class.std::_Hashtable"*, align 8
  %6 = alloca %class.anon*, align 8
  %7 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %8 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  %11 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %12 = alloca %"struct.std::__detail::_Hash_node_base"*, align 8
  %13 = alloca i64, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %4, align 8
  store %"class.std::_Hashtable"* %1, %"class.std::_Hashtable"** %5, align 8
  store %class.anon* %2, %class.anon** %6, align 8
  %14 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4, align 8
  store %"struct.std::__detail::_Hash_node_base"** null, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  %15 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 0
  %16 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %15, align 8
  %17 = icmp ne %"struct.std::__detail::_Hash_node_base"** %16, null
  br i1 %17, label %23, label %18

; <label>:18:                                     ; preds = %3
  %19 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = call %"struct.std::__detail::_Hash_node_base"** @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_allocate_bucketsEm(%"class.std::_Hashtable"* %14, i64 %20)
  store %"struct.std::__detail::_Hash_node_base"** %21, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  %22 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"** %21, %"struct.std::__detail::_Hash_node_base"*** %22, align 8
  br label %23

; <label>:23:                                     ; preds = %18, %3
  %24 = load i32, i32* @x.323
  %25 = load i32, i32* @y.324
  %26 = sub i32 %24, -1907681125
  %27 = sub i32 %26, 1
  %28 = add i32 %27, -1907681125
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 false, true
  %37 = and i1 %34, false
  %38 = and i1 %32, %36
  %39 = and i1 %35, false
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 false, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  br i1 %48, label %50, label %434

; <label>:50:                                     ; preds = %23, %434
  %51 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5, align 8
  %52 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %51, i32 0, i32 2
  %53 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %52, i32 0, i32 0
  %54 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %53, align 8
  %55 = icmp ne %"struct.std::__detail::_Hash_node_base"* %54, null
  %56 = load i32, i32* @x.323
  %57 = load i32, i32* @y.324
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 false, true
  %68 = and i1 %65, false
  %69 = and i1 %63, %67
  %70 = and i1 %66, false
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 false, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  br i1 %79, label %81, label %434

; <label>:81:                                     ; preds = %50
  br i1 %55, label %83, label %82

; <label>:82:                                     ; preds = %81
  br label %370

; <label>:83:                                     ; preds = %81
  %84 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5, align 8
  %85 = invoke %"struct.std::__detail::_Hash_node"* @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_beginEv(%"class.std::_Hashtable"* %84)
          to label %86 unwind label %169

; <label>:86:                                     ; preds = %83
  store %"struct.std::__detail::_Hash_node"* %85, %"struct.std::__detail::_Hash_node"** %8, align 8
  %87 = load %class.anon*, %class.anon** %6, align 8
  %88 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %89 = invoke %"struct.std::__detail::_Hash_node"* @_ZZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEC1ERKSF_ENKUlPKNS4_10_Hash_nodeIS2_Lb0EEEE_clESL_(%class.anon* %87, %"struct.std::__detail::_Hash_node"* %88)
          to label %90 unwind label %169

; <label>:90:                                     ; preds = %86
  store %"struct.std::__detail::_Hash_node"* %89, %"struct.std::__detail::_Hash_node"** %11, align 8
  %91 = bitcast %"class.std::_Hashtable"* %14 to %"struct.std::__detail::_Hash_code_base"*
  %92 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %93 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  invoke void @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE12_M_copy_codeEPNS_10_Hash_nodeIS3_Lb0EEEPKSB_(%"struct.std::__detail::_Hash_code_base"* %91, %"struct.std::__detail::_Hash_node"* %92, %"struct.std::__detail::_Hash_node"* %93)
          to label %94 unwind label %169

; <label>:94:                                     ; preds = %90
  %95 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %96 = bitcast %"struct.std::__detail::_Hash_node"* %95 to %"struct.std::__detail::_Hash_node_base"*
  %97 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 2
  %98 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %97, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %96, %"struct.std::__detail::_Hash_node_base"** %98, align 8
  %99 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 2
  %100 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 0
  %101 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %100, align 8
  %102 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %103 = call i64 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexEPNS4_10_Hash_nodeIS2_Lb0EEE(%"class.std::_Hashtable"* %14, %"struct.std::__detail::_Hash_node"* %102) #3
  %104 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %101, i64 %103
  store %"struct.std::__detail::_Hash_node_base"* %99, %"struct.std::__detail::_Hash_node_base"** %104, align 8
  %105 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %106 = bitcast %"struct.std::__detail::_Hash_node"* %105 to %"struct.std::__detail::_Hash_node_base"*
  store %"struct.std::__detail::_Hash_node_base"* %106, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  %107 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %108 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %107) #3
  store %"struct.std::__detail::_Hash_node"* %108, %"struct.std::__detail::_Hash_node"** %8, align 8
  br label %109

; <label>:109:                                    ; preds = %278, %94
  %110 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %111 = icmp ne %"struct.std::__detail::_Hash_node"* %110, null
  br i1 %111, label %112, label %281

; <label>:112:                                    ; preds = %109
  %113 = load i32, i32* @x.323
  %114 = load i32, i32* @y.324
  %115 = sub i32 %113, -1297862723
  %116 = sub i32 %115, 1
  %117 = add i32 %116, -1297862723
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  br i1 %125, label %127, label %440

; <label>:127:                                    ; preds = %112, %440
  %128 = load %class.anon*, %class.anon** %6, align 8
  %129 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %130 = load i32, i32* @x.323
  %131 = load i32, i32* @y.324
  %132 = add i32 %130, 1166275860
  %133 = sub i32 %132, 1
  %134 = sub i32 %133, 1166275860
  %135 = sub i32 %130, 1
  %136 = mul i32 %130, %134
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %131, 10
  %140 = and i1 %138, %139
  %141 = xor i1 %138, %139
  %142 = or i1 %140, %141
  %143 = or i1 %138, %139
  br i1 %142, label %144, label %440

; <label>:144:                                    ; preds = %127
  %145 = invoke %"struct.std::__detail::_Hash_node"* @_ZZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEC1ERKSF_ENKUlPKNS4_10_Hash_nodeIS2_Lb0EEEE_clESL_(%class.anon* %128, %"struct.std::__detail::_Hash_node"* %129)
          to label %146 unwind label %169

; <label>:146:                                    ; preds = %144
  store %"struct.std::__detail::_Hash_node"* %145, %"struct.std::__detail::_Hash_node"** %11, align 8
  %147 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %148 = bitcast %"struct.std::__detail::_Hash_node"* %147 to %"struct.std::__detail::_Hash_node_base"*
  %149 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  %150 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %149, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %148, %"struct.std::__detail::_Hash_node_base"** %150, align 8
  %151 = bitcast %"class.std::_Hashtable"* %14 to %"struct.std::__detail::_Hash_code_base"*
  %152 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %153 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  invoke void @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE12_M_copy_codeEPNS_10_Hash_nodeIS3_Lb0EEEPKSB_(%"struct.std::__detail::_Hash_code_base"* %151, %"struct.std::__detail::_Hash_node"* %152, %"struct.std::__detail::_Hash_node"* %153)
          to label %154 unwind label %169

; <label>:154:                                    ; preds = %146
  %155 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %156 = call i64 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexEPNS4_10_Hash_nodeIS2_Lb0EEE(%"class.std::_Hashtable"* %14, %"struct.std::__detail::_Hash_node"* %155) #3
  store i64 %156, i64* %13, align 8
  %157 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 0
  %158 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %157, align 8
  %159 = load i64, i64* %13, align 8
  %160 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %158, i64 %159
  %161 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %160, align 8
  %162 = icmp ne %"struct.std::__detail::_Hash_node_base"* %161, null
  br i1 %162, label %222, label %163

; <label>:163:                                    ; preds = %154
  %164 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  %165 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 0
  %166 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %165, align 8
  %167 = load i64, i64* %13, align 8
  %168 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %166, i64 %167
  store %"struct.std::__detail::_Hash_node_base"* %164, %"struct.std::__detail::_Hash_node_base"** %168, align 8
  br label %222

; <label>:169:                                    ; preds = %146, %144, %90, %86, %83
  %170 = landingpad { i8*, i32 }
          catch i8* null
  %171 = extractvalue { i8*, i32 } %170, 0
  store i8* %171, i8** %9, align 8
  %172 = extractvalue { i8*, i32 } %170, 1
  store i32 %172, i32* %10, align 4
  br label %173

; <label>:173:                                    ; preds = %169
  %174 = load i32, i32* @x.323
  %175 = load i32, i32* @y.324
  %176 = sub i32 %174, 1408921704
  %177 = sub i32 %176, 1
  %178 = add i32 %177, 1408921704
  %179 = sub i32 %174, 1
  %180 = mul i32 %174, %178
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %175, 10
  %184 = and i1 %182, %183
  %185 = xor i1 %182, %183
  %186 = or i1 %184, %185
  %187 = or i1 %182, %183
  br i1 %186, label %188, label %443

; <label>:188:                                    ; preds = %173, %443
  %189 = load i8*, i8** %9, align 8
  %190 = call i8* @__cxa_begin_catch(i8* %189) #3
  call void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv(%"class.std::_Hashtable"* %14) #3
  %191 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  %192 = icmp ne %"struct.std::__detail::_Hash_node_base"** %191, null
  %193 = load i32, i32* @x.323
  %194 = load i32, i32* @y.324
  %195 = sub i32 %193, 1008131822
  %196 = sub i32 %195, 1
  %197 = add i32 %196, 1008131822
  %198 = sub i32 %193, 1
  %199 = mul i32 %193, %197
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %194, 10
  %203 = xor i1 %201, true
  %204 = xor i1 %202, true
  %205 = xor i1 false, true
  %206 = and i1 %203, false
  %207 = and i1 %201, %205
  %208 = and i1 %204, false
  %209 = and i1 %202, %205
  %210 = or i1 %206, %207
  %211 = or i1 %208, %209
  %212 = xor i1 %210, %211
  %213 = or i1 %203, %204
  %214 = xor i1 %213, true
  %215 = or i1 false, %205
  %216 = and i1 %214, %215
  %217 = or i1 %212, %216
  %218 = or i1 %201, %202
  br i1 %217, label %219, label %443

; <label>:219:                                    ; preds = %188
  br i1 %192, label %220, label %368

; <label>:220:                                    ; preds = %219
  invoke void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_deallocate_bucketsEv(%"class.std::_Hashtable"* %14)
          to label %221 unwind label %311

; <label>:221:                                    ; preds = %220
  br label %368

; <label>:222:                                    ; preds = %163, %154
  %223 = load i32, i32* @x.323
  %224 = load i32, i32* @y.324
  %225 = add i32 %223, 786846921
  %226 = sub i32 %225, 1
  %227 = sub i32 %226, 786846921
  %228 = sub i32 %223, 1
  %229 = mul i32 %223, %227
  %230 = urem i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %224, 10
  %233 = xor i1 %231, true
  %234 = xor i1 %232, true
  %235 = xor i1 true, true
  %236 = and i1 %233, true
  %237 = and i1 %231, %235
  %238 = and i1 %234, true
  %239 = and i1 %232, %235
  %240 = or i1 %236, %237
  %241 = or i1 %238, %239
  %242 = xor i1 %240, %241
  %243 = or i1 %233, %234
  %244 = xor i1 %243, true
  %245 = or i1 true, %235
  %246 = and i1 %244, %245
  %247 = or i1 %242, %246
  %248 = or i1 %231, %232
  br i1 %247, label %249, label %448

; <label>:249:                                    ; preds = %222, %448
  %250 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %251 = bitcast %"struct.std::__detail::_Hash_node"* %250 to %"struct.std::__detail::_Hash_node_base"*
  store %"struct.std::__detail::_Hash_node_base"* %251, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  %252 = load i32, i32* @x.323
  %253 = load i32, i32* @y.324
  %254 = sub i32 0, 1
  %255 = add i32 %252, %254
  %256 = sub i32 %252, 1
  %257 = mul i32 %252, %255
  %258 = urem i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %253, 10
  %261 = xor i1 %259, true
  %262 = xor i1 %260, true
  %263 = xor i1 false, true
  %264 = and i1 %261, false
  %265 = and i1 %259, %263
  %266 = and i1 %262, false
  %267 = and i1 %260, %263
  %268 = or i1 %264, %265
  %269 = or i1 %266, %267
  %270 = xor i1 %268, %269
  %271 = or i1 %261, %262
  %272 = xor i1 %271, true
  %273 = or i1 false, %263
  %274 = and i1 %272, %273
  %275 = or i1 %270, %274
  %276 = or i1 %259, %260
  br i1 %275, label %277, label %448

; <label>:277:                                    ; preds = %249
  br label %278

; <label>:278:                                    ; preds = %277
  %279 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %280 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %279) #3
  store %"struct.std::__detail::_Hash_node"* %280, %"struct.std::__detail::_Hash_node"** %8, align 8
  br label %109

; <label>:281:                                    ; preds = %109
  %282 = load i32, i32* @x.323
  %283 = load i32, i32* @y.324
  %284 = sub i32 0, 1
  %285 = add i32 %282, %284
  %286 = sub i32 %282, 1
  %287 = mul i32 %282, %285
  %288 = urem i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %283, 10
  %291 = and i1 %289, %290
  %292 = xor i1 %289, %290
  %293 = or i1 %291, %292
  %294 = or i1 %289, %290
  br i1 %293, label %295, label %451

; <label>:295:                                    ; preds = %281, %451
  %296 = load i32, i32* @x.323
  %297 = load i32, i32* @y.324
  %298 = add i32 %296, -1402519923
  %299 = sub i32 %298, 1
  %300 = sub i32 %299, -1402519923
  %301 = sub i32 %296, 1
  %302 = mul i32 %296, %300
  %303 = urem i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %297, 10
  %306 = and i1 %304, %305
  %307 = xor i1 %304, %305
  %308 = or i1 %306, %307
  %309 = or i1 %304, %305
  br i1 %308, label %310, label %451

; <label>:310:                                    ; preds = %295
  br label %370

; <label>:311:                                    ; preds = %368, %220
  %312 = load i32, i32* @x.323
  %313 = load i32, i32* @y.324
  %314 = sub i32 %312, 1659588496
  %315 = sub i32 %314, 1
  %316 = add i32 %315, 1659588496
  %317 = sub i32 %312, 1
  %318 = mul i32 %312, %316
  %319 = urem i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %313, 10
  %322 = xor i1 %320, true
  %323 = xor i1 %321, true
  %324 = xor i1 true, true
  %325 = and i1 %322, true
  %326 = and i1 %320, %324
  %327 = and i1 %323, true
  %328 = and i1 %321, %324
  %329 = or i1 %325, %326
  %330 = or i1 %327, %328
  %331 = xor i1 %329, %330
  %332 = or i1 %322, %323
  %333 = xor i1 %332, true
  %334 = or i1 true, %324
  %335 = and i1 %333, %334
  %336 = or i1 %331, %335
  %337 = or i1 %320, %321
  br i1 %336, label %338, label %452

; <label>:338:                                    ; preds = %311, %452
  %339 = landingpad { i8*, i32 }
          cleanup
  %340 = extractvalue { i8*, i32 } %339, 0
  store i8* %340, i8** %9, align 8
  %341 = extractvalue { i8*, i32 } %339, 1
  store i32 %341, i32* %10, align 4
  %342 = load i32, i32* @x.323
  %343 = load i32, i32* @y.324
  %344 = sub i32 0, 1
  %345 = add i32 %342, %344
  %346 = sub i32 %342, 1
  %347 = mul i32 %342, %345
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %343, 10
  %351 = xor i1 %349, true
  %352 = xor i1 %350, true
  %353 = xor i1 false, true
  %354 = and i1 %351, false
  %355 = and i1 %349, %353
  %356 = and i1 %352, false
  %357 = and i1 %350, %353
  %358 = or i1 %354, %355
  %359 = or i1 %356, %357
  %360 = xor i1 %358, %359
  %361 = or i1 %351, %352
  %362 = xor i1 %361, true
  %363 = or i1 false, %353
  %364 = and i1 %362, %363
  %365 = or i1 %360, %364
  %366 = or i1 %349, %350
  br i1 %365, label %367, label %452

; <label>:367:                                    ; preds = %338
  invoke void @__cxa_end_catch()
          to label %369 unwind label %376

; <label>:368:                                    ; preds = %221, %219
  invoke void @__cxa_rethrow() #12
          to label %433 unwind label %311

; <label>:369:                                    ; preds = %367
  br label %371

; <label>:370:                                    ; preds = %82, %310
  ret void

; <label>:371:                                    ; preds = %369
  %372 = load i8*, i8** %9, align 8
  %373 = load i32, i32* %10, align 4
  %374 = insertvalue { i8*, i32 } undef, i8* %372, 0
  %375 = insertvalue { i8*, i32 } %374, i32 %373, 1
  resume { i8*, i32 } %375

; <label>:376:                                    ; preds = %367
  %377 = load i32, i32* @x.323
  %378 = load i32, i32* @y.324
  %379 = sub i32 %377, 1879693936
  %380 = sub i32 %379, 1
  %381 = add i32 %380, 1879693936
  %382 = sub i32 %377, 1
  %383 = mul i32 %377, %381
  %384 = urem i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = icmp slt i32 %378, 10
  %387 = xor i1 %385, true
  %388 = xor i1 %386, true
  %389 = xor i1 true, true
  %390 = and i1 %387, true
  %391 = and i1 %385, %389
  %392 = and i1 %388, true
  %393 = and i1 %386, %389
  %394 = or i1 %390, %391
  %395 = or i1 %392, %393
  %396 = xor i1 %394, %395
  %397 = or i1 %387, %388
  %398 = xor i1 %397, true
  %399 = or i1 true, %389
  %400 = and i1 %398, %399
  %401 = or i1 %396, %400
  %402 = or i1 %385, %386
  br i1 %401, label %403, label %456

; <label>:403:                                    ; preds = %376, %456
  %404 = landingpad { i8*, i32 }
          catch i8* null
  %405 = extractvalue { i8*, i32 } %404, 0
  call void @__clang_call_terminate(i8* %405) #11
  %406 = load i32, i32* @x.323
  %407 = load i32, i32* @y.324
  %408 = add i32 %406, -1698043462
  %409 = sub i32 %408, 1
  %410 = sub i32 %409, -1698043462
  %411 = sub i32 %406, 1
  %412 = mul i32 %406, %410
  %413 = urem i32 %412, 2
  %414 = icmp eq i32 %413, 0
  %415 = icmp slt i32 %407, 10
  %416 = xor i1 %414, true
  %417 = xor i1 %415, true
  %418 = xor i1 false, true
  %419 = and i1 %416, false
  %420 = and i1 %414, %418
  %421 = and i1 %417, false
  %422 = and i1 %415, %418
  %423 = or i1 %419, %420
  %424 = or i1 %421, %422
  %425 = xor i1 %423, %424
  %426 = or i1 %416, %417
  %427 = xor i1 %426, true
  %428 = or i1 false, %418
  %429 = and i1 %427, %428
  %430 = or i1 %425, %429
  %431 = or i1 %414, %415
  br i1 %430, label %432, label %456

; <label>:432:                                    ; preds = %403
  unreachable

; <label>:433:                                    ; preds = %368
  unreachable

; <label>:434:                                    ; preds = %50, %23
  %435 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5, align 8
  %436 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %435, i32 0, i32 2
  %437 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %436, i32 0, i32 0
  %438 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %437, align 8
  %439 = icmp ne %"struct.std::__detail::_Hash_node_base"* %438, null
  br label %50

; <label>:440:                                    ; preds = %127, %112
  %441 = load %class.anon*, %class.anon** %6, align 8
  %442 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  br label %127

; <label>:443:                                    ; preds = %188, %173
  %444 = load i8*, i8** %9, align 8
  %445 = call i8* @__cxa_begin_catch(i8* %444) #3
  call void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv(%"class.std::_Hashtable"* %14) #3
  %446 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  %447 = icmp ne %"struct.std::__detail::_Hash_node_base"** %446, null
  br label %188

; <label>:448:                                    ; preds = %249, %222
  %449 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  %450 = bitcast %"struct.std::__detail::_Hash_node"* %449 to %"struct.std::__detail::_Hash_node_base"*
  store %"struct.std::__detail::_Hash_node_base"* %450, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  br label %249

; <label>:451:                                    ; preds = %295, %281
  br label %295

; <label>:452:                                    ; preds = %338, %311
  %453 = landingpad { i8*, i32 }
          cleanup
  %454 = extractvalue { i8*, i32 } %453, 0
  store i8* %454, i8** %9, align 8
  %455 = extractvalue { i8*, i32 } %453, 1
  store i32 %455, i32* %10, align 4
  br label %338

; <label>:456:                                    ; preds = %403, %376
  %457 = landingpad { i8*, i32 }
          catch i8* null
  %458 = extractvalue { i8*, i32 } %457, 0
  call void @__clang_call_terminate(i8* %458) #11
  br label %403
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE37select_on_container_copy_constructionERKS6_(%"class.std::allocator.9"* noalias sret, %"class.std::allocator.9"* dereferenceable(1)) #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %1, %"class.std::allocator.9"** %3, align 8
  %4 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %3, align 8
  call void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEC2ERKS5_(%"class.std::allocator.9"* %0, %"class.std::allocator.9"* dereferenceable(1) %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEC2ERKS5_(%"class.std::allocator.9"*, %"class.std::allocator.9"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.9"*, align 8
  %4 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %3, align 8
  store %"class.std::allocator.9"* %1, %"class.std::allocator.9"** %4, align 8
  %5 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %3, align 8
  %6 = bitcast %"class.std::allocator.9"* %5 to %"class.__gnu_cxx::new_allocator.10"*
  %7 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %4, align 8
  %8 = bitcast %"class.std::allocator.9"* %7 to %"class.__gnu_cxx::new_allocator.10"*
  call void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEC2ERKS7_(%"class.__gnu_cxx::new_allocator.10"* %6, %"class.__gnu_cxx::new_allocator.10"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEC2ERKS7_(%"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.329
  %6 = load i32, i32* @y.330
  %7 = sub i32 %5, 1953818177
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1953818177
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1821187925, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %50
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1821187925, label %19
    i32 -397593129, label %27
    i32 983302541, label %45
    i32 -1348376988, label %46
  ]

; <label>:18:                                     ; preds = %16
  br label %50

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -397593129, i32 -1348376988
  store i32 %26, i32* %15
  br label %50

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %29 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %28, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %1, %"class.__gnu_cxx::new_allocator.10"** %29, align 8
  %30 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %28, align 8
  %31 = load i32, i32* @x.329
  %32 = load i32, i32* @y.330
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 983302541, i32 -1348376988
  store i32 %44, i32* %15
  br label %50

; <label>:45:                                     ; preds = %16
  ret void

; <label>:46:                                     ; preds = %16
  %47 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %48 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %47, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %1, %"class.__gnu_cxx::new_allocator.10"** %48, align 8
  %49 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %47, align 8
  store i32 -397593129, i32* %15
  br label %50

; <label>:50:                                     ; preds = %46, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EE7_S_cgetERKS7_(%"struct.std::__detail::_Hashtable_ebo_helper.8"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.8"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.8"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.8"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_ebo_helper.8"*, %"struct.std::__detail::_Hashtable_ebo_helper.8"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.8"* %3 to %"class.std::allocator.9"*
  ret %"class.std::allocator.9"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.9"* @_ZSt7forwardISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEEOT_RNSt16remove_referenceIS7_E4typeE(%"class.std::allocator.9"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %2, align 8
  %3 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %2, align 8
  ret %"class.std::allocator.9"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKixELb0EEEELb1EEC2IS6_EEOT_(%"struct.std::__detail::_Hashtable_ebo_helper.8"*, %"class.std::allocator.9"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.335
  %6 = load i32, i32* @y.336
  %7 = add i32 %5, -435889143
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -435889143
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -901892115, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -901892115, label %19
    i32 -2031931436, label %27
    i32 318806884, label %60
    i32 1541048957, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -2031931436, i32 1541048957
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.8"*, align 8
  %29 = alloca %"class.std::allocator.9"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.8"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.8"** %28, align 8
  store %"class.std::allocator.9"* %1, %"class.std::allocator.9"** %29, align 8
  %30 = load %"struct.std::__detail::_Hashtable_ebo_helper.8"*, %"struct.std::__detail::_Hashtable_ebo_helper.8"** %28, align 8
  %31 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.8"* %30 to %"class.std::allocator.9"*
  %32 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %29, align 8
  %33 = call dereferenceable(1) %"class.std::allocator.9"* @_ZSt7forwardISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEEOT_RNSt16remove_referenceIS7_E4typeE(%"class.std::allocator.9"* dereferenceable(1) %32) #3
  call void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEC2ERKS5_(%"class.std::allocator.9"* %31, %"class.std::allocator.9"* dereferenceable(1) %33) #3
  %34 = load i32, i32* @x.335
  %35 = load i32, i32* @y.336
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 318806884, i32 1541048957
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.8"*, align 8
  %63 = alloca %"class.std::allocator.9"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.8"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.8"** %62, align 8
  store %"class.std::allocator.9"* %1, %"class.std::allocator.9"** %63, align 8
  %64 = load %"struct.std::__detail::_Hashtable_ebo_helper.8"*, %"struct.std::__detail::_Hashtable_ebo_helper.8"** %62, align 8
  %65 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.8"* %64 to %"class.std::allocator.9"*
  %66 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %63, align 8
  %67 = call dereferenceable(1) %"class.std::allocator.9"* @_ZSt7forwardISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEEOT_RNSt16remove_referenceIS7_E4typeE(%"class.std::allocator.9"* dereferenceable(1) %66) #3
  call void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEC2ERKS5_(%"class.std::allocator.9"* %65, %"class.std::allocator.9"* dereferenceable(1) %67) #3
  store i32 -2031931436, i32* %15
  br label %68

; <label>:68:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node_base"** @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_allocate_bucketsEm(%"class.std::_Hashtable"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"class.std::_Hashtable"*
  %5 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %6 = alloca %"class.std::_Hashtable"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %6, align 8
  store %"class.std::_Hashtable"* %8, %"class.std::_Hashtable"** %4
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %3
  %10 = alloca i32
  store i32 -1998176351, i32* %10
  br label %11

; <label>:11:                                     ; preds = %2, %77
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 -1998176351, label %14
    i32 -99507996, label %18
    i32 -23771493, label %23
    i32 -1372617483, label %50
    i32 2012029257, label %69
    i32 46898388, label %70
    i32 129909302, label %72
  ]

; <label>:13:                                     ; preds = %11
  br label %77

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp eq i64 %15, 1
  %17 = select i1 %16, i32 -99507996, i32 -23771493
  store i32 %17, i32* %10
  br label %77

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %20 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %19, i32 0, i32 5
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %20, align 8
  %21 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %22 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %21, i32 0, i32 5
  store %"struct.std::__detail::_Hash_node_base"** %22, %"struct.std::__detail::_Hash_node_base"*** %5, align 8
  store i32 46898388, i32* %10
  br label %77

; <label>:23:                                     ; preds = %11
  %24 = load i32, i32* @x.337
  %25 = load i32, i32* @y.338
  %26 = sub i32 0, 1
  %27 = add i32 %24, %26
  %28 = sub i32 %24, 1
  %29 = mul i32 %24, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %25, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 true, true
  %36 = and i1 %33, true
  %37 = and i1 %31, %35
  %38 = and i1 %34, true
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 true, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  %49 = select i1 %47, i32 -1372617483, i32 129909302
  store i32 %49, i32* %10
  br label %77

; <label>:50:                                     ; preds = %11
  %51 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %52 = bitcast %"class.std::_Hashtable"* %51 to %"struct.std::__detail::_Hashtable_alloc"*
  %53 = load i64, i64* %7, align 8
  %54 = call %"struct.std::__detail::_Hash_node_base"** @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE19_M_allocate_bucketsEm(%"struct.std::__detail::_Hashtable_alloc"* %52, i64 %53)
  store %"struct.std::__detail::_Hash_node_base"** %54, %"struct.std::__detail::_Hash_node_base"*** %5, align 8
  %55 = load i32, i32* @x.337
  %56 = load i32, i32* @y.338
  %57 = sub i32 0, 1
  %58 = add i32 %55, %57
  %59 = sub i32 %55, 1
  %60 = mul i32 %55, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %56, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 2012029257, i32 129909302
  store i32 %68, i32* %10
  br label %77

; <label>:69:                                     ; preds = %11
  store i32 46898388, i32* %10
  br label %77

; <label>:70:                                     ; preds = %11
  %71 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %5, align 8
  ret %"struct.std::__detail::_Hash_node_base"** %71

; <label>:72:                                     ; preds = %11
  %73 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %74 = bitcast %"class.std::_Hashtable"* %73 to %"struct.std::__detail::_Hashtable_alloc"*
  %75 = load i64, i64* %7, align 8
  %76 = call %"struct.std::__detail::_Hash_node_base"** @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE19_M_allocate_bucketsEm(%"struct.std::__detail::_Hashtable_alloc"* %74, i64 %75)
  store %"struct.std::__detail::_Hash_node_base"** %76, %"struct.std::__detail::_Hash_node_base"*** %5, align 8
  store i32 -1372617483, i32* %10
  br label %77

; <label>:77:                                     ; preds = %72, %69, %50, %23, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEC1ERKSF_ENKUlPKNS4_10_Hash_nodeIS2_Lb0EEEE_clESL_(%class.anon*, %"struct.std::__detail::_Hash_node"*) #0 comdat align 2 {
  %3 = alloca %class.anon*, align 8
  %4 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %class.anon* %0, %class.anon** %3, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %4, align 8
  %5 = load %class.anon*, %class.anon** %3, align 8
  %6 = getelementptr inbounds %class.anon, %class.anon* %5, i32 0, i32 0
  %7 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %6, align 8
  %8 = bitcast %"class.std::_Hashtable"* %7 to %"struct.std::__detail::_Hashtable_alloc"*
  %9 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %4, align 8
  %10 = bitcast %"struct.std::__detail::_Hash_node"* %9 to %"struct.std::__detail::_Hash_node_value_base"*
  %11 = call dereferenceable(16) %"struct.std::pair"* @_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKixEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base"* %10) #3
  %12 = call %"struct.std::__detail::_Hash_node"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE16_M_allocate_nodeIJRKS4_EEEPS5_DpOT_(%"struct.std::__detail::_Hashtable_alloc"* %8, %"struct.std::pair"* dereferenceable(16) %11)
  ret %"struct.std::__detail::_Hash_node"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE12_M_copy_codeEPNS_10_Hash_nodeIS3_Lb0EEEPKSB_(%"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"*) #4 comdat align 2 {
  %4 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %6 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %4, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %5, align 8
  store %"struct.std::__detail::_Hash_node"* %2, %"struct.std::__detail::_Hash_node"** %6, align 8
  %7 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexEPNS4_10_Hash_nodeIS2_Lb0EEE(%"class.std::_Hashtable"*, %"struct.std::__detail::_Hash_node"*) #4 comdat align 2 {
  %3 = alloca %"class.std::_Hashtable"*, align 8
  %4 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %3, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %4, align 8
  %5 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %3, align 8
  %6 = bitcast %"class.std::_Hashtable"* %5 to %"struct.std::__detail::_Hash_code_base"*
  %7 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %4, align 8
  %8 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %5, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = call i64 @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE15_M_bucket_indexEPKNS_10_Hash_nodeIS3_Lb0EEEm(%"struct.std::__detail::_Hash_code_base"* %6, %"struct.std::__detail::_Hash_node"* %7, i64 %9) #3
  ret i64 %10
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node_base"** @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE19_M_allocate_bucketsEm(%"struct.std::__detail::_Hashtable_alloc"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::allocator.15", align 1
  %6 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %7 = alloca i8*
  %8 = alloca i32
  %9 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %3, align 8
  store i64 %1, i64* %4, align 8
  %10 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %3, align 8
  %11 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %10)
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeISt4pairIKixELb0EEEEERKSaIT_E(%"class.std::allocator.15"* %5, %"class.std::allocator.9"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %4, align 8
  %13 = invoke %"struct.std::__detail::_Hash_node_base"** @_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE8allocateERS3_m(%"class.std::allocator.15"* dereferenceable(1) %5, i64 %12)
          to label %14 unwind label %22

; <label>:14:                                     ; preds = %2
  store %"struct.std::__detail::_Hash_node_base"** %13, %"struct.std::__detail::_Hash_node_base"*** %6, align 8
  %15 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %6, align 8
  %16 = call %"struct.std::__detail::_Hash_node_base"** @_ZSt11__addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_(%"struct.std::__detail::_Hash_node_base"** dereferenceable(8) %15) #3
  store %"struct.std::__detail::_Hash_node_base"** %16, %"struct.std::__detail::_Hash_node_base"*** %9, align 8
  %17 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %9, align 8
  %18 = bitcast %"struct.std::__detail::_Hash_node_base"** %17 to i8*
  %19 = load i64, i64* %4, align 8
  %20 = mul i64 %19, 8
  call void @llvm.memset.p0i8.i64(i8* %18, i8 0, i64 %20, i32 8, i1 false)
  %21 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %9, align 8
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.std::allocator.15"* %5) #3
  ret %"struct.std::__detail::_Hash_node_base"** %21

; <label>:22:                                     ; preds = %2
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  store i8* %24, i8** %7, align 8
  %25 = extractvalue { i8*, i32 } %23, 1
  store i32 %25, i32* %8, align 4
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.std::allocator.15"* %5) #3
  br label %26

; <label>:26:                                     ; preds = %22
  %27 = load i8*, i8** %7, align 8
  %28 = load i32, i32* %8, align 4
  %29 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %30 = insertvalue { i8*, i32 } %29, i32 %28, 1
  resume { i8*, i32 } %30
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node_base"** @_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE8allocateERS3_m(%"class.std::allocator.15"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.15"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %3, align 8
  %6 = bitcast %"class.std::allocator.15"* %5 to %"class.__gnu_cxx::new_allocator.16"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::__detail::_Hash_node_base"** @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"* %6, i64 %7, i8* null)
  ret %"struct.std::__detail::_Hash_node_base"** %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node_base"** @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 361158650, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 361158650, label %16
    i32 -202515662, label %21
    i32 -2018598829, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -202515662, i32 -2018598829
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 8
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"struct.std::__detail::_Hash_node_base"**
  ret %"struct.std::__detail::_Hash_node_base"** %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE16_M_allocate_nodeIJRKS4_EEEPS5_DpOT_(%"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::pair"* dereferenceable(16)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %6 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %7 = alloca %"class.std::allocator.12", align 1
  %8 = alloca i8*
  %9 = alloca i32
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %10 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %3, align 8
  %11 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %10)
  %12 = call %"struct.std::__detail::_Hash_node"* @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE8allocateERS6_m(%"class.std::allocator.9"* dereferenceable(1) %11, i64 1)
  store %"struct.std::__detail::_Hash_node"* %12, %"struct.std::__detail::_Hash_node"** %5, align 8
  %13 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %5, align 8
  %14 = call %"struct.std::__detail::_Hash_node"* @_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEPT_RS6_(%"struct.std::__detail::_Hash_node"* dereferenceable(24) %13) #3
  store %"struct.std::__detail::_Hash_node"* %14, %"struct.std::__detail::_Hash_node"** %6, align 8
  %15 = invoke dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %10)
          to label %16 unwind label %27

; <label>:16:                                     ; preds = %2
  call void @_ZNSaISt4pairIKixEEC2INSt8__detail10_Hash_nodeIS1_Lb0EEEEERKSaIT_E(%"class.std::allocator.12"* %7, %"class.std::allocator.9"* dereferenceable(1) %15) #3
  %17 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %6, align 8
  %18 = bitcast %"struct.std::__detail::_Hash_node"* %17 to i8*
  %19 = bitcast i8* %18 to %"struct.std::__detail::_Hash_node"*
  call void @_ZNSt8__detail10_Hash_nodeISt4pairIKixELb0EEC2Ev(%"struct.std::__detail::_Hash_node"* %19) #3
  %20 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %6, align 8
  %21 = bitcast %"struct.std::__detail::_Hash_node"* %20 to %"struct.std::__detail::_Hash_node_value_base"*
  %22 = call %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"* %21) #3
  %23 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %24 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIKixEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair"* dereferenceable(16) %23) #3
  invoke void @_ZNSt16allocator_traitsISaISt4pairIKixEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_(%"class.std::allocator.12"* dereferenceable(1) %7, %"struct.std::pair"* %22, %"struct.std::pair"* dereferenceable(16) %24)
          to label %25 unwind label %31

; <label>:25:                                     ; preds = %16
  %26 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %6, align 8
  call void @_ZNSaISt4pairIKixEED2Ev(%"class.std::allocator.12"* %7) #3
  ret %"struct.std::__detail::_Hash_node"* %26

; <label>:27:                                     ; preds = %2
  %28 = landingpad { i8*, i32 }
          catch i8* null
  %29 = extractvalue { i8*, i32 } %28, 0
  store i8* %29, i8** %8, align 8
  %30 = extractvalue { i8*, i32 } %28, 1
  store i32 %30, i32* %9, align 4
  br label %35

; <label>:31:                                     ; preds = %16
  %32 = landingpad { i8*, i32 }
          catch i8* null
  %33 = extractvalue { i8*, i32 } %32, 0
  store i8* %33, i8** %8, align 8
  %34 = extractvalue { i8*, i32 } %32, 1
  store i32 %34, i32* %9, align 4
  call void @_ZNSaISt4pairIKixEED2Ev(%"class.std::allocator.12"* %7) #3
  br label %35

; <label>:35:                                     ; preds = %31, %27
  %36 = load i32, i32* @x.353
  %37 = load i32, i32* @y.354
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  br i1 %47, label %49, label %340

; <label>:49:                                     ; preds = %35, %340
  %50 = load i8*, i8** %8, align 8
  %51 = call i8* @__cxa_begin_catch(i8* %50) #3
  %52 = load i32, i32* @x.353
  %53 = load i32, i32* @y.354
  %54 = sub i32 %52, -1127325902
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -1127325902
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  br i1 %76, label %78, label %340

; <label>:78:                                     ; preds = %49
  %79 = invoke dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %10)
          to label %80 unwind label %190

; <label>:80:                                     ; preds = %78
  %81 = load i32, i32* @x.353
  %82 = load i32, i32* @y.354
  %83 = sub i32 0, 1
  %84 = add i32 %81, %83
  %85 = sub i32 %81, 1
  %86 = mul i32 %81, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %82, 10
  %90 = xor i1 %88, true
  %91 = xor i1 %89, true
  %92 = xor i1 true, true
  %93 = and i1 %90, true
  %94 = and i1 %88, %92
  %95 = and i1 %91, true
  %96 = and i1 %89, %92
  %97 = or i1 %93, %94
  %98 = or i1 %95, %96
  %99 = xor i1 %97, %98
  %100 = or i1 %90, %91
  %101 = xor i1 %100, true
  %102 = or i1 true, %92
  %103 = and i1 %101, %102
  %104 = or i1 %99, %103
  %105 = or i1 %88, %89
  br i1 %104, label %106, label %343

; <label>:106:                                    ; preds = %80, %343
  %107 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %5, align 8
  %108 = load i32, i32* @x.353
  %109 = load i32, i32* @y.354
  %110 = add i32 %108, 1916099741
  %111 = sub i32 %110, 1
  %112 = sub i32 %111, 1916099741
  %113 = sub i32 %108, 1
  %114 = mul i32 %108, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %109, 10
  %118 = xor i1 %116, true
  %119 = xor i1 %117, true
  %120 = xor i1 true, true
  %121 = and i1 %118, true
  %122 = and i1 %116, %120
  %123 = and i1 %119, true
  %124 = and i1 %117, %120
  %125 = or i1 %121, %122
  %126 = or i1 %123, %124
  %127 = xor i1 %125, %126
  %128 = or i1 %118, %119
  %129 = xor i1 %128, true
  %130 = or i1 true, %120
  %131 = and i1 %129, %130
  %132 = or i1 %127, %131
  %133 = or i1 %116, %117
  br i1 %132, label %134, label %343

; <label>:134:                                    ; preds = %106
  invoke void @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE10deallocateERS6_PS5_m(%"class.std::allocator.9"* dereferenceable(1) %79, %"struct.std::__detail::_Hash_node"* %107, i64 1)
          to label %135 unwind label %190

; <label>:135:                                    ; preds = %134
  %136 = load i32, i32* @x.353
  %137 = load i32, i32* @y.354
  %138 = sub i32 %136, -783454015
  %139 = sub i32 %138, 1
  %140 = add i32 %139, -783454015
  %141 = sub i32 %136, 1
  %142 = mul i32 %136, %140
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %137, 10
  %146 = xor i1 %144, true
  %147 = xor i1 %145, true
  %148 = xor i1 false, true
  %149 = and i1 %146, false
  %150 = and i1 %144, %148
  %151 = and i1 %147, false
  %152 = and i1 %145, %148
  %153 = or i1 %149, %150
  %154 = or i1 %151, %152
  %155 = xor i1 %153, %154
  %156 = or i1 %146, %147
  %157 = xor i1 %156, true
  %158 = or i1 false, %148
  %159 = and i1 %157, %158
  %160 = or i1 %155, %159
  %161 = or i1 %144, %145
  br i1 %160, label %162, label %345

; <label>:162:                                    ; preds = %135, %345
  %163 = load i32, i32* @x.353
  %164 = load i32, i32* @y.354
  %165 = add i32 %163, 1137686912
  %166 = sub i32 %165, 1
  %167 = sub i32 %166, 1137686912
  %168 = sub i32 %163, 1
  %169 = mul i32 %163, %167
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %164, 10
  %173 = xor i1 %171, true
  %174 = xor i1 %172, true
  %175 = xor i1 false, true
  %176 = and i1 %173, false
  %177 = and i1 %171, %175
  %178 = and i1 %174, false
  %179 = and i1 %172, %175
  %180 = or i1 %176, %177
  %181 = or i1 %178, %179
  %182 = xor i1 %180, %181
  %183 = or i1 %173, %174
  %184 = xor i1 %183, true
  %185 = or i1 false, %175
  %186 = and i1 %184, %185
  %187 = or i1 %182, %186
  %188 = or i1 %171, %172
  br i1 %187, label %189, label %345

; <label>:189:                                    ; preds = %162
  invoke void @__cxa_rethrow() #12
          to label %339 unwind label %190

; <label>:190:                                    ; preds = %189, %134, %78
  %191 = load i32, i32* @x.353
  %192 = load i32, i32* @y.354
  %193 = sub i32 0, 1
  %194 = add i32 %191, %193
  %195 = sub i32 %191, 1
  %196 = mul i32 %191, %194
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %192, 10
  %200 = xor i1 %198, true
  %201 = xor i1 %199, true
  %202 = xor i1 true, true
  %203 = and i1 %200, true
  %204 = and i1 %198, %202
  %205 = and i1 %201, true
  %206 = and i1 %199, %202
  %207 = or i1 %203, %204
  %208 = or i1 %205, %206
  %209 = xor i1 %207, %208
  %210 = or i1 %200, %201
  %211 = xor i1 %210, true
  %212 = or i1 true, %202
  %213 = and i1 %211, %212
  %214 = or i1 %209, %213
  %215 = or i1 %198, %199
  br i1 %214, label %216, label %346

; <label>:216:                                    ; preds = %190, %346
  %217 = landingpad { i8*, i32 }
          cleanup
  %218 = extractvalue { i8*, i32 } %217, 0
  store i8* %218, i8** %8, align 8
  %219 = extractvalue { i8*, i32 } %217, 1
  store i32 %219, i32* %9, align 4
  %220 = load i32, i32* @x.353
  %221 = load i32, i32* @y.354
  %222 = sub i32 %220, 1448494718
  %223 = sub i32 %222, 1
  %224 = add i32 %223, 1448494718
  %225 = sub i32 %220, 1
  %226 = mul i32 %220, %224
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %221, 10
  %230 = and i1 %228, %229
  %231 = xor i1 %228, %229
  %232 = or i1 %230, %231
  %233 = or i1 %228, %229
  br i1 %232, label %234, label %346

; <label>:234:                                    ; preds = %216
  invoke void @__cxa_end_catch()
          to label %235 unwind label %336

; <label>:235:                                    ; preds = %234
  %236 = load i32, i32* @x.353
  %237 = load i32, i32* @y.354
  %238 = sub i32 0, 1
  %239 = add i32 %236, %238
  %240 = sub i32 %236, 1
  %241 = mul i32 %236, %239
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %237, 10
  %245 = and i1 %243, %244
  %246 = xor i1 %243, %244
  %247 = or i1 %245, %246
  %248 = or i1 %243, %244
  br i1 %247, label %249, label %350

; <label>:249:                                    ; preds = %235, %350
  %250 = load i32, i32* @x.353
  %251 = load i32, i32* @y.354
  %252 = sub i32 0, 1
  %253 = add i32 %250, %252
  %254 = sub i32 %250, 1
  %255 = mul i32 %250, %253
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %251, 10
  %259 = xor i1 %257, true
  %260 = xor i1 %258, true
  %261 = xor i1 true, true
  %262 = and i1 %259, true
  %263 = and i1 %257, %261
  %264 = and i1 %260, true
  %265 = and i1 %258, %261
  %266 = or i1 %262, %263
  %267 = or i1 %264, %265
  %268 = xor i1 %266, %267
  %269 = or i1 %259, %260
  %270 = xor i1 %269, true
  %271 = or i1 true, %261
  %272 = and i1 %270, %271
  %273 = or i1 %268, %272
  %274 = or i1 %257, %258
  br i1 %273, label %275, label %350

; <label>:275:                                    ; preds = %249
  br label %331
                                                  ; No predecessors!
  %277 = load i32, i32* @x.353
  %278 = load i32, i32* @y.354
  %279 = add i32 %277, 1916135863
  %280 = sub i32 %279, 1
  %281 = sub i32 %280, 1916135863
  %282 = sub i32 %277, 1
  %283 = mul i32 %277, %281
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %278, 10
  %287 = xor i1 %285, true
  %288 = xor i1 %286, true
  %289 = xor i1 false, true
  %290 = and i1 %287, false
  %291 = and i1 %285, %289
  %292 = and i1 %288, false
  %293 = and i1 %286, %289
  %294 = or i1 %290, %291
  %295 = or i1 %292, %293
  %296 = xor i1 %294, %295
  %297 = or i1 %287, %288
  %298 = xor i1 %297, true
  %299 = or i1 false, %289
  %300 = and i1 %298, %299
  %301 = or i1 %296, %300
  %302 = or i1 %285, %286
  br i1 %301, label %303, label %351

; <label>:303:                                    ; preds = %276, %351
  call void @llvm.trap()
  %304 = load i32, i32* @x.353
  %305 = load i32, i32* @y.354
  %306 = sub i32 %304, -1586253136
  %307 = sub i32 %306, 1
  %308 = add i32 %307, -1586253136
  %309 = sub i32 %304, 1
  %310 = mul i32 %304, %308
  %311 = urem i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %305, 10
  %314 = xor i1 %312, true
  %315 = xor i1 %313, true
  %316 = xor i1 false, true
  %317 = and i1 %314, false
  %318 = and i1 %312, %316
  %319 = and i1 %315, false
  %320 = and i1 %313, %316
  %321 = or i1 %317, %318
  %322 = or i1 %319, %320
  %323 = xor i1 %321, %322
  %324 = or i1 %314, %315
  %325 = xor i1 %324, true
  %326 = or i1 false, %316
  %327 = and i1 %325, %326
  %328 = or i1 %323, %327
  %329 = or i1 %312, %313
  br i1 %328, label %330, label %351

; <label>:330:                                    ; preds = %303
  unreachable

; <label>:331:                                    ; preds = %275
  %332 = load i8*, i8** %8, align 8
  %333 = load i32, i32* %9, align 4
  %334 = insertvalue { i8*, i32 } undef, i8* %332, 0
  %335 = insertvalue { i8*, i32 } %334, i32 %333, 1
  resume { i8*, i32 } %335

; <label>:336:                                    ; preds = %234
  %337 = landingpad { i8*, i32 }
          catch i8* null
  %338 = extractvalue { i8*, i32 } %337, 0
  call void @__clang_call_terminate(i8* %338) #11
  unreachable

; <label>:339:                                    ; preds = %189
  unreachable

; <label>:340:                                    ; preds = %49, %35
  %341 = load i8*, i8** %8, align 8
  %342 = call i8* @__cxa_begin_catch(i8* %341) #3
  br label %49

; <label>:343:                                    ; preds = %106, %80
  %344 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %5, align 8
  br label %106

; <label>:345:                                    ; preds = %162, %135
  br label %162

; <label>:346:                                    ; preds = %216, %190
  %347 = landingpad { i8*, i32 }
          cleanup
  %348 = extractvalue { i8*, i32 } %347, 0
  store i8* %348, i8** %8, align 8
  %349 = extractvalue { i8*, i32 } %347, 1
  store i32 %349, i32* %9, align 4
  br label %216

; <label>:350:                                    ; preds = %249, %235
  br label %249

; <label>:351:                                    ; preds = %303, %276
  call void @llvm.trap()
  br label %303
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair"* @_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKixEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node_value_base"*, align 8
  store %"struct.std::__detail::_Hash_node_value_base"* %0, %"struct.std::__detail::_Hash_node_value_base"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node_value_base"*, %"struct.std::__detail::_Hash_node_value_base"** %2, align 8
  %4 = call %"struct.std::pair"* @_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"* %3) #3
  ret %"struct.std::pair"* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE8allocateERS6_m(%"class.std::allocator.9"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.9"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %3, align 8
  %6 = bitcast %"class.std::allocator.9"* %5 to %"class.__gnu_cxx::new_allocator.10"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::__detail::_Hash_node"* @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.10"* %6, i64 %7, i8* null)
  ret %"struct.std::__detail::_Hash_node"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail10_Hash_nodeISt4pairIKixELb0EEC2Ev(%"struct.std::__detail::_Hash_node"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.359
  %5 = load i32, i32* @y.360
  %6 = sub i32 %4, -414566073
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -414566073
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -2139536998, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %50
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2139536998, label %18
    i32 -451636293, label %26
    i32 1649815846, label %45
    i32 -1491045922, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %50

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -451636293, i32 -1491045922
  store i32 %25, i32* %14
  br label %50

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_node"* %0, %"struct.std::__detail::_Hash_node"** %27, align 8
  %28 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %27, align 8
  %29 = bitcast %"struct.std::__detail::_Hash_node"* %28 to %"struct.std::__detail::_Hash_node_value_base"*
  call void @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEEC2Ev(%"struct.std::__detail::_Hash_node_value_base"* %29) #3
  %30 = load i32, i32* @x.359
  %31 = load i32, i32* @y.360
  %32 = add i32 %30, 540736525
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 540736525
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 1649815846, i32 -1491045922
  store i32 %44, i32* %14
  br label %50

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_node"* %0, %"struct.std::__detail::_Hash_node"** %47, align 8
  %48 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %47, align 8
  %49 = bitcast %"struct.std::__detail::_Hash_node"* %48 to %"struct.std::__detail::_Hash_node_value_base"*
  call void @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEEC2Ev(%"struct.std::__detail::_Hash_node_value_base"* %49) #3
  store i32 -451636293, i32* %14
  br label %50

; <label>:50:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIKixEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_(%"class.std::allocator.12"* dereferenceable(1), %"struct.std::pair"*, %"struct.std::pair"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.361
  %7 = load i32, i32* @y.362
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -300226047, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -300226047, label %19
    i32 174270449, label %27
    i32 1265624833, label %63
    i32 -867849756, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 174270449, i32 -867849756
  store i32 %26, i32* %15
  br label %73

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.12"*, align 8
  %29 = alloca %"struct.std::pair"*, align 8
  %30 = alloca %"struct.std::pair"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %28, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %29, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %30, align 8
  %31 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %28, align 8
  %32 = bitcast %"class.std::allocator.12"* %31 to %"class.__gnu_cxx::new_allocator.13"*
  %33 = load %"struct.std::pair"*, %"struct.std::pair"** %29, align 8
  %34 = load %"struct.std::pair"*, %"struct.std::pair"** %30, align 8
  %35 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIKixEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair"* dereferenceable(16) %34) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIKixEE9constructIS3_JRKS3_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.13"* %32, %"struct.std::pair"* %33, %"struct.std::pair"* dereferenceable(16) %35)
  %36 = load i32, i32* @x.361
  %37 = load i32, i32* @y.362
  %38 = sub i32 %36, -1214662867
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -1214662867
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 1265624833, i32 -867849756
  store i32 %62, i32* %15
  br label %73

; <label>:63:                                     ; preds = %16
  ret void

; <label>:64:                                     ; preds = %16
  %65 = alloca %"class.std::allocator.12"*, align 8
  %66 = alloca %"struct.std::pair"*, align 8
  %67 = alloca %"struct.std::pair"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %65, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %66, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %67, align 8
  %68 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %65, align 8
  %69 = bitcast %"class.std::allocator.12"* %68 to %"class.__gnu_cxx::new_allocator.13"*
  %70 = load %"struct.std::pair"*, %"struct.std::pair"** %66, align 8
  %71 = load %"struct.std::pair"*, %"struct.std::pair"** %67, align 8
  %72 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIKixEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair"* dereferenceable(16) %71) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIKixEE9constructIS3_JRKS3_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.13"* %69, %"struct.std::pair"* %70, %"struct.std::pair"* dereferenceable(16) %72)
  store i32 174270449, i32* %15
  br label %73

; <label>:73:                                     ; preds = %64, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIKixEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair"* dereferenceable(16)) #4 comdat {
  %2 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %2, align 8
  %3 = load %"struct.std::pair"*, %"struct.std::pair"** %2, align 8
  ret %"struct.std::pair"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.10"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.365
  %9 = load i32, i32* @y.366
  %10 = add i32 %8, 950860648
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 950860648
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -396028098, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %96
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -396028098, label %22
    i32 814772728, label %42
    i32 -244348097, label %78
    i32 -2083186408, label %81
    i32 92672420, label %82
    i32 -440152983, label %88
  ]

; <label>:21:                                     ; preds = %19
  br label %96

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 814772728, i32 -440152983
  store i32 %41, i32* %18
  br label %96

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %44 = alloca i64, align 8
  store i64* %44, i64** %5
  %45 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %43, align 8
  %46 = load volatile i64*, i64** %5
  store i64 %1, i64* %46, align 8
  store i8* %2, i8** %45, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %43, align 8
  %48 = load volatile i64*, i64** %5
  %49 = load i64, i64* %48, align 8
  %50 = call i64 @_ZNK9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.10"* %47) #3
  %51 = icmp ugt i64 %49, %50
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.365
  %53 = load i32, i32* @y.366
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 -244348097, i32 -440152983
  store i32 %77, i32* %18
  br label %96

; <label>:78:                                     ; preds = %19
  %79 = load volatile i1, i1* %4
  %80 = select i1 %79, i32 -2083186408, i32 92672420
  store i32 %80, i32* %18
  br label %96

; <label>:81:                                     ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:82:                                     ; preds = %19
  %83 = load volatile i64*, i64** %5
  %84 = load i64, i64* %83, align 8
  %85 = mul i64 %84, 24
  %86 = call i8* @_Znwm(i64 %85)
  %87 = bitcast i8* %86 to %"struct.std::__detail::_Hash_node"*
  ret %"struct.std::__detail::_Hash_node"* %87

; <label>:88:                                     ; preds = %19
  %89 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %90 = alloca i64, align 8
  %91 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %89, align 8
  store i64 %1, i64* %90, align 8
  store i8* %2, i8** %91, align 8
  %92 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %89, align 8
  %93 = load i64, i64* %90, align 8
  %94 = call i64 @_ZNK9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.10"* %92) #3
  %95 = icmp ugt i64 %93, %94
  store i32 814772728, i32* %18
  br label %96

; <label>:96:                                     ; preds = %88, %78, %42, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.10"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEEC2Ev(%"struct.std::__detail::_Hash_node_value_base"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.369
  %5 = load i32, i32* @y.370
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 368724272, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %62
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 368724272, label %17
    i32 228768269, label %25
    i32 197008781, label %56
    i32 746696437, label %57
  ]

; <label>:16:                                     ; preds = %14
  br label %62

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 228768269, i32 746696437
  store i32 %24, i32* %13
  br label %62

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.std::__detail::_Hash_node_value_base"*, align 8
  store %"struct.std::__detail::_Hash_node_value_base"* %0, %"struct.std::__detail::_Hash_node_value_base"** %26, align 8
  %27 = load %"struct.std::__detail::_Hash_node_value_base"*, %"struct.std::__detail::_Hash_node_value_base"** %26, align 8
  %28 = bitcast %"struct.std::__detail::_Hash_node_value_base"* %27 to %"struct.std::__detail::_Hash_node_base"*
  call void @_ZNSt8__detail15_Hash_node_baseC2Ev(%"struct.std::__detail::_Hash_node_base"* %28) #3
  %29 = getelementptr inbounds %"struct.std::__detail::_Hash_node_value_base", %"struct.std::__detail::_Hash_node_value_base"* %27, i32 0, i32 1
  %30 = load i32, i32* @x.369
  %31 = load i32, i32* @y.370
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 197008781, i32 746696437
  store i32 %55, i32* %13
  br label %62

; <label>:56:                                     ; preds = %14
  ret void

; <label>:57:                                     ; preds = %14
  %58 = alloca %"struct.std::__detail::_Hash_node_value_base"*, align 8
  store %"struct.std::__detail::_Hash_node_value_base"* %0, %"struct.std::__detail::_Hash_node_value_base"** %58, align 8
  %59 = load %"struct.std::__detail::_Hash_node_value_base"*, %"struct.std::__detail::_Hash_node_value_base"** %58, align 8
  %60 = bitcast %"struct.std::__detail::_Hash_node_value_base"* %59 to %"struct.std::__detail::_Hash_node_base"*
  call void @_ZNSt8__detail15_Hash_node_baseC2Ev(%"struct.std::__detail::_Hash_node_base"* %60) #3
  %61 = getelementptr inbounds %"struct.std::__detail::_Hash_node_value_base", %"struct.std::__detail::_Hash_node_value_base"* %59, i32 0, i32 1
  store i32 228768269, i32* %13
  br label %62

; <label>:62:                                     ; preds = %57, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIKixEE9constructIS3_JRKS3_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.13"*, %"struct.std::pair"*, %"struct.std::pair"* dereferenceable(16)) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.371
  %7 = load i32, i32* @y.372
  %8 = sub i32 %6, -308532415
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -308532415
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1542314453, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %79
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1542314453, label %20
    i32 688823528, label %28
    i32 -1850807755, label %66
    i32 -180407496, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %79

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 688823528, i32 -180407496
  store i32 %27, i32* %16
  br label %79

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  %30 = alloca %"struct.std::pair"*, align 8
  %31 = alloca %"struct.std::pair"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %29, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %30, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %29, align 8
  %33 = load %"struct.std::pair"*, %"struct.std::pair"** %30, align 8
  %34 = bitcast %"struct.std::pair"* %33 to i8*
  %35 = bitcast i8* %34 to %"struct.std::pair"*
  %36 = load %"struct.std::pair"*, %"struct.std::pair"** %31, align 8
  %37 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIKixEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair"* dereferenceable(16) %36) #3
  %38 = bitcast %"struct.std::pair"* %35 to i8*
  %39 = bitcast %"struct.std::pair"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 16, i32 8, i1 false)
  %40 = load i32, i32* @x.371
  %41 = load i32, i32* @y.372
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 -1850807755, i32 -180407496
  store i32 %65, i32* %16
  br label %79

; <label>:66:                                     ; preds = %17
  ret void

; <label>:67:                                     ; preds = %17
  %68 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  %69 = alloca %"struct.std::pair"*, align 8
  %70 = alloca %"struct.std::pair"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %68, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %69, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %70, align 8
  %71 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %68, align 8
  %72 = load %"struct.std::pair"*, %"struct.std::pair"** %69, align 8
  %73 = bitcast %"struct.std::pair"* %72 to i8*
  %74 = bitcast i8* %73 to %"struct.std::pair"*
  %75 = load %"struct.std::pair"*, %"struct.std::pair"** %70, align 8
  %76 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIKixEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair"* dereferenceable(16) %75) #3
  %77 = bitcast %"struct.std::pair"* %74 to i8*
  %78 = bitcast %"struct.std::pair"* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %77, i8* %78, i64 16, i32 8, i1 false)
  store i32 688823528, i32* %16
  br label %79

; <label>:79:                                     ; preds = %67, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"* @_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node_value_base"*, align 8
  store %"struct.std::__detail::_Hash_node_value_base"* %0, %"struct.std::__detail::_Hash_node_value_base"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node_value_base"*, %"struct.std::__detail::_Hash_node_value_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::__detail::_Hash_node_value_base", %"struct.std::__detail::_Hash_node_value_base"* %3, i32 0, i32 1
  %5 = call %"struct.std::pair"* @_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKixEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_buffer"* %4) #3
  ret %"struct.std::pair"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"* @_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKixEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_buffer"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_buffer"*, align 8
  store %"struct.__gnu_cxx::__aligned_buffer"* %0, %"struct.__gnu_cxx::__aligned_buffer"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_buffer"*, %"struct.__gnu_cxx::__aligned_buffer"** %2, align 8
  %4 = call i8* @_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKixEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_buffer"* %3) #3
  %5 = bitcast i8* %4 to %"struct.std::pair"*
  ret %"struct.std::pair"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKixEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_buffer"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_buffer"*, align 8
  store %"struct.__gnu_cxx::__aligned_buffer"* %0, %"struct.__gnu_cxx::__aligned_buffer"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_buffer"*, %"struct.__gnu_cxx::__aligned_buffer"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_buffer", %"struct.__gnu_cxx::__aligned_buffer"* %3, i32 0, i32 0
  %5 = bitcast %"union.std::aligned_storage<16, 8>::type"* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE15_M_bucket_indexEPKNS_10_Hash_nodeIS3_Lb0EEEm(%"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_node"*, i64) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %4, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %4, align 8
  %8 = invoke dereferenceable(1) %"struct.std::__detail::_Mod_range_hashing"* @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE5_M_h2Ev(%"struct.std::__detail::_Hash_code_base"* %7)
          to label %9 unwind label %76

; <label>:9:                                      ; preds = %3
  %10 = invoke dereferenceable(1) %"struct.std::hash"* @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE5_M_h1Ev(%"struct.std::__detail::_Hash_code_base"* %7)
          to label %11 unwind label %76

; <label>:11:                                     ; preds = %9
  %12 = load i32, i32* @x.379
  %13 = load i32, i32* @y.380
  %14 = sub i32 0, 1
  %15 = add i32 %12, %14
  %16 = sub i32 %12, 1
  %17 = mul i32 %12, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %13, 10
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  br i1 %35, label %37, label %79

; <label>:37:                                     ; preds = %11, %79
  %38 = load i32, i32* @x.379
  %39 = load i32, i32* @y.380
  %40 = add i32 %38, 1893191040
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 1893191040
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  br i1 %62, label %64, label %79

; <label>:64:                                     ; preds = %37
  %65 = invoke dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE10_M_extractEv(%"struct.std::__detail::_Hash_code_base"* %7)
          to label %66 unwind label %76

; <label>:66:                                     ; preds = %64
  %67 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %5, align 8
  %68 = bitcast %"struct.std::__detail::_Hash_node"* %67 to %"struct.std::__detail::_Hash_node_value_base"*
  %69 = call dereferenceable(16) %"struct.std::pair"* @_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKixEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base"* %68) #3
  %70 = invoke dereferenceable(4) i32* @_ZNKSt8__detail10_Select1stclIRKSt4pairIKixEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS7_(%"struct.std::__detail::_Select1st"* %65, %"struct.std::pair"* dereferenceable(16) %69)
          to label %71 unwind label %76

; <label>:71:                                     ; preds = %66
  %72 = load i32, i32* %70, align 4
  %73 = call i64 @_ZNKSt4hashIiEclEi(%"struct.std::hash"* %10, i32 %72) #3
  %74 = load i64, i64* %6, align 8
  %75 = call i64 @_ZNKSt8__detail18_Mod_range_hashingclEmm(%"struct.std::__detail::_Mod_range_hashing"* %8, i64 %73, i64 %74) #3
  ret i64 %75

; <label>:76:                                     ; preds = %66, %64, %9, %3
  %77 = landingpad { i8*, i32 }
          catch i8* null
  %78 = extractvalue { i8*, i32 } %77, 0
  call void @__clang_call_terminate(i8* %78) #11
  unreachable

; <label>:79:                                     ; preds = %37, %11
  br label %37
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(1) %"struct.std::__detail::_Mod_range_hashing"* @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE5_M_h2Ev(%"struct.std::__detail::_Hash_code_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hash_code_base"* %3 to %"struct.std::__detail::_Hashtable_ebo_helper.6"*
  %5 = call dereferenceable(1) %"struct.std::__detail::_Mod_range_hashing"* @_ZNSt8__detail21_Hashtable_ebo_helperILi2ENS_18_Mod_range_hashingELb1EE7_S_cgetERKS2_(%"struct.std::__detail::_Hashtable_ebo_helper.6"* dereferenceable(1) %4)
  ret %"struct.std::__detail::_Mod_range_hashing"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt8__detail18_Mod_range_hashingclEmm(%"struct.std::__detail::_Mod_range_hashing"*, i64, i64) #4 comdat align 2 {
  %4 = alloca %"struct.std::__detail::_Mod_range_hashing"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store %"struct.std::__detail::_Mod_range_hashing"* %0, %"struct.std::__detail::_Mod_range_hashing"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::__detail::_Mod_range_hashing"*, %"struct.std::__detail::_Mod_range_hashing"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i64, i64* %6, align 8
  %10 = urem i64 %8, %9
  ret i64 %10
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(1) %"struct.std::hash"* @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE5_M_h1Ev(%"struct.std::__detail::_Hash_code_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::hash"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.385
  %6 = load i32, i32* @y.386
  %7 = sub i32 %5, -1493504712
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1493504712
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 993901110, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %53
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 993901110, label %19
    i32 1949296908, label %27
    i32 -1161467322, label %46
    i32 792564204, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %53

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1949296908, i32 792564204
  store i32 %26, i32* %15
  br label %53

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %28, align 8
  %29 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %28, align 8
  %30 = bitcast %"struct.std::__detail::_Hash_code_base"* %29 to %"struct.std::__detail::_Hashtable_ebo_helper.5"*
  %31 = call dereferenceable(1) %"struct.std::hash"* @_ZNSt8__detail21_Hashtable_ebo_helperILi1ESt4hashIiELb1EE7_S_cgetERKS3_(%"struct.std::__detail::_Hashtable_ebo_helper.5"* dereferenceable(1) %30)
  store %"struct.std::hash"* %31, %"struct.std::hash"** %2
  %32 = load i32, i32* @x.385
  %33 = load i32, i32* @y.386
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -1161467322, i32 792564204
  store i32 %45, i32* %15
  br label %53

; <label>:46:                                     ; preds = %16
  %47 = load volatile %"struct.std::hash"*, %"struct.std::hash"** %2
  ret %"struct.std::hash"* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %49, align 8
  %50 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %49, align 8
  %51 = bitcast %"struct.std::__detail::_Hash_code_base"* %50 to %"struct.std::__detail::_Hashtable_ebo_helper.5"*
  %52 = call dereferenceable(1) %"struct.std::hash"* @_ZNSt8__detail21_Hashtable_ebo_helperILi1ESt4hashIiELb1EE7_S_cgetERKS3_(%"struct.std::__detail::_Hashtable_ebo_helper.5"* dereferenceable(1) %51)
  store i32 1949296908, i32* %15
  br label %53

; <label>:53:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt4hashIiEclEi(%"struct.std::hash"*, i32) #4 comdat align 2 {
  %3 = alloca %"struct.std::hash"*, align 8
  %4 = alloca i32, align 4
  store %"struct.std::hash"* %0, %"struct.std::hash"** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %"struct.std::hash"*, %"struct.std::hash"** %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = sext i32 %6 to i64
  ret i64 %7
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE10_M_extractEv(%"struct.std::__detail::_Hash_code_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hash_code_base"* %3 to %"struct.std::__detail::_Hashtable_ebo_helper"*
  %5 = call dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_10_Select1stELb1EE7_S_cgetERKS2_(%"struct.std::__detail::_Hashtable_ebo_helper"* dereferenceable(1) %4)
  ret %"struct.std::__detail::_Select1st"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNKSt8__detail10_Select1stclIRKSt4pairIKixEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS7_(%"struct.std::__detail::_Select1st"*, %"struct.std::pair"* dereferenceable(16)) #4 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Select1st"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::__detail::_Select1st"* %0, %"struct.std::__detail::_Select1st"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"struct.std::__detail::_Select1st"*, %"struct.std::__detail::_Select1st"** %3, align 8
  %6 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %7 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIKixEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair"* dereferenceable(16) %6) #3
  %8 = call dereferenceable(4) i32* @_ZSt3getILm0EKixERKNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERKS5_(%"struct.std::pair"* dereferenceable(16) %7) #3
  ret i32* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::__detail::_Mod_range_hashing"* @_ZNSt8__detail21_Hashtable_ebo_helperILi2ENS_18_Mod_range_hashingELb1EE7_S_cgetERKS2_(%"struct.std::__detail::_Hashtable_ebo_helper.6"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.6"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.6"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.6"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_ebo_helper.6"*, %"struct.std::__detail::_Hashtable_ebo_helper.6"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.6"* %3 to %"struct.std::__detail::_Mod_range_hashing"*
  ret %"struct.std::__detail::_Mod_range_hashing"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::hash"* @_ZNSt8__detail21_Hashtable_ebo_helperILi1ESt4hashIiELb1EE7_S_cgetERKS3_(%"struct.std::__detail::_Hashtable_ebo_helper.5"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.5"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.5"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.5"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_ebo_helper.5"*, %"struct.std::__detail::_Hashtable_ebo_helper.5"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.5"* %3 to %"struct.std::hash"*
  ret %"struct.std::hash"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_10_Select1stELb1EE7_S_cgetERKS2_(%"struct.std::__detail::_Hashtable_ebo_helper"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Select1st"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.397
  %6 = load i32, i32* @y.398
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 991260155, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 991260155, label %18
    i32 -995393158, label %26
    i32 -1511037471, label %56
    i32 -1219435022, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -995393158, i32 -1219435022
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::__detail::_Hashtable_ebo_helper"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper"* %0, %"struct.std::__detail::_Hashtable_ebo_helper"** %27, align 8
  %28 = load %"struct.std::__detail::_Hashtable_ebo_helper"*, %"struct.std::__detail::_Hashtable_ebo_helper"** %27, align 8
  %29 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper"* %28 to %"struct.std::__detail::_Select1st"*
  store %"struct.std::__detail::_Select1st"* %29, %"struct.std::__detail::_Select1st"** %2
  %30 = load i32, i32* @x.397
  %31 = load i32, i32* @y.398
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -1511037471, i32 -1219435022
  store i32 %55, i32* %14
  br label %62

; <label>:56:                                     ; preds = %15
  %57 = load volatile %"struct.std::__detail::_Select1st"*, %"struct.std::__detail::_Select1st"** %2
  ret %"struct.std::__detail::_Select1st"* %57

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.std::__detail::_Hashtable_ebo_helper"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper"* %0, %"struct.std::__detail::_Hashtable_ebo_helper"** %59, align 8
  %60 = load %"struct.std::__detail::_Hashtable_ebo_helper"*, %"struct.std::__detail::_Hashtable_ebo_helper"** %59, align 8
  %61 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper"* %60 to %"struct.std::__detail::_Select1st"*
  store i32 -995393158, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3getILm0EKixERKNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERKS5_(%"struct.std::pair"* dereferenceable(16)) #4 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.399
  %6 = load i32, i32* @y.400
  %7 = sub i32 %5, 1284755228
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1284755228
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -585215260, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %76
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -585215260, label %19
    i32 1891445613, label %39
    i32 -1674994837, label %70
    i32 755791782, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %76

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1891445613, i32 755791782
  store i32 %38, i32* %15
  br label %76

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %40, align 8
  %41 = load %"struct.std::pair"*, %"struct.std::pair"** %40, align 8
  %42 = call dereferenceable(4) i32* @_ZNSt10__pair_getILm0EE11__const_getIKixEERKT_RKSt4pairIS3_T0_E(%"struct.std::pair"* dereferenceable(16) %41) #3
  store i32* %42, i32** %2
  %43 = load i32, i32* @x.399
  %44 = load i32, i32* @y.400
  %45 = add i32 %43, -614488665
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -614488665
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -1674994837, i32 755791782
  store i32 %69, i32* %15
  br label %76

; <label>:70:                                     ; preds = %16
  %71 = load volatile i32*, i32** %2
  ret i32* %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %73, align 8
  %74 = load %"struct.std::pair"*, %"struct.std::pair"** %73, align 8
  %75 = call dereferenceable(4) i32* @_ZNSt10__pair_getILm0EE11__const_getIKixEERKT_RKSt4pairIS3_T0_E(%"struct.std::pair"* dereferenceable(16) %74) #3
  store i32 1891445613, i32* %15
  br label %76

; <label>:76:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt10__pair_getILm0EE11__const_getIKixEERKT_RKSt4pairIS3_T0_E(%"struct.std::pair"* dereferenceable(16)) #4 comdat align 2 {
  %2 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %2, align 8
  %3 = load %"struct.std::pair"*, %"struct.std::pair"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %3, i32 0, i32 0
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEC2ERKSC_(%"class.__gnu_cxx::__normal_iterator.18"*, %"class.std::unordered_map"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.18"*, align 8
  %4 = alloca %"class.std::unordered_map"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.18"* %0, %"class.__gnu_cxx::__normal_iterator.18"** %3, align 8
  store %"class.std::unordered_map"** %1, %"class.std::unordered_map"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.18"*, %"class.__gnu_cxx::__normal_iterator.18"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %5, i32 0, i32 0
  %7 = load %"class.std::unordered_map"**, %"class.std::unordered_map"*** %4, align 8
  %8 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  store %"class.std::unordered_map"* %8, %"class.std::unordered_map"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEEvT_SH_(%"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %3, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %7, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %4, i32 0, i32 0
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %8, align 8
  %9 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %5 to i8*
  %10 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 8, i32 8, i1 false)
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %6 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %5, i32 0, i32 0
  %14 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %13, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %6, i32 0, i32 0
  %16 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %15, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISD_SaISD_EEEEEEvT_SJ_(%"class.std::unordered_map"* %14, %"class.std::unordered_map"* %16)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISD_SaISD_EEEEEEvT_SJ_(%"class.std::unordered_map"*, %"class.std::unordered_map"*) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %4, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %6, align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %5, i32 0, i32 0
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %7, align 8
  %8 = alloca i32
  store i32 4532347, i32* %8
  br label %9

; <label>:9:                                      ; preds = %2, %214
  %10 = load i32, i32* %8
  switch i32 %10, label %11 [
    i32 4532347, label %12
    i32 -1267088751, label %40
    i32 -196828258, label %69
    i32 -1431909694, label %72
    i32 60350747, label %99
    i32 -501193430, label %117
    i32 -772357272, label %118
    i32 -12328366, label %134
    i32 -1788672151, label %162
    i32 1975097778, label %163
    i32 1869136013, label %190
    i32 -1346946625, label %205
    i32 1640034380, label %206
    i32 -983158249, label %208
    i32 163830255, label %211
    i32 -1641713774, label %213
  ]

; <label>:11:                                     ; preds = %9
  br label %214

; <label>:12:                                     ; preds = %9
  %13 = load i32, i32* @x.407
  %14 = load i32, i32* @y.408
  %15 = add i32 %13, 318578694
  %16 = sub i32 %15, 1
  %17 = sub i32 %16, 318578694
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %14, 10
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1267088751, i32 1640034380
  store i32 %39, i32* %8
  br label %214

; <label>:40:                                     ; preds = %9
  %41 = call zeroext i1 @_ZN9__gnu_cxxneIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEEbRKNS_17__normal_iteratorIT_T0_EESK_(%"class.__gnu_cxx::__normal_iterator.19"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.19"* dereferenceable(8) %5) #3
  store i1 %41, i1* %3
  %42 = load i32, i32* @x.407
  %43 = load i32, i32* @y.408
  %44 = add i32 %42, 1156763488
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 1156763488
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -196828258, i32 1640034380
  store i32 %68, i32* %8
  br label %214

; <label>:69:                                     ; preds = %9
  %70 = load volatile i1, i1* %3
  %71 = select i1 %70, i32 -1431909694, i32 1975097778
  store i32 %71, i32* %8
  br label %214

; <label>:72:                                     ; preds = %9
  %73 = load i32, i32* @x.407
  %74 = load i32, i32* @y.408
  %75 = sub i32 0, 1
  %76 = add i32 %73, %75
  %77 = sub i32 %73, 1
  %78 = mul i32 %73, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %74, 10
  %82 = xor i1 %80, true
  %83 = xor i1 %81, true
  %84 = xor i1 false, true
  %85 = and i1 %82, false
  %86 = and i1 %80, %84
  %87 = and i1 %83, false
  %88 = and i1 %81, %84
  %89 = or i1 %85, %86
  %90 = or i1 %87, %88
  %91 = xor i1 %89, %90
  %92 = or i1 %82, %83
  %93 = xor i1 %92, true
  %94 = or i1 false, %84
  %95 = and i1 %93, %94
  %96 = or i1 %91, %95
  %97 = or i1 %80, %81
  %98 = select i1 %96, i32 60350747, i32 -983158249
  store i32 %98, i32* %8
  br label %214

; <label>:99:                                     ; preds = %9
  %100 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.19"* %4) #3
  %101 = call %"class.std::unordered_map"* @_ZSt11__addressofISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEPT_RSA_(%"class.std::unordered_map"* dereferenceable(56) %100) #3
  call void @_ZSt8_DestroyISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvPT_(%"class.std::unordered_map"* %101)
  %102 = load i32, i32* @x.407
  %103 = load i32, i32* @y.408
  %104 = add i32 %102, 499416815
  %105 = sub i32 %104, 1
  %106 = sub i32 %105, 499416815
  %107 = sub i32 %102, 1
  %108 = mul i32 %102, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %103, 10
  %112 = and i1 %110, %111
  %113 = xor i1 %110, %111
  %114 = or i1 %112, %113
  %115 = or i1 %110, %111
  %116 = select i1 %114, i32 -501193430, i32 -983158249
  store i32 %116, i32* %8
  br label %214

; <label>:117:                                    ; preds = %9
  store i32 -772357272, i32* %8
  br label %214

; <label>:118:                                    ; preds = %9
  %119 = load i32, i32* @x.407
  %120 = load i32, i32* @y.408
  %121 = add i32 %119, -414293616
  %122 = sub i32 %121, 1
  %123 = sub i32 %122, -414293616
  %124 = sub i32 %119, 1
  %125 = mul i32 %119, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %120, 10
  %129 = and i1 %127, %128
  %130 = xor i1 %127, %128
  %131 = or i1 %129, %130
  %132 = or i1 %127, %128
  %133 = select i1 %131, i32 -12328366, i32 163830255
  store i32 %133, i32* %8
  br label %214

; <label>:134:                                    ; preds = %9
  %135 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.19"* @_ZN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEppEv(%"class.__gnu_cxx::__normal_iterator.19"* %4) #3
  %136 = load i32, i32* @x.407
  %137 = load i32, i32* @y.408
  %138 = sub i32 0, 1
  %139 = add i32 %136, %138
  %140 = sub i32 %136, 1
  %141 = mul i32 %136, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %137, 10
  %145 = xor i1 %143, true
  %146 = xor i1 %144, true
  %147 = xor i1 true, true
  %148 = and i1 %145, true
  %149 = and i1 %143, %147
  %150 = and i1 %146, true
  %151 = and i1 %144, %147
  %152 = or i1 %148, %149
  %153 = or i1 %150, %151
  %154 = xor i1 %152, %153
  %155 = or i1 %145, %146
  %156 = xor i1 %155, true
  %157 = or i1 true, %147
  %158 = and i1 %156, %157
  %159 = or i1 %154, %158
  %160 = or i1 %143, %144
  %161 = select i1 %159, i32 -1788672151, i32 163830255
  store i32 %161, i32* %8
  br label %214

; <label>:162:                                    ; preds = %9
  store i32 4532347, i32* %8
  br label %214

; <label>:163:                                    ; preds = %9
  %164 = load i32, i32* @x.407
  %165 = load i32, i32* @y.408
  %166 = sub i32 0, 1
  %167 = add i32 %164, %166
  %168 = sub i32 %164, 1
  %169 = mul i32 %164, %167
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %165, 10
  %173 = xor i1 %171, true
  %174 = xor i1 %172, true
  %175 = xor i1 true, true
  %176 = and i1 %173, true
  %177 = and i1 %171, %175
  %178 = and i1 %174, true
  %179 = and i1 %172, %175
  %180 = or i1 %176, %177
  %181 = or i1 %178, %179
  %182 = xor i1 %180, %181
  %183 = or i1 %173, %174
  %184 = xor i1 %183, true
  %185 = or i1 true, %175
  %186 = and i1 %184, %185
  %187 = or i1 %182, %186
  %188 = or i1 %171, %172
  %189 = select i1 %187, i32 1869136013, i32 -1641713774
  store i32 %189, i32* %8
  br label %214

; <label>:190:                                    ; preds = %9
  %191 = load i32, i32* @x.407
  %192 = load i32, i32* @y.408
  %193 = sub i32 0, 1
  %194 = add i32 %191, %193
  %195 = sub i32 %191, 1
  %196 = mul i32 %191, %194
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %192, 10
  %200 = and i1 %198, %199
  %201 = xor i1 %198, %199
  %202 = or i1 %200, %201
  %203 = or i1 %198, %199
  %204 = select i1 %202, i32 -1346946625, i32 -1641713774
  store i32 %204, i32* %8
  br label %214

; <label>:205:                                    ; preds = %9
  ret void

; <label>:206:                                    ; preds = %9
  %207 = call zeroext i1 @_ZN9__gnu_cxxneIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEEbRKNS_17__normal_iteratorIT_T0_EESK_(%"class.__gnu_cxx::__normal_iterator.19"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.19"* dereferenceable(8) %5) #3
  store i32 -1267088751, i32* %8
  br label %214

; <label>:208:                                    ; preds = %9
  %209 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.19"* %4) #3
  %210 = call %"class.std::unordered_map"* @_ZSt11__addressofISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEPT_RSA_(%"class.std::unordered_map"* dereferenceable(56) %209) #3
  call void @_ZSt8_DestroyISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvPT_(%"class.std::unordered_map"* %210)
  store i32 60350747, i32* %8
  br label %214

; <label>:211:                                    ; preds = %9
  %212 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.19"* @_ZN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEppEv(%"class.__gnu_cxx::__normal_iterator.19"* %4) #3
  store i32 -12328366, i32* %8
  br label %214

; <label>:213:                                    ; preds = %9
  store i32 1869136013, i32* %8
  br label %214

; <label>:214:                                    ; preds = %213, %211, %208, %206, %190, %163, %162, %134, %118, %117, %99, %72, %69, %40, %12, %11
  br label %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEEbRKNS_17__normal_iteratorIT_T0_EESK_(%"class.__gnu_cxx::__normal_iterator.19"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.19"* dereferenceable(8)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.409
  %7 = load i32, i32* @y.410
  %8 = sub i32 %6, 216146975
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 216146975
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1443624756, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %65
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1443624756, label %20
    i32 4253826, label %28
    i32 -2044899978, label %53
    i32 -107386909, label %55
  ]

; <label>:19:                                     ; preds = %17
  br label %65

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 4253826, i32 -107386909
  store i32 %27, i32* %16
  br label %65

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.19"*, align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.19"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.19"* %0, %"class.__gnu_cxx::__normal_iterator.19"** %29, align 8
  store %"class.__gnu_cxx::__normal_iterator.19"* %1, %"class.__gnu_cxx::__normal_iterator.19"** %30, align 8
  %31 = load %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %29, align 8
  %32 = call dereferenceable(8) %"class.std::unordered_map"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.19"* %31) #3
  %33 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %32, align 8
  %34 = load %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %30, align 8
  %35 = call dereferenceable(8) %"class.std::unordered_map"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.19"* %34) #3
  %36 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %35, align 8
  %37 = icmp ne %"class.std::unordered_map"* %33, %36
  store i1 %37, i1* %3
  %38 = load i32, i32* @x.409
  %39 = load i32, i32* @y.410
  %40 = add i32 %38, 1552565493
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 1552565493
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -2044899978, i32 -107386909
  store i32 %52, i32* %16
  br label %65

; <label>:53:                                     ; preds = %17
  %54 = load volatile i1, i1* %3
  ret i1 %54

; <label>:55:                                     ; preds = %17
  %56 = alloca %"class.__gnu_cxx::__normal_iterator.19"*, align 8
  %57 = alloca %"class.__gnu_cxx::__normal_iterator.19"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.19"* %0, %"class.__gnu_cxx::__normal_iterator.19"** %56, align 8
  store %"class.__gnu_cxx::__normal_iterator.19"* %1, %"class.__gnu_cxx::__normal_iterator.19"** %57, align 8
  %58 = load %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %56, align 8
  %59 = call dereferenceable(8) %"class.std::unordered_map"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.19"* %58) #3
  %60 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %59, align 8
  %61 = load %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %57, align 8
  %62 = call dereferenceable(8) %"class.std::unordered_map"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.19"* %61) #3
  %63 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %62, align 8
  %64 = icmp ne %"class.std::unordered_map"* %60, %63
  store i32 4253826, i32* %16
  br label %65

; <label>:65:                                     ; preds = %55, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(56) %"class.std::unordered_map"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.19"*) #4 comdat align 2 {
  %2 = alloca %"class.std::unordered_map"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.411
  %6 = load i32, i32* @y.412
  %7 = sub i32 %5, -1236309648
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1236309648
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 324965752, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 324965752, label %19
    i32 2002702827, label %39
    i32 518286633, label %58
    i32 2035788818, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 2002702827, i32 2035788818
  store i32 %38, i32* %15
  br label %65

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.19"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.19"* %0, %"class.__gnu_cxx::__normal_iterator.19"** %40, align 8
  %41 = load %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %40, align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %41, i32 0, i32 0
  %43 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %42, align 8
  store %"class.std::unordered_map"* %43, %"class.std::unordered_map"** %2
  %44 = load i32, i32* @x.411
  %45 = load i32, i32* @y.412
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 518286633, i32 2035788818
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"class.std::unordered_map"*, %"class.std::unordered_map"** %2
  ret %"class.std::unordered_map"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.__gnu_cxx::__normal_iterator.19"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.19"* %0, %"class.__gnu_cxx::__normal_iterator.19"** %61, align 8
  %62 = load %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %61, align 8
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %62, i32 0, i32 0
  %64 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %63, align 8
  store i32 2002702827, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.19"* @_ZN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEppEv(%"class.__gnu_cxx::__normal_iterator.19"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.19"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.19"* %0, %"class.__gnu_cxx::__normal_iterator.19"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %3, i32 0, i32 0
  %5 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %6 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %5, i32 1
  store %"class.std::unordered_map"* %6, %"class.std::unordered_map"** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator.19"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::unordered_map"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.19"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.19"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.19"* %0, %"class.__gnu_cxx::__normal_iterator.19"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %3, i32 0, i32 0
  ret %"class.std::unordered_map"** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEENS1_IPSB_SG_EEET1_T0_SL_SK_(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %8 = alloca %"class.std::unordered_map"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %5, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %6, i32 0, i32 0
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %7, i32 0, i32 0
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %14, align 8
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %9 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %9, i32 0, i32 0
  %18 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %17, align 8
  %19 = call %"class.std::unordered_map"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEENSt11_Niter_baseIT_E13iterator_typeESJ_(%"class.std::unordered_map"* %18)
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %10 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %10, i32 0, i32 0
  %23 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %22, align 8
  %24 = call %"class.std::unordered_map"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEENSt11_Niter_baseIT_E13iterator_typeESJ_(%"class.std::unordered_map"* %23)
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %11 to i8*
  %26 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 8, i1 false)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %11, i32 0, i32 0
  %28 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %27, align 8
  %29 = call %"class.std::unordered_map"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEENSt11_Niter_baseIT_E13iterator_typeESI_(%"class.std::unordered_map"* %28)
  %30 = call %"class.std::unordered_map"* @_ZSt13__copy_move_aILb0EPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEPS9_ET1_T0_SE_SD_(%"class.std::unordered_map"* %19, %"class.std::unordered_map"* %24, %"class.std::unordered_map"* %29)
  store %"class.std::unordered_map"* %30, %"class.std::unordered_map"** %8, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEC2ERKSB_(%"class.__gnu_cxx::__normal_iterator.19"* %4, %"class.std::unordered_map"** dereferenceable(8) %8) #3
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %4, i32 0, i32 0
  %32 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %31, align 8
  ret %"class.std::unordered_map"* %32
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEENSt11_Miter_baseIT_E13iterator_typeESJ_(%"class.std::unordered_map"*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %3, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %5, align 8
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %4 to i8*
  %7 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 8, i32 8, i1 false)
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %4, i32 0, i32 0
  %9 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %8, align 8
  %10 = call %"class.std::unordered_map"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEELb0EE7_S_baseESH_(%"class.std::unordered_map"* %9)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %2, i32 0, i32 0
  store %"class.std::unordered_map"* %10, %"class.std::unordered_map"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %2, i32 0, i32 0
  %13 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %12, align 8
  ret %"class.std::unordered_map"* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt13__copy_move_aILb0EPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEPS9_ET1_T0_SE_SD_(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat {
  %4 = alloca %"class.std::unordered_map"*, align 8
  %5 = alloca %"class.std::unordered_map"*, align 8
  %6 = alloca %"class.std::unordered_map"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %4, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %5, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %6, align 8
  store i8 0, i8* %7, align 1
  %8 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %9 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %5, align 8
  %10 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  %11 = call %"class.std::unordered_map"* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEPSC_EET0_T_SH_SG_(%"class.std::unordered_map"* %8, %"class.std::unordered_map"* %9, %"class.std::unordered_map"* %10)
  ret %"class.std::unordered_map"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEENSt11_Niter_baseIT_E13iterator_typeESJ_(%"class.std::unordered_map"*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %2, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %3, i32 0, i32 0
  %8 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  %9 = call %"class.std::unordered_map"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEELb1EE7_S_baseESH_(%"class.std::unordered_map"* %8)
  ret %"class.std::unordered_map"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEENSt11_Niter_baseIT_E13iterator_typeESI_(%"class.std::unordered_map"*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %2, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %3, i32 0, i32 0
  %8 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  %9 = call %"class.std::unordered_map"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEELb1EE7_S_baseESG_(%"class.std::unordered_map"* %8)
  ret %"class.std::unordered_map"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEEC2ERKSB_(%"class.__gnu_cxx::__normal_iterator.19"*, %"class.std::unordered_map"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.427
  %6 = load i32, i32* @y.428
  %7 = add i32 %5, -1003715985
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1003715985
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2093441701, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %56
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2093441701, label %19
    i32 522460072, label %27
    i32 -752338833, label %48
    i32 -444410393, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %56

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 522460072, i32 -444410393
  store i32 %26, i32* %15
  br label %56

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.19"*, align 8
  %29 = alloca %"class.std::unordered_map"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.19"* %0, %"class.__gnu_cxx::__normal_iterator.19"** %28, align 8
  store %"class.std::unordered_map"** %1, %"class.std::unordered_map"*** %29, align 8
  %30 = load %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %28, align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %30, i32 0, i32 0
  %32 = load %"class.std::unordered_map"**, %"class.std::unordered_map"*** %29, align 8
  %33 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %32, align 8
  store %"class.std::unordered_map"* %33, %"class.std::unordered_map"** %31, align 8
  %34 = load i32, i32* @x.427
  %35 = load i32, i32* @y.428
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 -752338833, i32 -444410393
  store i32 %47, i32* %15
  br label %56

; <label>:48:                                     ; preds = %16
  ret void

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.__gnu_cxx::__normal_iterator.19"*, align 8
  %51 = alloca %"class.std::unordered_map"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.19"* %0, %"class.__gnu_cxx::__normal_iterator.19"** %50, align 8
  store %"class.std::unordered_map"** %1, %"class.std::unordered_map"*** %51, align 8
  %52 = load %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %50, align 8
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %52, i32 0, i32 0
  %54 = load %"class.std::unordered_map"**, %"class.std::unordered_map"*** %51, align 8
  %55 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %54, align 8
  store %"class.std::unordered_map"* %55, %"class.std::unordered_map"** %53, align 8
  store i32 522460072, i32* %15
  br label %56

; <label>:56:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEPSC_EET0_T_SH_SG_(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca %"class.std::unordered_map"**
  %6 = alloca %"class.std::unordered_map"**
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.429
  %10 = load i32, i32* @y.430
  %11 = add i32 %9, 324772125
  %12 = sub i32 %11, 1
  %13 = sub i32 %12, 324772125
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 -1963808916, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %204
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1963808916, label %23
    i32 -362114975, label %31
    i32 -975165485, label %75
    i32 661518869, label %76
    i32 1337741949, label %81
    i32 1276054694, label %95
    i32 932672195, label %123
    i32 -1550883982, label %159
    i32 423971028, label %160
    i32 678721739, label %163
    i32 1174954037, label %185
  ]

; <label>:22:                                     ; preds = %20
  br label %204

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 -362114975, i32 678721739
  store i32 %30, i32* %19
  br label %204

; <label>:31:                                     ; preds = %20
  %32 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"** %32, %"class.std::unordered_map"*** %6
  %33 = alloca %"class.std::unordered_map"*, align 8
  %34 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"** %34, %"class.std::unordered_map"*** %5
  %35 = alloca i64, align 8
  store i64* %35, i64** %4
  %36 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %6
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %36, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %33, align 8
  %37 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %5
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %37, align 8
  %38 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %33, align 8
  %39 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %6
  %40 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %39, align 8
  %41 = ptrtoint %"class.std::unordered_map"* %38 to i64
  %42 = ptrtoint %"class.std::unordered_map"* %40 to i64
  %43 = sub i64 0, %42
  %44 = add i64 %41, %43
  %45 = sub i64 %41, %42
  %46 = sdiv exact i64 %44, 56
  %47 = load volatile i64*, i64** %4
  store i64 %46, i64* %47, align 8
  %48 = load i32, i32* @x.429
  %49 = load i32, i32* @y.430
  %50 = sub i32 %48, 316259405
  %51 = sub i32 %50, 1
  %52 = add i32 %51, 316259405
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 -975165485, i32 678721739
  store i32 %74, i32* %19
  br label %204

; <label>:75:                                     ; preds = %20
  store i32 661518869, i32* %19
  br label %204

; <label>:76:                                     ; preds = %20
  %77 = load volatile i64*, i64** %4
  %78 = load i64, i64* %77, align 8
  %79 = icmp sgt i64 %78, 0
  %80 = select i1 %79, i32 1337741949, i32 423971028
  store i32 %80, i32* %19
  br label %204

; <label>:81:                                     ; preds = %20
  %82 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %6
  %83 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %82, align 8
  %84 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %5
  %85 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %84, align 8
  %86 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEaSERKS8_(%"class.std::unordered_map"* %85, %"class.std::unordered_map"* dereferenceable(56) %83)
  %87 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %6
  %88 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %87, align 8
  %89 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %88, i32 1
  %90 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %6
  store %"class.std::unordered_map"* %89, %"class.std::unordered_map"** %90, align 8
  %91 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %5
  %92 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %91, align 8
  %93 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %92, i32 1
  %94 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %5
  store %"class.std::unordered_map"* %93, %"class.std::unordered_map"** %94, align 8
  store i32 1276054694, i32* %19
  br label %204

; <label>:95:                                     ; preds = %20
  %96 = load i32, i32* @x.429
  %97 = load i32, i32* @y.430
  %98 = sub i32 %96, -1661323790
  %99 = sub i32 %98, 1
  %100 = add i32 %99, -1661323790
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = xor i1 %104, true
  %107 = xor i1 %105, true
  %108 = xor i1 false, true
  %109 = and i1 %106, false
  %110 = and i1 %104, %108
  %111 = and i1 %107, false
  %112 = and i1 %105, %108
  %113 = or i1 %109, %110
  %114 = or i1 %111, %112
  %115 = xor i1 %113, %114
  %116 = or i1 %106, %107
  %117 = xor i1 %116, true
  %118 = or i1 false, %108
  %119 = and i1 %117, %118
  %120 = or i1 %115, %119
  %121 = or i1 %104, %105
  %122 = select i1 %120, i32 932672195, i32 1174954037
  store i32 %122, i32* %19
  br label %204

; <label>:123:                                    ; preds = %20
  %124 = load volatile i64*, i64** %4
  %125 = load i64, i64* %124, align 8
  %126 = sub i64 0, %125
  %127 = sub i64 0, -1
  %128 = add i64 %126, %127
  %129 = sub i64 0, %128
  %130 = add nsw i64 %125, -1
  %131 = load volatile i64*, i64** %4
  store i64 %129, i64* %131, align 8
  %132 = load i32, i32* @x.429
  %133 = load i32, i32* @y.430
  %134 = add i32 %132, 1651736238
  %135 = sub i32 %134, 1
  %136 = sub i32 %135, 1651736238
  %137 = sub i32 %132, 1
  %138 = mul i32 %132, %136
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %133, 10
  %142 = xor i1 %140, true
  %143 = xor i1 %141, true
  %144 = xor i1 true, true
  %145 = and i1 %142, true
  %146 = and i1 %140, %144
  %147 = and i1 %143, true
  %148 = and i1 %141, %144
  %149 = or i1 %145, %146
  %150 = or i1 %147, %148
  %151 = xor i1 %149, %150
  %152 = or i1 %142, %143
  %153 = xor i1 %152, true
  %154 = or i1 true, %144
  %155 = and i1 %153, %154
  %156 = or i1 %151, %155
  %157 = or i1 %140, %141
  %158 = select i1 %156, i32 -1550883982, i32 1174954037
  store i32 %158, i32* %19
  br label %204

; <label>:159:                                    ; preds = %20
  store i32 661518869, i32* %19
  br label %204

; <label>:160:                                    ; preds = %20
  %161 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %5
  %162 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %161, align 8
  ret %"class.std::unordered_map"* %162

; <label>:163:                                    ; preds = %20
  %164 = alloca %"class.std::unordered_map"*, align 8
  %165 = alloca %"class.std::unordered_map"*, align 8
  %166 = alloca %"class.std::unordered_map"*, align 8
  %167 = alloca i64, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %164, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %165, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %166, align 8
  %168 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %165, align 8
  %169 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %164, align 8
  %170 = ptrtoint %"class.std::unordered_map"* %168 to i64
  %171 = ptrtoint %"class.std::unordered_map"* %169 to i64
  %172 = add i64 %170, 5042638102878989473
  %173 = sub i64 %172, %171
  %174 = sub i64 %173, 5042638102878989473
  %175 = sub i64 %170, %171
  %176 = add i64 0, -9221534057326963111
  %177 = sub i64 %176, %174
  %178 = sub i64 %177, -9221534057326963111
  %179 = sub i64 0, %174
  %180 = sub i64 0, 56
  %181 = sub i64 %178, %180
  %182 = add i64 %178, 56
  %183 = shl i64 %174, 56
  %184 = sdiv exact i64 %174, 56
  store i64 %184, i64* %167, align 8
  store i32 -362114975, i32* %19
  br label %204

; <label>:185:                                    ; preds = %20
  %186 = load volatile i64*, i64** %4
  %187 = load i64, i64* %186, align 8
  %188 = sub i64 0, %187
  %189 = add i64 0, %188
  %190 = sub i64 0, %187
  %191 = sub i64 %189, 8959454102998271422
  %192 = add i64 %191, -1
  %193 = add i64 %192, 8959454102998271422
  %194 = add i64 %189, -1
  %195 = add i64 %187, 7092889419894803479
  %196 = sub i64 %195, -1
  %197 = sub i64 %196, 7092889419894803479
  %198 = sub i64 %187, -1
  %199 = mul i64 %197, -1
  %200 = sub i64 0, -1
  %201 = sub i64 %187, %200
  %202 = add nsw i64 %187, -1
  %203 = load volatile i64*, i64** %4
  store i64 %201, i64* %203, align 8
  store i32 932672195, i32* %19
  br label %204

; <label>:204:                                    ; preds = %185, %163, %159, %123, %95, %81, %76, %75, %31, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(56) %"class.std::unordered_map"* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEaSERKS8_(%"class.std::unordered_map"*, %"class.std::unordered_map"* dereferenceable(56)) #0 comdat align 2 {
  %3 = alloca %"class.std::unordered_map"*, align 8
  %4 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %3, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %4, align 8
  %5 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %3, align 8
  %6 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %5, i32 0, i32 0
  %7 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %8 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %7, i32 0, i32 0
  %9 = call dereferenceable(56) %"class.std::_Hashtable"* @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEaSERKSF_(%"class.std::_Hashtable"* %6, %"class.std::_Hashtable"* dereferenceable(56) %8)
  ret %"class.std::unordered_map"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(56) %"class.std::_Hashtable"* @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEaSERKSF_(%"class.std::_Hashtable"*, %"class.std::_Hashtable"* dereferenceable(56)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Hashtable"*, align 8
  %4 = alloca %"class.std::_Hashtable"*, align 8
  %5 = alloca %"class.std::_Hashtable"*, align 8
  %6 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"struct.std::__detail::_ReuseOrAllocNode", align 8
  %11 = alloca i8*
  %12 = alloca i32
  %13 = alloca %class.anon.20, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %4, align 8
  store %"class.std::_Hashtable"* %1, %"class.std::_Hashtable"** %5, align 8
  %14 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4, align 8
  %15 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5, align 8
  %16 = icmp eq %"class.std::_Hashtable"* %15, %14
  br i1 %16, label %17, label %59

; <label>:17:                                     ; preds = %2
  %18 = load i32, i32* @x.433
  %19 = load i32, i32* @y.434
  %20 = sub i32 0, 1
  %21 = add i32 %18, %20
  %22 = sub i32 %18, 1
  %23 = mul i32 %18, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %19, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  br i1 %41, label %43, label %441

; <label>:43:                                     ; preds = %17, %441
  store %"class.std::_Hashtable"* %14, %"class.std::_Hashtable"** %3, align 8
  %44 = load i32, i32* @x.433
  %45 = load i32, i32* @y.434
  %46 = sub i32 %44, 241204978
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 241204978
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  br i1 %56, label %58, label %441

; <label>:58:                                     ; preds = %43
  br label %401

; <label>:59:                                     ; preds = %2
  store %"struct.std::__detail::_Hash_node_base"** null, %"struct.std::__detail::_Hash_node_base"*** %6, align 8
  %60 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  store i64 %61, i64* %7, align 8
  %62 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 4
  %63 = call i64 @_ZNKSt8__detail20_Prime_rehash_policy8_M_stateEv(%"struct.std::__detail::_Prime_rehash_policy"* %62)
  store i64 %63, i64* %9, align 8
  store i64* %9, i64** %8, align 8
  %64 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5, align 8
  %67 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %66, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = icmp ne i64 %65, %68
  br i1 %69, label %70, label %82

; <label>:70:                                     ; preds = %59
  %71 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 0
  %72 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %71, align 8
  store %"struct.std::__detail::_Hash_node_base"** %72, %"struct.std::__detail::_Hash_node_base"*** %6, align 8
  %73 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5, align 8
  %74 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %73, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = call %"struct.std::__detail::_Hash_node_base"** @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_allocate_bucketsEm(%"class.std::_Hashtable"* %14, i64 %75)
  %77 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"** %76, %"struct.std::__detail::_Hash_node_base"*** %77, align 8
  %78 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5, align 8
  %79 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %78, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 1
  store i64 %80, i64* %81, align 8
  br label %89

; <label>:82:                                     ; preds = %59
  %83 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 0
  %84 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %83, align 8
  %85 = bitcast %"struct.std::__detail::_Hash_node_base"** %84 to i8*
  %86 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 1
  %87 = load i64, i64* %86, align 8
  %88 = mul i64 %87, 8
  call void @llvm.memset.p0i8.i64(i8* %85, i8 0, i64 %88, i32 8, i1 false)
  br label %89

; <label>:89:                                     ; preds = %82, %70
  %90 = bitcast %"class.std::_Hashtable"* %14 to %"struct.std::__detail::_Hashtable_base"*
  %91 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5, align 8
  %92 = bitcast %"class.std::_Hashtable"* %91 to %"struct.std::__detail::_Hashtable_base"*
  %93 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5, align 8
  %94 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %93, i32 0, i32 3
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 3
  store i64 %95, i64* %96, align 8
  %97 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5, align 8
  %98 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %97, i32 0, i32 4
  %99 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 4
  %100 = bitcast %"struct.std::__detail::_Prime_rehash_policy"* %99 to i8*
  %101 = bitcast %"struct.std::__detail::_Prime_rehash_policy"* %98 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %100, i8* %101, i64 16, i32 8, i1 false)
  %102 = invoke %"struct.std::__detail::_Hash_node"* @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_beginEv(%"class.std::_Hashtable"* %14)
          to label %103 unwind label %211

; <label>:103:                                    ; preds = %89
  %104 = bitcast %"class.std::_Hashtable"* %14 to %"struct.std::__detail::_Hashtable_alloc"*
  invoke void @_ZNSt8__detail17_ReuseOrAllocNodeISaINS_10_Hash_nodeISt4pairIKixELb0EEEEEC2EPS5_RNS_16_Hashtable_allocIS6_EE(%"struct.std::__detail::_ReuseOrAllocNode"* %10, %"struct.std::__detail::_Hash_node"* %102, %"struct.std::__detail::_Hashtable_alloc"* dereferenceable(1) %104)
          to label %105 unwind label %211

; <label>:105:                                    ; preds = %103
  %106 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 2
  %107 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %106, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %107, align 8
  %108 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5, align 8
  %109 = getelementptr inbounds %class.anon.20, %class.anon.20* %13, i32 0, i32 0
  store %"struct.std::__detail::_ReuseOrAllocNode"* %10, %"struct.std::__detail::_ReuseOrAllocNode"** %109, align 8
  invoke void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_assignIZNSF_aSERKSF_EUlPKNS4_10_Hash_nodeIS2_Lb0EEEE0_EEvSI_RKT_(%"class.std::_Hashtable"* %14, %"class.std::_Hashtable"* dereferenceable(56) %108, %class.anon.20* dereferenceable(8) %13)
          to label %110 unwind label %215

; <label>:110:                                    ; preds = %105
  %111 = load i32, i32* @x.433
  %112 = load i32, i32* @y.434
  %113 = add i32 %111, 1412277619
  %114 = sub i32 %113, 1
  %115 = sub i32 %114, 1412277619
  %116 = sub i32 %111, 1
  %117 = mul i32 %111, %115
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %112, 10
  %121 = and i1 %119, %120
  %122 = xor i1 %119, %120
  %123 = or i1 %121, %122
  %124 = or i1 %119, %120
  br i1 %123, label %125, label %442

; <label>:125:                                    ; preds = %110, %442
  %126 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %6, align 8
  %127 = icmp ne %"struct.std::__detail::_Hash_node_base"** %126, null
  %128 = load i32, i32* @x.433
  %129 = load i32, i32* @y.434
  %130 = sub i32 0, 1
  %131 = add i32 %128, %130
  %132 = sub i32 %128, 1
  %133 = mul i32 %128, %131
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %129, 10
  %137 = xor i1 %135, true
  %138 = xor i1 %136, true
  %139 = xor i1 true, true
  %140 = and i1 %137, true
  %141 = and i1 %135, %139
  %142 = and i1 %138, true
  %143 = and i1 %136, %139
  %144 = or i1 %140, %141
  %145 = or i1 %142, %143
  %146 = xor i1 %144, %145
  %147 = or i1 %137, %138
  %148 = xor i1 %147, true
  %149 = or i1 true, %139
  %150 = and i1 %148, %149
  %151 = or i1 %146, %150
  %152 = or i1 %135, %136
  br i1 %151, label %153, label %442

; <label>:153:                                    ; preds = %125
  br i1 %127, label %154, label %264

; <label>:154:                                    ; preds = %153
  %155 = load i32, i32* @x.433
  %156 = load i32, i32* @y.434
  %157 = add i32 %155, -813736254
  %158 = sub i32 %157, 1
  %159 = sub i32 %158, -813736254
  %160 = sub i32 %155, 1
  %161 = mul i32 %155, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %156, 10
  %165 = xor i1 %163, true
  %166 = xor i1 %164, true
  %167 = xor i1 true, true
  %168 = and i1 %165, true
  %169 = and i1 %163, %167
  %170 = and i1 %166, true
  %171 = and i1 %164, %167
  %172 = or i1 %168, %169
  %173 = or i1 %170, %171
  %174 = xor i1 %172, %173
  %175 = or i1 %165, %166
  %176 = xor i1 %175, true
  %177 = or i1 true, %167
  %178 = and i1 %176, %177
  %179 = or i1 %174, %178
  %180 = or i1 %163, %164
  br i1 %179, label %181, label %445

; <label>:181:                                    ; preds = %154, %445
  %182 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %6, align 8
  %183 = load i64, i64* %7, align 8
  %184 = load i32, i32* @x.433
  %185 = load i32, i32* @y.434
  %186 = sub i32 0, 1
  %187 = add i32 %184, %186
  %188 = sub i32 %184, 1
  %189 = mul i32 %184, %187
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %185, 10
  %193 = xor i1 %191, true
  %194 = xor i1 %192, true
  %195 = xor i1 true, true
  %196 = and i1 %193, true
  %197 = and i1 %191, %195
  %198 = and i1 %194, true
  %199 = and i1 %192, %195
  %200 = or i1 %196, %197
  %201 = or i1 %198, %199
  %202 = xor i1 %200, %201
  %203 = or i1 %193, %194
  %204 = xor i1 %203, true
  %205 = or i1 true, %195
  %206 = and i1 %204, %205
  %207 = or i1 %202, %206
  %208 = or i1 %191, %192
  br i1 %207, label %209, label %445

; <label>:209:                                    ; preds = %181
  invoke void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_deallocate_bucketsEPPNS4_15_Hash_node_baseEm(%"class.std::_Hashtable"* %14, %"struct.std::__detail::_Hash_node_base"** %182, i64 %183)
          to label %210 unwind label %215

; <label>:210:                                    ; preds = %209
  br label %264

; <label>:211:                                    ; preds = %103, %89
  %212 = landingpad { i8*, i32 }
          catch i8* null
  %213 = extractvalue { i8*, i32 } %212, 0
  store i8* %213, i8** %11, align 8
  %214 = extractvalue { i8*, i32 } %212, 1
  store i32 %214, i32* %12, align 4
  br label %249

; <label>:215:                                    ; preds = %209, %105
  %216 = load i32, i32* @x.433
  %217 = load i32, i32* @y.434
  %218 = sub i32 %216, -1380253368
  %219 = sub i32 %218, 1
  %220 = add i32 %219, -1380253368
  %221 = sub i32 %216, 1
  %222 = mul i32 %216, %220
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %217, 10
  %226 = and i1 %224, %225
  %227 = xor i1 %224, %225
  %228 = or i1 %226, %227
  %229 = or i1 %224, %225
  br i1 %228, label %230, label %448

; <label>:230:                                    ; preds = %215, %448
  %231 = landingpad { i8*, i32 }
          catch i8* null
  %232 = extractvalue { i8*, i32 } %231, 0
  store i8* %232, i8** %11, align 8
  %233 = extractvalue { i8*, i32 } %231, 1
  store i32 %233, i32* %12, align 4
  call void @_ZNSt8__detail17_ReuseOrAllocNodeISaINS_10_Hash_nodeISt4pairIKixELb0EEEEED2Ev(%"struct.std::__detail::_ReuseOrAllocNode"* %10) #3
  %234 = load i32, i32* @x.433
  %235 = load i32, i32* @y.434
  %236 = add i32 %234, 1521605509
  %237 = sub i32 %236, 1
  %238 = sub i32 %237, 1521605509
  %239 = sub i32 %234, 1
  %240 = mul i32 %234, %238
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %235, 10
  %244 = and i1 %242, %243
  %245 = xor i1 %242, %243
  %246 = or i1 %244, %245
  %247 = or i1 %242, %243
  br i1 %246, label %248, label %448

; <label>:248:                                    ; preds = %230
  br label %249

; <label>:249:                                    ; preds = %248, %211
  %250 = load i8*, i8** %11, align 8
  %251 = call i8* @__cxa_begin_catch(i8* %250) #3
  %252 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %6, align 8
  %253 = icmp ne %"struct.std::__detail::_Hash_node_base"** %252, null
  br i1 %253, label %254, label %339

; <label>:254:                                    ; preds = %249
  invoke void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_deallocate_bucketsEv(%"class.std::_Hashtable"* %14)
          to label %255 unwind label %294

; <label>:255:                                    ; preds = %254
  %256 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 4
  %257 = load i64*, i64** %8, align 8
  %258 = load i64, i64* %257, align 8
  invoke void @_ZNSt8__detail20_Prime_rehash_policy8_M_resetEm(%"struct.std::__detail::_Prime_rehash_policy"* %256, i64 %258)
          to label %259 unwind label %294

; <label>:259:                                    ; preds = %255
  %260 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %6, align 8
  %261 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"** %260, %"struct.std::__detail::_Hash_node_base"*** %261, align 8
  %262 = load i64, i64* %7, align 8
  %263 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 1
  store i64 %262, i64* %263, align 8
  br label %339

; <label>:264:                                    ; preds = %210, %153
  %265 = load i32, i32* @x.433
  %266 = load i32, i32* @y.434
  %267 = sub i32 %265, 631892617
  %268 = sub i32 %267, 1
  %269 = add i32 %268, 631892617
  %270 = sub i32 %265, 1
  %271 = mul i32 %265, %269
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %266, 10
  %275 = and i1 %273, %274
  %276 = xor i1 %273, %274
  %277 = or i1 %275, %276
  %278 = or i1 %273, %274
  br i1 %277, label %279, label %452

; <label>:279:                                    ; preds = %264, %452
  call void @_ZNSt8__detail17_ReuseOrAllocNodeISaINS_10_Hash_nodeISt4pairIKixELb0EEEEED2Ev(%"struct.std::__detail::_ReuseOrAllocNode"* %10) #3
  %280 = load i32, i32* @x.433
  %281 = load i32, i32* @y.434
  %282 = sub i32 0, 1
  %283 = add i32 %280, %282
  %284 = sub i32 %280, 1
  %285 = mul i32 %280, %283
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %281, 10
  %289 = and i1 %287, %288
  %290 = xor i1 %287, %288
  %291 = or i1 %289, %290
  %292 = or i1 %287, %288
  br i1 %291, label %293, label %452

; <label>:293:                                    ; preds = %279
  br label %400

; <label>:294:                                    ; preds = %339, %255, %254
  %295 = load i32, i32* @x.433
  %296 = load i32, i32* @y.434
  %297 = add i32 %295, -1629083560
  %298 = sub i32 %297, 1
  %299 = sub i32 %298, -1629083560
  %300 = sub i32 %295, 1
  %301 = mul i32 %295, %299
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %296, 10
  %305 = and i1 %303, %304
  %306 = xor i1 %303, %304
  %307 = or i1 %305, %306
  %308 = or i1 %303, %304
  br i1 %307, label %309, label %453

; <label>:309:                                    ; preds = %294, %453
  %310 = landingpad { i8*, i32 }
          cleanup
  %311 = extractvalue { i8*, i32 } %310, 0
  store i8* %311, i8** %11, align 8
  %312 = extractvalue { i8*, i32 } %310, 1
  store i32 %312, i32* %12, align 4
  %313 = load i32, i32* @x.433
  %314 = load i32, i32* @y.434
  %315 = sub i32 0, 1
  %316 = add i32 %313, %315
  %317 = sub i32 %313, 1
  %318 = mul i32 %313, %316
  %319 = urem i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %314, 10
  %322 = xor i1 %320, true
  %323 = xor i1 %321, true
  %324 = xor i1 true, true
  %325 = and i1 %322, true
  %326 = and i1 %320, %324
  %327 = and i1 %323, true
  %328 = and i1 %321, %324
  %329 = or i1 %325, %326
  %330 = or i1 %327, %328
  %331 = xor i1 %329, %330
  %332 = or i1 %322, %323
  %333 = xor i1 %332, true
  %334 = or i1 true, %324
  %335 = and i1 %333, %334
  %336 = or i1 %331, %335
  %337 = or i1 %320, %321
  br i1 %336, label %338, label %453

; <label>:338:                                    ; preds = %309
  invoke void @__cxa_end_catch()
          to label %346 unwind label %408

; <label>:339:                                    ; preds = %259, %249
  %340 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 0
  %341 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %340, align 8
  %342 = bitcast %"struct.std::__detail::_Hash_node_base"** %341 to i8*
  %343 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %14, i32 0, i32 1
  %344 = load i64, i64* %343, align 8
  %345 = mul i64 %344, 8
  call void @llvm.memset.p0i8.i64(i8* %342, i8 0, i64 %345, i32 8, i1 false)
  invoke void @__cxa_rethrow() #12
          to label %440 unwind label %294

; <label>:346:                                    ; preds = %338
  %347 = load i32, i32* @x.433
  %348 = load i32, i32* @y.434
  %349 = sub i32 0, 1
  %350 = add i32 %347, %349
  %351 = sub i32 %347, 1
  %352 = mul i32 %347, %350
  %353 = urem i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %348, 10
  %356 = xor i1 %354, true
  %357 = xor i1 %355, true
  %358 = xor i1 false, true
  %359 = and i1 %356, false
  %360 = and i1 %354, %358
  %361 = and i1 %357, false
  %362 = and i1 %355, %358
  %363 = or i1 %359, %360
  %364 = or i1 %361, %362
  %365 = xor i1 %363, %364
  %366 = or i1 %356, %357
  %367 = xor i1 %366, true
  %368 = or i1 false, %358
  %369 = and i1 %367, %368
  %370 = or i1 %365, %369
  %371 = or i1 %354, %355
  br i1 %370, label %372, label %457

; <label>:372:                                    ; preds = %346, %457
  %373 = load i32, i32* @x.433
  %374 = load i32, i32* @y.434
  %375 = add i32 %373, 311867117
  %376 = sub i32 %375, 1
  %377 = sub i32 %376, 311867117
  %378 = sub i32 %373, 1
  %379 = mul i32 %373, %377
  %380 = urem i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %374, 10
  %383 = xor i1 %381, true
  %384 = xor i1 %382, true
  %385 = xor i1 true, true
  %386 = and i1 %383, true
  %387 = and i1 %381, %385
  %388 = and i1 %384, true
  %389 = and i1 %382, %385
  %390 = or i1 %386, %387
  %391 = or i1 %388, %389
  %392 = xor i1 %390, %391
  %393 = or i1 %383, %384
  %394 = xor i1 %393, true
  %395 = or i1 true, %385
  %396 = and i1 %394, %395
  %397 = or i1 %392, %396
  %398 = or i1 %381, %382
  br i1 %397, label %399, label %457

; <label>:399:                                    ; preds = %372
  br label %403

; <label>:400:                                    ; preds = %293
  store %"class.std::_Hashtable"* %14, %"class.std::_Hashtable"** %3, align 8
  br label %401

; <label>:401:                                    ; preds = %400, %58
  %402 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %3, align 8
  ret %"class.std::_Hashtable"* %402

; <label>:403:                                    ; preds = %399
  %404 = load i8*, i8** %11, align 8
  %405 = load i32, i32* %12, align 4
  %406 = insertvalue { i8*, i32 } undef, i8* %404, 0
  %407 = insertvalue { i8*, i32 } %406, i32 %405, 1
  resume { i8*, i32 } %407

; <label>:408:                                    ; preds = %338
  %409 = load i32, i32* @x.433
  %410 = load i32, i32* @y.434
  %411 = sub i32 0, 1
  %412 = add i32 %409, %411
  %413 = sub i32 %409, 1
  %414 = mul i32 %409, %412
  %415 = urem i32 %414, 2
  %416 = icmp eq i32 %415, 0
  %417 = icmp slt i32 %410, 10
  %418 = and i1 %416, %417
  %419 = xor i1 %416, %417
  %420 = or i1 %418, %419
  %421 = or i1 %416, %417
  br i1 %420, label %422, label %458

; <label>:422:                                    ; preds = %408, %458
  %423 = landingpad { i8*, i32 }
          catch i8* null
  %424 = extractvalue { i8*, i32 } %423, 0
  call void @__clang_call_terminate(i8* %424) #11
  %425 = load i32, i32* @x.433
  %426 = load i32, i32* @y.434
  %427 = add i32 %425, 809716940
  %428 = sub i32 %427, 1
  %429 = sub i32 %428, 809716940
  %430 = sub i32 %425, 1
  %431 = mul i32 %425, %429
  %432 = urem i32 %431, 2
  %433 = icmp eq i32 %432, 0
  %434 = icmp slt i32 %426, 10
  %435 = and i1 %433, %434
  %436 = xor i1 %433, %434
  %437 = or i1 %435, %436
  %438 = or i1 %433, %434
  br i1 %437, label %439, label %458

; <label>:439:                                    ; preds = %422
  unreachable

; <label>:440:                                    ; preds = %339
  unreachable

; <label>:441:                                    ; preds = %43, %17
  store %"class.std::_Hashtable"* %14, %"class.std::_Hashtable"** %3, align 8
  br label %43

; <label>:442:                                    ; preds = %125, %110
  %443 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %6, align 8
  %444 = icmp ne %"struct.std::__detail::_Hash_node_base"** %443, null
  br label %125

; <label>:445:                                    ; preds = %181, %154
  %446 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %6, align 8
  %447 = load i64, i64* %7, align 8
  br label %181

; <label>:448:                                    ; preds = %230, %215
  %449 = landingpad { i8*, i32 }
          catch i8* null
  %450 = extractvalue { i8*, i32 } %449, 0
  store i8* %450, i8** %11, align 8
  %451 = extractvalue { i8*, i32 } %449, 1
  store i32 %451, i32* %12, align 4
  call void @_ZNSt8__detail17_ReuseOrAllocNodeISaINS_10_Hash_nodeISt4pairIKixELb0EEEEED2Ev(%"struct.std::__detail::_ReuseOrAllocNode"* %10) #3
  br label %230

; <label>:452:                                    ; preds = %279, %264
  call void @_ZNSt8__detail17_ReuseOrAllocNodeISaINS_10_Hash_nodeISt4pairIKixELb0EEEEED2Ev(%"struct.std::__detail::_ReuseOrAllocNode"* %10) #3
  br label %279

; <label>:453:                                    ; preds = %309, %294
  %454 = landingpad { i8*, i32 }
          cleanup
  %455 = extractvalue { i8*, i32 } %454, 0
  store i8* %455, i8** %11, align 8
  %456 = extractvalue { i8*, i32 } %454, 1
  store i32 %456, i32* %12, align 4
  br label %309

; <label>:457:                                    ; preds = %372, %346
  br label %372

; <label>:458:                                    ; preds = %422, %408
  %459 = landingpad { i8*, i32 }
          catch i8* null
  %460 = extractvalue { i8*, i32 } %459, 0
  call void @__clang_call_terminate(i8* %460) #11
  br label %422
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt8__detail20_Prime_rehash_policy8_M_stateEv(%"struct.std::__detail::_Prime_rehash_policy"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Prime_rehash_policy"*, align 8
  store %"struct.std::__detail::_Prime_rehash_policy"* %0, %"struct.std::__detail::_Prime_rehash_policy"** %2, align 8
  %3 = load %"struct.std::__detail::_Prime_rehash_policy"*, %"struct.std::__detail::_Prime_rehash_policy"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Prime_rehash_policy"* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail17_ReuseOrAllocNodeISaINS_10_Hash_nodeISt4pairIKixELb0EEEEEC2EPS5_RNS_16_Hashtable_allocIS6_EE(%"struct.std::__detail::_ReuseOrAllocNode"*, %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hashtable_alloc"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.437
  %7 = load i32, i32* @y.438
  %8 = sub i32 %6, 993526795
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 993526795
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 36517535, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %74
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 36517535, label %20
    i32 1297137106, label %28
    i32 -426658627, label %64
    i32 1342425654, label %65
  ]

; <label>:19:                                     ; preds = %17
  br label %74

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1297137106, i32 1342425654
  store i32 %27, i32* %16
  br label %74

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::__detail::_ReuseOrAllocNode"*, align 8
  %30 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %31 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  store %"struct.std::__detail::_ReuseOrAllocNode"* %0, %"struct.std::__detail::_ReuseOrAllocNode"** %29, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %30, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %2, %"struct.std::__detail::_Hashtable_alloc"** %31, align 8
  %32 = load %"struct.std::__detail::_ReuseOrAllocNode"*, %"struct.std::__detail::_ReuseOrAllocNode"** %29, align 8
  %33 = getelementptr inbounds %"struct.std::__detail::_ReuseOrAllocNode", %"struct.std::__detail::_ReuseOrAllocNode"* %32, i32 0, i32 0
  %34 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %30, align 8
  store %"struct.std::__detail::_Hash_node"* %34, %"struct.std::__detail::_Hash_node"** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__detail::_ReuseOrAllocNode", %"struct.std::__detail::_ReuseOrAllocNode"* %32, i32 0, i32 1
  %36 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %31, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %36, %"struct.std::__detail::_Hashtable_alloc"** %35, align 8
  %37 = load i32, i32* @x.437
  %38 = load i32, i32* @y.438
  %39 = add i32 %37, -923772554
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, -923772554
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -426658627, i32 1342425654
  store i32 %63, i32* %16
  br label %74

; <label>:64:                                     ; preds = %17
  ret void

; <label>:65:                                     ; preds = %17
  %66 = alloca %"struct.std::__detail::_ReuseOrAllocNode"*, align 8
  %67 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %68 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  store %"struct.std::__detail::_ReuseOrAllocNode"* %0, %"struct.std::__detail::_ReuseOrAllocNode"** %66, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %67, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %2, %"struct.std::__detail::_Hashtable_alloc"** %68, align 8
  %69 = load %"struct.std::__detail::_ReuseOrAllocNode"*, %"struct.std::__detail::_ReuseOrAllocNode"** %66, align 8
  %70 = getelementptr inbounds %"struct.std::__detail::_ReuseOrAllocNode", %"struct.std::__detail::_ReuseOrAllocNode"* %69, i32 0, i32 0
  %71 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %67, align 8
  store %"struct.std::__detail::_Hash_node"* %71, %"struct.std::__detail::_Hash_node"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__detail::_ReuseOrAllocNode", %"struct.std::__detail::_ReuseOrAllocNode"* %69, i32 0, i32 1
  %73 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %68, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %73, %"struct.std::__detail::_Hashtable_alloc"** %72, align 8
  store i32 1297137106, i32* %16
  br label %74

; <label>:74:                                     ; preds = %65, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_assignIZNSF_aSERKSF_EUlPKNS4_10_Hash_nodeIS2_Lb0EEEE0_EEvSI_RKT_(%"class.std::_Hashtable"*, %"class.std::_Hashtable"* dereferenceable(56), %class.anon.20* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.439
  %5 = load i32, i32* @y.440
  %6 = sub i32 %4, 1162093073
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1162093073
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 false, true
  %17 = and i1 %14, false
  %18 = and i1 %12, %16
  %19 = and i1 %15, false
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 false, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %629

; <label>:30:                                     ; preds = %3, %629
  %31 = alloca %"class.std::_Hashtable"*, align 8
  %32 = alloca %"class.std::_Hashtable"*, align 8
  %33 = alloca %class.anon.20*, align 8
  %34 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %35 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %36 = alloca i8*
  %37 = alloca i32
  %38 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %39 = alloca %"struct.std::__detail::_Hash_node_base"*, align 8
  %40 = alloca i64, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %31, align 8
  store %"class.std::_Hashtable"* %1, %"class.std::_Hashtable"** %32, align 8
  store %class.anon.20* %2, %class.anon.20** %33, align 8
  %41 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %31, align 8
  store %"struct.std::__detail::_Hash_node_base"** null, %"struct.std::__detail::_Hash_node_base"*** %34, align 8
  %42 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %41, i32 0, i32 0
  %43 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %42, align 8
  %44 = icmp ne %"struct.std::__detail::_Hash_node_base"** %43, null
  %45 = load i32, i32* @x.439
  %46 = load i32, i32* @y.440
  %47 = sub i32 %45, 934683667
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 934683667
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  br i1 %69, label %71, label %629

; <label>:71:                                     ; preds = %30
  br i1 %44, label %77, label %72

; <label>:72:                                     ; preds = %71
  %73 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %41, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = call %"struct.std::__detail::_Hash_node_base"** @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_allocate_bucketsEm(%"class.std::_Hashtable"* %41, i64 %74)
  store %"struct.std::__detail::_Hash_node_base"** %75, %"struct.std::__detail::_Hash_node_base"*** %34, align 8
  %76 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %41, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"** %75, %"struct.std::__detail::_Hash_node_base"*** %76, align 8
  br label %77

; <label>:77:                                     ; preds = %72, %71
  %78 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %32, align 8
  %79 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %78, i32 0, i32 2
  %80 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %79, i32 0, i32 0
  %81 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %80, align 8
  %82 = icmp ne %"struct.std::__detail::_Hash_node_base"* %81, null
  br i1 %82, label %84, label %83

; <label>:83:                                     ; preds = %77
  br label %577

; <label>:84:                                     ; preds = %77
  %85 = load i32, i32* @x.439
  %86 = load i32, i32* @y.440
  %87 = add i32 %85, 335324159
  %88 = sub i32 %87, 1
  %89 = sub i32 %88, 335324159
  %90 = sub i32 %85, 1
  %91 = mul i32 %85, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %86, 10
  %95 = xor i1 %93, true
  %96 = xor i1 %94, true
  %97 = xor i1 true, true
  %98 = and i1 %95, true
  %99 = and i1 %93, %97
  %100 = and i1 %96, true
  %101 = and i1 %94, %97
  %102 = or i1 %98, %99
  %103 = or i1 %100, %101
  %104 = xor i1 %102, %103
  %105 = or i1 %95, %96
  %106 = xor i1 %105, true
  %107 = or i1 true, %97
  %108 = and i1 %106, %107
  %109 = or i1 %104, %108
  %110 = or i1 %93, %94
  br i1 %109, label %111, label %644

; <label>:111:                                    ; preds = %84, %644
  %112 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %32, align 8
  %113 = load i32, i32* @x.439
  %114 = load i32, i32* @y.440
  %115 = sub i32 0, 1
  %116 = add i32 %113, %115
  %117 = sub i32 %113, 1
  %118 = mul i32 %113, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %114, 10
  %122 = and i1 %120, %121
  %123 = xor i1 %120, %121
  %124 = or i1 %122, %123
  %125 = or i1 %120, %121
  br i1 %124, label %126, label %644

; <label>:126:                                    ; preds = %111
  %127 = invoke %"struct.std::__detail::_Hash_node"* @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_beginEv(%"class.std::_Hashtable"* %112)
          to label %128 unwind label %318

; <label>:128:                                    ; preds = %126
  store %"struct.std::__detail::_Hash_node"* %127, %"struct.std::__detail::_Hash_node"** %35, align 8
  %129 = load %class.anon.20*, %class.anon.20** %33, align 8
  %130 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %35, align 8
  %131 = invoke %"struct.std::__detail::_Hash_node"* @_ZZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEaSERKSF_ENKUlPKNS4_10_Hash_nodeIS2_Lb0EEEE0_clESL_(%class.anon.20* %129, %"struct.std::__detail::_Hash_node"* %130)
          to label %132 unwind label %318

; <label>:132:                                    ; preds = %128
  %133 = load i32, i32* @x.439
  %134 = load i32, i32* @y.440
  %135 = sub i32 0, 1
  %136 = add i32 %133, %135
  %137 = sub i32 %133, 1
  %138 = mul i32 %133, %136
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %134, 10
  %142 = xor i1 %140, true
  %143 = xor i1 %141, true
  %144 = xor i1 true, true
  %145 = and i1 %142, true
  %146 = and i1 %140, %144
  %147 = and i1 %143, true
  %148 = and i1 %141, %144
  %149 = or i1 %145, %146
  %150 = or i1 %147, %148
  %151 = xor i1 %149, %150
  %152 = or i1 %142, %143
  %153 = xor i1 %152, true
  %154 = or i1 true, %144
  %155 = and i1 %153, %154
  %156 = or i1 %151, %155
  %157 = or i1 %140, %141
  br i1 %156, label %158, label %646

; <label>:158:                                    ; preds = %132, %646
  store %"struct.std::__detail::_Hash_node"* %131, %"struct.std::__detail::_Hash_node"** %38, align 8
  %159 = bitcast %"class.std::_Hashtable"* %41 to %"struct.std::__detail::_Hash_code_base"*
  %160 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %38, align 8
  %161 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %35, align 8
  %162 = load i32, i32* @x.439
  %163 = load i32, i32* @y.440
  %164 = sub i32 %162, -290934460
  %165 = sub i32 %164, 1
  %166 = add i32 %165, -290934460
  %167 = sub i32 %162, 1
  %168 = mul i32 %162, %166
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %163, 10
  %172 = xor i1 %170, true
  %173 = xor i1 %171, true
  %174 = xor i1 false, true
  %175 = and i1 %172, false
  %176 = and i1 %170, %174
  %177 = and i1 %173, false
  %178 = and i1 %171, %174
  %179 = or i1 %175, %176
  %180 = or i1 %177, %178
  %181 = xor i1 %179, %180
  %182 = or i1 %172, %173
  %183 = xor i1 %182, true
  %184 = or i1 false, %174
  %185 = and i1 %183, %184
  %186 = or i1 %181, %185
  %187 = or i1 %170, %171
  br i1 %186, label %188, label %646

; <label>:188:                                    ; preds = %158
  invoke void @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE12_M_copy_codeEPNS_10_Hash_nodeIS3_Lb0EEEPKSB_(%"struct.std::__detail::_Hash_code_base"* %159, %"struct.std::__detail::_Hash_node"* %160, %"struct.std::__detail::_Hash_node"* %161)
          to label %189 unwind label %318

; <label>:189:                                    ; preds = %188
  %190 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %38, align 8
  %191 = bitcast %"struct.std::__detail::_Hash_node"* %190 to %"struct.std::__detail::_Hash_node_base"*
  %192 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %41, i32 0, i32 2
  %193 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %192, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %191, %"struct.std::__detail::_Hash_node_base"** %193, align 8
  %194 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %41, i32 0, i32 2
  %195 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %41, i32 0, i32 0
  %196 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %195, align 8
  %197 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %38, align 8
  %198 = call i64 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexEPNS4_10_Hash_nodeIS2_Lb0EEE(%"class.std::_Hashtable"* %41, %"struct.std::__detail::_Hash_node"* %197) #3
  %199 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %196, i64 %198
  store %"struct.std::__detail::_Hash_node_base"* %194, %"struct.std::__detail::_Hash_node_base"** %199, align 8
  %200 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %38, align 8
  %201 = bitcast %"struct.std::__detail::_Hash_node"* %200 to %"struct.std::__detail::_Hash_node_base"*
  store %"struct.std::__detail::_Hash_node_base"* %201, %"struct.std::__detail::_Hash_node_base"** %39, align 8
  %202 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %35, align 8
  %203 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %202) #3
  store %"struct.std::__detail::_Hash_node"* %203, %"struct.std::__detail::_Hash_node"** %35, align 8
  br label %204

; <label>:204:                                    ; preds = %499, %189
  %205 = load i32, i32* @x.439
  %206 = load i32, i32* @y.440
  %207 = add i32 %205, -1655177448
  %208 = sub i32 %207, 1
  %209 = sub i32 %208, -1655177448
  %210 = sub i32 %205, 1
  %211 = mul i32 %205, %209
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %206, 10
  %215 = and i1 %213, %214
  %216 = xor i1 %213, %214
  %217 = or i1 %215, %216
  %218 = or i1 %213, %214
  br i1 %217, label %219, label %650

; <label>:219:                                    ; preds = %204, %650
  %220 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %35, align 8
  %221 = icmp ne %"struct.std::__detail::_Hash_node"* %220, null
  %222 = load i32, i32* @x.439
  %223 = load i32, i32* @y.440
  %224 = sub i32 %222, 1919580160
  %225 = sub i32 %224, 1
  %226 = add i32 %225, 1919580160
  %227 = sub i32 %222, 1
  %228 = mul i32 %222, %226
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %223, 10
  %232 = and i1 %230, %231
  %233 = xor i1 %230, %231
  %234 = or i1 %232, %233
  %235 = or i1 %230, %231
  br i1 %234, label %236, label %650

; <label>:236:                                    ; preds = %219
  br i1 %221, label %237, label %500

; <label>:237:                                    ; preds = %236
  %238 = load i32, i32* @x.439
  %239 = load i32, i32* @y.440
  %240 = add i32 %238, 1741060601
  %241 = sub i32 %240, 1
  %242 = sub i32 %241, 1741060601
  %243 = sub i32 %238, 1
  %244 = mul i32 %238, %242
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %239, 10
  %248 = xor i1 %246, true
  %249 = xor i1 %247, true
  %250 = xor i1 true, true
  %251 = and i1 %248, true
  %252 = and i1 %246, %250
  %253 = and i1 %249, true
  %254 = and i1 %247, %250
  %255 = or i1 %251, %252
  %256 = or i1 %253, %254
  %257 = xor i1 %255, %256
  %258 = or i1 %248, %249
  %259 = xor i1 %258, true
  %260 = or i1 true, %250
  %261 = and i1 %259, %260
  %262 = or i1 %257, %261
  %263 = or i1 %246, %247
  br i1 %262, label %264, label %653

; <label>:264:                                    ; preds = %237, %653
  %265 = load %class.anon.20*, %class.anon.20** %33, align 8
  %266 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %35, align 8
  %267 = load i32, i32* @x.439
  %268 = load i32, i32* @y.440
  %269 = sub i32 %267, -1712530982
  %270 = sub i32 %269, 1
  %271 = add i32 %270, -1712530982
  %272 = sub i32 %267, 1
  %273 = mul i32 %267, %271
  %274 = urem i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %268, 10
  %277 = xor i1 %275, true
  %278 = xor i1 %276, true
  %279 = xor i1 false, true
  %280 = and i1 %277, false
  %281 = and i1 %275, %279
  %282 = and i1 %278, false
  %283 = and i1 %276, %279
  %284 = or i1 %280, %281
  %285 = or i1 %282, %283
  %286 = xor i1 %284, %285
  %287 = or i1 %277, %278
  %288 = xor i1 %287, true
  %289 = or i1 false, %279
  %290 = and i1 %288, %289
  %291 = or i1 %286, %290
  %292 = or i1 %275, %276
  br i1 %291, label %293, label %653

; <label>:293:                                    ; preds = %264
  %294 = invoke %"struct.std::__detail::_Hash_node"* @_ZZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEaSERKSF_ENKUlPKNS4_10_Hash_nodeIS2_Lb0EEEE0_clESL_(%class.anon.20* %265, %"struct.std::__detail::_Hash_node"* %266)
          to label %295 unwind label %318

; <label>:295:                                    ; preds = %293
  store %"struct.std::__detail::_Hash_node"* %294, %"struct.std::__detail::_Hash_node"** %38, align 8
  %296 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %38, align 8
  %297 = bitcast %"struct.std::__detail::_Hash_node"* %296 to %"struct.std::__detail::_Hash_node_base"*
  %298 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %39, align 8
  %299 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %298, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %297, %"struct.std::__detail::_Hash_node_base"** %299, align 8
  %300 = bitcast %"class.std::_Hashtable"* %41 to %"struct.std::__detail::_Hash_code_base"*
  %301 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %38, align 8
  %302 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %35, align 8
  invoke void @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE12_M_copy_codeEPNS_10_Hash_nodeIS3_Lb0EEEPKSB_(%"struct.std::__detail::_Hash_code_base"* %300, %"struct.std::__detail::_Hash_node"* %301, %"struct.std::__detail::_Hash_node"* %302)
          to label %303 unwind label %318

; <label>:303:                                    ; preds = %295
  %304 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %38, align 8
  %305 = call i64 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexEPNS4_10_Hash_nodeIS2_Lb0EEE(%"class.std::_Hashtable"* %41, %"struct.std::__detail::_Hash_node"* %304) #3
  store i64 %305, i64* %40, align 8
  %306 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %41, i32 0, i32 0
  %307 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %306, align 8
  %308 = load i64, i64* %40, align 8
  %309 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %307, i64 %308
  %310 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %309, align 8
  %311 = icmp ne %"struct.std::__detail::_Hash_node_base"* %310, null
  br i1 %311, label %411, label %312

; <label>:312:                                    ; preds = %303
  %313 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %39, align 8
  %314 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %41, i32 0, i32 0
  %315 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %314, align 8
  %316 = load i64, i64* %40, align 8
  %317 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %315, i64 %316
  store %"struct.std::__detail::_Hash_node_base"* %313, %"struct.std::__detail::_Hash_node_base"** %317, align 8
  br label %411

; <label>:318:                                    ; preds = %295, %293, %188, %128, %126
  %319 = landingpad { i8*, i32 }
          catch i8* null
  %320 = extractvalue { i8*, i32 } %319, 0
  store i8* %320, i8** %36, align 8
  %321 = extractvalue { i8*, i32 } %319, 1
  store i32 %321, i32* %37, align 4
  br label %322

; <label>:322:                                    ; preds = %318
  %323 = load i32, i32* @x.439
  %324 = load i32, i32* @y.440
  %325 = sub i32 %323, -1982966203
  %326 = sub i32 %325, 1
  %327 = add i32 %326, -1982966203
  %328 = sub i32 %323, 1
  %329 = mul i32 %323, %327
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %324, 10
  %333 = xor i1 %331, true
  %334 = xor i1 %332, true
  %335 = xor i1 true, true
  %336 = and i1 %333, true
  %337 = and i1 %331, %335
  %338 = and i1 %334, true
  %339 = and i1 %332, %335
  %340 = or i1 %336, %337
  %341 = or i1 %338, %339
  %342 = xor i1 %340, %341
  %343 = or i1 %333, %334
  %344 = xor i1 %343, true
  %345 = or i1 true, %335
  %346 = and i1 %344, %345
  %347 = or i1 %342, %346
  %348 = or i1 %331, %332
  br i1 %347, label %349, label %656

; <label>:349:                                    ; preds = %322, %656
  %350 = load i8*, i8** %36, align 8
  %351 = call i8* @__cxa_begin_catch(i8* %350) #3
  call void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv(%"class.std::_Hashtable"* %41) #3
  %352 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %34, align 8
  %353 = icmp ne %"struct.std::__detail::_Hash_node_base"** %352, null
  %354 = load i32, i32* @x.439
  %355 = load i32, i32* @y.440
  %356 = add i32 %354, -110324316
  %357 = sub i32 %356, 1
  %358 = sub i32 %357, -110324316
  %359 = sub i32 %354, 1
  %360 = mul i32 %354, %358
  %361 = urem i32 %360, 2
  %362 = icmp eq i32 %361, 0
  %363 = icmp slt i32 %355, 10
  %364 = xor i1 %362, true
  %365 = xor i1 %363, true
  %366 = xor i1 true, true
  %367 = and i1 %364, true
  %368 = and i1 %362, %366
  %369 = and i1 %365, true
  %370 = and i1 %363, %366
  %371 = or i1 %367, %368
  %372 = or i1 %369, %370
  %373 = xor i1 %371, %372
  %374 = or i1 %364, %365
  %375 = xor i1 %374, true
  %376 = or i1 true, %366
  %377 = and i1 %375, %376
  %378 = or i1 %373, %377
  %379 = or i1 %362, %363
  br i1 %378, label %380, label %656

; <label>:380:                                    ; preds = %349
  br i1 %353, label %381, label %545

; <label>:381:                                    ; preds = %380
  invoke void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_deallocate_bucketsEv(%"class.std::_Hashtable"* %41)
          to label %382 unwind label %541

; <label>:382:                                    ; preds = %381
  %383 = load i32, i32* @x.439
  %384 = load i32, i32* @y.440
  %385 = sub i32 0, 1
  %386 = add i32 %383, %385
  %387 = sub i32 %383, 1
  %388 = mul i32 %383, %386
  %389 = urem i32 %388, 2
  %390 = icmp eq i32 %389, 0
  %391 = icmp slt i32 %384, 10
  %392 = and i1 %390, %391
  %393 = xor i1 %390, %391
  %394 = or i1 %392, %393
  %395 = or i1 %390, %391
  br i1 %394, label %396, label %661

; <label>:396:                                    ; preds = %382, %661
  %397 = load i32, i32* @x.439
  %398 = load i32, i32* @y.440
  %399 = sub i32 0, 1
  %400 = add i32 %397, %399
  %401 = sub i32 %397, 1
  %402 = mul i32 %397, %400
  %403 = urem i32 %402, 2
  %404 = icmp eq i32 %403, 0
  %405 = icmp slt i32 %398, 10
  %406 = and i1 %404, %405
  %407 = xor i1 %404, %405
  %408 = or i1 %406, %407
  %409 = or i1 %404, %405
  br i1 %408, label %410, label %661

; <label>:410:                                    ; preds = %396
  br label %545

; <label>:411:                                    ; preds = %312, %303
  %412 = load i32, i32* @x.439
  %413 = load i32, i32* @y.440
  %414 = sub i32 0, 1
  %415 = add i32 %412, %414
  %416 = sub i32 %412, 1
  %417 = mul i32 %412, %415
  %418 = urem i32 %417, 2
  %419 = icmp eq i32 %418, 0
  %420 = icmp slt i32 %413, 10
  %421 = xor i1 %419, true
  %422 = xor i1 %420, true
  %423 = xor i1 true, true
  %424 = and i1 %421, true
  %425 = and i1 %419, %423
  %426 = and i1 %422, true
  %427 = and i1 %420, %423
  %428 = or i1 %424, %425
  %429 = or i1 %426, %427
  %430 = xor i1 %428, %429
  %431 = or i1 %421, %422
  %432 = xor i1 %431, true
  %433 = or i1 true, %423
  %434 = and i1 %432, %433
  %435 = or i1 %430, %434
  %436 = or i1 %419, %420
  br i1 %435, label %437, label %662

; <label>:437:                                    ; preds = %411, %662
  %438 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %38, align 8
  %439 = bitcast %"struct.std::__detail::_Hash_node"* %438 to %"struct.std::__detail::_Hash_node_base"*
  store %"struct.std::__detail::_Hash_node_base"* %439, %"struct.std::__detail::_Hash_node_base"** %39, align 8
  %440 = load i32, i32* @x.439
  %441 = load i32, i32* @y.440
  %442 = add i32 %440, 1120292681
  %443 = sub i32 %442, 1
  %444 = sub i32 %443, 1120292681
  %445 = sub i32 %440, 1
  %446 = mul i32 %440, %444
  %447 = urem i32 %446, 2
  %448 = icmp eq i32 %447, 0
  %449 = icmp slt i32 %441, 10
  %450 = xor i1 %448, true
  %451 = xor i1 %449, true
  %452 = xor i1 true, true
  %453 = and i1 %450, true
  %454 = and i1 %448, %452
  %455 = and i1 %451, true
  %456 = and i1 %449, %452
  %457 = or i1 %453, %454
  %458 = or i1 %455, %456
  %459 = xor i1 %457, %458
  %460 = or i1 %450, %451
  %461 = xor i1 %460, true
  %462 = or i1 true, %452
  %463 = and i1 %461, %462
  %464 = or i1 %459, %463
  %465 = or i1 %448, %449
  br i1 %464, label %466, label %662

; <label>:466:                                    ; preds = %437
  br label %467

; <label>:467:                                    ; preds = %466
  %468 = load i32, i32* @x.439
  %469 = load i32, i32* @y.440
  %470 = sub i32 %468, -872862774
  %471 = sub i32 %470, 1
  %472 = add i32 %471, -872862774
  %473 = sub i32 %468, 1
  %474 = mul i32 %468, %472
  %475 = urem i32 %474, 2
  %476 = icmp eq i32 %475, 0
  %477 = icmp slt i32 %469, 10
  %478 = and i1 %476, %477
  %479 = xor i1 %476, %477
  %480 = or i1 %478, %479
  %481 = or i1 %476, %477
  br i1 %480, label %482, label %665

; <label>:482:                                    ; preds = %467, %665
  %483 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %35, align 8
  %484 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %483) #3
  store %"struct.std::__detail::_Hash_node"* %484, %"struct.std::__detail::_Hash_node"** %35, align 8
  %485 = load i32, i32* @x.439
  %486 = load i32, i32* @y.440
  %487 = add i32 %485, 305080314
  %488 = sub i32 %487, 1
  %489 = sub i32 %488, 305080314
  %490 = sub i32 %485, 1
  %491 = mul i32 %485, %489
  %492 = urem i32 %491, 2
  %493 = icmp eq i32 %492, 0
  %494 = icmp slt i32 %486, 10
  %495 = and i1 %493, %494
  %496 = xor i1 %493, %494
  %497 = or i1 %495, %496
  %498 = or i1 %493, %494
  br i1 %497, label %499, label %665

; <label>:499:                                    ; preds = %482
  br label %204

; <label>:500:                                    ; preds = %236
  %501 = load i32, i32* @x.439
  %502 = load i32, i32* @y.440
  %503 = sub i32 0, 1
  %504 = add i32 %501, %503
  %505 = sub i32 %501, 1
  %506 = mul i32 %501, %504
  %507 = urem i32 %506, 2
  %508 = icmp eq i32 %507, 0
  %509 = icmp slt i32 %502, 10
  %510 = xor i1 %508, true
  %511 = xor i1 %509, true
  %512 = xor i1 true, true
  %513 = and i1 %510, true
  %514 = and i1 %508, %512
  %515 = and i1 %511, true
  %516 = and i1 %509, %512
  %517 = or i1 %513, %514
  %518 = or i1 %515, %516
  %519 = xor i1 %517, %518
  %520 = or i1 %510, %511
  %521 = xor i1 %520, true
  %522 = or i1 true, %512
  %523 = and i1 %521, %522
  %524 = or i1 %519, %523
  %525 = or i1 %508, %509
  br i1 %524, label %526, label %668

; <label>:526:                                    ; preds = %500, %668
  %527 = load i32, i32* @x.439
  %528 = load i32, i32* @y.440
  %529 = sub i32 0, 1
  %530 = add i32 %527, %529
  %531 = sub i32 %527, 1
  %532 = mul i32 %527, %530
  %533 = urem i32 %532, 2
  %534 = icmp eq i32 %533, 0
  %535 = icmp slt i32 %528, 10
  %536 = and i1 %534, %535
  %537 = xor i1 %534, %535
  %538 = or i1 %536, %537
  %539 = or i1 %534, %535
  br i1 %538, label %540, label %668

; <label>:540:                                    ; preds = %526
  br label %577

; <label>:541:                                    ; preds = %545, %381
  %542 = landingpad { i8*, i32 }
          cleanup
  %543 = extractvalue { i8*, i32 } %542, 0
  store i8* %543, i8** %36, align 8
  %544 = extractvalue { i8*, i32 } %542, 1
  store i32 %544, i32* %37, align 4
  invoke void @__cxa_end_catch()
          to label %546 unwind label %625

; <label>:545:                                    ; preds = %410, %380
  invoke void @__cxa_rethrow() #12
          to label %628 unwind label %541

; <label>:546:                                    ; preds = %541
  %547 = load i32, i32* @x.439
  %548 = load i32, i32* @y.440
  %549 = add i32 %547, 1574836588
  %550 = sub i32 %549, 1
  %551 = sub i32 %550, 1574836588
  %552 = sub i32 %547, 1
  %553 = mul i32 %547, %551
  %554 = urem i32 %553, 2
  %555 = icmp eq i32 %554, 0
  %556 = icmp slt i32 %548, 10
  %557 = and i1 %555, %556
  %558 = xor i1 %555, %556
  %559 = or i1 %557, %558
  %560 = or i1 %555, %556
  br i1 %559, label %561, label %669

; <label>:561:                                    ; preds = %546, %669
  %562 = load i32, i32* @x.439
  %563 = load i32, i32* @y.440
  %564 = sub i32 %562, 523362674
  %565 = sub i32 %564, 1
  %566 = add i32 %565, 523362674
  %567 = sub i32 %562, 1
  %568 = mul i32 %562, %566
  %569 = urem i32 %568, 2
  %570 = icmp eq i32 %569, 0
  %571 = icmp slt i32 %563, 10
  %572 = and i1 %570, %571
  %573 = xor i1 %570, %571
  %574 = or i1 %572, %573
  %575 = or i1 %570, %571
  br i1 %574, label %576, label %669

; <label>:576:                                    ; preds = %561
  br label %620

; <label>:577:                                    ; preds = %83, %540
  %578 = load i32, i32* @x.439
  %579 = load i32, i32* @y.440
  %580 = add i32 %578, -626093531
  %581 = sub i32 %580, 1
  %582 = sub i32 %581, -626093531
  %583 = sub i32 %578, 1
  %584 = mul i32 %578, %582
  %585 = urem i32 %584, 2
  %586 = icmp eq i32 %585, 0
  %587 = icmp slt i32 %579, 10
  %588 = and i1 %586, %587
  %589 = xor i1 %586, %587
  %590 = or i1 %588, %589
  %591 = or i1 %586, %587
  br i1 %590, label %592, label %670

; <label>:592:                                    ; preds = %577, %670
  %593 = load i32, i32* @x.439
  %594 = load i32, i32* @y.440
  %595 = sub i32 %593, -316108307
  %596 = sub i32 %595, 1
  %597 = add i32 %596, -316108307
  %598 = sub i32 %593, 1
  %599 = mul i32 %593, %597
  %600 = urem i32 %599, 2
  %601 = icmp eq i32 %600, 0
  %602 = icmp slt i32 %594, 10
  %603 = xor i1 %601, true
  %604 = xor i1 %602, true
  %605 = xor i1 true, true
  %606 = and i1 %603, true
  %607 = and i1 %601, %605
  %608 = and i1 %604, true
  %609 = and i1 %602, %605
  %610 = or i1 %606, %607
  %611 = or i1 %608, %609
  %612 = xor i1 %610, %611
  %613 = or i1 %603, %604
  %614 = xor i1 %613, true
  %615 = or i1 true, %605
  %616 = and i1 %614, %615
  %617 = or i1 %612, %616
  %618 = or i1 %601, %602
  br i1 %617, label %619, label %670

; <label>:619:                                    ; preds = %592
  ret void

; <label>:620:                                    ; preds = %576
  %621 = load i8*, i8** %36, align 8
  %622 = load i32, i32* %37, align 4
  %623 = insertvalue { i8*, i32 } undef, i8* %621, 0
  %624 = insertvalue { i8*, i32 } %623, i32 %622, 1
  resume { i8*, i32 } %624

; <label>:625:                                    ; preds = %541
  %626 = landingpad { i8*, i32 }
          catch i8* null
  %627 = extractvalue { i8*, i32 } %626, 0
  call void @__clang_call_terminate(i8* %627) #11
  unreachable

; <label>:628:                                    ; preds = %545
  unreachable

; <label>:629:                                    ; preds = %30, %3
  %630 = alloca %"class.std::_Hashtable"*, align 8
  %631 = alloca %"class.std::_Hashtable"*, align 8
  %632 = alloca %class.anon.20*, align 8
  %633 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %634 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %635 = alloca i8*
  %636 = alloca i32
  %637 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %638 = alloca %"struct.std::__detail::_Hash_node_base"*, align 8
  %639 = alloca i64, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %630, align 8
  store %"class.std::_Hashtable"* %1, %"class.std::_Hashtable"** %631, align 8
  store %class.anon.20* %2, %class.anon.20** %632, align 8
  %640 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %630, align 8
  store %"struct.std::__detail::_Hash_node_base"** null, %"struct.std::__detail::_Hash_node_base"*** %633, align 8
  %641 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %640, i32 0, i32 0
  %642 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %641, align 8
  %643 = icmp ne %"struct.std::__detail::_Hash_node_base"** %642, null
  br label %30

; <label>:644:                                    ; preds = %111, %84
  %645 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %32, align 8
  br label %111

; <label>:646:                                    ; preds = %158, %132
  store %"struct.std::__detail::_Hash_node"* %131, %"struct.std::__detail::_Hash_node"** %38, align 8
  %647 = bitcast %"class.std::_Hashtable"* %41 to %"struct.std::__detail::_Hash_code_base"*
  %648 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %38, align 8
  %649 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %35, align 8
  br label %158

; <label>:650:                                    ; preds = %219, %204
  %651 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %35, align 8
  %652 = icmp ne %"struct.std::__detail::_Hash_node"* %651, null
  br label %219

; <label>:653:                                    ; preds = %264, %237
  %654 = load %class.anon.20*, %class.anon.20** %33, align 8
  %655 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %35, align 8
  br label %264

; <label>:656:                                    ; preds = %349, %322
  %657 = load i8*, i8** %36, align 8
  %658 = call i8* @__cxa_begin_catch(i8* %657) #3
  call void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv(%"class.std::_Hashtable"* %41) #3
  %659 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %34, align 8
  %660 = icmp ne %"struct.std::__detail::_Hash_node_base"** %659, null
  br label %349

; <label>:661:                                    ; preds = %396, %382
  br label %396

; <label>:662:                                    ; preds = %437, %411
  %663 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %38, align 8
  %664 = bitcast %"struct.std::__detail::_Hash_node"* %663 to %"struct.std::__detail::_Hash_node_base"*
  store %"struct.std::__detail::_Hash_node_base"* %664, %"struct.std::__detail::_Hash_node_base"** %39, align 8
  br label %437

; <label>:665:                                    ; preds = %482, %467
  %666 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %35, align 8
  %667 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %666) #3
  store %"struct.std::__detail::_Hash_node"* %667, %"struct.std::__detail::_Hash_node"** %35, align 8
  br label %482

; <label>:668:                                    ; preds = %526, %500
  br label %526

; <label>:669:                                    ; preds = %561, %546
  br label %561

; <label>:670:                                    ; preds = %592, %577
  br label %592
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail17_ReuseOrAllocNodeISaINS_10_Hash_nodeISt4pairIKixELb0EEEEED2Ev(%"struct.std::__detail::_ReuseOrAllocNode"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::__detail::_ReuseOrAllocNode"*, align 8
  store %"struct.std::__detail::_ReuseOrAllocNode"* %0, %"struct.std::__detail::_ReuseOrAllocNode"** %2, align 8
  %3 = load %"struct.std::__detail::_ReuseOrAllocNode"*, %"struct.std::__detail::_ReuseOrAllocNode"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::__detail::_ReuseOrAllocNode", %"struct.std::__detail::_ReuseOrAllocNode"* %3, i32 0, i32 1
  %5 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__detail::_ReuseOrAllocNode", %"struct.std::__detail::_ReuseOrAllocNode"* %3, i32 0, i32 0
  %7 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %6, align 8
  invoke void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE19_M_deallocate_nodesEPS5_(%"struct.std::__detail::_Hashtable_alloc"* %5, %"struct.std::__detail::_Hash_node"* %7)
          to label %8 unwind label %9

; <label>:8:                                      ; preds = %1
  ret void

; <label>:9:                                      ; preds = %1
  %10 = landingpad { i8*, i32 }
          catch i8* null
  %11 = extractvalue { i8*, i32 } %10, 0
  call void @__clang_call_terminate(i8* %11) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail20_Prime_rehash_policy8_M_resetEm(%"struct.std::__detail::_Prime_rehash_policy"*, i64) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.443
  %6 = load i32, i32* @y.444
  %7 = add i32 %5, -352404509
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -352404509
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -335042535, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %79
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -335042535, label %19
    i32 -1136140867, label %39
    i32 180197076, label %72
    i32 110531033, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %79

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1136140867, i32 110531033
  store i32 %38, i32* %15
  br label %79

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::__detail::_Prime_rehash_policy"*, align 8
  %41 = alloca i64, align 8
  store %"struct.std::__detail::_Prime_rehash_policy"* %0, %"struct.std::__detail::_Prime_rehash_policy"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"struct.std::__detail::_Prime_rehash_policy"*, %"struct.std::__detail::_Prime_rehash_policy"** %40, align 8
  %43 = load i64, i64* %41, align 8
  %44 = getelementptr inbounds %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Prime_rehash_policy"* %42, i32 0, i32 1
  store i64 %43, i64* %44, align 8
  %45 = load i32, i32* @x.443
  %46 = load i32, i32* @y.444
  %47 = add i32 %45, -381967456
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -381967456
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 180197076, i32 110531033
  store i32 %71, i32* %15
  br label %79

; <label>:72:                                     ; preds = %16
  ret void

; <label>:73:                                     ; preds = %16
  %74 = alloca %"struct.std::__detail::_Prime_rehash_policy"*, align 8
  %75 = alloca i64, align 8
  store %"struct.std::__detail::_Prime_rehash_policy"* %0, %"struct.std::__detail::_Prime_rehash_policy"** %74, align 8
  store i64 %1, i64* %75, align 8
  %76 = load %"struct.std::__detail::_Prime_rehash_policy"*, %"struct.std::__detail::_Prime_rehash_policy"** %74, align 8
  %77 = load i64, i64* %75, align 8
  %78 = getelementptr inbounds %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Prime_rehash_policy"* %76, i32 0, i32 1
  store i64 %77, i64* %78, align 8
  store i32 -1136140867, i32* %15
  br label %79

; <label>:79:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEaSERKSF_ENKUlPKNS4_10_Hash_nodeIS2_Lb0EEEE0_clESL_(%class.anon.20*, %"struct.std::__detail::_Hash_node"*) #0 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Hash_node"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.445
  %7 = load i32, i32* @y.446
  %8 = sub i32 %6, 1299629279
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1299629279
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 844712339, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %64
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 844712339, label %20
    i32 1076710921, label %28
    i32 -1699211820, label %52
    i32 1138428298, label %54
  ]

; <label>:19:                                     ; preds = %17
  br label %64

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1076710921, i32 1138428298
  store i32 %27, i32* %16
  br label %64

; <label>:28:                                     ; preds = %17
  %29 = alloca %class.anon.20*, align 8
  %30 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %class.anon.20* %0, %class.anon.20** %29, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %30, align 8
  %31 = load %class.anon.20*, %class.anon.20** %29, align 8
  %32 = getelementptr inbounds %class.anon.20, %class.anon.20* %31, i32 0, i32 0
  %33 = load %"struct.std::__detail::_ReuseOrAllocNode"*, %"struct.std::__detail::_ReuseOrAllocNode"** %32, align 8
  %34 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %30, align 8
  %35 = bitcast %"struct.std::__detail::_Hash_node"* %34 to %"struct.std::__detail::_Hash_node_value_base"*
  %36 = call dereferenceable(16) %"struct.std::pair"* @_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKixEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base"* %35) #3
  %37 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail17_ReuseOrAllocNodeISaINS_10_Hash_nodeISt4pairIKixELb0EEEEEclIRKS4_EEPS5_OT_(%"struct.std::__detail::_ReuseOrAllocNode"* %33, %"struct.std::pair"* dereferenceable(16) %36)
  store %"struct.std::__detail::_Hash_node"* %37, %"struct.std::__detail::_Hash_node"** %3
  %38 = load i32, i32* @x.445
  %39 = load i32, i32* @y.446
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 -1699211820, i32 1138428298
  store i32 %51, i32* %16
  br label %64

; <label>:52:                                     ; preds = %17
  %53 = load volatile %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %3
  ret %"struct.std::__detail::_Hash_node"* %53

; <label>:54:                                     ; preds = %17
  %55 = alloca %class.anon.20*, align 8
  %56 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %class.anon.20* %0, %class.anon.20** %55, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %56, align 8
  %57 = load %class.anon.20*, %class.anon.20** %55, align 8
  %58 = getelementptr inbounds %class.anon.20, %class.anon.20* %57, i32 0, i32 0
  %59 = load %"struct.std::__detail::_ReuseOrAllocNode"*, %"struct.std::__detail::_ReuseOrAllocNode"** %58, align 8
  %60 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %56, align 8
  %61 = bitcast %"struct.std::__detail::_Hash_node"* %60 to %"struct.std::__detail::_Hash_node_value_base"*
  %62 = call dereferenceable(16) %"struct.std::pair"* @_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKixEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base"* %61) #3
  %63 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail17_ReuseOrAllocNodeISaINS_10_Hash_nodeISt4pairIKixELb0EEEEEclIRKS4_EEPS5_OT_(%"struct.std::__detail::_ReuseOrAllocNode"* %59, %"struct.std::pair"* dereferenceable(16) %62)
  store i32 1076710921, i32* %16
  br label %64

; <label>:64:                                     ; preds = %54, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail17_ReuseOrAllocNodeISaINS_10_Hash_nodeISt4pairIKixELb0EEEEEclIRKS4_EEPS5_OT_(%"struct.std::__detail::_ReuseOrAllocNode"*, %"struct.std::pair"* dereferenceable(16)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.447
  %4 = load i32, i32* @y.448
  %5 = add i32 %3, -377404785
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, -377404785
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %543

; <label>:29:                                     ; preds = %2, %543
  %30 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %31 = alloca %"struct.std::__detail::_ReuseOrAllocNode"*, align 8
  %32 = alloca %"struct.std::pair"*, align 8
  %33 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %34 = alloca %"class.std::allocator.12", align 1
  %35 = alloca i8*
  %36 = alloca i32
  store %"struct.std::__detail::_ReuseOrAllocNode"* %0, %"struct.std::__detail::_ReuseOrAllocNode"** %31, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %32, align 8
  %37 = load %"struct.std::__detail::_ReuseOrAllocNode"*, %"struct.std::__detail::_ReuseOrAllocNode"** %31, align 8
  %38 = getelementptr inbounds %"struct.std::__detail::_ReuseOrAllocNode", %"struct.std::__detail::_ReuseOrAllocNode"* %37, i32 0, i32 0
  %39 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %38, align 8
  %40 = icmp ne %"struct.std::__detail::_Hash_node"* %39, null
  %41 = load i32, i32* @x.447
  %42 = load i32, i32* @y.448
  %43 = sub i32 %41, 1881089933
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 1881089933
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  br i1 %53, label %55, label %543

; <label>:55:                                     ; preds = %29
  br i1 %40, label %56, label %336

; <label>:56:                                     ; preds = %55
  %57 = getelementptr inbounds %"struct.std::__detail::_ReuseOrAllocNode", %"struct.std::__detail::_ReuseOrAllocNode"* %37, i32 0, i32 0
  %58 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %57, align 8
  store %"struct.std::__detail::_Hash_node"* %58, %"struct.std::__detail::_Hash_node"** %33, align 8
  %59 = getelementptr inbounds %"struct.std::__detail::_ReuseOrAllocNode", %"struct.std::__detail::_ReuseOrAllocNode"* %37, i32 0, i32 0
  %60 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %59, align 8
  %61 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %60) #3
  %62 = getelementptr inbounds %"struct.std::__detail::_ReuseOrAllocNode", %"struct.std::__detail::_ReuseOrAllocNode"* %37, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %61, %"struct.std::__detail::_Hash_node"** %62, align 8
  %63 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %33, align 8
  %64 = bitcast %"struct.std::__detail::_Hash_node"* %63 to %"struct.std::__detail::_Hash_node_base"*
  %65 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %64, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %65, align 8
  %66 = getelementptr inbounds %"struct.std::__detail::_ReuseOrAllocNode", %"struct.std::__detail::_ReuseOrAllocNode"* %37, i32 0, i32 1
  %67 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %66, align 8
  %68 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %67)
  call void @_ZNSaISt4pairIKixEEC2INSt8__detail10_Hash_nodeIS1_Lb0EEEEERKSaIT_E(%"class.std::allocator.12"* %34, %"class.std::allocator.9"* dereferenceable(1) %68) #3
  %69 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %33, align 8
  %70 = bitcast %"struct.std::__detail::_Hash_node"* %69 to %"struct.std::__detail::_Hash_node_value_base"*
  %71 = call %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"* %70) #3
  invoke void @_ZNSt16allocator_traitsISaISt4pairIKixEEE7destroyIS2_EEvRS3_PT_(%"class.std::allocator.12"* dereferenceable(1) %34, %"struct.std::pair"* %71)
          to label %72 unwind label %133

; <label>:72:                                     ; preds = %56
  %73 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %33, align 8
  %74 = bitcast %"struct.std::__detail::_Hash_node"* %73 to %"struct.std::__detail::_Hash_node_value_base"*
  %75 = call %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"* %74) #3
  %76 = load %"struct.std::pair"*, %"struct.std::pair"** %32, align 8
  %77 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIKixEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair"* dereferenceable(16) %76) #3
  invoke void @_ZNSt16allocator_traitsISaISt4pairIKixEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_(%"class.std::allocator.12"* dereferenceable(1) %34, %"struct.std::pair"* %75, %"struct.std::pair"* dereferenceable(16) %77)
          to label %78 unwind label %137

; <label>:78:                                     ; preds = %72
  %79 = load i32, i32* @x.447
  %80 = load i32, i32* @y.448
  %81 = sub i32 %79, 2096083458
  %82 = sub i32 %81, 1
  %83 = add i32 %82, 2096083458
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = xor i1 %87, true
  %90 = xor i1 %88, true
  %91 = xor i1 true, true
  %92 = and i1 %89, true
  %93 = and i1 %87, %91
  %94 = and i1 %90, true
  %95 = and i1 %88, %91
  %96 = or i1 %92, %93
  %97 = or i1 %94, %95
  %98 = xor i1 %96, %97
  %99 = or i1 %89, %90
  %100 = xor i1 %99, true
  %101 = or i1 true, %91
  %102 = and i1 %100, %101
  %103 = or i1 %98, %102
  %104 = or i1 %87, %88
  br i1 %103, label %105, label %555

; <label>:105:                                    ; preds = %78, %555
  %106 = load i32, i32* @x.447
  %107 = load i32, i32* @y.448
  %108 = add i32 %106, -302942349
  %109 = sub i32 %108, 1
  %110 = sub i32 %109, -302942349
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = xor i1 %114, true
  %117 = xor i1 %115, true
  %118 = xor i1 false, true
  %119 = and i1 %116, false
  %120 = and i1 %114, %118
  %121 = and i1 %117, false
  %122 = and i1 %115, %118
  %123 = or i1 %119, %120
  %124 = or i1 %121, %122
  %125 = xor i1 %123, %124
  %126 = or i1 %116, %117
  %127 = xor i1 %126, true
  %128 = or i1 false, %118
  %129 = and i1 %127, %128
  %130 = or i1 %125, %129
  %131 = or i1 %114, %115
  br i1 %130, label %132, label %555

; <label>:132:                                    ; preds = %105
  br label %333

; <label>:133:                                    ; preds = %56
  %134 = landingpad { i8*, i32 }
          cleanup
  %135 = extractvalue { i8*, i32 } %134, 0
  store i8* %135, i8** %35, align 8
  %136 = extractvalue { i8*, i32 } %134, 1
  store i32 %136, i32* %36, align 4
  br label %335

; <label>:137:                                    ; preds = %72
  %138 = load i32, i32* @x.447
  %139 = load i32, i32* @y.448
  %140 = sub i32 0, 1
  %141 = add i32 %138, %140
  %142 = sub i32 %138, 1
  %143 = mul i32 %138, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %139, 10
  %147 = and i1 %145, %146
  %148 = xor i1 %145, %146
  %149 = or i1 %147, %148
  %150 = or i1 %145, %146
  br i1 %149, label %151, label %556

; <label>:151:                                    ; preds = %137, %556
  %152 = landingpad { i8*, i32 }
          catch i8* null
  %153 = extractvalue { i8*, i32 } %152, 0
  store i8* %153, i8** %35, align 8
  %154 = extractvalue { i8*, i32 } %152, 1
  store i32 %154, i32* %36, align 4
  %155 = load i32, i32* @x.447
  %156 = load i32, i32* @y.448
  %157 = sub i32 0, 1
  %158 = add i32 %155, %157
  %159 = sub i32 %155, 1
  %160 = mul i32 %155, %158
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %156, 10
  %164 = and i1 %162, %163
  %165 = xor i1 %162, %163
  %166 = or i1 %164, %165
  %167 = or i1 %162, %163
  br i1 %166, label %168, label %556

; <label>:168:                                    ; preds = %151
  br label %169

; <label>:169:                                    ; preds = %168
  %170 = load i32, i32* @x.447
  %171 = load i32, i32* @y.448
  %172 = add i32 %170, -947123494
  %173 = sub i32 %172, 1
  %174 = sub i32 %173, -947123494
  %175 = sub i32 %170, 1
  %176 = mul i32 %170, %174
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %171, 10
  %180 = xor i1 %178, true
  %181 = xor i1 %179, true
  %182 = xor i1 true, true
  %183 = and i1 %180, true
  %184 = and i1 %178, %182
  %185 = and i1 %181, true
  %186 = and i1 %179, %182
  %187 = or i1 %183, %184
  %188 = or i1 %185, %186
  %189 = xor i1 %187, %188
  %190 = or i1 %180, %181
  %191 = xor i1 %190, true
  %192 = or i1 true, %182
  %193 = and i1 %191, %192
  %194 = or i1 %189, %193
  %195 = or i1 %178, %179
  br i1 %194, label %196, label %560

; <label>:196:                                    ; preds = %169, %560
  %197 = load i8*, i8** %35, align 8
  %198 = call i8* @__cxa_begin_catch(i8* %197) #3
  %199 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %33, align 8
  %200 = getelementptr inbounds %"struct.std::__detail::_ReuseOrAllocNode", %"struct.std::__detail::_ReuseOrAllocNode"* %37, i32 0, i32 1
  %201 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %200, align 8
  %202 = load i32, i32* @x.447
  %203 = load i32, i32* @y.448
  %204 = sub i32 %202, 1389227006
  %205 = sub i32 %204, 1
  %206 = add i32 %205, 1389227006
  %207 = sub i32 %202, 1
  %208 = mul i32 %202, %206
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %203, 10
  %212 = xor i1 %210, true
  %213 = xor i1 %211, true
  %214 = xor i1 false, true
  %215 = and i1 %212, false
  %216 = and i1 %210, %214
  %217 = and i1 %213, false
  %218 = and i1 %211, %214
  %219 = or i1 %215, %216
  %220 = or i1 %217, %218
  %221 = xor i1 %219, %220
  %222 = or i1 %212, %213
  %223 = xor i1 %222, true
  %224 = or i1 false, %214
  %225 = and i1 %223, %224
  %226 = or i1 %221, %225
  %227 = or i1 %210, %211
  br i1 %226, label %228, label %560

; <label>:228:                                    ; preds = %196
  %229 = invoke dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %201)
          to label %230 unwind label %287

; <label>:230:                                    ; preds = %228
  %231 = load i32, i32* @x.447
  %232 = load i32, i32* @y.448
  %233 = add i32 %231, 1502961728
  %234 = sub i32 %233, 1
  %235 = sub i32 %234, 1502961728
  %236 = sub i32 %231, 1
  %237 = mul i32 %231, %235
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %232, 10
  %241 = xor i1 %239, true
  %242 = xor i1 %240, true
  %243 = xor i1 true, true
  %244 = and i1 %241, true
  %245 = and i1 %239, %243
  %246 = and i1 %242, true
  %247 = and i1 %240, %243
  %248 = or i1 %244, %245
  %249 = or i1 %246, %247
  %250 = xor i1 %248, %249
  %251 = or i1 %241, %242
  %252 = xor i1 %251, true
  %253 = or i1 true, %243
  %254 = and i1 %252, %253
  %255 = or i1 %250, %254
  %256 = or i1 %239, %240
  br i1 %255, label %257, label %566

; <label>:257:                                    ; preds = %230, %566
  %258 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %33, align 8
  %259 = load i32, i32* @x.447
  %260 = load i32, i32* @y.448
  %261 = sub i32 %259, 1518860620
  %262 = sub i32 %261, 1
  %263 = add i32 %262, 1518860620
  %264 = sub i32 %259, 1
  %265 = mul i32 %259, %263
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %260, 10
  %269 = xor i1 %267, true
  %270 = xor i1 %268, true
  %271 = xor i1 false, true
  %272 = and i1 %269, false
  %273 = and i1 %267, %271
  %274 = and i1 %270, false
  %275 = and i1 %268, %271
  %276 = or i1 %272, %273
  %277 = or i1 %274, %275
  %278 = xor i1 %276, %277
  %279 = or i1 %269, %270
  %280 = xor i1 %279, true
  %281 = or i1 false, %271
  %282 = and i1 %280, %281
  %283 = or i1 %278, %282
  %284 = or i1 %267, %268
  br i1 %283, label %285, label %566

; <label>:285:                                    ; preds = %257
  invoke void @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE10deallocateERS6_PS5_m(%"class.std::allocator.9"* dereferenceable(1) %229, %"struct.std::__detail::_Hash_node"* %258, i64 1)
          to label %286 unwind label %287

; <label>:286:                                    ; preds = %285
  invoke void @__cxa_rethrow() #12
          to label %489 unwind label %287

; <label>:287:                                    ; preds = %286, %285, %228
  %288 = landingpad { i8*, i32 }
          cleanup
  %289 = extractvalue { i8*, i32 } %288, 0
  store i8* %289, i8** %35, align 8
  %290 = extractvalue { i8*, i32 } %288, 1
  store i32 %290, i32* %36, align 4
  invoke void @__cxa_end_catch()
          to label %291 unwind label %445

; <label>:291:                                    ; preds = %287
  %292 = load i32, i32* @x.447
  %293 = load i32, i32* @y.448
  %294 = add i32 %292, 1828519557
  %295 = sub i32 %294, 1
  %296 = sub i32 %295, 1828519557
  %297 = sub i32 %292, 1
  %298 = mul i32 %292, %296
  %299 = urem i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %293, 10
  %302 = xor i1 %300, true
  %303 = xor i1 %301, true
  %304 = xor i1 false, true
  %305 = and i1 %302, false
  %306 = and i1 %300, %304
  %307 = and i1 %303, false
  %308 = and i1 %301, %304
  %309 = or i1 %305, %306
  %310 = or i1 %307, %308
  %311 = xor i1 %309, %310
  %312 = or i1 %302, %303
  %313 = xor i1 %312, true
  %314 = or i1 false, %304
  %315 = and i1 %313, %314
  %316 = or i1 %311, %315
  %317 = or i1 %300, %301
  br i1 %316, label %318, label %568

; <label>:318:                                    ; preds = %291, %568
  %319 = load i32, i32* @x.447
  %320 = load i32, i32* @y.448
  %321 = sub i32 0, 1
  %322 = add i32 %319, %321
  %323 = sub i32 %319, 1
  %324 = mul i32 %319, %322
  %325 = urem i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %320, 10
  %328 = and i1 %326, %327
  %329 = xor i1 %326, %327
  %330 = or i1 %328, %329
  %331 = or i1 %326, %327
  br i1 %330, label %332, label %568

; <label>:332:                                    ; preds = %318
  br label %335

; <label>:333:                                    ; preds = %132
  %334 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %33, align 8
  store %"struct.std::__detail::_Hash_node"* %334, %"struct.std::__detail::_Hash_node"** %30, align 8
  call void @_ZNSaISt4pairIKixEED2Ev(%"class.std::allocator.12"* %34) #3
  br label %384

; <label>:335:                                    ; preds = %332, %133
  call void @_ZNSaISt4pairIKixEED2Ev(%"class.std::allocator.12"* %34) #3
  br label %386

; <label>:336:                                    ; preds = %55
  %337 = load i32, i32* @x.447
  %338 = load i32, i32* @y.448
  %339 = sub i32 %337, 13395907
  %340 = sub i32 %339, 1
  %341 = add i32 %340, 13395907
  %342 = sub i32 %337, 1
  %343 = mul i32 %337, %341
  %344 = urem i32 %343, 2
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %338, 10
  %347 = and i1 %345, %346
  %348 = xor i1 %345, %346
  %349 = or i1 %347, %348
  %350 = or i1 %345, %346
  br i1 %349, label %351, label %569

; <label>:351:                                    ; preds = %336, %569
  %352 = getelementptr inbounds %"struct.std::__detail::_ReuseOrAllocNode", %"struct.std::__detail::_ReuseOrAllocNode"* %37, i32 0, i32 1
  %353 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %352, align 8
  %354 = load %"struct.std::pair"*, %"struct.std::pair"** %32, align 8
  %355 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIKixEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair"* dereferenceable(16) %354) #3
  %356 = call %"struct.std::__detail::_Hash_node"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE16_M_allocate_nodeIJRKS4_EEEPS5_DpOT_(%"struct.std::__detail::_Hashtable_alloc"* %353, %"struct.std::pair"* dereferenceable(16) %355)
  store %"struct.std::__detail::_Hash_node"* %356, %"struct.std::__detail::_Hash_node"** %30, align 8
  %357 = load i32, i32* @x.447
  %358 = load i32, i32* @y.448
  %359 = add i32 %357, -1000495043
  %360 = sub i32 %359, 1
  %361 = sub i32 %360, -1000495043
  %362 = sub i32 %357, 1
  %363 = mul i32 %357, %361
  %364 = urem i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = icmp slt i32 %358, 10
  %367 = xor i1 %365, true
  %368 = xor i1 %366, true
  %369 = xor i1 false, true
  %370 = and i1 %367, false
  %371 = and i1 %365, %369
  %372 = and i1 %368, false
  %373 = and i1 %366, %369
  %374 = or i1 %370, %371
  %375 = or i1 %372, %373
  %376 = xor i1 %374, %375
  %377 = or i1 %367, %368
  %378 = xor i1 %377, true
  %379 = or i1 false, %369
  %380 = and i1 %378, %379
  %381 = or i1 %376, %380
  %382 = or i1 %365, %366
  br i1 %381, label %383, label %569

; <label>:383:                                    ; preds = %351
  br label %384

; <label>:384:                                    ; preds = %383, %333
  %385 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %30, align 8
  ret %"struct.std::__detail::_Hash_node"* %385

; <label>:386:                                    ; preds = %335
  %387 = load i32, i32* @x.447
  %388 = load i32, i32* @y.448
  %389 = add i32 %387, 1030377937
  %390 = sub i32 %389, 1
  %391 = sub i32 %390, 1030377937
  %392 = sub i32 %387, 1
  %393 = mul i32 %387, %391
  %394 = urem i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = icmp slt i32 %388, 10
  %397 = xor i1 %395, true
  %398 = xor i1 %396, true
  %399 = xor i1 true, true
  %400 = and i1 %397, true
  %401 = and i1 %395, %399
  %402 = and i1 %398, true
  %403 = and i1 %396, %399
  %404 = or i1 %400, %401
  %405 = or i1 %402, %403
  %406 = xor i1 %404, %405
  %407 = or i1 %397, %398
  %408 = xor i1 %407, true
  %409 = or i1 true, %399
  %410 = and i1 %408, %409
  %411 = or i1 %406, %410
  %412 = or i1 %395, %396
  br i1 %411, label %413, label %575

; <label>:413:                                    ; preds = %386, %575
  %414 = load i8*, i8** %35, align 8
  %415 = load i32, i32* %36, align 4
  %416 = insertvalue { i8*, i32 } undef, i8* %414, 0
  %417 = insertvalue { i8*, i32 } %416, i32 %415, 1
  %418 = load i32, i32* @x.447
  %419 = load i32, i32* @y.448
  %420 = add i32 %418, -1220619203
  %421 = sub i32 %420, 1
  %422 = sub i32 %421, -1220619203
  %423 = sub i32 %418, 1
  %424 = mul i32 %418, %422
  %425 = urem i32 %424, 2
  %426 = icmp eq i32 %425, 0
  %427 = icmp slt i32 %419, 10
  %428 = xor i1 %426, true
  %429 = xor i1 %427, true
  %430 = xor i1 true, true
  %431 = and i1 %428, true
  %432 = and i1 %426, %430
  %433 = and i1 %429, true
  %434 = and i1 %427, %430
  %435 = or i1 %431, %432
  %436 = or i1 %433, %434
  %437 = xor i1 %435, %436
  %438 = or i1 %428, %429
  %439 = xor i1 %438, true
  %440 = or i1 true, %430
  %441 = and i1 %439, %440
  %442 = or i1 %437, %441
  %443 = or i1 %426, %427
  br i1 %442, label %444, label %575

; <label>:444:                                    ; preds = %413
  resume { i8*, i32 } %417

; <label>:445:                                    ; preds = %287
  %446 = load i32, i32* @x.447
  %447 = load i32, i32* @y.448
  %448 = sub i32 0, 1
  %449 = add i32 %446, %448
  %450 = sub i32 %446, 1
  %451 = mul i32 %446, %449
  %452 = urem i32 %451, 2
  %453 = icmp eq i32 %452, 0
  %454 = icmp slt i32 %447, 10
  %455 = and i1 %453, %454
  %456 = xor i1 %453, %454
  %457 = or i1 %455, %456
  %458 = or i1 %453, %454
  br i1 %457, label %459, label %580

; <label>:459:                                    ; preds = %445, %580
  %460 = landingpad { i8*, i32 }
          catch i8* null
  %461 = extractvalue { i8*, i32 } %460, 0
  call void @__clang_call_terminate(i8* %461) #11
  %462 = load i32, i32* @x.447
  %463 = load i32, i32* @y.448
  %464 = sub i32 %462, -1790027960
  %465 = sub i32 %464, 1
  %466 = add i32 %465, -1790027960
  %467 = sub i32 %462, 1
  %468 = mul i32 %462, %466
  %469 = urem i32 %468, 2
  %470 = icmp eq i32 %469, 0
  %471 = icmp slt i32 %463, 10
  %472 = xor i1 %470, true
  %473 = xor i1 %471, true
  %474 = xor i1 false, true
  %475 = and i1 %472, false
  %476 = and i1 %470, %474
  %477 = and i1 %473, false
  %478 = and i1 %471, %474
  %479 = or i1 %475, %476
  %480 = or i1 %477, %478
  %481 = xor i1 %479, %480
  %482 = or i1 %472, %473
  %483 = xor i1 %482, true
  %484 = or i1 false, %474
  %485 = and i1 %483, %484
  %486 = or i1 %481, %485
  %487 = or i1 %470, %471
  br i1 %486, label %488, label %580

; <label>:488:                                    ; preds = %459
  unreachable

; <label>:489:                                    ; preds = %286
  %490 = load i32, i32* @x.447
  %491 = load i32, i32* @y.448
  %492 = sub i32 %490, -1773762526
  %493 = sub i32 %492, 1
  %494 = add i32 %493, -1773762526
  %495 = sub i32 %490, 1
  %496 = mul i32 %490, %494
  %497 = urem i32 %496, 2
  %498 = icmp eq i32 %497, 0
  %499 = icmp slt i32 %491, 10
  %500 = xor i1 %498, true
  %501 = xor i1 %499, true
  %502 = xor i1 false, true
  %503 = and i1 %500, false
  %504 = and i1 %498, %502
  %505 = and i1 %501, false
  %506 = and i1 %499, %502
  %507 = or i1 %503, %504
  %508 = or i1 %505, %506
  %509 = xor i1 %507, %508
  %510 = or i1 %500, %501
  %511 = xor i1 %510, true
  %512 = or i1 false, %502
  %513 = and i1 %511, %512
  %514 = or i1 %509, %513
  %515 = or i1 %498, %499
  br i1 %514, label %516, label %583

; <label>:516:                                    ; preds = %489, %583
  %517 = load i32, i32* @x.447
  %518 = load i32, i32* @y.448
  %519 = sub i32 0, 1
  %520 = add i32 %517, %519
  %521 = sub i32 %517, 1
  %522 = mul i32 %517, %520
  %523 = urem i32 %522, 2
  %524 = icmp eq i32 %523, 0
  %525 = icmp slt i32 %518, 10
  %526 = xor i1 %524, true
  %527 = xor i1 %525, true
  %528 = xor i1 true, true
  %529 = and i1 %526, true
  %530 = and i1 %524, %528
  %531 = and i1 %527, true
  %532 = and i1 %525, %528
  %533 = or i1 %529, %530
  %534 = or i1 %531, %532
  %535 = xor i1 %533, %534
  %536 = or i1 %526, %527
  %537 = xor i1 %536, true
  %538 = or i1 true, %528
  %539 = and i1 %537, %538
  %540 = or i1 %535, %539
  %541 = or i1 %524, %525
  br i1 %540, label %542, label %583

; <label>:542:                                    ; preds = %516
  unreachable

; <label>:543:                                    ; preds = %29, %2
  %544 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %545 = alloca %"struct.std::__detail::_ReuseOrAllocNode"*, align 8
  %546 = alloca %"struct.std::pair"*, align 8
  %547 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %548 = alloca %"class.std::allocator.12", align 1
  %549 = alloca i8*
  %550 = alloca i32
  store %"struct.std::__detail::_ReuseOrAllocNode"* %0, %"struct.std::__detail::_ReuseOrAllocNode"** %545, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %546, align 8
  %551 = load %"struct.std::__detail::_ReuseOrAllocNode"*, %"struct.std::__detail::_ReuseOrAllocNode"** %545, align 8
  %552 = getelementptr inbounds %"struct.std::__detail::_ReuseOrAllocNode", %"struct.std::__detail::_ReuseOrAllocNode"* %551, i32 0, i32 0
  %553 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %552, align 8
  %554 = icmp ne %"struct.std::__detail::_Hash_node"* %553, null
  br label %29

; <label>:555:                                    ; preds = %105, %78
  br label %105

; <label>:556:                                    ; preds = %151, %137
  %557 = landingpad { i8*, i32 }
          catch i8* null
  %558 = extractvalue { i8*, i32 } %557, 0
  store i8* %558, i8** %35, align 8
  %559 = extractvalue { i8*, i32 } %557, 1
  store i32 %559, i32* %36, align 4
  br label %151

; <label>:560:                                    ; preds = %196, %169
  %561 = load i8*, i8** %35, align 8
  %562 = call i8* @__cxa_begin_catch(i8* %561) #3
  %563 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %33, align 8
  %564 = getelementptr inbounds %"struct.std::__detail::_ReuseOrAllocNode", %"struct.std::__detail::_ReuseOrAllocNode"* %37, i32 0, i32 1
  %565 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %564, align 8
  br label %196

; <label>:566:                                    ; preds = %257, %230
  %567 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %33, align 8
  br label %257

; <label>:568:                                    ; preds = %318, %291
  br label %318

; <label>:569:                                    ; preds = %351, %336
  %570 = getelementptr inbounds %"struct.std::__detail::_ReuseOrAllocNode", %"struct.std::__detail::_ReuseOrAllocNode"* %37, i32 0, i32 1
  %571 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %570, align 8
  %572 = load %"struct.std::pair"*, %"struct.std::pair"** %32, align 8
  %573 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIKixEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair"* dereferenceable(16) %572) #3
  %574 = call %"struct.std::__detail::_Hash_node"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE16_M_allocate_nodeIJRKS4_EEEPS5_DpOT_(%"struct.std::__detail::_Hashtable_alloc"* %571, %"struct.std::pair"* dereferenceable(16) %573)
  store %"struct.std::__detail::_Hash_node"* %574, %"struct.std::__detail::_Hash_node"** %30, align 8
  br label %351

; <label>:575:                                    ; preds = %413, %386
  %576 = load i8*, i8** %35, align 8
  %577 = load i32, i32* %36, align 4
  %578 = insertvalue { i8*, i32 } undef, i8* %576, 0
  %579 = insertvalue { i8*, i32 } %578, i32 %577, 1
  br label %413

; <label>:580:                                    ; preds = %459, %445
  %581 = landingpad { i8*, i32 }
          catch i8* null
  %582 = extractvalue { i8*, i32 } %581, 0
  call void @__clang_call_terminate(i8* %582) #11
  br label %459

; <label>:583:                                    ; preds = %516, %489
  br label %516
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEELb1EE7_S_baseESH_(%"class.std::unordered_map"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %2, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %3, align 8
  %4 = call dereferenceable(8) %"class.std::unordered_map"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.18"* %2) #3
  %5 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  ret %"class.std::unordered_map"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEELb1EE7_S_baseESG_(%"class.std::unordered_map"*) #4 comdat align 2 {
  %2 = alloca %"class.std::unordered_map"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.451
  %6 = load i32, i32* @y.452
  %7 = add i32 %5, -1208853304
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1208853304
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 743838835, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 743838835, label %19
    i32 52725743, label %27
    i32 -1632440754, label %58
    i32 468835150, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 52725743, i32 468835150
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %28, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %29, align 8
  %30 = call dereferenceable(8) %"class.std::unordered_map"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.19"* %28) #3
  %31 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %30, align 8
  store %"class.std::unordered_map"* %31, %"class.std::unordered_map"** %2
  %32 = load i32, i32* @x.451
  %33 = load i32, i32* @y.452
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -1632440754, i32 468835150
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"class.std::unordered_map"*, %"class.std::unordered_map"** %2
  ret %"class.std::unordered_map"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %61, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %62, align 8
  %63 = call dereferenceable(8) %"class.std::unordered_map"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISA_SaISA_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.19"* %61) #3
  %64 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %63, align 8
  store i32 52725743, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEELb0EE7_S_baseESH_(%"class.std::unordered_map"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %3, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %2 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.18"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %2, i32 0, i32 0
  %8 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  ret %"class.std::unordered_map"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt14__copy_move_a2ILb0EPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_ET1_T0_SC_SB_(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat {
  %4 = alloca %"class.std::unordered_map"*, align 8
  %5 = alloca %"class.std::unordered_map"*, align 8
  %6 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %4, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %5, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %6, align 8
  %7 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %8 = call %"class.std::unordered_map"* @_ZSt12__niter_baseIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEENSt11_Niter_baseIT_E13iterator_typeESC_(%"class.std::unordered_map"* %7)
  %9 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %5, align 8
  %10 = call %"class.std::unordered_map"* @_ZSt12__niter_baseIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEENSt11_Niter_baseIT_E13iterator_typeESC_(%"class.std::unordered_map"* %9)
  %11 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  %12 = call %"class.std::unordered_map"* @_ZSt12__niter_baseIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEENSt11_Niter_baseIT_E13iterator_typeESC_(%"class.std::unordered_map"* %11)
  %13 = call %"class.std::unordered_map"* @_ZSt13__copy_move_aILb0EPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_ET1_T0_SC_SB_(%"class.std::unordered_map"* %8, %"class.std::unordered_map"* %10, %"class.std::unordered_map"* %12)
  ret %"class.std::unordered_map"* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt12__miter_baseIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEENSt11_Miter_baseIT_E13iterator_typeESC_(%"class.std::unordered_map"*) #4 comdat {
  %2 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %2, align 8
  %3 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %2, align 8
  %4 = call %"class.std::unordered_map"* @_ZNSt10_Iter_baseIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEELb0EE7_S_baseESA_(%"class.std::unordered_map"* %3)
  ret %"class.std::unordered_map"* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt13__copy_move_aILb0EPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_ET1_T0_SC_SB_(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat {
  %4 = alloca %"class.std::unordered_map"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.459
  %8 = load i32, i32* @y.460
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 161547057, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %87
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 161547057, label %20
    i32 -1548265781, label %40
    i32 1181971102, label %76
    i32 1878135987, label %78
  ]

; <label>:19:                                     ; preds = %17
  br label %87

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1548265781, i32 1878135987
  store i32 %39, i32* %16
  br label %87

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::unordered_map"*, align 8
  %42 = alloca %"class.std::unordered_map"*, align 8
  %43 = alloca %"class.std::unordered_map"*, align 8
  %44 = alloca i8, align 1
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %41, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %42, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %43, align 8
  store i8 0, i8* %44, align 1
  %45 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %41, align 8
  %46 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %42, align 8
  %47 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %43, align 8
  %48 = call %"class.std::unordered_map"* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESD_EET0_T_SF_SE_(%"class.std::unordered_map"* %45, %"class.std::unordered_map"* %46, %"class.std::unordered_map"* %47)
  store %"class.std::unordered_map"* %48, %"class.std::unordered_map"** %4
  %49 = load i32, i32* @x.459
  %50 = load i32, i32* @y.460
  %51 = sub i32 %49, -662146382
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -662146382
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 1181971102, i32 1878135987
  store i32 %75, i32* %16
  br label %87

; <label>:76:                                     ; preds = %17
  %77 = load volatile %"class.std::unordered_map"*, %"class.std::unordered_map"** %4
  ret %"class.std::unordered_map"* %77

; <label>:78:                                     ; preds = %17
  %79 = alloca %"class.std::unordered_map"*, align 8
  %80 = alloca %"class.std::unordered_map"*, align 8
  %81 = alloca %"class.std::unordered_map"*, align 8
  %82 = alloca i8, align 1
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %79, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %80, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %81, align 8
  store i8 0, i8* %82, align 1
  %83 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %79, align 8
  %84 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %80, align 8
  %85 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %81, align 8
  %86 = call %"class.std::unordered_map"* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESD_EET0_T_SF_SE_(%"class.std::unordered_map"* %83, %"class.std::unordered_map"* %84, %"class.std::unordered_map"* %85)
  store i32 -1548265781, i32* %16
  br label %87

; <label>:87:                                     ; preds = %78, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt12__niter_baseIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEENSt11_Niter_baseIT_E13iterator_typeESC_(%"class.std::unordered_map"*) #0 comdat {
  %2 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %2, align 8
  %3 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %2, align 8
  %4 = call %"class.std::unordered_map"* @_ZNSt10_Iter_baseIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEELb0EE7_S_baseESA_(%"class.std::unordered_map"* %3)
  ret %"class.std::unordered_map"* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESD_EET0_T_SF_SE_(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat align 2 {
  %4 = alloca %"class.std::unordered_map"*
  %5 = alloca i64*
  %6 = alloca %"class.std::unordered_map"**
  %7 = alloca %"class.std::unordered_map"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.463
  %11 = load i32, i32* @y.464
  %12 = add i32 %10, -1897523352
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, -1897523352
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 1454489899, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %176
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 1454489899, label %24
    i32 1324864174, label %32
    i32 -1648876064, label %64
    i32 29614086, label %65
    i32 1853438684, label %70
    i32 1653630861, label %84
    i32 -1681505408, label %91
    i32 -1285221502, label %119
    i32 1173165670, label %137
    i32 996286383, label %139
    i32 751160282, label %173
  ]

; <label>:23:                                     ; preds = %21
  br label %176

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 1324864174, i32 996286383
  store i32 %31, i32* %20
  br label %176

; <label>:32:                                     ; preds = %21
  %33 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"** %33, %"class.std::unordered_map"*** %7
  %34 = alloca %"class.std::unordered_map"*, align 8
  %35 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"** %35, %"class.std::unordered_map"*** %6
  %36 = alloca i64, align 8
  store i64* %36, i64** %5
  %37 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %7
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %37, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %34, align 8
  %38 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %6
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %38, align 8
  %39 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %34, align 8
  %40 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %7
  %41 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %40, align 8
  %42 = ptrtoint %"class.std::unordered_map"* %39 to i64
  %43 = ptrtoint %"class.std::unordered_map"* %41 to i64
  %44 = sub i64 0, %43
  %45 = add i64 %42, %44
  %46 = sub i64 %42, %43
  %47 = sdiv exact i64 %45, 56
  %48 = load volatile i64*, i64** %5
  store i64 %47, i64* %48, align 8
  %49 = load i32, i32* @x.463
  %50 = load i32, i32* @y.464
  %51 = sub i32 %49, -28472553
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -28472553
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 -1648876064, i32 996286383
  store i32 %63, i32* %20
  br label %176

; <label>:64:                                     ; preds = %21
  store i32 29614086, i32* %20
  br label %176

; <label>:65:                                     ; preds = %21
  %66 = load volatile i64*, i64** %5
  %67 = load i64, i64* %66, align 8
  %68 = icmp sgt i64 %67, 0
  %69 = select i1 %68, i32 1853438684, i32 -1681505408
  store i32 %69, i32* %20
  br label %176

; <label>:70:                                     ; preds = %21
  %71 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %7
  %72 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %71, align 8
  %73 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %6
  %74 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %73, align 8
  %75 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEaSERKS8_(%"class.std::unordered_map"* %74, %"class.std::unordered_map"* dereferenceable(56) %72)
  %76 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %7
  %77 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %76, align 8
  %78 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %77, i32 1
  %79 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %7
  store %"class.std::unordered_map"* %78, %"class.std::unordered_map"** %79, align 8
  %80 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %6
  %81 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %80, align 8
  %82 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %81, i32 1
  %83 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %6
  store %"class.std::unordered_map"* %82, %"class.std::unordered_map"** %83, align 8
  store i32 1653630861, i32* %20
  br label %176

; <label>:84:                                     ; preds = %21
  %85 = load volatile i64*, i64** %5
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 0, -1
  %88 = sub i64 %86, %87
  %89 = add nsw i64 %86, -1
  %90 = load volatile i64*, i64** %5
  store i64 %88, i64* %90, align 8
  store i32 29614086, i32* %20
  br label %176

; <label>:91:                                     ; preds = %21
  %92 = load i32, i32* @x.463
  %93 = load i32, i32* @y.464
  %94 = add i32 %92, 745178245
  %95 = sub i32 %94, 1
  %96 = sub i32 %95, 745178245
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 false, true
  %105 = and i1 %102, false
  %106 = and i1 %100, %104
  %107 = and i1 %103, false
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 false, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  %118 = select i1 %116, i32 -1285221502, i32 751160282
  store i32 %118, i32* %20
  br label %176

; <label>:119:                                    ; preds = %21
  %120 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %6
  %121 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %120, align 8
  store %"class.std::unordered_map"* %121, %"class.std::unordered_map"** %4
  %122 = load i32, i32* @x.463
  %123 = load i32, i32* @y.464
  %124 = add i32 %122, 1893571755
  %125 = sub i32 %124, 1
  %126 = sub i32 %125, 1893571755
  %127 = sub i32 %122, 1
  %128 = mul i32 %122, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %123, 10
  %132 = and i1 %130, %131
  %133 = xor i1 %130, %131
  %134 = or i1 %132, %133
  %135 = or i1 %130, %131
  %136 = select i1 %134, i32 1173165670, i32 751160282
  store i32 %136, i32* %20
  br label %176

; <label>:137:                                    ; preds = %21
  %138 = load volatile %"class.std::unordered_map"*, %"class.std::unordered_map"** %4
  ret %"class.std::unordered_map"* %138

; <label>:139:                                    ; preds = %21
  %140 = alloca %"class.std::unordered_map"*, align 8
  %141 = alloca %"class.std::unordered_map"*, align 8
  %142 = alloca %"class.std::unordered_map"*, align 8
  %143 = alloca i64, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %140, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %141, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %142, align 8
  %144 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %141, align 8
  %145 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %140, align 8
  %146 = ptrtoint %"class.std::unordered_map"* %144 to i64
  %147 = ptrtoint %"class.std::unordered_map"* %145 to i64
  %148 = sub i64 0, %147
  %149 = add i64 %146, %148
  %150 = sub i64 %146, %147
  %151 = mul i64 %149, %147
  %152 = shl i64 %146, %147
  %153 = add i64 %146, 3418978810983404576
  %154 = sub i64 %153, %147
  %155 = sub i64 %154, 3418978810983404576
  %156 = sub i64 %146, %147
  %157 = mul i64 %155, %147
  %158 = sub i64 0, %147
  %159 = add i64 %146, %158
  %160 = sub i64 %146, %147
  %161 = mul i64 %159, %147
  %162 = sub i64 0, %147
  %163 = add i64 %146, %162
  %164 = sub i64 %146, %147
  %165 = shl i64 %163, 56
  %166 = sub i64 %163, 6712747175660999779
  %167 = sub i64 %166, 56
  %168 = add i64 %167, 6712747175660999779
  %169 = sub i64 %163, 56
  %170 = mul i64 %168, 56
  %171 = shl i64 %163, 56
  %172 = sdiv exact i64 %163, 56
  store i64 %172, i64* %143, align 8
  store i32 1324864174, i32* %20
  br label %176

; <label>:173:                                    ; preds = %21
  %174 = load volatile %"class.std::unordered_map"**, %"class.std::unordered_map"*** %6
  %175 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %174, align 8
  store i32 -1285221502, i32* %20
  br label %176

; <label>:176:                                    ; preds = %173, %139, %119, %91, %84, %70, %65, %64, %32, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNSt10_Iter_baseIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEELb0EE7_S_baseESA_(%"class.std::unordered_map"*) #4 comdat align 2 {
  %2 = alloca %"class.std::unordered_map"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.465
  %6 = load i32, i32* @y.466
  %7 = sub i32 %5, -651043506
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -651043506
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 640257586, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 640257586, label %19
    i32 710850145, label %39
    i32 -1999834524, label %56
    i32 1640896711, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 710850145, i32 1640896711
  store i32 %38, i32* %15
  br label %61

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %40, align 8
  %41 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %40, align 8
  store %"class.std::unordered_map"* %41, %"class.std::unordered_map"** %2
  %42 = load i32, i32* @x.465
  %43 = load i32, i32* @y.466
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -1999834524, i32 1640896711
  store i32 %55, i32* %15
  br label %61

; <label>:56:                                     ; preds = %16
  %57 = load volatile %"class.std::unordered_map"*, %"class.std::unordered_map"** %2
  ret %"class.std::unordered_map"* %57

; <label>:58:                                     ; preds = %16
  %59 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %59, align 8
  %60 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %59, align 8
  store i32 710850145, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt18uninitialized_copyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESA_ET0_T_SC_SB_(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat {
  %4 = alloca %"class.std::unordered_map"*, align 8
  %5 = alloca %"class.std::unordered_map"*, align 8
  %6 = alloca %"class.std::unordered_map"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %4, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %5, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %9 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %5, align 8
  %10 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  %11 = call %"class.std::unordered_map"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESC_EET0_T_SE_SD_(%"class.std::unordered_map"* %8, %"class.std::unordered_map"* %9, %"class.std::unordered_map"* %10)
  ret %"class.std::unordered_map"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESC_EET0_T_SE_SD_(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::unordered_map"*, align 8
  %5 = alloca %"class.std::unordered_map"*, align 8
  %6 = alloca %"class.std::unordered_map"*, align 8
  %7 = alloca %"class.std::unordered_map"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %4, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %5, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %6, align 8
  %10 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  store %"class.std::unordered_map"* %10, %"class.std::unordered_map"** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %83, %3
  %12 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %13 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %5, align 8
  %14 = icmp ne %"class.std::unordered_map"* %12, %13
  br i1 %14, label %15, label %94

; <label>:15:                                     ; preds = %11
  %16 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  %17 = call %"class.std::unordered_map"* @_ZSt11__addressofISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEPT_RSA_(%"class.std::unordered_map"* dereferenceable(56) %16) #3
  %18 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  invoke void @_ZSt10_ConstructISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEJRS9_EEvPT_DpOT0_(%"class.std::unordered_map"* %17, %"class.std::unordered_map"* dereferenceable(56) %18)
          to label %19 unwind label %84

; <label>:19:                                     ; preds = %15
  %20 = load i32, i32* @x.469
  %21 = load i32, i32* @y.470
  %22 = add i32 %20, 1746621368
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, 1746621368
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  br i1 %32, label %34, label %180

; <label>:34:                                     ; preds = %19, %180
  %35 = load i32, i32* @x.469
  %36 = load i32, i32* @y.470
  %37 = add i32 %35, 800616183
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 800616183
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  br i1 %47, label %49, label %180

; <label>:49:                                     ; preds = %34
  br label %50

; <label>:50:                                     ; preds = %49
  %51 = load i32, i32* @x.469
  %52 = load i32, i32* @y.470
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  br i1 %62, label %64, label %181

; <label>:64:                                     ; preds = %50, %181
  %65 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %66 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %65, i32 1
  store %"class.std::unordered_map"* %66, %"class.std::unordered_map"** %4, align 8
  %67 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  %68 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %67, i32 1
  store %"class.std::unordered_map"* %68, %"class.std::unordered_map"** %7, align 8
  %69 = load i32, i32* @x.469
  %70 = load i32, i32* @y.470
  %71 = add i32 %69, -709842719
  %72 = sub i32 %71, 1
  %73 = sub i32 %72, -709842719
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  br i1 %81, label %83, label %181

; <label>:83:                                     ; preds = %64
  br label %11

; <label>:84:                                     ; preds = %15
  %85 = landingpad { i8*, i32 }
          catch i8* null
  %86 = extractvalue { i8*, i32 } %85, 0
  store i8* %86, i8** %8, align 8
  %87 = extractvalue { i8*, i32 } %85, 1
  store i32 %87, i32* %9, align 4
  br label %88

; <label>:88:                                     ; preds = %84
  %89 = load i8*, i8** %8, align 8
  %90 = call i8* @__cxa_begin_catch(i8* %89) #3
  %91 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  %92 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvT_SB_(%"class.std::unordered_map"* %91, %"class.std::unordered_map"* %92)
          to label %93 unwind label %96

; <label>:93:                                     ; preds = %88
  invoke void @__cxa_rethrow() #12
          to label %151 unwind label %96

; <label>:94:                                     ; preds = %11
  %95 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  ret %"class.std::unordered_map"* %95

; <label>:96:                                     ; preds = %93, %88
  %97 = landingpad { i8*, i32 }
          cleanup
  %98 = extractvalue { i8*, i32 } %97, 0
  store i8* %98, i8** %8, align 8
  %99 = extractvalue { i8*, i32 } %97, 1
  store i32 %99, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %100 unwind label %148

; <label>:100:                                    ; preds = %96
  %101 = load i32, i32* @x.469
  %102 = load i32, i32* @y.470
  %103 = sub i32 0, 1
  %104 = add i32 %101, %103
  %105 = sub i32 %101, 1
  %106 = mul i32 %101, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %102, 10
  %110 = and i1 %108, %109
  %111 = xor i1 %108, %109
  %112 = or i1 %110, %111
  %113 = or i1 %108, %109
  br i1 %112, label %114, label %186

; <label>:114:                                    ; preds = %100, %186
  %115 = load i32, i32* @x.469
  %116 = load i32, i32* @y.470
  %117 = sub i32 %115, -1630993958
  %118 = sub i32 %117, 1
  %119 = add i32 %118, -1630993958
  %120 = sub i32 %115, 1
  %121 = mul i32 %115, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %116, 10
  %125 = xor i1 %123, true
  %126 = xor i1 %124, true
  %127 = xor i1 false, true
  %128 = and i1 %125, false
  %129 = and i1 %123, %127
  %130 = and i1 %126, false
  %131 = and i1 %124, %127
  %132 = or i1 %128, %129
  %133 = or i1 %130, %131
  %134 = xor i1 %132, %133
  %135 = or i1 %125, %126
  %136 = xor i1 %135, true
  %137 = or i1 false, %127
  %138 = and i1 %136, %137
  %139 = or i1 %134, %138
  %140 = or i1 %123, %124
  br i1 %139, label %141, label %186

; <label>:141:                                    ; preds = %114
  br label %143
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:143:                                    ; preds = %141
  %144 = load i8*, i8** %8, align 8
  %145 = load i32, i32* %9, align 4
  %146 = insertvalue { i8*, i32 } undef, i8* %144, 0
  %147 = insertvalue { i8*, i32 } %146, i32 %145, 1
  resume { i8*, i32 } %147

; <label>:148:                                    ; preds = %96
  %149 = landingpad { i8*, i32 }
          catch i8* null
  %150 = extractvalue { i8*, i32 } %149, 0
  call void @__clang_call_terminate(i8* %150) #11
  unreachable

; <label>:151:                                    ; preds = %93
  %152 = load i32, i32* @x.469
  %153 = load i32, i32* @y.470
  %154 = sub i32 0, 1
  %155 = add i32 %152, %154
  %156 = sub i32 %152, 1
  %157 = mul i32 %152, %155
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %153, 10
  %161 = and i1 %159, %160
  %162 = xor i1 %159, %160
  %163 = or i1 %161, %162
  %164 = or i1 %159, %160
  br i1 %163, label %165, label %187

; <label>:165:                                    ; preds = %151, %187
  %166 = load i32, i32* @x.469
  %167 = load i32, i32* @y.470
  %168 = sub i32 0, 1
  %169 = add i32 %166, %168
  %170 = sub i32 %166, 1
  %171 = mul i32 %166, %169
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %167, 10
  %175 = and i1 %173, %174
  %176 = xor i1 %173, %174
  %177 = or i1 %175, %176
  %178 = or i1 %173, %174
  br i1 %177, label %179, label %187

; <label>:179:                                    ; preds = %165
  unreachable

; <label>:180:                                    ; preds = %34, %19
  br label %34

; <label>:181:                                    ; preds = %64, %50
  %182 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %183 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %182, i32 1
  store %"class.std::unordered_map"* %183, %"class.std::unordered_map"** %4, align 8
  %184 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  %185 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %184, i32 1
  store %"class.std::unordered_map"* %185, %"class.std::unordered_map"** %7, align 8
  br label %64

; <label>:186:                                    ; preds = %114, %100
  br label %114

; <label>:187:                                    ; preds = %165, %151
  br label %165
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEJRS9_EEvPT_DpOT0_(%"class.std::unordered_map"*, %"class.std::unordered_map"* dereferenceable(56)) #0 comdat {
  %3 = alloca %"class.std::unordered_map"*, align 8
  %4 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %3, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %4, align 8
  %5 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %3, align 8
  %6 = bitcast %"class.std::unordered_map"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::unordered_map"*
  %8 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %9 = call dereferenceable(56) %"class.std::unordered_map"* @_ZSt7forwardIRSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEOT_RNSt16remove_referenceISB_E4typeE(%"class.std::unordered_map"* dereferenceable(56) %8) #3
  call void @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEC2ERKS8_(%"class.std::unordered_map"* %7, %"class.std::unordered_map"* dereferenceable(56) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(56) %"class.std::unordered_map"* @_ZSt7forwardIRSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEOT_RNSt16remove_referenceISB_E4typeE(%"class.std::unordered_map"* dereferenceable(56)) #4 comdat {
  %2 = alloca %"class.std::unordered_map"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.473
  %6 = load i32, i32* @y.474
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 963030190, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 963030190, label %18
    i32 1729019296, label %38
    i32 542442852, label %68
    i32 319619572, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1729019296, i32 319619572
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %39, align 8
  %40 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %39, align 8
  store %"class.std::unordered_map"* %40, %"class.std::unordered_map"** %2
  %41 = load i32, i32* @x.473
  %42 = load i32, i32* @y.474
  %43 = sub i32 %41, 1893347262
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 1893347262
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 542442852, i32 319619572
  store i32 %67, i32* %14
  br label %73

; <label>:68:                                     ; preds = %15
  %69 = load volatile %"class.std::unordered_map"*, %"class.std::unordered_map"** %2
  ret %"class.std::unordered_map"* %69

; <label>:70:                                     ; preds = %15
  %71 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %71, align 8
  %72 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %71, align 8
  store i32 1729019296, i32* %14
  br label %73

; <label>:73:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EES2_ISE_SaISE_EEEELb1EE7_S_baseESI_(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %4 = call dereferenceable(8) %"class.std::vector.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EES1_ISD_SaISD_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %2) #3
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  ret %"class.std::vector.0"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EES1_ISD_SaISD_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.0"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.477
  %6 = load i32, i32* @y.478
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -409030891, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %63
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -409030891, label %18
    i32 409620605, label %38
    i32 1642353946, label %57
    i32 -1172887285, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %63

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 409620605, i32 -1172887285
  store i32 %37, i32* %14
  br label %63

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %39, align 8
  %40 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %39, align 8
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  store %"class.std::vector.0"** %41, %"class.std::vector.0"*** %2
  %42 = load i32, i32* @x.477
  %43 = load i32, i32* @y.478
  %44 = add i32 %42, 1015679610
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 1015679610
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 1642353946, i32 -1172887285
  store i32 %56, i32* %14
  br label %63

; <label>:57:                                     ; preds = %15
  %58 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %2
  ret %"class.std::vector.0"** %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %60, align 8
  %61 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %60, align 8
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %61, i32 0, i32 0
  store i32 409620605, i32* %14
  br label %63

; <label>:63:                                     ; preds = %59, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISB_EES1_ISD_SaISD_EEEC2ERKSE_(%"class.__gnu_cxx::__normal_iterator"*, %"class.std::vector.0"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.std::vector.0"**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.std::vector.0"** %1, %"class.std::vector.0"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.0"**, %"class.std::vector.0"*** %4, align 8
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  store %"class.std::vector.0"* %8, %"class.std::vector.0"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt20uninitialized_fill_nIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEmSC_ET_SE_T0_RKT1_(%"class.std::vector.0"*, i64, %"class.std::vector.0"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.0"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %11 = call %"class.std::vector.0"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EEmSE_EET_SG_T0_RKT1_(%"class.std::vector.0"* %8, i64 %9, %"class.std::vector.0"* dereferenceable(24) %10)
  ret %"class.std::vector.0"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISC_EEmSE_EET_SG_T0_RKT1_(%"class.std::vector.0"*, i64, %"class.std::vector.0"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.0"*, align 8
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %6, align 8
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  store %"class.std::vector.0"* %10, %"class.std::vector.0"** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %109, %3
  %12 = load i64, i64* %5, align 8
  %13 = icmp ugt i64 %12, 0
  br i1 %13, label %14, label %149

; <label>:14:                                     ; preds = %11
  %15 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %16 = call %"class.std::vector.0"* @_ZSt11__addressofISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEPT_RSD_(%"class.std::vector.0"* dereferenceable(24) %15) #3
  %17 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  invoke void @_ZSt10_ConstructISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEJRKSC_EEvPT_DpOT0_(%"class.std::vector.0"* %16, %"class.std::vector.0"* dereferenceable(24) %17)
          to label %18 unwind label %110

; <label>:18:                                     ; preds = %14
  %19 = load i32, i32* @x.483
  %20 = load i32, i32* @y.484
  %21 = add i32 %19, -1733593261
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, -1733593261
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 false, true
  %32 = and i1 %29, false
  %33 = and i1 %27, %31
  %34 = and i1 %30, false
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 false, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  br i1 %43, label %45, label %206

; <label>:45:                                     ; preds = %18, %206
  %46 = load i32, i32* @x.483
  %47 = load i32, i32* @y.484
  %48 = add i32 %46, -2135744881
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -2135744881
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  br i1 %58, label %60, label %206

; <label>:60:                                     ; preds = %45
  br label %61

; <label>:61:                                     ; preds = %60
  %62 = load i32, i32* @x.483
  %63 = load i32, i32* @y.484
  %64 = sub i32 0, 1
  %65 = add i32 %62, %64
  %66 = sub i32 %62, 1
  %67 = mul i32 %62, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %63, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  br i1 %73, label %75, label %207

; <label>:75:                                     ; preds = %61, %207
  %76 = load i64, i64* %5, align 8
  %77 = add i64 %76, -4849983715253022487
  %78 = add i64 %77, -1
  %79 = sub i64 %78, -4849983715253022487
  %80 = add i64 %76, -1
  store i64 %79, i64* %5, align 8
  %81 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %82 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %81, i32 1
  store %"class.std::vector.0"* %82, %"class.std::vector.0"** %7, align 8
  %83 = load i32, i32* @x.483
  %84 = load i32, i32* @y.484
  %85 = sub i32 %83, 2041303326
  %86 = sub i32 %85, 1
  %87 = add i32 %86, 2041303326
  %88 = sub i32 %83, 1
  %89 = mul i32 %83, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %84, 10
  %93 = xor i1 %91, true
  %94 = xor i1 %92, true
  %95 = xor i1 false, true
  %96 = and i1 %93, false
  %97 = and i1 %91, %95
  %98 = and i1 %94, false
  %99 = and i1 %92, %95
  %100 = or i1 %96, %97
  %101 = or i1 %98, %99
  %102 = xor i1 %100, %101
  %103 = or i1 %93, %94
  %104 = xor i1 %103, true
  %105 = or i1 false, %95
  %106 = and i1 %104, %105
  %107 = or i1 %102, %106
  %108 = or i1 %91, %92
  br i1 %107, label %109, label %207

; <label>:109:                                    ; preds = %75
  br label %11

; <label>:110:                                    ; preds = %14
  %111 = landingpad { i8*, i32 }
          catch i8* null
  %112 = extractvalue { i8*, i32 } %111, 0
  store i8* %112, i8** %8, align 8
  %113 = extractvalue { i8*, i32 } %111, 1
  store i32 %113, i32* %9, align 4
  br label %114

; <label>:114:                                    ; preds = %110
  %115 = load i32, i32* @x.483
  %116 = load i32, i32* @y.484
  %117 = sub i32 0, 1
  %118 = add i32 %115, %117
  %119 = sub i32 %115, 1
  %120 = mul i32 %115, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %116, 10
  %124 = and i1 %122, %123
  %125 = xor i1 %122, %123
  %126 = or i1 %124, %125
  %127 = or i1 %122, %123
  br i1 %126, label %128, label %234

; <label>:128:                                    ; preds = %114, %234
  %129 = load i8*, i8** %8, align 8
  %130 = call i8* @__cxa_begin_catch(i8* %129) #3
  %131 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %132 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %133 = load i32, i32* @x.483
  %134 = load i32, i32* @y.484
  %135 = add i32 %133, 400448284
  %136 = sub i32 %135, 1
  %137 = sub i32 %136, 400448284
  %138 = sub i32 %133, 1
  %139 = mul i32 %133, %137
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %134, 10
  %143 = and i1 %141, %142
  %144 = xor i1 %141, %142
  %145 = or i1 %143, %144
  %146 = or i1 %141, %142
  br i1 %145, label %147, label %234

; <label>:147:                                    ; preds = %128
  invoke void @_ZSt8_DestroyIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEvT_SE_(%"class.std::vector.0"* %131, %"class.std::vector.0"* %132)
          to label %148 unwind label %151

; <label>:148:                                    ; preds = %147
  invoke void @__cxa_rethrow() #12
          to label %205 unwind label %151

; <label>:149:                                    ; preds = %11
  %150 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  ret %"class.std::vector.0"* %150

; <label>:151:                                    ; preds = %148, %147
  %152 = landingpad { i8*, i32 }
          cleanup
  %153 = extractvalue { i8*, i32 } %152, 0
  store i8* %153, i8** %8, align 8
  %154 = extractvalue { i8*, i32 } %152, 1
  store i32 %154, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %155 unwind label %202

; <label>:155:                                    ; preds = %151
  %156 = load i32, i32* @x.483
  %157 = load i32, i32* @y.484
  %158 = sub i32 0, 1
  %159 = add i32 %156, %158
  %160 = sub i32 %156, 1
  %161 = mul i32 %156, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %157, 10
  %165 = xor i1 %163, true
  %166 = xor i1 %164, true
  %167 = xor i1 true, true
  %168 = and i1 %165, true
  %169 = and i1 %163, %167
  %170 = and i1 %166, true
  %171 = and i1 %164, %167
  %172 = or i1 %168, %169
  %173 = or i1 %170, %171
  %174 = xor i1 %172, %173
  %175 = or i1 %165, %166
  %176 = xor i1 %175, true
  %177 = or i1 true, %167
  %178 = and i1 %176, %177
  %179 = or i1 %174, %178
  %180 = or i1 %163, %164
  br i1 %179, label %181, label %239

; <label>:181:                                    ; preds = %155, %239
  %182 = load i32, i32* @x.483
  %183 = load i32, i32* @y.484
  %184 = sub i32 0, 1
  %185 = add i32 %182, %184
  %186 = sub i32 %182, 1
  %187 = mul i32 %182, %185
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %183, 10
  %191 = and i1 %189, %190
  %192 = xor i1 %189, %190
  %193 = or i1 %191, %192
  %194 = or i1 %189, %190
  br i1 %193, label %195, label %239

; <label>:195:                                    ; preds = %181
  br label %197
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:197:                                    ; preds = %195
  %198 = load i8*, i8** %8, align 8
  %199 = load i32, i32* %9, align 4
  %200 = insertvalue { i8*, i32 } undef, i8* %198, 0
  %201 = insertvalue { i8*, i32 } %200, i32 %199, 1
  resume { i8*, i32 } %201

; <label>:202:                                    ; preds = %151
  %203 = landingpad { i8*, i32 }
          catch i8* null
  %204 = extractvalue { i8*, i32 } %203, 0
  call void @__clang_call_terminate(i8* %204) #11
  unreachable

; <label>:205:                                    ; preds = %148
  unreachable

; <label>:206:                                    ; preds = %45, %18
  br label %45

; <label>:207:                                    ; preds = %75, %61
  %208 = load i64, i64* %5, align 8
  %209 = sub i64 0, %208
  %210 = add i64 0, %209
  %211 = sub i64 0, %208
  %212 = sub i64 0, %210
  %213 = sub i64 0, -1
  %214 = add i64 %212, %213
  %215 = sub i64 0, %214
  %216 = add i64 %210, -1
  %217 = sub i64 0, -1
  %218 = add i64 %208, %217
  %219 = sub i64 %208, -1
  %220 = mul i64 %218, -1
  %221 = sub i64 %208, -3679078115785571594
  %222 = sub i64 %221, -1
  %223 = add i64 %222, -3679078115785571594
  %224 = sub i64 %208, -1
  %225 = mul i64 %223, -1
  %226 = shl i64 %208, -1
  %227 = sub i64 0, %208
  %228 = sub i64 0, -1
  %229 = add i64 %227, %228
  %230 = sub i64 0, %229
  %231 = add i64 %208, -1
  store i64 %230, i64* %5, align 8
  %232 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %233 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %232, i32 1
  store %"class.std::vector.0"* %233, %"class.std::vector.0"** %7, align 8
  br label %75

; <label>:234:                                    ; preds = %128, %114
  %235 = load i8*, i8** %8, align 8
  %236 = call i8* @__cxa_begin_catch(i8* %235) #3
  %237 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %238 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  br label %128

; <label>:239:                                    ; preds = %181, %155
  br label %181
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEJRKSC_EEvPT_DpOT0_(%"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.485
  %6 = load i32, i32* @y.486
  %7 = sub i32 %5, -76839266
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -76839266
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1792628684, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %83
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1792628684, label %19
    i32 -1462069992, label %39
    i32 829448945, label %74
    i32 -829712353, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %83

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1462069992, i32 -829712353
  store i32 %38, i32* %15
  br label %83

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.0"*, align 8
  %41 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %40, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %41, align 8
  %42 = load %"class.std::vector.0"*, %"class.std::vector.0"** %40, align 8
  %43 = bitcast %"class.std::vector.0"* %42 to i8*
  %44 = bitcast i8* %43 to %"class.std::vector.0"*
  %45 = load %"class.std::vector.0"*, %"class.std::vector.0"** %41, align 8
  %46 = call dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardIRKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEOT_RNSt16remove_referenceISF_E4typeE(%"class.std::vector.0"* dereferenceable(24) %45) #3
  call void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2ERKSB_(%"class.std::vector.0"* %44, %"class.std::vector.0"* dereferenceable(24) %46)
  %47 = load i32, i32* @x.485
  %48 = load i32, i32* @y.486
  %49 = sub i32 %47, -167667324
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -167667324
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 829448945, i32 -829712353
  store i32 %73, i32* %15
  br label %83

; <label>:74:                                     ; preds = %16
  ret void

; <label>:75:                                     ; preds = %16
  %76 = alloca %"class.std::vector.0"*, align 8
  %77 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %76, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %77, align 8
  %78 = load %"class.std::vector.0"*, %"class.std::vector.0"** %76, align 8
  %79 = bitcast %"class.std::vector.0"* %78 to i8*
  %80 = bitcast i8* %79 to %"class.std::vector.0"*
  %81 = load %"class.std::vector.0"*, %"class.std::vector.0"** %77, align 8
  %82 = call dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardIRKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEOT_RNSt16remove_referenceISF_E4typeE(%"class.std::vector.0"* dereferenceable(24) %81) #3
  call void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2ERKSB_(%"class.std::vector.0"* %80, %"class.std::vector.0"* dereferenceable(24) %82)
  store i32 -1462069992, i32* %15
  br label %83

; <label>:83:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardIRKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEEOT_RNSt16remove_referenceISF_E4typeE(%"class.std::vector.0"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  ret %"class.std::vector.0"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2ERKSB_(%"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.489
  %4 = load i32, i32* @y.490
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %244

; <label>:28:                                     ; preds = %2, %244
  %29 = alloca %"class.std::vector.0"*, align 8
  %30 = alloca %"class.std::vector.0"*, align 8
  %31 = alloca %"class.std::allocator.2", align 1
  %32 = alloca i8*
  %33 = alloca i32
  %34 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %35 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %29, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %30, align 8
  %36 = load %"class.std::vector.0"*, %"class.std::vector.0"** %29, align 8
  %37 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %38 = load %"class.std::vector.0"*, %"class.std::vector.0"** %30, align 8
  %39 = call i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE4sizeEv(%"class.std::vector.0"* %38) #3
  %40 = load %"class.std::vector.0"*, %"class.std::vector.0"** %30, align 8
  %41 = bitcast %"class.std::vector.0"* %40 to %"struct.std::_Vector_base.1"*
  %42 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %41) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEE17_S_select_on_copyERKSB_(%"class.std::allocator.2"* sret %31, %"class.std::allocator.2"* dereferenceable(1) %42)
  %43 = load i32, i32* @x.489
  %44 = load i32, i32* @y.490
  %45 = add i32 %43, 1266351669
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 1266351669
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  br i1 %67, label %69, label %244

; <label>:69:                                     ; preds = %28
  invoke void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2EmRKSA_(%"struct.std::_Vector_base.1"* %37, i64 %39, %"class.std::allocator.2"* dereferenceable(1) %31)
          to label %70 unwind label %92

; <label>:70:                                     ; preds = %69
  call void @_ZNSaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEED2Ev(%"class.std::allocator.2"* %31) #3
  %71 = load %"class.std::vector.0"*, %"class.std::vector.0"** %30, align 8
  %72 = call %"class.std::unordered_map"* @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE5beginEv(%"class.std::vector.0"* %71) #3
  %73 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %34, i32 0, i32 0
  store %"class.std::unordered_map"* %72, %"class.std::unordered_map"** %73, align 8
  %74 = load %"class.std::vector.0"*, %"class.std::vector.0"** %30, align 8
  %75 = call %"class.std::unordered_map"* @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE3endEv(%"class.std::vector.0"* %74) #3
  %76 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %35, i32 0, i32 0
  store %"class.std::unordered_map"* %75, %"class.std::unordered_map"** %76, align 8
  %77 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %78 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %77, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %78, i32 0, i32 0
  %80 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %79, align 8
  %81 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %82 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %81) #3
  %83 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %34, i32 0, i32 0
  %84 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %83, align 8
  %85 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.18", %"class.__gnu_cxx::__normal_iterator.18"* %35, i32 0, i32 0
  %86 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %85, align 8
  %87 = invoke %"class.std::unordered_map"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEPSB_SB_ET0_T_SK_SJ_RSaIT1_E(%"class.std::unordered_map"* %84, %"class.std::unordered_map"* %86, %"class.std::unordered_map"* %80, %"class.std::allocator.2"* dereferenceable(1) %82)
          to label %88 unwind label %150

; <label>:88:                                     ; preds = %70
  %89 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %90 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %89, i32 0, i32 0
  %91 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %90, i32 0, i32 1
  store %"class.std::unordered_map"* %87, %"class.std::unordered_map"** %91, align 8
  ret void

; <label>:92:                                     ; preds = %69
  %93 = load i32, i32* @x.489
  %94 = load i32, i32* @y.490
  %95 = add i32 %93, 858310948
  %96 = sub i32 %95, 1
  %97 = sub i32 %96, 858310948
  %98 = sub i32 %93, 1
  %99 = mul i32 %93, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %94, 10
  %103 = xor i1 %101, true
  %104 = xor i1 %102, true
  %105 = xor i1 true, true
  %106 = and i1 %103, true
  %107 = and i1 %101, %105
  %108 = and i1 %104, true
  %109 = and i1 %102, %105
  %110 = or i1 %106, %107
  %111 = or i1 %108, %109
  %112 = xor i1 %110, %111
  %113 = or i1 %103, %104
  %114 = xor i1 %113, true
  %115 = or i1 true, %105
  %116 = and i1 %114, %115
  %117 = or i1 %112, %116
  %118 = or i1 %101, %102
  br i1 %117, label %119, label %259

; <label>:119:                                    ; preds = %92, %259
  %120 = landingpad { i8*, i32 }
          cleanup
  %121 = extractvalue { i8*, i32 } %120, 0
  store i8* %121, i8** %32, align 8
  %122 = extractvalue { i8*, i32 } %120, 1
  store i32 %122, i32* %33, align 4
  call void @_ZNSaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEED2Ev(%"class.std::allocator.2"* %31) #3
  %123 = load i32, i32* @x.489
  %124 = load i32, i32* @y.490
  %125 = sub i32 %123, 2000186632
  %126 = sub i32 %125, 1
  %127 = add i32 %126, 2000186632
  %128 = sub i32 %123, 1
  %129 = mul i32 %123, %127
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %124, 10
  %133 = xor i1 %131, true
  %134 = xor i1 %132, true
  %135 = xor i1 true, true
  %136 = and i1 %133, true
  %137 = and i1 %131, %135
  %138 = and i1 %134, true
  %139 = and i1 %132, %135
  %140 = or i1 %136, %137
  %141 = or i1 %138, %139
  %142 = xor i1 %140, %141
  %143 = or i1 %133, %134
  %144 = xor i1 %143, true
  %145 = or i1 true, %135
  %146 = and i1 %144, %145
  %147 = or i1 %142, %146
  %148 = or i1 %131, %132
  br i1 %147, label %149, label %259

; <label>:149:                                    ; preds = %119
  br label %185

; <label>:150:                                    ; preds = %70
  %151 = load i32, i32* @x.489
  %152 = load i32, i32* @y.490
  %153 = add i32 %151, 967880276
  %154 = sub i32 %153, 1
  %155 = sub i32 %154, 967880276
  %156 = sub i32 %151, 1
  %157 = mul i32 %151, %155
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %152, 10
  %161 = and i1 %159, %160
  %162 = xor i1 %159, %160
  %163 = or i1 %161, %162
  %164 = or i1 %159, %160
  br i1 %163, label %165, label %263

; <label>:165:                                    ; preds = %150, %263
  %166 = landingpad { i8*, i32 }
          cleanup
  %167 = extractvalue { i8*, i32 } %166, 0
  store i8* %167, i8** %32, align 8
  %168 = extractvalue { i8*, i32 } %166, 1
  store i32 %168, i32* %33, align 4
  %169 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EED2Ev(%"struct.std::_Vector_base.1"* %169) #3
  %170 = load i32, i32* @x.489
  %171 = load i32, i32* @y.490
  %172 = add i32 %170, 1051729002
  %173 = sub i32 %172, 1
  %174 = sub i32 %173, 1051729002
  %175 = sub i32 %170, 1
  %176 = mul i32 %170, %174
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %171, 10
  %180 = and i1 %178, %179
  %181 = xor i1 %178, %179
  %182 = or i1 %180, %181
  %183 = or i1 %178, %179
  br i1 %182, label %184, label %263

; <label>:184:                                    ; preds = %165
  br label %185

; <label>:185:                                    ; preds = %184, %149
  %186 = load i32, i32* @x.489
  %187 = load i32, i32* @y.490
  %188 = add i32 %186, -970874336
  %189 = sub i32 %188, 1
  %190 = sub i32 %189, -970874336
  %191 = sub i32 %186, 1
  %192 = mul i32 %186, %190
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %187, 10
  %196 = xor i1 %194, true
  %197 = xor i1 %195, true
  %198 = xor i1 true, true
  %199 = and i1 %196, true
  %200 = and i1 %194, %198
  %201 = and i1 %197, true
  %202 = and i1 %195, %198
  %203 = or i1 %199, %200
  %204 = or i1 %201, %202
  %205 = xor i1 %203, %204
  %206 = or i1 %196, %197
  %207 = xor i1 %206, true
  %208 = or i1 true, %198
  %209 = and i1 %207, %208
  %210 = or i1 %205, %209
  %211 = or i1 %194, %195
  br i1 %210, label %212, label %268

; <label>:212:                                    ; preds = %185, %268
  %213 = load i8*, i8** %32, align 8
  %214 = load i32, i32* %33, align 4
  %215 = insertvalue { i8*, i32 } undef, i8* %213, 0
  %216 = insertvalue { i8*, i32 } %215, i32 %214, 1
  %217 = load i32, i32* @x.489
  %218 = load i32, i32* @y.490
  %219 = add i32 %217, -900349182
  %220 = sub i32 %219, 1
  %221 = sub i32 %220, -900349182
  %222 = sub i32 %217, 1
  %223 = mul i32 %217, %221
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %218, 10
  %227 = xor i1 %225, true
  %228 = xor i1 %226, true
  %229 = xor i1 false, true
  %230 = and i1 %227, false
  %231 = and i1 %225, %229
  %232 = and i1 %228, false
  %233 = and i1 %226, %229
  %234 = or i1 %230, %231
  %235 = or i1 %232, %233
  %236 = xor i1 %234, %235
  %237 = or i1 %227, %228
  %238 = xor i1 %237, true
  %239 = or i1 false, %229
  %240 = and i1 %238, %239
  %241 = or i1 %236, %240
  %242 = or i1 %225, %226
  br i1 %241, label %243, label %268

; <label>:243:                                    ; preds = %212
  resume { i8*, i32 } %216

; <label>:244:                                    ; preds = %28, %2
  %245 = alloca %"class.std::vector.0"*, align 8
  %246 = alloca %"class.std::vector.0"*, align 8
  %247 = alloca %"class.std::allocator.2", align 1
  %248 = alloca i8*
  %249 = alloca i32
  %250 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  %251 = alloca %"class.__gnu_cxx::__normal_iterator.18", align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %245, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %246, align 8
  %252 = load %"class.std::vector.0"*, %"class.std::vector.0"** %245, align 8
  %253 = bitcast %"class.std::vector.0"* %252 to %"struct.std::_Vector_base.1"*
  %254 = load %"class.std::vector.0"*, %"class.std::vector.0"** %246, align 8
  %255 = call i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE4sizeEv(%"class.std::vector.0"* %254) #3
  %256 = load %"class.std::vector.0"*, %"class.std::vector.0"** %246, align 8
  %257 = bitcast %"class.std::vector.0"* %256 to %"struct.std::_Vector_base.1"*
  %258 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %257) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEE17_S_select_on_copyERKSB_(%"class.std::allocator.2"* sret %247, %"class.std::allocator.2"* dereferenceable(1) %258)
  br label %28

; <label>:259:                                    ; preds = %119, %92
  %260 = landingpad { i8*, i32 }
          cleanup
  %261 = extractvalue { i8*, i32 } %260, 0
  store i8* %261, i8** %32, align 8
  %262 = extractvalue { i8*, i32 } %260, 1
  store i32 %262, i32* %33, align 4
  call void @_ZNSaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEED2Ev(%"class.std::allocator.2"* %31) #3
  br label %119

; <label>:263:                                    ; preds = %165, %150
  %264 = landingpad { i8*, i32 }
          cleanup
  %265 = extractvalue { i8*, i32 } %264, 0
  store i8* %265, i8** %32, align 8
  %266 = extractvalue { i8*, i32 } %264, 1
  store i32 %266, i32* %33, align 4
  %267 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EED2Ev(%"struct.std::_Vector_base.1"* %267) #3
  br label %165

; <label>:268:                                    ; preds = %212, %185
  %269 = load i8*, i8** %32, align 8
  %270 = load i32, i32* %33, align 4
  %271 = insertvalue { i8*, i32 } undef, i8* %269, 0
  %272 = insertvalue { i8*, i32 } %271, i32 %270, 1
  br label %212
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEE17_S_select_on_copyERKSB_(%"class.std::allocator.2"* noalias sret, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %3, align 8
  %4 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  call void @_ZNSt16allocator_traitsISaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEE37select_on_container_copy_constructionERKSA_(%"class.std::allocator.2"* sret %0, %"class.std::allocator.2"* dereferenceable(1) %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %4 to %"class.std::allocator.2"*
  ret %"class.std::allocator.2"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2EmRKSA_(%"struct.std::_Vector_base.1"*, i64, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.495
  %5 = load i32, i32* @y.496
  %6 = add i32 %4, -96803770
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -96803770
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %53

; <label>:18:                                     ; preds = %3, %53
  %19 = alloca %"struct.std::_Vector_base.1"*, align 8
  %20 = alloca i64, align 8
  %21 = alloca %"class.std::allocator.2"*, align 8
  %22 = alloca i8*
  %23 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %19, align 8
  store i64 %1, i64* %20, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %21, align 8
  %24 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %19, align 8
  %25 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %24, i32 0, i32 0
  %26 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %21, align 8
  call void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_implC2ERKSA_(%"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %25, %"class.std::allocator.2"* dereferenceable(1) %26) #3
  %27 = load i64, i64* %20, align 8
  %28 = load i32, i32* @x.495
  %29 = load i32, i32* @y.496
  %30 = add i32 %28, 1946073458
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, 1946073458
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  br i1 %40, label %42, label %53

; <label>:42:                                     ; preds = %18
  invoke void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE17_M_create_storageEm(%"struct.std::_Vector_base.1"* %24, i64 %27)
          to label %43 unwind label %44

; <label>:43:                                     ; preds = %42
  ret void

; <label>:44:                                     ; preds = %42
  %45 = landingpad { i8*, i32 }
          cleanup
  %46 = extractvalue { i8*, i32 } %45, 0
  store i8* %46, i8** %22, align 8
  %47 = extractvalue { i8*, i32 } %45, 1
  store i32 %47, i32* %23, align 4
  call void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %25) #3
  br label %48

; <label>:48:                                     ; preds = %44
  %49 = load i8*, i8** %22, align 8
  %50 = load i32, i32* %23, align 4
  %51 = insertvalue { i8*, i32 } undef, i8* %49, 0
  %52 = insertvalue { i8*, i32 } %51, i32 %50, 1
  resume { i8*, i32 } %52

; <label>:53:                                     ; preds = %18, %3
  %54 = alloca %"struct.std::_Vector_base.1"*, align 8
  %55 = alloca i64, align 8
  %56 = alloca %"class.std::allocator.2"*, align 8
  %57 = alloca i8*
  %58 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %54, align 8
  store i64 %1, i64* %55, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %56, align 8
  %59 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %54, align 8
  %60 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %59, i32 0, i32 0
  %61 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %56, align 8
  call void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_implC2ERKSA_(%"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %60, %"class.std::allocator.2"* dereferenceable(1) %61) #3
  %62 = load i64, i64* %55, align 8
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEED2Ev(%"class.std::allocator.2"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.497
  %5 = load i32, i32* @y.498
  %6 = add i32 %4, 852101261
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 852101261
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1638452804, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1638452804, label %18
    i32 -1198413522, label %38
    i32 -1000622751, label %69
    i32 1736506842, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1198413522, i32 1736506842
  store i32 %37, i32* %14
  br label %74

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %39, align 8
  %40 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %39, align 8
  %41 = bitcast %"class.std::allocator.2"* %40 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEED2Ev(%"class.__gnu_cxx::new_allocator.3"* %41) #3
  %42 = load i32, i32* @x.497
  %43 = load i32, i32* @y.498
  %44 = add i32 %42, 197641016
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 197641016
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -1000622751, i32 1736506842
  store i32 %68, i32* %14
  br label %74

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %71, align 8
  %72 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %71, align 8
  %73 = bitcast %"class.std::allocator.2"* %72 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEED2Ev(%"class.__gnu_cxx::new_allocator.3"* %73) #3
  store i32 -1198413522, i32* %14
  br label %74

; <label>:74:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEE37select_on_container_copy_constructionERKSA_(%"class.std::allocator.2"* noalias sret, %"class.std::allocator.2"* dereferenceable(1)) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.499
  %6 = load i32, i32* @y.500
  %7 = sub i32 %5, 1268836623
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1268836623
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2128634391, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %60
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2128634391, label %19
    i32 -768756760, label %27
    i32 -139145446, label %56
    i32 1301902772, label %57
  ]

; <label>:18:                                     ; preds = %16
  br label %60

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -768756760, i32 1301902772
  store i32 %26, i32* %15
  br label %60

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %28, align 8
  %29 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %28, align 8
  call void @_ZNSaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEC2ERKS9_(%"class.std::allocator.2"* %0, %"class.std::allocator.2"* dereferenceable(1) %29) #3
  %30 = load i32, i32* @x.499
  %31 = load i32, i32* @y.500
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -139145446, i32 1301902772
  store i32 %55, i32* %15
  br label %60

; <label>:56:                                     ; preds = %16
  ret void

; <label>:57:                                     ; preds = %16
  %58 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %58, align 8
  %59 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %58, align 8
  call void @_ZNSaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEC2ERKS9_(%"class.std::allocator.2"* %0, %"class.std::allocator.2"* dereferenceable(1) %59) #3
  store i32 -768756760, i32* %15
  br label %60

; <label>:60:                                     ; preds = %57, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEC2ERKS9_(%"class.std::allocator.2"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEC2ERKSB_(%"class.__gnu_cxx::new_allocator.3"* %6, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEC2ERKSB_(%"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %1, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_implC2ERKSA_(%"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %5 to %"class.std::allocator.2"*
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  call void @_ZNSaISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEC2ERKS9_(%"class.std::allocator.2"* %6, %"class.std::allocator.2"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %5, i32 0, i32 0
  store %"class.std::unordered_map"* null, %"class.std::unordered_map"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %5, i32 0, i32 1
  store %"class.std::unordered_map"* null, %"class.std::unordered_map"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %5, i32 0, i32 2
  store %"class.std::unordered_map"* null, %"class.std::unordered_map"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE17_M_create_storageEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.1"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"class.std::unordered_map"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %8, i32 0, i32 0
  store %"class.std::unordered_map"* %7, %"class.std::unordered_map"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %13, i32 0, i32 1
  store %"class.std::unordered_map"* %12, %"class.std::unordered_map"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %20, i32 0, i32 2
  store %"class.std::unordered_map"* %19, %"class.std::unordered_map"** %21, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt10__fill_n_aIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEmSC_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeESH_T0_RKSG_(%"class.std::vector.0"*, i64, %"class.std::vector.0"* dereferenceable(24)) #0 comdat {
  %4 = alloca i1
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %7, align 8
  %9 = load i64, i64* %6, align 8
  store i64 %9, i64* %8, align 8
  %10 = alloca i32
  store i32 1209898459, i32* %10
  br label %11

; <label>:11:                                     ; preds = %3, %79
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 1209898459, label %14
    i32 -233691054, label %42
    i32 1444454971, label %59
    i32 -2040262665, label %62
    i32 -1291082683, label %66
    i32 1820037484, label %74
    i32 28352641, label %76
  ]

; <label>:13:                                     ; preds = %11
  br label %79

; <label>:14:                                     ; preds = %11
  %15 = load i32, i32* @x.509
  %16 = load i32, i32* @y.510
  %17 = sub i32 %15, 1671637441
  %18 = sub i32 %17, 1
  %19 = add i32 %18, 1671637441
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %16, 10
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -233691054, i32 28352641
  store i32 %41, i32* %10
  br label %79

; <label>:42:                                     ; preds = %11
  %43 = load i64, i64* %8, align 8
  %44 = icmp ugt i64 %43, 0
  store i1 %44, i1* %4
  %45 = load i32, i32* @x.509
  %46 = load i32, i32* @y.510
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1444454971, i32 28352641
  store i32 %58, i32* %10
  br label %79

; <label>:59:                                     ; preds = %11
  %60 = load volatile i1, i1* %4
  %61 = select i1 %60, i32 -2040262665, i32 1820037484
  store i32 %61, i32* %10
  br label %79

; <label>:62:                                     ; preds = %11
  %63 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %64 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %65 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEaSERKSB_(%"class.std::vector.0"* %64, %"class.std::vector.0"* dereferenceable(24) %63)
  store i32 -1291082683, i32* %10
  br label %79

; <label>:66:                                     ; preds = %11
  %67 = load i64, i64* %8, align 8
  %68 = sub i64 %67, -3919559790292891390
  %69 = add i64 %68, -1
  %70 = add i64 %69, -3919559790292891390
  %71 = add i64 %67, -1
  store i64 %70, i64* %8, align 8
  %72 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %73 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %72, i32 1
  store %"class.std::vector.0"* %73, %"class.std::vector.0"** %5, align 8
  store i32 1209898459, i32* %10
  br label %79

; <label>:74:                                     ; preds = %11
  %75 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  ret %"class.std::vector.0"* %75

; <label>:76:                                     ; preds = %11
  %77 = load i64, i64* %8, align 8
  %78 = icmp ugt i64 %77, 0
  store i32 -233691054, i32* %10
  br label %79

; <label>:79:                                     ; preds = %76, %66, %62, %59, %42, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt12__niter_baseIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EEENSt11_Niter_baseIT_E13iterator_typeESF_(%"class.std::vector.0"*) #0 comdat {
  %2 = alloca %"class.std::vector.0"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.511
  %6 = load i32, i32* @y.512
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1208793037, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %51
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1208793037, label %18
    i32 18648150, label %26
    i32 -687201204, label %45
    i32 -2054607562, label %47
  ]

; <label>:17:                                     ; preds = %15
  br label %51

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 18648150, i32 -2054607562
  store i32 %25, i32* %14
  br label %51

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %27, align 8
  %28 = load %"class.std::vector.0"*, %"class.std::vector.0"** %27, align 8
  %29 = call %"class.std::vector.0"* @_ZNSt10_Iter_baseIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EELb0EE7_S_baseESD_(%"class.std::vector.0"* %28)
  store %"class.std::vector.0"* %29, %"class.std::vector.0"** %2
  %30 = load i32, i32* @x.511
  %31 = load i32, i32* @y.512
  %32 = add i32 %30, -1945476194
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -1945476194
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -687201204, i32 -2054607562
  store i32 %44, i32* %14
  br label %51

; <label>:45:                                     ; preds = %15
  %46 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %2
  ret %"class.std::vector.0"* %46

; <label>:47:                                     ; preds = %15
  %48 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %48, align 8
  %49 = load %"class.std::vector.0"*, %"class.std::vector.0"** %48, align 8
  %50 = call %"class.std::vector.0"* @_ZNSt10_Iter_baseIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EELb0EE7_S_baseESD_(%"class.std::vector.0"* %49)
  store i32 18648150, i32* %14
  br label %51

; <label>:51:                                     ; preds = %47, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt10_Iter_baseIPSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaISA_EELb0EE7_S_baseESD_(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  ret %"class.std::vector.0"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE14_M_fill_assignEmRKS9_(%"class.std::vector.0"*, i64, %"class.std::unordered_map"* dereferenceable(56)) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.std::vector.0"*
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.std::unordered_map"*, align 8
  %10 = alloca %"class.std::vector.0", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %7, align 8
  store i64 %1, i64* %8, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %9, align 8
  %13 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  store %"class.std::vector.0"* %13, %"class.std::vector.0"** %6
  %14 = load i64, i64* %8, align 8
  store i64 %14, i64* %5
  %15 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %16 = call i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE8capacityEv(%"class.std::vector.0"* %15) #3
  store i64 %16, i64* %4
  %17 = alloca i32
  store i32 1642032367, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %184
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1642032367, label %21
    i32 1328270094, label %26
    i32 -2025346745, label %37
    i32 -1557370282, label %43
    i32 985002213, label %70
    i32 1636356213, label %117
    i32 -1465767724, label %118
    i32 1400821651, label %128
    i32 -1624232685, label %129
    i32 2016440579, label %130
  ]

; <label>:20:                                     ; preds = %18
  br label %184

; <label>:21:                                     ; preds = %18
  %22 = load volatile i64, i64* %5
  %23 = load volatile i64, i64* %4
  %24 = icmp ugt i64 %22, %23
  %25 = select i1 %24, i32 1328270094, i32 -2025346745
  store i32 %25, i32* %17
  br label %184

; <label>:26:                                     ; preds = %18
  %27 = load i64, i64* %8, align 8
  %28 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %9, align 8
  %29 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %30 = bitcast %"class.std::vector.0"* %29 to %"struct.std::_Vector_base.1"*
  %31 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %30) #3
  call void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2EmRKS9_RKSA_(%"class.std::vector.0"* %10, i64 %27, %"class.std::unordered_map"* dereferenceable(56) %28, %"class.std::allocator.2"* dereferenceable(1) %31)
  %32 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %32, i32 0, i32 0
  %34 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %35 = bitcast %"class.std::vector.0"* %34 to %"struct.std::_Vector_base.1"*
  %36 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %35, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_impl12_M_swap_dataERSC_(%"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %33, %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* dereferenceable(24) %36) #3
  call void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EED2Ev(%"class.std::vector.0"* %10) #3
  store i32 -1624232685, i32* %17
  br label %184

; <label>:37:                                     ; preds = %18
  %38 = load i64, i64* %8, align 8
  %39 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %40 = call i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE4sizeEv(%"class.std::vector.0"* %39) #3
  %41 = icmp ugt i64 %38, %40
  %42 = select i1 %41, i32 -1557370282, i32 -1465767724
  store i32 %42, i32* %17
  br label %184

; <label>:43:                                     ; preds = %18
  %44 = load i32, i32* @x.515
  %45 = load i32, i32* @y.516
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 985002213, i32 2016440579
  store i32 %69, i32* %17
  br label %184

; <label>:70:                                     ; preds = %18
  %71 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %72 = call %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE5beginEv(%"class.std::vector.0"* %71) #3
  %73 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %11, i32 0, i32 0
  store %"class.std::unordered_map"* %72, %"class.std::unordered_map"** %73, align 8
  %74 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %75 = call %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE3endEv(%"class.std::vector.0"* %74) #3
  %76 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %12, i32 0, i32 0
  store %"class.std::unordered_map"* %75, %"class.std::unordered_map"** %76, align 8
  %77 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %9, align 8
  %78 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %11, i32 0, i32 0
  %79 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %78, align 8
  %80 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %12, i32 0, i32 0
  %81 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %80, align 8
  call void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEESB_EvT_SH_RKT0_(%"class.std::unordered_map"* %79, %"class.std::unordered_map"* %81, %"class.std::unordered_map"* dereferenceable(56) %77)
  %82 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %83 = bitcast %"class.std::vector.0"* %82 to %"struct.std::_Vector_base.1"*
  %84 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %83, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %84, i32 0, i32 1
  %86 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %85, align 8
  %87 = load i64, i64* %8, align 8
  %88 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %89 = call i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE4sizeEv(%"class.std::vector.0"* %88) #3
  %90 = sub i64 0, %89
  %91 = add i64 %87, %90
  %92 = sub i64 %87, %89
  %93 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %9, align 8
  %94 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %95 = bitcast %"class.std::vector.0"* %94 to %"struct.std::_Vector_base.1"*
  %96 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %95) #3
  %97 = call %"class.std::unordered_map"* @_ZSt24__uninitialized_fill_n_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_S9_ET_SB_T0_RKT1_RSaIT2_E(%"class.std::unordered_map"* %86, i64 %91, %"class.std::unordered_map"* dereferenceable(56) %93, %"class.std::allocator.2"* dereferenceable(1) %96)
  %98 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %99 = bitcast %"class.std::vector.0"* %98 to %"struct.std::_Vector_base.1"*
  %100 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %99, i32 0, i32 0
  %101 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %100, i32 0, i32 1
  store %"class.std::unordered_map"* %97, %"class.std::unordered_map"** %101, align 8
  %102 = load i32, i32* @x.515
  %103 = load i32, i32* @y.516
  %104 = sub i32 %102, -376698595
  %105 = sub i32 %104, 1
  %106 = add i32 %105, -376698595
  %107 = sub i32 %102, 1
  %108 = mul i32 %102, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %103, 10
  %112 = and i1 %110, %111
  %113 = xor i1 %110, %111
  %114 = or i1 %112, %113
  %115 = or i1 %110, %111
  %116 = select i1 %114, i32 1636356213, i32 2016440579
  store i32 %116, i32* %17
  br label %184

; <label>:117:                                    ; preds = %18
  store i32 1400821651, i32* %17
  br label %184

; <label>:118:                                    ; preds = %18
  %119 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %120 = bitcast %"class.std::vector.0"* %119 to %"struct.std::_Vector_base.1"*
  %121 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %120, i32 0, i32 0
  %122 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %121, i32 0, i32 0
  %123 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %122, align 8
  %124 = load i64, i64* %8, align 8
  %125 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %9, align 8
  %126 = call %"class.std::unordered_map"* @_ZSt6fill_nIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_ET_SB_T0_RKT1_(%"class.std::unordered_map"* %123, i64 %124, %"class.std::unordered_map"* dereferenceable(56) %125)
  %127 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  call void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE15_M_erase_at_endEPS9_(%"class.std::vector.0"* %127, %"class.std::unordered_map"* %126) #3
  store i32 1400821651, i32* %17
  br label %184

; <label>:128:                                    ; preds = %18
  store i32 -1624232685, i32* %17
  br label %184

; <label>:129:                                    ; preds = %18
  ret void

; <label>:130:                                    ; preds = %18
  %131 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %132 = call %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE5beginEv(%"class.std::vector.0"* %131) #3
  %133 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %11, i32 0, i32 0
  store %"class.std::unordered_map"* %132, %"class.std::unordered_map"** %133, align 8
  %134 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %135 = call %"class.std::unordered_map"* @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE3endEv(%"class.std::vector.0"* %134) #3
  %136 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %12, i32 0, i32 0
  store %"class.std::unordered_map"* %135, %"class.std::unordered_map"** %136, align 8
  %137 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %9, align 8
  %138 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %11, i32 0, i32 0
  %139 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %138, align 8
  %140 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %12, i32 0, i32 0
  %141 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %140, align 8
  call void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEESB_EvT_SH_RKT0_(%"class.std::unordered_map"* %139, %"class.std::unordered_map"* %141, %"class.std::unordered_map"* dereferenceable(56) %137)
  %142 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %143 = bitcast %"class.std::vector.0"* %142 to %"struct.std::_Vector_base.1"*
  %144 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %143, i32 0, i32 0
  %145 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %144, i32 0, i32 1
  %146 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %145, align 8
  %147 = load i64, i64* %8, align 8
  %148 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %149 = call i64 @_ZNKSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE4sizeEv(%"class.std::vector.0"* %148) #3
  %150 = add i64 0, 8327620659619294148
  %151 = sub i64 %150, %147
  %152 = sub i64 %151, 8327620659619294148
  %153 = sub i64 0, %147
  %154 = sub i64 0, %152
  %155 = sub i64 0, %149
  %156 = add i64 %154, %155
  %157 = sub i64 0, %156
  %158 = add i64 %152, %149
  %159 = shl i64 %147, %149
  %160 = add i64 0, -7551341804268616345
  %161 = sub i64 %160, %147
  %162 = sub i64 %161, -7551341804268616345
  %163 = sub i64 0, %147
  %164 = add i64 %162, -1821264083332782906
  %165 = add i64 %164, %149
  %166 = sub i64 %165, -1821264083332782906
  %167 = add i64 %162, %149
  %168 = sub i64 0, %149
  %169 = add i64 %147, %168
  %170 = sub i64 %147, %149
  %171 = mul i64 %169, %149
  %172 = sub i64 0, %149
  %173 = add i64 %147, %172
  %174 = sub i64 %147, %149
  %175 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %9, align 8
  %176 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %177 = bitcast %"class.std::vector.0"* %176 to %"struct.std::_Vector_base.1"*
  %178 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %177) #3
  %179 = call %"class.std::unordered_map"* @_ZSt24__uninitialized_fill_n_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_S9_ET_SB_T0_RKT1_RSaIT2_E(%"class.std::unordered_map"* %146, i64 %173, %"class.std::unordered_map"* dereferenceable(56) %175, %"class.std::allocator.2"* dereferenceable(1) %178)
  %180 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %181 = bitcast %"class.std::vector.0"* %180 to %"struct.std::_Vector_base.1"*
  %182 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %181, i32 0, i32 0
  %183 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %182, i32 0, i32 1
  store %"class.std::unordered_map"* %179, %"class.std::unordered_map"** %183, align 8
  store i32 985002213, i32* %17
  br label %184

; <label>:184:                                    ; preds = %130, %128, %118, %117, %70, %43, %37, %26, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2EmRKS9_RKSA_(%"class.std::vector.0"*, i64, %"class.std::unordered_map"* dereferenceable(56), %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::unordered_map"*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %12 = bitcast %"class.std::vector.0"* %11 to %"struct.std::_Vector_base.1"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %8, align 8
  call void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EEC2EmRKSA_(%"struct.std::_Vector_base.1"* %12, i64 %13, %"class.std::allocator.2"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %7, align 8
  invoke void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE18_M_fill_initializeEmRKS9_(%"class.std::vector.0"* %11, i64 %15, %"class.std::unordered_map"* dereferenceable(56) %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %4
  ret void

; <label>:18:                                     ; preds = %4
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %9, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %10, align 4
  %22 = bitcast %"class.std::vector.0"* %11 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EED2Ev(%"struct.std::_Vector_base.1"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %9, align 8
  %25 = load i32, i32* %10, align 4
  %26 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE12_Vector_impl12_M_swap_dataERSC_(%"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* dereferenceable(24)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %1, %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvRT_SC_(%"class.std::unordered_map"** dereferenceable(8) %6, %"class.std::unordered_map"** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvRT_SC_(%"class.std::unordered_map"** dereferenceable(8) %9, %"class.std::unordered_map"** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvRT_SC_(%"class.std::unordered_map"** dereferenceable(8) %12, %"class.std::unordered_map"** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEESB_EvT_SH_RKT0_(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"* dereferenceable(56)) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %6 = alloca %"class.std::unordered_map"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %4, i32 0, i32 0
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %5, i32 0, i32 0
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %10, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %7, i32 0, i32 0
  %14 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %13, align 8
  %15 = call %"class.std::unordered_map"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEENSt11_Niter_baseIT_E13iterator_typeESI_(%"class.std::unordered_map"* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %8, i32 0, i32 0
  %19 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %18, align 8
  %20 = call %"class.std::unordered_map"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESt6vectorISB_SaISB_EEEEENSt11_Niter_baseIT_E13iterator_typeESI_(%"class.std::unordered_map"* %19)
  %21 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  call void @_ZSt8__fill_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEES9_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SG_RKSD_(%"class.std::unordered_map"* %15, %"class.std::unordered_map"* %20, %"class.std::unordered_map"* dereferenceable(56) %21)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt24__uninitialized_fill_n_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_S9_ET_SB_T0_RKT1_RSaIT2_E(%"class.std::unordered_map"*, i64, %"class.std::unordered_map"* dereferenceable(56), %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::unordered_map"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.523
  %9 = load i32, i32* @y.524
  %10 = sub i32 %8, 1200887069
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 1200887069
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -1653954633, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %76
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1653954633, label %22
    i32 -1879387171, label %30
    i32 1008335638, label %65
    i32 1157412491, label %67
  ]

; <label>:21:                                     ; preds = %19
  br label %76

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -1879387171, i32 1157412491
  store i32 %29, i32* %18
  br label %76

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::unordered_map"*, align 8
  %32 = alloca i64, align 8
  %33 = alloca %"class.std::unordered_map"*, align 8
  %34 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %31, align 8
  store i64 %1, i64* %32, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %33, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %34, align 8
  %35 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %31, align 8
  %36 = load i64, i64* %32, align 8
  %37 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %33, align 8
  %38 = call %"class.std::unordered_map"* @_ZSt20uninitialized_fill_nIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_ET_SB_T0_RKT1_(%"class.std::unordered_map"* %35, i64 %36, %"class.std::unordered_map"* dereferenceable(56) %37)
  store %"class.std::unordered_map"* %38, %"class.std::unordered_map"** %5
  %39 = load i32, i32* @x.523
  %40 = load i32, i32* @y.524
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 1008335638, i32 1157412491
  store i32 %64, i32* %18
  br label %76

; <label>:65:                                     ; preds = %19
  %66 = load volatile %"class.std::unordered_map"*, %"class.std::unordered_map"** %5
  ret %"class.std::unordered_map"* %66

; <label>:67:                                     ; preds = %19
  %68 = alloca %"class.std::unordered_map"*, align 8
  %69 = alloca i64, align 8
  %70 = alloca %"class.std::unordered_map"*, align 8
  %71 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %68, align 8
  store i64 %1, i64* %69, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %70, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %71, align 8
  %72 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %68, align 8
  %73 = load i64, i64* %69, align 8
  %74 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %70, align 8
  %75 = call %"class.std::unordered_map"* @_ZSt20uninitialized_fill_nIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_ET_SB_T0_RKT1_(%"class.std::unordered_map"* %72, i64 %73, %"class.std::unordered_map"* dereferenceable(56) %74)
  store i32 -1879387171, i32* %18
  br label %76

; <label>:76:                                     ; preds = %67, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE15_M_erase_at_endEPS9_(%"class.std::vector.0"*, %"class.std::unordered_map"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %7 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %8, i32 0, i32 1
  %10 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %9, align 8
  %11 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %12 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %11) #3
  invoke void @_ZSt8_DestroyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEES9_EvT_SB_RSaIT0_E(%"class.std::unordered_map"* %6, %"class.std::unordered_map"* %10, %"class.std::allocator.2"* dereferenceable(1) %12)
          to label %13 unwind label %71

; <label>:13:                                     ; preds = %2
  %14 = load i32, i32* @x.525
  %15 = load i32, i32* @y.526
  %16 = sub i32 %14, -1506640395
  %17 = sub i32 %16, 1
  %18 = add i32 %17, -1506640395
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  br i1 %38, label %40, label %74

; <label>:40:                                     ; preds = %13, %74
  %41 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %42 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %43, i32 0, i32 1
  store %"class.std::unordered_map"* %41, %"class.std::unordered_map"** %44, align 8
  %45 = load i32, i32* @x.525
  %46 = load i32, i32* @y.526
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  br i1 %68, label %70, label %74

; <label>:70:                                     ; preds = %40
  ret void

; <label>:71:                                     ; preds = %2
  %72 = landingpad { i8*, i32 }
          catch i8* null
  %73 = extractvalue { i8*, i32 } %72, 0
  call void @__clang_call_terminate(i8* %73) #11
  unreachable

; <label>:74:                                     ; preds = %40, %13
  %75 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %76 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %77 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %77, i32 0, i32 1
  store %"class.std::unordered_map"* %75, %"class.std::unordered_map"** %78, align 8
  br label %40
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt6fill_nIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_ET_SB_T0_RKT1_(%"class.std::unordered_map"*, i64, %"class.std::unordered_map"* dereferenceable(56)) #0 comdat {
  %4 = alloca %"class.std::unordered_map"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.527
  %8 = load i32, i32* @y.528
  %9 = sub i32 %7, -650610699
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -650610699
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1431323689, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %64
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1431323689, label %21
    i32 -671997601, label %29
    i32 1723824968, label %53
    i32 126269872, label %55
  ]

; <label>:20:                                     ; preds = %18
  br label %64

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -671997601, i32 126269872
  store i32 %28, i32* %17
  br label %64

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::unordered_map"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %30, align 8
  store i64 %1, i64* %31, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %32, align 8
  %33 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %30, align 8
  %34 = call %"class.std::unordered_map"* @_ZSt12__niter_baseIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEENSt11_Niter_baseIT_E13iterator_typeESC_(%"class.std::unordered_map"* %33)
  %35 = load i64, i64* %31, align 8
  %36 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %32, align 8
  %37 = call %"class.std::unordered_map"* @_ZSt10__fill_n_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeESE_T0_RKSD_(%"class.std::unordered_map"* %34, i64 %35, %"class.std::unordered_map"* dereferenceable(56) %36)
  store %"class.std::unordered_map"* %37, %"class.std::unordered_map"** %4
  %38 = load i32, i32* @x.527
  %39 = load i32, i32* @y.528
  %40 = sub i32 %38, 312353760
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 312353760
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 1723824968, i32 126269872
  store i32 %52, i32* %17
  br label %64

; <label>:53:                                     ; preds = %18
  %54 = load volatile %"class.std::unordered_map"*, %"class.std::unordered_map"** %4
  ret %"class.std::unordered_map"* %54

; <label>:55:                                     ; preds = %18
  %56 = alloca %"class.std::unordered_map"*, align 8
  %57 = alloca i64, align 8
  %58 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %56, align 8
  store i64 %1, i64* %57, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %58, align 8
  %59 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %56, align 8
  %60 = call %"class.std::unordered_map"* @_ZSt12__niter_baseIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEENSt11_Niter_baseIT_E13iterator_typeESC_(%"class.std::unordered_map"* %59)
  %61 = load i64, i64* %57, align 8
  %62 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %58, align 8
  %63 = call %"class.std::unordered_map"* @_ZSt10__fill_n_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeESE_T0_RKSD_(%"class.std::unordered_map"* %60, i64 %61, %"class.std::unordered_map"* dereferenceable(56) %62)
  store i32 -671997601, i32* %17
  br label %64

; <label>:64:                                     ; preds = %55, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE18_M_fill_initializeEmRKS9_(%"class.std::vector.0"*, i64, %"class.std::unordered_map"* dereferenceable(56)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.529
  %7 = load i32, i32* @y.530
  %8 = sub i32 %6, 1228883127
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1228883127
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 2130813398, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %102
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 2130813398, label %20
    i32 -1025784117, label %40
    i32 -2144078482, label %84
    i32 537373975, label %85
  ]

; <label>:19:                                     ; preds = %17
  br label %102

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1025784117, i32 537373975
  store i32 %39, i32* %16
  br label %102

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector.0"*, align 8
  %42 = alloca i64, align 8
  %43 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %41, align 8
  store i64 %1, i64* %42, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %43, align 8
  %44 = load %"class.std::vector.0"*, %"class.std::vector.0"** %41, align 8
  %45 = bitcast %"class.std::vector.0"* %44 to %"struct.std::_Vector_base.1"*
  %46 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %46, i32 0, i32 0
  %48 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %47, align 8
  %49 = load i64, i64* %42, align 8
  %50 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %43, align 8
  %51 = bitcast %"class.std::vector.0"* %44 to %"struct.std::_Vector_base.1"*
  %52 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %51) #3
  %53 = call %"class.std::unordered_map"* @_ZSt24__uninitialized_fill_n_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_S9_ET_SB_T0_RKT1_RSaIT2_E(%"class.std::unordered_map"* %48, i64 %49, %"class.std::unordered_map"* dereferenceable(56) %50, %"class.std::allocator.2"* dereferenceable(1) %52)
  %54 = bitcast %"class.std::vector.0"* %44 to %"struct.std::_Vector_base.1"*
  %55 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %54, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %55, i32 0, i32 1
  store %"class.std::unordered_map"* %53, %"class.std::unordered_map"** %56, align 8
  %57 = load i32, i32* @x.529
  %58 = load i32, i32* @y.530
  %59 = add i32 %57, -1138395907
  %60 = sub i32 %59, 1
  %61 = sub i32 %60, -1138395907
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = xor i1 %65, true
  %68 = xor i1 %66, true
  %69 = xor i1 false, true
  %70 = and i1 %67, false
  %71 = and i1 %65, %69
  %72 = and i1 %68, false
  %73 = and i1 %66, %69
  %74 = or i1 %70, %71
  %75 = or i1 %72, %73
  %76 = xor i1 %74, %75
  %77 = or i1 %67, %68
  %78 = xor i1 %77, true
  %79 = or i1 false, %69
  %80 = and i1 %78, %79
  %81 = or i1 %76, %80
  %82 = or i1 %65, %66
  %83 = select i1 %81, i32 -2144078482, i32 537373975
  store i32 %83, i32* %16
  br label %102

; <label>:84:                                     ; preds = %17
  ret void

; <label>:85:                                     ; preds = %17
  %86 = alloca %"class.std::vector.0"*, align 8
  %87 = alloca i64, align 8
  %88 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %86, align 8
  store i64 %1, i64* %87, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %88, align 8
  %89 = load %"class.std::vector.0"*, %"class.std::vector.0"** %86, align 8
  %90 = bitcast %"class.std::vector.0"* %89 to %"struct.std::_Vector_base.1"*
  %91 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %90, i32 0, i32 0
  %92 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %91, i32 0, i32 0
  %93 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %92, align 8
  %94 = load i64, i64* %87, align 8
  %95 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %88, align 8
  %96 = bitcast %"class.std::vector.0"* %89 to %"struct.std::_Vector_base.1"*
  %97 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEESaIS9_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %96) #3
  %98 = call %"class.std::unordered_map"* @_ZSt24__uninitialized_fill_n_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_S9_ET_SB_T0_RKT1_RSaIT2_E(%"class.std::unordered_map"* %93, i64 %94, %"class.std::unordered_map"* dereferenceable(56) %95, %"class.std::allocator.2"* dereferenceable(1) %97)
  %99 = bitcast %"class.std::vector.0"* %89 to %"struct.std::_Vector_base.1"*
  %100 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %99, i32 0, i32 0
  %101 = getelementptr inbounds %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > >, std::allocator<std::unordered_map<int, long long, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, long long> > > > >::_Vector_impl"* %100, i32 0, i32 1
  store %"class.std::unordered_map"* %98, %"class.std::unordered_map"** %101, align 8
  store i32 -1025784117, i32* %16
  br label %102

; <label>:102:                                    ; preds = %85, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvRT_SC_(%"class.std::unordered_map"** dereferenceable(8), %"class.std::unordered_map"** dereferenceable(8)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.531
  %6 = load i32, i32* @y.532
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -2133017695, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %94
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2133017695, label %18
    i32 -318230750, label %38
    i32 -741069579, label %79
    i32 1550575516, label %80
  ]

; <label>:17:                                     ; preds = %15
  br label %94

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -318230750, i32 1550575516
  store i32 %37, i32* %14
  br label %94

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::unordered_map"**, align 8
  %40 = alloca %"class.std::unordered_map"**, align 8
  %41 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"** %0, %"class.std::unordered_map"*** %39, align 8
  store %"class.std::unordered_map"** %1, %"class.std::unordered_map"*** %40, align 8
  %42 = load %"class.std::unordered_map"**, %"class.std::unordered_map"*** %39, align 8
  %43 = call dereferenceable(8) %"class.std::unordered_map"** @_ZSt4moveIRPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEONSt16remove_referenceIT_E4typeEOSD_(%"class.std::unordered_map"** dereferenceable(8) %42) #3
  %44 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %43, align 8
  store %"class.std::unordered_map"* %44, %"class.std::unordered_map"** %41, align 8
  %45 = load %"class.std::unordered_map"**, %"class.std::unordered_map"*** %40, align 8
  %46 = call dereferenceable(8) %"class.std::unordered_map"** @_ZSt4moveIRPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEONSt16remove_referenceIT_E4typeEOSD_(%"class.std::unordered_map"** dereferenceable(8) %45) #3
  %47 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %46, align 8
  %48 = load %"class.std::unordered_map"**, %"class.std::unordered_map"*** %39, align 8
  store %"class.std::unordered_map"* %47, %"class.std::unordered_map"** %48, align 8
  %49 = call dereferenceable(8) %"class.std::unordered_map"** @_ZSt4moveIRPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEONSt16remove_referenceIT_E4typeEOSD_(%"class.std::unordered_map"** dereferenceable(8) %41) #3
  %50 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %49, align 8
  %51 = load %"class.std::unordered_map"**, %"class.std::unordered_map"*** %40, align 8
  store %"class.std::unordered_map"* %50, %"class.std::unordered_map"** %51, align 8
  %52 = load i32, i32* @x.531
  %53 = load i32, i32* @y.532
  %54 = add i32 %52, 1150144354
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, 1150144354
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 -741069579, i32 1550575516
  store i32 %78, i32* %14
  br label %94

; <label>:79:                                     ; preds = %15
  ret void

; <label>:80:                                     ; preds = %15
  %81 = alloca %"class.std::unordered_map"**, align 8
  %82 = alloca %"class.std::unordered_map"**, align 8
  %83 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"** %0, %"class.std::unordered_map"*** %81, align 8
  store %"class.std::unordered_map"** %1, %"class.std::unordered_map"*** %82, align 8
  %84 = load %"class.std::unordered_map"**, %"class.std::unordered_map"*** %81, align 8
  %85 = call dereferenceable(8) %"class.std::unordered_map"** @_ZSt4moveIRPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEONSt16remove_referenceIT_E4typeEOSD_(%"class.std::unordered_map"** dereferenceable(8) %84) #3
  %86 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %85, align 8
  store %"class.std::unordered_map"* %86, %"class.std::unordered_map"** %83, align 8
  %87 = load %"class.std::unordered_map"**, %"class.std::unordered_map"*** %82, align 8
  %88 = call dereferenceable(8) %"class.std::unordered_map"** @_ZSt4moveIRPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEONSt16remove_referenceIT_E4typeEOSD_(%"class.std::unordered_map"** dereferenceable(8) %87) #3
  %89 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %88, align 8
  %90 = load %"class.std::unordered_map"**, %"class.std::unordered_map"*** %81, align 8
  store %"class.std::unordered_map"* %89, %"class.std::unordered_map"** %90, align 8
  %91 = call dereferenceable(8) %"class.std::unordered_map"** @_ZSt4moveIRPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEONSt16remove_referenceIT_E4typeEOSD_(%"class.std::unordered_map"** dereferenceable(8) %83) #3
  %92 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %91, align 8
  %93 = load %"class.std::unordered_map"**, %"class.std::unordered_map"*** %82, align 8
  store %"class.std::unordered_map"* %92, %"class.std::unordered_map"** %93, align 8
  store i32 -318230750, i32* %14
  br label %94

; <label>:94:                                     ; preds = %80, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::unordered_map"** @_ZSt4moveIRPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEONSt16remove_referenceIT_E4typeEOSD_(%"class.std::unordered_map"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"class.std::unordered_map"**, align 8
  store %"class.std::unordered_map"** %0, %"class.std::unordered_map"*** %2, align 8
  %3 = load %"class.std::unordered_map"**, %"class.std::unordered_map"*** %2, align 8
  ret %"class.std::unordered_map"** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8__fill_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEES9_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SG_RKSD_(%"class.std::unordered_map"*, %"class.std::unordered_map"*, %"class.std::unordered_map"* dereferenceable(56)) #0 comdat {
  %4 = alloca %"class.std::unordered_map"*, align 8
  %5 = alloca %"class.std::unordered_map"*, align 8
  %6 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %4, align 8
  store %"class.std::unordered_map"* %1, %"class.std::unordered_map"** %5, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %6, align 8
  %7 = alloca i32
  store i32 1011745476, i32* %7
  br label %8

; <label>:8:                                      ; preds = %3, %24
  %9 = load i32, i32* %7
  switch i32 %9, label %10 [
    i32 1011745476, label %11
    i32 272363737, label %16
    i32 8288890, label %20
    i32 1571760022, label %23
  ]

; <label>:10:                                     ; preds = %8
  br label %24

; <label>:11:                                     ; preds = %8
  %12 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %13 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %5, align 8
  %14 = icmp ne %"class.std::unordered_map"* %12, %13
  %15 = select i1 %14, i32 272363737, i32 1571760022
  store i32 %15, i32* %7
  br label %24

; <label>:16:                                     ; preds = %8
  %17 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  %18 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %19 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEaSERKS8_(%"class.std::unordered_map"* %18, %"class.std::unordered_map"* dereferenceable(56) %17)
  store i32 8288890, i32* %7
  br label %24

; <label>:20:                                     ; preds = %8
  %21 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %22 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %21, i32 1
  store %"class.std::unordered_map"* %22, %"class.std::unordered_map"** %4, align 8
  store i32 1011745476, i32* %7
  br label %24

; <label>:23:                                     ; preds = %8
  ret void

; <label>:24:                                     ; preds = %20, %16, %11, %10
  br label %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt20uninitialized_fill_nIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_ET_SB_T0_RKT1_(%"class.std::unordered_map"*, i64, %"class.std::unordered_map"* dereferenceable(56)) #0 comdat {
  %4 = alloca %"class.std::unordered_map"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::unordered_map"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  %11 = call %"class.std::unordered_map"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmSB_EET_SD_T0_RKT1_(%"class.std::unordered_map"* %8, i64 %9, %"class.std::unordered_map"* dereferenceable(56) %10)
  ret %"class.std::unordered_map"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmSB_EET_SD_T0_RKT1_(%"class.std::unordered_map"*, i64, %"class.std::unordered_map"* dereferenceable(56)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.539
  %5 = load i32, i32* @y.540
  %6 = add i32 %4, 1103775316
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1103775316
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %207

; <label>:18:                                     ; preds = %3, %207
  %19 = alloca %"class.std::unordered_map"*, align 8
  %20 = alloca i64, align 8
  %21 = alloca %"class.std::unordered_map"*, align 8
  %22 = alloca %"class.std::unordered_map"*, align 8
  %23 = alloca i8*
  %24 = alloca i32
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %19, align 8
  store i64 %1, i64* %20, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %21, align 8
  %25 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %19, align 8
  store %"class.std::unordered_map"* %25, %"class.std::unordered_map"** %22, align 8
  %26 = load i32, i32* @x.539
  %27 = load i32, i32* @y.540
  %28 = sub i32 0, 1
  %29 = add i32 %26, %28
  %30 = sub i32 %26, 1
  %31 = mul i32 %26, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %27, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  br i1 %37, label %39, label %207

; <label>:39:                                     ; preds = %18
  br label %40

; <label>:40:                                     ; preds = %150, %39
  %41 = load i64, i64* %20, align 8
  %42 = icmp ugt i64 %41, 0
  br i1 %42, label %43, label %161

; <label>:43:                                     ; preds = %40
  %44 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %22, align 8
  %45 = call %"class.std::unordered_map"* @_ZSt11__addressofISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEPT_RSA_(%"class.std::unordered_map"* dereferenceable(56) %44) #3
  %46 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %21, align 8
  invoke void @_ZSt10_ConstructISt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEJRKS9_EEvPT_DpOT0_(%"class.std::unordered_map"* %45, %"class.std::unordered_map"* dereferenceable(56) %46)
          to label %47 unwind label %151

; <label>:47:                                     ; preds = %43
  %48 = load i32, i32* @x.539
  %49 = load i32, i32* @y.540
  %50 = sub i32 %48, -793263458
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -793263458
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  br i1 %72, label %74, label %215

; <label>:74:                                     ; preds = %47, %215
  %75 = load i32, i32* @x.539
  %76 = load i32, i32* @y.540
  %77 = sub i32 0, 1
  %78 = add i32 %75, %77
  %79 = sub i32 %75, 1
  %80 = mul i32 %75, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %76, 10
  %84 = xor i1 %82, true
  %85 = xor i1 %83, true
  %86 = xor i1 false, true
  %87 = and i1 %84, false
  %88 = and i1 %82, %86
  %89 = and i1 %85, false
  %90 = and i1 %83, %86
  %91 = or i1 %87, %88
  %92 = or i1 %89, %90
  %93 = xor i1 %91, %92
  %94 = or i1 %84, %85
  %95 = xor i1 %94, true
  %96 = or i1 false, %86
  %97 = and i1 %95, %96
  %98 = or i1 %93, %97
  %99 = or i1 %82, %83
  br i1 %98, label %100, label %215

; <label>:100:                                    ; preds = %74
  br label %101

; <label>:101:                                    ; preds = %100
  %102 = load i32, i32* @x.539
  %103 = load i32, i32* @y.540
  %104 = sub i32 %102, -1466482673
  %105 = sub i32 %104, 1
  %106 = add i32 %105, -1466482673
  %107 = sub i32 %102, 1
  %108 = mul i32 %102, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %103, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 true, true
  %115 = and i1 %112, true
  %116 = and i1 %110, %114
  %117 = and i1 %113, true
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 true, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  br i1 %126, label %128, label %216

; <label>:128:                                    ; preds = %101, %216
  %129 = load i64, i64* %20, align 8
  %130 = add i64 %129, -2566602021174816046
  %131 = add i64 %130, -1
  %132 = sub i64 %131, -2566602021174816046
  %133 = add i64 %129, -1
  store i64 %132, i64* %20, align 8
  %134 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %22, align 8
  %135 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %134, i32 1
  store %"class.std::unordered_map"* %135, %"class.std::unordered_map"** %22, align 8
  %136 = load i32, i32* @x.539
  %137 = load i32, i32* @y.540
  %138 = add i32 %136, -936047619
  %139 = sub i32 %138, 1
  %140 = sub i32 %139, -936047619
  %141 = sub i32 %136, 1
  %142 = mul i32 %136, %140
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %137, 10
  %146 = and i1 %144, %145
  %147 = xor i1 %144, %145
  %148 = or i1 %146, %147
  %149 = or i1 %144, %145
  br i1 %148, label %150, label %216

; <label>:150:                                    ; preds = %128
  br label %40

; <label>:151:                                    ; preds = %43
  %152 = landingpad { i8*, i32 }
          catch i8* null
  %153 = extractvalue { i8*, i32 } %152, 0
  store i8* %153, i8** %23, align 8
  %154 = extractvalue { i8*, i32 } %152, 1
  store i32 %154, i32* %24, align 4
  br label %155

; <label>:155:                                    ; preds = %151
  %156 = load i8*, i8** %23, align 8
  %157 = call i8* @__cxa_begin_catch(i8* %156) #3
  %158 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %19, align 8
  %159 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %22, align 8
  invoke void @_ZSt8_DestroyIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEEvT_SB_(%"class.std::unordered_map"* %158, %"class.std::unordered_map"* %159)
          to label %160 unwind label %163

; <label>:160:                                    ; preds = %155
  invoke void @__cxa_rethrow() #12
          to label %206 unwind label %163

; <label>:161:                                    ; preds = %40
  %162 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %22, align 8
  ret %"class.std::unordered_map"* %162

; <label>:163:                                    ; preds = %160, %155
  %164 = landingpad { i8*, i32 }
          cleanup
  %165 = extractvalue { i8*, i32 } %164, 0
  store i8* %165, i8** %23, align 8
  %166 = extractvalue { i8*, i32 } %164, 1
  store i32 %166, i32* %24, align 4
  invoke void @__cxa_end_catch()
          to label %167 unwind label %203

; <label>:167:                                    ; preds = %163
  %168 = load i32, i32* @x.539
  %169 = load i32, i32* @y.540
  %170 = sub i32 %168, -209495893
  %171 = sub i32 %170, 1
  %172 = add i32 %171, -209495893
  %173 = sub i32 %168, 1
  %174 = mul i32 %168, %172
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %169, 10
  %178 = and i1 %176, %177
  %179 = xor i1 %176, %177
  %180 = or i1 %178, %179
  %181 = or i1 %176, %177
  br i1 %180, label %182, label %233

; <label>:182:                                    ; preds = %167, %233
  %183 = load i32, i32* @x.539
  %184 = load i32, i32* @y.540
  %185 = sub i32 0, 1
  %186 = add i32 %183, %185
  %187 = sub i32 %183, 1
  %188 = mul i32 %183, %186
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %184, 10
  %192 = and i1 %190, %191
  %193 = xor i1 %190, %191
  %194 = or i1 %192, %193
  %195 = or i1 %190, %191
  br i1 %194, label %196, label %233

; <label>:196:                                    ; preds = %182
  br label %198
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:198:                                    ; preds = %196
  %199 = load i8*, i8** %23, align 8
  %200 = load i32, i32* %24, align 4
  %201 = insertvalue { i8*, i32 } undef, i8* %199, 0
  %202 = insertvalue { i8*, i32 } %201, i32 %200, 1
  resume { i8*, i32 } %202

; <label>:203:                                    ; preds = %163
  %204 = landingpad { i8*, i32 }
          catch i8* null
  %205 = extractvalue { i8*, i32 } %204, 0
  call void @__clang_call_terminate(i8* %205) #11
  unreachable

; <label>:206:                                    ; preds = %160
  unreachable

; <label>:207:                                    ; preds = %18, %3
  %208 = alloca %"class.std::unordered_map"*, align 8
  %209 = alloca i64, align 8
  %210 = alloca %"class.std::unordered_map"*, align 8
  %211 = alloca %"class.std::unordered_map"*, align 8
  %212 = alloca i8*
  %213 = alloca i32
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %208, align 8
  store i64 %1, i64* %209, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %210, align 8
  %214 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %208, align 8
  store %"class.std::unordered_map"* %214, %"class.std::unordered_map"** %211, align 8
  br label %18

; <label>:215:                                    ; preds = %74, %47
  br label %74

; <label>:216:                                    ; preds = %128, %101
  %217 = load i64, i64* %20, align 8
  %218 = shl i64 %217, -1
  %219 = sub i64 0, %217
  %220 = add i64 0, %219
  %221 = sub i64 0, %217
  %222 = sub i64 0, %220
  %223 = sub i64 0, -1
  %224 = add i64 %222, %223
  %225 = sub i64 0, %224
  %226 = add i64 %220, -1
  %227 = sub i64 %217, 6591314512986293367
  %228 = add i64 %227, -1
  %229 = add i64 %228, 6591314512986293367
  %230 = add i64 %217, -1
  store i64 %229, i64* %20, align 8
  %231 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %22, align 8
  %232 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %231, i32 1
  store %"class.std::unordered_map"* %232, %"class.std::unordered_map"** %22, align 8
  br label %128

; <label>:233:                                    ; preds = %182, %167
  br label %182
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::unordered_map"* @_ZSt10__fill_n_aIPSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEmS9_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeESE_T0_RKSD_(%"class.std::unordered_map"*, i64, %"class.std::unordered_map"* dereferenceable(56)) #0 comdat {
  %4 = alloca %"class.std::unordered_map"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::unordered_map"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::unordered_map"* %2, %"class.std::unordered_map"** %6, align 8
  %8 = load i64, i64* %5, align 8
  store i64 %8, i64* %7, align 8
  %9 = alloca i32
  store i32 1552610156, i32* %9
  br label %10

; <label>:10:                                     ; preds = %3, %32
  %11 = load i32, i32* %9
  switch i32 %11, label %12 [
    i32 1552610156, label %13
    i32 -1502802510, label %17
    i32 2079902758, label %21
    i32 1980264551, label %30
  ]

; <label>:12:                                     ; preds = %10
  br label %32

; <label>:13:                                     ; preds = %10
  %14 = load i64, i64* %7, align 8
  %15 = icmp ugt i64 %14, 0
  %16 = select i1 %15, i32 -1502802510, i32 1980264551
  store i32 %16, i32* %9
  br label %32

; <label>:17:                                     ; preds = %10
  %18 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %6, align 8
  %19 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %20 = call dereferenceable(56) %"class.std::unordered_map"* @_ZNSt13unordered_mapIixSt4hashIiESt8equal_toIiESaISt4pairIKixEEEaSERKS8_(%"class.std::unordered_map"* %19, %"class.std::unordered_map"* dereferenceable(56) %18)
  store i32 2079902758, i32* %9
  br label %32

; <label>:21:                                     ; preds = %10
  %22 = load i64, i64* %7, align 8
  %23 = sub i64 0, %22
  %24 = sub i64 0, -1
  %25 = add i64 %23, %24
  %26 = sub i64 0, %25
  %27 = add i64 %22, -1
  store i64 %26, i64* %7, align 8
  %28 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  %29 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %28, i32 1
  store %"class.std::unordered_map"* %29, %"class.std::unordered_map"** %4, align 8
  store i32 1552610156, i32* %9
  br label %32

; <label>:30:                                     ; preds = %10
  %31 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %4, align 8
  ret %"class.std::unordered_map"* %31

; <label>:32:                                     ; preds = %21, %17, %13, %12
  br label %10
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8__detail9_Map_baseIiSt4pairIKixESaIS3_ENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb0ELb0ELb1EEELb1EEixEOi(%"struct.std::__detail::_Map_base"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Hash_node"*
  %4 = alloca i64*, align 8
  %5 = alloca %"struct.std::__detail::_Map_base"*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.std::_Hashtable"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %11 = alloca %"class.std::tuple", align 8
  %12 = alloca %"class.std::tuple.21", align 1
  %13 = alloca %"struct.std::__detail::_Node_iterator", align 8
  store %"struct.std::__detail::_Map_base"* %0, %"struct.std::__detail::_Map_base"** %5, align 8
  store i32* %1, i32** %6, align 8
  %14 = load %"struct.std::__detail::_Map_base"*, %"struct.std::__detail::_Map_base"** %5, align 8
  %15 = bitcast %"struct.std::__detail::_Map_base"* %14 to %"class.std::_Hashtable"*
  store %"class.std::_Hashtable"* %15, %"class.std::_Hashtable"** %7, align 8
  %16 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %7, align 8
  %17 = bitcast %"class.std::_Hashtable"* %16 to %"struct.std::__detail::_Hash_code_base"*
  %18 = load i32*, i32** %6, align 8
  %19 = call i64 @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE12_M_hash_codeERS2_(%"struct.std::__detail::_Hash_code_base"* %17, i32* dereferenceable(4) %18)
  store i64 %19, i64* %8, align 8
  %20 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %7, align 8
  %21 = load i32*, i32** %6, align 8
  %22 = load i64, i64* %8, align 8
  %23 = call i64 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexERS1_m(%"class.std::_Hashtable"* %20, i32* dereferenceable(4) %21, i64 %22)
  store i64 %23, i64* %9, align 8
  %24 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %7, align 8
  %25 = load i64, i64* %9, align 8
  %26 = load i32*, i32** %6, align 8
  %27 = load i64, i64* %8, align 8
  %28 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE12_M_find_nodeEmRS1_m(%"class.std::_Hashtable"* %24, i64 %25, i32* dereferenceable(4) %26, i64 %27)
  store %"struct.std::__detail::_Hash_node"* %28, %"struct.std::__detail::_Hash_node"** %10, align 8
  %29 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  store %"struct.std::__detail::_Hash_node"* %29, %"struct.std::__detail::_Hash_node"** %3
  %30 = alloca i32
  store i32 -1129813174, i32* %30
  br label %31

; <label>:31:                                     ; preds = %2, %101
  %32 = load i32, i32* %30
  switch i32 %32, label %33 [
    i32 -1129813174, label %34
    i32 -703936844, label %38
    i32 1153017253, label %57
    i32 1014195073, label %73
    i32 -2129826123, label %93
    i32 2086997081, label %94
    i32 682049042, label %96
  ]

; <label>:33:                                     ; preds = %31
  br label %101

; <label>:34:                                     ; preds = %31
  %35 = load volatile %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %3
  %36 = icmp ne %"struct.std::__detail::_Hash_node"* %35, null
  %37 = select i1 %36, i32 1153017253, i32 -703936844
  store i32 %37, i32* %30
  br label %101

; <label>:38:                                     ; preds = %31
  %39 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %7, align 8
  %40 = bitcast %"class.std::_Hashtable"* %39 to %"struct.std::__detail::_Hashtable_alloc"*
  %41 = load i32*, i32** %6, align 8
  %42 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %41) #3
  %43 = call i32* @_ZSt16forward_as_tupleIJiEESt5tupleIJDpOT_EES3_(i32* dereferenceable(4) %42) #3
  %44 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %11, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %45, i32 0, i32 0
  store i32* %43, i32** %46, align 8
  %47 = call %"struct.std::__detail::_Hash_node"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJOiEESC_IJEEEEEPS5_DpOT_(%"struct.std::__detail::_Hashtable_alloc"* %40, %"struct.std::piecewise_construct_t"* dereferenceable(1) @_ZStL19piecewise_construct, %"class.std::tuple"* dereferenceable(8) %11, %"class.std::tuple.21"* dereferenceable(1) %12)
  store %"struct.std::__detail::_Hash_node"* %47, %"struct.std::__detail::_Hash_node"** %10, align 8
  %48 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %7, align 8
  %49 = load i64, i64* %9, align 8
  %50 = load i64, i64* %8, align 8
  %51 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %52 = call %"struct.std::__detail::_Hash_node"* @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNS4_10_Hash_nodeIS2_Lb0EEE(%"class.std::_Hashtable"* %48, i64 %49, i64 %50, %"struct.std::__detail::_Hash_node"* %51)
  %53 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %13, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %53, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %52, %"struct.std::__detail::_Hash_node"** %54, align 8
  %55 = call %"struct.std::pair"* @_ZNKSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEptEv(%"struct.std::__detail::_Node_iterator"* %13) #3
  %56 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %55, i32 0, i32 1
  store i64* %56, i64** %4, align 8
  store i32 2086997081, i32* %30
  br label %101

; <label>:57:                                     ; preds = %31
  %58 = load i32, i32* @x.543
  %59 = load i32, i32* @y.544
  %60 = sub i32 %58, 1705974088
  %61 = sub i32 %60, 1
  %62 = add i32 %61, 1705974088
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  %72 = select i1 %70, i32 1014195073, i32 682049042
  store i32 %72, i32* %30
  br label %101

; <label>:73:                                     ; preds = %31
  %74 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %75 = bitcast %"struct.std::__detail::_Hash_node"* %74 to %"struct.std::__detail::_Hash_node_value_base"*
  %76 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base"* %75) #3
  %77 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %76, i32 0, i32 1
  store i64* %77, i64** %4, align 8
  %78 = load i32, i32* @x.543
  %79 = load i32, i32* @y.544
  %80 = add i32 %78, -1720468689
  %81 = sub i32 %80, 1
  %82 = sub i32 %81, -1720468689
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = and i1 %86, %87
  %89 = xor i1 %86, %87
  %90 = or i1 %88, %89
  %91 = or i1 %86, %87
  %92 = select i1 %90, i32 -2129826123, i32 682049042
  store i32 %92, i32* %30
  br label %101

; <label>:93:                                     ; preds = %31
  store i32 2086997081, i32* %30
  br label %101

; <label>:94:                                     ; preds = %31
  %95 = load i64*, i64** %4, align 8
  ret i64* %95

; <label>:96:                                     ; preds = %31
  %97 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %98 = bitcast %"struct.std::__detail::_Hash_node"* %97 to %"struct.std::__detail::_Hash_node_value_base"*
  %99 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base"* %98) #3
  %100 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %99, i32 0, i32 1
  store i64* %100, i64** %4, align 8
  store i32 1014195073, i32* %30
  br label %101

; <label>:101:                                    ; preds = %96, %93, %73, %57, %38, %34, %33
  br label %31
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4)) #4 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.545
  %6 = load i32, i32* @y.546
  %7 = sub i32 %5, -1621757137
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1621757137
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -104435867, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -104435867, label %19
    i32 -2048795140, label %39
    i32 578761223, label %68
    i32 1306672769, label %70
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2048795140, i32 1306672769
  store i32 %38, i32* %15
  br label %73

; <label>:39:                                     ; preds = %16
  %40 = alloca i32*, align 8
  store i32* %0, i32** %40, align 8
  %41 = load i32*, i32** %40, align 8
  store i32* %41, i32** %2
  %42 = load i32, i32* @x.545
  %43 = load i32, i32* @y.546
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 578761223, i32 1306672769
  store i32 %67, i32* %15
  br label %73

; <label>:68:                                     ; preds = %16
  %69 = load volatile i32*, i32** %2
  ret i32* %69

; <label>:70:                                     ; preds = %16
  %71 = alloca i32*, align 8
  store i32* %0, i32** %71, align 8
  %72 = load i32*, i32** %71, align 8
  store i32 -2048795140, i32* %15
  br label %73

; <label>:73:                                     ; preds = %70, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE12_M_hash_codeERS2_(%"struct.std::__detail::_Hash_code_base"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  %4 = alloca i32*, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %3, align 8
  %6 = call dereferenceable(1) %"struct.std::hash"* @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE5_M_h1Ev(%"struct.std::__detail::_Hash_code_base"* %5)
  %7 = load i32*, i32** %4, align 8
  %8 = load i32, i32* %7, align 4
  %9 = call i64 @_ZNKSt4hashIiEclEi(%"struct.std::hash"* %6, i32 %8) #3
  ret i64 %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexERS1_m(%"class.std::_Hashtable"*, i32* dereferenceable(4), i64) #0 comdat align 2 {
  %4 = alloca %"class.std::_Hashtable"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4, align 8
  %8 = bitcast %"class.std::_Hashtable"* %7 to %"struct.std::__detail::_Hash_code_base"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %7, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = call i64 @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE15_M_bucket_indexERS2_mm(%"struct.std::__detail::_Hash_code_base"* %8, i32* dereferenceable(4) %9, i64 %10, i64 %12)
  ret i64 %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE12_M_find_nodeEmRS1_m(%"class.std::_Hashtable"*, i64, i32* dereferenceable(4), i64) #0 comdat align 2 {
  %5 = alloca %"struct.std::__detail::_Hash_node_base"*
  %6 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %7 = alloca %"class.std::_Hashtable"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"struct.std::__detail::_Hash_node_base"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i32* %2, i32** %9, align 8
  store i64 %3, i64* %10, align 8
  %12 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %7, align 8
  %13 = load i64, i64* %8, align 8
  %14 = load i32*, i32** %9, align 8
  %15 = load i64, i64* %10, align 8
  %16 = call %"struct.std::__detail::_Hash_node_base"* @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS1_m(%"class.std::_Hashtable"* %12, i64 %13, i32* dereferenceable(4) %14, i64 %15)
  store %"struct.std::__detail::_Hash_node_base"* %16, %"struct.std::__detail::_Hash_node_base"** %11, align 8
  %17 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %11, align 8
  store %"struct.std::__detail::_Hash_node_base"* %17, %"struct.std::__detail::_Hash_node_base"** %5
  %18 = alloca i32
  store i32 -2063921708, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %34
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -2063921708, label %22
    i32 -1487885196, label %26
    i32 1165443862, label %31
    i32 -46306228, label %32
  ]

; <label>:21:                                     ; preds = %19
  br label %34

; <label>:22:                                     ; preds = %19
  %23 = load volatile %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %5
  %24 = icmp ne %"struct.std::__detail::_Hash_node_base"* %23, null
  %25 = select i1 %24, i32 -1487885196, i32 1165443862
  store i32 %25, i32* %18
  br label %34

; <label>:26:                                     ; preds = %19
  %27 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %11, align 8
  %28 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %27, i32 0, i32 0
  %29 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %28, align 8
  %30 = bitcast %"struct.std::__detail::_Hash_node_base"* %29 to %"struct.std::__detail::_Hash_node"*
  store %"struct.std::__detail::_Hash_node"* %30, %"struct.std::__detail::_Hash_node"** %6, align 8
  store i32 -46306228, i32* %18
  br label %34

; <label>:31:                                     ; preds = %19
  store %"struct.std::__detail::_Hash_node"* null, %"struct.std::__detail::_Hash_node"** %6, align 8
  store i32 -46306228, i32* %18
  br label %34

; <label>:32:                                     ; preds = %19
  %33 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %6, align 8
  ret %"struct.std::__detail::_Hash_node"* %33

; <label>:34:                                     ; preds = %31, %26, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJOiEESC_IJEEEEEPS5_DpOT_(%"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.21"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  %6 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %7 = alloca %"class.std::tuple"*, align 8
  %8 = alloca %"class.std::tuple.21"*, align 8
  %9 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %10 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %11 = alloca %"class.std::allocator.12", align 1
  %12 = alloca i8*
  %13 = alloca i32
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %5, align 8
  store %"struct.std::piecewise_construct_t"* %1, %"struct.std::piecewise_construct_t"** %6, align 8
  store %"class.std::tuple"* %2, %"class.std::tuple"** %7, align 8
  store %"class.std::tuple.21"* %3, %"class.std::tuple.21"** %8, align 8
  %14 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %5, align 8
  %15 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %14)
  %16 = call %"struct.std::__detail::_Hash_node"* @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE8allocateERS6_m(%"class.std::allocator.9"* dereferenceable(1) %15, i64 1)
  store %"struct.std::__detail::_Hash_node"* %16, %"struct.std::__detail::_Hash_node"** %9, align 8
  %17 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  %18 = call %"struct.std::__detail::_Hash_node"* @_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEPT_RS6_(%"struct.std::__detail::_Hash_node"* dereferenceable(24) %17) #3
  store %"struct.std::__detail::_Hash_node"* %18, %"struct.std::__detail::_Hash_node"** %10, align 8
  %19 = invoke dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %14)
          to label %20 unwind label %64

; <label>:20:                                     ; preds = %4
  %21 = load i32, i32* @x.553
  %22 = load i32, i32* @y.554
  %23 = sub i32 0, 1
  %24 = add i32 %21, %23
  %25 = sub i32 %21, 1
  %26 = mul i32 %21, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %22, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  br i1 %32, label %34, label %206

; <label>:34:                                     ; preds = %20, %206
  call void @_ZNSaISt4pairIKixEEC2INSt8__detail10_Hash_nodeIS1_Lb0EEEEERKSaIT_E(%"class.std::allocator.12"* %11, %"class.std::allocator.9"* dereferenceable(1) %19) #3
  %35 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %36 = bitcast %"struct.std::__detail::_Hash_node"* %35 to i8*
  %37 = bitcast i8* %36 to %"struct.std::__detail::_Hash_node"*
  call void @_ZNSt8__detail10_Hash_nodeISt4pairIKixELb0EEC2Ev(%"struct.std::__detail::_Hash_node"* %37) #3
  %38 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %39 = bitcast %"struct.std::__detail::_Hash_node"* %38 to %"struct.std::__detail::_Hash_node_value_base"*
  %40 = call %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"* %39) #3
  %41 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %6, align 8
  %42 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %41) #3
  %43 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  %44 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJOiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::tuple"* dereferenceable(8) %43) #3
  %45 = load %"class.std::tuple.21"*, %"class.std::tuple.21"** %8, align 8
  %46 = call dereferenceable(1) %"class.std::tuple.21"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.21"* dereferenceable(1) %45) #3
  %47 = load i32, i32* @x.553
  %48 = load i32, i32* @y.554
  %49 = sub i32 %47, -1979260837
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -1979260837
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  br i1 %59, label %61, label %206

; <label>:61:                                     ; preds = %34
  invoke void @_ZNSt16allocator_traitsISaISt4pairIKixEEE9constructIS2_JRKSt21piecewise_construct_tSt5tupleIJOiEES9_IJEEEEEvRS3_PT_DpOT0_(%"class.std::allocator.12"* dereferenceable(1) %11, %"struct.std::pair"* %40, %"struct.std::piecewise_construct_t"* dereferenceable(1) %42, %"class.std::tuple"* dereferenceable(8) %44, %"class.std::tuple.21"* dereferenceable(1) %46)
          to label %62 unwind label %68

; <label>:62:                                     ; preds = %61
  %63 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  call void @_ZNSaISt4pairIKixEED2Ev(%"class.std::allocator.12"* %11) #3
  ret %"struct.std::__detail::_Hash_node"* %63

; <label>:64:                                     ; preds = %4
  %65 = landingpad { i8*, i32 }
          catch i8* null
  %66 = extractvalue { i8*, i32 } %65, 0
  store i8* %66, i8** %12, align 8
  %67 = extractvalue { i8*, i32 } %65, 1
  store i32 %67, i32* %13, align 4
  br label %72

; <label>:68:                                     ; preds = %61
  %69 = landingpad { i8*, i32 }
          catch i8* null
  %70 = extractvalue { i8*, i32 } %69, 0
  store i8* %70, i8** %12, align 8
  %71 = extractvalue { i8*, i32 } %69, 1
  store i32 %71, i32* %13, align 4
  call void @_ZNSaISt4pairIKixEED2Ev(%"class.std::allocator.12"* %11) #3
  br label %72

; <label>:72:                                     ; preds = %68, %64
  %73 = load i8*, i8** %12, align 8
  %74 = call i8* @__cxa_begin_catch(i8* %73) #3
  %75 = invoke dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %14)
          to label %76 unwind label %79

; <label>:76:                                     ; preds = %72
  %77 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  invoke void @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE10deallocateERS6_PS5_m(%"class.std::allocator.9"* dereferenceable(1) %75, %"struct.std::__detail::_Hash_node"* %77, i64 1)
          to label %78 unwind label %79

; <label>:78:                                     ; preds = %76
  invoke void @__cxa_rethrow() #12
          to label %205 unwind label %79

; <label>:79:                                     ; preds = %78, %76, %72
  %80 = load i32, i32* @x.553
  %81 = load i32, i32* @y.554
  %82 = add i32 %80, 314990554
  %83 = sub i32 %82, 1
  %84 = sub i32 %83, 314990554
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  br i1 %92, label %94, label %219

; <label>:94:                                     ; preds = %79, %219
  %95 = landingpad { i8*, i32 }
          cleanup
  %96 = extractvalue { i8*, i32 } %95, 0
  store i8* %96, i8** %12, align 8
  %97 = extractvalue { i8*, i32 } %95, 1
  store i32 %97, i32* %13, align 4
  %98 = load i32, i32* @x.553
  %99 = load i32, i32* @y.554
  %100 = sub i32 0, 1
  %101 = add i32 %98, %100
  %102 = sub i32 %98, 1
  %103 = mul i32 %98, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %99, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  br i1 %109, label %111, label %219

; <label>:111:                                    ; preds = %94
  invoke void @__cxa_end_catch()
          to label %112 unwind label %202

; <label>:112:                                    ; preds = %111
  %113 = load i32, i32* @x.553
  %114 = load i32, i32* @y.554
  %115 = sub i32 %113, -528888713
  %116 = sub i32 %115, 1
  %117 = add i32 %116, -528888713
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  br i1 %125, label %127, label %223

; <label>:127:                                    ; preds = %112, %223
  %128 = load i32, i32* @x.553
  %129 = load i32, i32* @y.554
  %130 = sub i32 0, 1
  %131 = add i32 %128, %130
  %132 = sub i32 %128, 1
  %133 = mul i32 %128, %131
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %129, 10
  %137 = xor i1 %135, true
  %138 = xor i1 %136, true
  %139 = xor i1 false, true
  %140 = and i1 %137, false
  %141 = and i1 %135, %139
  %142 = and i1 %138, false
  %143 = and i1 %136, %139
  %144 = or i1 %140, %141
  %145 = or i1 %142, %143
  %146 = xor i1 %144, %145
  %147 = or i1 %137, %138
  %148 = xor i1 %147, true
  %149 = or i1 false, %139
  %150 = and i1 %148, %149
  %151 = or i1 %146, %150
  %152 = or i1 %135, %136
  br i1 %151, label %153, label %223

; <label>:153:                                    ; preds = %127
  br label %155
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:155:                                    ; preds = %153
  %156 = load i32, i32* @x.553
  %157 = load i32, i32* @y.554
  %158 = add i32 %156, -1659282340
  %159 = sub i32 %158, 1
  %160 = sub i32 %159, -1659282340
  %161 = sub i32 %156, 1
  %162 = mul i32 %156, %160
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %157, 10
  %166 = xor i1 %164, true
  %167 = xor i1 %165, true
  %168 = xor i1 false, true
  %169 = and i1 %166, false
  %170 = and i1 %164, %168
  %171 = and i1 %167, false
  %172 = and i1 %165, %168
  %173 = or i1 %169, %170
  %174 = or i1 %171, %172
  %175 = xor i1 %173, %174
  %176 = or i1 %166, %167
  %177 = xor i1 %176, true
  %178 = or i1 false, %168
  %179 = and i1 %177, %178
  %180 = or i1 %175, %179
  %181 = or i1 %164, %165
  br i1 %180, label %182, label %224

; <label>:182:                                    ; preds = %155, %224
  %183 = load i8*, i8** %12, align 8
  %184 = load i32, i32* %13, align 4
  %185 = insertvalue { i8*, i32 } undef, i8* %183, 0
  %186 = insertvalue { i8*, i32 } %185, i32 %184, 1
  %187 = load i32, i32* @x.553
  %188 = load i32, i32* @y.554
  %189 = add i32 %187, 285840874
  %190 = sub i32 %189, 1
  %191 = sub i32 %190, 285840874
  %192 = sub i32 %187, 1
  %193 = mul i32 %187, %191
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %188, 10
  %197 = and i1 %195, %196
  %198 = xor i1 %195, %196
  %199 = or i1 %197, %198
  %200 = or i1 %195, %196
  br i1 %199, label %201, label %224

; <label>:201:                                    ; preds = %182
  resume { i8*, i32 } %186

; <label>:202:                                    ; preds = %111
  %203 = landingpad { i8*, i32 }
          catch i8* null
  %204 = extractvalue { i8*, i32 } %203, 0
  call void @__clang_call_terminate(i8* %204) #11
  unreachable

; <label>:205:                                    ; preds = %78
  unreachable

; <label>:206:                                    ; preds = %34, %20
  call void @_ZNSaISt4pairIKixEEC2INSt8__detail10_Hash_nodeIS1_Lb0EEEEERKSaIT_E(%"class.std::allocator.12"* %11, %"class.std::allocator.9"* dereferenceable(1) %19) #3
  %207 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %208 = bitcast %"struct.std::__detail::_Hash_node"* %207 to i8*
  %209 = bitcast i8* %208 to %"struct.std::__detail::_Hash_node"*
  call void @_ZNSt8__detail10_Hash_nodeISt4pairIKixELb0EEC2Ev(%"struct.std::__detail::_Hash_node"* %209) #3
  %210 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %211 = bitcast %"struct.std::__detail::_Hash_node"* %210 to %"struct.std::__detail::_Hash_node_value_base"*
  %212 = call %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"* %211) #3
  %213 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %6, align 8
  %214 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %213) #3
  %215 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  %216 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJOiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::tuple"* dereferenceable(8) %215) #3
  %217 = load %"class.std::tuple.21"*, %"class.std::tuple.21"** %8, align 8
  %218 = call dereferenceable(1) %"class.std::tuple.21"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.21"* dereferenceable(1) %217) #3
  br label %34

; <label>:219:                                    ; preds = %94, %79
  %220 = landingpad { i8*, i32 }
          cleanup
  %221 = extractvalue { i8*, i32 } %220, 0
  store i8* %221, i8** %12, align 8
  %222 = extractvalue { i8*, i32 } %220, 1
  store i32 %222, i32* %13, align 4
  br label %94

; <label>:223:                                    ; preds = %127, %112
  br label %127

; <label>:224:                                    ; preds = %182, %155
  %225 = load i8*, i8** %12, align 8
  %226 = load i32, i32* %13, align 4
  %227 = insertvalue { i8*, i32 } undef, i8* %225, 0
  %228 = insertvalue { i8*, i32 } %227, i32 %226, 1
  br label %182
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt16forward_as_tupleIJiEESt5tupleIJDpOT_EES3_(i32* dereferenceable(4)) #4 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::tuple", align 8
  %3 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  %4 = load i32*, i32** %3, align 8
  %5 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %4) #3
  invoke void @_ZNSt5tupleIJOiEEC2IJiEvEEDpOT_(%"class.std::tuple"* %2, i32* dereferenceable(4) %5)
          to label %6 unwind label %53

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @x.555
  %8 = load i32, i32* @y.556
  %9 = sub i32 %7, 1904435306
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 1904435306
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %8, 10
  %17 = and i1 %15, %16
  %18 = xor i1 %15, %16
  %19 = or i1 %17, %18
  %20 = or i1 %15, %16
  br i1 %19, label %21, label %98

; <label>:21:                                     ; preds = %6, %98
  %22 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %2, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %22, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %23, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = load i32, i32* @x.555
  %27 = load i32, i32* @y.556
  %28 = add i32 %26, 1680985152
  %29 = sub i32 %28, 1
  %30 = sub i32 %29, 1680985152
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 true, true
  %39 = and i1 %36, true
  %40 = and i1 %34, %38
  %41 = and i1 %37, true
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 true, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  br i1 %50, label %52, label %98

; <label>:52:                                     ; preds = %21
  ret i32* %25

; <label>:53:                                     ; preds = %1
  %54 = load i32, i32* @x.555
  %55 = load i32, i32* @y.556
  %56 = add i32 %54, 1183716548
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, 1183716548
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 false, true
  %67 = and i1 %64, false
  %68 = and i1 %62, %66
  %69 = and i1 %65, false
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 false, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  br i1 %78, label %80, label %103

; <label>:80:                                     ; preds = %53, %103
  %81 = landingpad { i8*, i32 }
          catch i8* null
  %82 = extractvalue { i8*, i32 } %81, 0
  call void @__clang_call_terminate(i8* %82) #11
  %83 = load i32, i32* @x.555
  %84 = load i32, i32* @y.556
  %85 = add i32 %83, -2068015443
  %86 = sub i32 %85, 1
  %87 = sub i32 %86, -2068015443
  %88 = sub i32 %83, 1
  %89 = mul i32 %83, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %84, 10
  %93 = and i1 %91, %92
  %94 = xor i1 %91, %92
  %95 = or i1 %93, %94
  %96 = or i1 %91, %92
  br i1 %95, label %97, label %103

; <label>:97:                                     ; preds = %80
  unreachable

; <label>:98:                                     ; preds = %21, %6
  %99 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %2, i32 0, i32 0
  %100 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %99, i32 0, i32 0
  %101 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %100, i32 0, i32 0
  %102 = load i32*, i32** %101, align 8
  br label %21

; <label>:103:                                    ; preds = %80, %53
  %104 = landingpad { i8*, i32 }
          catch i8* null
  %105 = extractvalue { i8*, i32 } %104, 0
  call void @__clang_call_terminate(i8* %105) #11
  br label %80
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNS4_10_Hash_nodeIS2_Lb0EEE(%"class.std::_Hashtable"*, i64, i64, %"struct.std::__detail::_Hash_node"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %6 = alloca %"class.std::_Hashtable"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %10 = alloca i64*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %"struct.std::pair.23", align 8
  %13 = alloca i8*
  %14 = alloca i32
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i64 %2, i64* %8, align 8
  store %"struct.std::__detail::_Hash_node"* %3, %"struct.std::__detail::_Hash_node"** %9, align 8
  %15 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %6, align 8
  %16 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %15, i32 0, i32 4
  %17 = call i64 @_ZNKSt8__detail20_Prime_rehash_policy8_M_stateEv(%"struct.std::__detail::_Prime_rehash_policy"* %16)
  store i64 %17, i64* %11, align 8
  store i64* %11, i64** %10, align 8
  %18 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %15, i32 0, i32 4
  %19 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %15, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %15, i32 0, i32 3
  %22 = load i64, i64* %21, align 8
  %23 = call { i8, i64 } @_ZNKSt8__detail20_Prime_rehash_policy14_M_need_rehashEmmm(%"struct.std::__detail::_Prime_rehash_policy"* %18, i64 %20, i64 %22, i64 1)
  %24 = bitcast %"struct.std::pair.23"* %12 to { i8, i64 }*
  %25 = getelementptr inbounds { i8, i64 }, { i8, i64 }* %24, i32 0, i32 0
  %26 = extractvalue { i8, i64 } %23, 0
  store i8 %26, i8* %25, align 8
  %27 = getelementptr inbounds { i8, i64 }, { i8, i64 }* %24, i32 0, i32 1
  %28 = extractvalue { i8, i64 } %23, 1
  store i64 %28, i64* %27, align 8
  %29 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %12, i32 0, i32 0
  %30 = load i8, i8* %29, align 8
  %31 = trunc i8 %30 to i1
  br i1 %31, label %32, label %160

; <label>:32:                                     ; preds = %4
  %33 = load i32, i32* @x.557
  %34 = load i32, i32* @y.558
  %35 = sub i32 %33, 1134322229
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 1134322229
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  br i1 %45, label %47, label %223

; <label>:47:                                     ; preds = %32, %223
  %48 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %12, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = load i64*, i64** %10, align 8
  %51 = load i32, i32* @x.557
  %52 = load i32, i32* @y.558
  %53 = add i32 %51, -1310726818
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, -1310726818
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  br i1 %75, label %77, label %223

; <label>:77:                                     ; preds = %47
  invoke void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_rehashEmRKm(%"class.std::_Hashtable"* %15, i64 %49, i64* dereferenceable(8) %50)
          to label %78 unwind label %120

; <label>:78:                                     ; preds = %77
  %79 = bitcast %"class.std::_Hashtable"* %15 to %"struct.std::__detail::_Hash_code_base"*
  %80 = invoke dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE10_M_extractEv(%"struct.std::__detail::_Hash_code_base"* %79)
          to label %81 unwind label %120

; <label>:81:                                     ; preds = %78
  %82 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  %83 = bitcast %"struct.std::__detail::_Hash_node"* %82 to %"struct.std::__detail::_Hash_node_value_base"*
  %84 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base"* %83) #3
  %85 = invoke dereferenceable(4) i32* @_ZNKSt8__detail10_Select1stclIRSt4pairIKixEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS6_(%"struct.std::__detail::_Select1st"* %80, %"struct.std::pair"* dereferenceable(16) %84)
          to label %86 unwind label %120

; <label>:86:                                     ; preds = %81
  %87 = load i64, i64* %8, align 8
  %88 = invoke i64 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexERS1_m(%"class.std::_Hashtable"* %15, i32* dereferenceable(4) %85, i64 %87)
          to label %89 unwind label %120

; <label>:89:                                     ; preds = %86
  %90 = load i32, i32* @x.557
  %91 = load i32, i32* @y.558
  %92 = sub i32 %90, -1739339726
  %93 = sub i32 %92, 1
  %94 = add i32 %93, -1739339726
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = and i1 %98, %99
  %101 = xor i1 %98, %99
  %102 = or i1 %100, %101
  %103 = or i1 %98, %99
  br i1 %102, label %104, label %227

; <label>:104:                                    ; preds = %89, %227
  store i64 %88, i64* %7, align 8
  %105 = load i32, i32* @x.557
  %106 = load i32, i32* @y.558
  %107 = add i32 %105, -294791231
  %108 = sub i32 %107, 1
  %109 = sub i32 %108, -294791231
  %110 = sub i32 %105, 1
  %111 = mul i32 %105, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %106, 10
  %115 = and i1 %113, %114
  %116 = xor i1 %113, %114
  %117 = or i1 %115, %116
  %118 = or i1 %113, %114
  br i1 %117, label %119, label %227

; <label>:119:                                    ; preds = %104
  br label %160

; <label>:120:                                    ; preds = %164, %160, %86, %81, %78, %77
  %121 = landingpad { i8*, i32 }
          catch i8* null
  %122 = extractvalue { i8*, i32 } %121, 0
  store i8* %122, i8** %13, align 8
  %123 = extractvalue { i8*, i32 } %121, 1
  store i32 %123, i32* %14, align 4
  br label %124

; <label>:124:                                    ; preds = %120
  %125 = load i32, i32* @x.557
  %126 = load i32, i32* @y.558
  %127 = add i32 %125, -2085024411
  %128 = sub i32 %127, 1
  %129 = sub i32 %128, -2085024411
  %130 = sub i32 %125, 1
  %131 = mul i32 %125, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %126, 10
  %135 = and i1 %133, %134
  %136 = xor i1 %133, %134
  %137 = or i1 %135, %136
  %138 = or i1 %133, %134
  br i1 %137, label %139, label %228

; <label>:139:                                    ; preds = %124, %228
  %140 = load i8*, i8** %13, align 8
  %141 = call i8* @__cxa_begin_catch(i8* %140) #3
  %142 = bitcast %"class.std::_Hashtable"* %15 to %"struct.std::__detail::_Hashtable_alloc"*
  %143 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  %144 = load i32, i32* @x.557
  %145 = load i32, i32* @y.558
  %146 = sub i32 %144, 1966767167
  %147 = sub i32 %146, 1
  %148 = add i32 %147, 1966767167
  %149 = sub i32 %144, 1
  %150 = mul i32 %144, %148
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %145, 10
  %154 = and i1 %152, %153
  %155 = xor i1 %152, %153
  %156 = or i1 %154, %155
  %157 = or i1 %152, %153
  br i1 %156, label %158, label %228

; <label>:158:                                    ; preds = %139
  invoke void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE18_M_deallocate_nodeEPS5_(%"struct.std::__detail::_Hashtable_alloc"* %142, %"struct.std::__detail::_Hash_node"* %143)
          to label %159 unwind label %179

; <label>:159:                                    ; preds = %158
  invoke void @__cxa_rethrow() #12
          to label %222 unwind label %179

; <label>:160:                                    ; preds = %119, %4
  %161 = bitcast %"class.std::_Hashtable"* %15 to %"struct.std::__detail::_Hash_code_base"*
  %162 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  %163 = load i64, i64* %8, align 8
  invoke void @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE13_M_store_codeEPNS_10_Hash_nodeIS3_Lb0EEEm(%"struct.std::__detail::_Hash_code_base"* %161, %"struct.std::__detail::_Hash_node"* %162, i64 %163)
          to label %164 unwind label %120

; <label>:164:                                    ; preds = %160
  %165 = load i64, i64* %7, align 8
  %166 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  invoke void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE22_M_insert_bucket_beginEmPNS4_10_Hash_nodeIS2_Lb0EEE(%"class.std::_Hashtable"* %15, i64 %165, %"struct.std::__detail::_Hash_node"* %166)
          to label %167 unwind label %120

; <label>:167:                                    ; preds = %164
  %168 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %15, i32 0, i32 3
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 0, %169
  %171 = sub i64 0, 1
  %172 = add i64 %170, %171
  %173 = sub i64 0, %172
  %174 = add i64 %169, 1
  store i64 %173, i64* %168, align 8
  %175 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  call void @_ZNSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEC2EPNS_10_Hash_nodeIS3_Lb0EEE(%"struct.std::__detail::_Node_iterator"* %5, %"struct.std::__detail::_Hash_node"* %175) #3
  %176 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %5, i32 0, i32 0
  %177 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %176, i32 0, i32 0
  %178 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %177, align 8
  ret %"struct.std::__detail::_Hash_node"* %178

; <label>:179:                                    ; preds = %159, %158
  %180 = landingpad { i8*, i32 }
          cleanup
  %181 = extractvalue { i8*, i32 } %180, 0
  store i8* %181, i8** %13, align 8
  %182 = extractvalue { i8*, i32 } %180, 1
  store i32 %182, i32* %14, align 4
  invoke void @__cxa_end_catch()
          to label %183 unwind label %190

; <label>:183:                                    ; preds = %179
  br label %185
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:185:                                    ; preds = %183
  %186 = load i8*, i8** %13, align 8
  %187 = load i32, i32* %14, align 4
  %188 = insertvalue { i8*, i32 } undef, i8* %186, 0
  %189 = insertvalue { i8*, i32 } %188, i32 %187, 1
  resume { i8*, i32 } %189

; <label>:190:                                    ; preds = %179
  %191 = load i32, i32* @x.557
  %192 = load i32, i32* @y.558
  %193 = add i32 %191, 161658165
  %194 = sub i32 %193, 1
  %195 = sub i32 %194, 161658165
  %196 = sub i32 %191, 1
  %197 = mul i32 %191, %195
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %192, 10
  %201 = and i1 %199, %200
  %202 = xor i1 %199, %200
  %203 = or i1 %201, %202
  %204 = or i1 %199, %200
  br i1 %203, label %205, label %233

; <label>:205:                                    ; preds = %190, %233
  %206 = landingpad { i8*, i32 }
          catch i8* null
  %207 = extractvalue { i8*, i32 } %206, 0
  call void @__clang_call_terminate(i8* %207) #11
  %208 = load i32, i32* @x.557
  %209 = load i32, i32* @y.558
  %210 = sub i32 0, 1
  %211 = add i32 %208, %210
  %212 = sub i32 %208, 1
  %213 = mul i32 %208, %211
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %209, 10
  %217 = and i1 %215, %216
  %218 = xor i1 %215, %216
  %219 = or i1 %217, %218
  %220 = or i1 %215, %216
  br i1 %219, label %221, label %233

; <label>:221:                                    ; preds = %205
  unreachable

; <label>:222:                                    ; preds = %159
  unreachable

; <label>:223:                                    ; preds = %47, %32
  %224 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %12, i32 0, i32 1
  %225 = load i64, i64* %224, align 8
  %226 = load i64*, i64** %10, align 8
  br label %47

; <label>:227:                                    ; preds = %104, %89
  store i64 %88, i64* %7, align 8
  br label %104

; <label>:228:                                    ; preds = %139, %124
  %229 = load i8*, i8** %13, align 8
  %230 = call i8* @__cxa_begin_catch(i8* %229) #3
  %231 = bitcast %"class.std::_Hashtable"* %15 to %"struct.std::__detail::_Hashtable_alloc"*
  %232 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  br label %139

; <label>:233:                                    ; preds = %205, %190
  %234 = landingpad { i8*, i32 }
          catch i8* null
  %235 = extractvalue { i8*, i32 } %234, 0
  call void @__clang_call_terminate(i8* %235) #11
  br label %205
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"* @_ZNKSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEptEv(%"struct.std::__detail::_Node_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::pair"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.559
  %6 = load i32, i32* @y.560
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1223742549, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %71
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1223742549, label %18
    i32 431167618, label %26
    i32 830510372, label %61
    i32 1839219171, label %63
  ]

; <label>:17:                                     ; preds = %15
  br label %71

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 431167618, i32 1839219171
  store i32 %25, i32* %14
  br label %71

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::__detail::_Node_iterator"*, align 8
  store %"struct.std::__detail::_Node_iterator"* %0, %"struct.std::__detail::_Node_iterator"** %27, align 8
  %28 = load %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %27, align 8
  %29 = bitcast %"struct.std::__detail::_Node_iterator"* %28 to %"struct.std::__detail::_Node_iterator_base"*
  %30 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %29, i32 0, i32 0
  %31 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %30, align 8
  %32 = bitcast %"struct.std::__detail::_Hash_node"* %31 to %"struct.std::__detail::_Hash_node_value_base"*
  %33 = call %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"* %32) #3
  store %"struct.std::pair"* %33, %"struct.std::pair"** %2
  %34 = load i32, i32* @x.559
  %35 = load i32, i32* @y.560
  %36 = sub i32 %34, -104793842
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -104793842
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 830510372, i32 1839219171
  store i32 %60, i32* %14
  br label %71

; <label>:61:                                     ; preds = %15
  %62 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %2
  ret %"struct.std::pair"* %62

; <label>:63:                                     ; preds = %15
  %64 = alloca %"struct.std::__detail::_Node_iterator"*, align 8
  store %"struct.std::__detail::_Node_iterator"* %0, %"struct.std::__detail::_Node_iterator"** %64, align 8
  %65 = load %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %64, align 8
  %66 = bitcast %"struct.std::__detail::_Node_iterator"* %65 to %"struct.std::__detail::_Node_iterator_base"*
  %67 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %66, i32 0, i32 0
  %68 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %67, align 8
  %69 = bitcast %"struct.std::__detail::_Hash_node"* %68 to %"struct.std::__detail::_Hash_node_value_base"*
  %70 = call %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"* %69) #3
  store i32 431167618, i32* %14
  br label %71

; <label>:71:                                     ; preds = %63, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE15_M_bucket_indexERS2_mm(%"struct.std::__detail::_Hash_code_base"*, i32* dereferenceable(4), i64, i64) #0 comdat align 2 {
  %5 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %5, align 8
  store i32* %1, i32** %6, align 8
  store i64 %2, i64* %7, align 8
  store i64 %3, i64* %8, align 8
  %9 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %5, align 8
  %10 = call dereferenceable(1) %"struct.std::__detail::_Mod_range_hashing"* @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE5_M_h2Ev(%"struct.std::__detail::_Hash_code_base"* %9)
  %11 = load i64, i64* %7, align 8
  %12 = load i64, i64* %8, align 8
  %13 = call i64 @_ZNKSt8__detail18_Mod_range_hashingclEmm(%"struct.std::__detail::_Mod_range_hashing"* %10, i64 %11, i64 %12) #3
  ret i64 %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node_base"* @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS1_m(%"class.std::_Hashtable"*, i64, i32* dereferenceable(4), i64) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca %"struct.std::__detail::_Hash_node_base"*
  %8 = alloca %"class.std::_Hashtable"*
  %9 = alloca %"struct.std::__detail::_Hash_node_base"*, align 8
  %10 = alloca %"class.std::_Hashtable"*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i64, align 8
  %14 = alloca %"struct.std::__detail::_Hash_node_base"*, align 8
  %15 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %10, align 8
  store i64 %1, i64* %11, align 8
  store i32* %2, i32** %12, align 8
  store i64 %3, i64* %13, align 8
  %16 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %10, align 8
  store %"class.std::_Hashtable"* %16, %"class.std::_Hashtable"** %8
  %17 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %8
  %18 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %17, i32 0, i32 0
  %19 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %18, align 8
  %20 = load i64, i64* %11, align 8
  %21 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %19, i64 %20
  %22 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %21, align 8
  store %"struct.std::__detail::_Hash_node_base"* %22, %"struct.std::__detail::_Hash_node_base"** %14, align 8
  %23 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %14, align 8
  store %"struct.std::__detail::_Hash_node_base"* %23, %"struct.std::__detail::_Hash_node_base"** %7
  %24 = alloca i32
  store i32 571592049, i32* %24
  br label %25

; <label>:25:                                     ; preds = %4, %279
  %26 = load i32, i32* %24
  switch i32 %26, label %27 [
    i32 571592049, label %28
    i32 -64991547, label %32
    i32 -1380094568, label %33
    i32 -1163734990, label %38
    i32 -1847931155, label %66
    i32 491156033, label %88
    i32 1180391314, label %91
    i32 -99057421, label %93
    i32 -607044213, label %100
    i32 -89062825, label %128
    i32 313949768, label %150
    i32 2134932074, label %153
    i32 323717093, label %154
    i32 -1949722577, label %170
    i32 -772568336, label %199
    i32 -1753469429, label %200
    i32 -974588840, label %203
    i32 -1125754180, label %231
    i32 586438055, label %258
    i32 175167748, label %259
    i32 -1212109366, label %261
    i32 -1768933046, label %268
    i32 -195005404, label %275
    i32 -909136941, label %278
  ]

; <label>:27:                                     ; preds = %25
  br label %279

; <label>:28:                                     ; preds = %25
  %29 = load volatile %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %7
  %30 = icmp ne %"struct.std::__detail::_Hash_node_base"* %29, null
  %31 = select i1 %30, i32 -1380094568, i32 -64991547
  store i32 %31, i32* %24
  br label %279

; <label>:32:                                     ; preds = %25
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %9, align 8
  store i32 175167748, i32* %24
  br label %279

; <label>:33:                                     ; preds = %25
  %34 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %14, align 8
  %35 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %34, i32 0, i32 0
  %36 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %35, align 8
  %37 = bitcast %"struct.std::__detail::_Hash_node_base"* %36 to %"struct.std::__detail::_Hash_node"*
  store %"struct.std::__detail::_Hash_node"* %37, %"struct.std::__detail::_Hash_node"** %15, align 8
  store i32 -1163734990, i32* %24
  br label %279

; <label>:38:                                     ; preds = %25
  %39 = load i32, i32* @x.563
  %40 = load i32, i32* @y.564
  %41 = sub i32 %39, -947383158
  %42 = sub i32 %41, 1
  %43 = add i32 %42, -947383158
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 -1847931155, i32 -1212109366
  store i32 %65, i32* %24
  br label %279

; <label>:66:                                     ; preds = %25
  %67 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %8
  %68 = bitcast %"class.std::_Hashtable"* %67 to %"struct.std::__detail::_Hashtable_base"*
  %69 = load i32*, i32** %12, align 8
  %70 = load i64, i64* %13, align 8
  %71 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %15, align 8
  %72 = call zeroext i1 @_ZNKSt8__detail15_Hashtable_baseIiSt4pairIKixENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_equalsERS2_mPNS_10_Hash_nodeIS3_Lb0EEE(%"struct.std::__detail::_Hashtable_base"* %68, i32* dereferenceable(4) %69, i64 %70, %"struct.std::__detail::_Hash_node"* %71)
  store i1 %72, i1* %6
  %73 = load i32, i32* @x.563
  %74 = load i32, i32* @y.564
  %75 = add i32 %73, -2080543174
  %76 = sub i32 %75, 1
  %77 = sub i32 %76, -2080543174
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  %87 = select i1 %85, i32 491156033, i32 -1212109366
  store i32 %87, i32* %24
  br label %279

; <label>:88:                                     ; preds = %25
  %89 = load volatile i1, i1* %6
  %90 = select i1 %89, i32 1180391314, i32 -99057421
  store i32 %90, i32* %24
  br label %279

; <label>:91:                                     ; preds = %25
  %92 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %14, align 8
  store %"struct.std::__detail::_Hash_node_base"* %92, %"struct.std::__detail::_Hash_node_base"** %9, align 8
  store i32 175167748, i32* %24
  br label %279

; <label>:93:                                     ; preds = %25
  %94 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %15, align 8
  %95 = bitcast %"struct.std::__detail::_Hash_node"* %94 to %"struct.std::__detail::_Hash_node_base"*
  %96 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %95, i32 0, i32 0
  %97 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %96, align 8
  %98 = icmp ne %"struct.std::__detail::_Hash_node_base"* %97, null
  %99 = select i1 %98, i32 -607044213, i32 2134932074
  store i32 %99, i32* %24
  br label %279

; <label>:100:                                    ; preds = %25
  %101 = load i32, i32* @x.563
  %102 = load i32, i32* @y.564
  %103 = sub i32 %101, -1127850931
  %104 = sub i32 %103, 1
  %105 = add i32 %104, -1127850931
  %106 = sub i32 %101, 1
  %107 = mul i32 %101, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %102, 10
  %111 = xor i1 %109, true
  %112 = xor i1 %110, true
  %113 = xor i1 false, true
  %114 = and i1 %111, false
  %115 = and i1 %109, %113
  %116 = and i1 %112, false
  %117 = and i1 %110, %113
  %118 = or i1 %114, %115
  %119 = or i1 %116, %117
  %120 = xor i1 %118, %119
  %121 = or i1 %111, %112
  %122 = xor i1 %121, true
  %123 = or i1 false, %113
  %124 = and i1 %122, %123
  %125 = or i1 %120, %124
  %126 = or i1 %109, %110
  %127 = select i1 %125, i32 -89062825, i32 -1768933046
  store i32 %127, i32* %24
  br label %279

; <label>:128:                                    ; preds = %25
  %129 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %15, align 8
  %130 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %129) #3
  %131 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %8
  %132 = call i64 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexEPNS4_10_Hash_nodeIS2_Lb0EEE(%"class.std::_Hashtable"* %131, %"struct.std::__detail::_Hash_node"* %130) #3
  %133 = load i64, i64* %11, align 8
  %134 = icmp ne i64 %132, %133
  store i1 %134, i1* %5
  %135 = load i32, i32* @x.563
  %136 = load i32, i32* @y.564
  %137 = sub i32 %135, -1068709609
  %138 = sub i32 %137, 1
  %139 = add i32 %138, -1068709609
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = and i1 %143, %144
  %146 = xor i1 %143, %144
  %147 = or i1 %145, %146
  %148 = or i1 %143, %144
  %149 = select i1 %147, i32 313949768, i32 -1768933046
  store i32 %149, i32* %24
  br label %279

; <label>:150:                                    ; preds = %25
  %151 = load volatile i1, i1* %5
  %152 = select i1 %151, i32 2134932074, i32 323717093
  store i32 %152, i32* %24
  br label %279

; <label>:153:                                    ; preds = %25
  store i32 -974588840, i32* %24
  br label %279

; <label>:154:                                    ; preds = %25
  %155 = load i32, i32* @x.563
  %156 = load i32, i32* @y.564
  %157 = add i32 %155, -850740580
  %158 = sub i32 %157, 1
  %159 = sub i32 %158, -850740580
  %160 = sub i32 %155, 1
  %161 = mul i32 %155, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %156, 10
  %165 = and i1 %163, %164
  %166 = xor i1 %163, %164
  %167 = or i1 %165, %166
  %168 = or i1 %163, %164
  %169 = select i1 %167, i32 -1949722577, i32 -195005404
  store i32 %169, i32* %24
  br label %279

; <label>:170:                                    ; preds = %25
  %171 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %15, align 8
  %172 = bitcast %"struct.std::__detail::_Hash_node"* %171 to %"struct.std::__detail::_Hash_node_base"*
  store %"struct.std::__detail::_Hash_node_base"* %172, %"struct.std::__detail::_Hash_node_base"** %14, align 8
  %173 = load i32, i32* @x.563
  %174 = load i32, i32* @y.564
  %175 = sub i32 0, 1
  %176 = add i32 %173, %175
  %177 = sub i32 %173, 1
  %178 = mul i32 %173, %176
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %174, 10
  %182 = xor i1 %180, true
  %183 = xor i1 %181, true
  %184 = xor i1 true, true
  %185 = and i1 %182, true
  %186 = and i1 %180, %184
  %187 = and i1 %183, true
  %188 = and i1 %181, %184
  %189 = or i1 %185, %186
  %190 = or i1 %187, %188
  %191 = xor i1 %189, %190
  %192 = or i1 %182, %183
  %193 = xor i1 %192, true
  %194 = or i1 true, %184
  %195 = and i1 %193, %194
  %196 = or i1 %191, %195
  %197 = or i1 %180, %181
  %198 = select i1 %196, i32 -772568336, i32 -195005404
  store i32 %198, i32* %24
  br label %279

; <label>:199:                                    ; preds = %25
  store i32 -1753469429, i32* %24
  br label %279

; <label>:200:                                    ; preds = %25
  %201 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %15, align 8
  %202 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %201) #3
  store %"struct.std::__detail::_Hash_node"* %202, %"struct.std::__detail::_Hash_node"** %15, align 8
  store i32 -1163734990, i32* %24
  br label %279

; <label>:203:                                    ; preds = %25
  %204 = load i32, i32* @x.563
  %205 = load i32, i32* @y.564
  %206 = add i32 %204, 2130544610
  %207 = sub i32 %206, 1
  %208 = sub i32 %207, 2130544610
  %209 = sub i32 %204, 1
  %210 = mul i32 %204, %208
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %205, 10
  %214 = xor i1 %212, true
  %215 = xor i1 %213, true
  %216 = xor i1 true, true
  %217 = and i1 %214, true
  %218 = and i1 %212, %216
  %219 = and i1 %215, true
  %220 = and i1 %213, %216
  %221 = or i1 %217, %218
  %222 = or i1 %219, %220
  %223 = xor i1 %221, %222
  %224 = or i1 %214, %215
  %225 = xor i1 %224, true
  %226 = or i1 true, %216
  %227 = and i1 %225, %226
  %228 = or i1 %223, %227
  %229 = or i1 %212, %213
  %230 = select i1 %228, i32 -1125754180, i32 -909136941
  store i32 %230, i32* %24
  br label %279

; <label>:231:                                    ; preds = %25
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %9, align 8
  %232 = load i32, i32* @x.563
  %233 = load i32, i32* @y.564
  %234 = sub i32 0, 1
  %235 = add i32 %232, %234
  %236 = sub i32 %232, 1
  %237 = mul i32 %232, %235
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %233, 10
  %241 = xor i1 %239, true
  %242 = xor i1 %240, true
  %243 = xor i1 true, true
  %244 = and i1 %241, true
  %245 = and i1 %239, %243
  %246 = and i1 %242, true
  %247 = and i1 %240, %243
  %248 = or i1 %244, %245
  %249 = or i1 %246, %247
  %250 = xor i1 %248, %249
  %251 = or i1 %241, %242
  %252 = xor i1 %251, true
  %253 = or i1 true, %243
  %254 = and i1 %252, %253
  %255 = or i1 %250, %254
  %256 = or i1 %239, %240
  %257 = select i1 %255, i32 586438055, i32 -909136941
  store i32 %257, i32* %24
  br label %279

; <label>:258:                                    ; preds = %25
  store i32 175167748, i32* %24
  br label %279

; <label>:259:                                    ; preds = %25
  %260 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %9, align 8
  ret %"struct.std::__detail::_Hash_node_base"* %260

; <label>:261:                                    ; preds = %25
  %262 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %8
  %263 = bitcast %"class.std::_Hashtable"* %262 to %"struct.std::__detail::_Hashtable_base"*
  %264 = load i32*, i32** %12, align 8
  %265 = load i64, i64* %13, align 8
  %266 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %15, align 8
  %267 = call zeroext i1 @_ZNKSt8__detail15_Hashtable_baseIiSt4pairIKixENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_equalsERS2_mPNS_10_Hash_nodeIS3_Lb0EEE(%"struct.std::__detail::_Hashtable_base"* %263, i32* dereferenceable(4) %264, i64 %265, %"struct.std::__detail::_Hash_node"* %266)
  store i32 -1847931155, i32* %24
  br label %279

; <label>:268:                                    ; preds = %25
  %269 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %15, align 8
  %270 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %269) #3
  %271 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %8
  %272 = call i64 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexEPNS4_10_Hash_nodeIS2_Lb0EEE(%"class.std::_Hashtable"* %271, %"struct.std::__detail::_Hash_node"* %270) #3
  %273 = load i64, i64* %11, align 8
  %274 = icmp ne i64 %272, %273
  store i32 -89062825, i32* %24
  br label %279

; <label>:275:                                    ; preds = %25
  %276 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %15, align 8
  %277 = bitcast %"struct.std::__detail::_Hash_node"* %276 to %"struct.std::__detail::_Hash_node_base"*
  store %"struct.std::__detail::_Hash_node_base"* %277, %"struct.std::__detail::_Hash_node_base"** %14, align 8
  store i32 -1949722577, i32* %24
  br label %279

; <label>:278:                                    ; preds = %25
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %9, align 8
  store i32 -1125754180, i32* %24
  br label %279

; <label>:279:                                    ; preds = %278, %275, %268, %261, %258, %231, %203, %200, %199, %170, %154, %153, %150, %128, %100, %93, %91, %88, %66, %38, %33, %32, %28, %27
  br label %25
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNKSt8__detail15_Hashtable_baseIiSt4pairIKixENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_equalsERS2_mPNS_10_Hash_nodeIS3_Lb0EEE(%"struct.std::__detail::_Hashtable_base"*, i32* dereferenceable(4), i64, %"struct.std::__detail::_Hash_node"*) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.565
  %9 = load i32, i32* @y.566
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -457816361, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %84
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -457816361, label %21
    i32 215603111, label %41
    i32 -53852651, label %69
    i32 2123101501, label %71
  ]

; <label>:20:                                     ; preds = %18
  br label %84

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 215603111, i32 2123101501
  store i32 %40, i32* %17
  br label %84

; <label>:41:                                     ; preds = %18
  %42 = alloca %"struct.std::__detail::_Hashtable_base"*, align 8
  %43 = alloca i32*, align 8
  %44 = alloca i64, align 8
  %45 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hashtable_base"* %0, %"struct.std::__detail::_Hashtable_base"** %42, align 8
  store i32* %1, i32** %43, align 8
  store i64 %2, i64* %44, align 8
  store %"struct.std::__detail::_Hash_node"* %3, %"struct.std::__detail::_Hash_node"** %45, align 8
  %46 = load %"struct.std::__detail::_Hashtable_base"*, %"struct.std::__detail::_Hashtable_base"** %42, align 8
  %47 = call dereferenceable(1) %"struct.std::equal_to"* @_ZNKSt8__detail15_Hashtable_baseIiSt4pairIKixENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE5_M_eqEv(%"struct.std::__detail::_Hashtable_base"* %46)
  %48 = bitcast %"struct.std::__detail::_Hashtable_base"* %46 to %"struct.std::__detail::_Hash_code_base"*
  %49 = call dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE10_M_extractEv(%"struct.std::__detail::_Hash_code_base"* %48)
  %50 = load i32*, i32** %43, align 8
  %51 = load i64, i64* %44, align 8
  %52 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %45, align 8
  %53 = call zeroext i1 @_ZNSt8__detail13_Equal_helperIiSt4pairIKixENS_10_Select1stESt8equal_toIiEmLb0EE9_S_equalsERKS6_RKS4_RS2_mPNS_10_Hash_nodeIS3_Lb0EEE(%"struct.std::equal_to"* dereferenceable(1) %47, %"struct.std::__detail::_Select1st"* dereferenceable(1) %49, i32* dereferenceable(4) %50, i64 %51, %"struct.std::__detail::_Hash_node"* %52)
  store i1 %53, i1* %5
  %54 = load i32, i32* @x.565
  %55 = load i32, i32* @y.566
  %56 = add i32 %54, -1787552595
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, -1787552595
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 -53852651, i32 2123101501
  store i32 %68, i32* %17
  br label %84

; <label>:69:                                     ; preds = %18
  %70 = load volatile i1, i1* %5
  ret i1 %70

; <label>:71:                                     ; preds = %18
  %72 = alloca %"struct.std::__detail::_Hashtable_base"*, align 8
  %73 = alloca i32*, align 8
  %74 = alloca i64, align 8
  %75 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hashtable_base"* %0, %"struct.std::__detail::_Hashtable_base"** %72, align 8
  store i32* %1, i32** %73, align 8
  store i64 %2, i64* %74, align 8
  store %"struct.std::__detail::_Hash_node"* %3, %"struct.std::__detail::_Hash_node"** %75, align 8
  %76 = load %"struct.std::__detail::_Hashtable_base"*, %"struct.std::__detail::_Hashtable_base"** %72, align 8
  %77 = call dereferenceable(1) %"struct.std::equal_to"* @_ZNKSt8__detail15_Hashtable_baseIiSt4pairIKixENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE5_M_eqEv(%"struct.std::__detail::_Hashtable_base"* %76)
  %78 = bitcast %"struct.std::__detail::_Hashtable_base"* %76 to %"struct.std::__detail::_Hash_code_base"*
  %79 = call dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE10_M_extractEv(%"struct.std::__detail::_Hash_code_base"* %78)
  %80 = load i32*, i32** %73, align 8
  %81 = load i64, i64* %74, align 8
  %82 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %75, align 8
  %83 = call zeroext i1 @_ZNSt8__detail13_Equal_helperIiSt4pairIKixENS_10_Select1stESt8equal_toIiEmLb0EE9_S_equalsERKS6_RKS4_RS2_mPNS_10_Hash_nodeIS3_Lb0EEE(%"struct.std::equal_to"* dereferenceable(1) %77, %"struct.std::__detail::_Select1st"* dereferenceable(1) %79, i32* dereferenceable(4) %80, i64 %81, %"struct.std::__detail::_Hash_node"* %82)
  store i32 215603111, i32* %17
  br label %84

; <label>:84:                                     ; preds = %71, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNSt8__detail13_Equal_helperIiSt4pairIKixENS_10_Select1stESt8equal_toIiEmLb0EE9_S_equalsERKS6_RKS4_RS2_mPNS_10_Hash_nodeIS3_Lb0EEE(%"struct.std::equal_to"* dereferenceable(1), %"struct.std::__detail::_Select1st"* dereferenceable(1), i32* dereferenceable(4), i64, %"struct.std::__detail::_Hash_node"*) #0 comdat align 2 {
  %6 = alloca %"struct.std::equal_to"*, align 8
  %7 = alloca %"struct.std::__detail::_Select1st"*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::equal_to"* %0, %"struct.std::equal_to"** %6, align 8
  store %"struct.std::__detail::_Select1st"* %1, %"struct.std::__detail::_Select1st"** %7, align 8
  store i32* %2, i32** %8, align 8
  store i64 %3, i64* %9, align 8
  store %"struct.std::__detail::_Hash_node"* %4, %"struct.std::__detail::_Hash_node"** %10, align 8
  %11 = load %"struct.std::equal_to"*, %"struct.std::equal_to"** %6, align 8
  %12 = load i32*, i32** %8, align 8
  %13 = load %"struct.std::__detail::_Select1st"*, %"struct.std::__detail::_Select1st"** %7, align 8
  %14 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %15 = bitcast %"struct.std::__detail::_Hash_node"* %14 to %"struct.std::__detail::_Hash_node_value_base"*
  %16 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base"* %15) #3
  %17 = call dereferenceable(4) i32* @_ZNKSt8__detail10_Select1stclIRSt4pairIKixEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS6_(%"struct.std::__detail::_Select1st"* %13, %"struct.std::pair"* dereferenceable(16) %16)
  %18 = call zeroext i1 @_ZNKSt8equal_toIiEclERKiS2_(%"struct.std::equal_to"* %11, i32* dereferenceable(4) %12, i32* dereferenceable(4) %17)
  ret i1 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(1) %"struct.std::equal_to"* @_ZNKSt8__detail15_Hashtable_baseIiSt4pairIKixENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE5_M_eqEv(%"struct.std::__detail::_Hashtable_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_base"*, align 8
  store %"struct.std::__detail::_Hashtable_base"* %0, %"struct.std::__detail::_Hashtable_base"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_base"*, %"struct.std::__detail::_Hashtable_base"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_base"* %3 to %"struct.std::__detail::_Hashtable_ebo_helper.7"*
  %5 = call dereferenceable(1) %"struct.std::equal_to"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toIiELb1EE7_S_cgetERKS3_(%"struct.std::__detail::_Hashtable_ebo_helper.7"* dereferenceable(1) %4)
  ret %"struct.std::equal_to"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt8equal_toIiEclERKiS2_(%"struct.std::equal_to"*, i32* dereferenceable(4), i32* dereferenceable(4)) #4 comdat align 2 {
  %4 = alloca %"struct.std::equal_to"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"struct.std::equal_to"* %0, %"struct.std::equal_to"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"struct.std::equal_to"*, %"struct.std::equal_to"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = load i32, i32* %8, align 4
  %10 = load i32*, i32** %6, align 8
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %9, %11
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNKSt8__detail10_Select1stclIRSt4pairIKixEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS6_(%"struct.std::__detail::_Select1st"*, %"struct.std::pair"* dereferenceable(16)) #4 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Select1st"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::__detail::_Select1st"* %0, %"struct.std::__detail::_Select1st"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"struct.std::__detail::_Select1st"*, %"struct.std::__detail::_Select1st"** %3, align 8
  %6 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %7 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRSt4pairIKixEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::pair"* dereferenceable(16) %6) #3
  %8 = call dereferenceable(4) i32* @_ZSt3getILm0EKixERNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERS5_(%"struct.std::pair"* dereferenceable(16) %7) #3
  ret i32* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3getILm0EKixERNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERS5_(%"struct.std::pair"* dereferenceable(16)) #4 comdat {
  %2 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %2, align 8
  %3 = load %"struct.std::pair"*, %"struct.std::pair"** %2, align 8
  %4 = call dereferenceable(4) i32* @_ZNSt10__pair_getILm0EE5__getIKixEERT_RSt4pairIS3_T0_E(%"struct.std::pair"* dereferenceable(16) %3) #3
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRSt4pairIKixEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::pair"* dereferenceable(16)) #4 comdat {
  %2 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %2, align 8
  %3 = load %"struct.std::pair"*, %"struct.std::pair"** %2, align 8
  ret %"struct.std::pair"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt10__pair_getILm0EE5__getIKixEERT_RSt4pairIS3_T0_E(%"struct.std::pair"* dereferenceable(16)) #4 comdat align 2 {
  %2 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %2, align 8
  %3 = load %"struct.std::pair"*, %"struct.std::pair"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %3, i32 0, i32 0
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::equal_to"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toIiELb1EE7_S_cgetERKS3_(%"struct.std::__detail::_Hashtable_ebo_helper.7"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"struct.std::equal_to"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.581
  %6 = load i32, i32* @y.582
  %7 = sub i32 %5, 780674085
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 780674085
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -285823700, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %52
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -285823700, label %19
    i32 2037419716, label %27
    i32 40922462, label %46
    i32 -177189780, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %52

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 2037419716, i32 -177189780
  store i32 %26, i32* %15
  br label %52

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.7"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.7"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.7"** %28, align 8
  %29 = load %"struct.std::__detail::_Hashtable_ebo_helper.7"*, %"struct.std::__detail::_Hashtable_ebo_helper.7"** %28, align 8
  %30 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.7"* %29 to %"struct.std::equal_to"*
  store %"struct.std::equal_to"* %30, %"struct.std::equal_to"** %2
  %31 = load i32, i32* @x.581
  %32 = load i32, i32* @y.582
  %33 = add i32 %31, 270219312
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 270219312
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 40922462, i32 -177189780
  store i32 %45, i32* %15
  br label %52

; <label>:46:                                     ; preds = %16
  %47 = load volatile %"struct.std::equal_to"*, %"struct.std::equal_to"** %2
  ret %"struct.std::equal_to"* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.7"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.7"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.7"** %49, align 8
  %50 = load %"struct.std::__detail::_Hashtable_ebo_helper.7"*, %"struct.std::__detail::_Hashtable_ebo_helper.7"** %49, align 8
  %51 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.7"* %50 to %"struct.std::equal_to"*
  store i32 2037419716, i32* %15
  br label %52

; <label>:52:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIKixEEE9constructIS2_JRKSt21piecewise_construct_tSt5tupleIJOiEES9_IJEEEEEvRS3_PT_DpOT0_(%"class.std::allocator.12"* dereferenceable(1), %"struct.std::pair"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.21"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca %"class.std::allocator.12"*, align 8
  %7 = alloca %"struct.std::pair"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple"*, align 8
  %10 = alloca %"class.std::tuple.21"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %6, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %9, align 8
  store %"class.std::tuple.21"* %4, %"class.std::tuple.21"** %10, align 8
  %11 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %6, align 8
  %12 = bitcast %"class.std::allocator.12"* %11 to %"class.__gnu_cxx::new_allocator.13"*
  %13 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %14 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %15 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %14) #3
  %16 = load %"class.std::tuple"*, %"class.std::tuple"** %9, align 8
  %17 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJOiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::tuple"* dereferenceable(8) %16) #3
  %18 = load %"class.std::tuple.21"*, %"class.std::tuple.21"** %10, align 8
  %19 = call dereferenceable(1) %"class.std::tuple.21"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.21"* dereferenceable(1) %18) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIKixEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJOiEES9_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.13"* %12, %"struct.std::pair"* %13, %"struct.std::piecewise_construct_t"* dereferenceable(1) %15, %"class.std::tuple"* dereferenceable(8) %17, %"class.std::tuple.21"* dereferenceable(1) %19)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"struct.std::piecewise_construct_t"*, align 8
  store %"struct.std::piecewise_construct_t"* %0, %"struct.std::piecewise_construct_t"** %2, align 8
  %3 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %2, align 8
  ret %"struct.std::piecewise_construct_t"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJOiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::tuple"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"class.std::tuple"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.587
  %6 = load i32, i32* @y.588
  %7 = sub i32 %5, -1707670509
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1707670509
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1454223000, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1454223000, label %19
    i32 1286790799, label %27
    i32 1785725884, label %57
    i32 63016153, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1286790799, i32 63016153
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %28, align 8
  %29 = load %"class.std::tuple"*, %"class.std::tuple"** %28, align 8
  store %"class.std::tuple"* %29, %"class.std::tuple"** %2
  %30 = load i32, i32* @x.587
  %31 = load i32, i32* @y.588
  %32 = sub i32 %30, -1207971232
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -1207971232
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 1785725884, i32 63016153
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"class.std::tuple"*, %"class.std::tuple"** %2
  ret %"class.std::tuple"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %60, align 8
  %61 = load %"class.std::tuple"*, %"class.std::tuple"** %60, align 8
  store i32 1286790799, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::tuple.21"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.21"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"class.std::tuple.21"*, align 8
  store %"class.std::tuple.21"* %0, %"class.std::tuple.21"** %2, align 8
  %3 = load %"class.std::tuple.21"*, %"class.std::tuple.21"** %2, align 8
  ret %"class.std::tuple.21"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIKixEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJOiEES9_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.13"*, %"struct.std::pair"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.21"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.591
  %9 = load i32, i32* @y.592
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -1070196730, i32* %17
  br label %18

; <label>:18:                                     ; preds = %5, %103
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1070196730, label %21
    i32 -1877548955, label %29
    i32 -1161724485, label %79
    i32 -684779145, label %80
  ]

; <label>:20:                                     ; preds = %18
  br label %103

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1877548955, i32 -684779145
  store i32 %28, i32* %17
  br label %103

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  %31 = alloca %"struct.std::pair"*, align 8
  %32 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %33 = alloca %"class.std::tuple"*, align 8
  %34 = alloca %"class.std::tuple.21"*, align 8
  %35 = alloca %"struct.std::piecewise_construct_t", align 1
  %36 = alloca %"class.std::tuple", align 8
  %37 = alloca %"class.std::tuple.21", align 1
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %30, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %31, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %32, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %33, align 8
  store %"class.std::tuple.21"* %4, %"class.std::tuple.21"** %34, align 8
  %38 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %30, align 8
  %39 = load %"struct.std::pair"*, %"struct.std::pair"** %31, align 8
  %40 = bitcast %"struct.std::pair"* %39 to i8*
  %41 = bitcast i8* %40 to %"struct.std::pair"*
  %42 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %32, align 8
  %43 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %42) #3
  %44 = load %"class.std::tuple"*, %"class.std::tuple"** %33, align 8
  %45 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJOiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::tuple"* dereferenceable(8) %44) #3
  call void @_ZNSt5tupleIJOiEEC2EOS1_(%"class.std::tuple"* %36, %"class.std::tuple"* dereferenceable(8) %45) #3
  %46 = load %"class.std::tuple.21"*, %"class.std::tuple.21"** %34, align 8
  %47 = call dereferenceable(1) %"class.std::tuple.21"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.21"* dereferenceable(1) %46) #3
  %48 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %36, i32 0, i32 0
  %49 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %48, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %49, i32 0, i32 0
  %51 = load i32*, i32** %50, align 8
  call void @_ZNSt4pairIKixEC2IJOiEJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE(%"struct.std::pair"* %41, i32* %51)
  %52 = load i32, i32* @x.591
  %53 = load i32, i32* @y.592
  %54 = sub i32 %52, -580138575
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -580138575
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 -1161724485, i32 -684779145
  store i32 %78, i32* %17
  br label %103

; <label>:79:                                     ; preds = %18
  ret void

; <label>:80:                                     ; preds = %18
  %81 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  %82 = alloca %"struct.std::pair"*, align 8
  %83 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %84 = alloca %"class.std::tuple"*, align 8
  %85 = alloca %"class.std::tuple.21"*, align 8
  %86 = alloca %"struct.std::piecewise_construct_t", align 1
  %87 = alloca %"class.std::tuple", align 8
  %88 = alloca %"class.std::tuple.21", align 1
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %81, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %82, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %83, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %84, align 8
  store %"class.std::tuple.21"* %4, %"class.std::tuple.21"** %85, align 8
  %89 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %81, align 8
  %90 = load %"struct.std::pair"*, %"struct.std::pair"** %82, align 8
  %91 = bitcast %"struct.std::pair"* %90 to i8*
  %92 = bitcast i8* %91 to %"struct.std::pair"*
  %93 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %83, align 8
  %94 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %93) #3
  %95 = load %"class.std::tuple"*, %"class.std::tuple"** %84, align 8
  %96 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJOiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::tuple"* dereferenceable(8) %95) #3
  call void @_ZNSt5tupleIJOiEEC2EOS1_(%"class.std::tuple"* %87, %"class.std::tuple"* dereferenceable(8) %96) #3
  %97 = load %"class.std::tuple.21"*, %"class.std::tuple.21"** %85, align 8
  %98 = call dereferenceable(1) %"class.std::tuple.21"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.21"* dereferenceable(1) %97) #3
  %99 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %87, i32 0, i32 0
  %100 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %99, i32 0, i32 0
  %101 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %100, i32 0, i32 0
  %102 = load i32*, i32** %101, align 8
  call void @_ZNSt4pairIKixEC2IJOiEJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE(%"struct.std::pair"* %92, i32* %102)
  store i32 -1877548955, i32* %17
  br label %103

; <label>:103:                                    ; preds = %80, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5tupleIJOiEEC2EOS1_(%"class.std::tuple"*, %"class.std::tuple"* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.593
  %6 = load i32, i32* @y.594
  %7 = add i32 %5, 1251617119
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1251617119
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -469120630, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -469120630, label %19
    i32 556884893, label %39
    i32 1158528964, label %60
    i32 -719528987, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 556884893, i32 -719528987
  store i32 %38, i32* %15
  br label %68

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::tuple"*, align 8
  %41 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %40, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %41, align 8
  %42 = load %"class.std::tuple"*, %"class.std::tuple"** %40, align 8
  %43 = bitcast %"class.std::tuple"* %42 to %"struct.std::_Tuple_impl"*
  %44 = load %"class.std::tuple"*, %"class.std::tuple"** %41, align 8
  %45 = bitcast %"class.std::tuple"* %44 to %"struct.std::_Tuple_impl"*
  call void @_ZNSt11_Tuple_implILm0EJOiEEC2EOS1_(%"struct.std::_Tuple_impl"* %43, %"struct.std::_Tuple_impl"* dereferenceable(8) %45) #3
  %46 = load i32, i32* @x.593
  %47 = load i32, i32* @y.594
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 1158528964, i32 -719528987
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::tuple"*, align 8
  %63 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %62, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %63, align 8
  %64 = load %"class.std::tuple"*, %"class.std::tuple"** %62, align 8
  %65 = bitcast %"class.std::tuple"* %64 to %"struct.std::_Tuple_impl"*
  %66 = load %"class.std::tuple"*, %"class.std::tuple"** %63, align 8
  %67 = bitcast %"class.std::tuple"* %66 to %"struct.std::_Tuple_impl"*
  call void @_ZNSt11_Tuple_implILm0EJOiEEC2EOS1_(%"struct.std::_Tuple_impl"* %65, %"struct.std::_Tuple_impl"* dereferenceable(8) %67) #3
  store i32 556884893, i32* %15
  br label %68

; <label>:68:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt4pairIKixEC2IJOiEJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE(%"struct.std::pair"*, i32*) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.595
  %6 = load i32, i32* @y.596
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -725367203, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -725367203, label %18
    i32 1353891422, label %26
    i32 -872204299, label %52
    i32 -192451570, label %53
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1353891422, i32 -192451570
  store i32 %25, i32* %14
  br label %64

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::piecewise_construct_t", align 1
  %28 = alloca %"class.std::tuple", align 8
  %29 = alloca %"class.std::tuple.21", align 1
  %30 = alloca %"struct.std::pair"*, align 8
  %31 = alloca %"struct.std::_Index_tuple", align 1
  %32 = alloca %"struct.std::_Index_tuple.22", align 1
  %33 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %28, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %34, i32 0, i32 0
  store i32* %1, i32** %35, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %30, align 8
  %36 = load %"struct.std::pair"*, %"struct.std::pair"** %30, align 8
  call void @_ZNSt4pairIKixEC2IJOiEJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE(%"struct.std::pair"* %36, %"class.std::tuple"* dereferenceable(8) %28, %"class.std::tuple.21"* dereferenceable(1) %29)
  %37 = load i32, i32* @x.595
  %38 = load i32, i32* @y.596
  %39 = add i32 %37, -1725637971
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, -1725637971
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 -872204299, i32 -192451570
  store i32 %51, i32* %14
  br label %64

; <label>:52:                                     ; preds = %15
  ret void

; <label>:53:                                     ; preds = %15
  %54 = alloca %"struct.std::piecewise_construct_t", align 1
  %55 = alloca %"class.std::tuple", align 8
  %56 = alloca %"class.std::tuple.21", align 1
  %57 = alloca %"struct.std::pair"*, align 8
  %58 = alloca %"struct.std::_Index_tuple", align 1
  %59 = alloca %"struct.std::_Index_tuple.22", align 1
  %60 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %55, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %60, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %61, i32 0, i32 0
  store i32* %1, i32** %62, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %57, align 8
  %63 = load %"struct.std::pair"*, %"struct.std::pair"** %57, align 8
  call void @_ZNSt4pairIKixEC2IJOiEJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE(%"struct.std::pair"* %63, %"class.std::tuple"* dereferenceable(8) %55, %"class.std::tuple.21"* dereferenceable(1) %56)
  store i32 1353891422, i32* %14
  br label %64

; <label>:64:                                     ; preds = %53, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJOiEEC2EOS1_(%"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"* dereferenceable(8)) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Tuple_impl"*, align 8
  %4 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %3, align 8
  store %"struct.std::_Tuple_impl"* %1, %"struct.std::_Tuple_impl"** %4, align 8
  %5 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Tuple_impl"* %5 to %"struct.std::_Head_base"*
  %7 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %4, align 8
  %8 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm0EJOiEE7_M_headERS1_(%"struct.std::_Tuple_impl"* dereferenceable(8) %7) #3
  %9 = call dereferenceable(4) i32* @_ZSt7forwardIOiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %8) #3
  invoke void @_ZNSt10_Head_baseILm0EOiLb0EEC2IiEEOT_(%"struct.std::_Head_base"* %6, i32* dereferenceable(4) %9)
          to label %10 unwind label %11

; <label>:10:                                     ; preds = %2
  ret void

; <label>:11:                                     ; preds = %2
  %12 = landingpad { i8*, i32 }
          catch i8* null
  %13 = extractvalue { i8*, i32 } %12, 0
  call void @__clang_call_terminate(i8* %13) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIOiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4)) #4 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt11_Tuple_implILm0EJOiEE7_M_headERS1_(%"struct.std::_Tuple_impl"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl"* %3 to %"struct.std::_Head_base"*
  %5 = call dereferenceable(4) i32* @_ZNSt10_Head_baseILm0EOiLb0EE7_M_headERS1_(%"struct.std::_Head_base"* dereferenceable(8) %4) #3
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm0EOiLb0EEC2IiEEOT_(%"struct.std::_Head_base"*, i32* dereferenceable(4)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Head_base"*, align 8
  %4 = alloca i32*, align 8
  store %"struct.std::_Head_base"* %0, %"struct.std::_Head_base"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %5, i32 0, i32 0
  %7 = load i32*, i32** %4, align 8
  %8 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %7) #3
  store i32* %8, i32** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt10_Head_baseILm0EOiLb0EE7_M_headERS1_(%"struct.std::_Head_base"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.605
  %6 = load i32, i32* @y.606
  %7 = sub i32 %5, 1555922257
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1555922257
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -424814570, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -424814570, label %19
    i32 834993844, label %39
    i32 -382924861, label %59
    i32 870845562, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 834993844, i32 870845562
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Head_base"*, align 8
  store %"struct.std::_Head_base"* %0, %"struct.std::_Head_base"** %40, align 8
  %41 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %41, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  store i32* %43, i32** %2
  %44 = load i32, i32* @x.605
  %45 = load i32, i32* @y.606
  %46 = add i32 %44, -748823592
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -748823592
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -382924861, i32 870845562
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i32*, i32** %2
  ret i32* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_Head_base"*, align 8
  store %"struct.std::_Head_base"* %0, %"struct.std::_Head_base"** %62, align 8
  %63 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %63, i32 0, i32 0
  %65 = load i32*, i32** %64, align 8
  store i32 834993844, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4)) #4 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.607
  %6 = load i32, i32* @y.608
  %7 = sub i32 %5, 448703017
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 448703017
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 891156437, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 891156437, label %19
    i32 -1038288956, label %27
    i32 189415473, label %57
    i32 -587552817, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1038288956, i32 -587552817
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca i32*, align 8
  store i32* %0, i32** %28, align 8
  %29 = load i32*, i32** %28, align 8
  store i32* %29, i32** %2
  %30 = load i32, i32* @x.607
  %31 = load i32, i32* @y.608
  %32 = sub i32 %30, 1800319733
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 1800319733
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 189415473, i32 -587552817
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile i32*, i32** %2
  ret i32* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca i32*, align 8
  store i32* %0, i32** %60, align 8
  %61 = load i32*, i32** %60, align 8
  store i32 -1038288956, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIKixEC2IJOiEJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE(%"struct.std::pair"*, %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.21"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::_Index_tuple", align 1
  %5 = alloca %"struct.std::_Index_tuple.22", align 1
  %6 = alloca %"struct.std::pair"*, align 8
  %7 = alloca %"class.std::tuple"*, align 8
  %8 = alloca %"class.std::tuple.21"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %6, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %7, align 8
  store %"class.std::tuple.21"* %2, %"class.std::tuple.21"** %8, align 8
  %9 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %10 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %9, i32 0, i32 0
  %11 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  %12 = call dereferenceable(4) i32* @_ZSt3getILm0EJOiEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS5_(%"class.std::tuple"* dereferenceable(8) %11) #3
  %13 = call dereferenceable(4) i32* @_ZSt7forwardIOiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %12) #3
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %10, align 8
  %15 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %9, i32 0, i32 1
  store i64 0, i64* %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3getILm0EJOiEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS5_(%"class.std::tuple"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %2, align 8
  %3 = load %"class.std::tuple"*, %"class.std::tuple"** %2, align 8
  %4 = bitcast %"class.std::tuple"* %3 to %"struct.std::_Tuple_impl"*
  %5 = call dereferenceable(4) i32* @_ZSt12__get_helperILm0EOiJEERT0_RSt11_Tuple_implIXT_EJS1_DpT1_EE(%"struct.std::_Tuple_impl"* dereferenceable(8) %4) #3
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt12__get_helperILm0EOiJEERT0_RSt11_Tuple_implIXT_EJS1_DpT1_EE(%"struct.std::_Tuple_impl"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %2, align 8
  %4 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm0EJOiEE7_M_headERS1_(%"struct.std::_Tuple_impl"* dereferenceable(8) %3) #3
  ret i32* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5tupleIJOiEEC2IJiEvEEDpOT_(%"class.std::tuple"*, i32* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::tuple"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::tuple"*, %"class.std::tuple"** %3, align 8
  %6 = bitcast %"class.std::tuple"* %5 to %"struct.std::_Tuple_impl"*
  %7 = load i32*, i32** %4, align 8
  %8 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %7) #3
  call void @_ZNSt11_Tuple_implILm0EJOiEEC2IiEEOT_(%"struct.std::_Tuple_impl"* %6, i32* dereferenceable(4) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJOiEEC2IiEEOT_(%"struct.std::_Tuple_impl"*, i32* dereferenceable(4)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.617
  %6 = load i32, i32* @y.618
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -509530137, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %67
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -509530137, label %18
    i32 472791530, label %26
    i32 1927116219, label %59
    i32 -440378755, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %67

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 472791530, i32 -440378755
  store i32 %25, i32* %14
  br label %67

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Tuple_impl"*, align 8
  %28 = alloca i32*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %27, align 8
  store i32* %1, i32** %28, align 8
  %29 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %27, align 8
  %30 = bitcast %"struct.std::_Tuple_impl"* %29 to %"struct.std::_Head_base"*
  %31 = load i32*, i32** %28, align 8
  %32 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %31) #3
  call void @_ZNSt10_Head_baseILm0EOiLb0EEC2IiEEOT_(%"struct.std::_Head_base"* %30, i32* dereferenceable(4) %32)
  %33 = load i32, i32* @x.617
  %34 = load i32, i32* @y.618
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 1927116219, i32 -440378755
  store i32 %58, i32* %14
  br label %67

; <label>:59:                                     ; preds = %15
  ret void

; <label>:60:                                     ; preds = %15
  %61 = alloca %"struct.std::_Tuple_impl"*, align 8
  %62 = alloca i32*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %61, align 8
  store i32* %1, i32** %62, align 8
  %63 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %61, align 8
  %64 = bitcast %"struct.std::_Tuple_impl"* %63 to %"struct.std::_Head_base"*
  %65 = load i32*, i32** %62, align 8
  %66 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %65) #3
  call void @_ZNSt10_Head_baseILm0EOiLb0EEC2IiEEOT_(%"struct.std::_Head_base"* %64, i32* dereferenceable(4) %66)
  store i32 472791530, i32* %14
  br label %67

; <label>:67:                                     ; preds = %60, %26, %18, %17
  br label %15
}

declare { i8, i64 } @_ZNKSt8__detail20_Prime_rehash_policy14_M_need_rehashEmmm(%"struct.std::__detail::_Prime_rehash_policy"*, i64, i64, i64) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_rehashEmRKm(%"class.std::_Hashtable"*, i64, i64* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Hashtable"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"struct.std::integral_constant", align 1
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %10 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4, align 8
  %11 = load i64, i64* %5, align 8
  invoke void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE(%"class.std::_Hashtable"* %10, i64 %11)
          to label %12 unwind label %13

; <label>:12:                                     ; preds = %3
  br label %86

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @x.619
  %15 = load i32, i32* @y.620
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %15, 10
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  br i1 %25, label %27, label %150

; <label>:27:                                     ; preds = %13, %150
  %28 = landingpad { i8*, i32 }
          catch i8* null
  %29 = extractvalue { i8*, i32 } %28, 0
  store i8* %29, i8** %8, align 8
  %30 = extractvalue { i8*, i32 } %28, 1
  store i32 %30, i32* %9, align 4
  %31 = load i32, i32* @x.619
  %32 = load i32, i32* @y.620
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  br i1 %42, label %44, label %150

; <label>:44:                                     ; preds = %27
  br label %45

; <label>:45:                                     ; preds = %44
  %46 = load i8*, i8** %8, align 8
  %47 = call i8* @__cxa_begin_catch(i8* %46) #3
  %48 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %10, i32 0, i32 4
  %49 = load i64*, i64** %6, align 8
  %50 = load i64, i64* %49, align 8
  invoke void @_ZNSt8__detail20_Prime_rehash_policy8_M_resetEm(%"struct.std::__detail::_Prime_rehash_policy"* %48, i64 %50)
          to label %51 unwind label %81

; <label>:51:                                     ; preds = %45
  %52 = load i32, i32* @x.619
  %53 = load i32, i32* @y.620
  %54 = add i32 %52, -630860246
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, -630860246
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  br i1 %64, label %66, label %154

; <label>:66:                                     ; preds = %51, %154
  %67 = load i32, i32* @x.619
  %68 = load i32, i32* @y.620
  %69 = sub i32 0, 1
  %70 = add i32 %67, %69
  %71 = sub i32 %67, 1
  %72 = mul i32 %67, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %68, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  br i1 %78, label %80, label %154

; <label>:80:                                     ; preds = %66
  invoke void @__cxa_rethrow() #12
          to label %149 unwind label %81

; <label>:81:                                     ; preds = %80, %45
  %82 = landingpad { i8*, i32 }
          cleanup
  %83 = extractvalue { i8*, i32 } %82, 0
  store i8* %83, i8** %8, align 8
  %84 = extractvalue { i8*, i32 } %82, 1
  store i32 %84, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %85 unwind label %146

; <label>:85:                                     ; preds = %81
  br label %141

; <label>:86:                                     ; preds = %12
  %87 = load i32, i32* @x.619
  %88 = load i32, i32* @y.620
  %89 = sub i32 %87, -2017943941
  %90 = sub i32 %89, 1
  %91 = add i32 %90, -2017943941
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 false, true
  %100 = and i1 %97, false
  %101 = and i1 %95, %99
  %102 = and i1 %98, false
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 false, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  br i1 %111, label %113, label %155

; <label>:113:                                    ; preds = %86, %155
  %114 = load i32, i32* @x.619
  %115 = load i32, i32* @y.620
  %116 = sub i32 %114, -1723995438
  %117 = sub i32 %116, 1
  %118 = add i32 %117, -1723995438
  %119 = sub i32 %114, 1
  %120 = mul i32 %114, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %115, 10
  %124 = xor i1 %122, true
  %125 = xor i1 %123, true
  %126 = xor i1 true, true
  %127 = and i1 %124, true
  %128 = and i1 %122, %126
  %129 = and i1 %125, true
  %130 = and i1 %123, %126
  %131 = or i1 %127, %128
  %132 = or i1 %129, %130
  %133 = xor i1 %131, %132
  %134 = or i1 %124, %125
  %135 = xor i1 %134, true
  %136 = or i1 true, %126
  %137 = and i1 %135, %136
  %138 = or i1 %133, %137
  %139 = or i1 %122, %123
  br i1 %138, label %140, label %155

; <label>:140:                                    ; preds = %113
  ret void

; <label>:141:                                    ; preds = %85
  %142 = load i8*, i8** %8, align 8
  %143 = load i32, i32* %9, align 4
  %144 = insertvalue { i8*, i32 } undef, i8* %142, 0
  %145 = insertvalue { i8*, i32 } %144, i32 %143, 1
  resume { i8*, i32 } %145

; <label>:146:                                    ; preds = %81
  %147 = landingpad { i8*, i32 }
          catch i8* null
  %148 = extractvalue { i8*, i32 } %147, 0
  call void @__clang_call_terminate(i8* %148) #11
  unreachable

; <label>:149:                                    ; preds = %80
  unreachable

; <label>:150:                                    ; preds = %27, %13
  %151 = landingpad { i8*, i32 }
          catch i8* null
  %152 = extractvalue { i8*, i32 } %151, 0
  store i8* %152, i8** %8, align 8
  %153 = extractvalue { i8*, i32 } %151, 1
  store i32 %153, i32* %9, align 4
  br label %27

; <label>:154:                                    ; preds = %66, %51
  br label %66

; <label>:155:                                    ; preds = %113, %86
  br label %113
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE10_M_extractEv(%"struct.std::__detail::_Hash_code_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hash_code_base"* %3 to %"struct.std::__detail::_Hashtable_ebo_helper"*
  %5 = call dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_10_Select1stELb1EE6_S_getERS2_(%"struct.std::__detail::_Hashtable_ebo_helper"* dereferenceable(1) %4)
  ret %"struct.std::__detail::_Select1st"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE13_M_store_codeEPNS_10_Hash_nodeIS3_Lb0EEEm(%"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_node"*, i64) #4 comdat align 2 {
  %4 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %4, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE22_M_insert_bucket_beginEmPNS4_10_Hash_nodeIS2_Lb0EEE(%"class.std::_Hashtable"*, i64, %"struct.std::__detail::_Hash_node"*) #4 comdat align 2 {
  %4 = alloca %"struct.std::__detail::_Hash_node_base"*
  %5 = alloca %"class.std::_Hashtable"*
  %6 = alloca %"class.std::_Hashtable"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %6, align 8
  store i64 %1, i64* %7, align 8
  store %"struct.std::__detail::_Hash_node"* %2, %"struct.std::__detail::_Hash_node"** %8, align 8
  %9 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %6, align 8
  store %"class.std::_Hashtable"* %9, %"class.std::_Hashtable"** %5
  %10 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %11 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %10, i32 0, i32 0
  %12 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %11, align 8
  %13 = load i64, i64* %7, align 8
  %14 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %12, i64 %13
  %15 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %14, align 8
  store %"struct.std::__detail::_Hash_node_base"* %15, %"struct.std::__detail::_Hash_node_base"** %4
  %16 = alloca i32
  store i32 -1420932694, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %195
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1420932694, label %20
    i32 1008484806, label %24
    i32 1701612101, label %45
    i32 1642988859, label %64
    i32 1946508551, label %92
    i32 -1903306646, label %130
    i32 -978328670, label %131
    i32 565624749, label %139
    i32 -1926761265, label %167
    i32 1003137312, label %182
    i32 1210149440, label %183
    i32 -824920883, label %194
  ]

; <label>:19:                                     ; preds = %17
  br label %195

; <label>:20:                                     ; preds = %17
  %21 = load volatile %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %4
  %22 = icmp ne %"struct.std::__detail::_Hash_node_base"* %21, null
  %23 = select i1 %22, i32 1008484806, i32 1701612101
  store i32 %23, i32* %16
  br label %195

; <label>:24:                                     ; preds = %17
  %25 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %26 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %25, i32 0, i32 0
  %27 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %26, align 8
  %28 = load i64, i64* %7, align 8
  %29 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %27, i64 %28
  %30 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %29, align 8
  %31 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %30, i32 0, i32 0
  %32 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %31, align 8
  %33 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %34 = bitcast %"struct.std::__detail::_Hash_node"* %33 to %"struct.std::__detail::_Hash_node_base"*
  %35 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %34, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %32, %"struct.std::__detail::_Hash_node_base"** %35, align 8
  %36 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %37 = bitcast %"struct.std::__detail::_Hash_node"* %36 to %"struct.std::__detail::_Hash_node_base"*
  %38 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %39 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %38, i32 0, i32 0
  %40 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %39, align 8
  %41 = load i64, i64* %7, align 8
  %42 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %40, i64 %41
  %43 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %42, align 8
  %44 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %43, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %37, %"struct.std::__detail::_Hash_node_base"** %44, align 8
  store i32 565624749, i32* %16
  br label %195

; <label>:45:                                     ; preds = %17
  %46 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %47 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %46, i32 0, i32 2
  %48 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %47, i32 0, i32 0
  %49 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %48, align 8
  %50 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %51 = bitcast %"struct.std::__detail::_Hash_node"* %50 to %"struct.std::__detail::_Hash_node_base"*
  %52 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %51, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %49, %"struct.std::__detail::_Hash_node_base"** %52, align 8
  %53 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %54 = bitcast %"struct.std::__detail::_Hash_node"* %53 to %"struct.std::__detail::_Hash_node_base"*
  %55 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %56 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %55, i32 0, i32 2
  %57 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %56, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %54, %"struct.std::__detail::_Hash_node_base"** %57, align 8
  %58 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %59 = bitcast %"struct.std::__detail::_Hash_node"* %58 to %"struct.std::__detail::_Hash_node_base"*
  %60 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %59, i32 0, i32 0
  %61 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %60, align 8
  %62 = icmp ne %"struct.std::__detail::_Hash_node_base"* %61, null
  %63 = select i1 %62, i32 1642988859, i32 -978328670
  store i32 %63, i32* %16
  br label %195

; <label>:64:                                     ; preds = %17
  %65 = load i32, i32* @x.625
  %66 = load i32, i32* @y.626
  %67 = sub i32 %65, -2109286051
  %68 = sub i32 %67, 1
  %69 = add i32 %68, -2109286051
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = xor i1 %73, true
  %76 = xor i1 %74, true
  %77 = xor i1 false, true
  %78 = and i1 %75, false
  %79 = and i1 %73, %77
  %80 = and i1 %76, false
  %81 = and i1 %74, %77
  %82 = or i1 %78, %79
  %83 = or i1 %80, %81
  %84 = xor i1 %82, %83
  %85 = or i1 %75, %76
  %86 = xor i1 %85, true
  %87 = or i1 false, %77
  %88 = and i1 %86, %87
  %89 = or i1 %84, %88
  %90 = or i1 %73, %74
  %91 = select i1 %89, i32 1946508551, i32 1210149440
  store i32 %91, i32* %16
  br label %195

; <label>:92:                                     ; preds = %17
  %93 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %94 = bitcast %"struct.std::__detail::_Hash_node"* %93 to %"struct.std::__detail::_Hash_node_base"*
  %95 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %96 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %95, i32 0, i32 0
  %97 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %96, align 8
  %98 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %99 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %98) #3
  %100 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %101 = call i64 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexEPNS4_10_Hash_nodeIS2_Lb0EEE(%"class.std::_Hashtable"* %100, %"struct.std::__detail::_Hash_node"* %99) #3
  %102 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %97, i64 %101
  store %"struct.std::__detail::_Hash_node_base"* %94, %"struct.std::__detail::_Hash_node_base"** %102, align 8
  %103 = load i32, i32* @x.625
  %104 = load i32, i32* @y.626
  %105 = add i32 %103, 252035480
  %106 = sub i32 %105, 1
  %107 = sub i32 %106, 252035480
  %108 = sub i32 %103, 1
  %109 = mul i32 %103, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %104, 10
  %113 = xor i1 %111, true
  %114 = xor i1 %112, true
  %115 = xor i1 true, true
  %116 = and i1 %113, true
  %117 = and i1 %111, %115
  %118 = and i1 %114, true
  %119 = and i1 %112, %115
  %120 = or i1 %116, %117
  %121 = or i1 %118, %119
  %122 = xor i1 %120, %121
  %123 = or i1 %113, %114
  %124 = xor i1 %123, true
  %125 = or i1 true, %115
  %126 = and i1 %124, %125
  %127 = or i1 %122, %126
  %128 = or i1 %111, %112
  %129 = select i1 %127, i32 -1903306646, i32 1210149440
  store i32 %129, i32* %16
  br label %195

; <label>:130:                                    ; preds = %17
  store i32 -978328670, i32* %16
  br label %195

; <label>:131:                                    ; preds = %17
  %132 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %133 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %132, i32 0, i32 2
  %134 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %135 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %134, i32 0, i32 0
  %136 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %135, align 8
  %137 = load i64, i64* %7, align 8
  %138 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %136, i64 %137
  store %"struct.std::__detail::_Hash_node_base"* %133, %"struct.std::__detail::_Hash_node_base"** %138, align 8
  store i32 565624749, i32* %16
  br label %195

; <label>:139:                                    ; preds = %17
  %140 = load i32, i32* @x.625
  %141 = load i32, i32* @y.626
  %142 = add i32 %140, 964084913
  %143 = sub i32 %142, 1
  %144 = sub i32 %143, 964084913
  %145 = sub i32 %140, 1
  %146 = mul i32 %140, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %141, 10
  %150 = xor i1 %148, true
  %151 = xor i1 %149, true
  %152 = xor i1 false, true
  %153 = and i1 %150, false
  %154 = and i1 %148, %152
  %155 = and i1 %151, false
  %156 = and i1 %149, %152
  %157 = or i1 %153, %154
  %158 = or i1 %155, %156
  %159 = xor i1 %157, %158
  %160 = or i1 %150, %151
  %161 = xor i1 %160, true
  %162 = or i1 false, %152
  %163 = and i1 %161, %162
  %164 = or i1 %159, %163
  %165 = or i1 %148, %149
  %166 = select i1 %164, i32 -1926761265, i32 -824920883
  store i32 %166, i32* %16
  br label %195

; <label>:167:                                    ; preds = %17
  %168 = load i32, i32* @x.625
  %169 = load i32, i32* @y.626
  %170 = sub i32 0, 1
  %171 = add i32 %168, %170
  %172 = sub i32 %168, 1
  %173 = mul i32 %168, %171
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %169, 10
  %177 = and i1 %175, %176
  %178 = xor i1 %175, %176
  %179 = or i1 %177, %178
  %180 = or i1 %175, %176
  %181 = select i1 %179, i32 1003137312, i32 -824920883
  store i32 %181, i32* %16
  br label %195

; <label>:182:                                    ; preds = %17
  ret void

; <label>:183:                                    ; preds = %17
  %184 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %185 = bitcast %"struct.std::__detail::_Hash_node"* %184 to %"struct.std::__detail::_Hash_node_base"*
  %186 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %187 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %186, i32 0, i32 0
  %188 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %187, align 8
  %189 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %190 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %189) #3
  %191 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %192 = call i64 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexEPNS4_10_Hash_nodeIS2_Lb0EEE(%"class.std::_Hashtable"* %191, %"struct.std::__detail::_Hash_node"* %190) #3
  %193 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %188, i64 %192
  store %"struct.std::__detail::_Hash_node_base"* %185, %"struct.std::__detail::_Hash_node_base"** %193, align 8
  store i32 1946508551, i32* %16
  br label %195

; <label>:194:                                    ; preds = %17
  store i32 -1926761265, i32* %16
  br label %195

; <label>:195:                                    ; preds = %194, %183, %167, %139, %131, %130, %92, %64, %45, %24, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE(%"class.std::_Hashtable"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca %"class.std::_Hashtable"*
  %6 = alloca %"struct.std::integral_constant", align 1
  %7 = alloca %"class.std::_Hashtable"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %10 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %13 = alloca i64, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %7, align 8
  store i64 %1, i64* %8, align 8
  %14 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %7, align 8
  store %"class.std::_Hashtable"* %14, %"class.std::_Hashtable"** %5
  %15 = load i64, i64* %8, align 8
  %16 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %17 = call %"struct.std::__detail::_Hash_node_base"** @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_allocate_bucketsEm(%"class.std::_Hashtable"* %16, i64 %15)
  store %"struct.std::__detail::_Hash_node_base"** %17, %"struct.std::__detail::_Hash_node_base"*** %9, align 8
  %18 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %19 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_beginEv(%"class.std::_Hashtable"* %18)
  store %"struct.std::__detail::_Hash_node"* %19, %"struct.std::__detail::_Hash_node"** %10, align 8
  %20 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %21 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %20, i32 0, i32 2
  %22 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %21, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %22, align 8
  store i64 0, i64* %11, align 8
  %23 = alloca i32
  store i32 -401602556, i32* %23
  br label %24

; <label>:24:                                     ; preds = %2, %314
  %25 = load i32, i32* %23
  switch i32 %25, label %26 [
    i32 -401602556, label %27
    i32 -1835587201, label %31
    i32 1142018001, label %59
    i32 -78324118, label %87
    i32 909915301, label %90
    i32 -1835107715, label %118
    i32 1858655746, label %167
    i32 -1644582345, label %170
    i32 -864737199, label %176
    i32 1600456680, label %178
    i32 203638067, label %206
    i32 737412491, label %250
    i32 477343004, label %251
    i32 -893361583, label %253
    i32 1012810744, label %261
    i32 971836266, label %274
    i32 -969266990, label %297
  ]

; <label>:26:                                     ; preds = %24
  br label %314

; <label>:27:                                     ; preds = %24
  %28 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %29 = icmp ne %"struct.std::__detail::_Hash_node"* %28, null
  %30 = select i1 %29, i32 -1835587201, i32 -893361583
  store i32 %30, i32* %23
  br label %314

; <label>:31:                                     ; preds = %24
  %32 = load i32, i32* @x.627
  %33 = load i32, i32* @y.628
  %34 = sub i32 %32, 1958491196
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 1958491196
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 1142018001, i32 1012810744
  store i32 %58, i32* %23
  br label %314

; <label>:59:                                     ; preds = %24
  %60 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %61 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %60) #3
  store %"struct.std::__detail::_Hash_node"* %61, %"struct.std::__detail::_Hash_node"** %12, align 8
  %62 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %63 = bitcast %"class.std::_Hashtable"* %62 to %"struct.std::__detail::_Hash_code_base"*
  %64 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %65 = load i64, i64* %8, align 8
  %66 = call i64 @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE15_M_bucket_indexEPKNS_10_Hash_nodeIS3_Lb0EEEm(%"struct.std::__detail::_Hash_code_base"* %63, %"struct.std::__detail::_Hash_node"* %64, i64 %65) #3
  store i64 %66, i64* %13, align 8
  %67 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %9, align 8
  %68 = load i64, i64* %13, align 8
  %69 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %67, i64 %68
  %70 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %69, align 8
  %71 = icmp ne %"struct.std::__detail::_Hash_node_base"* %70, null
  store i1 %71, i1* %4
  %72 = load i32, i32* @x.627
  %73 = load i32, i32* @y.628
  %74 = add i32 %72, 1339790670
  %75 = sub i32 %74, 1
  %76 = sub i32 %75, 1339790670
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  %86 = select i1 %84, i32 -78324118, i32 1012810744
  store i32 %86, i32* %23
  br label %314

; <label>:87:                                     ; preds = %24
  %88 = load volatile i1, i1* %4
  %89 = select i1 %88, i32 1600456680, i32 909915301
  store i32 %89, i32* %23
  br label %314

; <label>:90:                                     ; preds = %24
  %91 = load i32, i32* @x.627
  %92 = load i32, i32* @y.628
  %93 = add i32 %91, 511587981
  %94 = sub i32 %93, 1
  %95 = sub i32 %94, 511587981
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = xor i1 %99, true
  %102 = xor i1 %100, true
  %103 = xor i1 false, true
  %104 = and i1 %101, false
  %105 = and i1 %99, %103
  %106 = and i1 %102, false
  %107 = and i1 %100, %103
  %108 = or i1 %104, %105
  %109 = or i1 %106, %107
  %110 = xor i1 %108, %109
  %111 = or i1 %101, %102
  %112 = xor i1 %111, true
  %113 = or i1 false, %103
  %114 = and i1 %112, %113
  %115 = or i1 %110, %114
  %116 = or i1 %99, %100
  %117 = select i1 %115, i32 -1835107715, i32 971836266
  store i32 %117, i32* %23
  br label %314

; <label>:118:                                    ; preds = %24
  %119 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %120 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %119, i32 0, i32 2
  %121 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %120, i32 0, i32 0
  %122 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %121, align 8
  %123 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %124 = bitcast %"struct.std::__detail::_Hash_node"* %123 to %"struct.std::__detail::_Hash_node_base"*
  %125 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %124, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %122, %"struct.std::__detail::_Hash_node_base"** %125, align 8
  %126 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %127 = bitcast %"struct.std::__detail::_Hash_node"* %126 to %"struct.std::__detail::_Hash_node_base"*
  %128 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %129 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %128, i32 0, i32 2
  %130 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %129, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %127, %"struct.std::__detail::_Hash_node_base"** %130, align 8
  %131 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %132 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %131, i32 0, i32 2
  %133 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %9, align 8
  %134 = load i64, i64* %13, align 8
  %135 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %133, i64 %134
  store %"struct.std::__detail::_Hash_node_base"* %132, %"struct.std::__detail::_Hash_node_base"** %135, align 8
  %136 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %137 = bitcast %"struct.std::__detail::_Hash_node"* %136 to %"struct.std::__detail::_Hash_node_base"*
  %138 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %137, i32 0, i32 0
  %139 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %138, align 8
  %140 = icmp ne %"struct.std::__detail::_Hash_node_base"* %139, null
  store i1 %140, i1* %3
  %141 = load i32, i32* @x.627
  %142 = load i32, i32* @y.628
  %143 = sub i32 0, 1
  %144 = add i32 %141, %143
  %145 = sub i32 %141, 1
  %146 = mul i32 %141, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %142, 10
  %150 = xor i1 %148, true
  %151 = xor i1 %149, true
  %152 = xor i1 true, true
  %153 = and i1 %150, true
  %154 = and i1 %148, %152
  %155 = and i1 %151, true
  %156 = and i1 %149, %152
  %157 = or i1 %153, %154
  %158 = or i1 %155, %156
  %159 = xor i1 %157, %158
  %160 = or i1 %150, %151
  %161 = xor i1 %160, true
  %162 = or i1 true, %152
  %163 = and i1 %161, %162
  %164 = or i1 %159, %163
  %165 = or i1 %148, %149
  %166 = select i1 %164, i32 1858655746, i32 971836266
  store i32 %166, i32* %23
  br label %314

; <label>:167:                                    ; preds = %24
  %168 = load volatile i1, i1* %3
  %169 = select i1 %168, i32 -1644582345, i32 -864737199
  store i32 %169, i32* %23
  br label %314

; <label>:170:                                    ; preds = %24
  %171 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %172 = bitcast %"struct.std::__detail::_Hash_node"* %171 to %"struct.std::__detail::_Hash_node_base"*
  %173 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %9, align 8
  %174 = load i64, i64* %11, align 8
  %175 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %173, i64 %174
  store %"struct.std::__detail::_Hash_node_base"* %172, %"struct.std::__detail::_Hash_node_base"** %175, align 8
  store i32 -864737199, i32* %23
  br label %314

; <label>:176:                                    ; preds = %24
  %177 = load i64, i64* %13, align 8
  store i64 %177, i64* %11, align 8
  store i32 477343004, i32* %23
  br label %314

; <label>:178:                                    ; preds = %24
  %179 = load i32, i32* @x.627
  %180 = load i32, i32* @y.628
  %181 = add i32 %179, -1511320262
  %182 = sub i32 %181, 1
  %183 = sub i32 %182, -1511320262
  %184 = sub i32 %179, 1
  %185 = mul i32 %179, %183
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %180, 10
  %189 = xor i1 %187, true
  %190 = xor i1 %188, true
  %191 = xor i1 true, true
  %192 = and i1 %189, true
  %193 = and i1 %187, %191
  %194 = and i1 %190, true
  %195 = and i1 %188, %191
  %196 = or i1 %192, %193
  %197 = or i1 %194, %195
  %198 = xor i1 %196, %197
  %199 = or i1 %189, %190
  %200 = xor i1 %199, true
  %201 = or i1 true, %191
  %202 = and i1 %200, %201
  %203 = or i1 %198, %202
  %204 = or i1 %187, %188
  %205 = select i1 %203, i32 203638067, i32 -969266990
  store i32 %205, i32* %23
  br label %314

; <label>:206:                                    ; preds = %24
  %207 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %9, align 8
  %208 = load i64, i64* %13, align 8
  %209 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %207, i64 %208
  %210 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %209, align 8
  %211 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %210, i32 0, i32 0
  %212 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %211, align 8
  %213 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %214 = bitcast %"struct.std::__detail::_Hash_node"* %213 to %"struct.std::__detail::_Hash_node_base"*
  %215 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %214, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %212, %"struct.std::__detail::_Hash_node_base"** %215, align 8
  %216 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %217 = bitcast %"struct.std::__detail::_Hash_node"* %216 to %"struct.std::__detail::_Hash_node_base"*
  %218 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %9, align 8
  %219 = load i64, i64* %13, align 8
  %220 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %218, i64 %219
  %221 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %220, align 8
  %222 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %221, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %217, %"struct.std::__detail::_Hash_node_base"** %222, align 8
  %223 = load i32, i32* @x.627
  %224 = load i32, i32* @y.628
  %225 = add i32 %223, 1462762301
  %226 = sub i32 %225, 1
  %227 = sub i32 %226, 1462762301
  %228 = sub i32 %223, 1
  %229 = mul i32 %223, %227
  %230 = urem i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %224, 10
  %233 = xor i1 %231, true
  %234 = xor i1 %232, true
  %235 = xor i1 true, true
  %236 = and i1 %233, true
  %237 = and i1 %231, %235
  %238 = and i1 %234, true
  %239 = and i1 %232, %235
  %240 = or i1 %236, %237
  %241 = or i1 %238, %239
  %242 = xor i1 %240, %241
  %243 = or i1 %233, %234
  %244 = xor i1 %243, true
  %245 = or i1 true, %235
  %246 = and i1 %244, %245
  %247 = or i1 %242, %246
  %248 = or i1 %231, %232
  %249 = select i1 %247, i32 737412491, i32 -969266990
  store i32 %249, i32* %23
  br label %314

; <label>:250:                                    ; preds = %24
  store i32 477343004, i32* %23
  br label %314

; <label>:251:                                    ; preds = %24
  %252 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %12, align 8
  store %"struct.std::__detail::_Hash_node"* %252, %"struct.std::__detail::_Hash_node"** %10, align 8
  store i32 -401602556, i32* %23
  br label %314

; <label>:253:                                    ; preds = %24
  %254 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  call void @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_deallocate_bucketsEv(%"class.std::_Hashtable"* %254)
  %255 = load i64, i64* %8, align 8
  %256 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %257 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %256, i32 0, i32 1
  store i64 %255, i64* %257, align 8
  %258 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %9, align 8
  %259 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %260 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %259, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"** %258, %"struct.std::__detail::_Hash_node_base"*** %260, align 8
  ret void

; <label>:261:                                    ; preds = %24
  %262 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %263 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeISt4pairIKixELb0EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %262) #3
  store %"struct.std::__detail::_Hash_node"* %263, %"struct.std::__detail::_Hash_node"** %12, align 8
  %264 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %265 = bitcast %"class.std::_Hashtable"* %264 to %"struct.std::__detail::_Hash_code_base"*
  %266 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %267 = load i64, i64* %8, align 8
  %268 = call i64 @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE15_M_bucket_indexEPKNS_10_Hash_nodeIS3_Lb0EEEm(%"struct.std::__detail::_Hash_code_base"* %265, %"struct.std::__detail::_Hash_node"* %266, i64 %267) #3
  store i64 %268, i64* %13, align 8
  %269 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %9, align 8
  %270 = load i64, i64* %13, align 8
  %271 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %269, i64 %270
  %272 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %271, align 8
  %273 = icmp ne %"struct.std::__detail::_Hash_node_base"* %272, null
  store i32 1142018001, i32* %23
  br label %314

; <label>:274:                                    ; preds = %24
  %275 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %276 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %275, i32 0, i32 2
  %277 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %276, i32 0, i32 0
  %278 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %277, align 8
  %279 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %280 = bitcast %"struct.std::__detail::_Hash_node"* %279 to %"struct.std::__detail::_Hash_node_base"*
  %281 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %280, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %278, %"struct.std::__detail::_Hash_node_base"** %281, align 8
  %282 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %283 = bitcast %"struct.std::__detail::_Hash_node"* %282 to %"struct.std::__detail::_Hash_node_base"*
  %284 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %285 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %284, i32 0, i32 2
  %286 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %285, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %283, %"struct.std::__detail::_Hash_node_base"** %286, align 8
  %287 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %288 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %287, i32 0, i32 2
  %289 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %9, align 8
  %290 = load i64, i64* %13, align 8
  %291 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %289, i64 %290
  store %"struct.std::__detail::_Hash_node_base"* %288, %"struct.std::__detail::_Hash_node_base"** %291, align 8
  %292 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %293 = bitcast %"struct.std::__detail::_Hash_node"* %292 to %"struct.std::__detail::_Hash_node_base"*
  %294 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %293, i32 0, i32 0
  %295 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %294, align 8
  %296 = icmp ne %"struct.std::__detail::_Hash_node_base"* %295, null
  store i32 -1835107715, i32* %23
  br label %314

; <label>:297:                                    ; preds = %24
  %298 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %9, align 8
  %299 = load i64, i64* %13, align 8
  %300 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %298, i64 %299
  %301 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %300, align 8
  %302 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %301, i32 0, i32 0
  %303 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %302, align 8
  %304 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %305 = bitcast %"struct.std::__detail::_Hash_node"* %304 to %"struct.std::__detail::_Hash_node_base"*
  %306 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %305, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %303, %"struct.std::__detail::_Hash_node_base"** %306, align 8
  %307 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %308 = bitcast %"struct.std::__detail::_Hash_node"* %307 to %"struct.std::__detail::_Hash_node_base"*
  %309 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %9, align 8
  %310 = load i64, i64* %13, align 8
  %311 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %309, i64 %310
  %312 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %311, align 8
  %313 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %312, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %308, %"struct.std::__detail::_Hash_node_base"** %313, align 8
  store i32 203638067, i32* %23
  br label %314

; <label>:314:                                    ; preds = %297, %274, %261, %251, %250, %206, %178, %176, %170, %167, %118, %90, %87, %59, %31, %27, %26
  br label %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_10_Select1stELb1EE6_S_getERS2_(%"struct.std::__detail::_Hashtable_ebo_helper"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Select1st"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.629
  %6 = load i32, i32* @y.630
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -958334070, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %63
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -958334070, label %18
    i32 1519385842, label %26
    i32 -237160253, label %57
    i32 2087225452, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %63

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1519385842, i32 2087225452
  store i32 %25, i32* %14
  br label %63

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::__detail::_Hashtable_ebo_helper"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper"* %0, %"struct.std::__detail::_Hashtable_ebo_helper"** %27, align 8
  %28 = load %"struct.std::__detail::_Hashtable_ebo_helper"*, %"struct.std::__detail::_Hashtable_ebo_helper"** %27, align 8
  %29 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper"* %28 to %"struct.std::__detail::_Select1st"*
  store %"struct.std::__detail::_Select1st"* %29, %"struct.std::__detail::_Select1st"** %2
  %30 = load i32, i32* @x.629
  %31 = load i32, i32* @y.630
  %32 = sub i32 %30, 1426567441
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 1426567441
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -237160253, i32 2087225452
  store i32 %56, i32* %14
  br label %63

; <label>:57:                                     ; preds = %15
  %58 = load volatile %"struct.std::__detail::_Select1st"*, %"struct.std::__detail::_Select1st"** %2
  ret %"struct.std::__detail::_Select1st"* %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"struct.std::__detail::_Hashtable_ebo_helper"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper"* %0, %"struct.std::__detail::_Hashtable_ebo_helper"** %60, align 8
  %61 = load %"struct.std::__detail::_Hashtable_ebo_helper"*, %"struct.std::__detail::_Hashtable_ebo_helper"** %60, align 8
  %62 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper"* %61 to %"struct.std::__detail::_Select1st"*
  store i32 1519385842, i32* %14
  br label %63

; <label>:63:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8__detail9_Map_baseIiSt4pairIKixESaIS3_ENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb0ELb0ELb1EEELb1EEixERS2_(%"struct.std::__detail::_Map_base"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Hash_node"*
  %4 = alloca i64*, align 8
  %5 = alloca %"struct.std::__detail::_Map_base"*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.std::_Hashtable"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %11 = alloca %"class.std::tuple.24", align 8
  %12 = alloca %"class.std::tuple.21", align 1
  %13 = alloca %"struct.std::__detail::_Node_iterator", align 8
  store %"struct.std::__detail::_Map_base"* %0, %"struct.std::__detail::_Map_base"** %5, align 8
  store i32* %1, i32** %6, align 8
  %14 = load %"struct.std::__detail::_Map_base"*, %"struct.std::__detail::_Map_base"** %5, align 8
  %15 = bitcast %"struct.std::__detail::_Map_base"* %14 to %"class.std::_Hashtable"*
  store %"class.std::_Hashtable"* %15, %"class.std::_Hashtable"** %7, align 8
  %16 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %7, align 8
  %17 = bitcast %"class.std::_Hashtable"* %16 to %"struct.std::__detail::_Hash_code_base"*
  %18 = load i32*, i32** %6, align 8
  %19 = call i64 @_ZNKSt8__detail15_Hash_code_baseIiSt4pairIKixENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE12_M_hash_codeERS2_(%"struct.std::__detail::_Hash_code_base"* %17, i32* dereferenceable(4) %18)
  store i64 %19, i64* %8, align 8
  %20 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %7, align 8
  %21 = load i32*, i32** %6, align 8
  %22 = load i64, i64* %8, align 8
  %23 = call i64 @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexERS1_m(%"class.std::_Hashtable"* %20, i32* dereferenceable(4) %21, i64 %22)
  store i64 %23, i64* %9, align 8
  %24 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %7, align 8
  %25 = load i64, i64* %9, align 8
  %26 = load i32*, i32** %6, align 8
  %27 = load i64, i64* %8, align 8
  %28 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE12_M_find_nodeEmRS1_m(%"class.std::_Hashtable"* %24, i64 %25, i32* dereferenceable(4) %26, i64 %27)
  store %"struct.std::__detail::_Hash_node"* %28, %"struct.std::__detail::_Hash_node"** %10, align 8
  %29 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  store %"struct.std::__detail::_Hash_node"* %29, %"struct.std::__detail::_Hash_node"** %3
  %30 = alloca i32
  store i32 -1140727975, i32* %30
  br label %31

; <label>:31:                                     ; preds = %2, %108
  %32 = load i32, i32* %30
  switch i32 %32, label %33 [
    i32 -1140727975, label %34
    i32 1712838598, label %38
    i32 848405574, label %52
    i32 2011837469, label %68
    i32 -2054490071, label %100
    i32 -1544548490, label %101
    i32 -628917679, label %103
  ]

; <label>:33:                                     ; preds = %31
  br label %108

; <label>:34:                                     ; preds = %31
  %35 = load volatile %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %3
  %36 = icmp ne %"struct.std::__detail::_Hash_node"* %35, null
  %37 = select i1 %36, i32 848405574, i32 1712838598
  store i32 %37, i32* %30
  br label %108

; <label>:38:                                     ; preds = %31
  %39 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %7, align 8
  %40 = bitcast %"class.std::_Hashtable"* %39 to %"struct.std::__detail::_Hashtable_alloc"*
  %41 = load i32*, i32** %6, align 8
  call void @_ZNSt5tupleIJRKiEEC2ES1_(%"class.std::tuple.24"* %11, i32* dereferenceable(4) %41)
  %42 = call %"struct.std::__detail::_Hash_node"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS3_EESC_IJEEEEEPS5_DpOT_(%"struct.std::__detail::_Hashtable_alloc"* %40, %"struct.std::piecewise_construct_t"* dereferenceable(1) @_ZStL19piecewise_construct, %"class.std::tuple.24"* dereferenceable(8) %11, %"class.std::tuple.21"* dereferenceable(1) %12)
  store %"struct.std::__detail::_Hash_node"* %42, %"struct.std::__detail::_Hash_node"** %10, align 8
  %43 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %7, align 8
  %44 = load i64, i64* %9, align 8
  %45 = load i64, i64* %8, align 8
  %46 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %47 = call %"struct.std::__detail::_Hash_node"* @_ZNSt10_HashtableIiSt4pairIKixESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNS4_10_Hash_nodeIS2_Lb0EEE(%"class.std::_Hashtable"* %43, i64 %44, i64 %45, %"struct.std::__detail::_Hash_node"* %46)
  %48 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %13, i32 0, i32 0
  %49 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %48, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %47, %"struct.std::__detail::_Hash_node"** %49, align 8
  %50 = call %"struct.std::pair"* @_ZNKSt8__detail14_Node_iteratorISt4pairIKixELb0ELb0EEptEv(%"struct.std::__detail::_Node_iterator"* %13) #3
  %51 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %50, i32 0, i32 1
  store i64* %51, i64** %4, align 8
  store i32 -1544548490, i32* %30
  br label %108

; <label>:52:                                     ; preds = %31
  %53 = load i32, i32* @x.631
  %54 = load i32, i32* @y.632
  %55 = add i32 %53, -326170229
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, -326170229
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 2011837469, i32 -628917679
  store i32 %67, i32* %30
  br label %108

; <label>:68:                                     ; preds = %31
  %69 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %70 = bitcast %"struct.std::__detail::_Hash_node"* %69 to %"struct.std::__detail::_Hash_node_value_base"*
  %71 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base"* %70) #3
  %72 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %71, i32 0, i32 1
  store i64* %72, i64** %4, align 8
  %73 = load i32, i32* @x.631
  %74 = load i32, i32* @y.632
  %75 = add i32 %73, -143981561
  %76 = sub i32 %75, 1
  %77 = sub i32 %76, -143981561
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = xor i1 %81, true
  %84 = xor i1 %82, true
  %85 = xor i1 true, true
  %86 = and i1 %83, true
  %87 = and i1 %81, %85
  %88 = and i1 %84, true
  %89 = and i1 %82, %85
  %90 = or i1 %86, %87
  %91 = or i1 %88, %89
  %92 = xor i1 %90, %91
  %93 = or i1 %83, %84
  %94 = xor i1 %93, true
  %95 = or i1 true, %85
  %96 = and i1 %94, %95
  %97 = or i1 %92, %96
  %98 = or i1 %81, %82
  %99 = select i1 %97, i32 -2054490071, i32 -628917679
  store i32 %99, i32* %30
  br label %108

; <label>:100:                                    ; preds = %31
  store i32 -1544548490, i32* %30
  br label %108

; <label>:101:                                    ; preds = %31
  %102 = load i64*, i64** %4, align 8
  ret i64* %102

; <label>:103:                                    ; preds = %31
  %104 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %105 = bitcast %"struct.std::__detail::_Hash_node"* %104 to %"struct.std::__detail::_Hash_node_value_base"*
  %106 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base"* %105) #3
  %107 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %106, i32 0, i32 1
  store i64* %107, i64** %4, align 8
  store i32 2011837469, i32* %30
  br label %108

; <label>:108:                                    ; preds = %103, %100, %68, %52, %38, %34, %33
  br label %31
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS3_EESC_IJEEEEEPS5_DpOT_(%"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.24"* dereferenceable(8), %"class.std::tuple.21"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  %6 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %7 = alloca %"class.std::tuple.24"*, align 8
  %8 = alloca %"class.std::tuple.21"*, align 8
  %9 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %10 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %11 = alloca %"class.std::allocator.12", align 1
  %12 = alloca i8*
  %13 = alloca i32
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %5, align 8
  store %"struct.std::piecewise_construct_t"* %1, %"struct.std::piecewise_construct_t"** %6, align 8
  store %"class.std::tuple.24"* %2, %"class.std::tuple.24"** %7, align 8
  store %"class.std::tuple.21"* %3, %"class.std::tuple.21"** %8, align 8
  %14 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %5, align 8
  %15 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %14)
  %16 = call %"struct.std::__detail::_Hash_node"* @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE8allocateERS6_m(%"class.std::allocator.9"* dereferenceable(1) %15, i64 1)
  store %"struct.std::__detail::_Hash_node"* %16, %"struct.std::__detail::_Hash_node"** %9, align 8
  %17 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  %18 = call %"struct.std::__detail::_Hash_node"* @_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEPT_RS6_(%"struct.std::__detail::_Hash_node"* dereferenceable(24) %17) #3
  store %"struct.std::__detail::_Hash_node"* %18, %"struct.std::__detail::_Hash_node"** %10, align 8
  %19 = invoke dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %14)
          to label %20 unwind label %88

; <label>:20:                                     ; preds = %4
  call void @_ZNSaISt4pairIKixEEC2INSt8__detail10_Hash_nodeIS1_Lb0EEEEERKSaIT_E(%"class.std::allocator.12"* %11, %"class.std::allocator.9"* dereferenceable(1) %19) #3
  %21 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %22 = bitcast %"struct.std::__detail::_Hash_node"* %21 to i8*
  %23 = bitcast i8* %22 to %"struct.std::__detail::_Hash_node"*
  call void @_ZNSt8__detail10_Hash_nodeISt4pairIKixELb0EEC2Ev(%"struct.std::__detail::_Hash_node"* %23) #3
  %24 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  %25 = bitcast %"struct.std::__detail::_Hash_node"* %24 to %"struct.std::__detail::_Hash_node_value_base"*
  %26 = call %"struct.std::pair"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKixEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"* %25) #3
  %27 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %6, align 8
  %28 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %27) #3
  %29 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %7, align 8
  %30 = call dereferenceable(8) %"class.std::tuple.24"* @_ZSt7forwardISt5tupleIJRKiEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.24"* dereferenceable(8) %29) #3
  %31 = load %"class.std::tuple.21"*, %"class.std::tuple.21"** %8, align 8
  %32 = call dereferenceable(1) %"class.std::tuple.21"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.21"* dereferenceable(1) %31) #3
  invoke void @_ZNSt16allocator_traitsISaISt4pairIKixEEE9constructIS2_JRKSt21piecewise_construct_tSt5tupleIJRS1_EES9_IJEEEEEvRS3_PT_DpOT0_(%"class.std::allocator.12"* dereferenceable(1) %11, %"struct.std::pair"* %26, %"struct.std::piecewise_construct_t"* dereferenceable(1) %28, %"class.std::tuple.24"* dereferenceable(8) %30, %"class.std::tuple.21"* dereferenceable(1) %32)
          to label %33 unwind label %92

; <label>:33:                                     ; preds = %20
  %34 = load i32, i32* @x.633
  %35 = load i32, i32* @y.634
  %36 = sub i32 %34, 217511596
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 217511596
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  br i1 %58, label %60, label %160

; <label>:60:                                     ; preds = %33, %160
  %61 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  call void @_ZNSaISt4pairIKixEED2Ev(%"class.std::allocator.12"* %11) #3
  %62 = load i32, i32* @x.633
  %63 = load i32, i32* @y.634
  %64 = sub i32 0, 1
  %65 = add i32 %62, %64
  %66 = sub i32 %62, 1
  %67 = mul i32 %62, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %63, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 false, true
  %74 = and i1 %71, false
  %75 = and i1 %69, %73
  %76 = and i1 %72, false
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 false, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  br i1 %85, label %87, label %160

; <label>:87:                                     ; preds = %60
  ret %"struct.std::__detail::_Hash_node"* %61

; <label>:88:                                     ; preds = %4
  %89 = landingpad { i8*, i32 }
          catch i8* null
  %90 = extractvalue { i8*, i32 } %89, 0
  store i8* %90, i8** %12, align 8
  %91 = extractvalue { i8*, i32 } %89, 1
  store i32 %91, i32* %13, align 4
  br label %96

; <label>:92:                                     ; preds = %20
  %93 = landingpad { i8*, i32 }
          catch i8* null
  %94 = extractvalue { i8*, i32 } %93, 0
  store i8* %94, i8** %12, align 8
  %95 = extractvalue { i8*, i32 } %93, 1
  store i32 %95, i32* %13, align 4
  call void @_ZNSaISt4pairIKixEED2Ev(%"class.std::allocator.12"* %11) #3
  br label %96

; <label>:96:                                     ; preds = %92, %88
  %97 = load i8*, i8** %12, align 8
  %98 = call i8* @__cxa_begin_catch(i8* %97) #3
  %99 = invoke dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKixELb0EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %14)
          to label %100 unwind label %145

; <label>:100:                                    ; preds = %96
  %101 = load i32, i32* @x.633
  %102 = load i32, i32* @y.634
  %103 = sub i32 %101, -1409661145
  %104 = sub i32 %103, 1
  %105 = add i32 %104, -1409661145
  %106 = sub i32 %101, 1
  %107 = mul i32 %101, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %102, 10
  %111 = and i1 %109, %110
  %112 = xor i1 %109, %110
  %113 = or i1 %111, %112
  %114 = or i1 %109, %110
  br i1 %113, label %115, label %162

; <label>:115:                                    ; preds = %100, %162
  %116 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  %117 = load i32, i32* @x.633
  %118 = load i32, i32* @y.634
  %119 = add i32 %117, -282415854
  %120 = sub i32 %119, 1
  %121 = sub i32 %120, -282415854
  %122 = sub i32 %117, 1
  %123 = mul i32 %117, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %118, 10
  %127 = xor i1 %125, true
  %128 = xor i1 %126, true
  %129 = xor i1 true, true
  %130 = and i1 %127, true
  %131 = and i1 %125, %129
  %132 = and i1 %128, true
  %133 = and i1 %126, %129
  %134 = or i1 %130, %131
  %135 = or i1 %132, %133
  %136 = xor i1 %134, %135
  %137 = or i1 %127, %128
  %138 = xor i1 %137, true
  %139 = or i1 true, %129
  %140 = and i1 %138, %139
  %141 = or i1 %136, %140
  %142 = or i1 %125, %126
  br i1 %141, label %143, label %162

; <label>:143:                                    ; preds = %115
  invoke void @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKixELb0EEEEE10deallocateERS6_PS5_m(%"class.std::allocator.9"* dereferenceable(1) %99, %"struct.std::__detail::_Hash_node"* %116, i64 1)
          to label %144 unwind label %145

; <label>:144:                                    ; preds = %143
  invoke void @__cxa_rethrow() #12
          to label %159 unwind label %145

; <label>:145:                                    ; preds = %144, %143, %96
  %146 = landingpad { i8*, i32 }
          cleanup
  %147 = extractvalue { i8*, i32 } %146, 0
  store i8* %147, i8** %12, align 8
  %148 = extractvalue { i8*, i32 } %146, 1
  store i32 %148, i32* %13, align 4
  invoke void @__cxa_end_catch()
          to label %149 unwind label %156

; <label>:149:                                    ; preds = %145
  br label %151
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:151:                                    ; preds = %149
  %152 = load i8*, i8** %12, align 8
  %153 = load i32, i32* %13, align 4
  %154 = insertvalue { i8*, i32 } undef, i8* %152, 0
  %155 = insertvalue { i8*, i32 } %154, i32 %153, 1
  resume { i8*, i32 } %155

; <label>:156:                                    ; preds = %145
  %157 = landingpad { i8*, i32 }
          catch i8* null
  %158 = extractvalue { i8*, i32 } %157, 0
  call void @__clang_call_terminate(i8* %158) #11
  unreachable

; <label>:159:                                    ; preds = %144
  unreachable

; <label>:160:                                    ; preds = %60, %33
  %161 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  call void @_ZNSaISt4pairIKixEED2Ev(%"class.std::allocator.12"* %11) #3
  br label %60

; <label>:162:                                    ; preds = %115, %100
  %163 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  br label %115
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5tupleIJRKiEEC2ES1_(%"class.std::tuple.24"*, i32* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.635
  %6 = load i32, i32* @y.636
  %7 = add i32 %5, 112094368
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 112094368
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1218055083, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1218055083, label %19
    i32 -1938689722, label %27
    i32 1335158228, label %59
    i32 1378001134, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1938689722, i32 1378001134
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::tuple.24"*, align 8
  %29 = alloca i32*, align 8
  store %"class.std::tuple.24"* %0, %"class.std::tuple.24"** %28, align 8
  store i32* %1, i32** %29, align 8
  %30 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %28, align 8
  %31 = bitcast %"class.std::tuple.24"* %30 to %"struct.std::_Tuple_impl.25"*
  %32 = load i32*, i32** %29, align 8
  call void @_ZNSt11_Tuple_implILm0EJRKiEEC2ES1_(%"struct.std::_Tuple_impl.25"* %31, i32* dereferenceable(4) %32)
  %33 = load i32, i32* @x.635
  %34 = load i32, i32* @y.636
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 1335158228, i32 1378001134
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  ret void

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::tuple.24"*, align 8
  %62 = alloca i32*, align 8
  store %"class.std::tuple.24"* %0, %"class.std::tuple.24"** %61, align 8
  store i32* %1, i32** %62, align 8
  %63 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %61, align 8
  %64 = bitcast %"class.std::tuple.24"* %63 to %"struct.std::_Tuple_impl.25"*
  %65 = load i32*, i32** %62, align 8
  call void @_ZNSt11_Tuple_implILm0EJRKiEEC2ES1_(%"struct.std::_Tuple_impl.25"* %64, i32* dereferenceable(4) %65)
  store i32 -1938689722, i32* %15
  br label %66

; <label>:66:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIKixEEE9constructIS2_JRKSt21piecewise_construct_tSt5tupleIJRS1_EES9_IJEEEEEvRS3_PT_DpOT0_(%"class.std::allocator.12"* dereferenceable(1), %"struct.std::pair"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.24"* dereferenceable(8), %"class.std::tuple.21"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca %"class.std::allocator.12"*, align 8
  %7 = alloca %"struct.std::pair"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple.24"*, align 8
  %10 = alloca %"class.std::tuple.21"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %6, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple.24"* %3, %"class.std::tuple.24"** %9, align 8
  store %"class.std::tuple.21"* %4, %"class.std::tuple.21"** %10, align 8
  %11 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %6, align 8
  %12 = bitcast %"class.std::allocator.12"* %11 to %"class.__gnu_cxx::new_allocator.13"*
  %13 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %14 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %15 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %14) #3
  %16 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %9, align 8
  %17 = call dereferenceable(8) %"class.std::tuple.24"* @_ZSt7forwardISt5tupleIJRKiEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.24"* dereferenceable(8) %16) #3
  %18 = load %"class.std::tuple.21"*, %"class.std::tuple.21"** %10, align 8
  %19 = call dereferenceable(1) %"class.std::tuple.21"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.21"* dereferenceable(1) %18) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIKixEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJRS2_EES9_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.13"* %12, %"struct.std::pair"* %13, %"struct.std::piecewise_construct_t"* dereferenceable(1) %15, %"class.std::tuple.24"* dereferenceable(8) %17, %"class.std::tuple.21"* dereferenceable(1) %19)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::tuple.24"* @_ZSt7forwardISt5tupleIJRKiEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.24"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"class.std::tuple.24"*, align 8
  store %"class.std::tuple.24"* %0, %"class.std::tuple.24"** %2, align 8
  %3 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %2, align 8
  ret %"class.std::tuple.24"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIKixEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJRS2_EES9_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.13"*, %"struct.std::pair"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.24"* dereferenceable(8), %"class.std::tuple.21"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  %7 = alloca %"struct.std::pair"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple.24"*, align 8
  %10 = alloca %"class.std::tuple.21"*, align 8
  %11 = alloca %"struct.std::piecewise_construct_t", align 1
  %12 = alloca %"class.std::tuple.24", align 8
  %13 = alloca %"class.std::tuple.21", align 1
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %6, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple.24"* %3, %"class.std::tuple.24"** %9, align 8
  store %"class.std::tuple.21"* %4, %"class.std::tuple.21"** %10, align 8
  %14 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %6, align 8
  %15 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %16 = bitcast %"struct.std::pair"* %15 to i8*
  %17 = bitcast i8* %16 to %"struct.std::pair"*
  %18 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %19 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %18) #3
  %20 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %9, align 8
  %21 = call dereferenceable(8) %"class.std::tuple.24"* @_ZSt7forwardISt5tupleIJRKiEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.24"* dereferenceable(8) %20) #3
  call void @_ZNSt5tupleIJRKiEEC2EOS2_(%"class.std::tuple.24"* %12, %"class.std::tuple.24"* dereferenceable(8) %21) #3
  %22 = load %"class.std::tuple.21"*, %"class.std::tuple.21"** %10, align 8
  %23 = call dereferenceable(1) %"class.std::tuple.21"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.21"* dereferenceable(1) %22) #3
  %24 = getelementptr inbounds %"class.std::tuple.24", %"class.std::tuple.24"* %12, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Tuple_impl.25", %"struct.std::_Tuple_impl.25"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Head_base.26", %"struct.std::_Head_base.26"* %25, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  call void @_ZNSt4pairIKixEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE(%"struct.std::pair"* %17, i32* %27)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5tupleIJRKiEEC2EOS2_(%"class.std::tuple.24"*, %"class.std::tuple.24"* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::tuple.24"*, align 8
  %4 = alloca %"class.std::tuple.24"*, align 8
  store %"class.std::tuple.24"* %0, %"class.std::tuple.24"** %3, align 8
  store %"class.std::tuple.24"* %1, %"class.std::tuple.24"** %4, align 8
  %5 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %3, align 8
  %6 = bitcast %"class.std::tuple.24"* %5 to %"struct.std::_Tuple_impl.25"*
  %7 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %4, align 8
  %8 = bitcast %"class.std::tuple.24"* %7 to %"struct.std::_Tuple_impl.25"*
  call void @_ZNSt11_Tuple_implILm0EJRKiEEC2EOS2_(%"struct.std::_Tuple_impl.25"* %6, %"struct.std::_Tuple_impl.25"* dereferenceable(8) %8) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt4pairIKixEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE(%"struct.std::pair"*, i32*) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.645
  %6 = load i32, i32* @y.646
  %7 = add i32 %5, -451500576
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -451500576
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1613746551, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1613746551, label %19
    i32 1943774587, label %27
    i32 -423682838, label %65
    i32 -694534397, label %66
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1943774587, i32 -694534397
  store i32 %26, i32* %15
  br label %77

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::piecewise_construct_t", align 1
  %29 = alloca %"class.std::tuple.24", align 8
  %30 = alloca %"class.std::tuple.21", align 1
  %31 = alloca %"struct.std::pair"*, align 8
  %32 = alloca %"struct.std::_Index_tuple", align 1
  %33 = alloca %"struct.std::_Index_tuple.22", align 1
  %34 = getelementptr inbounds %"class.std::tuple.24", %"class.std::tuple.24"* %29, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Tuple_impl.25", %"struct.std::_Tuple_impl.25"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Head_base.26", %"struct.std::_Head_base.26"* %35, i32 0, i32 0
  store i32* %1, i32** %36, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %31, align 8
  %37 = load %"struct.std::pair"*, %"struct.std::pair"** %31, align 8
  call void @_ZNSt4pairIKixEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE(%"struct.std::pair"* %37, %"class.std::tuple.24"* dereferenceable(8) %29, %"class.std::tuple.21"* dereferenceable(1) %30)
  %38 = load i32, i32* @x.645
  %39 = load i32, i32* @y.646
  %40 = sub i32 %38, 729644157
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 729644157
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 -423682838, i32 -694534397
  store i32 %64, i32* %15
  br label %77

; <label>:65:                                     ; preds = %16
  ret void

; <label>:66:                                     ; preds = %16
  %67 = alloca %"struct.std::piecewise_construct_t", align 1
  %68 = alloca %"class.std::tuple.24", align 8
  %69 = alloca %"class.std::tuple.21", align 1
  %70 = alloca %"struct.std::pair"*, align 8
  %71 = alloca %"struct.std::_Index_tuple", align 1
  %72 = alloca %"struct.std::_Index_tuple.22", align 1
  %73 = getelementptr inbounds %"class.std::tuple.24", %"class.std::tuple.24"* %68, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::_Tuple_impl.25", %"struct.std::_Tuple_impl.25"* %73, i32 0, i32 0
  %75 = getelementptr inbounds %"struct.std::_Head_base.26", %"struct.std::_Head_base.26"* %74, i32 0, i32 0
  store i32* %1, i32** %75, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %70, align 8
  %76 = load %"struct.std::pair"*, %"struct.std::pair"** %70, align 8
  call void @_ZNSt4pairIKixEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE(%"struct.std::pair"* %76, %"class.std::tuple.24"* dereferenceable(8) %68, %"class.std::tuple.21"* dereferenceable(1) %69)
  store i32 1943774587, i32* %15
  br label %77

; <label>:77:                                     ; preds = %66, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJRKiEEC2EOS2_(%"struct.std::_Tuple_impl.25"*, %"struct.std::_Tuple_impl.25"* dereferenceable(8)) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Tuple_impl.25"*, align 8
  %4 = alloca %"struct.std::_Tuple_impl.25"*, align 8
  store %"struct.std::_Tuple_impl.25"* %0, %"struct.std::_Tuple_impl.25"** %3, align 8
  store %"struct.std::_Tuple_impl.25"* %1, %"struct.std::_Tuple_impl.25"** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.25"*, %"struct.std::_Tuple_impl.25"** %3, align 8
  %6 = bitcast %"struct.std::_Tuple_impl.25"* %5 to %"struct.std::_Head_base.26"*
  %7 = load %"struct.std::_Tuple_impl.25"*, %"struct.std::_Tuple_impl.25"** %4, align 8
  %8 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm0EJRKiEE7_M_headERS2_(%"struct.std::_Tuple_impl.25"* dereferenceable(8) %7) #3
  %9 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %8) #3
  invoke void @_ZNSt10_Head_baseILm0ERKiLb0EEC2ES1_(%"struct.std::_Head_base.26"* %6, i32* dereferenceable(4) %9)
          to label %10 unwind label %52

; <label>:10:                                     ; preds = %2
  %11 = load i32, i32* @x.647
  %12 = load i32, i32* @y.648
  %13 = add i32 %11, 221532002
  %14 = sub i32 %13, 1
  %15 = sub i32 %14, 221532002
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %12, 10
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  br i1 %23, label %25, label %55

; <label>:25:                                     ; preds = %10, %55
  %26 = load i32, i32* @x.647
  %27 = load i32, i32* @y.648
  %28 = sub i32 0, 1
  %29 = add i32 %26, %28
  %30 = sub i32 %26, 1
  %31 = mul i32 %26, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %27, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 false, true
  %38 = and i1 %35, false
  %39 = and i1 %33, %37
  %40 = and i1 %36, false
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 false, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  br i1 %49, label %51, label %55

; <label>:51:                                     ; preds = %25
  ret void

; <label>:52:                                     ; preds = %2
  %53 = landingpad { i8*, i32 }
          catch i8* null
  %54 = extractvalue { i8*, i32 } %53, 0
  call void @__clang_call_terminate(i8* %54) #11
  unreachable

; <label>:55:                                     ; preds = %25, %10
  br label %25
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4)) #4 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.649
  %6 = load i32, i32* @y.650
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1410029297, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1410029297, label %18
    i32 1818060687, label %38
    i32 273866869, label %68
    i32 1730300344, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1818060687, i32 1730300344
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca i32*, align 8
  store i32* %0, i32** %39, align 8
  %40 = load i32*, i32** %39, align 8
  store i32* %40, i32** %2
  %41 = load i32, i32* @x.649
  %42 = load i32, i32* @y.650
  %43 = add i32 %41, 1148748179
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 1148748179
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 273866869, i32 1730300344
  store i32 %67, i32* %14
  br label %73

; <label>:68:                                     ; preds = %15
  %69 = load volatile i32*, i32** %2
  ret i32* %69

; <label>:70:                                     ; preds = %15
  %71 = alloca i32*, align 8
  store i32* %0, i32** %71, align 8
  %72 = load i32*, i32** %71, align 8
  store i32 1818060687, i32* %14
  br label %73

; <label>:73:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt11_Tuple_implILm0EJRKiEE7_M_headERS2_(%"struct.std::_Tuple_impl.25"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.25"*, align 8
  store %"struct.std::_Tuple_impl.25"* %0, %"struct.std::_Tuple_impl.25"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.25"*, %"struct.std::_Tuple_impl.25"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.25"* %3 to %"struct.std::_Head_base.26"*
  %5 = call dereferenceable(4) i32* @_ZNSt10_Head_baseILm0ERKiLb0EE7_M_headERS2_(%"struct.std::_Head_base.26"* dereferenceable(8) %4) #3
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm0ERKiLb0EEC2ES1_(%"struct.std::_Head_base.26"*, i32* dereferenceable(4)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Head_base.26"*, align 8
  %4 = alloca i32*, align 8
  store %"struct.std::_Head_base.26"* %0, %"struct.std::_Head_base.26"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"struct.std::_Head_base.26"*, %"struct.std::_Head_base.26"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Head_base.26", %"struct.std::_Head_base.26"* %5, i32 0, i32 0
  %7 = load i32*, i32** %4, align 8
  store i32* %7, i32** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt10_Head_baseILm0ERKiLb0EE7_M_headERS2_(%"struct.std::_Head_base.26"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Head_base.26"*, align 8
  store %"struct.std::_Head_base.26"* %0, %"struct.std::_Head_base.26"** %2, align 8
  %3 = load %"struct.std::_Head_base.26"*, %"struct.std::_Head_base.26"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Head_base.26", %"struct.std::_Head_base.26"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIKixEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE(%"struct.std::pair"*, %"class.std::tuple.24"* dereferenceable(8), %"class.std::tuple.21"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::_Index_tuple", align 1
  %5 = alloca %"struct.std::_Index_tuple.22", align 1
  %6 = alloca %"struct.std::pair"*, align 8
  %7 = alloca %"class.std::tuple.24"*, align 8
  %8 = alloca %"class.std::tuple.21"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %6, align 8
  store %"class.std::tuple.24"* %1, %"class.std::tuple.24"** %7, align 8
  store %"class.std::tuple.21"* %2, %"class.std::tuple.21"** %8, align 8
  %9 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %10 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %9, i32 0, i32 0
  %11 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %7, align 8
  %12 = call dereferenceable(4) i32* @_ZSt3getILm0EJRKiEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_(%"class.std::tuple.24"* dereferenceable(8) %11) #3
  %13 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %12) #3
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %10, align 8
  %15 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %9, i32 0, i32 1
  store i64 0, i64* %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3getILm0EJRKiEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_(%"class.std::tuple.24"* dereferenceable(8)) #4 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.659
  %6 = load i32, i32* @y.660
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 299713821, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 299713821, label %18
    i32 -1342094749, label %26
    i32 -1672352825, label %58
    i32 -1842001389, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1342094749, i32 -1842001389
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::tuple.24"*, align 8
  store %"class.std::tuple.24"* %0, %"class.std::tuple.24"** %27, align 8
  %28 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %27, align 8
  %29 = bitcast %"class.std::tuple.24"* %28 to %"struct.std::_Tuple_impl.25"*
  %30 = call dereferenceable(4) i32* @_ZSt12__get_helperILm0ERKiJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE(%"struct.std::_Tuple_impl.25"* dereferenceable(8) %29) #3
  store i32* %30, i32** %2
  %31 = load i32, i32* @x.659
  %32 = load i32, i32* @y.660
  %33 = sub i32 %31, -281318526
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -281318526
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -1672352825, i32 -1842001389
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile i32*, i32** %2
  ret i32* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::tuple.24"*, align 8
  store %"class.std::tuple.24"* %0, %"class.std::tuple.24"** %61, align 8
  %62 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %61, align 8
  %63 = bitcast %"class.std::tuple.24"* %62 to %"struct.std::_Tuple_impl.25"*
  %64 = call dereferenceable(4) i32* @_ZSt12__get_helperILm0ERKiJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE(%"struct.std::_Tuple_impl.25"* dereferenceable(8) %63) #3
  store i32 -1342094749, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt12__get_helperILm0ERKiJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE(%"struct.std::_Tuple_impl.25"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Tuple_impl.25"*, align 8
  store %"struct.std::_Tuple_impl.25"* %0, %"struct.std::_Tuple_impl.25"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.25"*, %"struct.std::_Tuple_impl.25"** %2, align 8
  %4 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm0EJRKiEE7_M_headERS2_(%"struct.std::_Tuple_impl.25"* dereferenceable(8) %3) #3
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJRKiEEC2ES1_(%"struct.std::_Tuple_impl.25"*, i32* dereferenceable(4)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Tuple_impl.25"*, align 8
  %4 = alloca i32*, align 8
  store %"struct.std::_Tuple_impl.25"* %0, %"struct.std::_Tuple_impl.25"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.25"*, %"struct.std::_Tuple_impl.25"** %3, align 8
  %6 = bitcast %"struct.std::_Tuple_impl.25"* %5 to %"struct.std::_Head_base.26"*
  %7 = load i32*, i32** %4, align 8
  call void @_ZNSt10_Head_baseILm0ERKiLb0EEC2ES1_(%"struct.std::_Head_base.26"* %6, i32* dereferenceable(4) %7)
  ret void
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s622353348.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind }
attributes #12 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
