; ModuleID = 'Project_CodeNet_C++1400/p02363/s873647597.cpp'
source_filename = "Project_CodeNet_C++1400/p02363/s873647597.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Edge = type { i64, i64, i64 }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl" = type { %"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"* }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl" }
%"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl" = type { %struct.Edge*, %struct.Edge*, %struct.Edge* }
%"class.std::vector.5" = type { %"struct.std::_Vector_base.6" }
%"struct.std::_Vector_base.6" = type { %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl" = type { %"class.std::vector.10"*, %"class.std::vector.10"*, %"class.std::vector.10"* }
%"class.std::vector.10" = type { %"struct.std::_Vector_base.11" }
%"struct.std::_Vector_base.11" = type { %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl" }
%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl" = type { i64*, i64*, i64* }
%"class.std::allocator.12" = type { i8 }
%"class.__gnu_cxx::__normal_iterator" = type { %struct.Edge* }
%"class.std::allocator.7" = type { i8 }
%"class.std::vector.15" = type { %"struct.std::_Vector_base.16" }
%"struct.std::_Vector_base.16" = type { %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl" = type { %"class.std::vector.20"*, %"class.std::vector.20"*, %"class.std::vector.20"* }
%"class.std::vector.20" = type { %"struct.std::_Vector_base.21" }
%"struct.std::_Vector_base.21" = type { %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl" }
%"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl" = type { i64*, i64*, i64* }
%"class.std::allocator.22" = type { i8 }
%"class.std::allocator.17" = type { i8 }
%"class.std::priority_queue" = type <{ %"class.std::deque", %"struct.std::less", [7 x i8] }>
%"class.std::deque" = type { %"class.std::_Deque_base" }
%"class.std::_Deque_base" = type { %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl" }
%"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl" = type { %struct.Edge**, i64, %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator" }
%"struct.std::_Deque_iterator" = type { %struct.Edge*, %struct.Edge*, %struct.Edge*, %struct.Edge** }
%"struct.std::less" = type { i8 }
%"class.__gnu_cxx::new_allocator.13" = type { i8 }
%"class.__gnu_cxx::new_allocator.8" = type { i8 }
%"class.__gnu_cxx::new_allocator.23" = type { i8 }
%"class.__gnu_cxx::new_allocator.18" = type { i8 }
%"class.std::allocator.2" = type { i8 }
%"class.std::allocator" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.25" = type { %"class.std::vector.10"* }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.31" = type { %"class.std::vector.0"* }
%"class.__gnu_cxx::__normal_iterator.33" = type { %"class.std::vector.10"* }
%"class.__gnu_cxx::__normal_iterator.34" = type { i64* }
%"class.__gnu_cxx::new_allocator.3" = type { i8 }
%"class.std::move_iterator" = type { %struct.Edge* }
%"class.__gnu_cxx::__normal_iterator.26" = type { i64* }
%"class.std::allocator.27" = type { i8 }
%"class.__gnu_cxx::new_allocator.28" = type { i8 }
%"struct.__gnu_cxx::__ops::_Iter_comp_iter" = type { %"struct.std::less" }
%"struct.std::integral_constant" = type { i8 }
%"struct.__gnu_cxx::__allocator_always_compares_equal" = type { i8 }
%"struct.__gnu_cxx::__ops::_Iter_comp_val" = type { %"struct.std::less" }
%"struct.std::_Deque_iterator.30" = type { %struct.Edge*, %struct.Edge*, %struct.Edge*, %struct.Edge** }
%"class.__gnu_cxx::__normal_iterator.32" = type { %struct.Edge* }

$_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEixEm = comdat any

$_ZNSt6vectorI4EdgeSaIS0_EE9push_backEOS0_ = comdat any

$_ZN4EdgeC2Emmx = comdat any

$_ZNKSt6vectorIS_I4EdgeSaIS0_EESaIS2_EE4sizeEv = comdat any

$_ZNSaIxEC2Ev = comdat any

$_ZNSt6vectorIxSaIxEEC2EmRKS0_ = comdat any

$_ZNSaIxED2Ev = comdat any

$_ZNSt6vectorI4EdgeSaIS0_EE5beginEv = comdat any

$_ZNSt6vectorI4EdgeSaIS0_EE3endEv = comdat any

$_ZN9__gnu_cxxneIP4EdgeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIP4EdgeSt6vectorIS1_SaIS1_EEEdeEv = comdat any

$_ZNSt6vectorIxSaIxEEixEm = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EEC2Ev = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIP4EdgeSt6vectorIS1_SaIS1_EEEppEv = comdat any

$_ZNSt6vectorIxSaIxEEC2EmRKxRKS0_ = comdat any

$_ZNSaISt6vectorIxSaIxEEEC2Ev = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EEC2EmRKS1_RKS2_ = comdat any

$_ZNSaISt6vectorIxSaIxEEED2Ev = comdat any

$_ZNSt6vectorIxSaIxEED2Ev = comdat any

$_ZNSaImEC2Ev = comdat any

$_ZNSt6vectorImSaImEEC2EmRKmRKS0_ = comdat any

$_ZNSaISt6vectorImSaImEEEC2Ev = comdat any

$_ZNSt6vectorIS_ImSaImEESaIS1_EEC2EmRKS1_RKS2_ = comdat any

$_ZNSaISt6vectorImSaImEEED2Ev = comdat any

$_ZNSt6vectorImSaImEED2Ev = comdat any

$_ZNSaImED2Ev = comdat any

$_ZNSt5dequeI4EdgeSaIS0_EEC2Ev = comdat any

$_ZNSt14priority_queueI4EdgeSt5dequeIS0_SaIS0_EESt4lessIS0_EEC2ERKS5_OS3_ = comdat any

$_ZNSt5dequeI4EdgeSaIS0_EED2Ev = comdat any

$_ZNSt14priority_queueI4EdgeSt5dequeIS0_SaIS0_EESt4lessIS0_EE4pushEOS0_ = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm = comdat any

$_ZNKSt14priority_queueI4EdgeSt5dequeIS0_SaIS0_EESt4lessIS0_EE5emptyEv = comdat any

$_ZNKSt14priority_queueI4EdgeSt5dequeIS0_SaIS0_EESt4lessIS0_EE3topEv = comdat any

$_ZNSt14priority_queueI4EdgeSt5dequeIS0_SaIS0_EESt4lessIS0_EE3popEv = comdat any

$_ZNSt6vectorIS_ImSaImEESaIS1_EEixEm = comdat any

$_ZNSt6vectorImSaImEEixEm = comdat any

$_ZNSt14priority_queueI4EdgeSt5dequeIS0_SaIS0_EESt4lessIS0_EED2Ev = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EEC2EOS3_ = comdat any

$_ZNSt6vectorIS_ImSaImEESaIS1_EED2Ev = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev = comdat any

$_ZNSaISt6vectorI4EdgeSaIS0_EEEC2Ev = comdat any

$_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEC2EmRKS3_ = comdat any

$_ZNSaISt6vectorI4EdgeSaIS0_EEED2Ev = comdat any

$_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEC2ERKS4_ = comdat any

$_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EED2Ev = comdat any

$_ZNKSt6vectorIS_IxSaIxEESaIS1_EE5emptyEv = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EE5beginEv = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EE3endEv = comdat any

$_ZN9__gnu_cxxneIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEEdeEv = comdat any

$_ZNSt6vectorIxSaIxEEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEEppEv = comdat any

$_ZNSt6vectorI4EdgeSaIS0_EE12emplace_backIJS0_EEEvDpOT_ = comdat any

$_ZSt4moveIR4EdgeEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNSt16allocator_traitsISaI4EdgeEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_ = comdat any

$_ZSt7forwardI4EdgeEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZNSt6vectorI4EdgeSaIS0_EE19_M_emplace_back_auxIJS0_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorI4EdgeE9constructIS1_JS1_EEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorI4EdgeSaIS0_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseI4EdgeSaIS0_EE11_M_allocateEm = comdat any

$_ZNKSt6vectorI4EdgeSaIS0_EE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIP4EdgeS1_SaIS0_EET0_T_S4_S3_RT1_ = comdat any

$_ZNSt12_Vector_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaI4EdgeEE7destroyIS0_EEvRS1_PT_ = comdat any

$_ZSt8_DestroyIP4EdgeS0_EvT_S2_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseI4EdgeSaIS0_EE13_M_deallocateEPS0_m = comdat any

$__clang_call_terminate = comdat any

$_ZNKSt6vectorI4EdgeSaIS0_EE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt16allocator_traitsISaI4EdgeEE8max_sizeERKS1_ = comdat any

$_ZNKSt12_Vector_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorI4EdgeE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaI4EdgeEE8allocateERS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI4EdgeE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIP4EdgeES2_S1_ET0_T_S5_S4_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIP4EdgeSt13move_iteratorIS1_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIP4EdgeES2_ET0_T_S5_S4_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIP4EdgeES4_EET0_T_S7_S6_ = comdat any

$_ZStneIP4EdgeEbRKSt13move_iteratorIT_ES6_ = comdat any

$_ZSt10_ConstructI4EdgeJS0_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofI4EdgeEPT_RS1_ = comdat any

$_ZNKSt13move_iteratorIP4EdgeEdeEv = comdat any

$_ZNSt13move_iteratorIP4EdgeEppEv = comdat any

$_ZSt8_DestroyIP4EdgeEvT_S2_ = comdat any

$_ZSteqIP4EdgeEbRKSt13move_iteratorIT_ES6_ = comdat any

$_ZNKSt13move_iteratorIP4EdgeE4baseEv = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIP4EdgeEEvT_S4_ = comdat any

$_ZNSt13move_iteratorIP4EdgeEC2ES1_ = comdat any

$_ZN9__gnu_cxx13new_allocatorI4EdgeE7destroyIS1_EEvPT_ = comdat any

$_ZNSt16allocator_traitsISaI4EdgeEE10deallocateERS1_PS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI4EdgeE10deallocateEPS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIxEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIxED2Ev = comdat any

$_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIxSaIxEE21_M_default_initializeEm = comdat any

$_ZNSt12_Vector_baseIxSaIxEED2Ev = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaIxEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv = comdat any

$_ZSt27__uninitialized_default_n_aIPxmxET_S1_T0_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv = comdat any

$_ZSt25__uninitialized_default_nIPxmET_S1_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPxmEET_S3_T0_ = comdat any

$_ZSt6fill_nIPxmxET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm = comdat any

$_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm = comdat any

$_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E = comdat any

$_ZSt8_DestroyIPxEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIP4EdgeSt6vectorIS1_SaIS1_EEEC2ERKS2_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIP4EdgeSt6vectorIS1_SaIS1_EEE4baseEv = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2Ev = comdat any

$_ZSt8_DestroyIPSt6vectorIxSaIxEES2_EvT_S4_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev = comdat any

$_ZSt8_DestroyIPSt6vectorIxSaIxEEEvT_S4_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIxSaIxEEEEvT_S6_ = comdat any

$_ZSt8_DestroyISt6vectorIxSaIxEEEvPT_ = comdat any

$_ZSt11__addressofISt6vectorIxSaIxEEEPT_RS3_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE10deallocateEPS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEED2Ev = comdat any

$_ZSt4moveIRSt6vectorIS0_IxSaIxEESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EEC2EOS4_ = comdat any

$_ZSt4moveIRSaISt6vectorIxSaIxEEEEONSt16remove_referenceIT_E4typeEOS6_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implC2EOS3_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_impl12_M_swap_dataERS5_ = comdat any

$_ZNSaISt6vectorIxSaIxEEEC2ERKS2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2ERKS4_ = comdat any

$_ZSt4swapIPSt6vectorIxSaIxEEEvRT_S5_ = comdat any

$_ZSt4moveIRPSt6vectorIxSaIxEEEONSt16remove_referenceIT_E4typeEOS6_ = comdat any

$_ZNSt6vectorIxSaIxEE18_M_fill_initializeEmRKx = comdat any

$_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZSt20uninitialized_fill_nIPxmxET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPxmxEET_S3_T0_RKT1_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EEC2EmRKS3_ = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EE18_M_fill_initializeEmRKS1_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8max_sizeEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPSt6vectorIxSaIxEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E = comdat any

$_ZSt20uninitialized_fill_nIPSt6vectorIxSaIxEEmS2_ET_S4_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIxSaIxEEmS4_EET_S6_T0_RKT1_ = comdat any

$_ZSt10_ConstructISt6vectorIxSaIxEEJRKS2_EEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS5_E4typeE = comdat any

$_ZN9__gnu_cxx13new_allocatorImEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorImED2Ev = comdat any

$_ZNSt12_Vector_baseImSaImEEC2EmRKS0_ = comdat any

$_ZNSt6vectorImSaImEE18_M_fill_initializeEmRKm = comdat any

$_ZNSt12_Vector_baseImSaImEED2Ev = comdat any

$_ZNSt12_Vector_baseImSaImEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseImSaImEE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseImSaImEE12_Vector_implD2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorImEC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseImSaImEE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaImEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPmmmmET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt12_Vector_baseImSaImEE19_M_get_Tp_allocatorEv = comdat any

$_ZSt20uninitialized_fill_nIPmmmET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPmmmEET_S3_T0_RKT1_ = comdat any

$_ZSt6fill_nIPmmmET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPmmmEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPmLb0EE7_S_baseES0_ = comdat any

$_ZNSt12_Vector_baseImSaImEE13_M_deallocateEPmm = comdat any

$_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm = comdat any

$_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm = comdat any

$_ZSt8_DestroyIPmmEvT_S1_RSaIT0_E = comdat any

$_ZSt8_DestroyIPmEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPmEEvT_S3_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorImSaImEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorImSaImEEED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EEC2EmRKS3_ = comdat any

$_ZNSt6vectorIS_ImSaImEESaIS1_EE18_M_fill_initializeEmRKS1_ = comdat any

$_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EE12_Vector_implC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZNSaISt6vectorImSaImEEEC2ERKS2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorImSaImEEEC2ERKS4_ = comdat any

$_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt6vectorImSaImEEEE8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorImSaImEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorImSaImEEE8max_sizeEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPSt6vectorImSaImEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt20uninitialized_fill_nIPSt6vectorImSaImEEmS2_ET_S4_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorImSaImEEmS4_EET_S6_T0_RKT1_ = comdat any

$_ZSt10_ConstructISt6vectorImSaImEEJRKS2_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt6vectorImSaImEEEPT_RS3_ = comdat any

$_ZSt8_DestroyIPSt6vectorImSaImEEEvT_S4_ = comdat any

$_ZSt7forwardIRKSt6vectorImSaImEEEOT_RNSt16remove_referenceIS5_E4typeE = comdat any

$_ZNSt6vectorImSaImEEC2ERKS1_ = comdat any

$_ZNKSt6vectorImSaImEE4sizeEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaImEE17_S_select_on_copyERKS1_ = comdat any

$_ZNKSt12_Vector_baseImSaImEE19_M_get_Tp_allocatorEv = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEPmmET0_T_SA_S9_RSaIT1_E = comdat any

$_ZNKSt6vectorImSaImEE5beginEv = comdat any

$_ZNKSt6vectorImSaImEE3endEv = comdat any

$_ZNSt16allocator_traitsISaImEE37select_on_container_copy_constructionERKS0_ = comdat any

$_ZNSaImEC2ERKS_ = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEPmET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEPmEET0_T_SC_SB_ = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEPmET0_T_SA_S9_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEPmET1_T0_SA_S9_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEENSt11_Miter_baseIT_E13iterator_typeES9_ = comdat any

$_ZSt13__copy_move_aILb0EPKmPmET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEENSt11_Niter_baseIT_E13iterator_typeES9_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEELb1EE7_S_baseES7_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEE4baseEv = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEELb0EE7_S_baseES7_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEC2ERKS2_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorImSaImEEEEvT_S6_ = comdat any

$_ZSt8_DestroyISt6vectorImSaImEEEvPT_ = comdat any

$_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZNSt16allocator_traitsISaISt6vectorImSaImEEEE10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorImSaImEEE10deallocateEPS3_m = comdat any

$_ZSt8_DestroyIPSt6vectorImSaImEES2_EvT_S4_RSaIT0_E = comdat any

$_ZNSt11_Deque_baseI4EdgeSaIS0_EEC2Ev = comdat any

$_ZNSt11_Deque_baseI4EdgeSaIS0_EE11_Deque_implC2Ev = comdat any

$_ZNSt11_Deque_baseI4EdgeSaIS0_EE17_M_initialize_mapEm = comdat any

$_ZNSt11_Deque_baseI4EdgeSaIS0_EE11_Deque_implD2Ev = comdat any

$_ZNSaI4EdgeEC2Ev = comdat any

$_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorI4EdgeEC2Ev = comdat any

$_ZSt16__deque_buf_sizem = comdat any

$_ZNSt11_Deque_baseI4EdgeSaIS0_EE15_M_allocate_mapEm = comdat any

$_ZNSt11_Deque_baseI4EdgeSaIS0_EE15_M_create_nodesEPPS0_S4_ = comdat any

$_ZNSt11_Deque_baseI4EdgeSaIS0_EE17_M_deallocate_mapEPPS0_m = comdat any

$_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E11_M_set_nodeEPS2_ = comdat any

$_ZNKSt11_Deque_baseI4EdgeSaIS0_EE20_M_get_map_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIP4EdgeEE8allocateERS2_m = comdat any

$_ZNSaIP4EdgeED2Ev = comdat any

$_ZNKSt11_Deque_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSaIP4EdgeEC2IS_EERKSaIT_E = comdat any

$_ZN9__gnu_cxx13new_allocatorIP4EdgeEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIP4EdgeE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIP4EdgeE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIP4EdgeED2Ev = comdat any

$_ZNSt11_Deque_baseI4EdgeSaIS0_EE16_M_allocate_nodeEv = comdat any

$_ZNSt11_Deque_baseI4EdgeSaIS0_EE16_M_destroy_nodesEPPS0_S4_ = comdat any

$_ZNSt11_Deque_baseI4EdgeSaIS0_EE18_M_deallocate_nodeEPS0_ = comdat any

$_ZNSt16allocator_traitsISaIP4EdgeEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIP4EdgeE10deallocateEPS2_m = comdat any

$_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E14_S_buffer_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorI4EdgeED2Ev = comdat any

$_ZNSt5dequeI4EdgeSaIS0_EE15_M_destroy_dataESt15_Deque_iteratorIS0_RS0_PS0_ES6_RKS1_ = comdat any

$_ZNSt5dequeI4EdgeSaIS0_EE5beginEv = comdat any

$_ZNSt5dequeI4EdgeSaIS0_EE3endEv = comdat any

$_ZNSt11_Deque_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt11_Deque_baseI4EdgeSaIS0_EED2Ev = comdat any

$_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_ = comdat any

$_ZSt4moveIRSt5dequeI4EdgeSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_ = comdat any

$_ZNSt5dequeI4EdgeSaIS0_EEC2EOS2_ = comdat any

$_ZSt9make_heapISt15_Deque_iteratorI4EdgeRS1_PS1_ESt4lessIS1_EEvT_S7_T0_ = comdat any

$_ZNSt11_Deque_baseI4EdgeSaIS0_EEC2EOS2_ = comdat any

$_ZSt4moveIRSt11_Deque_baseI4EdgeSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_ = comdat any

$_ZNSt11_Deque_baseI4EdgeSaIS0_EEC2EOS2_St17integral_constantIbLb1EE = comdat any

$_ZSt4moveIRSaI4EdgeEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNSt11_Deque_baseI4EdgeSaIS0_EE11_Deque_implC2EOS1_ = comdat any

$_ZNSt11_Deque_baseI4EdgeSaIS0_EE11_Deque_impl12_M_swap_dataERS3_ = comdat any

$_ZN9__gnu_cxx13new_allocatorI4EdgeEC2ERKS2_ = comdat any

$_ZSt4swapISt15_Deque_iteratorI4EdgeRS1_PS1_EEvRT_S6_ = comdat any

$_ZSt4swapIPP4EdgeEvRT_S4_ = comdat any

$_ZSt4swapImEvRT_S1_ = comdat any

$_ZSt4moveIRSt15_Deque_iteratorI4EdgeRS1_PS1_EEONSt16remove_referenceIT_E4typeEOS7_ = comdat any

$_ZSt4moveIRPP4EdgeEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZSt11__make_heapISt15_Deque_iteratorI4EdgeRS1_PS1_EN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessIS1_EEEEvT_SB_T0_ = comdat any

$_ZN9__gnu_cxx5__ops16__iter_comp_iterISt4lessI4EdgeEEENS0_15_Iter_comp_iterIT_EES6_ = comdat any

$_ZStmiI4EdgeRS0_PS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_ = comdat any

$_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EplEl = comdat any

$_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EdeEv = comdat any

$_ZSt13__adjust_heapISt15_Deque_iteratorI4EdgeRS1_PS1_ElS1_N9__gnu_cxx5__ops15_Iter_comp_iterISt4lessIS1_EEEEvT_T0_SC_T1_T2_ = comdat any

$_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EpLEl = comdat any

$_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessI4EdgeEEclISt15_Deque_iteratorIS3_RS3_PS3_ESA_EEbT_T0_ = comdat any

$_ZSt11__push_heapISt15_Deque_iteratorI4EdgeRS1_PS1_ElS1_N9__gnu_cxx5__ops14_Iter_comp_valISt4lessIS1_EEEEvT_T0_SC_T1_T2_ = comdat any

$_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessI4EdgeEEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS6_EE = comdat any

$_ZNKSt4lessI4EdgeEclERKS0_S3_ = comdat any

$_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessI4EdgeEEclISt15_Deque_iteratorIS3_RS3_PS3_ES3_EEbT_RT0_ = comdat any

$_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessI4EdgeEEC2ES4_ = comdat any

$_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessI4EdgeEEC2ES4_ = comdat any

$_ZNSt5dequeI4EdgeSaIS0_EE9push_backEOS0_ = comdat any

$_ZSt9push_heapISt15_Deque_iteratorI4EdgeRS1_PS1_ESt4lessIS1_EEvT_S7_T0_ = comdat any

$_ZNSt5dequeI4EdgeSaIS0_EE12emplace_backIJS0_EEEvDpOT_ = comdat any

$_ZNSt5dequeI4EdgeSaIS0_EE16_M_push_back_auxIJS0_EEEvDpOT_ = comdat any

$_ZNSt5dequeI4EdgeSaIS0_EE22_M_reserve_map_at_backEm = comdat any

$_ZNSt5dequeI4EdgeSaIS0_EE17_M_reallocate_mapEmb = comdat any

$_ZSt4copyIPP4EdgeS2_ET0_T_S4_S3_ = comdat any

$_ZSt13copy_backwardIPP4EdgeS2_ET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb0EPP4EdgeS2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__miter_baseIPP4EdgeENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb0EPP4EdgeS2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIPP4EdgeENSt11_Niter_baseIT_E13iterator_typeES4_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP4EdgeEEPT_PKS5_S8_S6_ = comdat any

$_ZNSt10_Iter_baseIPP4EdgeLb0EE7_S_baseES2_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EPP4EdgeS2_ET1_T0_S4_S3_ = comdat any

$_ZSt22__copy_move_backward_aILb0EPP4EdgeS2_ET1_T0_S4_S3_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIP4EdgeEEPT_PKS5_S8_S6_ = comdat any

$_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EmiEl = comdat any

$_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessI4EdgeEEENS0_14_Iter_comp_valIT_EES6_ = comdat any

$_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EmIEl = comdat any

$_ZNKSt5dequeI4EdgeSaIS0_EE5emptyEv = comdat any

$_ZSteqI4EdgeRS0_PS0_EbRKSt15_Deque_iteratorIT_T0_T1_ES9_ = comdat any

$_ZNKSt5dequeI4EdgeSaIS0_EE5frontEv = comdat any

$_ZNKSt5dequeI4EdgeSaIS0_EE5beginEv = comdat any

$_ZNKSt15_Deque_iteratorI4EdgeRKS0_PS1_EdeEv = comdat any

$_ZNSt15_Deque_iteratorI4EdgeRKS0_PS1_EC2ERKS_IS0_RS0_PS0_E = comdat any

$_ZSt8pop_heapISt15_Deque_iteratorI4EdgeRS1_PS1_ESt4lessIS1_EEvT_S7_T0_ = comdat any

$_ZNSt5dequeI4EdgeSaIS0_EE8pop_backEv = comdat any

$_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EmmEv = comdat any

$_ZSt10__pop_heapISt15_Deque_iteratorI4EdgeRS1_PS1_EN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessIS1_EEEEvT_SB_SB_T0_ = comdat any

$_ZNSt5dequeI4EdgeSaIS0_EE15_M_pop_back_auxEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EEC2EmRKS4_ = comdat any

$_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EE21_M_default_initializeEm = comdat any

$_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE12_Vector_implC2ERKS4_ = comdat any

$_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE12_Vector_implD2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEEC2ERKS5_ = comdat any

$_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt6vectorI4EdgeSaIS1_EEEE8allocateERS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEE8max_sizeEv = comdat any

$_ZSt27__uninitialized_default_n_aIPSt6vectorI4EdgeSaIS1_EEmS3_ET_S5_T0_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt25__uninitialized_default_nIPSt6vectorI4EdgeSaIS1_EEmET_S5_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorI4EdgeSaIS3_EEmEET_S7_T0_ = comdat any

$_ZSt10_ConstructISt6vectorI4EdgeSaIS1_EEJEEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt6vectorI4EdgeSaIS1_EEEPT_RS4_ = comdat any

$_ZSt8_DestroyIPSt6vectorI4EdgeSaIS1_EEEvT_S5_ = comdat any

$_ZNSt6vectorI4EdgeSaIS0_EEC2Ev = comdat any

$_ZNSt12_Vector_baseI4EdgeSaIS0_EEC2Ev = comdat any

$_ZNSt12_Vector_baseI4EdgeSaIS0_EE12_Vector_implC2Ev = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorI4EdgeSaIS3_EEEEvT_S7_ = comdat any

$_ZSt8_DestroyISt6vectorI4EdgeSaIS1_EEEvPT_ = comdat any

$_ZNSt6vectorI4EdgeSaIS0_EED2Ev = comdat any

$_ZNSt12_Vector_baseI4EdgeSaIS0_EED2Ev = comdat any

$_ZNSt12_Vector_baseI4EdgeSaIS0_EE12_Vector_implD2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE13_M_deallocateEPS3_m = comdat any

$_ZNSt16allocator_traitsISaISt6vectorI4EdgeSaIS1_EEEE10deallocateERS4_PS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEE10deallocateEPS4_m = comdat any

$_ZSt8_DestroyIPSt6vectorI4EdgeSaIS1_EES3_EvT_S5_RSaIT0_E = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorI4EdgeSaIS2_EEEE17_S_select_on_copyERKS5_ = comdat any

$_ZNKSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKSt6vectorI4EdgeSaIS3_EES2_IS5_SaIS5_EEEEPS5_S5_ET0_T_SD_SC_RSaIT1_E = comdat any

$_ZNKSt6vectorIS_I4EdgeSaIS0_EESaIS2_EE5beginEv = comdat any

$_ZNKSt6vectorIS_I4EdgeSaIS0_EESaIS2_EE3endEv = comdat any

$_ZNSt16allocator_traitsISaISt6vectorI4EdgeSaIS1_EEEE37select_on_container_copy_constructionERKS4_ = comdat any

$_ZNSaISt6vectorI4EdgeSaIS0_EEEC2ERKS3_ = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorI4EdgeSaIS3_EES2_IS5_SaIS5_EEEEPS5_ET0_T_SD_SC_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorI4EdgeSaIS5_EES4_IS7_SaIS7_EEEEPS7_EET0_T_SF_SE_ = comdat any

$_ZN9__gnu_cxxneIPKSt6vectorI4EdgeSaIS2_EES1_IS4_SaIS4_EEEEbRKNS_17__normal_iteratorIT_T0_EESE_ = comdat any

$_ZSt10_ConstructISt6vectorI4EdgeSaIS1_EEJRKS3_EEvPT_DpOT0_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorI4EdgeSaIS2_EES1_IS4_SaIS4_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorI4EdgeSaIS2_EES1_IS4_SaIS4_EEEppEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorI4EdgeSaIS2_EES1_IS4_SaIS4_EEE4baseEv = comdat any

$_ZSt7forwardIRKSt6vectorI4EdgeSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE = comdat any

$_ZNSt6vectorI4EdgeSaIS0_EEC2ERKS2_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaI4EdgeEE17_S_select_on_copyERKS2_ = comdat any

$_ZNSt12_Vector_baseI4EdgeSaIS0_EEC2EmRKS1_ = comdat any

$_ZNSaI4EdgeED2Ev = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E = comdat any

$_ZNKSt6vectorI4EdgeSaIS0_EE5beginEv = comdat any

$_ZNKSt6vectorI4EdgeSaIS0_EE3endEv = comdat any

$_ZNSt16allocator_traitsISaI4EdgeEE37select_on_container_copy_constructionERKS1_ = comdat any

$_ZNSaI4EdgeEC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseI4EdgeSaIS0_EE12_Vector_implC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseI4EdgeSaIS0_EE17_M_create_storageEm = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_ = comdat any

$_ZN9__gnu_cxxneIPK4EdgeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ = comdat any

$_ZSt10_ConstructI4EdgeJRKS0_EEvPT_DpOT0_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEEppEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEE4baseEv = comdat any

$_ZSt7forwardIRK4EdgeEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEEC2ERKS3_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorI4EdgeSaIS2_EES1_IS4_SaIS4_EEEC2ERKS6_ = comdat any

$_ZN9__gnu_cxxeqIPKSt6vectorIxSaIxEES1_IS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_ = comdat any

$_ZNKSt6vectorIS_IxSaIxEESaIS1_EE5beginEv = comdat any

$_ZNKSt6vectorIS_IxSaIxEESaIS1_EE3endEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIxSaIxEES1_IS3_SaIS3_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIxSaIxEES1_IS3_SaIS3_EEEC2ERKS5_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEEC2ERKS4_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEE4baseEv = comdat any

$_ZNKSt6vectorIxSaIxEE4sizeEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIxEE17_S_select_on_copyERKS1_ = comdat any

$_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxxET0_T_SA_S9_RSaIT1_E = comdat any

$_ZNKSt6vectorIxSaIxEE5beginEv = comdat any

$_ZNKSt6vectorIxSaIxEE3endEv = comdat any

$_ZNSt16allocator_traitsISaIxEE37select_on_container_copy_constructionERKS0_ = comdat any

$_ZNSaIxEC2ERKS_ = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxEET0_T_SC_SB_ = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET1_T0_SA_S9_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_ = comdat any

$_ZSt13__copy_move_aILb0EPKxPxET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb1EE7_S_baseES7_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb0EE7_S_baseES7_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_ = comdat any

@.str = private unnamed_addr constant [8 x i8] c"%zu %zu\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"%zu %zu %lld\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"NEGATIVE CYCLE\0A\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"%lld%c\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"INF%c\00", align 1
@.str.5 = private unnamed_addr constant [28 x i8] c"vector::_M_emplace_back_aux\00", align 1
@x = common global i32 0
@y = common global i32 0
@x.6 = common global i32 0
@y.7 = common global i32 0
@x.8 = common global i32 0
@y.9 = common global i32 0
@x.10 = common global i32 0
@y.11 = common global i32 0
@x.12 = common global i32 0
@y.13 = common global i32 0
@x.14 = common global i32 0
@y.15 = common global i32 0
@x.16 = common global i32 0
@y.17 = common global i32 0
@x.18 = common global i32 0
@y.19 = common global i32 0
@x.20 = common global i32 0
@y.21 = common global i32 0
@x.22 = common global i32 0
@y.23 = common global i32 0
@x.24 = common global i32 0
@y.25 = common global i32 0
@x.26 = common global i32 0
@y.27 = common global i32 0
@x.28 = common global i32 0
@y.29 = common global i32 0
@x.30 = common global i32 0
@y.31 = common global i32 0
@x.32 = common global i32 0
@y.33 = common global i32 0
@x.34 = common global i32 0
@y.35 = common global i32 0
@x.36 = common global i32 0
@y.37 = common global i32 0
@x.38 = common global i32 0
@y.39 = common global i32 0
@x.40 = common global i32 0
@y.41 = common global i32 0
@x.42 = common global i32 0
@y.43 = common global i32 0
@x.44 = common global i32 0
@y.45 = common global i32 0
@x.46 = common global i32 0
@y.47 = common global i32 0
@x.48 = common global i32 0
@y.49 = common global i32 0
@x.50 = common global i32 0
@y.51 = common global i32 0
@x.52 = common global i32 0
@y.53 = common global i32 0
@x.54 = common global i32 0
@y.55 = common global i32 0
@x.56 = common global i32 0
@y.57 = common global i32 0
@x.58 = common global i32 0
@y.59 = common global i32 0
@x.60 = common global i32 0
@y.61 = common global i32 0
@x.62 = common global i32 0
@y.63 = common global i32 0
@x.64 = common global i32 0
@y.65 = common global i32 0
@x.66 = common global i32 0
@y.67 = common global i32 0
@x.68 = common global i32 0
@y.69 = common global i32 0
@x.70 = common global i32 0
@y.71 = common global i32 0
@x.72 = common global i32 0
@y.73 = common global i32 0
@x.74 = common global i32 0
@y.75 = common global i32 0
@x.76 = common global i32 0
@y.77 = common global i32 0
@x.78 = common global i32 0
@y.79 = common global i32 0
@x.80 = common global i32 0
@y.81 = common global i32 0
@x.82 = common global i32 0
@y.83 = common global i32 0
@x.84 = common global i32 0
@y.85 = common global i32 0
@x.86 = common global i32 0
@y.87 = common global i32 0
@x.88 = common global i32 0
@y.89 = common global i32 0
@x.90 = common global i32 0
@y.91 = common global i32 0
@x.92 = common global i32 0
@y.93 = common global i32 0
@x.94 = common global i32 0
@y.95 = common global i32 0
@x.96 = common global i32 0
@y.97 = common global i32 0
@x.98 = common global i32 0
@y.99 = common global i32 0
@x.100 = common global i32 0
@y.101 = common global i32 0
@x.102 = common global i32 0
@y.103 = common global i32 0
@x.104 = common global i32 0
@y.105 = common global i32 0
@x.106 = common global i32 0
@y.107 = common global i32 0
@x.108 = common global i32 0
@y.109 = common global i32 0
@x.110 = common global i32 0
@y.111 = common global i32 0
@x.112 = common global i32 0
@y.113 = common global i32 0
@x.114 = common global i32 0
@y.115 = common global i32 0
@x.116 = common global i32 0
@y.117 = common global i32 0
@x.118 = common global i32 0
@y.119 = common global i32 0
@x.120 = common global i32 0
@y.121 = common global i32 0
@x.122 = common global i32 0
@y.123 = common global i32 0
@x.124 = common global i32 0
@y.125 = common global i32 0
@x.126 = common global i32 0
@y.127 = common global i32 0
@x.128 = common global i32 0
@y.129 = common global i32 0
@x.130 = common global i32 0
@y.131 = common global i32 0
@x.132 = common global i32 0
@y.133 = common global i32 0
@x.134 = common global i32 0
@y.135 = common global i32 0
@x.136 = common global i32 0
@y.137 = common global i32 0
@x.138 = common global i32 0
@y.139 = common global i32 0
@x.140 = common global i32 0
@y.141 = common global i32 0
@x.142 = common global i32 0
@y.143 = common global i32 0
@x.144 = common global i32 0
@y.145 = common global i32 0
@x.146 = common global i32 0
@y.147 = common global i32 0
@x.148 = common global i32 0
@y.149 = common global i32 0
@x.150 = common global i32 0
@y.151 = common global i32 0
@x.152 = common global i32 0
@y.153 = common global i32 0
@x.154 = common global i32 0
@y.155 = common global i32 0
@x.156 = common global i32 0
@y.157 = common global i32 0
@x.158 = common global i32 0
@y.159 = common global i32 0
@x.160 = common global i32 0
@y.161 = common global i32 0
@x.162 = common global i32 0
@y.163 = common global i32 0
@x.164 = common global i32 0
@y.165 = common global i32 0
@x.166 = common global i32 0
@y.167 = common global i32 0
@x.168 = common global i32 0
@y.169 = common global i32 0
@x.170 = common global i32 0
@y.171 = common global i32 0
@x.172 = common global i32 0
@y.173 = common global i32 0
@x.174 = common global i32 0
@y.175 = common global i32 0
@x.176 = common global i32 0
@y.177 = common global i32 0
@x.178 = common global i32 0
@y.179 = common global i32 0
@x.180 = common global i32 0
@y.181 = common global i32 0
@x.182 = common global i32 0
@y.183 = common global i32 0
@x.184 = common global i32 0
@y.185 = common global i32 0
@x.186 = common global i32 0
@y.187 = common global i32 0
@x.188 = common global i32 0
@y.189 = common global i32 0
@x.190 = common global i32 0
@y.191 = common global i32 0
@x.192 = common global i32 0
@y.193 = common global i32 0
@x.194 = common global i32 0
@y.195 = common global i32 0
@x.196 = common global i32 0
@y.197 = common global i32 0
@x.198 = common global i32 0
@y.199 = common global i32 0
@x.200 = common global i32 0
@y.201 = common global i32 0
@x.202 = common global i32 0
@y.203 = common global i32 0
@x.204 = common global i32 0
@y.205 = common global i32 0
@x.206 = common global i32 0
@y.207 = common global i32 0
@x.208 = common global i32 0
@y.209 = common global i32 0
@x.210 = common global i32 0
@y.211 = common global i32 0
@x.212 = common global i32 0
@y.213 = common global i32 0
@x.214 = common global i32 0
@y.215 = common global i32 0
@x.216 = common global i32 0
@y.217 = common global i32 0
@x.218 = common global i32 0
@y.219 = common global i32 0
@x.220 = common global i32 0
@y.221 = common global i32 0
@x.222 = common global i32 0
@y.223 = common global i32 0
@x.224 = common global i32 0
@y.225 = common global i32 0
@x.226 = common global i32 0
@y.227 = common global i32 0
@x.228 = common global i32 0
@y.229 = common global i32 0
@x.230 = common global i32 0
@y.231 = common global i32 0
@x.232 = common global i32 0
@y.233 = common global i32 0
@x.234 = common global i32 0
@y.235 = common global i32 0
@x.236 = common global i32 0
@y.237 = common global i32 0
@x.238 = common global i32 0
@y.239 = common global i32 0
@x.240 = common global i32 0
@y.241 = common global i32 0
@x.242 = common global i32 0
@y.243 = common global i32 0
@x.244 = common global i32 0
@y.245 = common global i32 0
@x.246 = common global i32 0
@y.247 = common global i32 0
@x.248 = common global i32 0
@y.249 = common global i32 0
@x.250 = common global i32 0
@y.251 = common global i32 0
@x.252 = common global i32 0
@y.253 = common global i32 0
@x.254 = common global i32 0
@y.255 = common global i32 0
@x.256 = common global i32 0
@y.257 = common global i32 0
@x.258 = common global i32 0
@y.259 = common global i32 0
@x.260 = common global i32 0
@y.261 = common global i32 0
@x.262 = common global i32 0
@y.263 = common global i32 0
@x.264 = common global i32 0
@y.265 = common global i32 0
@x.266 = common global i32 0
@y.267 = common global i32 0
@x.268 = common global i32 0
@y.269 = common global i32 0
@x.270 = common global i32 0
@y.271 = common global i32 0
@x.272 = common global i32 0
@y.273 = common global i32 0
@x.274 = common global i32 0
@y.275 = common global i32 0
@x.276 = common global i32 0
@y.277 = common global i32 0
@x.278 = common global i32 0
@y.279 = common global i32 0
@x.280 = common global i32 0
@y.281 = common global i32 0
@x.282 = common global i32 0
@y.283 = common global i32 0
@x.284 = common global i32 0
@y.285 = common global i32 0
@x.286 = common global i32 0
@y.287 = common global i32 0
@x.288 = common global i32 0
@y.289 = common global i32 0
@x.290 = common global i32 0
@y.291 = common global i32 0
@x.292 = common global i32 0
@y.293 = common global i32 0
@x.294 = common global i32 0
@y.295 = common global i32 0
@x.296 = common global i32 0
@y.297 = common global i32 0
@x.298 = common global i32 0
@y.299 = common global i32 0
@x.300 = common global i32 0
@y.301 = common global i32 0
@x.302 = common global i32 0
@y.303 = common global i32 0
@x.304 = common global i32 0
@y.305 = common global i32 0
@x.306 = common global i32 0
@y.307 = common global i32 0
@x.308 = common global i32 0
@y.309 = common global i32 0
@x.310 = common global i32 0
@y.311 = common global i32 0
@x.312 = common global i32 0
@y.313 = common global i32 0
@x.314 = common global i32 0
@y.315 = common global i32 0
@x.316 = common global i32 0
@y.317 = common global i32 0
@x.318 = common global i32 0
@y.319 = common global i32 0
@x.320 = common global i32 0
@y.321 = common global i32 0
@x.322 = common global i32 0
@y.323 = common global i32 0
@x.324 = common global i32 0
@y.325 = common global i32 0
@x.326 = common global i32 0
@y.327 = common global i32 0
@x.328 = common global i32 0
@y.329 = common global i32 0
@x.330 = common global i32 0
@y.331 = common global i32 0
@x.332 = common global i32 0
@y.333 = common global i32 0
@x.334 = common global i32 0
@y.335 = common global i32 0
@x.336 = common global i32 0
@y.337 = common global i32 0
@x.338 = common global i32 0
@y.339 = common global i32 0
@x.340 = common global i32 0
@y.341 = common global i32 0
@x.342 = common global i32 0
@y.343 = common global i32 0
@x.344 = common global i32 0
@y.345 = common global i32 0
@x.346 = common global i32 0
@y.347 = common global i32 0
@x.348 = common global i32 0
@y.349 = common global i32 0
@x.350 = common global i32 0
@y.351 = common global i32 0
@x.352 = common global i32 0
@y.353 = common global i32 0
@x.354 = common global i32 0
@y.355 = common global i32 0
@x.356 = common global i32 0
@y.357 = common global i32 0
@x.358 = common global i32 0
@y.359 = common global i32 0
@x.360 = common global i32 0
@y.361 = common global i32 0
@x.362 = common global i32 0
@y.363 = common global i32 0
@x.364 = common global i32 0
@y.365 = common global i32 0
@x.366 = common global i32 0
@y.367 = common global i32 0
@x.368 = common global i32 0
@y.369 = common global i32 0
@x.370 = common global i32 0
@y.371 = common global i32 0
@x.372 = common global i32 0
@y.373 = common global i32 0
@x.374 = common global i32 0
@y.375 = common global i32 0
@x.376 = common global i32 0
@y.377 = common global i32 0
@x.378 = common global i32 0
@y.379 = common global i32 0
@x.380 = common global i32 0
@y.381 = common global i32 0
@x.382 = common global i32 0
@y.383 = common global i32 0
@x.384 = common global i32 0
@y.385 = common global i32 0
@x.386 = common global i32 0
@y.387 = common global i32 0
@x.388 = common global i32 0
@y.389 = common global i32 0
@x.390 = common global i32 0
@y.391 = common global i32 0
@x.392 = common global i32 0
@y.393 = common global i32 0
@x.394 = common global i32 0
@y.395 = common global i32 0
@x.396 = common global i32 0
@y.397 = common global i32 0
@x.398 = common global i32 0
@y.399 = common global i32 0
@x.400 = common global i32 0
@y.401 = common global i32 0
@x.402 = common global i32 0
@y.403 = common global i32 0
@x.404 = common global i32 0
@y.405 = common global i32 0
@x.406 = common global i32 0
@y.407 = common global i32 0
@x.408 = common global i32 0
@y.409 = common global i32 0
@x.410 = common global i32 0
@y.411 = common global i32 0
@x.412 = common global i32 0
@y.413 = common global i32 0
@x.414 = common global i32 0
@y.415 = common global i32 0
@x.416 = common global i32 0
@y.417 = common global i32 0
@x.418 = common global i32 0
@y.419 = common global i32 0
@x.420 = common global i32 0
@y.421 = common global i32 0
@x.422 = common global i32 0
@y.423 = common global i32 0
@x.424 = common global i32 0
@y.425 = common global i32 0
@x.426 = common global i32 0
@y.427 = common global i32 0
@x.428 = common global i32 0
@y.429 = common global i32 0
@x.430 = common global i32 0
@y.431 = common global i32 0
@x.432 = common global i32 0
@y.433 = common global i32 0
@x.434 = common global i32 0
@y.435 = common global i32 0
@x.436 = common global i32 0
@y.437 = common global i32 0
@x.438 = common global i32 0
@y.439 = common global i32 0
@x.440 = common global i32 0
@y.441 = common global i32 0
@x.442 = common global i32 0
@y.443 = common global i32 0
@x.444 = common global i32 0
@y.445 = common global i32 0
@x.446 = common global i32 0
@y.447 = common global i32 0
@x.448 = common global i32 0
@y.449 = common global i32 0
@x.450 = common global i32 0
@y.451 = common global i32 0
@x.452 = common global i32 0
@y.453 = common global i32 0
@x.454 = common global i32 0
@y.455 = common global i32 0
@x.456 = common global i32 0
@y.457 = common global i32 0
@x.458 = common global i32 0
@y.459 = common global i32 0
@x.460 = common global i32 0
@y.461 = common global i32 0
@x.462 = common global i32 0
@y.463 = common global i32 0
@x.464 = common global i32 0
@y.465 = common global i32 0
@x.466 = common global i32 0
@y.467 = common global i32 0
@x.468 = common global i32 0
@y.469 = common global i32 0
@x.470 = common global i32 0
@y.471 = common global i32 0
@x.472 = common global i32 0
@y.473 = common global i32 0
@x.474 = common global i32 0
@y.475 = common global i32 0
@x.476 = common global i32 0
@y.477 = common global i32 0
@x.478 = common global i32 0
@y.479 = common global i32 0
@x.480 = common global i32 0
@y.481 = common global i32 0
@x.482 = common global i32 0
@y.483 = common global i32 0
@x.484 = common global i32 0
@y.485 = common global i32 0
@x.486 = common global i32 0
@y.487 = common global i32 0
@x.488 = common global i32 0
@y.489 = common global i32 0
@x.490 = common global i32 0
@y.491 = common global i32 0
@x.492 = common global i32 0
@y.493 = common global i32 0
@x.494 = common global i32 0
@y.495 = common global i32 0
@x.496 = common global i32 0
@y.497 = common global i32 0
@x.498 = common global i32 0
@y.499 = common global i32 0
@x.500 = common global i32 0
@y.501 = common global i32 0
@x.502 = common global i32 0
@y.503 = common global i32 0
@x.504 = common global i32 0
@y.505 = common global i32 0
@x.506 = common global i32 0
@y.507 = common global i32 0
@x.508 = common global i32 0
@y.509 = common global i32 0
@x.510 = common global i32 0
@y.511 = common global i32 0
@x.512 = common global i32 0
@y.513 = common global i32 0
@x.514 = common global i32 0
@y.515 = common global i32 0
@x.516 = common global i32 0
@y.517 = common global i32 0
@x.518 = common global i32 0
@y.519 = common global i32 0
@x.520 = common global i32 0
@y.521 = common global i32 0
@x.522 = common global i32 0
@y.523 = common global i32 0
@x.524 = common global i32 0
@y.525 = common global i32 0
@x.526 = common global i32 0
@y.527 = common global i32 0
@x.528 = common global i32 0
@y.529 = common global i32 0
@x.530 = common global i32 0
@y.531 = common global i32 0
@x.532 = common global i32 0
@y.533 = common global i32 0
@x.534 = common global i32 0
@y.535 = common global i32 0
@x.536 = common global i32 0
@y.537 = common global i32 0
@x.538 = common global i32 0
@y.539 = common global i32 0
@x.540 = common global i32 0
@y.541 = common global i32 0
@x.542 = common global i32 0
@y.543 = common global i32 0
@x.544 = common global i32 0
@y.545 = common global i32 0
@x.546 = common global i32 0
@y.547 = common global i32 0
@x.548 = common global i32 0
@y.549 = common global i32 0
@x.550 = common global i32 0
@y.551 = common global i32 0
@x.552 = common global i32 0
@y.553 = common global i32 0
@x.554 = common global i32 0
@y.555 = common global i32 0
@x.556 = common global i32 0
@y.557 = common global i32 0
@x.558 = common global i32 0
@y.559 = common global i32 0
@x.560 = common global i32 0
@y.561 = common global i32 0
@x.562 = common global i32 0
@y.563 = common global i32 0
@x.564 = common global i32 0
@y.565 = common global i32 0
@x.566 = common global i32 0
@y.567 = common global i32 0
@x.568 = common global i32 0
@y.569 = common global i32 0
@x.570 = common global i32 0
@y.571 = common global i32 0
@x.572 = common global i32 0
@y.573 = common global i32 0
@x.574 = common global i32 0
@y.575 = common global i32 0
@x.576 = common global i32 0
@y.577 = common global i32 0
@x.578 = common global i32 0
@y.579 = common global i32 0
@x.580 = common global i32 0
@y.581 = common global i32 0
@x.582 = common global i32 0
@y.583 = common global i32 0
@x.584 = common global i32 0
@y.585 = common global i32 0
@x.586 = common global i32 0
@y.587 = common global i32 0
@x.588 = common global i32 0
@y.589 = common global i32 0
@x.590 = common global i32 0
@y.591 = common global i32 0
@x.592 = common global i32 0
@y.593 = common global i32 0
@x.594 = common global i32 0
@y.595 = common global i32 0
@x.596 = common global i32 0
@y.597 = common global i32 0
@x.598 = common global i32 0
@y.599 = common global i32 0
@x.600 = common global i32 0
@y.601 = common global i32 0
@x.602 = common global i32 0
@y.603 = common global i32 0
@x.604 = common global i32 0
@y.605 = common global i32 0
@x.606 = common global i32 0
@y.607 = common global i32 0
@x.608 = common global i32 0
@y.609 = common global i32 0
@x.610 = common global i32 0
@y.611 = common global i32 0
@x.612 = common global i32 0
@y.613 = common global i32 0
@x.614 = common global i32 0
@y.615 = common global i32 0
@x.616 = common global i32 0
@y.617 = common global i32 0
@x.618 = common global i32 0
@y.619 = common global i32 0
@x.620 = common global i32 0
@y.621 = common global i32 0
@x.622 = common global i32 0
@y.623 = common global i32 0
@x.624 = common global i32 0
@y.625 = common global i32 0
@x.626 = common global i32 0
@y.627 = common global i32 0
@x.628 = common global i32 0
@y.629 = common global i32 0
@x.630 = common global i32 0
@y.631 = common global i32 0
@x.632 = common global i32 0
@y.633 = common global i32 0
@x.634 = common global i32 0
@y.635 = common global i32 0
@x.636 = common global i32 0
@y.637 = common global i32 0
@x.638 = common global i32 0
@y.639 = common global i32 0
@x.640 = common global i32 0
@y.641 = common global i32 0
@x.642 = common global i32 0
@y.643 = common global i32 0
@x.644 = common global i32 0
@y.645 = common global i32 0
@x.646 = common global i32 0
@y.647 = common global i32 0
@x.648 = common global i32 0
@y.649 = common global i32 0
@x.650 = common global i32 0
@y.651 = common global i32 0
@x.652 = common global i32 0
@y.653 = common global i32 0
@x.654 = common global i32 0
@y.655 = common global i32 0
@x.656 = common global i32 0
@y.657 = common global i32 0
@x.658 = common global i32 0
@y.659 = common global i32 0
@x.660 = common global i32 0
@y.661 = common global i32 0
@x.662 = common global i32 0
@y.663 = common global i32 0
@x.664 = common global i32 0
@y.665 = common global i32 0
@x.666 = common global i32 0
@y.667 = common global i32 0
@x.668 = common global i32 0
@y.669 = common global i32 0
@x.670 = common global i32 0
@y.671 = common global i32 0
@x.672 = common global i32 0
@y.673 = common global i32 0
@x.674 = common global i32 0
@y.675 = common global i32 0
@x.676 = common global i32 0
@y.677 = common global i32 0
@x.678 = common global i32 0
@y.679 = common global i32 0
@x.680 = common global i32 0
@y.681 = common global i32 0
@x.682 = common global i32 0
@y.683 = common global i32 0
@x.684 = common global i32 0
@y.685 = common global i32 0
@x.686 = common global i32 0
@y.687 = common global i32 0
@x.688 = common global i32 0
@y.689 = common global i32 0
@x.690 = common global i32 0
@y.691 = common global i32 0
@x.692 = common global i32 0
@y.693 = common global i32 0
@x.694 = common global i32 0
@y.695 = common global i32 0
@x.696 = common global i32 0
@y.697 = common global i32 0
@x.698 = common global i32 0
@y.699 = common global i32 0
@x.700 = common global i32 0
@y.701 = common global i32 0
@x.702 = common global i32 0
@y.703 = common global i32 0
@x.704 = common global i32 0
@y.705 = common global i32 0
@x.706 = common global i32 0
@y.707 = common global i32 0
@x.708 = common global i32 0
@y.709 = common global i32 0
@x.710 = common global i32 0
@y.711 = common global i32 0
@x.712 = common global i32 0
@y.713 = common global i32 0
@x.714 = common global i32 0
@y.715 = common global i32 0
@x.716 = common global i32 0
@y.717 = common global i32 0
@x.718 = common global i32 0
@y.719 = common global i32 0
@x.720 = common global i32 0
@y.721 = common global i32 0
@x.722 = common global i32 0
@y.723 = common global i32 0
@x.724 = common global i32 0
@y.725 = common global i32 0
@x.726 = common global i32 0
@y.727 = common global i32 0
@x.728 = common global i32 0
@y.729 = common global i32 0
@x.730 = common global i32 0
@y.731 = common global i32 0
@x.732 = common global i32 0
@y.733 = common global i32 0
@x.734 = common global i32 0
@y.735 = common global i32 0
@x.736 = common global i32 0
@y.737 = common global i32 0
@x.738 = common global i32 0
@y.739 = common global i32 0
@x.740 = common global i32 0
@y.741 = common global i32 0
@x.742 = common global i32 0
@y.743 = common global i32 0
@x.744 = common global i32 0
@y.745 = common global i32 0
@x.746 = common global i32 0
@y.747 = common global i32 0
@x.748 = common global i32 0
@y.749 = common global i32 0
@x.750 = common global i32 0
@y.751 = common global i32 0
@x.752 = common global i32 0
@y.753 = common global i32 0
@x.754 = common global i32 0
@y.755 = common global i32 0
@x.756 = common global i32 0
@y.757 = common global i32 0
@x.758 = common global i32 0
@y.759 = common global i32 0
@x.760 = common global i32 0
@y.761 = common global i32 0
@x.762 = common global i32 0
@y.763 = common global i32 0
@x.764 = common global i32 0
@y.765 = common global i32 0
@x.766 = common global i32 0
@y.767 = common global i32 0
@x.768 = common global i32 0
@y.769 = common global i32 0
@x.770 = common global i32 0
@y.771 = common global i32 0
@x.772 = common global i32 0
@y.773 = common global i32 0
@x.774 = common global i32 0
@y.775 = common global i32 0
@x.776 = common global i32 0
@y.777 = common global i32 0
@x.778 = common global i32 0
@y.779 = common global i32 0
@x.780 = common global i32 0
@y.781 = common global i32 0
@x.782 = common global i32 0
@y.783 = common global i32 0
@x.784 = common global i32 0
@y.785 = common global i32 0
@x.786 = common global i32 0
@y.787 = common global i32 0
@x.788 = common global i32 0
@y.789 = common global i32 0
@x.790 = common global i32 0
@y.791 = common global i32 0
@x.792 = common global i32 0
@y.793 = common global i32 0
@x.794 = common global i32 0
@y.795 = common global i32 0
@x.796 = common global i32 0
@y.797 = common global i32 0
@x.798 = common global i32 0
@y.799 = common global i32 0
@x.800 = common global i32 0
@y.801 = common global i32 0
@x.802 = common global i32 0
@y.803 = common global i32 0
@x.804 = common global i32 0
@y.805 = common global i32 0
@x.806 = common global i32 0
@y.807 = common global i32 0
@x.808 = common global i32 0
@y.809 = common global i32 0
@x.810 = common global i32 0
@y.811 = common global i32 0
@x.812 = common global i32 0
@y.813 = common global i32 0
@x.814 = common global i32 0
@y.815 = common global i32 0
@x.816 = common global i32 0
@y.817 = common global i32 0
@x.818 = common global i32 0
@y.819 = common global i32 0
@x.820 = common global i32 0
@y.821 = common global i32 0
@x.822 = common global i32 0
@y.823 = common global i32 0
@x.824 = common global i32 0
@y.825 = common global i32 0
@x.826 = common global i32 0
@y.827 = common global i32 0
@x.828 = common global i32 0
@y.829 = common global i32 0
@x.830 = common global i32 0
@y.831 = common global i32 0
@x.832 = common global i32 0
@y.833 = common global i32 0
@x.834 = common global i32 0
@y.835 = common global i32 0
@x.836 = common global i32 0
@y.837 = common global i32 0
@x.838 = common global i32 0
@y.839 = common global i32 0
@x.840 = common global i32 0
@y.841 = common global i32 0
@x.842 = common global i32 0
@y.843 = common global i32 0
@x.844 = common global i32 0
@y.845 = common global i32 0
@x.846 = common global i32 0
@y.847 = common global i32 0
@x.848 = common global i32 0
@y.849 = common global i32 0
@x.850 = common global i32 0
@y.851 = common global i32 0
@x.852 = common global i32 0
@y.853 = common global i32 0
@x.854 = common global i32 0
@y.855 = common global i32 0
@x.856 = common global i32 0
@y.857 = common global i32 0
@x.858 = common global i32 0
@y.859 = common global i32 0
@x.860 = common global i32 0
@y.861 = common global i32 0
@x.862 = common global i32 0
@y.863 = common global i32 0
@x.864 = common global i32 0
@y.865 = common global i32 0
@x.866 = common global i32 0
@y.867 = common global i32 0

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @_ZltRK4EdgeS1_(%struct.Edge* dereferenceable(24), %struct.Edge* dereferenceable(24)) #0 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca i1, align 1
  %9 = alloca %struct.Edge*, align 8
  %10 = alloca %struct.Edge*, align 8
  store %struct.Edge* %0, %struct.Edge** %9, align 8
  store %struct.Edge* %1, %struct.Edge** %10, align 8
  %11 = load %struct.Edge*, %struct.Edge** %9, align 8
  %12 = getelementptr inbounds %struct.Edge, %struct.Edge* %11, i32 0, i32 2
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %7
  %14 = load %struct.Edge*, %struct.Edge** %10, align 8
  %15 = getelementptr inbounds %struct.Edge, %struct.Edge* %14, i32 0, i32 2
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %6
  %17 = alloca i32
  store i32 565195008, i32* %17
  %18 = alloca i1
  br label %19

; <label>:19:                                     ; preds = %2, %222
  %20 = load i32, i32* %17
  switch i32 %20, label %21 [
    i32 565195008, label %22
    i32 2061896203, label %27
    i32 1073985203, label %35
    i32 -508113538, label %63
    i32 -834742168, label %98
    i32 -1807923943, label %101
    i32 720472317, label %109
    i32 -2033679585, label %117
    i32 331420485, label %134
    i32 616440468, label %163
    i32 1073059900, label %164
    i32 -1059078588, label %179
    i32 -884520902, label %208
    i32 1992038829, label %210
    i32 -1035655318, label %218
    i32 561790349, label %220
  ]

; <label>:21:                                     ; preds = %19
  br label %222

; <label>:22:                                     ; preds = %19
  %23 = load volatile i64, i64* %7
  %24 = load volatile i64, i64* %6
  %25 = icmp ne i64 %23, %24
  %26 = select i1 %25, i32 2061896203, i32 1073985203
  store i32 %26, i32* %17
  br label %222

; <label>:27:                                     ; preds = %19
  %28 = load %struct.Edge*, %struct.Edge** %9, align 8
  %29 = getelementptr inbounds %struct.Edge, %struct.Edge* %28, i32 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = load %struct.Edge*, %struct.Edge** %10, align 8
  %32 = getelementptr inbounds %struct.Edge, %struct.Edge* %31, i32 0, i32 2
  %33 = load i64, i64* %32, align 8
  %34 = icmp sgt i64 %30, %33
  store i1 %34, i1* %8, align 1
  store i32 1073059900, i32* %17
  br label %222

; <label>:35:                                     ; preds = %19
  %36 = load i32, i32* @x
  %37 = load i32, i32* @y
  %38 = sub i32 %36, 2050250761
  %39 = sub i32 %38, 1
  %40 = add i32 %39, 2050250761
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 -508113538, i32 1992038829
  store i32 %62, i32* %17
  br label %222

; <label>:63:                                     ; preds = %19
  %64 = load %struct.Edge*, %struct.Edge** %9, align 8
  %65 = getelementptr inbounds %struct.Edge, %struct.Edge* %64, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = load %struct.Edge*, %struct.Edge** %10, align 8
  %68 = getelementptr inbounds %struct.Edge, %struct.Edge* %67, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = icmp ne i64 %66, %69
  store i1 %70, i1* %5
  %71 = load i32, i32* @x
  %72 = load i32, i32* @y
  %73 = add i32 %71, -1248850937
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, -1248850937
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 false, true
  %84 = and i1 %81, false
  %85 = and i1 %79, %83
  %86 = and i1 %82, false
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 false, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  %97 = select i1 %95, i32 -834742168, i32 1992038829
  store i32 %97, i32* %17
  br label %222

; <label>:98:                                     ; preds = %19
  %99 = load volatile i1, i1* %5
  %100 = select i1 %99, i32 -1807923943, i32 720472317
  store i32 %100, i32* %17
  br label %222

; <label>:101:                                    ; preds = %19
  %102 = load %struct.Edge*, %struct.Edge** %9, align 8
  %103 = getelementptr inbounds %struct.Edge, %struct.Edge* %102, i32 0, i32 0
  %104 = load i64, i64* %103, align 8
  %105 = load %struct.Edge*, %struct.Edge** %10, align 8
  %106 = getelementptr inbounds %struct.Edge, %struct.Edge* %105, i32 0, i32 0
  %107 = load i64, i64* %106, align 8
  %108 = icmp ult i64 %104, %107
  store i32 -2033679585, i32* %17
  store i1 %108, i1* %18
  br label %222

; <label>:109:                                    ; preds = %19
  %110 = load %struct.Edge*, %struct.Edge** %9, align 8
  %111 = getelementptr inbounds %struct.Edge, %struct.Edge* %110, i32 0, i32 1
  %112 = load i64, i64* %111, align 8
  %113 = load %struct.Edge*, %struct.Edge** %10, align 8
  %114 = getelementptr inbounds %struct.Edge, %struct.Edge* %113, i32 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = icmp ult i64 %112, %115
  store i32 -2033679585, i32* %17
  store i1 %116, i1* %18
  br label %222

; <label>:117:                                    ; preds = %19
  %118 = load i1, i1* %18
  store i1 %118, i1* %3
  %119 = load i32, i32* @x
  %120 = load i32, i32* @y
  %121 = sub i32 %119, 1514537132
  %122 = sub i32 %121, 1
  %123 = add i32 %122, 1514537132
  %124 = sub i32 %119, 1
  %125 = mul i32 %119, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %120, 10
  %129 = and i1 %127, %128
  %130 = xor i1 %127, %128
  %131 = or i1 %129, %130
  %132 = or i1 %127, %128
  %133 = select i1 %131, i32 331420485, i32 -1035655318
  store i32 %133, i32* %17
  br label %222

; <label>:134:                                    ; preds = %19
  %135 = load volatile i1, i1* %3
  store i1 %135, i1* %8, align 1
  %136 = load i32, i32* @x
  %137 = load i32, i32* @y
  %138 = sub i32 %136, 1845161467
  %139 = sub i32 %138, 1
  %140 = add i32 %139, 1845161467
  %141 = sub i32 %136, 1
  %142 = mul i32 %136, %140
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %137, 10
  %146 = xor i1 %144, true
  %147 = xor i1 %145, true
  %148 = xor i1 true, true
  %149 = and i1 %146, true
  %150 = and i1 %144, %148
  %151 = and i1 %147, true
  %152 = and i1 %145, %148
  %153 = or i1 %149, %150
  %154 = or i1 %151, %152
  %155 = xor i1 %153, %154
  %156 = or i1 %146, %147
  %157 = xor i1 %156, true
  %158 = or i1 true, %148
  %159 = and i1 %157, %158
  %160 = or i1 %155, %159
  %161 = or i1 %144, %145
  %162 = select i1 %160, i32 616440468, i32 -1035655318
  store i32 %162, i32* %17
  br label %222

; <label>:163:                                    ; preds = %19
  store i32 1073059900, i32* %17
  br label %222

; <label>:164:                                    ; preds = %19
  %165 = load i32, i32* @x
  %166 = load i32, i32* @y
  %167 = sub i32 0, 1
  %168 = add i32 %165, %167
  %169 = sub i32 %165, 1
  %170 = mul i32 %165, %168
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %166, 10
  %174 = and i1 %172, %173
  %175 = xor i1 %172, %173
  %176 = or i1 %174, %175
  %177 = or i1 %172, %173
  %178 = select i1 %176, i32 -1059078588, i32 561790349
  store i32 %178, i32* %17
  br label %222

; <label>:179:                                    ; preds = %19
  %180 = load i1, i1* %8, align 1
  store i1 %180, i1* %4
  %181 = load i32, i32* @x
  %182 = load i32, i32* @y
  %183 = add i32 %181, -667275877
  %184 = sub i32 %183, 1
  %185 = sub i32 %184, -667275877
  %186 = sub i32 %181, 1
  %187 = mul i32 %181, %185
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %182, 10
  %191 = xor i1 %189, true
  %192 = xor i1 %190, true
  %193 = xor i1 false, true
  %194 = and i1 %191, false
  %195 = and i1 %189, %193
  %196 = and i1 %192, false
  %197 = and i1 %190, %193
  %198 = or i1 %194, %195
  %199 = or i1 %196, %197
  %200 = xor i1 %198, %199
  %201 = or i1 %191, %192
  %202 = xor i1 %201, true
  %203 = or i1 false, %193
  %204 = and i1 %202, %203
  %205 = or i1 %200, %204
  %206 = or i1 %189, %190
  %207 = select i1 %205, i32 -884520902, i32 561790349
  store i32 %207, i32* %17
  br label %222

; <label>:208:                                    ; preds = %19
  %209 = load volatile i1, i1* %4
  ret i1 %209

; <label>:210:                                    ; preds = %19
  %211 = load %struct.Edge*, %struct.Edge** %9, align 8
  %212 = getelementptr inbounds %struct.Edge, %struct.Edge* %211, i32 0, i32 0
  %213 = load i64, i64* %212, align 8
  %214 = load %struct.Edge*, %struct.Edge** %10, align 8
  %215 = getelementptr inbounds %struct.Edge, %struct.Edge* %214, i32 0, i32 0
  %216 = load i64, i64* %215, align 8
  %217 = icmp ne i64 %213, %216
  store i32 -508113538, i32* %17
  br label %222

; <label>:218:                                    ; preds = %19
  %219 = load volatile i1, i1* %3
  store i1 %219, i1* %8, align 1
  store i32 331420485, i32* %17
  br label %222

; <label>:220:                                    ; preds = %19
  %221 = load i1, i1* %8, align 1
  store i32 -1059078588, i32* %17
  br label %222

; <label>:222:                                    ; preds = %220, %218, %210, %179, %164, %163, %134, %117, %109, %101, %98, %63, %35, %27, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define void @_Z4joinRSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEmmx(%"class.std::vector"* dereferenceable(24), i64, i64, i64) #1 {
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.6
  %8 = load i32, i32* @y.7
  %9 = add i32 %7, 338008412
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 338008412
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -745405142, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %95
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -745405142, label %21
    i32 1458066016, label %29
    i32 1888938064, label %75
    i32 -350460879, label %76
  ]

; <label>:20:                                     ; preds = %18
  br label %95

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 1458066016, i32 -350460879
  store i32 %28, i32* %17
  br label %95

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::vector"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca i64, align 8
  %33 = alloca i64, align 8
  %34 = alloca %struct.Edge, align 8
  %35 = alloca %struct.Edge, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %30, align 8
  store i64 %1, i64* %31, align 8
  store i64 %2, i64* %32, align 8
  store i64 %3, i64* %33, align 8
  %36 = load %"class.std::vector"*, %"class.std::vector"** %30, align 8
  %37 = load i64, i64* %31, align 8
  %38 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEixEm(%"class.std::vector"* %36, i64 %37) #10
  %39 = load i64, i64* %31, align 8
  %40 = load i64, i64* %32, align 8
  %41 = load i64, i64* %33, align 8
  call void @_ZN4EdgeC2Emmx(%struct.Edge* %34, i64 %39, i64 %40, i64 %41)
  call void @_ZNSt6vectorI4EdgeSaIS0_EE9push_backEOS0_(%"class.std::vector.0"* %38, %struct.Edge* dereferenceable(24) %34)
  %42 = load %"class.std::vector"*, %"class.std::vector"** %30, align 8
  %43 = load i64, i64* %32, align 8
  %44 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEixEm(%"class.std::vector"* %42, i64 %43) #10
  %45 = load i64, i64* %32, align 8
  %46 = load i64, i64* %31, align 8
  %47 = load i64, i64* %33, align 8
  call void @_ZN4EdgeC2Emmx(%struct.Edge* %35, i64 %45, i64 %46, i64 %47)
  call void @_ZNSt6vectorI4EdgeSaIS0_EE9push_backEOS0_(%"class.std::vector.0"* %44, %struct.Edge* dereferenceable(24) %35)
  %48 = load i32, i32* @x.6
  %49 = load i32, i32* @y.7
  %50 = add i32 %48, -884585845
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, -884585845
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 1888938064, i32 -350460879
  store i32 %74, i32* %17
  br label %95

; <label>:75:                                     ; preds = %18
  ret void

; <label>:76:                                     ; preds = %18
  %77 = alloca %"class.std::vector"*, align 8
  %78 = alloca i64, align 8
  %79 = alloca i64, align 8
  %80 = alloca i64, align 8
  %81 = alloca %struct.Edge, align 8
  %82 = alloca %struct.Edge, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %77, align 8
  store i64 %1, i64* %78, align 8
  store i64 %2, i64* %79, align 8
  store i64 %3, i64* %80, align 8
  %83 = load %"class.std::vector"*, %"class.std::vector"** %77, align 8
  %84 = load i64, i64* %78, align 8
  %85 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEixEm(%"class.std::vector"* %83, i64 %84) #10
  %86 = load i64, i64* %78, align 8
  %87 = load i64, i64* %79, align 8
  %88 = load i64, i64* %80, align 8
  call void @_ZN4EdgeC2Emmx(%struct.Edge* %81, i64 %86, i64 %87, i64 %88)
  call void @_ZNSt6vectorI4EdgeSaIS0_EE9push_backEOS0_(%"class.std::vector.0"* %85, %struct.Edge* dereferenceable(24) %81)
  %89 = load %"class.std::vector"*, %"class.std::vector"** %77, align 8
  %90 = load i64, i64* %79, align 8
  %91 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEixEm(%"class.std::vector"* %89, i64 %90) #10
  %92 = load i64, i64* %79, align 8
  %93 = load i64, i64* %78, align 8
  %94 = load i64, i64* %80, align 8
  call void @_ZN4EdgeC2Emmx(%struct.Edge* %82, i64 %92, i64 %93, i64 %94)
  call void @_ZNSt6vectorI4EdgeSaIS0_EE9push_backEOS0_(%"class.std::vector.0"* %91, %struct.Edge* dereferenceable(24) %82)
  store i32 1458066016, i32* %17
  br label %95

; <label>:95:                                     ; preds = %76, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEixEm(%"class.std::vector"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.8
  %7 = load i32, i32* @y.9
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1356956161, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1356956161, label %19
    i32 423195970, label %27
    i32 -656822250, label %52
    i32 2145228844, label %54
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 423195970, i32 2145228844
  store i32 %26, i32* %15
  br label %64

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector"*, align 8
  %29 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"class.std::vector"*, %"class.std::vector"** %28, align 8
  %31 = bitcast %"class.std::vector"* %30 to %"struct.std::_Vector_base"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %32, i32 0, i32 0
  %34 = load %"class.std::vector.0"*, %"class.std::vector.0"** %33, align 8
  %35 = load i64, i64* %29, align 8
  %36 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %34, i64 %35
  store %"class.std::vector.0"* %36, %"class.std::vector.0"** %3
  %37 = load i32, i32* @x.8
  %38 = load i32, i32* @y.9
  %39 = sub i32 %37, -817702453
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -817702453
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 -656822250, i32 2145228844
  store i32 %51, i32* %15
  br label %64

; <label>:52:                                     ; preds = %16
  %53 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %3
  ret %"class.std::vector.0"* %53

; <label>:54:                                     ; preds = %16
  %55 = alloca %"class.std::vector"*, align 8
  %56 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %55, align 8
  store i64 %1, i64* %56, align 8
  %57 = load %"class.std::vector"*, %"class.std::vector"** %55, align 8
  %58 = bitcast %"class.std::vector"* %57 to %"struct.std::_Vector_base"*
  %59 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %58, i32 0, i32 0
  %60 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %59, i32 0, i32 0
  %61 = load %"class.std::vector.0"*, %"class.std::vector.0"** %60, align 8
  %62 = load i64, i64* %56, align 8
  %63 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %61, i64 %62
  store i32 423195970, i32* %15
  br label %64

; <label>:64:                                     ; preds = %54, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI4EdgeSaIS0_EE9push_backEOS0_(%"class.std::vector.0"*, %struct.Edge* dereferenceable(24)) #1 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %struct.Edge*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store %struct.Edge* %1, %struct.Edge** %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = load %struct.Edge*, %struct.Edge** %4, align 8
  %7 = call dereferenceable(24) %struct.Edge* @_ZSt4moveIR4EdgeEONSt16remove_referenceIT_E4typeEOS3_(%struct.Edge* dereferenceable(24) %6) #10
  call void @_ZNSt6vectorI4EdgeSaIS0_EE12emplace_backIJS0_EEEvDpOT_(%"class.std::vector.0"* %5, %struct.Edge* dereferenceable(24) %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN4EdgeC2Emmx(%struct.Edge*, i64, i64, i64) unnamed_addr #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.12
  %8 = load i32, i32* @y.13
  %9 = add i32 %7, -1777048270
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -1777048270
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 297928748, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %92
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 297928748, label %21
    i32 -524453589, label %41
    i32 371788582, label %79
    i32 -1760527988, label %80
  ]

; <label>:20:                                     ; preds = %18
  br label %92

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -524453589, i32 -1760527988
  store i32 %40, i32* %17
  br label %92

; <label>:41:                                     ; preds = %18
  %42 = alloca %struct.Edge*, align 8
  %43 = alloca i64, align 8
  %44 = alloca i64, align 8
  %45 = alloca i64, align 8
  store %struct.Edge* %0, %struct.Edge** %42, align 8
  store i64 %1, i64* %43, align 8
  store i64 %2, i64* %44, align 8
  store i64 %3, i64* %45, align 8
  %46 = load %struct.Edge*, %struct.Edge** %42, align 8
  %47 = getelementptr inbounds %struct.Edge, %struct.Edge* %46, i32 0, i32 0
  %48 = load i64, i64* %43, align 8
  store i64 %48, i64* %47, align 8
  %49 = getelementptr inbounds %struct.Edge, %struct.Edge* %46, i32 0, i32 1
  %50 = load i64, i64* %44, align 8
  store i64 %50, i64* %49, align 8
  %51 = getelementptr inbounds %struct.Edge, %struct.Edge* %46, i32 0, i32 2
  %52 = load i64, i64* %45, align 8
  store i64 %52, i64* %51, align 8
  %53 = load i32, i32* @x.12
  %54 = load i32, i32* @y.13
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 371788582, i32 -1760527988
  store i32 %78, i32* %17
  br label %92

; <label>:79:                                     ; preds = %18
  ret void

; <label>:80:                                     ; preds = %18
  %81 = alloca %struct.Edge*, align 8
  %82 = alloca i64, align 8
  %83 = alloca i64, align 8
  %84 = alloca i64, align 8
  store %struct.Edge* %0, %struct.Edge** %81, align 8
  store i64 %1, i64* %82, align 8
  store i64 %2, i64* %83, align 8
  store i64 %3, i64* %84, align 8
  %85 = load %struct.Edge*, %struct.Edge** %81, align 8
  %86 = getelementptr inbounds %struct.Edge, %struct.Edge* %85, i32 0, i32 0
  %87 = load i64, i64* %82, align 8
  store i64 %87, i64* %86, align 8
  %88 = getelementptr inbounds %struct.Edge, %struct.Edge* %85, i32 0, i32 1
  %89 = load i64, i64* %83, align 8
  store i64 %89, i64* %88, align 8
  %90 = getelementptr inbounds %struct.Edge, %struct.Edge* %85, i32 0, i32 2
  %91 = load i64, i64* %84, align 8
  store i64 %91, i64* %90, align 8
  store i32 -524453589, i32* %17
  br label %92

; <label>:92:                                     ; preds = %80, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define void @_Z7connectRSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEmmx(%"class.std::vector"* dereferenceable(24), i64, i64, i64) #1 {
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.Edge, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %5, align 8
  store i64 %1, i64* %6, align 8
  store i64 %2, i64* %7, align 8
  store i64 %3, i64* %8, align 8
  %10 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %11 = load i64, i64* %6, align 8
  %12 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEixEm(%"class.std::vector"* %10, i64 %11) #10
  %13 = load i64, i64* %6, align 8
  %14 = load i64, i64* %7, align 8
  %15 = load i64, i64* %8, align 8
  call void @_ZN4EdgeC2Emmx(%struct.Edge* %9, i64 %13, i64 %14, i64 %15)
  call void @_ZNSt6vectorI4EdgeSaIS0_EE9push_backEOS0_(%"class.std::vector.0"* %12, %struct.Edge* dereferenceable(24) %9)
  ret void
}

; Function Attrs: noinline uwtable
define void @_Z17shortest_distanceSt6vectorIS_I4EdgeSaIS0_EESaIS2_EE(%"class.std::vector.5"* noalias sret, %"class.std::vector"*) #1 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::vector.10", align 8
  %5 = alloca %"class.std::allocator.12", align 1
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"class.std::vector.0"*, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %struct.Edge*, align 8
  %14 = alloca i32
  %15 = alloca i64, align 8
  %16 = alloca %"class.std::vector.0"*, align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %19 = alloca %struct.Edge*, align 8
  %20 = alloca %"class.std::vector.5", align 8
  %21 = alloca %"class.std::vector.10", align 8
  %22 = alloca i64, align 8
  %23 = alloca %"class.std::allocator.12", align 1
  %24 = alloca %"class.std::allocator.7", align 1
  %25 = alloca %"class.std::vector.15", align 8
  %26 = alloca %"class.std::vector.20", align 8
  %27 = alloca i64, align 8
  %28 = alloca %"class.std::allocator.22", align 1
  %29 = alloca %"class.std::allocator.17", align 1
  %30 = alloca i64, align 8
  %31 = alloca %"class.std::priority_queue", align 8
  %32 = alloca %"struct.std::less", align 1
  %33 = alloca %"class.std::deque", align 8
  %34 = alloca %struct.Edge, align 8
  %35 = alloca %struct.Edge, align 8
  %36 = alloca %"class.std::vector.0"*, align 8
  %37 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %38 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %39 = alloca %struct.Edge*, align 8
  %40 = alloca %struct.Edge, align 8
  %41 = alloca i64, align 8
  %42 = call i64 @_ZNKSt6vectorIS_I4EdgeSaIS0_EESaIS2_EE4sizeEv(%"class.std::vector"* %1) #10
  store i64 %42, i64* %3, align 8
  %43 = load i64, i64* %3, align 8
  call void @_ZNSaIxEC2Ev(%"class.std::allocator.12"* %5) #10
  invoke void @_ZNSt6vectorIxSaIxEEC2EmRKS0_(%"class.std::vector.10"* %4, i64 %43, %"class.std::allocator.12"* dereferenceable(1) %5)
          to label %44 unwind label %194

; <label>:44:                                     ; preds = %2
  call void @_ZNSaIxED2Ev(%"class.std::allocator.12"* %5) #10
  store i64 0, i64* %8, align 8
  br label %45

; <label>:45:                                     ; preds = %338, %44
  %46 = load i64, i64* %8, align 8
  %47 = load i64, i64* %3, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %339

; <label>:49:                                     ; preds = %45
  store i64 0, i64* %9, align 8
  br label %50

; <label>:50:                                     ; preds = %291, %49
  %51 = load i32, i32* @x.16
  %52 = load i32, i32* @y.17
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  br i1 %74, label %76, label %1362

; <label>:76:                                     ; preds = %50, %1362
  %77 = load i64, i64* %9, align 8
  %78 = load i64, i64* %3, align 8
  %79 = icmp ult i64 %77, %78
  %80 = load i32, i32* @x.16
  %81 = load i32, i32* @y.17
  %82 = sub i32 %80, -2096140189
  %83 = sub i32 %82, 1
  %84 = add i32 %83, -2096140189
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  br i1 %92, label %94, label %1362

; <label>:94:                                     ; preds = %76
  br i1 %79, label %95, label %292

; <label>:95:                                     ; preds = %94
  %96 = load i32, i32* @x.16
  %97 = load i32, i32* @y.17
  %98 = sub i32 %96, -521064266
  %99 = sub i32 %98, 1
  %100 = add i32 %99, -521064266
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = xor i1 %104, true
  %107 = xor i1 %105, true
  %108 = xor i1 false, true
  %109 = and i1 %106, false
  %110 = and i1 %104, %108
  %111 = and i1 %107, false
  %112 = and i1 %105, %108
  %113 = or i1 %109, %110
  %114 = or i1 %111, %112
  %115 = xor i1 %113, %114
  %116 = or i1 %106, %107
  %117 = xor i1 %116, true
  %118 = or i1 false, %108
  %119 = and i1 %117, %118
  %120 = or i1 %115, %119
  %121 = or i1 %104, %105
  br i1 %120, label %122, label %1366

; <label>:122:                                    ; preds = %95, %1366
  %123 = load i64, i64* %9, align 8
  %124 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEixEm(%"class.std::vector"* %1, i64 %123) #10
  store %"class.std::vector.0"* %124, %"class.std::vector.0"** %10, align 8
  %125 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  %126 = call %struct.Edge* @_ZNSt6vectorI4EdgeSaIS0_EE5beginEv(%"class.std::vector.0"* %125) #10
  %127 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  store %struct.Edge* %126, %struct.Edge** %127, align 8
  %128 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  %129 = call %struct.Edge* @_ZNSt6vectorI4EdgeSaIS0_EE3endEv(%"class.std::vector.0"* %128) #10
  %130 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  store %struct.Edge* %129, %struct.Edge** %130, align 8
  %131 = load i32, i32* @x.16
  %132 = load i32, i32* @y.17
  %133 = add i32 %131, 1657575439
  %134 = sub i32 %133, 1
  %135 = sub i32 %134, 1657575439
  %136 = sub i32 %131, 1
  %137 = mul i32 %131, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %132, 10
  %141 = and i1 %139, %140
  %142 = xor i1 %139, %140
  %143 = or i1 %141, %142
  %144 = or i1 %139, %140
  br i1 %143, label %145, label %1366

; <label>:145:                                    ; preds = %122
  br label %146

; <label>:146:                                    ; preds = %241, %145
  %147 = call zeroext i1 @_ZN9__gnu_cxxneIP4EdgeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %11, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %12) #10
  br i1 %147, label %148, label %243

; <label>:148:                                    ; preds = %146
  %149 = call dereferenceable(24) %struct.Edge* @_ZNK9__gnu_cxx17__normal_iteratorIP4EdgeSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %11) #10
  store %struct.Edge* %149, %struct.Edge** %13, align 8
  %150 = load %struct.Edge*, %struct.Edge** %13, align 8
  %151 = getelementptr inbounds %struct.Edge, %struct.Edge* %150, i32 0, i32 1
  %152 = load i64, i64* %151, align 8
  %153 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.10"* %4, i64 %152) #10
  %154 = load i64, i64* %153, align 8
  %155 = load %struct.Edge*, %struct.Edge** %13, align 8
  %156 = getelementptr inbounds %struct.Edge, %struct.Edge* %155, i32 0, i32 0
  %157 = load i64, i64* %156, align 8
  %158 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.10"* %4, i64 %157) #10
  %159 = load i64, i64* %158, align 8
  %160 = load %struct.Edge*, %struct.Edge** %13, align 8
  %161 = getelementptr inbounds %struct.Edge, %struct.Edge* %160, i32 0, i32 2
  %162 = load i64, i64* %161, align 8
  %163 = sub i64 0, %159
  %164 = sub i64 0, %162
  %165 = add i64 %163, %164
  %166 = sub i64 0, %165
  %167 = add nsw i64 %159, %162
  %168 = icmp sgt i64 %154, %166
  br i1 %168, label %169, label %240

; <label>:169:                                    ; preds = %148
  %170 = load %struct.Edge*, %struct.Edge** %13, align 8
  %171 = getelementptr inbounds %struct.Edge, %struct.Edge* %170, i32 0, i32 0
  %172 = load i64, i64* %171, align 8
  %173 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.10"* %4, i64 %172) #10
  %174 = load i64, i64* %173, align 8
  %175 = load %struct.Edge*, %struct.Edge** %13, align 8
  %176 = getelementptr inbounds %struct.Edge, %struct.Edge* %175, i32 0, i32 2
  %177 = load i64, i64* %176, align 8
  %178 = sub i64 0, %174
  %179 = sub i64 0, %177
  %180 = add i64 %178, %179
  %181 = sub i64 0, %180
  %182 = add nsw i64 %174, %177
  %183 = load %struct.Edge*, %struct.Edge** %13, align 8
  %184 = getelementptr inbounds %struct.Edge, %struct.Edge* %183, i32 0, i32 1
  %185 = load i64, i64* %184, align 8
  %186 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.10"* %4, i64 %185) #10
  store i64 %181, i64* %186, align 8
  %187 = load i64, i64* %8, align 8
  %188 = load i64, i64* %3, align 8
  %189 = sub i64 0, 1
  %190 = add i64 %188, %189
  %191 = sub i64 %188, 1
  %192 = icmp eq i64 %187, %190
  br i1 %192, label %193, label %198

; <label>:193:                                    ; preds = %169
  call void @_ZNSt6vectorIS_IxSaIxEESaIS1_EEC2Ev(%"class.std::vector.5"* %0) #10
  store i32 1, i32* %14, align 4
  br label %1355

; <label>:194:                                    ; preds = %2
  %195 = landingpad { i8*, i32 }
          cleanup
  %196 = extractvalue { i8*, i32 } %195, 0
  store i8* %196, i8** %6, align 8
  %197 = extractvalue { i8*, i32 } %195, 1
  store i32 %197, i32* %7, align 4
  call void @_ZNSaIxED2Ev(%"class.std::allocator.12"* %5) #10
  br label %1357

; <label>:198:                                    ; preds = %169
  %199 = load i32, i32* @x.16
  %200 = load i32, i32* @y.17
  %201 = sub i32 0, 1
  %202 = add i32 %199, %201
  %203 = sub i32 %199, 1
  %204 = mul i32 %199, %202
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %200, 10
  %208 = xor i1 %206, true
  %209 = xor i1 %207, true
  %210 = xor i1 true, true
  %211 = and i1 %208, true
  %212 = and i1 %206, %210
  %213 = and i1 %209, true
  %214 = and i1 %207, %210
  %215 = or i1 %211, %212
  %216 = or i1 %213, %214
  %217 = xor i1 %215, %216
  %218 = or i1 %208, %209
  %219 = xor i1 %218, true
  %220 = or i1 true, %210
  %221 = and i1 %219, %220
  %222 = or i1 %217, %221
  %223 = or i1 %206, %207
  br i1 %222, label %224, label %1375

; <label>:224:                                    ; preds = %198, %1375
  %225 = load i32, i32* @x.16
  %226 = load i32, i32* @y.17
  %227 = add i32 %225, 216859250
  %228 = sub i32 %227, 1
  %229 = sub i32 %228, 216859250
  %230 = sub i32 %225, 1
  %231 = mul i32 %225, %229
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %226, 10
  %235 = and i1 %233, %234
  %236 = xor i1 %233, %234
  %237 = or i1 %235, %236
  %238 = or i1 %233, %234
  br i1 %237, label %239, label %1375

; <label>:239:                                    ; preds = %224
  br label %240

; <label>:240:                                    ; preds = %239, %148
  br label %241

; <label>:241:                                    ; preds = %240
  %242 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIP4EdgeSt6vectorIS1_SaIS1_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %11) #10
  br label %146

; <label>:243:                                    ; preds = %146
  br label %244

; <label>:244:                                    ; preds = %243
  %245 = load i32, i32* @x.16
  %246 = load i32, i32* @y.17
  %247 = add i32 %245, -1098989101
  %248 = sub i32 %247, 1
  %249 = sub i32 %248, -1098989101
  %250 = sub i32 %245, 1
  %251 = mul i32 %245, %249
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %246, 10
  %255 = xor i1 %253, true
  %256 = xor i1 %254, true
  %257 = xor i1 false, true
  %258 = and i1 %255, false
  %259 = and i1 %253, %257
  %260 = and i1 %256, false
  %261 = and i1 %254, %257
  %262 = or i1 %258, %259
  %263 = or i1 %260, %261
  %264 = xor i1 %262, %263
  %265 = or i1 %255, %256
  %266 = xor i1 %265, true
  %267 = or i1 false, %257
  %268 = and i1 %266, %267
  %269 = or i1 %264, %268
  %270 = or i1 %253, %254
  br i1 %269, label %271, label %1376

; <label>:271:                                    ; preds = %244, %1376
  %272 = load i64, i64* %9, align 8
  %273 = sub i64 0, %272
  %274 = sub i64 0, 1
  %275 = add i64 %273, %274
  %276 = sub i64 0, %275
  %277 = add i64 %272, 1
  store i64 %276, i64* %9, align 8
  %278 = load i32, i32* @x.16
  %279 = load i32, i32* @y.17
  %280 = sub i32 0, 1
  %281 = add i32 %278, %280
  %282 = sub i32 %278, 1
  %283 = mul i32 %278, %281
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %279, 10
  %287 = and i1 %285, %286
  %288 = xor i1 %285, %286
  %289 = or i1 %287, %288
  %290 = or i1 %285, %286
  br i1 %289, label %291, label %1376

; <label>:291:                                    ; preds = %271
  br label %50

; <label>:292:                                    ; preds = %94
  br label %293

; <label>:293:                                    ; preds = %292
  %294 = load i32, i32* @x.16
  %295 = load i32, i32* @y.17
  %296 = sub i32 0, 1
  %297 = add i32 %294, %296
  %298 = sub i32 %294, 1
  %299 = mul i32 %294, %297
  %300 = urem i32 %299, 2
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %295, 10
  %303 = xor i1 %301, true
  %304 = xor i1 %302, true
  %305 = xor i1 true, true
  %306 = and i1 %303, true
  %307 = and i1 %301, %305
  %308 = and i1 %304, true
  %309 = and i1 %302, %305
  %310 = or i1 %306, %307
  %311 = or i1 %308, %309
  %312 = xor i1 %310, %311
  %313 = or i1 %303, %304
  %314 = xor i1 %313, true
  %315 = or i1 true, %305
  %316 = and i1 %314, %315
  %317 = or i1 %312, %316
  %318 = or i1 %301, %302
  br i1 %317, label %319, label %1407

; <label>:319:                                    ; preds = %293, %1407
  %320 = load i64, i64* %8, align 8
  %321 = sub i64 0, 1
  %322 = sub i64 %320, %321
  %323 = add i64 %320, 1
  store i64 %322, i64* %8, align 8
  %324 = load i32, i32* @x.16
  %325 = load i32, i32* @y.17
  %326 = sub i32 %324, 127103758
  %327 = sub i32 %326, 1
  %328 = add i32 %327, 127103758
  %329 = sub i32 %324, 1
  %330 = mul i32 %324, %328
  %331 = urem i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %325, 10
  %334 = and i1 %332, %333
  %335 = xor i1 %332, %333
  %336 = or i1 %334, %335
  %337 = or i1 %332, %333
  br i1 %336, label %338, label %1407

; <label>:338:                                    ; preds = %319
  br label %45

; <label>:339:                                    ; preds = %45
  store i64 0, i64* %15, align 8
  br label %340

; <label>:340:                                    ; preds = %491, %339
  %341 = load i64, i64* %15, align 8
  %342 = load i64, i64* %3, align 8
  %343 = icmp ult i64 %341, %342
  br i1 %343, label %344, label %496

; <label>:344:                                    ; preds = %340
  %345 = load i32, i32* @x.16
  %346 = load i32, i32* @y.17
  %347 = sub i32 0, 1
  %348 = add i32 %345, %347
  %349 = sub i32 %345, 1
  %350 = mul i32 %345, %348
  %351 = urem i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %346, 10
  %354 = and i1 %352, %353
  %355 = xor i1 %352, %353
  %356 = or i1 %354, %355
  %357 = or i1 %352, %353
  br i1 %356, label %358, label %1420

; <label>:358:                                    ; preds = %344, %1420
  %359 = load i64, i64* %15, align 8
  %360 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEixEm(%"class.std::vector"* %1, i64 %359) #10
  store %"class.std::vector.0"* %360, %"class.std::vector.0"** %16, align 8
  %361 = load %"class.std::vector.0"*, %"class.std::vector.0"** %16, align 8
  %362 = call %struct.Edge* @_ZNSt6vectorI4EdgeSaIS0_EE5beginEv(%"class.std::vector.0"* %361) #10
  %363 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %17, i32 0, i32 0
  store %struct.Edge* %362, %struct.Edge** %363, align 8
  %364 = load %"class.std::vector.0"*, %"class.std::vector.0"** %16, align 8
  %365 = call %struct.Edge* @_ZNSt6vectorI4EdgeSaIS0_EE3endEv(%"class.std::vector.0"* %364) #10
  %366 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %18, i32 0, i32 0
  store %struct.Edge* %365, %struct.Edge** %366, align 8
  %367 = load i32, i32* @x.16
  %368 = load i32, i32* @y.17
  %369 = add i32 %367, 1321935671
  %370 = sub i32 %369, 1
  %371 = sub i32 %370, 1321935671
  %372 = sub i32 %367, 1
  %373 = mul i32 %367, %371
  %374 = urem i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %368, 10
  %377 = and i1 %375, %376
  %378 = xor i1 %375, %376
  %379 = or i1 %377, %378
  %380 = or i1 %375, %376
  br i1 %379, label %381, label %1420

; <label>:381:                                    ; preds = %358
  br label %382

; <label>:382:                                    ; preds = %488, %381
  %383 = load i32, i32* @x.16
  %384 = load i32, i32* @y.17
  %385 = sub i32 0, 1
  %386 = add i32 %383, %385
  %387 = sub i32 %383, 1
  %388 = mul i32 %383, %386
  %389 = urem i32 %388, 2
  %390 = icmp eq i32 %389, 0
  %391 = icmp slt i32 %384, 10
  %392 = xor i1 %390, true
  %393 = xor i1 %391, true
  %394 = xor i1 true, true
  %395 = and i1 %392, true
  %396 = and i1 %390, %394
  %397 = and i1 %393, true
  %398 = and i1 %391, %394
  %399 = or i1 %395, %396
  %400 = or i1 %397, %398
  %401 = xor i1 %399, %400
  %402 = or i1 %392, %393
  %403 = xor i1 %402, true
  %404 = or i1 true, %394
  %405 = and i1 %403, %404
  %406 = or i1 %401, %405
  %407 = or i1 %390, %391
  br i1 %406, label %408, label %1429

; <label>:408:                                    ; preds = %382, %1429
  %409 = call zeroext i1 @_ZN9__gnu_cxxneIP4EdgeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %17, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %18) #10
  %410 = load i32, i32* @x.16
  %411 = load i32, i32* @y.17
  %412 = sub i32 0, 1
  %413 = add i32 %410, %412
  %414 = sub i32 %410, 1
  %415 = mul i32 %410, %413
  %416 = urem i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = icmp slt i32 %411, 10
  %419 = and i1 %417, %418
  %420 = xor i1 %417, %418
  %421 = or i1 %419, %420
  %422 = or i1 %417, %418
  br i1 %421, label %423, label %1429

; <label>:423:                                    ; preds = %408
  br i1 %409, label %424, label %490

; <label>:424:                                    ; preds = %423
  %425 = load i32, i32* @x.16
  %426 = load i32, i32* @y.17
  %427 = sub i32 0, 1
  %428 = add i32 %425, %427
  %429 = sub i32 %425, 1
  %430 = mul i32 %425, %428
  %431 = urem i32 %430, 2
  %432 = icmp eq i32 %431, 0
  %433 = icmp slt i32 %426, 10
  %434 = xor i1 %432, true
  %435 = xor i1 %433, true
  %436 = xor i1 true, true
  %437 = and i1 %434, true
  %438 = and i1 %432, %436
  %439 = and i1 %435, true
  %440 = and i1 %433, %436
  %441 = or i1 %437, %438
  %442 = or i1 %439, %440
  %443 = xor i1 %441, %442
  %444 = or i1 %434, %435
  %445 = xor i1 %444, true
  %446 = or i1 true, %436
  %447 = and i1 %445, %446
  %448 = or i1 %443, %447
  %449 = or i1 %432, %433
  br i1 %448, label %450, label %1431

; <label>:450:                                    ; preds = %424, %1431
  %451 = call dereferenceable(24) %struct.Edge* @_ZNK9__gnu_cxx17__normal_iteratorIP4EdgeSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %17) #10
  store %struct.Edge* %451, %struct.Edge** %19, align 8
  %452 = load %struct.Edge*, %struct.Edge** %19, align 8
  %453 = getelementptr inbounds %struct.Edge, %struct.Edge* %452, i32 0, i32 0
  %454 = load i64, i64* %453, align 8
  %455 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.10"* %4, i64 %454) #10
  %456 = load i64, i64* %455, align 8
  %457 = load %struct.Edge*, %struct.Edge** %19, align 8
  %458 = getelementptr inbounds %struct.Edge, %struct.Edge* %457, i32 0, i32 1
  %459 = load i64, i64* %458, align 8
  %460 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.10"* %4, i64 %459) #10
  %461 = load i64, i64* %460, align 8
  %462 = sub i64 0, %461
  %463 = add i64 %456, %462
  %464 = sub nsw i64 %456, %461
  %465 = load %struct.Edge*, %struct.Edge** %19, align 8
  %466 = getelementptr inbounds %struct.Edge, %struct.Edge* %465, i32 0, i32 2
  %467 = load i64, i64* %466, align 8
  %468 = sub i64 0, %467
  %469 = sub i64 0, %463
  %470 = add i64 %468, %469
  %471 = sub i64 0, %470
  %472 = add nsw i64 %467, %463
  store i64 %471, i64* %466, align 8
  %473 = load i32, i32* @x.16
  %474 = load i32, i32* @y.17
  %475 = add i32 %473, 109040344
  %476 = sub i32 %475, 1
  %477 = sub i32 %476, 109040344
  %478 = sub i32 %473, 1
  %479 = mul i32 %473, %477
  %480 = urem i32 %479, 2
  %481 = icmp eq i32 %480, 0
  %482 = icmp slt i32 %474, 10
  %483 = and i1 %481, %482
  %484 = xor i1 %481, %482
  %485 = or i1 %483, %484
  %486 = or i1 %481, %482
  br i1 %485, label %487, label %1431

; <label>:487:                                    ; preds = %450
  br label %488

; <label>:488:                                    ; preds = %487
  %489 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIP4EdgeSt6vectorIS1_SaIS1_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %17) #10
  br label %382

; <label>:490:                                    ; preds = %423
  br label %491

; <label>:491:                                    ; preds = %490
  %492 = load i64, i64* %15, align 8
  %493 = sub i64 0, 1
  %494 = sub i64 %492, %493
  %495 = add i64 %492, 1
  store i64 %494, i64* %15, align 8
  br label %340

; <label>:496:                                    ; preds = %340
  %497 = load i32, i32* @x.16
  %498 = load i32, i32* @y.17
  %499 = add i32 %497, -259033267
  %500 = sub i32 %499, 1
  %501 = sub i32 %500, -259033267
  %502 = sub i32 %497, 1
  %503 = mul i32 %497, %501
  %504 = urem i32 %503, 2
  %505 = icmp eq i32 %504, 0
  %506 = icmp slt i32 %498, 10
  %507 = and i1 %505, %506
  %508 = xor i1 %505, %506
  %509 = or i1 %507, %508
  %510 = or i1 %505, %506
  br i1 %509, label %511, label %1508

; <label>:511:                                    ; preds = %496, %1508
  %512 = load i64, i64* %3, align 8
  %513 = load i64, i64* %3, align 8
  store i64 288230376151711744, i64* %22, align 8
  call void @_ZNSaIxEC2Ev(%"class.std::allocator.12"* %23) #10
  %514 = load i32, i32* @x.16
  %515 = load i32, i32* @y.17
  %516 = sub i32 %514, -1494647452
  %517 = sub i32 %516, 1
  %518 = add i32 %517, -1494647452
  %519 = sub i32 %514, 1
  %520 = mul i32 %514, %518
  %521 = urem i32 %520, 2
  %522 = icmp eq i32 %521, 0
  %523 = icmp slt i32 %515, 10
  %524 = xor i1 %522, true
  %525 = xor i1 %523, true
  %526 = xor i1 true, true
  %527 = and i1 %524, true
  %528 = and i1 %522, %526
  %529 = and i1 %525, true
  %530 = and i1 %523, %526
  %531 = or i1 %527, %528
  %532 = or i1 %529, %530
  %533 = xor i1 %531, %532
  %534 = or i1 %524, %525
  %535 = xor i1 %534, true
  %536 = or i1 true, %526
  %537 = and i1 %535, %536
  %538 = or i1 %533, %537
  %539 = or i1 %522, %523
  br i1 %538, label %540, label %1508

; <label>:540:                                    ; preds = %511
  invoke void @_ZNSt6vectorIxSaIxEEC2EmRKxRKS0_(%"class.std::vector.10"* %21, i64 %513, i64* dereferenceable(8) %22, %"class.std::allocator.12"* dereferenceable(1) %23)
          to label %541 unwind label %853

; <label>:541:                                    ; preds = %540
  call void @_ZNSaISt6vectorIxSaIxEEEC2Ev(%"class.std::allocator.7"* %24) #10
  invoke void @_ZNSt6vectorIS_IxSaIxEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.5"* %20, i64 %512, %"class.std::vector.10"* dereferenceable(24) %21, %"class.std::allocator.7"* dereferenceable(1) %24)
          to label %542 unwind label %857

; <label>:542:                                    ; preds = %541
  call void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator.7"* %24) #10
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.10"* %21) #10
  call void @_ZNSaIxED2Ev(%"class.std::allocator.12"* %23) #10
  %543 = load i64, i64* %3, align 8
  %544 = load i64, i64* %3, align 8
  store i64 -1, i64* %27, align 8
  call void @_ZNSaImEC2Ev(%"class.std::allocator.22"* %28) #10
  invoke void @_ZNSt6vectorImSaImEEC2EmRKmRKS0_(%"class.std::vector.20"* %26, i64 %544, i64* dereferenceable(8) %27, %"class.std::allocator.22"* dereferenceable(1) %28)
          to label %545 unwind label %862

; <label>:545:                                    ; preds = %542
  %546 = load i32, i32* @x.16
  %547 = load i32, i32* @y.17
  %548 = add i32 %546, -698011883
  %549 = sub i32 %548, 1
  %550 = sub i32 %549, -698011883
  %551 = sub i32 %546, 1
  %552 = mul i32 %546, %550
  %553 = urem i32 %552, 2
  %554 = icmp eq i32 %553, 0
  %555 = icmp slt i32 %547, 10
  %556 = xor i1 %554, true
  %557 = xor i1 %555, true
  %558 = xor i1 true, true
  %559 = and i1 %556, true
  %560 = and i1 %554, %558
  %561 = and i1 %557, true
  %562 = and i1 %555, %558
  %563 = or i1 %559, %560
  %564 = or i1 %561, %562
  %565 = xor i1 %563, %564
  %566 = or i1 %556, %557
  %567 = xor i1 %566, true
  %568 = or i1 true, %558
  %569 = and i1 %567, %568
  %570 = or i1 %565, %569
  %571 = or i1 %554, %555
  br i1 %570, label %572, label %1511

; <label>:572:                                    ; preds = %545, %1511
  call void @_ZNSaISt6vectorImSaImEEEC2Ev(%"class.std::allocator.17"* %29) #10
  %573 = load i32, i32* @x.16
  %574 = load i32, i32* @y.17
  %575 = sub i32 %573, -1751054802
  %576 = sub i32 %575, 1
  %577 = add i32 %576, -1751054802
  %578 = sub i32 %573, 1
  %579 = mul i32 %573, %577
  %580 = urem i32 %579, 2
  %581 = icmp eq i32 %580, 0
  %582 = icmp slt i32 %574, 10
  %583 = and i1 %581, %582
  %584 = xor i1 %581, %582
  %585 = or i1 %583, %584
  %586 = or i1 %581, %582
  br i1 %585, label %587, label %1511

; <label>:587:                                    ; preds = %572
  invoke void @_ZNSt6vectorIS_ImSaImEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.15"* %25, i64 %543, %"class.std::vector.20"* dereferenceable(24) %26, %"class.std::allocator.17"* dereferenceable(1) %29)
          to label %588 unwind label %919

; <label>:588:                                    ; preds = %587
  call void @_ZNSaISt6vectorImSaImEEED2Ev(%"class.std::allocator.17"* %29) #10
  call void @_ZNSt6vectorImSaImEED2Ev(%"class.std::vector.20"* %26) #10
  call void @_ZNSaImED2Ev(%"class.std::allocator.22"* %28) #10
  store i64 0, i64* %30, align 8
  br label %589

; <label>:589:                                    ; preds = %1347, %588
  %590 = load i32, i32* @x.16
  %591 = load i32, i32* @y.17
  %592 = add i32 %590, -1196109607
  %593 = sub i32 %592, 1
  %594 = sub i32 %593, -1196109607
  %595 = sub i32 %590, 1
  %596 = mul i32 %590, %594
  %597 = urem i32 %596, 2
  %598 = icmp eq i32 %597, 0
  %599 = icmp slt i32 %591, 10
  %600 = and i1 %598, %599
  %601 = xor i1 %598, %599
  %602 = or i1 %600, %601
  %603 = or i1 %598, %599
  br i1 %602, label %604, label %1512

; <label>:604:                                    ; preds = %589, %1512
  %605 = load i64, i64* %30, align 8
  %606 = load i64, i64* %3, align 8
  %607 = icmp ult i64 %605, %606
  %608 = load i32, i32* @x.16
  %609 = load i32, i32* @y.17
  %610 = sub i32 %608, 366736086
  %611 = sub i32 %610, 1
  %612 = add i32 %611, 366736086
  %613 = sub i32 %608, 1
  %614 = mul i32 %608, %612
  %615 = urem i32 %614, 2
  %616 = icmp eq i32 %615, 0
  %617 = icmp slt i32 %609, 10
  %618 = xor i1 %616, true
  %619 = xor i1 %617, true
  %620 = xor i1 true, true
  %621 = and i1 %618, true
  %622 = and i1 %616, %620
  %623 = and i1 %619, true
  %624 = and i1 %617, %620
  %625 = or i1 %621, %622
  %626 = or i1 %623, %624
  %627 = xor i1 %625, %626
  %628 = or i1 %618, %619
  %629 = xor i1 %628, true
  %630 = or i1 true, %620
  %631 = and i1 %629, %630
  %632 = or i1 %627, %631
  %633 = or i1 %616, %617
  br i1 %632, label %634, label %1512

; <label>:634:                                    ; preds = %604
  br i1 %607, label %635, label %1352

; <label>:635:                                    ; preds = %634
  invoke void @_ZNSt5dequeI4EdgeSaIS0_EEC2Ev(%"class.std::deque"* %33)
          to label %636 unwind label %966

; <label>:636:                                    ; preds = %635
  invoke void @_ZNSt14priority_queueI4EdgeSt5dequeIS0_SaIS0_EESt4lessIS0_EEC2ERKS5_OS3_(%"class.std::priority_queue"* %31, %"struct.std::less"* dereferenceable(1) %32, %"class.std::deque"* dereferenceable(80) %33)
          to label %637 unwind label %970

; <label>:637:                                    ; preds = %636
  call void @_ZNSt5dequeI4EdgeSaIS0_EED2Ev(%"class.std::deque"* %33) #10
  %638 = load i64, i64* %30, align 8
  %639 = load i64, i64* %30, align 8
  invoke void @_ZN4EdgeC2Emmx(%struct.Edge* %34, i64 %638, i64 %639, i64 0)
          to label %640 unwind label %974

; <label>:640:                                    ; preds = %637
  %641 = load i32, i32* @x.16
  %642 = load i32, i32* @y.17
  %643 = sub i32 0, 1
  %644 = add i32 %641, %643
  %645 = sub i32 %641, 1
  %646 = mul i32 %641, %644
  %647 = urem i32 %646, 2
  %648 = icmp eq i32 %647, 0
  %649 = icmp slt i32 %642, 10
  %650 = xor i1 %648, true
  %651 = xor i1 %649, true
  %652 = xor i1 true, true
  %653 = and i1 %650, true
  %654 = and i1 %648, %652
  %655 = and i1 %651, true
  %656 = and i1 %649, %652
  %657 = or i1 %653, %654
  %658 = or i1 %655, %656
  %659 = xor i1 %657, %658
  %660 = or i1 %650, %651
  %661 = xor i1 %660, true
  %662 = or i1 true, %652
  %663 = and i1 %661, %662
  %664 = or i1 %659, %663
  %665 = or i1 %648, %649
  br i1 %664, label %666, label %1516

; <label>:666:                                    ; preds = %640, %1516
  %667 = load i32, i32* @x.16
  %668 = load i32, i32* @y.17
  %669 = sub i32 %667, 1513737865
  %670 = sub i32 %669, 1
  %671 = add i32 %670, 1513737865
  %672 = sub i32 %667, 1
  %673 = mul i32 %667, %671
  %674 = urem i32 %673, 2
  %675 = icmp eq i32 %674, 0
  %676 = icmp slt i32 %668, 10
  %677 = xor i1 %675, true
  %678 = xor i1 %676, true
  %679 = xor i1 true, true
  %680 = and i1 %677, true
  %681 = and i1 %675, %679
  %682 = and i1 %678, true
  %683 = and i1 %676, %679
  %684 = or i1 %680, %681
  %685 = or i1 %682, %683
  %686 = xor i1 %684, %685
  %687 = or i1 %677, %678
  %688 = xor i1 %687, true
  %689 = or i1 true, %679
  %690 = and i1 %688, %689
  %691 = or i1 %686, %690
  %692 = or i1 %675, %676
  br i1 %691, label %693, label %1516

; <label>:693:                                    ; preds = %666
  invoke void @_ZNSt14priority_queueI4EdgeSt5dequeIS0_SaIS0_EESt4lessIS0_EE4pushEOS0_(%"class.std::priority_queue"* %31, %struct.Edge* dereferenceable(24) %34)
          to label %694 unwind label %974

; <label>:694:                                    ; preds = %693
  %695 = load i64, i64* %30, align 8
  %696 = call dereferenceable(24) %"class.std::vector.10"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.5"* %20, i64 %695) #10
  %697 = load i64, i64* %30, align 8
  %698 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.10"* %696, i64 %697) #10
  store i64 0, i64* %698, align 8
  br label %699

; <label>:699:                                    ; preds = %1175, %852, %694
  %700 = load i32, i32* @x.16
  %701 = load i32, i32* @y.17
  %702 = sub i32 %700, 1193356007
  %703 = sub i32 %702, 1
  %704 = add i32 %703, 1193356007
  %705 = sub i32 %700, 1
  %706 = mul i32 %700, %704
  %707 = urem i32 %706, 2
  %708 = icmp eq i32 %707, 0
  %709 = icmp slt i32 %701, 10
  %710 = and i1 %708, %709
  %711 = xor i1 %708, %709
  %712 = or i1 %710, %711
  %713 = or i1 %708, %709
  br i1 %712, label %714, label %1517

; <label>:714:                                    ; preds = %699, %1517
  %715 = load i32, i32* @x.16
  %716 = load i32, i32* @y.17
  %717 = sub i32 0, 1
  %718 = add i32 %715, %717
  %719 = sub i32 %715, 1
  %720 = mul i32 %715, %718
  %721 = urem i32 %720, 2
  %722 = icmp eq i32 %721, 0
  %723 = icmp slt i32 %716, 10
  %724 = and i1 %722, %723
  %725 = xor i1 %722, %723
  %726 = or i1 %724, %725
  %727 = or i1 %722, %723
  br i1 %726, label %728, label %1517

; <label>:728:                                    ; preds = %714
  %729 = invoke zeroext i1 @_ZNKSt14priority_queueI4EdgeSt5dequeIS0_SaIS0_EESt4lessIS0_EE5emptyEv(%"class.std::priority_queue"* %31)
          to label %730 unwind label %974

; <label>:730:                                    ; preds = %728
  %731 = xor i1 %729, true
  %732 = and i1 true, %731
  %733 = xor i1 true, true
  %734 = and i1 %729, %733
  %735 = or i1 %732, %734
  %736 = xor i1 %729, true
  br i1 %735, label %737, label %1176

; <label>:737:                                    ; preds = %730
  %738 = load i32, i32* @x.16
  %739 = load i32, i32* @y.17
  %740 = add i32 %738, -1336665135
  %741 = sub i32 %740, 1
  %742 = sub i32 %741, -1336665135
  %743 = sub i32 %738, 1
  %744 = mul i32 %738, %742
  %745 = urem i32 %744, 2
  %746 = icmp eq i32 %745, 0
  %747 = icmp slt i32 %739, 10
  %748 = xor i1 %746, true
  %749 = xor i1 %747, true
  %750 = xor i1 true, true
  %751 = and i1 %748, true
  %752 = and i1 %746, %750
  %753 = and i1 %749, true
  %754 = and i1 %747, %750
  %755 = or i1 %751, %752
  %756 = or i1 %753, %754
  %757 = xor i1 %755, %756
  %758 = or i1 %748, %749
  %759 = xor i1 %758, true
  %760 = or i1 true, %750
  %761 = and i1 %759, %760
  %762 = or i1 %757, %761
  %763 = or i1 %746, %747
  br i1 %762, label %764, label %1518

; <label>:764:                                    ; preds = %737, %1518
  %765 = load i32, i32* @x.16
  %766 = load i32, i32* @y.17
  %767 = sub i32 %765, 2014629851
  %768 = sub i32 %767, 1
  %769 = add i32 %768, 2014629851
  %770 = sub i32 %765, 1
  %771 = mul i32 %765, %769
  %772 = urem i32 %771, 2
  %773 = icmp eq i32 %772, 0
  %774 = icmp slt i32 %766, 10
  %775 = xor i1 %773, true
  %776 = xor i1 %774, true
  %777 = xor i1 true, true
  %778 = and i1 %775, true
  %779 = and i1 %773, %777
  %780 = and i1 %776, true
  %781 = and i1 %774, %777
  %782 = or i1 %778, %779
  %783 = or i1 %780, %781
  %784 = xor i1 %782, %783
  %785 = or i1 %775, %776
  %786 = xor i1 %785, true
  %787 = or i1 true, %777
  %788 = and i1 %786, %787
  %789 = or i1 %784, %788
  %790 = or i1 %773, %774
  br i1 %789, label %791, label %1518

; <label>:791:                                    ; preds = %764
  %792 = invoke dereferenceable(24) %struct.Edge* @_ZNKSt14priority_queueI4EdgeSt5dequeIS0_SaIS0_EESt4lessIS0_EE3topEv(%"class.std::priority_queue"* %31)
          to label %793 unwind label %974

; <label>:793:                                    ; preds = %791
  %794 = bitcast %struct.Edge* %35 to i8*
  %795 = bitcast %struct.Edge* %792 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %794, i8* %795, i64 24, i32 8, i1 false)
  invoke void @_ZNSt14priority_queueI4EdgeSt5dequeIS0_SaIS0_EESt4lessIS0_EE3popEv(%"class.std::priority_queue"* %31)
          to label %796 unwind label %974

; <label>:796:                                    ; preds = %793
  %797 = load i32, i32* @x.16
  %798 = load i32, i32* @y.17
  %799 = add i32 %797, -842743353
  %800 = sub i32 %799, 1
  %801 = sub i32 %800, -842743353
  %802 = sub i32 %797, 1
  %803 = mul i32 %797, %801
  %804 = urem i32 %803, 2
  %805 = icmp eq i32 %804, 0
  %806 = icmp slt i32 %798, 10
  %807 = xor i1 %805, true
  %808 = xor i1 %806, true
  %809 = xor i1 false, true
  %810 = and i1 %807, false
  %811 = and i1 %805, %809
  %812 = and i1 %808, false
  %813 = and i1 %806, %809
  %814 = or i1 %810, %811
  %815 = or i1 %812, %813
  %816 = xor i1 %814, %815
  %817 = or i1 %807, %808
  %818 = xor i1 %817, true
  %819 = or i1 false, %809
  %820 = and i1 %818, %819
  %821 = or i1 %816, %820
  %822 = or i1 %805, %806
  br i1 %821, label %823, label %1519

; <label>:823:                                    ; preds = %796, %1519
  %824 = load i64, i64* %30, align 8
  %825 = call dereferenceable(24) %"class.std::vector.20"* @_ZNSt6vectorIS_ImSaImEESaIS1_EEixEm(%"class.std::vector.15"* %25, i64 %824) #10
  %826 = getelementptr inbounds %struct.Edge, %struct.Edge* %35, i32 0, i32 1
  %827 = load i64, i64* %826, align 8
  %828 = call dereferenceable(8) i64* @_ZNSt6vectorImSaImEEixEm(%"class.std::vector.20"* %825, i64 %827) #10
  %829 = load i64, i64* %828, align 8
  %830 = xor i64 %829, -1
  %831 = and i64 -1, %830
  %832 = xor i64 -1, -1
  %833 = and i64 %829, %832
  %834 = or i64 %831, %833
  %835 = xor i64 %829, -1
  %836 = icmp ne i64 %834, 0
  %837 = load i32, i32* @x.16
  %838 = load i32, i32* @y.17
  %839 = add i32 %837, 1905186941
  %840 = sub i32 %839, 1
  %841 = sub i32 %840, 1905186941
  %842 = sub i32 %837, 1
  %843 = mul i32 %837, %841
  %844 = urem i32 %843, 2
  %845 = icmp eq i32 %844, 0
  %846 = icmp slt i32 %838, 10
  %847 = and i1 %845, %846
  %848 = xor i1 %845, %846
  %849 = or i1 %847, %848
  %850 = or i1 %845, %846
  br i1 %849, label %851, label %1519

; <label>:851:                                    ; preds = %823
  br i1 %836, label %852, label %978

; <label>:852:                                    ; preds = %851
  br label %699

; <label>:853:                                    ; preds = %540
  %854 = landingpad { i8*, i32 }
          cleanup
  %855 = extractvalue { i8*, i32 } %854, 0
  store i8* %855, i8** %6, align 8
  %856 = extractvalue { i8*, i32 } %854, 1
  store i32 %856, i32* %7, align 4
  br label %861

; <label>:857:                                    ; preds = %541
  %858 = landingpad { i8*, i32 }
          cleanup
  %859 = extractvalue { i8*, i32 } %858, 0
  store i8* %859, i8** %6, align 8
  %860 = extractvalue { i8*, i32 } %858, 1
  store i32 %860, i32* %7, align 4
  call void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator.7"* %24) #10
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.10"* %21) #10
  br label %861

; <label>:861:                                    ; preds = %857, %853
  call void @_ZNSaIxED2Ev(%"class.std::allocator.12"* %23) #10
  br label %1356

; <label>:862:                                    ; preds = %542
  %863 = load i32, i32* @x.16
  %864 = load i32, i32* @y.17
  %865 = sub i32 %863, -2124926275
  %866 = sub i32 %865, 1
  %867 = add i32 %866, -2124926275
  %868 = sub i32 %863, 1
  %869 = mul i32 %863, %867
  %870 = urem i32 %869, 2
  %871 = icmp eq i32 %870, 0
  %872 = icmp slt i32 %864, 10
  %873 = xor i1 %871, true
  %874 = xor i1 %872, true
  %875 = xor i1 true, true
  %876 = and i1 %873, true
  %877 = and i1 %871, %875
  %878 = and i1 %874, true
  %879 = and i1 %872, %875
  %880 = or i1 %876, %877
  %881 = or i1 %878, %879
  %882 = xor i1 %880, %881
  %883 = or i1 %873, %874
  %884 = xor i1 %883, true
  %885 = or i1 true, %875
  %886 = and i1 %884, %885
  %887 = or i1 %882, %886
  %888 = or i1 %871, %872
  br i1 %887, label %889, label %1566

; <label>:889:                                    ; preds = %862, %1566
  %890 = landingpad { i8*, i32 }
          cleanup
  %891 = extractvalue { i8*, i32 } %890, 0
  store i8* %891, i8** %6, align 8
  %892 = extractvalue { i8*, i32 } %890, 1
  store i32 %892, i32* %7, align 4
  %893 = load i32, i32* @x.16
  %894 = load i32, i32* @y.17
  %895 = sub i32 0, 1
  %896 = add i32 %893, %895
  %897 = sub i32 %893, 1
  %898 = mul i32 %893, %896
  %899 = urem i32 %898, 2
  %900 = icmp eq i32 %899, 0
  %901 = icmp slt i32 %894, 10
  %902 = xor i1 %900, true
  %903 = xor i1 %901, true
  %904 = xor i1 false, true
  %905 = and i1 %902, false
  %906 = and i1 %900, %904
  %907 = and i1 %903, false
  %908 = and i1 %901, %904
  %909 = or i1 %905, %906
  %910 = or i1 %907, %908
  %911 = xor i1 %909, %910
  %912 = or i1 %902, %903
  %913 = xor i1 %912, true
  %914 = or i1 false, %904
  %915 = and i1 %913, %914
  %916 = or i1 %911, %915
  %917 = or i1 %900, %901
  br i1 %916, label %918, label %1566

; <label>:918:                                    ; preds = %889
  br label %965

; <label>:919:                                    ; preds = %587
  %920 = load i32, i32* @x.16
  %921 = load i32, i32* @y.17
  %922 = add i32 %920, -1731444213
  %923 = sub i32 %922, 1
  %924 = sub i32 %923, -1731444213
  %925 = sub i32 %920, 1
  %926 = mul i32 %920, %924
  %927 = urem i32 %926, 2
  %928 = icmp eq i32 %927, 0
  %929 = icmp slt i32 %921, 10
  %930 = and i1 %928, %929
  %931 = xor i1 %928, %929
  %932 = or i1 %930, %931
  %933 = or i1 %928, %929
  br i1 %932, label %934, label %1570

; <label>:934:                                    ; preds = %919, %1570
  %935 = landingpad { i8*, i32 }
          cleanup
  %936 = extractvalue { i8*, i32 } %935, 0
  store i8* %936, i8** %6, align 8
  %937 = extractvalue { i8*, i32 } %935, 1
  store i32 %937, i32* %7, align 4
  call void @_ZNSaISt6vectorImSaImEEED2Ev(%"class.std::allocator.17"* %29) #10
  call void @_ZNSt6vectorImSaImEED2Ev(%"class.std::vector.20"* %26) #10
  %938 = load i32, i32* @x.16
  %939 = load i32, i32* @y.17
  %940 = add i32 %938, 1941180667
  %941 = sub i32 %940, 1
  %942 = sub i32 %941, 1941180667
  %943 = sub i32 %938, 1
  %944 = mul i32 %938, %942
  %945 = urem i32 %944, 2
  %946 = icmp eq i32 %945, 0
  %947 = icmp slt i32 %939, 10
  %948 = xor i1 %946, true
  %949 = xor i1 %947, true
  %950 = xor i1 true, true
  %951 = and i1 %948, true
  %952 = and i1 %946, %950
  %953 = and i1 %949, true
  %954 = and i1 %947, %950
  %955 = or i1 %951, %952
  %956 = or i1 %953, %954
  %957 = xor i1 %955, %956
  %958 = or i1 %948, %949
  %959 = xor i1 %958, true
  %960 = or i1 true, %950
  %961 = and i1 %959, %960
  %962 = or i1 %957, %961
  %963 = or i1 %946, %947
  br i1 %962, label %964, label %1570

; <label>:964:                                    ; preds = %934
  br label %965

; <label>:965:                                    ; preds = %964, %918
  call void @_ZNSaImED2Ev(%"class.std::allocator.22"* %28) #10
  br label %1354

; <label>:966:                                    ; preds = %635
  %967 = landingpad { i8*, i32 }
          cleanup
  %968 = extractvalue { i8*, i32 } %967, 0
  store i8* %968, i8** %6, align 8
  %969 = extractvalue { i8*, i32 } %967, 1
  store i32 %969, i32* %7, align 4
  br label %1353

; <label>:970:                                    ; preds = %636
  %971 = landingpad { i8*, i32 }
          cleanup
  %972 = extractvalue { i8*, i32 } %971, 0
  store i8* %972, i8** %6, align 8
  %973 = extractvalue { i8*, i32 } %971, 1
  store i32 %973, i32* %7, align 4
  call void @_ZNSt5dequeI4EdgeSaIS0_EED2Ev(%"class.std::deque"* %33) #10
  br label %1353

; <label>:974:                                    ; preds = %1089, %1088, %793, %791, %728, %693, %637
  %975 = landingpad { i8*, i32 }
          cleanup
  %976 = extractvalue { i8*, i32 } %975, 0
  store i8* %976, i8** %6, align 8
  %977 = extractvalue { i8*, i32 } %975, 1
  store i32 %977, i32* %7, align 4
  call void @_ZNSt14priority_queueI4EdgeSt5dequeIS0_SaIS0_EESt4lessIS0_EED2Ev(%"class.std::priority_queue"* %31) #10
  br label %1353

; <label>:978:                                    ; preds = %851
  %979 = getelementptr inbounds %struct.Edge, %struct.Edge* %35, i32 0, i32 0
  %980 = load i64, i64* %979, align 8
  %981 = load i64, i64* %30, align 8
  %982 = call dereferenceable(24) %"class.std::vector.20"* @_ZNSt6vectorIS_ImSaImEESaIS1_EEixEm(%"class.std::vector.15"* %25, i64 %981) #10
  %983 = getelementptr inbounds %struct.Edge, %struct.Edge* %35, i32 0, i32 1
  %984 = load i64, i64* %983, align 8
  %985 = call dereferenceable(8) i64* @_ZNSt6vectorImSaImEEixEm(%"class.std::vector.20"* %982, i64 %984) #10
  store i64 %980, i64* %985, align 8
  %986 = getelementptr inbounds %struct.Edge, %struct.Edge* %35, i32 0, i32 1
  %987 = load i64, i64* %986, align 8
  %988 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEixEm(%"class.std::vector"* %1, i64 %987) #10
  store %"class.std::vector.0"* %988, %"class.std::vector.0"** %36, align 8
  %989 = load %"class.std::vector.0"*, %"class.std::vector.0"** %36, align 8
  %990 = call %struct.Edge* @_ZNSt6vectorI4EdgeSaIS0_EE5beginEv(%"class.std::vector.0"* %989) #10
  %991 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %37, i32 0, i32 0
  store %struct.Edge* %990, %struct.Edge** %991, align 8
  %992 = load %"class.std::vector.0"*, %"class.std::vector.0"** %36, align 8
  %993 = call %struct.Edge* @_ZNSt6vectorI4EdgeSaIS0_EE3endEv(%"class.std::vector.0"* %992) #10
  %994 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %38, i32 0, i32 0
  store %struct.Edge* %993, %struct.Edge** %994, align 8
  br label %995

; <label>:995:                                    ; preds = %1133, %978
  %996 = call zeroext i1 @_ZN9__gnu_cxxneIP4EdgeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %37, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %38) #10
  br i1 %996, label %997, label %1135

; <label>:997:                                    ; preds = %995
  %998 = call dereferenceable(24) %struct.Edge* @_ZNK9__gnu_cxx17__normal_iteratorIP4EdgeSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %37) #10
  store %struct.Edge* %998, %struct.Edge** %39, align 8
  %999 = load i64, i64* %30, align 8
  %1000 = call dereferenceable(24) %"class.std::vector.10"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.5"* %20, i64 %999) #10
  %1001 = load %struct.Edge*, %struct.Edge** %39, align 8
  %1002 = getelementptr inbounds %struct.Edge, %struct.Edge* %1001, i32 0, i32 1
  %1003 = load i64, i64* %1002, align 8
  %1004 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.10"* %1000, i64 %1003) #10
  %1005 = load i64, i64* %1004, align 8
  %1006 = getelementptr inbounds %struct.Edge, %struct.Edge* %35, i32 0, i32 2
  %1007 = load i64, i64* %1006, align 8
  %1008 = load %struct.Edge*, %struct.Edge** %39, align 8
  %1009 = getelementptr inbounds %struct.Edge, %struct.Edge* %1008, i32 0, i32 2
  %1010 = load i64, i64* %1009, align 8
  %1011 = sub i64 0, %1007
  %1012 = sub i64 0, %1010
  %1013 = add i64 %1011, %1012
  %1014 = sub i64 0, %1013
  %1015 = add nsw i64 %1007, %1010
  %1016 = icmp sgt i64 %1005, %1014
  br i1 %1016, label %1017, label %1091

; <label>:1017:                                   ; preds = %997
  %1018 = load i32, i32* @x.16
  %1019 = load i32, i32* @y.17
  %1020 = sub i32 %1018, -1205508781
  %1021 = sub i32 %1020, 1
  %1022 = add i32 %1021, -1205508781
  %1023 = sub i32 %1018, 1
  %1024 = mul i32 %1018, %1022
  %1025 = urem i32 %1024, 2
  %1026 = icmp eq i32 %1025, 0
  %1027 = icmp slt i32 %1019, 10
  %1028 = xor i1 %1026, true
  %1029 = xor i1 %1027, true
  %1030 = xor i1 true, true
  %1031 = and i1 %1028, true
  %1032 = and i1 %1026, %1030
  %1033 = and i1 %1029, true
  %1034 = and i1 %1027, %1030
  %1035 = or i1 %1031, %1032
  %1036 = or i1 %1033, %1034
  %1037 = xor i1 %1035, %1036
  %1038 = or i1 %1028, %1029
  %1039 = xor i1 %1038, true
  %1040 = or i1 true, %1030
  %1041 = and i1 %1039, %1040
  %1042 = or i1 %1037, %1041
  %1043 = or i1 %1026, %1027
  br i1 %1042, label %1044, label %1574

; <label>:1044:                                   ; preds = %1017, %1574
  %1045 = getelementptr inbounds %struct.Edge, %struct.Edge* %35, i32 0, i32 2
  %1046 = load i64, i64* %1045, align 8
  %1047 = load %struct.Edge*, %struct.Edge** %39, align 8
  %1048 = getelementptr inbounds %struct.Edge, %struct.Edge* %1047, i32 0, i32 2
  %1049 = load i64, i64* %1048, align 8
  %1050 = add i64 %1046, 432769862188306106
  %1051 = add i64 %1050, %1049
  %1052 = sub i64 %1051, 432769862188306106
  %1053 = add nsw i64 %1046, %1049
  %1054 = load i64, i64* %30, align 8
  %1055 = call dereferenceable(24) %"class.std::vector.10"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.5"* %20, i64 %1054) #10
  %1056 = load %struct.Edge*, %struct.Edge** %39, align 8
  %1057 = getelementptr inbounds %struct.Edge, %struct.Edge* %1056, i32 0, i32 1
  %1058 = load i64, i64* %1057, align 8
  %1059 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.10"* %1055, i64 %1058) #10
  store i64 %1052, i64* %1059, align 8
  %1060 = load %struct.Edge*, %struct.Edge** %39, align 8
  %1061 = getelementptr inbounds %struct.Edge, %struct.Edge* %1060, i32 0, i32 0
  %1062 = load i64, i64* %1061, align 8
  %1063 = load %struct.Edge*, %struct.Edge** %39, align 8
  %1064 = getelementptr inbounds %struct.Edge, %struct.Edge* %1063, i32 0, i32 1
  %1065 = load i64, i64* %1064, align 8
  %1066 = getelementptr inbounds %struct.Edge, %struct.Edge* %35, i32 0, i32 2
  %1067 = load i64, i64* %1066, align 8
  %1068 = load %struct.Edge*, %struct.Edge** %39, align 8
  %1069 = getelementptr inbounds %struct.Edge, %struct.Edge* %1068, i32 0, i32 2
  %1070 = load i64, i64* %1069, align 8
  %1071 = sub i64 0, %1070
  %1072 = sub i64 %1067, %1071
  %1073 = add nsw i64 %1067, %1070
  %1074 = load i32, i32* @x.16
  %1075 = load i32, i32* @y.17
  %1076 = add i32 %1074, -146875039
  %1077 = sub i32 %1076, 1
  %1078 = sub i32 %1077, -146875039
  %1079 = sub i32 %1074, 1
  %1080 = mul i32 %1074, %1078
  %1081 = urem i32 %1080, 2
  %1082 = icmp eq i32 %1081, 0
  %1083 = icmp slt i32 %1075, 10
  %1084 = and i1 %1082, %1083
  %1085 = xor i1 %1082, %1083
  %1086 = or i1 %1084, %1085
  %1087 = or i1 %1082, %1083
  br i1 %1086, label %1088, label %1574

; <label>:1088:                                   ; preds = %1044
  invoke void @_ZN4EdgeC2Emmx(%struct.Edge* %40, i64 %1062, i64 %1065, i64 %1072)
          to label %1089 unwind label %974

; <label>:1089:                                   ; preds = %1088
  invoke void @_ZNSt14priority_queueI4EdgeSt5dequeIS0_SaIS0_EESt4lessIS0_EE4pushEOS0_(%"class.std::priority_queue"* %31, %struct.Edge* dereferenceable(24) %40)
          to label %1090 unwind label %974

; <label>:1090:                                   ; preds = %1089
  br label %1091

; <label>:1091:                                   ; preds = %1090, %997
  %1092 = load i32, i32* @x.16
  %1093 = load i32, i32* @y.17
  %1094 = sub i32 0, 1
  %1095 = add i32 %1092, %1094
  %1096 = sub i32 %1092, 1
  %1097 = mul i32 %1092, %1095
  %1098 = urem i32 %1097, 2
  %1099 = icmp eq i32 %1098, 0
  %1100 = icmp slt i32 %1093, 10
  %1101 = xor i1 %1099, true
  %1102 = xor i1 %1100, true
  %1103 = xor i1 true, true
  %1104 = and i1 %1101, true
  %1105 = and i1 %1099, %1103
  %1106 = and i1 %1102, true
  %1107 = and i1 %1100, %1103
  %1108 = or i1 %1104, %1105
  %1109 = or i1 %1106, %1107
  %1110 = xor i1 %1108, %1109
  %1111 = or i1 %1101, %1102
  %1112 = xor i1 %1111, true
  %1113 = or i1 true, %1103
  %1114 = and i1 %1112, %1113
  %1115 = or i1 %1110, %1114
  %1116 = or i1 %1099, %1100
  br i1 %1115, label %1117, label %1655

; <label>:1117:                                   ; preds = %1091, %1655
  %1118 = load i32, i32* @x.16
  %1119 = load i32, i32* @y.17
  %1120 = sub i32 %1118, 412077887
  %1121 = sub i32 %1120, 1
  %1122 = add i32 %1121, 412077887
  %1123 = sub i32 %1118, 1
  %1124 = mul i32 %1118, %1122
  %1125 = urem i32 %1124, 2
  %1126 = icmp eq i32 %1125, 0
  %1127 = icmp slt i32 %1119, 10
  %1128 = and i1 %1126, %1127
  %1129 = xor i1 %1126, %1127
  %1130 = or i1 %1128, %1129
  %1131 = or i1 %1126, %1127
  br i1 %1130, label %1132, label %1655

; <label>:1132:                                   ; preds = %1117
  br label %1133

; <label>:1133:                                   ; preds = %1132
  %1134 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIP4EdgeSt6vectorIS1_SaIS1_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %37) #10
  br label %995

; <label>:1135:                                   ; preds = %995
  %1136 = load i32, i32* @x.16
  %1137 = load i32, i32* @y.17
  %1138 = sub i32 0, 1
  %1139 = add i32 %1136, %1138
  %1140 = sub i32 %1136, 1
  %1141 = mul i32 %1136, %1139
  %1142 = urem i32 %1141, 2
  %1143 = icmp eq i32 %1142, 0
  %1144 = icmp slt i32 %1137, 10
  %1145 = xor i1 %1143, true
  %1146 = xor i1 %1144, true
  %1147 = xor i1 true, true
  %1148 = and i1 %1145, true
  %1149 = and i1 %1143, %1147
  %1150 = and i1 %1146, true
  %1151 = and i1 %1144, %1147
  %1152 = or i1 %1148, %1149
  %1153 = or i1 %1150, %1151
  %1154 = xor i1 %1152, %1153
  %1155 = or i1 %1145, %1146
  %1156 = xor i1 %1155, true
  %1157 = or i1 true, %1147
  %1158 = and i1 %1156, %1157
  %1159 = or i1 %1154, %1158
  %1160 = or i1 %1143, %1144
  br i1 %1159, label %1161, label %1656

; <label>:1161:                                   ; preds = %1135, %1656
  %1162 = load i32, i32* @x.16
  %1163 = load i32, i32* @y.17
  %1164 = sub i32 0, 1
  %1165 = add i32 %1162, %1164
  %1166 = sub i32 %1162, 1
  %1167 = mul i32 %1162, %1165
  %1168 = urem i32 %1167, 2
  %1169 = icmp eq i32 %1168, 0
  %1170 = icmp slt i32 %1163, 10
  %1171 = and i1 %1169, %1170
  %1172 = xor i1 %1169, %1170
  %1173 = or i1 %1171, %1172
  %1174 = or i1 %1169, %1170
  br i1 %1173, label %1175, label %1656

; <label>:1175:                                   ; preds = %1161
  br label %699

; <label>:1176:                                   ; preds = %730
  %1177 = load i32, i32* @x.16
  %1178 = load i32, i32* @y.17
  %1179 = sub i32 %1177, -1742967193
  %1180 = sub i32 %1179, 1
  %1181 = add i32 %1180, -1742967193
  %1182 = sub i32 %1177, 1
  %1183 = mul i32 %1177, %1181
  %1184 = urem i32 %1183, 2
  %1185 = icmp eq i32 %1184, 0
  %1186 = icmp slt i32 %1178, 10
  %1187 = xor i1 %1185, true
  %1188 = xor i1 %1186, true
  %1189 = xor i1 true, true
  %1190 = and i1 %1187, true
  %1191 = and i1 %1185, %1189
  %1192 = and i1 %1188, true
  %1193 = and i1 %1186, %1189
  %1194 = or i1 %1190, %1191
  %1195 = or i1 %1192, %1193
  %1196 = xor i1 %1194, %1195
  %1197 = or i1 %1187, %1188
  %1198 = xor i1 %1197, true
  %1199 = or i1 true, %1189
  %1200 = and i1 %1198, %1199
  %1201 = or i1 %1196, %1200
  %1202 = or i1 %1185, %1186
  br i1 %1201, label %1203, label %1657

; <label>:1203:                                   ; preds = %1176, %1657
  store i64 0, i64* %41, align 8
  %1204 = load i32, i32* @x.16
  %1205 = load i32, i32* @y.17
  %1206 = add i32 %1204, -521367862
  %1207 = sub i32 %1206, 1
  %1208 = sub i32 %1207, -521367862
  %1209 = sub i32 %1204, 1
  %1210 = mul i32 %1204, %1208
  %1211 = urem i32 %1210, 2
  %1212 = icmp eq i32 %1211, 0
  %1213 = icmp slt i32 %1205, 10
  %1214 = and i1 %1212, %1213
  %1215 = xor i1 %1212, %1213
  %1216 = or i1 %1214, %1215
  %1217 = or i1 %1212, %1213
  br i1 %1216, label %1218, label %1657

; <label>:1218:                                   ; preds = %1203
  br label %1219

; <label>:1219:                                   ; preds = %1297, %1218
  %1220 = load i64, i64* %41, align 8
  %1221 = load i64, i64* %3, align 8
  %1222 = icmp ult i64 %1220, %1221
  br i1 %1222, label %1223, label %1304

; <label>:1223:                                   ; preds = %1219
  %1224 = load i32, i32* @x.16
  %1225 = load i32, i32* @y.17
  %1226 = sub i32 0, 1
  %1227 = add i32 %1224, %1226
  %1228 = sub i32 %1224, 1
  %1229 = mul i32 %1224, %1227
  %1230 = urem i32 %1229, 2
  %1231 = icmp eq i32 %1230, 0
  %1232 = icmp slt i32 %1225, 10
  %1233 = xor i1 %1231, true
  %1234 = xor i1 %1232, true
  %1235 = xor i1 true, true
  %1236 = and i1 %1233, true
  %1237 = and i1 %1231, %1235
  %1238 = and i1 %1234, true
  %1239 = and i1 %1232, %1235
  %1240 = or i1 %1236, %1237
  %1241 = or i1 %1238, %1239
  %1242 = xor i1 %1240, %1241
  %1243 = or i1 %1233, %1234
  %1244 = xor i1 %1243, true
  %1245 = or i1 true, %1235
  %1246 = and i1 %1244, %1245
  %1247 = or i1 %1242, %1246
  %1248 = or i1 %1231, %1232
  br i1 %1247, label %1249, label %1658

; <label>:1249:                                   ; preds = %1223, %1658
  %1250 = load i64, i64* %41, align 8
  %1251 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.10"* %4, i64 %1250) #10
  %1252 = load i64, i64* %1251, align 8
  %1253 = load i64, i64* %30, align 8
  %1254 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.10"* %4, i64 %1253) #10
  %1255 = load i64, i64* %1254, align 8
  %1256 = add i64 %1252, -279526195243371794
  %1257 = sub i64 %1256, %1255
  %1258 = sub i64 %1257, -279526195243371794
  %1259 = sub nsw i64 %1252, %1255
  %1260 = load i64, i64* %30, align 8
  %1261 = call dereferenceable(24) %"class.std::vector.10"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.5"* %20, i64 %1260) #10
  %1262 = load i64, i64* %41, align 8
  %1263 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.10"* %1261, i64 %1262) #10
  %1264 = load i64, i64* %1263, align 8
  %1265 = sub i64 0, %1264
  %1266 = sub i64 0, %1258
  %1267 = add i64 %1265, %1266
  %1268 = sub i64 0, %1267
  %1269 = add nsw i64 %1264, %1258
  store i64 %1268, i64* %1263, align 8
  %1270 = load i32, i32* @x.16
  %1271 = load i32, i32* @y.17
  %1272 = add i32 %1270, 1255427458
  %1273 = sub i32 %1272, 1
  %1274 = sub i32 %1273, 1255427458
  %1275 = sub i32 %1270, 1
  %1276 = mul i32 %1270, %1274
  %1277 = urem i32 %1276, 2
  %1278 = icmp eq i32 %1277, 0
  %1279 = icmp slt i32 %1271, 10
  %1280 = xor i1 %1278, true
  %1281 = xor i1 %1279, true
  %1282 = xor i1 true, true
  %1283 = and i1 %1280, true
  %1284 = and i1 %1278, %1282
  %1285 = and i1 %1281, true
  %1286 = and i1 %1279, %1282
  %1287 = or i1 %1283, %1284
  %1288 = or i1 %1285, %1286
  %1289 = xor i1 %1287, %1288
  %1290 = or i1 %1280, %1281
  %1291 = xor i1 %1290, true
  %1292 = or i1 true, %1282
  %1293 = and i1 %1291, %1292
  %1294 = or i1 %1289, %1293
  %1295 = or i1 %1278, %1279
  br i1 %1294, label %1296, label %1658

; <label>:1296:                                   ; preds = %1249
  br label %1297

; <label>:1297:                                   ; preds = %1296
  %1298 = load i64, i64* %41, align 8
  %1299 = sub i64 0, %1298
  %1300 = sub i64 0, 1
  %1301 = add i64 %1299, %1300
  %1302 = sub i64 0, %1301
  %1303 = add i64 %1298, 1
  store i64 %1302, i64* %41, align 8
  br label %1219

; <label>:1304:                                   ; preds = %1219
  %1305 = load i32, i32* @x.16
  %1306 = load i32, i32* @y.17
  %1307 = sub i32 %1305, 1694284593
  %1308 = sub i32 %1307, 1
  %1309 = add i32 %1308, 1694284593
  %1310 = sub i32 %1305, 1
  %1311 = mul i32 %1305, %1309
  %1312 = urem i32 %1311, 2
  %1313 = icmp eq i32 %1312, 0
  %1314 = icmp slt i32 %1306, 10
  %1315 = and i1 %1313, %1314
  %1316 = xor i1 %1313, %1314
  %1317 = or i1 %1315, %1316
  %1318 = or i1 %1313, %1314
  br i1 %1317, label %1319, label %1702

; <label>:1319:                                   ; preds = %1304, %1702
  call void @_ZNSt14priority_queueI4EdgeSt5dequeIS0_SaIS0_EESt4lessIS0_EED2Ev(%"class.std::priority_queue"* %31) #10
  %1320 = load i32, i32* @x.16
  %1321 = load i32, i32* @y.17
  %1322 = add i32 %1320, -49352230
  %1323 = sub i32 %1322, 1
  %1324 = sub i32 %1323, -49352230
  %1325 = sub i32 %1320, 1
  %1326 = mul i32 %1320, %1324
  %1327 = urem i32 %1326, 2
  %1328 = icmp eq i32 %1327, 0
  %1329 = icmp slt i32 %1321, 10
  %1330 = xor i1 %1328, true
  %1331 = xor i1 %1329, true
  %1332 = xor i1 true, true
  %1333 = and i1 %1330, true
  %1334 = and i1 %1328, %1332
  %1335 = and i1 %1331, true
  %1336 = and i1 %1329, %1332
  %1337 = or i1 %1333, %1334
  %1338 = or i1 %1335, %1336
  %1339 = xor i1 %1337, %1338
  %1340 = or i1 %1330, %1331
  %1341 = xor i1 %1340, true
  %1342 = or i1 true, %1332
  %1343 = and i1 %1341, %1342
  %1344 = or i1 %1339, %1343
  %1345 = or i1 %1328, %1329
  br i1 %1344, label %1346, label %1702

; <label>:1346:                                   ; preds = %1319
  br label %1347

; <label>:1347:                                   ; preds = %1346
  %1348 = load i64, i64* %30, align 8
  %1349 = sub i64 0, 1
  %1350 = sub i64 %1348, %1349
  %1351 = add i64 %1348, 1
  store i64 %1350, i64* %30, align 8
  br label %589

; <label>:1352:                                   ; preds = %634
  call void @_ZNSt6vectorIS_IxSaIxEESaIS1_EEC2EOS3_(%"class.std::vector.5"* %0, %"class.std::vector.5"* dereferenceable(24) %20) #10
  store i32 1, i32* %14, align 4
  call void @_ZNSt6vectorIS_ImSaImEESaIS1_EED2Ev(%"class.std::vector.15"* %25) #10
  call void @_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev(%"class.std::vector.5"* %20) #10
  br label %1355

; <label>:1353:                                   ; preds = %974, %970, %966
  call void @_ZNSt6vectorIS_ImSaImEESaIS1_EED2Ev(%"class.std::vector.15"* %25) #10
  br label %1354

; <label>:1354:                                   ; preds = %1353, %965
  call void @_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev(%"class.std::vector.5"* %20) #10
  br label %1356

; <label>:1355:                                   ; preds = %1352, %193
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.10"* %4) #10
  ret void

; <label>:1356:                                   ; preds = %1354, %861
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.10"* %4) #10
  br label %1357

; <label>:1357:                                   ; preds = %1356, %194
  %1358 = load i8*, i8** %6, align 8
  %1359 = load i32, i32* %7, align 4
  %1360 = insertvalue { i8*, i32 } undef, i8* %1358, 0
  %1361 = insertvalue { i8*, i32 } %1360, i32 %1359, 1
  resume { i8*, i32 } %1361

; <label>:1362:                                   ; preds = %76, %50
  %1363 = load i64, i64* %9, align 8
  %1364 = load i64, i64* %3, align 8
  %1365 = icmp ult i64 %1363, %1364
  br label %76

; <label>:1366:                                   ; preds = %122, %95
  %1367 = load i64, i64* %9, align 8
  %1368 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEixEm(%"class.std::vector"* %1, i64 %1367) #10
  store %"class.std::vector.0"* %1368, %"class.std::vector.0"** %10, align 8
  %1369 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  %1370 = call %struct.Edge* @_ZNSt6vectorI4EdgeSaIS0_EE5beginEv(%"class.std::vector.0"* %1369) #10
  %1371 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  store %struct.Edge* %1370, %struct.Edge** %1371, align 8
  %1372 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  %1373 = call %struct.Edge* @_ZNSt6vectorI4EdgeSaIS0_EE3endEv(%"class.std::vector.0"* %1372) #10
  %1374 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  store %struct.Edge* %1373, %struct.Edge** %1374, align 8
  br label %122

; <label>:1375:                                   ; preds = %224, %198
  br label %224

; <label>:1376:                                   ; preds = %271, %244
  %1377 = load i64, i64* %9, align 8
  %1378 = shl i64 %1377, 1
  %1379 = sub i64 0, 2431959287540091184
  %1380 = sub i64 %1379, %1377
  %1381 = add i64 %1380, 2431959287540091184
  %1382 = sub i64 0, %1377
  %1383 = sub i64 0, 1
  %1384 = sub i64 %1381, %1383
  %1385 = add i64 %1381, 1
  %1386 = sub i64 %1377, 7522418678376384639
  %1387 = sub i64 %1386, 1
  %1388 = add i64 %1387, 7522418678376384639
  %1389 = sub i64 %1377, 1
  %1390 = mul i64 %1388, 1
  %1391 = add i64 %1377, 6311247668385683529
  %1392 = sub i64 %1391, 1
  %1393 = sub i64 %1392, 6311247668385683529
  %1394 = sub i64 %1377, 1
  %1395 = mul i64 %1393, 1
  %1396 = shl i64 %1377, 1
  %1397 = sub i64 0, %1377
  %1398 = add i64 0, %1397
  %1399 = sub i64 0, %1377
  %1400 = sub i64 0, 1
  %1401 = sub i64 %1398, %1400
  %1402 = add i64 %1398, 1
  %1403 = sub i64 %1377, 1121559765148492029
  %1404 = add i64 %1403, 1
  %1405 = add i64 %1404, 1121559765148492029
  %1406 = add i64 %1377, 1
  store i64 %1405, i64* %9, align 8
  br label %271

; <label>:1407:                                   ; preds = %319, %293
  %1408 = load i64, i64* %8, align 8
  %1409 = add i64 0, -6177818718761370059
  %1410 = sub i64 %1409, %1408
  %1411 = sub i64 %1410, -6177818718761370059
  %1412 = sub i64 0, %1408
  %1413 = sub i64 %1411, 4583998434344709770
  %1414 = add i64 %1413, 1
  %1415 = add i64 %1414, 4583998434344709770
  %1416 = add i64 %1411, 1
  %1417 = sub i64 0, 1
  %1418 = sub i64 %1408, %1417
  %1419 = add i64 %1408, 1
  store i64 %1418, i64* %8, align 8
  br label %319

; <label>:1420:                                   ; preds = %358, %344
  %1421 = load i64, i64* %15, align 8
  %1422 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEixEm(%"class.std::vector"* %1, i64 %1421) #10
  store %"class.std::vector.0"* %1422, %"class.std::vector.0"** %16, align 8
  %1423 = load %"class.std::vector.0"*, %"class.std::vector.0"** %16, align 8
  %1424 = call %struct.Edge* @_ZNSt6vectorI4EdgeSaIS0_EE5beginEv(%"class.std::vector.0"* %1423) #10
  %1425 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %17, i32 0, i32 0
  store %struct.Edge* %1424, %struct.Edge** %1425, align 8
  %1426 = load %"class.std::vector.0"*, %"class.std::vector.0"** %16, align 8
  %1427 = call %struct.Edge* @_ZNSt6vectorI4EdgeSaIS0_EE3endEv(%"class.std::vector.0"* %1426) #10
  %1428 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %18, i32 0, i32 0
  store %struct.Edge* %1427, %struct.Edge** %1428, align 8
  br label %358

; <label>:1429:                                   ; preds = %408, %382
  %1430 = call zeroext i1 @_ZN9__gnu_cxxneIP4EdgeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %17, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %18) #10
  br label %408

; <label>:1431:                                   ; preds = %450, %424
  %1432 = call dereferenceable(24) %struct.Edge* @_ZNK9__gnu_cxx17__normal_iteratorIP4EdgeSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %17) #10
  store %struct.Edge* %1432, %struct.Edge** %19, align 8
  %1433 = load %struct.Edge*, %struct.Edge** %19, align 8
  %1434 = getelementptr inbounds %struct.Edge, %struct.Edge* %1433, i32 0, i32 0
  %1435 = load i64, i64* %1434, align 8
  %1436 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.10"* %4, i64 %1435) #10
  %1437 = load i64, i64* %1436, align 8
  %1438 = load %struct.Edge*, %struct.Edge** %19, align 8
  %1439 = getelementptr inbounds %struct.Edge, %struct.Edge* %1438, i32 0, i32 1
  %1440 = load i64, i64* %1439, align 8
  %1441 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.10"* %4, i64 %1440) #10
  %1442 = load i64, i64* %1441, align 8
  %1443 = add i64 %1437, 8555956985551199832
  %1444 = sub i64 %1443, %1442
  %1445 = sub i64 %1444, 8555956985551199832
  %1446 = sub i64 %1437, %1442
  %1447 = mul i64 %1445, %1442
  %1448 = shl i64 %1437, %1442
  %1449 = add i64 0, -1579598623801297865
  %1450 = sub i64 %1449, %1437
  %1451 = sub i64 %1450, -1579598623801297865
  %1452 = sub i64 0, %1437
  %1453 = sub i64 0, %1442
  %1454 = sub i64 %1451, %1453
  %1455 = add i64 %1451, %1442
  %1456 = sub i64 0, %1442
  %1457 = add i64 %1437, %1456
  %1458 = sub i64 %1437, %1442
  %1459 = mul i64 %1457, %1442
  %1460 = sub i64 0, 5201252115657050841
  %1461 = sub i64 %1460, %1437
  %1462 = add i64 %1461, 5201252115657050841
  %1463 = sub i64 0, %1437
  %1464 = sub i64 0, %1462
  %1465 = sub i64 0, %1442
  %1466 = add i64 %1464, %1465
  %1467 = sub i64 0, %1466
  %1468 = add i64 %1462, %1442
  %1469 = sub i64 0, %1442
  %1470 = add i64 %1437, %1469
  %1471 = sub i64 %1437, %1442
  %1472 = mul i64 %1470, %1442
  %1473 = sub i64 0, 1779749057411550023
  %1474 = sub i64 %1473, %1437
  %1475 = add i64 %1474, 1779749057411550023
  %1476 = sub i64 0, %1437
  %1477 = sub i64 %1475, -4853926699097273910
  %1478 = add i64 %1477, %1442
  %1479 = add i64 %1478, -4853926699097273910
  %1480 = add i64 %1475, %1442
  %1481 = add i64 %1437, 5326460625701345407
  %1482 = sub i64 %1481, %1442
  %1483 = sub i64 %1482, 5326460625701345407
  %1484 = sub i64 %1437, %1442
  %1485 = mul i64 %1483, %1442
  %1486 = sub i64 0, %1442
  %1487 = add i64 %1437, %1486
  %1488 = sub nsw i64 %1437, %1442
  %1489 = load %struct.Edge*, %struct.Edge** %19, align 8
  %1490 = getelementptr inbounds %struct.Edge, %struct.Edge* %1489, i32 0, i32 2
  %1491 = load i64, i64* %1490, align 8
  %1492 = sub i64 %1491, 945764005898772709
  %1493 = sub i64 %1492, %1487
  %1494 = add i64 %1493, 945764005898772709
  %1495 = sub i64 %1491, %1487
  %1496 = mul i64 %1494, %1487
  %1497 = add i64 0, -4986819632042650014
  %1498 = sub i64 %1497, %1491
  %1499 = sub i64 %1498, -4986819632042650014
  %1500 = sub i64 0, %1491
  %1501 = sub i64 %1499, 6873182443086069482
  %1502 = add i64 %1501, %1487
  %1503 = add i64 %1502, 6873182443086069482
  %1504 = add i64 %1499, %1487
  %1505 = sub i64 0, %1487
  %1506 = sub i64 %1491, %1505
  %1507 = add nsw i64 %1491, %1487
  store i64 %1506, i64* %1490, align 8
  br label %450

; <label>:1508:                                   ; preds = %511, %496
  %1509 = load i64, i64* %3, align 8
  %1510 = load i64, i64* %3, align 8
  store i64 288230376151711744, i64* %22, align 8
  call void @_ZNSaIxEC2Ev(%"class.std::allocator.12"* %23) #10
  br label %511

; <label>:1511:                                   ; preds = %572, %545
  call void @_ZNSaISt6vectorImSaImEEEC2Ev(%"class.std::allocator.17"* %29) #10
  br label %572

; <label>:1512:                                   ; preds = %604, %589
  %1513 = load i64, i64* %30, align 8
  %1514 = load i64, i64* %3, align 8
  %1515 = icmp ult i64 %1513, %1514
  br label %604

; <label>:1516:                                   ; preds = %666, %640
  br label %666

; <label>:1517:                                   ; preds = %714, %699
  br label %714

; <label>:1518:                                   ; preds = %764, %737
  br label %764

; <label>:1519:                                   ; preds = %823, %796
  %1520 = load i64, i64* %30, align 8
  %1521 = call dereferenceable(24) %"class.std::vector.20"* @_ZNSt6vectorIS_ImSaImEESaIS1_EEixEm(%"class.std::vector.15"* %25, i64 %1520) #10
  %1522 = getelementptr inbounds %struct.Edge, %struct.Edge* %35, i32 0, i32 1
  %1523 = load i64, i64* %1522, align 8
  %1524 = call dereferenceable(8) i64* @_ZNSt6vectorImSaImEEixEm(%"class.std::vector.20"* %1521, i64 %1523) #10
  %1525 = load i64, i64* %1524, align 8
  %1526 = sub i64 %1525, -8009157870390855224
  %1527 = sub i64 %1526, -1
  %1528 = add i64 %1527, -8009157870390855224
  %1529 = sub i64 %1525, -1
  %1530 = mul i64 %1528, -1
  %1531 = shl i64 %1525, -1
  %1532 = sub i64 0, 4923817546841493286
  %1533 = sub i64 %1532, %1525
  %1534 = add i64 %1533, 4923817546841493286
  %1535 = sub i64 0, %1525
  %1536 = sub i64 %1534, 4220370435274815184
  %1537 = add i64 %1536, -1
  %1538 = add i64 %1537, 4220370435274815184
  %1539 = add i64 %1534, -1
  %1540 = add i64 %1525, -4020899023377473003
  %1541 = sub i64 %1540, -1
  %1542 = sub i64 %1541, -4020899023377473003
  %1543 = sub i64 %1525, -1
  %1544 = mul i64 %1542, -1
  %1545 = sub i64 0, 2572247916492410150
  %1546 = sub i64 %1545, %1525
  %1547 = add i64 %1546, 2572247916492410150
  %1548 = sub i64 0, %1525
  %1549 = sub i64 %1547, 6707605083913436939
  %1550 = add i64 %1549, -1
  %1551 = add i64 %1550, 6707605083913436939
  %1552 = add i64 %1547, -1
  %1553 = shl i64 %1525, -1
  %1554 = xor i64 %1525, -1
  %1555 = and i64 1876458934759401301, %1554
  %1556 = xor i64 1876458934759401301, -1
  %1557 = and i64 %1525, %1556
  %1558 = xor i64 -1, -1
  %1559 = and i64 %1558, 1876458934759401301
  %1560 = and i64 -1, %1556
  %1561 = or i64 %1555, %1557
  %1562 = or i64 %1559, %1560
  %1563 = xor i64 %1561, %1562
  %1564 = xor i64 %1525, -1
  %1565 = icmp ne i64 %1563, 0
  br label %823

; <label>:1566:                                   ; preds = %889, %862
  %1567 = landingpad { i8*, i32 }
          cleanup
  %1568 = extractvalue { i8*, i32 } %1567, 0
  store i8* %1568, i8** %6, align 8
  %1569 = extractvalue { i8*, i32 } %1567, 1
  store i32 %1569, i32* %7, align 4
  br label %889

; <label>:1570:                                   ; preds = %934, %919
  %1571 = landingpad { i8*, i32 }
          cleanup
  %1572 = extractvalue { i8*, i32 } %1571, 0
  store i8* %1572, i8** %6, align 8
  %1573 = extractvalue { i8*, i32 } %1571, 1
  store i32 %1573, i32* %7, align 4
  call void @_ZNSaISt6vectorImSaImEEED2Ev(%"class.std::allocator.17"* %29) #10
  call void @_ZNSt6vectorImSaImEED2Ev(%"class.std::vector.20"* %26) #10
  br label %934

; <label>:1574:                                   ; preds = %1044, %1017
  %1575 = getelementptr inbounds %struct.Edge, %struct.Edge* %35, i32 0, i32 2
  %1576 = load i64, i64* %1575, align 8
  %1577 = load %struct.Edge*, %struct.Edge** %39, align 8
  %1578 = getelementptr inbounds %struct.Edge, %struct.Edge* %1577, i32 0, i32 2
  %1579 = load i64, i64* %1578, align 8
  %1580 = shl i64 %1576, %1579
  %1581 = shl i64 %1576, %1579
  %1582 = sub i64 0, %1576
  %1583 = add i64 0, %1582
  %1584 = sub i64 0, %1576
  %1585 = sub i64 %1583, 7102007154120498438
  %1586 = add i64 %1585, %1579
  %1587 = add i64 %1586, 7102007154120498438
  %1588 = add i64 %1583, %1579
  %1589 = shl i64 %1576, %1579
  %1590 = shl i64 %1576, %1579
  %1591 = shl i64 %1576, %1579
  %1592 = add i64 %1576, 5091178675248821284
  %1593 = sub i64 %1592, %1579
  %1594 = sub i64 %1593, 5091178675248821284
  %1595 = sub i64 %1576, %1579
  %1596 = mul i64 %1594, %1579
  %1597 = shl i64 %1576, %1579
  %1598 = sub i64 %1576, -5075311630126972969
  %1599 = sub i64 %1598, %1579
  %1600 = add i64 %1599, -5075311630126972969
  %1601 = sub i64 %1576, %1579
  %1602 = mul i64 %1600, %1579
  %1603 = sub i64 0, %1579
  %1604 = add i64 %1576, %1603
  %1605 = sub i64 %1576, %1579
  %1606 = mul i64 %1604, %1579
  %1607 = add i64 %1576, -3902072045295256536
  %1608 = add i64 %1607, %1579
  %1609 = sub i64 %1608, -3902072045295256536
  %1610 = add nsw i64 %1576, %1579
  %1611 = load i64, i64* %30, align 8
  %1612 = call dereferenceable(24) %"class.std::vector.10"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.5"* %20, i64 %1611) #10
  %1613 = load %struct.Edge*, %struct.Edge** %39, align 8
  %1614 = getelementptr inbounds %struct.Edge, %struct.Edge* %1613, i32 0, i32 1
  %1615 = load i64, i64* %1614, align 8
  %1616 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.10"* %1612, i64 %1615) #10
  store i64 %1609, i64* %1616, align 8
  %1617 = load %struct.Edge*, %struct.Edge** %39, align 8
  %1618 = getelementptr inbounds %struct.Edge, %struct.Edge* %1617, i32 0, i32 0
  %1619 = load i64, i64* %1618, align 8
  %1620 = load %struct.Edge*, %struct.Edge** %39, align 8
  %1621 = getelementptr inbounds %struct.Edge, %struct.Edge* %1620, i32 0, i32 1
  %1622 = load i64, i64* %1621, align 8
  %1623 = getelementptr inbounds %struct.Edge, %struct.Edge* %35, i32 0, i32 2
  %1624 = load i64, i64* %1623, align 8
  %1625 = load %struct.Edge*, %struct.Edge** %39, align 8
  %1626 = getelementptr inbounds %struct.Edge, %struct.Edge* %1625, i32 0, i32 2
  %1627 = load i64, i64* %1626, align 8
  %1628 = shl i64 %1624, %1627
  %1629 = sub i64 %1624, 5903120806889919745
  %1630 = sub i64 %1629, %1627
  %1631 = add i64 %1630, 5903120806889919745
  %1632 = sub i64 %1624, %1627
  %1633 = mul i64 %1631, %1627
  %1634 = sub i64 0, %1627
  %1635 = add i64 %1624, %1634
  %1636 = sub i64 %1624, %1627
  %1637 = mul i64 %1635, %1627
  %1638 = sub i64 0, 5413677563850490978
  %1639 = sub i64 %1638, %1624
  %1640 = add i64 %1639, 5413677563850490978
  %1641 = sub i64 0, %1624
  %1642 = add i64 %1640, 2051159739220655802
  %1643 = add i64 %1642, %1627
  %1644 = sub i64 %1643, 2051159739220655802
  %1645 = add i64 %1640, %1627
  %1646 = sub i64 %1624, -3012823010896694166
  %1647 = sub i64 %1646, %1627
  %1648 = add i64 %1647, -3012823010896694166
  %1649 = sub i64 %1624, %1627
  %1650 = mul i64 %1648, %1627
  %1651 = sub i64 %1624, -2469996289589808990
  %1652 = add i64 %1651, %1627
  %1653 = add i64 %1652, -2469996289589808990
  %1654 = add nsw i64 %1624, %1627
  br label %1044

; <label>:1655:                                   ; preds = %1117, %1091
  br label %1117

; <label>:1656:                                   ; preds = %1161, %1135
  br label %1161

; <label>:1657:                                   ; preds = %1203, %1176
  store i64 0, i64* %41, align 8
  br label %1203

; <label>:1658:                                   ; preds = %1249, %1223
  %1659 = load i64, i64* %41, align 8
  %1660 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.10"* %4, i64 %1659) #10
  %1661 = load i64, i64* %1660, align 8
  %1662 = load i64, i64* %30, align 8
  %1663 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.10"* %4, i64 %1662) #10
  %1664 = load i64, i64* %1663, align 8
  %1665 = shl i64 %1661, %1664
  %1666 = sub i64 0, 2540850289704377632
  %1667 = sub i64 %1666, %1661
  %1668 = add i64 %1667, 2540850289704377632
  %1669 = sub i64 0, %1661
  %1670 = add i64 %1668, -230833278156988354
  %1671 = add i64 %1670, %1664
  %1672 = sub i64 %1671, -230833278156988354
  %1673 = add i64 %1668, %1664
  %1674 = sub i64 0, %1664
  %1675 = add i64 %1661, %1674
  %1676 = sub nsw i64 %1661, %1664
  %1677 = load i64, i64* %30, align 8
  %1678 = call dereferenceable(24) %"class.std::vector.10"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.5"* %20, i64 %1677) #10
  %1679 = load i64, i64* %41, align 8
  %1680 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.10"* %1678, i64 %1679) #10
  %1681 = load i64, i64* %1680, align 8
  %1682 = sub i64 0, -2720485757039865115
  %1683 = sub i64 %1682, %1681
  %1684 = add i64 %1683, -2720485757039865115
  %1685 = sub i64 0, %1681
  %1686 = sub i64 0, %1675
  %1687 = sub i64 %1684, %1686
  %1688 = add i64 %1684, %1675
  %1689 = add i64 %1681, 9187824015019153669
  %1690 = sub i64 %1689, %1675
  %1691 = sub i64 %1690, 9187824015019153669
  %1692 = sub i64 %1681, %1675
  %1693 = mul i64 %1691, %1675
  %1694 = shl i64 %1681, %1675
  %1695 = sub i64 0, %1675
  %1696 = add i64 %1681, %1695
  %1697 = sub i64 %1681, %1675
  %1698 = mul i64 %1696, %1675
  %1699 = sub i64 0, %1675
  %1700 = sub i64 %1681, %1699
  %1701 = add nsw i64 %1681, %1675
  store i64 %1700, i64* %1680, align 8
  br label %1249

; <label>:1702:                                   ; preds = %1319, %1304
  call void @_ZNSt14priority_queueI4EdgeSt5dequeIS0_SaIS0_EESt4lessIS0_EED2Ev(%"class.std::priority_queue"* %31) #10
  br label %1319
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_I4EdgeSaIS0_EESaIS2_EE4sizeEv(%"class.std::vector"*) #0 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.18
  %6 = load i32, i32* @y.19
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1003281534, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %108
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1003281534, label %18
    i32 -858240880, label %38
    i32 671356997, label %81
    i32 1760595320, label %83
  ]

; <label>:17:                                     ; preds = %15
  br label %108

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -858240880, i32 1760595320
  store i32 %37, i32* %14
  br label %108

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %39, align 8
  %40 = load %"class.std::vector"*, %"class.std::vector"** %39, align 8
  %41 = bitcast %"class.std::vector"* %40 to %"struct.std::_Vector_base"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %42, i32 0, i32 1
  %44 = load %"class.std::vector.0"*, %"class.std::vector.0"** %43, align 8
  %45 = bitcast %"class.std::vector"* %40 to %"struct.std::_Vector_base"*
  %46 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %46, i32 0, i32 0
  %48 = load %"class.std::vector.0"*, %"class.std::vector.0"** %47, align 8
  %49 = ptrtoint %"class.std::vector.0"* %44 to i64
  %50 = ptrtoint %"class.std::vector.0"* %48 to i64
  %51 = sub i64 0, %50
  %52 = add i64 %49, %51
  %53 = sub i64 %49, %50
  %54 = sdiv exact i64 %52, 24
  store i64 %54, i64* %2
  %55 = load i32, i32* @x.18
  %56 = load i32, i32* @y.19
  %57 = sub i32 0, 1
  %58 = add i32 %55, %57
  %59 = sub i32 %55, 1
  %60 = mul i32 %55, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %56, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 false, true
  %67 = and i1 %64, false
  %68 = and i1 %62, %66
  %69 = and i1 %65, false
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 false, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  %80 = select i1 %78, i32 671356997, i32 1760595320
  store i32 %80, i32* %14
  br label %108

; <label>:81:                                     ; preds = %15
  %82 = load volatile i64, i64* %2
  ret i64 %82

; <label>:83:                                     ; preds = %15
  %84 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %84, align 8
  %85 = load %"class.std::vector"*, %"class.std::vector"** %84, align 8
  %86 = bitcast %"class.std::vector"* %85 to %"struct.std::_Vector_base"*
  %87 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %86, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %87, i32 0, i32 1
  %89 = load %"class.std::vector.0"*, %"class.std::vector.0"** %88, align 8
  %90 = bitcast %"class.std::vector"* %85 to %"struct.std::_Vector_base"*
  %91 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %90, i32 0, i32 0
  %92 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %91, i32 0, i32 0
  %93 = load %"class.std::vector.0"*, %"class.std::vector.0"** %92, align 8
  %94 = ptrtoint %"class.std::vector.0"* %89 to i64
  %95 = ptrtoint %"class.std::vector.0"* %93 to i64
  %96 = sub i64 0, 9083357101482248290
  %97 = sub i64 %96, %94
  %98 = add i64 %97, 9083357101482248290
  %99 = sub i64 0, %94
  %100 = sub i64 0, %95
  %101 = sub i64 %98, %100
  %102 = add i64 %98, %95
  %103 = sub i64 %94, -8649747001454018436
  %104 = sub i64 %103, %95
  %105 = add i64 %104, -8649747001454018436
  %106 = sub i64 %94, %95
  %107 = sdiv exact i64 %105, 24
  store i32 -858240880, i32* %14
  br label %108

; <label>:108:                                    ; preds = %83, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxEC2Ev(%"class.std::allocator.12"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.12"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %2, align 8
  %3 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %2, align 8
  %4 = bitcast %"class.std::allocator.12"* %3 to %"class.__gnu_cxx::new_allocator.13"*
  call void @_ZN9__gnu_cxx13new_allocatorIxEC2Ev(%"class.__gnu_cxx::new_allocator.13"* %4) #10
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEEC2EmRKS0_(%"class.std::vector.10"*, i64, %"class.std::allocator.12"* dereferenceable(1)) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.22
  %5 = load i32, i32* @y.23
  %6 = sub i32 %4, 1118399517
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1118399517
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %66

; <label>:18:                                     ; preds = %3, %66
  %19 = alloca %"class.std::vector.10"*, align 8
  %20 = alloca i64, align 8
  %21 = alloca %"class.std::allocator.12"*, align 8
  %22 = alloca i8*
  %23 = alloca i32
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %19, align 8
  store i64 %1, i64* %20, align 8
  store %"class.std::allocator.12"* %2, %"class.std::allocator.12"** %21, align 8
  %24 = load %"class.std::vector.10"*, %"class.std::vector.10"** %19, align 8
  %25 = bitcast %"class.std::vector.10"* %24 to %"struct.std::_Vector_base.11"*
  %26 = load i64, i64* %20, align 8
  %27 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %21, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base.11"* %25, i64 %26, %"class.std::allocator.12"* dereferenceable(1) %27)
  %28 = load i64, i64* %20, align 8
  %29 = load i32, i32* @x.22
  %30 = load i32, i32* @y.23
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  br i1 %52, label %54, label %66

; <label>:54:                                     ; preds = %18
  invoke void @_ZNSt6vectorIxSaIxEE21_M_default_initializeEm(%"class.std::vector.10"* %24, i64 %28)
          to label %55 unwind label %56

; <label>:55:                                     ; preds = %54
  ret void

; <label>:56:                                     ; preds = %54
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %22, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %23, align 4
  %60 = bitcast %"class.std::vector.10"* %24 to %"struct.std::_Vector_base.11"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.11"* %60) #10
  br label %61

; <label>:61:                                     ; preds = %56
  %62 = load i8*, i8** %22, align 8
  %63 = load i32, i32* %23, align 4
  %64 = insertvalue { i8*, i32 } undef, i8* %62, 0
  %65 = insertvalue { i8*, i32 } %64, i32 %63, 1
  resume { i8*, i32 } %65

; <label>:66:                                     ; preds = %18, %3
  %67 = alloca %"class.std::vector.10"*, align 8
  %68 = alloca i64, align 8
  %69 = alloca %"class.std::allocator.12"*, align 8
  %70 = alloca i8*
  %71 = alloca i32
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %67, align 8
  store i64 %1, i64* %68, align 8
  store %"class.std::allocator.12"* %2, %"class.std::allocator.12"** %69, align 8
  %72 = load %"class.std::vector.10"*, %"class.std::vector.10"** %67, align 8
  %73 = bitcast %"class.std::vector.10"* %72 to %"struct.std::_Vector_base.11"*
  %74 = load i64, i64* %68, align 8
  %75 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %69, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base.11"* %73, i64 %74, %"class.std::allocator.12"* dereferenceable(1) %75)
  %76 = load i64, i64* %68, align 8
  br label %18
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxED2Ev(%"class.std::allocator.12"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.12"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %2, align 8
  %3 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %2, align 8
  %4 = bitcast %"class.std::allocator.12"* %3 to %"class.__gnu_cxx::new_allocator.13"*
  call void @_ZN9__gnu_cxx13new_allocatorIxED2Ev(%"class.__gnu_cxx::new_allocator.13"* %4) #10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.Edge* @_ZNSt6vectorI4EdgeSaIS0_EE5beginEv(%"class.std::vector.0"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %4 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %5 = bitcast %"class.std::vector.0"* %4 to %"struct.std::_Vector_base.1"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIP4EdgeSt6vectorIS1_SaIS1_EEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator"* %2, %struct.Edge** dereferenceable(8) %7) #10
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %struct.Edge*, %struct.Edge** %8, align 8
  ret %struct.Edge* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.Edge* @_ZNSt6vectorI4EdgeSaIS0_EE3endEv(%"class.std::vector.0"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %4 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %5 = bitcast %"class.std::vector.0"* %4 to %"struct.std::_Vector_base.1"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIP4EdgeSt6vectorIS1_SaIS1_EEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator"* %2, %struct.Edge** dereferenceable(8) %7) #10
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %struct.Edge*, %struct.Edge** %8, align 8
  ret %struct.Edge* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIP4EdgeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) %struct.Edge** @_ZNK9__gnu_cxx17__normal_iteratorIP4EdgeSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #10
  %7 = load %struct.Edge*, %struct.Edge** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) %struct.Edge** @_ZNK9__gnu_cxx17__normal_iteratorIP4EdgeSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8) #10
  %10 = load %struct.Edge*, %struct.Edge** %9, align 8
  %11 = icmp ne %struct.Edge* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %struct.Edge* @_ZNK9__gnu_cxx17__normal_iteratorIP4EdgeSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"*) #0 comdat align 2 {
  %2 = alloca %struct.Edge*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.32
  %6 = load i32, i32* @y.33
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 596707303, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %53
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 596707303, label %18
    i32 -450857315, label %26
    i32 356275629, label %46
    i32 -142761765, label %48
  ]

; <label>:17:                                     ; preds = %15
  br label %53

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -450857315, i32 -142761765
  store i32 %25, i32* %14
  br label %53

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %27, align 8
  %28 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %27, align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %28, i32 0, i32 0
  %30 = load %struct.Edge*, %struct.Edge** %29, align 8
  store %struct.Edge* %30, %struct.Edge** %2
  %31 = load i32, i32* @x.32
  %32 = load i32, i32* @y.33
  %33 = sub i32 %31, 1882411893
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 1882411893
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 356275629, i32 -142761765
  store i32 %45, i32* %14
  br label %53

; <label>:46:                                     ; preds = %15
  %47 = load volatile %struct.Edge*, %struct.Edge** %2
  ret %struct.Edge* %47

; <label>:48:                                     ; preds = %15
  %49 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %49, align 8
  %50 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %49, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %50, i32 0, i32 0
  %52 = load %struct.Edge*, %struct.Edge** %51, align 8
  store i32 -450857315, i32* %14
  br label %53

; <label>:53:                                     ; preds = %48, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.10"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.10"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.10"*, %"class.std::vector.10"** %3, align 8
  %6 = bitcast %"class.std::vector.10"* %5 to %"struct.std::_Vector_base.11"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds i64, i64* %9, i64 %10
  ret i64* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IxSaIxEESaIS1_EEC2Ev(%"class.std::vector.5"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %2, align 8
  %3 = load %"class.std::vector.5"*, %"class.std::vector.5"** %2, align 8
  %4 = bitcast %"class.std::vector.5"* %3 to %"struct.std::_Vector_base.6"*
  invoke void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EEC2Ev(%"struct.std::_Vector_base.6"* %4)
          to label %5 unwind label %47

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.36
  %7 = load i32, i32* @y.37
  %8 = add i32 %6, -12464434
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -12464434
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %7, 10
  %16 = and i1 %14, %15
  %17 = xor i1 %14, %15
  %18 = or i1 %16, %17
  %19 = or i1 %14, %15
  br i1 %18, label %20, label %91

; <label>:20:                                     ; preds = %5, %91
  %21 = load i32, i32* @x.36
  %22 = load i32, i32* @y.37
  %23 = sub i32 0, 1
  %24 = add i32 %21, %23
  %25 = sub i32 %21, 1
  %26 = mul i32 %21, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %22, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 true, true
  %33 = and i1 %30, true
  %34 = and i1 %28, %32
  %35 = and i1 %31, true
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 true, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  br i1 %44, label %46, label %91

; <label>:46:                                     ; preds = %20
  ret void

; <label>:47:                                     ; preds = %1
  %48 = load i32, i32* @x.36
  %49 = load i32, i32* @y.37
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  br i1 %71, label %73, label %92

; <label>:73:                                     ; preds = %47, %92
  %74 = landingpad { i8*, i32 }
          catch i8* null
  %75 = extractvalue { i8*, i32 } %74, 0
  call void @__clang_call_terminate(i8* %75) #8
  %76 = load i32, i32* @x.36
  %77 = load i32, i32* @y.37
  %78 = add i32 %76, -2047863242
  %79 = sub i32 %78, 1
  %80 = sub i32 %79, -2047863242
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = and i1 %84, %85
  %87 = xor i1 %84, %85
  %88 = or i1 %86, %87
  %89 = or i1 %84, %85
  br i1 %88, label %90, label %92

; <label>:90:                                     ; preds = %73
  unreachable

; <label>:91:                                     ; preds = %20, %5
  br label %20

; <label>:92:                                     ; preds = %73, %47
  %93 = landingpad { i8*, i32 }
          catch i8* null
  %94 = extractvalue { i8*, i32 } %93, 0
  call void @__clang_call_terminate(i8* %94) #8
  br label %73
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIP4EdgeSt6vectorIS1_SaIS1_EEEppEv(%"class.__gnu_cxx::__normal_iterator"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load %struct.Edge*, %struct.Edge** %4, align 8
  %6 = getelementptr inbounds %struct.Edge, %struct.Edge* %5, i32 1
  store %struct.Edge* %6, %struct.Edge** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEEC2EmRKxRKS0_(%"class.std::vector.10"*, i64, i64* dereferenceable(8), %"class.std::allocator.12"* dereferenceable(1)) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.40
  %6 = load i32, i32* @y.41
  %7 = sub i32 %5, -1381114687
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1381114687
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %6, 10
  %15 = and i1 %13, %14
  %16 = xor i1 %13, %14
  %17 = or i1 %15, %16
  %18 = or i1 %13, %14
  br i1 %17, label %19, label %100

; <label>:19:                                     ; preds = %4, %100
  %20 = alloca %"class.std::vector.10"*, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64*, align 8
  %23 = alloca %"class.std::allocator.12"*, align 8
  %24 = alloca i8*
  %25 = alloca i32
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %20, align 8
  store i64 %1, i64* %21, align 8
  store i64* %2, i64** %22, align 8
  store %"class.std::allocator.12"* %3, %"class.std::allocator.12"** %23, align 8
  %26 = load %"class.std::vector.10"*, %"class.std::vector.10"** %20, align 8
  %27 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  %28 = load i64, i64* %21, align 8
  %29 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %23, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base.11"* %27, i64 %28, %"class.std::allocator.12"* dereferenceable(1) %29)
  %30 = load i64, i64* %21, align 8
  %31 = load i64*, i64** %22, align 8
  %32 = load i32, i32* @x.40
  %33 = load i32, i32* @y.41
  %34 = sub i32 %32, -325237409
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -325237409
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %100

; <label>:46:                                     ; preds = %19
  invoke void @_ZNSt6vectorIxSaIxEE18_M_fill_initializeEmRKx(%"class.std::vector.10"* %26, i64 %30, i64* dereferenceable(8) %31)
          to label %47 unwind label %48

; <label>:47:                                     ; preds = %46
  ret void

; <label>:48:                                     ; preds = %46
  %49 = load i32, i32* @x.40
  %50 = load i32, i32* @y.41
  %51 = add i32 %49, 1637951756
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, 1637951756
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  br i1 %61, label %63, label %113

; <label>:63:                                     ; preds = %48, %113
  %64 = landingpad { i8*, i32 }
          cleanup
  %65 = extractvalue { i8*, i32 } %64, 0
  store i8* %65, i8** %24, align 8
  %66 = extractvalue { i8*, i32 } %64, 1
  store i32 %66, i32* %25, align 4
  %67 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.11"* %67) #10
  %68 = load i32, i32* @x.40
  %69 = load i32, i32* @y.41
  %70 = add i32 %68, -97302772
  %71 = sub i32 %70, 1
  %72 = sub i32 %71, -97302772
  %73 = sub i32 %68, 1
  %74 = mul i32 %68, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %69, 10
  %78 = xor i1 %76, true
  %79 = xor i1 %77, true
  %80 = xor i1 false, true
  %81 = and i1 %78, false
  %82 = and i1 %76, %80
  %83 = and i1 %79, false
  %84 = and i1 %77, %80
  %85 = or i1 %81, %82
  %86 = or i1 %83, %84
  %87 = xor i1 %85, %86
  %88 = or i1 %78, %79
  %89 = xor i1 %88, true
  %90 = or i1 false, %80
  %91 = and i1 %89, %90
  %92 = or i1 %87, %91
  %93 = or i1 %76, %77
  br i1 %92, label %94, label %113

; <label>:94:                                     ; preds = %63
  br label %95

; <label>:95:                                     ; preds = %94
  %96 = load i8*, i8** %24, align 8
  %97 = load i32, i32* %25, align 4
  %98 = insertvalue { i8*, i32 } undef, i8* %96, 0
  %99 = insertvalue { i8*, i32 } %98, i32 %97, 1
  resume { i8*, i32 } %99

; <label>:100:                                    ; preds = %19, %4
  %101 = alloca %"class.std::vector.10"*, align 8
  %102 = alloca i64, align 8
  %103 = alloca i64*, align 8
  %104 = alloca %"class.std::allocator.12"*, align 8
  %105 = alloca i8*
  %106 = alloca i32
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %101, align 8
  store i64 %1, i64* %102, align 8
  store i64* %2, i64** %103, align 8
  store %"class.std::allocator.12"* %3, %"class.std::allocator.12"** %104, align 8
  %107 = load %"class.std::vector.10"*, %"class.std::vector.10"** %101, align 8
  %108 = bitcast %"class.std::vector.10"* %107 to %"struct.std::_Vector_base.11"*
  %109 = load i64, i64* %102, align 8
  %110 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %104, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base.11"* %108, i64 %109, %"class.std::allocator.12"* dereferenceable(1) %110)
  %111 = load i64, i64* %102, align 8
  %112 = load i64*, i64** %103, align 8
  br label %19

; <label>:113:                                    ; preds = %63, %48
  %114 = landingpad { i8*, i32 }
          cleanup
  %115 = extractvalue { i8*, i32 } %114, 0
  store i8* %115, i8** %24, align 8
  %116 = extractvalue { i8*, i32 } %114, 1
  store i32 %116, i32* %25, align 4
  %117 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.11"* %117) #10
  br label %63
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIxSaIxEEEC2Ev(%"class.std::allocator.7"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.42
  %5 = load i32, i32* @y.43
  %6 = sub i32 %4, -1578056072
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1578056072
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1746708660, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %50
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1746708660, label %18
    i32 1178277564, label %26
    i32 282662763, label %45
    i32 1317127975, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %50

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1178277564, i32 1317127975
  store i32 %25, i32* %14
  br label %50

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %27, align 8
  %28 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %27, align 8
  %29 = bitcast %"class.std::allocator.7"* %28 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2Ev(%"class.__gnu_cxx::new_allocator.8"* %29) #10
  %30 = load i32, i32* @x.42
  %31 = load i32, i32* @y.43
  %32 = add i32 %30, 994141039
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 994141039
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 282662763, i32 1317127975
  store i32 %44, i32* %14
  br label %50

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %47, align 8
  %48 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %47, align 8
  %49 = bitcast %"class.std::allocator.7"* %48 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2Ev(%"class.__gnu_cxx::new_allocator.8"* %49) #10
  store i32 1178277564, i32* %14
  br label %50

; <label>:50:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IxSaIxEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.5"*, i64, %"class.std::vector.10"* dereferenceable(24), %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.5"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.10"*, align 8
  %8 = alloca %"class.std::allocator.7"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector.10"* %2, %"class.std::vector.10"** %7, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %8, align 8
  %11 = load %"class.std::vector.5"*, %"class.std::vector.5"** %5, align 8
  %12 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %8, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.6"* %12, i64 %13, %"class.std::allocator.7"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load %"class.std::vector.10"*, %"class.std::vector.10"** %7, align 8
  invoke void @_ZNSt6vectorIS_IxSaIxEESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.5"* %11, i64 %15, %"class.std::vector.10"* dereferenceable(24) %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %4
  ret void

; <label>:18:                                     ; preds = %4
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %9, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %10, align 4
  %22 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev(%"struct.std::_Vector_base.6"* %22) #10
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %9, align 8
  %25 = load i32, i32* %10, align 4
  %26 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator.7"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %2, align 8
  %3 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %2, align 8
  %4 = bitcast %"class.std::allocator.7"* %3 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEED2Ev(%"class.__gnu_cxx::new_allocator.8"* %4) #10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.10"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.48
  %3 = load i32, i32* @y.49
  %4 = add i32 %2, -1552844531
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -1552844531
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %173

; <label>:28:                                     ; preds = %1, %173
  %29 = alloca %"class.std::vector.10"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %29, align 8
  %32 = load %"class.std::vector.10"*, %"class.std::vector.10"** %29, align 8
  %33 = bitcast %"class.std::vector.10"* %32 to %"struct.std::_Vector_base.11"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load i64*, i64** %35, align 8
  %37 = bitcast %"class.std::vector.10"* %32 to %"struct.std::_Vector_base.11"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %38, i32 0, i32 1
  %40 = load i64*, i64** %39, align 8
  %41 = bitcast %"class.std::vector.10"* %32 to %"struct.std::_Vector_base.11"*
  %42 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"* %41) #10
  %43 = load i32, i32* @x.48
  %44 = load i32, i32* @y.49
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  br i1 %66, label %68, label %173

; <label>:68:                                     ; preds = %28
  invoke void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %36, i64* %40, %"class.std::allocator.12"* dereferenceable(1) %42)
          to label %69 unwind label %125

; <label>:69:                                     ; preds = %68
  %70 = load i32, i32* @x.48
  %71 = load i32, i32* @y.49
  %72 = add i32 %70, 406789467
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, 406789467
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 true, true
  %83 = and i1 %80, true
  %84 = and i1 %78, %82
  %85 = and i1 %81, true
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 true, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  br i1 %94, label %96, label %188

; <label>:96:                                     ; preds = %69, %188
  %97 = bitcast %"class.std::vector.10"* %32 to %"struct.std::_Vector_base.11"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.11"* %97) #10
  %98 = load i32, i32* @x.48
  %99 = load i32, i32* @y.49
  %100 = sub i32 %98, -118255225
  %101 = sub i32 %100, 1
  %102 = add i32 %101, -118255225
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = xor i1 %106, true
  %109 = xor i1 %107, true
  %110 = xor i1 true, true
  %111 = and i1 %108, true
  %112 = and i1 %106, %110
  %113 = and i1 %109, true
  %114 = and i1 %107, %110
  %115 = or i1 %111, %112
  %116 = or i1 %113, %114
  %117 = xor i1 %115, %116
  %118 = or i1 %108, %109
  %119 = xor i1 %118, true
  %120 = or i1 true, %110
  %121 = and i1 %119, %120
  %122 = or i1 %117, %121
  %123 = or i1 %106, %107
  br i1 %122, label %124, label %188

; <label>:124:                                    ; preds = %96
  ret void

; <label>:125:                                    ; preds = %68
  %126 = load i32, i32* @x.48
  %127 = load i32, i32* @y.49
  %128 = sub i32 %126, -1646033941
  %129 = sub i32 %128, 1
  %130 = add i32 %129, -1646033941
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = xor i1 %134, true
  %137 = xor i1 %135, true
  %138 = xor i1 false, true
  %139 = and i1 %136, false
  %140 = and i1 %134, %138
  %141 = and i1 %137, false
  %142 = and i1 %135, %138
  %143 = or i1 %139, %140
  %144 = or i1 %141, %142
  %145 = xor i1 %143, %144
  %146 = or i1 %136, %137
  %147 = xor i1 %146, true
  %148 = or i1 false, %138
  %149 = and i1 %147, %148
  %150 = or i1 %145, %149
  %151 = or i1 %134, %135
  br i1 %150, label %152, label %190

; <label>:152:                                    ; preds = %125, %190
  %153 = landingpad { i8*, i32 }
          catch i8* null
  %154 = extractvalue { i8*, i32 } %153, 0
  store i8* %154, i8** %30, align 8
  %155 = extractvalue { i8*, i32 } %153, 1
  store i32 %155, i32* %31, align 4
  %156 = bitcast %"class.std::vector.10"* %32 to %"struct.std::_Vector_base.11"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.11"* %156) #10
  %157 = load i32, i32* @x.48
  %158 = load i32, i32* @y.49
  %159 = sub i32 0, 1
  %160 = add i32 %157, %159
  %161 = sub i32 %157, 1
  %162 = mul i32 %157, %160
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %158, 10
  %166 = and i1 %164, %165
  %167 = xor i1 %164, %165
  %168 = or i1 %166, %167
  %169 = or i1 %164, %165
  br i1 %168, label %170, label %190

; <label>:170:                                    ; preds = %152
  br label %171

; <label>:171:                                    ; preds = %170
  %172 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %172) #8
  unreachable

; <label>:173:                                    ; preds = %28, %1
  %174 = alloca %"class.std::vector.10"*, align 8
  %175 = alloca i8*
  %176 = alloca i32
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %174, align 8
  %177 = load %"class.std::vector.10"*, %"class.std::vector.10"** %174, align 8
  %178 = bitcast %"class.std::vector.10"* %177 to %"struct.std::_Vector_base.11"*
  %179 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %178, i32 0, i32 0
  %180 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %179, i32 0, i32 0
  %181 = load i64*, i64** %180, align 8
  %182 = bitcast %"class.std::vector.10"* %177 to %"struct.std::_Vector_base.11"*
  %183 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %182, i32 0, i32 0
  %184 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %183, i32 0, i32 1
  %185 = load i64*, i64** %184, align 8
  %186 = bitcast %"class.std::vector.10"* %177 to %"struct.std::_Vector_base.11"*
  %187 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"* %186) #10
  br label %28

; <label>:188:                                    ; preds = %96, %69
  %189 = bitcast %"class.std::vector.10"* %32 to %"struct.std::_Vector_base.11"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.11"* %189) #10
  br label %96

; <label>:190:                                    ; preds = %152, %125
  %191 = landingpad { i8*, i32 }
          catch i8* null
  %192 = extractvalue { i8*, i32 } %191, 0
  store i8* %192, i8** %30, align 8
  %193 = extractvalue { i8*, i32 } %191, 1
  store i32 %193, i32* %31, align 4
  %194 = bitcast %"class.std::vector.10"* %32 to %"struct.std::_Vector_base.11"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.11"* %194) #10
  br label %152
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaImEC2Ev(%"class.std::allocator.22"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.22"*, align 8
  store %"class.std::allocator.22"* %0, %"class.std::allocator.22"** %2, align 8
  %3 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %2, align 8
  %4 = bitcast %"class.std::allocator.22"* %3 to %"class.__gnu_cxx::new_allocator.23"*
  call void @_ZN9__gnu_cxx13new_allocatorImEC2Ev(%"class.__gnu_cxx::new_allocator.23"* %4) #10
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorImSaImEEC2EmRKmRKS0_(%"class.std::vector.20"*, i64, i64* dereferenceable(8), %"class.std::allocator.22"* dereferenceable(1)) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.20"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.22"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %5, align 8
  store i64 %1, i64* %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.22"* %3, %"class.std::allocator.22"** %8, align 8
  %11 = load %"class.std::vector.20"*, %"class.std::vector.20"** %5, align 8
  %12 = bitcast %"class.std::vector.20"* %11 to %"struct.std::_Vector_base.21"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %8, align 8
  call void @_ZNSt12_Vector_baseImSaImEEC2EmRKS0_(%"struct.std::_Vector_base.21"* %12, i64 %13, %"class.std::allocator.22"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load i64*, i64** %7, align 8
  invoke void @_ZNSt6vectorImSaImEE18_M_fill_initializeEmRKm(%"class.std::vector.20"* %11, i64 %15, i64* dereferenceable(8) %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %4
  ret void

; <label>:18:                                     ; preds = %4
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %9, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %10, align 4
  %22 = bitcast %"class.std::vector.20"* %11 to %"struct.std::_Vector_base.21"*
  call void @_ZNSt12_Vector_baseImSaImEED2Ev(%"struct.std::_Vector_base.21"* %22) #10
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i32, i32* @x.52
  %25 = load i32, i32* @y.53
  %26 = add i32 %24, 831265022
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, 831265022
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  br i1 %36, label %38, label %57

; <label>:38:                                     ; preds = %23, %57
  %39 = load i8*, i8** %9, align 8
  %40 = load i32, i32* %10, align 4
  %41 = insertvalue { i8*, i32 } undef, i8* %39, 0
  %42 = insertvalue { i8*, i32 } %41, i32 %40, 1
  %43 = load i32, i32* @x.52
  %44 = load i32, i32* @y.53
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  br i1 %54, label %56, label %57

; <label>:56:                                     ; preds = %38
  resume { i8*, i32 } %42

; <label>:57:                                     ; preds = %38, %23
  %58 = load i8*, i8** %9, align 8
  %59 = load i32, i32* %10, align 4
  %60 = insertvalue { i8*, i32 } undef, i8* %58, 0
  %61 = insertvalue { i8*, i32 } %60, i32 %59, 1
  br label %38
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorImSaImEEEC2Ev(%"class.std::allocator.17"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.17"*, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %2, align 8
  %3 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %2, align 8
  %4 = bitcast %"class.std::allocator.17"* %3 to %"class.__gnu_cxx::new_allocator.18"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorImSaImEEEC2Ev(%"class.__gnu_cxx::new_allocator.18"* %4) #10
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_ImSaImEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.15"*, i64, %"class.std::vector.20"* dereferenceable(24), %"class.std::allocator.17"* dereferenceable(1)) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.15"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.20"*, align 8
  %8 = alloca %"class.std::allocator.17"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.15"* %0, %"class.std::vector.15"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector.20"* %2, %"class.std::vector.20"** %7, align 8
  store %"class.std::allocator.17"* %3, %"class.std::allocator.17"** %8, align 8
  %11 = load %"class.std::vector.15"*, %"class.std::vector.15"** %5, align 8
  %12 = bitcast %"class.std::vector.15"* %11 to %"struct.std::_Vector_base.16"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %8, align 8
  call void @_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.16"* %12, i64 %13, %"class.std::allocator.17"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load %"class.std::vector.20"*, %"class.std::vector.20"** %7, align 8
  invoke void @_ZNSt6vectorIS_ImSaImEESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.15"* %11, i64 %15, %"class.std::vector.20"* dereferenceable(24) %16)
          to label %17 unwind label %59

; <label>:17:                                     ; preds = %4
  %18 = load i32, i32* @x.56
  %19 = load i32, i32* @y.57
  %20 = sub i32 %18, 1726136015
  %21 = sub i32 %20, 1
  %22 = add i32 %21, 1726136015
  %23 = sub i32 %18, 1
  %24 = mul i32 %18, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %19, 10
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 true, true
  %31 = and i1 %28, true
  %32 = and i1 %26, %30
  %33 = and i1 %29, true
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 true, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  br i1 %42, label %44, label %163

; <label>:44:                                     ; preds = %17, %163
  %45 = load i32, i32* @x.56
  %46 = load i32, i32* @y.57
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  br i1 %56, label %58, label %163

; <label>:58:                                     ; preds = %44
  ret void

; <label>:59:                                     ; preds = %4
  %60 = load i32, i32* @x.56
  %61 = load i32, i32* @y.57
  %62 = sub i32 0, 1
  %63 = add i32 %60, %62
  %64 = sub i32 %60, 1
  %65 = mul i32 %60, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %61, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 false, true
  %72 = and i1 %69, false
  %73 = and i1 %67, %71
  %74 = and i1 %70, false
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 false, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  br i1 %83, label %85, label %164

; <label>:85:                                     ; preds = %59, %164
  %86 = landingpad { i8*, i32 }
          cleanup
  %87 = extractvalue { i8*, i32 } %86, 0
  store i8* %87, i8** %9, align 8
  %88 = extractvalue { i8*, i32 } %86, 1
  store i32 %88, i32* %10, align 4
  %89 = bitcast %"class.std::vector.15"* %11 to %"struct.std::_Vector_base.16"*
  call void @_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EED2Ev(%"struct.std::_Vector_base.16"* %89) #10
  %90 = load i32, i32* @x.56
  %91 = load i32, i32* @y.57
  %92 = sub i32 %90, 1454117875
  %93 = sub i32 %92, 1
  %94 = add i32 %93, 1454117875
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = and i1 %98, %99
  %101 = xor i1 %98, %99
  %102 = or i1 %100, %101
  %103 = or i1 %98, %99
  br i1 %102, label %104, label %164

; <label>:104:                                    ; preds = %85
  br label %105

; <label>:105:                                    ; preds = %104
  %106 = load i32, i32* @x.56
  %107 = load i32, i32* @y.57
  %108 = sub i32 %106, 1619232761
  %109 = sub i32 %108, 1
  %110 = add i32 %109, 1619232761
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = xor i1 %114, true
  %117 = xor i1 %115, true
  %118 = xor i1 false, true
  %119 = and i1 %116, false
  %120 = and i1 %114, %118
  %121 = and i1 %117, false
  %122 = and i1 %115, %118
  %123 = or i1 %119, %120
  %124 = or i1 %121, %122
  %125 = xor i1 %123, %124
  %126 = or i1 %116, %117
  %127 = xor i1 %126, true
  %128 = or i1 false, %118
  %129 = and i1 %127, %128
  %130 = or i1 %125, %129
  %131 = or i1 %114, %115
  br i1 %130, label %132, label %169

; <label>:132:                                    ; preds = %105, %169
  %133 = load i8*, i8** %9, align 8
  %134 = load i32, i32* %10, align 4
  %135 = insertvalue { i8*, i32 } undef, i8* %133, 0
  %136 = insertvalue { i8*, i32 } %135, i32 %134, 1
  %137 = load i32, i32* @x.56
  %138 = load i32, i32* @y.57
  %139 = sub i32 0, 1
  %140 = add i32 %137, %139
  %141 = sub i32 %137, 1
  %142 = mul i32 %137, %140
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %138, 10
  %146 = xor i1 %144, true
  %147 = xor i1 %145, true
  %148 = xor i1 false, true
  %149 = and i1 %146, false
  %150 = and i1 %144, %148
  %151 = and i1 %147, false
  %152 = and i1 %145, %148
  %153 = or i1 %149, %150
  %154 = or i1 %151, %152
  %155 = xor i1 %153, %154
  %156 = or i1 %146, %147
  %157 = xor i1 %156, true
  %158 = or i1 false, %148
  %159 = and i1 %157, %158
  %160 = or i1 %155, %159
  %161 = or i1 %144, %145
  br i1 %160, label %162, label %169

; <label>:162:                                    ; preds = %132
  resume { i8*, i32 } %136

; <label>:163:                                    ; preds = %44, %17
  br label %44

; <label>:164:                                    ; preds = %85, %59
  %165 = landingpad { i8*, i32 }
          cleanup
  %166 = extractvalue { i8*, i32 } %165, 0
  store i8* %166, i8** %9, align 8
  %167 = extractvalue { i8*, i32 } %165, 1
  store i32 %167, i32* %10, align 4
  %168 = bitcast %"class.std::vector.15"* %11 to %"struct.std::_Vector_base.16"*
  call void @_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EED2Ev(%"struct.std::_Vector_base.16"* %168) #10
  br label %85

; <label>:169:                                    ; preds = %132, %105
  %170 = load i8*, i8** %9, align 8
  %171 = load i32, i32* %10, align 4
  %172 = insertvalue { i8*, i32 } undef, i8* %170, 0
  %173 = insertvalue { i8*, i32 } %172, i32 %171, 1
  br label %132
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorImSaImEEED2Ev(%"class.std::allocator.17"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.17"*, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %2, align 8
  %3 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %2, align 8
  %4 = bitcast %"class.std::allocator.17"* %3 to %"class.__gnu_cxx::new_allocator.18"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorImSaImEEED2Ev(%"class.__gnu_cxx::new_allocator.18"* %4) #10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorImSaImEED2Ev(%"class.std::vector.20"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.20"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %2, align 8
  %5 = load %"class.std::vector.20"*, %"class.std::vector.20"** %2, align 8
  %6 = bitcast %"class.std::vector.20"* %5 to %"struct.std::_Vector_base.21"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl", %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = bitcast %"class.std::vector.20"* %5 to %"struct.std::_Vector_base.21"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl", %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = bitcast %"class.std::vector.20"* %5 to %"struct.std::_Vector_base.21"*
  %15 = call dereferenceable(1) %"class.std::allocator.22"* @_ZNSt12_Vector_baseImSaImEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.21"* %14) #10
  invoke void @_ZSt8_DestroyIPmmEvT_S1_RSaIT0_E(i64* %9, i64* %13, %"class.std::allocator.22"* dereferenceable(1) %15)
          to label %16 unwind label %58

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.60
  %18 = load i32, i32* @y.61
  %19 = sub i32 0, 1
  %20 = add i32 %17, %19
  %21 = sub i32 %17, 1
  %22 = mul i32 %17, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %18, 10
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  br i1 %28, label %30, label %119

; <label>:30:                                     ; preds = %16, %119
  %31 = bitcast %"class.std::vector.20"* %5 to %"struct.std::_Vector_base.21"*
  call void @_ZNSt12_Vector_baseImSaImEED2Ev(%"struct.std::_Vector_base.21"* %31) #10
  %32 = load i32, i32* @x.60
  %33 = load i32, i32* @y.61
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  br i1 %55, label %57, label %119

; <label>:57:                                     ; preds = %30
  ret void

; <label>:58:                                     ; preds = %1
  %59 = landingpad { i8*, i32 }
          catch i8* null
  %60 = extractvalue { i8*, i32 } %59, 0
  store i8* %60, i8** %3, align 8
  %61 = extractvalue { i8*, i32 } %59, 1
  store i32 %61, i32* %4, align 4
  %62 = bitcast %"class.std::vector.20"* %5 to %"struct.std::_Vector_base.21"*
  call void @_ZNSt12_Vector_baseImSaImEED2Ev(%"struct.std::_Vector_base.21"* %62) #10
  br label %63

; <label>:63:                                     ; preds = %58
  %64 = load i32, i32* @x.60
  %65 = load i32, i32* @y.61
  %66 = sub i32 %64, -1288301366
  %67 = sub i32 %66, 1
  %68 = add i32 %67, -1288301366
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 false, true
  %77 = and i1 %74, false
  %78 = and i1 %72, %76
  %79 = and i1 %75, false
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 false, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  br i1 %88, label %90, label %121

; <label>:90:                                     ; preds = %63, %121
  %91 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %91) #8
  %92 = load i32, i32* @x.60
  %93 = load i32, i32* @y.61
  %94 = add i32 %92, -1207826440
  %95 = sub i32 %94, 1
  %96 = sub i32 %95, -1207826440
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 true, true
  %105 = and i1 %102, true
  %106 = and i1 %100, %104
  %107 = and i1 %103, true
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 true, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  br i1 %116, label %118, label %121

; <label>:118:                                    ; preds = %90
  unreachable

; <label>:119:                                    ; preds = %30, %16
  %120 = bitcast %"class.std::vector.20"* %5 to %"struct.std::_Vector_base.21"*
  call void @_ZNSt12_Vector_baseImSaImEED2Ev(%"struct.std::_Vector_base.21"* %120) #10
  br label %30

; <label>:121:                                    ; preds = %90, %63
  %122 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %122) #8
  br label %90
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaImED2Ev(%"class.std::allocator.22"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.22"*, align 8
  store %"class.std::allocator.22"* %0, %"class.std::allocator.22"** %2, align 8
  %3 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %2, align 8
  %4 = bitcast %"class.std::allocator.22"* %3 to %"class.__gnu_cxx::new_allocator.23"*
  call void @_ZN9__gnu_cxx13new_allocatorImED2Ev(%"class.__gnu_cxx::new_allocator.23"* %4) #10
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeI4EdgeSaIS0_EEC2Ev(%"class.std::deque"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EEC2Ev(%"class.std::_Deque_base"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt14priority_queueI4EdgeSt5dequeIS0_SaIS0_EESt4lessIS0_EEC2ERKS5_OS3_(%"class.std::priority_queue"*, %"struct.std::less"* dereferenceable(1), %"class.std::deque"* dereferenceable(80)) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::priority_queue"*, align 8
  %5 = alloca %"struct.std::less"*, align 8
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca %"struct.std::_Deque_iterator", align 8
  %8 = alloca %"struct.std::_Deque_iterator", align 8
  %9 = alloca %"struct.std::less", align 1
  %10 = alloca i8*
  %11 = alloca i32
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %4, align 8
  store %"struct.std::less"* %1, %"struct.std::less"** %5, align 8
  store %"class.std::deque"* %2, %"class.std::deque"** %6, align 8
  %12 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %4, align 8
  %13 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 0
  %14 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  %15 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeI4EdgeSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::deque"* dereferenceable(80) %14) #10
  call void @_ZNSt5dequeI4EdgeSaIS0_EEC2EOS2_(%"class.std::deque"* %13, %"class.std::deque"* dereferenceable(80) %15)
  %16 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 1
  %17 = load %"struct.std::less"*, %"struct.std::less"** %5, align 8
  %18 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 0
  call void @_ZNSt5dequeI4EdgeSaIS0_EE5beginEv(%"struct.std::_Deque_iterator"* sret %7, %"class.std::deque"* %18) #10
  %19 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 0
  call void @_ZNSt5dequeI4EdgeSaIS0_EE3endEv(%"struct.std::_Deque_iterator"* sret %8, %"class.std::deque"* %19) #10
  %20 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 1
  invoke void @_ZSt9make_heapISt15_Deque_iteratorI4EdgeRS1_PS1_ESt4lessIS1_EEvT_S7_T0_(%"struct.std::_Deque_iterator"* %7, %"struct.std::_Deque_iterator"* %8)
          to label %21 unwind label %22

; <label>:21:                                     ; preds = %3
  ret void

; <label>:22:                                     ; preds = %3
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  store i8* %24, i8** %10, align 8
  %25 = extractvalue { i8*, i32 } %23, 1
  store i32 %25, i32* %11, align 4
  call void @_ZNSt5dequeI4EdgeSaIS0_EED2Ev(%"class.std::deque"* %13) #10
  br label %26

; <label>:26:                                     ; preds = %22
  %27 = load i32, i32* @x.66
  %28 = load i32, i32* @y.67
  %29 = sub i32 %27, 1716864076
  %30 = sub i32 %29, 1
  %31 = add i32 %30, 1716864076
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  br i1 %39, label %41, label %72

; <label>:41:                                     ; preds = %26, %72
  %42 = load i8*, i8** %10, align 8
  %43 = load i32, i32* %11, align 4
  %44 = insertvalue { i8*, i32 } undef, i8* %42, 0
  %45 = insertvalue { i8*, i32 } %44, i32 %43, 1
  %46 = load i32, i32* @x.66
  %47 = load i32, i32* @y.67
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  br i1 %69, label %71, label %72

; <label>:71:                                     ; preds = %41
  resume { i8*, i32 } %45

; <label>:72:                                     ; preds = %41, %26
  %73 = load i8*, i8** %10, align 8
  %74 = load i32, i32* %11, align 4
  %75 = insertvalue { i8*, i32 } undef, i8* %73, 0
  %76 = insertvalue { i8*, i32 } %75, i32 %74, 1
  br label %41
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeI4EdgeSaIS0_EED2Ev(%"class.std::deque"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::deque"*, align 8
  %3 = alloca %"struct.std::_Deque_iterator", align 8
  %4 = alloca %"struct.std::_Deque_iterator", align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  call void @_ZNSt5dequeI4EdgeSaIS0_EE5beginEv(%"struct.std::_Deque_iterator"* sret %3, %"class.std::deque"* %7) #10
  call void @_ZNSt5dequeI4EdgeSaIS0_EE3endEv(%"struct.std::_Deque_iterator"* sret %4, %"class.std::deque"* %7) #10
  %8 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %9 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt11_Deque_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %8) #10
  invoke void @_ZNSt5dequeI4EdgeSaIS0_EE15_M_destroy_dataESt15_Deque_iteratorIS0_RS0_PS0_ES6_RKS1_(%"class.std::deque"* %7, %"struct.std::_Deque_iterator"* %3, %"struct.std::_Deque_iterator"* %4, %"class.std::allocator.2"* dereferenceable(1) %9)
          to label %10 unwind label %12

; <label>:10:                                     ; preds = %1
  %11 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EED2Ev(%"class.std::_Deque_base"* %11) #10
  ret void

; <label>:12:                                     ; preds = %1
  %13 = landingpad { i8*, i32 }
          catch i8* null
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %5, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %6, align 4
  %16 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EED2Ev(%"class.std::_Deque_base"* %16) #10
  br label %17

; <label>:17:                                     ; preds = %12
  %18 = load i8*, i8** %5, align 8
  call void @__clang_call_terminate(i8* %18) #8
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt14priority_queueI4EdgeSt5dequeIS0_SaIS0_EESt4lessIS0_EE4pushEOS0_(%"class.std::priority_queue"*, %struct.Edge* dereferenceable(24)) #1 comdat align 2 {
  %3 = alloca %"class.std::priority_queue"*, align 8
  %4 = alloca %struct.Edge*, align 8
  %5 = alloca %"struct.std::_Deque_iterator", align 8
  %6 = alloca %"struct.std::_Deque_iterator", align 8
  %7 = alloca %"struct.std::less", align 1
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %3, align 8
  store %struct.Edge* %1, %struct.Edge** %4, align 8
  %8 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %3, align 8
  %9 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %8, i32 0, i32 0
  %10 = load %struct.Edge*, %struct.Edge** %4, align 8
  %11 = call dereferenceable(24) %struct.Edge* @_ZSt4moveIR4EdgeEONSt16remove_referenceIT_E4typeEOS3_(%struct.Edge* dereferenceable(24) %10) #10
  call void @_ZNSt5dequeI4EdgeSaIS0_EE9push_backEOS0_(%"class.std::deque"* %9, %struct.Edge* dereferenceable(24) %11)
  %12 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %8, i32 0, i32 0
  call void @_ZNSt5dequeI4EdgeSaIS0_EE5beginEv(%"struct.std::_Deque_iterator"* sret %5, %"class.std::deque"* %12) #10
  %13 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %8, i32 0, i32 0
  call void @_ZNSt5dequeI4EdgeSaIS0_EE3endEv(%"struct.std::_Deque_iterator"* sret %6, %"class.std::deque"* %13) #10
  %14 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %8, i32 0, i32 1
  call void @_ZSt9push_heapISt15_Deque_iteratorI4EdgeRS1_PS1_ESt4lessIS1_EEvT_S7_T0_(%"struct.std::_Deque_iterator"* %5, %"struct.std::_Deque_iterator"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.10"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.5"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %6 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.10"*, %"class.std::vector.10"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %9, i64 %10
  ret %"class.std::vector.10"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt14priority_queueI4EdgeSt5dequeIS0_SaIS0_EESt4lessIS0_EE5emptyEv(%"class.std::priority_queue"*) #0 comdat align 2 {
  %2 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %2, align 8
  %3 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %3, i32 0, i32 0
  %5 = call zeroext i1 @_ZNKSt5dequeI4EdgeSaIS0_EE5emptyEv(%"class.std::deque"* %4) #10
  ret i1 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %struct.Edge* @_ZNKSt14priority_queueI4EdgeSt5dequeIS0_SaIS0_EESt4lessIS0_EE3topEv(%"class.std::priority_queue"*) #0 comdat align 2 {
  %2 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %2, align 8
  %3 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %3, i32 0, i32 0
  %5 = call dereferenceable(24) %struct.Edge* @_ZNKSt5dequeI4EdgeSaIS0_EE5frontEv(%"class.std::deque"* %4) #10
  ret %struct.Edge* %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt14priority_queueI4EdgeSt5dequeIS0_SaIS0_EESt4lessIS0_EE3popEv(%"class.std::priority_queue"*) #1 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.78
  %5 = load i32, i32* @y.79
  %6 = sub i32 %4, -581961652
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -581961652
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1305328249, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1305328249, label %18
    i32 -1609826534, label %26
    i32 -17010898, label %63
    i32 2136494581, label %64
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1609826534, i32 2136494581
  store i32 %25, i32* %14
  br label %74

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::priority_queue"*, align 8
  %28 = alloca %"struct.std::_Deque_iterator", align 8
  %29 = alloca %"struct.std::_Deque_iterator", align 8
  %30 = alloca %"struct.std::less", align 1
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %27, align 8
  %31 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %27, align 8
  %32 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %31, i32 0, i32 0
  call void @_ZNSt5dequeI4EdgeSaIS0_EE5beginEv(%"struct.std::_Deque_iterator"* sret %28, %"class.std::deque"* %32) #10
  %33 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %31, i32 0, i32 0
  call void @_ZNSt5dequeI4EdgeSaIS0_EE3endEv(%"struct.std::_Deque_iterator"* sret %29, %"class.std::deque"* %33) #10
  %34 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %31, i32 0, i32 1
  call void @_ZSt8pop_heapISt15_Deque_iteratorI4EdgeRS1_PS1_ESt4lessIS1_EEvT_S7_T0_(%"struct.std::_Deque_iterator"* %28, %"struct.std::_Deque_iterator"* %29)
  %35 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %31, i32 0, i32 0
  call void @_ZNSt5dequeI4EdgeSaIS0_EE8pop_backEv(%"class.std::deque"* %35) #10
  %36 = load i32, i32* @x.78
  %37 = load i32, i32* @y.79
  %38 = add i32 %36, 1117193057
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, 1117193057
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 -17010898, i32 2136494581
  store i32 %62, i32* %14
  br label %74

; <label>:63:                                     ; preds = %15
  ret void

; <label>:64:                                     ; preds = %15
  %65 = alloca %"class.std::priority_queue"*, align 8
  %66 = alloca %"struct.std::_Deque_iterator", align 8
  %67 = alloca %"struct.std::_Deque_iterator", align 8
  %68 = alloca %"struct.std::less", align 1
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %65, align 8
  %69 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %65, align 8
  %70 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %69, i32 0, i32 0
  call void @_ZNSt5dequeI4EdgeSaIS0_EE5beginEv(%"struct.std::_Deque_iterator"* sret %66, %"class.std::deque"* %70) #10
  %71 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %69, i32 0, i32 0
  call void @_ZNSt5dequeI4EdgeSaIS0_EE3endEv(%"struct.std::_Deque_iterator"* sret %67, %"class.std::deque"* %71) #10
  %72 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %69, i32 0, i32 1
  call void @_ZSt8pop_heapISt15_Deque_iteratorI4EdgeRS1_PS1_ESt4lessIS1_EEvT_S7_T0_(%"struct.std::_Deque_iterator"* %66, %"struct.std::_Deque_iterator"* %67)
  %73 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %69, i32 0, i32 0
  call void @_ZNSt5dequeI4EdgeSaIS0_EE8pop_backEv(%"class.std::deque"* %73) #10
  store i32 -1609826534, i32* %14
  br label %74

; <label>:74:                                     ; preds = %64, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.20"* @_ZNSt6vectorIS_ImSaImEESaIS1_EEixEm(%"class.std::vector.15"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.20"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.80
  %7 = load i32, i32* @y.81
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1972021723, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %75
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1972021723, label %19
    i32 -493994333, label %39
    i32 -579291188, label %63
    i32 -1956207526, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %75

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -493994333, i32 -1956207526
  store i32 %38, i32* %15
  br label %75

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.15"*, align 8
  %41 = alloca i64, align 8
  store %"class.std::vector.15"* %0, %"class.std::vector.15"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"class.std::vector.15"*, %"class.std::vector.15"** %40, align 8
  %43 = bitcast %"class.std::vector.15"* %42 to %"struct.std::_Vector_base.16"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %44, i32 0, i32 0
  %46 = load %"class.std::vector.20"*, %"class.std::vector.20"** %45, align 8
  %47 = load i64, i64* %41, align 8
  %48 = getelementptr inbounds %"class.std::vector.20", %"class.std::vector.20"* %46, i64 %47
  store %"class.std::vector.20"* %48, %"class.std::vector.20"** %3
  %49 = load i32, i32* @x.80
  %50 = load i32, i32* @y.81
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -579291188, i32 -1956207526
  store i32 %62, i32* %15
  br label %75

; <label>:63:                                     ; preds = %16
  %64 = load volatile %"class.std::vector.20"*, %"class.std::vector.20"** %3
  ret %"class.std::vector.20"* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"class.std::vector.15"*, align 8
  %67 = alloca i64, align 8
  store %"class.std::vector.15"* %0, %"class.std::vector.15"** %66, align 8
  store i64 %1, i64* %67, align 8
  %68 = load %"class.std::vector.15"*, %"class.std::vector.15"** %66, align 8
  %69 = bitcast %"class.std::vector.15"* %68 to %"struct.std::_Vector_base.16"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %70, i32 0, i32 0
  %72 = load %"class.std::vector.20"*, %"class.std::vector.20"** %71, align 8
  %73 = load i64, i64* %67, align 8
  %74 = getelementptr inbounds %"class.std::vector.20", %"class.std::vector.20"* %72, i64 %73
  store i32 -493994333, i32* %15
  br label %75

; <label>:75:                                     ; preds = %65, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt6vectorImSaImEEixEm(%"class.std::vector.20"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.20"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.20"*, %"class.std::vector.20"** %3, align 8
  %6 = bitcast %"class.std::vector.20"* %5 to %"struct.std::_Vector_base.21"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl", %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds i64, i64* %9, i64 %10
  ret i64* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt14priority_queueI4EdgeSt5dequeIS0_SaIS0_EESt4lessIS0_EED2Ev(%"class.std::priority_queue"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.84
  %5 = load i32, i32* @y.85
  %6 = add i32 %4, 2108151315
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 2108151315
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -245010901, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %50
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -245010901, label %18
    i32 89785028, label %26
    i32 -663499691, label %45
    i32 -613113822, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %50

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 89785028, i32 -613113822
  store i32 %25, i32* %14
  br label %50

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %27, align 8
  %28 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %27, align 8
  %29 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %28, i32 0, i32 0
  call void @_ZNSt5dequeI4EdgeSaIS0_EED2Ev(%"class.std::deque"* %29) #10
  %30 = load i32, i32* @x.84
  %31 = load i32, i32* @y.85
  %32 = add i32 %30, 281586294
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 281586294
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -663499691, i32 -613113822
  store i32 %44, i32* %14
  br label %50

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %47, align 8
  %48 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %47, align 8
  %49 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %48, i32 0, i32 0
  call void @_ZNSt5dequeI4EdgeSaIS0_EED2Ev(%"class.std::deque"* %49) #10
  store i32 89785028, i32* %14
  br label %50

; <label>:50:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IxSaIxEESaIS1_EEC2EOS3_(%"class.std::vector.5"*, %"class.std::vector.5"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.86
  %6 = load i32, i32* @y.87
  %7 = add i32 %5, 339097135
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 339097135
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -975572171, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -975572171, label %19
    i32 1657897282, label %27
    i32 -1265065990, label %61
    i32 2065295217, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1657897282, i32 2065295217
  store i32 %26, i32* %15
  br label %70

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.5"*, align 8
  %29 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %28, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %29, align 8
  %30 = load %"class.std::vector.5"*, %"class.std::vector.5"** %28, align 8
  %31 = bitcast %"class.std::vector.5"* %30 to %"struct.std::_Vector_base.6"*
  %32 = load %"class.std::vector.5"*, %"class.std::vector.5"** %29, align 8
  %33 = call dereferenceable(24) %"class.std::vector.5"* @_ZSt4moveIRSt6vectorIS0_IxSaIxEESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.5"* dereferenceable(24) %32) #10
  %34 = bitcast %"class.std::vector.5"* %33 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EEC2EOS4_(%"struct.std::_Vector_base.6"* %31, %"struct.std::_Vector_base.6"* dereferenceable(24) %34) #10
  %35 = load i32, i32* @x.86
  %36 = load i32, i32* @y.87
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -1265065990, i32 2065295217
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::vector.5"*, align 8
  %64 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %63, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %64, align 8
  %65 = load %"class.std::vector.5"*, %"class.std::vector.5"** %63, align 8
  %66 = bitcast %"class.std::vector.5"* %65 to %"struct.std::_Vector_base.6"*
  %67 = load %"class.std::vector.5"*, %"class.std::vector.5"** %64, align 8
  %68 = call dereferenceable(24) %"class.std::vector.5"* @_ZSt4moveIRSt6vectorIS0_IxSaIxEESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.5"* dereferenceable(24) %67) #10
  %69 = bitcast %"class.std::vector.5"* %68 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EEC2EOS4_(%"struct.std::_Vector_base.6"* %66, %"struct.std::_Vector_base.6"* dereferenceable(24) %69) #10
  store i32 1657897282, i32* %15
  br label %70

; <label>:70:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_ImSaImEESaIS1_EED2Ev(%"class.std::vector.15"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.88
  %3 = load i32, i32* @y.89
  %4 = add i32 %2, 906071304
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 906071304
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %66

; <label>:16:                                     ; preds = %1, %66
  %17 = alloca %"class.std::vector.15"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"class.std::vector.15"* %0, %"class.std::vector.15"** %17, align 8
  %20 = load %"class.std::vector.15"*, %"class.std::vector.15"** %17, align 8
  %21 = bitcast %"class.std::vector.15"* %20 to %"struct.std::_Vector_base.16"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %22, i32 0, i32 0
  %24 = load %"class.std::vector.20"*, %"class.std::vector.20"** %23, align 8
  %25 = bitcast %"class.std::vector.15"* %20 to %"struct.std::_Vector_base.16"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %26, i32 0, i32 1
  %28 = load %"class.std::vector.20"*, %"class.std::vector.20"** %27, align 8
  %29 = bitcast %"class.std::vector.15"* %20 to %"struct.std::_Vector_base.16"*
  %30 = call dereferenceable(1) %"class.std::allocator.17"* @_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.16"* %29) #10
  %31 = load i32, i32* @x.88
  %32 = load i32, i32* @y.89
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  br i1 %54, label %56, label %66

; <label>:56:                                     ; preds = %16
  invoke void @_ZSt8_DestroyIPSt6vectorImSaImEES2_EvT_S4_RSaIT0_E(%"class.std::vector.20"* %24, %"class.std::vector.20"* %28, %"class.std::allocator.17"* dereferenceable(1) %30)
          to label %57 unwind label %59

; <label>:57:                                     ; preds = %56
  %58 = bitcast %"class.std::vector.15"* %20 to %"struct.std::_Vector_base.16"*
  call void @_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EED2Ev(%"struct.std::_Vector_base.16"* %58) #10
  ret void

; <label>:59:                                     ; preds = %56
  %60 = landingpad { i8*, i32 }
          catch i8* null
  %61 = extractvalue { i8*, i32 } %60, 0
  store i8* %61, i8** %18, align 8
  %62 = extractvalue { i8*, i32 } %60, 1
  store i32 %62, i32* %19, align 4
  %63 = bitcast %"class.std::vector.15"* %20 to %"struct.std::_Vector_base.16"*
  call void @_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EED2Ev(%"struct.std::_Vector_base.16"* %63) #10
  br label %64

; <label>:64:                                     ; preds = %59
  %65 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %65) #8
  unreachable

; <label>:66:                                     ; preds = %16, %1
  %67 = alloca %"class.std::vector.15"*, align 8
  %68 = alloca i8*
  %69 = alloca i32
  store %"class.std::vector.15"* %0, %"class.std::vector.15"** %67, align 8
  %70 = load %"class.std::vector.15"*, %"class.std::vector.15"** %67, align 8
  %71 = bitcast %"class.std::vector.15"* %70 to %"struct.std::_Vector_base.16"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %72, i32 0, i32 0
  %74 = load %"class.std::vector.20"*, %"class.std::vector.20"** %73, align 8
  %75 = bitcast %"class.std::vector.15"* %70 to %"struct.std::_Vector_base.16"*
  %76 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %76, i32 0, i32 1
  %78 = load %"class.std::vector.20"*, %"class.std::vector.20"** %77, align 8
  %79 = bitcast %"class.std::vector.15"* %70 to %"struct.std::_Vector_base.16"*
  %80 = call dereferenceable(1) %"class.std::allocator.17"* @_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.16"* %79) #10
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev(%"class.std::vector.5"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.90
  %3 = load i32, i32* @y.91
  %4 = sub i32 %2, -949644120
  %5 = sub i32 %4, 1
  %6 = add i32 %5, -949644120
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %108

; <label>:28:                                     ; preds = %1, %108
  %29 = alloca %"class.std::vector.5"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %29, align 8
  %32 = load %"class.std::vector.5"*, %"class.std::vector.5"** %29, align 8
  %33 = bitcast %"class.std::vector.5"* %32 to %"struct.std::_Vector_base.6"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load %"class.std::vector.10"*, %"class.std::vector.10"** %35, align 8
  %37 = bitcast %"class.std::vector.5"* %32 to %"struct.std::_Vector_base.6"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %38, i32 0, i32 1
  %40 = load %"class.std::vector.10"*, %"class.std::vector.10"** %39, align 8
  %41 = bitcast %"class.std::vector.5"* %32 to %"struct.std::_Vector_base.6"*
  %42 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %41) #10
  %43 = load i32, i32* @x.90
  %44 = load i32, i32* @y.91
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  br i1 %54, label %56, label %108

; <label>:56:                                     ; preds = %28
  invoke void @_ZSt8_DestroyIPSt6vectorIxSaIxEES2_EvT_S4_RSaIT0_E(%"class.std::vector.10"* %36, %"class.std::vector.10"* %40, %"class.std::allocator.7"* dereferenceable(1) %42)
          to label %57 unwind label %59

; <label>:57:                                     ; preds = %56
  %58 = bitcast %"class.std::vector.5"* %32 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev(%"struct.std::_Vector_base.6"* %58) #10
  ret void

; <label>:59:                                     ; preds = %56
  %60 = landingpad { i8*, i32 }
          catch i8* null
  %61 = extractvalue { i8*, i32 } %60, 0
  store i8* %61, i8** %30, align 8
  %62 = extractvalue { i8*, i32 } %60, 1
  store i32 %62, i32* %31, align 4
  %63 = bitcast %"class.std::vector.5"* %32 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev(%"struct.std::_Vector_base.6"* %63) #10
  br label %64

; <label>:64:                                     ; preds = %59
  %65 = load i32, i32* @x.90
  %66 = load i32, i32* @y.91
  %67 = sub i32 %65, -2080514512
  %68 = sub i32 %67, 1
  %69 = add i32 %68, -2080514512
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = xor i1 %73, true
  %76 = xor i1 %74, true
  %77 = xor i1 true, true
  %78 = and i1 %75, true
  %79 = and i1 %73, %77
  %80 = and i1 %76, true
  %81 = and i1 %74, %77
  %82 = or i1 %78, %79
  %83 = or i1 %80, %81
  %84 = xor i1 %82, %83
  %85 = or i1 %75, %76
  %86 = xor i1 %85, true
  %87 = or i1 true, %77
  %88 = and i1 %86, %87
  %89 = or i1 %84, %88
  %90 = or i1 %73, %74
  br i1 %89, label %91, label %123

; <label>:91:                                     ; preds = %64, %123
  %92 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %92) #8
  %93 = load i32, i32* @x.90
  %94 = load i32, i32* @y.91
  %95 = add i32 %93, -1855962576
  %96 = sub i32 %95, 1
  %97 = sub i32 %96, -1855962576
  %98 = sub i32 %93, 1
  %99 = mul i32 %93, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %94, 10
  %103 = and i1 %101, %102
  %104 = xor i1 %101, %102
  %105 = or i1 %103, %104
  %106 = or i1 %101, %102
  br i1 %105, label %107, label %123

; <label>:107:                                    ; preds = %91
  unreachable

; <label>:108:                                    ; preds = %28, %1
  %109 = alloca %"class.std::vector.5"*, align 8
  %110 = alloca i8*
  %111 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %109, align 8
  %112 = load %"class.std::vector.5"*, %"class.std::vector.5"** %109, align 8
  %113 = bitcast %"class.std::vector.5"* %112 to %"struct.std::_Vector_base.6"*
  %114 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %113, i32 0, i32 0
  %115 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %114, i32 0, i32 0
  %116 = load %"class.std::vector.10"*, %"class.std::vector.10"** %115, align 8
  %117 = bitcast %"class.std::vector.5"* %112 to %"struct.std::_Vector_base.6"*
  %118 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %117, i32 0, i32 0
  %119 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %118, i32 0, i32 1
  %120 = load %"class.std::vector.10"*, %"class.std::vector.10"** %119, align 8
  %121 = bitcast %"class.std::vector.5"* %112 to %"struct.std::_Vector_base.6"*
  %122 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %121) #10
  br label %28

; <label>:123:                                    ; preds = %91, %64
  %124 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %124) #8
  br label %91
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() #3 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = load i32, i32* @x.92
  %2 = load i32, i32* @y.93
  %3 = sub i32 0, 1
  %4 = add i32 %1, %3
  %5 = sub i32 %1, 1
  %6 = mul i32 %1, %4
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %2, 10
  %10 = and i1 %8, %9
  %11 = xor i1 %8, %9
  %12 = or i1 %10, %11
  %13 = or i1 %8, %9
  br i1 %12, label %14, label %389

; <label>:14:                                     ; preds = %0, %389
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca %"class.std::vector", align 8
  %19 = alloca %"class.std::allocator", align 1
  %20 = alloca i8*
  %21 = alloca i32
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca i64, align 8
  %25 = alloca i64, align 8
  %26 = alloca %"class.std::vector.5", align 8
  %27 = alloca %"class.std::vector", align 8
  %28 = alloca i32
  %29 = alloca %"class.std::vector.5"*, align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %32 = alloca %"class.std::vector.10", align 8
  %33 = alloca i64, align 8
  store i32 0, i32* %15, align 4
  %34 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i64* %16, i64* %17)
  %35 = load i64, i64* %16, align 8
  call void @_ZNSaISt6vectorI4EdgeSaIS0_EEEC2Ev(%"class.std::allocator"* %19) #10
  %36 = load i32, i32* @x.92
  %37 = load i32, i32* @y.93
  %38 = sub i32 %36, -1902066258
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -1902066258
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  br i1 %48, label %50, label %389

; <label>:50:                                     ; preds = %14
  invoke void @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEC2EmRKS3_(%"class.std::vector"* %18, i64 %35, %"class.std::allocator"* dereferenceable(1) %19)
          to label %51 unwind label %139

; <label>:51:                                     ; preds = %50
  %52 = load i32, i32* @x.92
  %53 = load i32, i32* @y.93
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  br i1 %75, label %77, label %411

; <label>:77:                                     ; preds = %51, %411
  call void @_ZNSaISt6vectorI4EdgeSaIS0_EEED2Ev(%"class.std::allocator"* %19) #10
  store i64 0, i64* %22, align 8
  %78 = load i32, i32* @x.92
  %79 = load i32, i32* @y.93
  %80 = sub i32 %78, -892102401
  %81 = sub i32 %80, 1
  %82 = add i32 %81, -892102401
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = and i1 %86, %87
  %89 = xor i1 %86, %87
  %90 = or i1 %88, %89
  %91 = or i1 %86, %87
  br i1 %90, label %92, label %411

; <label>:92:                                     ; preds = %77
  br label %93

; <label>:93:                                     ; preds = %132, %92
  %94 = load i64, i64* %22, align 8
  %95 = load i64, i64* %17, align 8
  %96 = icmp ult i64 %94, %95
  br i1 %96, label %97, label %147

; <label>:97:                                     ; preds = %93
  %98 = invoke i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i32 0, i32 0), i64* %23, i64* %24, i64* %25)
          to label %99 unwind label %143

; <label>:99:                                     ; preds = %97
  %100 = load i32, i32* @x.92
  %101 = load i32, i32* @y.93
  %102 = sub i32 0, 1
  %103 = add i32 %100, %102
  %104 = sub i32 %100, 1
  %105 = mul i32 %100, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %101, 10
  %109 = and i1 %107, %108
  %110 = xor i1 %107, %108
  %111 = or i1 %109, %110
  %112 = or i1 %107, %108
  br i1 %111, label %113, label %412

; <label>:113:                                    ; preds = %99, %412
  %114 = load i64, i64* %23, align 8
  %115 = load i64, i64* %24, align 8
  %116 = load i64, i64* %25, align 8
  %117 = load i32, i32* @x.92
  %118 = load i32, i32* @y.93
  %119 = sub i32 0, 1
  %120 = add i32 %117, %119
  %121 = sub i32 %117, 1
  %122 = mul i32 %117, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %118, 10
  %126 = and i1 %124, %125
  %127 = xor i1 %124, %125
  %128 = or i1 %126, %127
  %129 = or i1 %124, %125
  br i1 %128, label %130, label %412

; <label>:130:                                    ; preds = %113
  invoke void @_Z7connectRSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEmmx(%"class.std::vector"* dereferenceable(24) %18, i64 %114, i64 %115, i64 %116)
          to label %131 unwind label %143

; <label>:131:                                    ; preds = %130
  br label %132

; <label>:132:                                    ; preds = %131
  %133 = load i64, i64* %22, align 8
  %134 = sub i64 0, %133
  %135 = sub i64 0, 1
  %136 = add i64 %134, %135
  %137 = sub i64 0, %136
  %138 = add i64 %133, 1
  store i64 %137, i64* %22, align 8
  br label %93

; <label>:139:                                    ; preds = %50
  %140 = landingpad { i8*, i32 }
          cleanup
  %141 = extractvalue { i8*, i32 } %140, 0
  store i8* %141, i8** %20, align 8
  %142 = extractvalue { i8*, i32 } %140, 1
  store i32 %142, i32* %21, align 4
  call void @_ZNSaISt6vectorI4EdgeSaIS0_EEED2Ev(%"class.std::allocator"* %19) #10
  br label %355

; <label>:143:                                    ; preds = %147, %130, %97
  %144 = landingpad { i8*, i32 }
          cleanup
  %145 = extractvalue { i8*, i32 } %144, 0
  store i8* %145, i8** %20, align 8
  %146 = extractvalue { i8*, i32 } %144, 1
  store i32 %146, i32* %21, align 4
  br label %354

; <label>:147:                                    ; preds = %93
  invoke void @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEC2ERKS4_(%"class.std::vector"* %27, %"class.std::vector"* dereferenceable(24) %18)
          to label %148 unwind label %143

; <label>:148:                                    ; preds = %147
  invoke void @_Z17shortest_distanceSt6vectorIS_I4EdgeSaIS0_EESaIS2_EE(%"class.std::vector.5"* sret %26, %"class.std::vector"* %27)
          to label %149 unwind label %209

; <label>:149:                                    ; preds = %148
  call void @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EED2Ev(%"class.std::vector"* %27) #10
  %150 = call zeroext i1 @_ZNKSt6vectorIS_IxSaIxEESaIS1_EE5emptyEv(%"class.std::vector.5"* %26) #10
  br i1 %150, label %151, label %217

; <label>:151:                                    ; preds = %149
  %152 = load i32, i32* @x.92
  %153 = load i32, i32* @y.93
  %154 = add i32 %152, -248007588
  %155 = sub i32 %154, 1
  %156 = sub i32 %155, -248007588
  %157 = sub i32 %152, 1
  %158 = mul i32 %152, %156
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %153, 10
  %162 = and i1 %160, %161
  %163 = xor i1 %160, %161
  %164 = or i1 %162, %163
  %165 = or i1 %160, %161
  br i1 %164, label %166, label %416

; <label>:166:                                    ; preds = %151, %416
  %167 = load i32, i32* @x.92
  %168 = load i32, i32* @y.93
  %169 = sub i32 %167, -875815869
  %170 = sub i32 %169, 1
  %171 = add i32 %170, -875815869
  %172 = sub i32 %167, 1
  %173 = mul i32 %167, %171
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %168, 10
  %177 = xor i1 %175, true
  %178 = xor i1 %176, true
  %179 = xor i1 false, true
  %180 = and i1 %177, false
  %181 = and i1 %175, %179
  %182 = and i1 %178, false
  %183 = and i1 %176, %179
  %184 = or i1 %180, %181
  %185 = or i1 %182, %183
  %186 = xor i1 %184, %185
  %187 = or i1 %177, %178
  %188 = xor i1 %187, true
  %189 = or i1 false, %179
  %190 = and i1 %188, %189
  %191 = or i1 %186, %190
  %192 = or i1 %175, %176
  br i1 %191, label %193, label %416

; <label>:193:                                    ; preds = %166
  %194 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i32 0, i32 0))
          to label %195 unwind label %213

; <label>:195:                                    ; preds = %193
  %196 = icmp ne i32 %194, 0
  %197 = xor i1 %196, true
  %198 = and i1 false, %197
  %199 = xor i1 false, true
  %200 = and i1 %196, %199
  %201 = xor i1 true, true
  %202 = and i1 %201, false
  %203 = and i1 true, %199
  %204 = or i1 %198, %200
  %205 = or i1 %202, %203
  %206 = xor i1 %204, %205
  %207 = xor i1 %196, true
  %208 = zext i1 %206 to i32
  store i32 %208, i32* %15, align 4
  store i32 1, i32* %28, align 4
  br label %351

; <label>:209:                                    ; preds = %148
  %210 = landingpad { i8*, i32 }
          cleanup
  %211 = extractvalue { i8*, i32 } %210, 0
  store i8* %211, i8** %20, align 8
  %212 = extractvalue { i8*, i32 } %210, 1
  store i32 %212, i32* %21, align 4
  call void @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EED2Ev(%"class.std::vector"* %27) #10
  br label %354

; <label>:213:                                    ; preds = %226, %193
  %214 = landingpad { i8*, i32 }
          cleanup
  %215 = extractvalue { i8*, i32 } %214, 0
  store i8* %215, i8** %20, align 8
  %216 = extractvalue { i8*, i32 } %214, 1
  store i32 %216, i32* %21, align 4
  br label %353

; <label>:217:                                    ; preds = %149
  store %"class.std::vector.5"* %26, %"class.std::vector.5"** %29, align 8
  %218 = load %"class.std::vector.5"*, %"class.std::vector.5"** %29, align 8
  %219 = call %"class.std::vector.10"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EE5beginEv(%"class.std::vector.5"* %218) #10
  %220 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %30, i32 0, i32 0
  store %"class.std::vector.10"* %219, %"class.std::vector.10"** %220, align 8
  %221 = load %"class.std::vector.5"*, %"class.std::vector.5"** %29, align 8
  %222 = call %"class.std::vector.10"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EE3endEv(%"class.std::vector.5"* %221) #10
  %223 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %31, i32 0, i32 0
  store %"class.std::vector.10"* %222, %"class.std::vector.10"** %223, align 8
  br label %224

; <label>:224:                                    ; preds = %348, %217
  %225 = call zeroext i1 @_ZN9__gnu_cxxneIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator.25"* dereferenceable(8) %30, %"class.__gnu_cxx::__normal_iterator.25"* dereferenceable(8) %31) #10
  br i1 %225, label %226, label %350

; <label>:226:                                    ; preds = %224
  %227 = call dereferenceable(24) %"class.std::vector.10"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.25"* %30) #10
  invoke void @_ZNSt6vectorIxSaIxEEC2ERKS1_(%"class.std::vector.10"* %32, %"class.std::vector.10"* dereferenceable(24) %227)
          to label %228 unwind label %213

; <label>:228:                                    ; preds = %226
  store i64 0, i64* %33, align 8
  br label %229

; <label>:229:                                    ; preds = %340, %228
  %230 = load i64, i64* %33, align 8
  %231 = load i64, i64* %16, align 8
  %232 = icmp ult i64 %230, %231
  br i1 %232, label %233, label %347

; <label>:233:                                    ; preds = %229
  %234 = load i64, i64* %33, align 8
  %235 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.10"* %32, i64 %234) #10
  %236 = load i64, i64* %235, align 8
  %237 = icmp slt i64 %236, 144115188075855872
  br i1 %237, label %238, label %328

; <label>:238:                                    ; preds = %233
  %239 = load i32, i32* @x.92
  %240 = load i32, i32* @y.93
  %241 = add i32 %239, 940890288
  %242 = sub i32 %241, 1
  %243 = sub i32 %242, 940890288
  %244 = sub i32 %239, 1
  %245 = mul i32 %239, %243
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %240, 10
  %249 = and i1 %247, %248
  %250 = xor i1 %247, %248
  %251 = or i1 %249, %250
  %252 = or i1 %247, %248
  br i1 %251, label %253, label %417

; <label>:253:                                    ; preds = %238, %417
  %254 = load i64, i64* %33, align 8
  %255 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.10"* %32, i64 %254) #10
  %256 = load i64, i64* %255, align 8
  %257 = load i64, i64* %33, align 8
  %258 = load i64, i64* %16, align 8
  %259 = sub i64 %258, -3165952524900533054
  %260 = sub i64 %259, 1
  %261 = add i64 %260, -3165952524900533054
  %262 = sub i64 %258, 1
  %263 = icmp ult i64 %257, %261
  %264 = select i1 %263, i8 32, i8 10
  %265 = sext i8 %264 to i32
  %266 = load i32, i32* @x.92
  %267 = load i32, i32* @y.93
  %268 = add i32 %266, -860868105
  %269 = sub i32 %268, 1
  %270 = sub i32 %269, -860868105
  %271 = sub i32 %266, 1
  %272 = mul i32 %266, %270
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %267, 10
  %276 = and i1 %274, %275
  %277 = xor i1 %274, %275
  %278 = or i1 %276, %277
  %279 = or i1 %274, %275
  br i1 %278, label %280, label %417

; <label>:280:                                    ; preds = %253
  %281 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0), i64 %256, i32 %265)
          to label %282 unwind label %283

; <label>:282:                                    ; preds = %280
  br label %339

; <label>:283:                                    ; preds = %328, %280
  %284 = load i32, i32* @x.92
  %285 = load i32, i32* @y.93
  %286 = add i32 %284, -888608370
  %287 = sub i32 %286, 1
  %288 = sub i32 %287, -888608370
  %289 = sub i32 %284, 1
  %290 = mul i32 %284, %288
  %291 = urem i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %285, 10
  %294 = xor i1 %292, true
  %295 = xor i1 %293, true
  %296 = xor i1 false, true
  %297 = and i1 %294, false
  %298 = and i1 %292, %296
  %299 = and i1 %295, false
  %300 = and i1 %293, %296
  %301 = or i1 %297, %298
  %302 = or i1 %299, %300
  %303 = xor i1 %301, %302
  %304 = or i1 %294, %295
  %305 = xor i1 %304, true
  %306 = or i1 false, %296
  %307 = and i1 %305, %306
  %308 = or i1 %303, %307
  %309 = or i1 %292, %293
  br i1 %308, label %310, label %448

; <label>:310:                                    ; preds = %283, %448
  %311 = landingpad { i8*, i32 }
          cleanup
  %312 = extractvalue { i8*, i32 } %311, 0
  store i8* %312, i8** %20, align 8
  %313 = extractvalue { i8*, i32 } %311, 1
  store i32 %313, i32* %21, align 4
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.10"* %32) #10
  %314 = load i32, i32* @x.92
  %315 = load i32, i32* @y.93
  %316 = sub i32 0, 1
  %317 = add i32 %314, %316
  %318 = sub i32 %314, 1
  %319 = mul i32 %314, %317
  %320 = urem i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = icmp slt i32 %315, 10
  %323 = and i1 %321, %322
  %324 = xor i1 %321, %322
  %325 = or i1 %323, %324
  %326 = or i1 %321, %322
  br i1 %325, label %327, label %448

; <label>:327:                                    ; preds = %310
  br label %353

; <label>:328:                                    ; preds = %233
  %329 = load i64, i64* %33, align 8
  %330 = load i64, i64* %16, align 8
  %331 = sub i64 0, 1
  %332 = add i64 %330, %331
  %333 = sub i64 %330, 1
  %334 = icmp ult i64 %329, %332
  %335 = select i1 %334, i8 32, i8 10
  %336 = sext i8 %335 to i32
  %337 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i32 %336)
          to label %338 unwind label %283

; <label>:338:                                    ; preds = %328
  br label %339

; <label>:339:                                    ; preds = %338, %282
  br label %340

; <label>:340:                                    ; preds = %339
  %341 = load i64, i64* %33, align 8
  %342 = sub i64 0, %341
  %343 = sub i64 0, 1
  %344 = add i64 %342, %343
  %345 = sub i64 0, %344
  %346 = add i64 %341, 1
  store i64 %345, i64* %33, align 8
  br label %229

; <label>:347:                                    ; preds = %229
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.10"* %32) #10
  br label %348

; <label>:348:                                    ; preds = %347
  %349 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.25"* @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator.25"* %30) #10
  br label %224

; <label>:350:                                    ; preds = %224
  store i32 0, i32* %15, align 4
  store i32 1, i32* %28, align 4
  br label %351

; <label>:351:                                    ; preds = %350, %195
  call void @_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev(%"class.std::vector.5"* %26) #10
  call void @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EED2Ev(%"class.std::vector"* %18) #10
  %352 = load i32, i32* %15, align 4
  ret i32 %352

; <label>:353:                                    ; preds = %327, %213
  call void @_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev(%"class.std::vector.5"* %26) #10
  br label %354

; <label>:354:                                    ; preds = %353, %209, %143
  call void @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EED2Ev(%"class.std::vector"* %18) #10
  br label %355

; <label>:355:                                    ; preds = %354, %139
  %356 = load i32, i32* @x.92
  %357 = load i32, i32* @y.93
  %358 = sub i32 0, 1
  %359 = add i32 %356, %358
  %360 = sub i32 %356, 1
  %361 = mul i32 %356, %359
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %357, 10
  %365 = and i1 %363, %364
  %366 = xor i1 %363, %364
  %367 = or i1 %365, %366
  %368 = or i1 %363, %364
  br i1 %367, label %369, label %452

; <label>:369:                                    ; preds = %355, %452
  %370 = load i8*, i8** %20, align 8
  %371 = load i32, i32* %21, align 4
  %372 = insertvalue { i8*, i32 } undef, i8* %370, 0
  %373 = insertvalue { i8*, i32 } %372, i32 %371, 1
  %374 = load i32, i32* @x.92
  %375 = load i32, i32* @y.93
  %376 = sub i32 %374, 1655623927
  %377 = sub i32 %376, 1
  %378 = add i32 %377, 1655623927
  %379 = sub i32 %374, 1
  %380 = mul i32 %374, %378
  %381 = urem i32 %380, 2
  %382 = icmp eq i32 %381, 0
  %383 = icmp slt i32 %375, 10
  %384 = and i1 %382, %383
  %385 = xor i1 %382, %383
  %386 = or i1 %384, %385
  %387 = or i1 %382, %383
  br i1 %386, label %388, label %452

; <label>:388:                                    ; preds = %369
  resume { i8*, i32 } %373

; <label>:389:                                    ; preds = %14, %0
  %390 = alloca i32, align 4
  %391 = alloca i64, align 8
  %392 = alloca i64, align 8
  %393 = alloca %"class.std::vector", align 8
  %394 = alloca %"class.std::allocator", align 1
  %395 = alloca i8*
  %396 = alloca i32
  %397 = alloca i64, align 8
  %398 = alloca i64, align 8
  %399 = alloca i64, align 8
  %400 = alloca i64, align 8
  %401 = alloca %"class.std::vector.5", align 8
  %402 = alloca %"class.std::vector", align 8
  %403 = alloca i32
  %404 = alloca %"class.std::vector.5"*, align 8
  %405 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %406 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %407 = alloca %"class.std::vector.10", align 8
  %408 = alloca i64, align 8
  store i32 0, i32* %390, align 4
  %409 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i64* %391, i64* %392)
  %410 = load i64, i64* %391, align 8
  call void @_ZNSaISt6vectorI4EdgeSaIS0_EEEC2Ev(%"class.std::allocator"* %394) #10
  br label %14

; <label>:411:                                    ; preds = %77, %51
  call void @_ZNSaISt6vectorI4EdgeSaIS0_EEED2Ev(%"class.std::allocator"* %19) #10
  store i64 0, i64* %22, align 8
  br label %77

; <label>:412:                                    ; preds = %113, %99
  %413 = load i64, i64* %23, align 8
  %414 = load i64, i64* %24, align 8
  %415 = load i64, i64* %25, align 8
  br label %113

; <label>:416:                                    ; preds = %166, %151
  br label %166

; <label>:417:                                    ; preds = %253, %238
  %418 = load i64, i64* %33, align 8
  %419 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.10"* %32, i64 %418) #10
  %420 = load i64, i64* %419, align 8
  %421 = load i64, i64* %33, align 8
  %422 = load i64, i64* %16, align 8
  %423 = add i64 %422, -3747773397483328516
  %424 = sub i64 %423, 1
  %425 = sub i64 %424, -3747773397483328516
  %426 = sub i64 %422, 1
  %427 = mul i64 %425, 1
  %428 = add i64 0, -5461859122184983305
  %429 = sub i64 %428, %422
  %430 = sub i64 %429, -5461859122184983305
  %431 = sub i64 0, %422
  %432 = sub i64 %430, -256493025572698379
  %433 = add i64 %432, 1
  %434 = add i64 %433, -256493025572698379
  %435 = add i64 %430, 1
  %436 = shl i64 %422, 1
  %437 = sub i64 0, 1
  %438 = add i64 %422, %437
  %439 = sub i64 %422, 1
  %440 = mul i64 %438, 1
  %441 = sub i64 %422, -5388247816670820550
  %442 = sub i64 %441, 1
  %443 = add i64 %442, -5388247816670820550
  %444 = sub i64 %422, 1
  %445 = icmp ult i64 %421, %443
  %446 = select i1 %445, i8 32, i8 10
  %447 = sext i8 %446 to i32
  br label %253

; <label>:448:                                    ; preds = %310, %283
  %449 = landingpad { i8*, i32 }
          cleanup
  %450 = extractvalue { i8*, i32 } %449, 0
  store i8* %450, i8** %20, align 8
  %451 = extractvalue { i8*, i32 } %449, 1
  store i32 %451, i32* %21, align 4
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.10"* %32) #10
  br label %310

; <label>:452:                                    ; preds = %369, %355
  %453 = load i8*, i8** %20, align 8
  %454 = load i32, i32* %21, align 4
  %455 = insertvalue { i8*, i32 } undef, i8* %453, 0
  %456 = insertvalue { i8*, i32 } %455, i32 %454, 1
  br label %369
}

declare i32 @scanf(i8*, ...) #4

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorI4EdgeSaIS0_EEEC2Ev(%"class.std::allocator"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEEC2Ev(%"class.__gnu_cxx::new_allocator"* %4) #10
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEC2EmRKS3_(%"class.std::vector"*, i64, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.96
  %5 = load i32, i32* @y.97
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %5, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %96

; <label>:29:                                     ; preds = %3, %96
  %30 = alloca %"class.std::vector"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.std::allocator"*, align 8
  %33 = alloca i8*
  %34 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %30, align 8
  store i64 %1, i64* %31, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %32, align 8
  %35 = load %"class.std::vector"*, %"class.std::vector"** %30, align 8
  %36 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %37 = load i64, i64* %31, align 8
  %38 = load %"class.std::allocator"*, %"class.std::allocator"** %32, align 8
  call void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EEC2EmRKS4_(%"struct.std::_Vector_base"* %36, i64 %37, %"class.std::allocator"* dereferenceable(1) %38)
  %39 = load i64, i64* %31, align 8
  %40 = load i32, i32* @x.96
  %41 = load i32, i32* @y.97
  %42 = sub i32 %40, -1223990868
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -1223990868
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  br i1 %52, label %54, label %96

; <label>:54:                                     ; preds = %29
  invoke void @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EE21_M_default_initializeEm(%"class.std::vector"* %35, i64 %39)
          to label %55 unwind label %56

; <label>:55:                                     ; preds = %54
  ret void

; <label>:56:                                     ; preds = %54
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %33, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %34, align 4
  %60 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EED2Ev(%"struct.std::_Vector_base"* %60) #10
  br label %61

; <label>:61:                                     ; preds = %56
  %62 = load i32, i32* @x.96
  %63 = load i32, i32* @y.97
  %64 = add i32 %62, 1763668610
  %65 = sub i32 %64, 1
  %66 = sub i32 %65, 1763668610
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  br i1 %74, label %76, label %107

; <label>:76:                                     ; preds = %61, %107
  %77 = load i8*, i8** %33, align 8
  %78 = load i32, i32* %34, align 4
  %79 = insertvalue { i8*, i32 } undef, i8* %77, 0
  %80 = insertvalue { i8*, i32 } %79, i32 %78, 1
  %81 = load i32, i32* @x.96
  %82 = load i32, i32* @y.97
  %83 = sub i32 %81, 367413296
  %84 = sub i32 %83, 1
  %85 = add i32 %84, 367413296
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  br i1 %93, label %95, label %107

; <label>:95:                                     ; preds = %76
  resume { i8*, i32 } %80

; <label>:96:                                     ; preds = %29, %3
  %97 = alloca %"class.std::vector"*, align 8
  %98 = alloca i64, align 8
  %99 = alloca %"class.std::allocator"*, align 8
  %100 = alloca i8*
  %101 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %97, align 8
  store i64 %1, i64* %98, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %99, align 8
  %102 = load %"class.std::vector"*, %"class.std::vector"** %97, align 8
  %103 = bitcast %"class.std::vector"* %102 to %"struct.std::_Vector_base"*
  %104 = load i64, i64* %98, align 8
  %105 = load %"class.std::allocator"*, %"class.std::allocator"** %99, align 8
  call void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EEC2EmRKS4_(%"struct.std::_Vector_base"* %103, i64 %104, %"class.std::allocator"* dereferenceable(1) %105)
  %106 = load i64, i64* %98, align 8
  br label %29

; <label>:107:                                    ; preds = %76, %61
  %108 = load i8*, i8** %33, align 8
  %109 = load i32, i32* %34, align 4
  %110 = insertvalue { i8*, i32 } undef, i8* %108, 0
  %111 = insertvalue { i8*, i32 } %110, i32 %109, 1
  br label %76
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorI4EdgeSaIS0_EEED2Ev(%"class.std::allocator"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEED2Ev(%"class.__gnu_cxx::new_allocator"* %4) #10
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEC2ERKS4_(%"class.std::vector"*, %"class.std::vector"* dereferenceable(24)) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.100
  %4 = load i32, i32* @y.101
  %5 = sub i32 %3, -839356893
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -839356893
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %165

; <label>:29:                                     ; preds = %2, %165
  %30 = alloca %"class.std::vector"*, align 8
  %31 = alloca %"class.std::vector"*, align 8
  %32 = alloca %"class.std::allocator", align 1
  %33 = alloca i8*
  %34 = alloca i32
  %35 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %36 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %30, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %31, align 8
  %37 = load %"class.std::vector"*, %"class.std::vector"** %30, align 8
  %38 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %39 = load %"class.std::vector"*, %"class.std::vector"** %31, align 8
  %40 = call i64 @_ZNKSt6vectorIS_I4EdgeSaIS0_EESaIS2_EE4sizeEv(%"class.std::vector"* %39) #10
  %41 = load %"class.std::vector"*, %"class.std::vector"** %31, align 8
  %42 = bitcast %"class.std::vector"* %41 to %"struct.std::_Vector_base"*
  %43 = call dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %42) #10
  call void @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorI4EdgeSaIS2_EEEE17_S_select_on_copyERKS5_(%"class.std::allocator"* sret %32, %"class.std::allocator"* dereferenceable(1) %43)
  %44 = load i32, i32* @x.100
  %45 = load i32, i32* @y.101
  %46 = sub i32 %44, -57645505
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -57645505
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  br i1 %56, label %58, label %165

; <label>:58:                                     ; preds = %29
  invoke void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EEC2EmRKS4_(%"struct.std::_Vector_base"* %38, i64 %40, %"class.std::allocator"* dereferenceable(1) %32)
          to label %59 unwind label %81

; <label>:59:                                     ; preds = %58
  call void @_ZNSaISt6vectorI4EdgeSaIS0_EEED2Ev(%"class.std::allocator"* %32) #10
  %60 = load %"class.std::vector"*, %"class.std::vector"** %31, align 8
  %61 = call %"class.std::vector.0"* @_ZNKSt6vectorIS_I4EdgeSaIS0_EESaIS2_EE5beginEv(%"class.std::vector"* %60) #10
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %35, i32 0, i32 0
  store %"class.std::vector.0"* %61, %"class.std::vector.0"** %62, align 8
  %63 = load %"class.std::vector"*, %"class.std::vector"** %31, align 8
  %64 = call %"class.std::vector.0"* @_ZNKSt6vectorIS_I4EdgeSaIS0_EESaIS2_EE3endEv(%"class.std::vector"* %63) #10
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %36, i32 0, i32 0
  store %"class.std::vector.0"* %64, %"class.std::vector.0"** %65, align 8
  %66 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %67 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %66, i32 0, i32 0
  %68 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %67, i32 0, i32 0
  %69 = load %"class.std::vector.0"*, %"class.std::vector.0"** %68, align 8
  %70 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %71 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %70) #10
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %35, i32 0, i32 0
  %73 = load %"class.std::vector.0"*, %"class.std::vector.0"** %72, align 8
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %36, i32 0, i32 0
  %75 = load %"class.std::vector.0"*, %"class.std::vector.0"** %74, align 8
  %76 = invoke %"class.std::vector.0"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKSt6vectorI4EdgeSaIS3_EES2_IS5_SaIS5_EEEEPS5_S5_ET0_T_SD_SC_RSaIT1_E(%"class.std::vector.0"* %73, %"class.std::vector.0"* %75, %"class.std::vector.0"* %69, %"class.std::allocator"* dereferenceable(1) %71)
          to label %77 unwind label %85

; <label>:77:                                     ; preds = %59
  %78 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %79 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %78, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %79, i32 0, i32 1
  store %"class.std::vector.0"* %76, %"class.std::vector.0"** %80, align 8
  ret void

; <label>:81:                                     ; preds = %58
  %82 = landingpad { i8*, i32 }
          cleanup
  %83 = extractvalue { i8*, i32 } %82, 0
  store i8* %83, i8** %33, align 8
  %84 = extractvalue { i8*, i32 } %82, 1
  store i32 %84, i32* %34, align 4
  call void @_ZNSaISt6vectorI4EdgeSaIS0_EEED2Ev(%"class.std::allocator"* %32) #10
  br label %130

; <label>:85:                                     ; preds = %59
  %86 = load i32, i32* @x.100
  %87 = load i32, i32* @y.101
  %88 = sub i32 0, 1
  %89 = add i32 %86, %88
  %90 = sub i32 %86, 1
  %91 = mul i32 %86, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %87, 10
  %95 = and i1 %93, %94
  %96 = xor i1 %93, %94
  %97 = or i1 %95, %96
  %98 = or i1 %93, %94
  br i1 %97, label %99, label %180

; <label>:99:                                     ; preds = %85, %180
  %100 = landingpad { i8*, i32 }
          cleanup
  %101 = extractvalue { i8*, i32 } %100, 0
  store i8* %101, i8** %33, align 8
  %102 = extractvalue { i8*, i32 } %100, 1
  store i32 %102, i32* %34, align 4
  %103 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EED2Ev(%"struct.std::_Vector_base"* %103) #10
  %104 = load i32, i32* @x.100
  %105 = load i32, i32* @y.101
  %106 = sub i32 0, 1
  %107 = add i32 %104, %106
  %108 = sub i32 %104, 1
  %109 = mul i32 %104, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %105, 10
  %113 = xor i1 %111, true
  %114 = xor i1 %112, true
  %115 = xor i1 true, true
  %116 = and i1 %113, true
  %117 = and i1 %111, %115
  %118 = and i1 %114, true
  %119 = and i1 %112, %115
  %120 = or i1 %116, %117
  %121 = or i1 %118, %119
  %122 = xor i1 %120, %121
  %123 = or i1 %113, %114
  %124 = xor i1 %123, true
  %125 = or i1 true, %115
  %126 = and i1 %124, %125
  %127 = or i1 %122, %126
  %128 = or i1 %111, %112
  br i1 %127, label %129, label %180

; <label>:129:                                    ; preds = %99
  br label %130

; <label>:130:                                    ; preds = %129, %81
  %131 = load i32, i32* @x.100
  %132 = load i32, i32* @y.101
  %133 = add i32 %131, 1239835554
  %134 = sub i32 %133, 1
  %135 = sub i32 %134, 1239835554
  %136 = sub i32 %131, 1
  %137 = mul i32 %131, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %132, 10
  %141 = and i1 %139, %140
  %142 = xor i1 %139, %140
  %143 = or i1 %141, %142
  %144 = or i1 %139, %140
  br i1 %143, label %145, label %185

; <label>:145:                                    ; preds = %130, %185
  %146 = load i8*, i8** %33, align 8
  %147 = load i32, i32* %34, align 4
  %148 = insertvalue { i8*, i32 } undef, i8* %146, 0
  %149 = insertvalue { i8*, i32 } %148, i32 %147, 1
  %150 = load i32, i32* @x.100
  %151 = load i32, i32* @y.101
  %152 = sub i32 %150, -185644759
  %153 = sub i32 %152, 1
  %154 = add i32 %153, -185644759
  %155 = sub i32 %150, 1
  %156 = mul i32 %150, %154
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %151, 10
  %160 = and i1 %158, %159
  %161 = xor i1 %158, %159
  %162 = or i1 %160, %161
  %163 = or i1 %158, %159
  br i1 %162, label %164, label %185

; <label>:164:                                    ; preds = %145
  resume { i8*, i32 } %149

; <label>:165:                                    ; preds = %29, %2
  %166 = alloca %"class.std::vector"*, align 8
  %167 = alloca %"class.std::vector"*, align 8
  %168 = alloca %"class.std::allocator", align 1
  %169 = alloca i8*
  %170 = alloca i32
  %171 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %172 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %166, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %167, align 8
  %173 = load %"class.std::vector"*, %"class.std::vector"** %166, align 8
  %174 = bitcast %"class.std::vector"* %173 to %"struct.std::_Vector_base"*
  %175 = load %"class.std::vector"*, %"class.std::vector"** %167, align 8
  %176 = call i64 @_ZNKSt6vectorIS_I4EdgeSaIS0_EESaIS2_EE4sizeEv(%"class.std::vector"* %175) #10
  %177 = load %"class.std::vector"*, %"class.std::vector"** %167, align 8
  %178 = bitcast %"class.std::vector"* %177 to %"struct.std::_Vector_base"*
  %179 = call dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %178) #10
  call void @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorI4EdgeSaIS2_EEEE17_S_select_on_copyERKS5_(%"class.std::allocator"* sret %168, %"class.std::allocator"* dereferenceable(1) %179)
  br label %29

; <label>:180:                                    ; preds = %99, %85
  %181 = landingpad { i8*, i32 }
          cleanup
  %182 = extractvalue { i8*, i32 } %181, 0
  store i8* %182, i8** %33, align 8
  %183 = extractvalue { i8*, i32 } %181, 1
  store i32 %183, i32* %34, align 4
  %184 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EED2Ev(%"struct.std::_Vector_base"* %184) #10
  br label %99

; <label>:185:                                    ; preds = %145, %130
  %186 = load i8*, i8** %33, align 8
  %187 = load i32, i32* %34, align 4
  %188 = insertvalue { i8*, i32 } undef, i8* %186, 0
  %189 = insertvalue { i8*, i32 } %188, i32 %187, 1
  br label %145
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EED2Ev(%"class.std::vector"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  %10 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::vector.0"*, %"class.std::vector.0"** %12, align 8
  %14 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14) #10
  invoke void @_ZSt8_DestroyIPSt6vectorI4EdgeSaIS1_EES3_EvT_S5_RSaIT0_E(%"class.std::vector.0"* %9, %"class.std::vector.0"* %13, %"class.std::allocator"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EED2Ev(%"struct.std::_Vector_base"* %17) #10
  ret void

; <label>:18:                                     ; preds = %1
  %19 = load i32, i32* @x.102
  %20 = load i32, i32* @y.103
  %21 = sub i32 0, 1
  %22 = add i32 %19, %21
  %23 = sub i32 %19, 1
  %24 = mul i32 %19, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %20, 10
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 true, true
  %31 = and i1 %28, true
  %32 = and i1 %26, %30
  %33 = and i1 %29, true
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 true, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  br i1 %42, label %44, label %119

; <label>:44:                                     ; preds = %18, %119
  %45 = landingpad { i8*, i32 }
          catch i8* null
  %46 = extractvalue { i8*, i32 } %45, 0
  store i8* %46, i8** %3, align 8
  %47 = extractvalue { i8*, i32 } %45, 1
  store i32 %47, i32* %4, align 4
  %48 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EED2Ev(%"struct.std::_Vector_base"* %48) #10
  %49 = load i32, i32* @x.102
  %50 = load i32, i32* @y.103
  %51 = sub i32 %49, -1244774400
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -1244774400
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  br i1 %73, label %75, label %119

; <label>:75:                                     ; preds = %44
  br label %76

; <label>:76:                                     ; preds = %75
  %77 = load i32, i32* @x.102
  %78 = load i32, i32* @y.103
  %79 = sub i32 %77, -505795548
  %80 = sub i32 %79, 1
  %81 = add i32 %80, -505795548
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = xor i1 %85, true
  %88 = xor i1 %86, true
  %89 = xor i1 true, true
  %90 = and i1 %87, true
  %91 = and i1 %85, %89
  %92 = and i1 %88, true
  %93 = and i1 %86, %89
  %94 = or i1 %90, %91
  %95 = or i1 %92, %93
  %96 = xor i1 %94, %95
  %97 = or i1 %87, %88
  %98 = xor i1 %97, true
  %99 = or i1 true, %89
  %100 = and i1 %98, %99
  %101 = or i1 %96, %100
  %102 = or i1 %85, %86
  br i1 %101, label %103, label %124

; <label>:103:                                    ; preds = %76, %124
  %104 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %104) #8
  %105 = load i32, i32* @x.102
  %106 = load i32, i32* @y.103
  %107 = sub i32 0, 1
  %108 = add i32 %105, %107
  %109 = sub i32 %105, 1
  %110 = mul i32 %105, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %106, 10
  %114 = and i1 %112, %113
  %115 = xor i1 %112, %113
  %116 = or i1 %114, %115
  %117 = or i1 %112, %113
  br i1 %116, label %118, label %124

; <label>:118:                                    ; preds = %103
  unreachable

; <label>:119:                                    ; preds = %44, %18
  %120 = landingpad { i8*, i32 }
          catch i8* null
  %121 = extractvalue { i8*, i32 } %120, 0
  store i8* %121, i8** %3, align 8
  %122 = extractvalue { i8*, i32 } %120, 1
  store i32 %122, i32* %4, align 4
  %123 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EED2Ev(%"struct.std::_Vector_base"* %123) #10
  br label %44

; <label>:124:                                    ; preds = %103, %76
  %125 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %125) #8
  br label %103
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt6vectorIS_IxSaIxEESaIS1_EE5emptyEv(%"class.std::vector.5"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.5"*, align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %2, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %2, align 8
  %6 = call %"class.std::vector.10"* @_ZNKSt6vectorIS_IxSaIxEESaIS1_EE5beginEv(%"class.std::vector.5"* %5) #10
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %3, i32 0, i32 0
  store %"class.std::vector.10"* %6, %"class.std::vector.10"** %7, align 8
  %8 = call %"class.std::vector.10"* @_ZNKSt6vectorIS_IxSaIxEESaIS1_EE3endEv(%"class.std::vector.5"* %5) #10
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %4, i32 0, i32 0
  store %"class.std::vector.10"* %8, %"class.std::vector.10"** %9, align 8
  %10 = call zeroext i1 @_ZN9__gnu_cxxeqIPKSt6vectorIxSaIxEES1_IS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.33"* dereferenceable(8) %3, %"class.__gnu_cxx::__normal_iterator.33"* dereferenceable(8) %4) #10
  ret i1 %10
}

declare i32 @printf(i8*, ...) #4

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.10"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EE5beginEv(%"class.std::vector.5"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %3 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  %4 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %5 = bitcast %"class.std::vector.5"* %4 to %"struct.std::_Vector_base.6"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.25"* %2, %"class.std::vector.10"** dereferenceable(8) %7) #10
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %2, i32 0, i32 0
  %9 = load %"class.std::vector.10"*, %"class.std::vector.10"** %8, align 8
  ret %"class.std::vector.10"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.10"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EE3endEv(%"class.std::vector.5"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %3 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  %4 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %5 = bitcast %"class.std::vector.5"* %4 to %"struct.std::_Vector_base.6"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.25"* %2, %"class.std::vector.10"** dereferenceable(8) %7) #10
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %2, i32 0, i32 0
  %9 = load %"class.std::vector.10"*, %"class.std::vector.10"** %8, align 8
  ret %"class.std::vector.10"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator.25"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.25"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.25"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.25"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.25"* %0, %"class.__gnu_cxx::__normal_iterator.25"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.25"* %1, %"class.__gnu_cxx::__normal_iterator.25"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.25"*, %"class.__gnu_cxx::__normal_iterator.25"** %3, align 8
  %6 = call dereferenceable(8) %"class.std::vector.10"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.25"* %5) #10
  %7 = load %"class.std::vector.10"*, %"class.std::vector.10"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.25"*, %"class.__gnu_cxx::__normal_iterator.25"** %4, align 8
  %9 = call dereferenceable(8) %"class.std::vector.10"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.25"* %8) #10
  %10 = load %"class.std::vector.10"*, %"class.std::vector.10"** %9, align 8
  %11 = icmp ne %"class.std::vector.10"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.10"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.25"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.25"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.25"* %0, %"class.__gnu_cxx::__normal_iterator.25"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.25"*, %"class.__gnu_cxx::__normal_iterator.25"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.10"*, %"class.std::vector.10"** %4, align 8
  ret %"class.std::vector.10"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEEC2ERKS1_(%"class.std::vector.10"*, %"class.std::vector.10"* dereferenceable(24)) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.114
  %4 = load i32, i32* @y.115
  %5 = sub i32 %3, 1778106777
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 1778106777
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %149

; <label>:29:                                     ; preds = %2, %149
  %30 = alloca %"class.std::vector.10"*, align 8
  %31 = alloca %"class.std::vector.10"*, align 8
  %32 = alloca %"class.std::allocator.12", align 1
  %33 = alloca i8*
  %34 = alloca i32
  %35 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %36 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %30, align 8
  store %"class.std::vector.10"* %1, %"class.std::vector.10"** %31, align 8
  %37 = load %"class.std::vector.10"*, %"class.std::vector.10"** %30, align 8
  %38 = bitcast %"class.std::vector.10"* %37 to %"struct.std::_Vector_base.11"*
  %39 = load %"class.std::vector.10"*, %"class.std::vector.10"** %31, align 8
  %40 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.10"* %39) #10
  %41 = load %"class.std::vector.10"*, %"class.std::vector.10"** %31, align 8
  %42 = bitcast %"class.std::vector.10"* %41 to %"struct.std::_Vector_base.11"*
  %43 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"* %42) #10
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIxEE17_S_select_on_copyERKS1_(%"class.std::allocator.12"* sret %32, %"class.std::allocator.12"* dereferenceable(1) %43)
  %44 = load i32, i32* @x.114
  %45 = load i32, i32* @y.115
  %46 = add i32 %44, -1885181436
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -1885181436
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  br i1 %68, label %70, label %149

; <label>:70:                                     ; preds = %29
  invoke void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base.11"* %38, i64 %40, %"class.std::allocator.12"* dereferenceable(1) %32)
          to label %71 unwind label %93

; <label>:71:                                     ; preds = %70
  call void @_ZNSaIxED2Ev(%"class.std::allocator.12"* %32) #10
  %72 = load %"class.std::vector.10"*, %"class.std::vector.10"** %31, align 8
  %73 = call i64* @_ZNKSt6vectorIxSaIxEE5beginEv(%"class.std::vector.10"* %72) #10
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %35, i32 0, i32 0
  store i64* %73, i64** %74, align 8
  %75 = load %"class.std::vector.10"*, %"class.std::vector.10"** %31, align 8
  %76 = call i64* @_ZNKSt6vectorIxSaIxEE3endEv(%"class.std::vector.10"* %75) #10
  %77 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %36, i32 0, i32 0
  store i64* %76, i64** %77, align 8
  %78 = bitcast %"class.std::vector.10"* %37 to %"struct.std::_Vector_base.11"*
  %79 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %78, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %79, i32 0, i32 0
  %81 = load i64*, i64** %80, align 8
  %82 = bitcast %"class.std::vector.10"* %37 to %"struct.std::_Vector_base.11"*
  %83 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"* %82) #10
  %84 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %35, i32 0, i32 0
  %85 = load i64*, i64** %84, align 8
  %86 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %36, i32 0, i32 0
  %87 = load i64*, i64** %86, align 8
  %88 = invoke i64* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxxET0_T_SA_S9_RSaIT1_E(i64* %85, i64* %87, i64* %81, %"class.std::allocator.12"* dereferenceable(1) %83)
          to label %89 unwind label %97

; <label>:89:                                     ; preds = %71
  %90 = bitcast %"class.std::vector.10"* %37 to %"struct.std::_Vector_base.11"*
  %91 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %90, i32 0, i32 0
  %92 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %91, i32 0, i32 1
  store i64* %88, i64** %92, align 8
  ret void

; <label>:93:                                     ; preds = %70
  %94 = landingpad { i8*, i32 }
          cleanup
  %95 = extractvalue { i8*, i32 } %94, 0
  store i8* %95, i8** %33, align 8
  %96 = extractvalue { i8*, i32 } %94, 1
  store i32 %96, i32* %34, align 4
  call void @_ZNSaIxED2Ev(%"class.std::allocator.12"* %32) #10
  br label %102

; <label>:97:                                     ; preds = %71
  %98 = landingpad { i8*, i32 }
          cleanup
  %99 = extractvalue { i8*, i32 } %98, 0
  store i8* %99, i8** %33, align 8
  %100 = extractvalue { i8*, i32 } %98, 1
  store i32 %100, i32* %34, align 4
  %101 = bitcast %"class.std::vector.10"* %37 to %"struct.std::_Vector_base.11"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.11"* %101) #10
  br label %102

; <label>:102:                                    ; preds = %97, %93
  %103 = load i32, i32* @x.114
  %104 = load i32, i32* @y.115
  %105 = sub i32 %103, 2147214916
  %106 = sub i32 %105, 1
  %107 = add i32 %106, 2147214916
  %108 = sub i32 %103, 1
  %109 = mul i32 %103, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %104, 10
  %113 = xor i1 %111, true
  %114 = xor i1 %112, true
  %115 = xor i1 true, true
  %116 = and i1 %113, true
  %117 = and i1 %111, %115
  %118 = and i1 %114, true
  %119 = and i1 %112, %115
  %120 = or i1 %116, %117
  %121 = or i1 %118, %119
  %122 = xor i1 %120, %121
  %123 = or i1 %113, %114
  %124 = xor i1 %123, true
  %125 = or i1 true, %115
  %126 = and i1 %124, %125
  %127 = or i1 %122, %126
  %128 = or i1 %111, %112
  br i1 %127, label %129, label %164

; <label>:129:                                    ; preds = %102, %164
  %130 = load i8*, i8** %33, align 8
  %131 = load i32, i32* %34, align 4
  %132 = insertvalue { i8*, i32 } undef, i8* %130, 0
  %133 = insertvalue { i8*, i32 } %132, i32 %131, 1
  %134 = load i32, i32* @x.114
  %135 = load i32, i32* @y.115
  %136 = add i32 %134, 1124747000
  %137 = sub i32 %136, 1
  %138 = sub i32 %137, 1124747000
  %139 = sub i32 %134, 1
  %140 = mul i32 %134, %138
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %135, 10
  %144 = and i1 %142, %143
  %145 = xor i1 %142, %143
  %146 = or i1 %144, %145
  %147 = or i1 %142, %143
  br i1 %146, label %148, label %164

; <label>:148:                                    ; preds = %129
  resume { i8*, i32 } %133

; <label>:149:                                    ; preds = %29, %2
  %150 = alloca %"class.std::vector.10"*, align 8
  %151 = alloca %"class.std::vector.10"*, align 8
  %152 = alloca %"class.std::allocator.12", align 1
  %153 = alloca i8*
  %154 = alloca i32
  %155 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %156 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %150, align 8
  store %"class.std::vector.10"* %1, %"class.std::vector.10"** %151, align 8
  %157 = load %"class.std::vector.10"*, %"class.std::vector.10"** %150, align 8
  %158 = bitcast %"class.std::vector.10"* %157 to %"struct.std::_Vector_base.11"*
  %159 = load %"class.std::vector.10"*, %"class.std::vector.10"** %151, align 8
  %160 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.10"* %159) #10
  %161 = load %"class.std::vector.10"*, %"class.std::vector.10"** %151, align 8
  %162 = bitcast %"class.std::vector.10"* %161 to %"struct.std::_Vector_base.11"*
  %163 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"* %162) #10
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIxEE17_S_select_on_copyERKS1_(%"class.std::allocator.12"* sret %152, %"class.std::allocator.12"* dereferenceable(1) %163)
  br label %29

; <label>:164:                                    ; preds = %129, %102
  %165 = load i8*, i8** %33, align 8
  %166 = load i32, i32* %34, align 4
  %167 = insertvalue { i8*, i32 } undef, i8* %165, 0
  %168 = insertvalue { i8*, i32 } %167, i32 %166, 1
  br label %129
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.25"* @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator.25"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.25"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.116
  %6 = load i32, i32* @y.117
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1388680094, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %55
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1388680094, label %18
    i32 31822054, label %26
    i32 -761210158, label %47
    i32 -2047950611, label %49
  ]

; <label>:17:                                     ; preds = %15
  br label %55

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 31822054, i32 -2047950611
  store i32 %25, i32* %14
  br label %55

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.25"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.25"* %0, %"class.__gnu_cxx::__normal_iterator.25"** %27, align 8
  %28 = load %"class.__gnu_cxx::__normal_iterator.25"*, %"class.__gnu_cxx::__normal_iterator.25"** %27, align 8
  store %"class.__gnu_cxx::__normal_iterator.25"* %28, %"class.__gnu_cxx::__normal_iterator.25"** %2
  %29 = load volatile %"class.__gnu_cxx::__normal_iterator.25"*, %"class.__gnu_cxx::__normal_iterator.25"** %2
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %29, i32 0, i32 0
  %31 = load %"class.std::vector.10"*, %"class.std::vector.10"** %30, align 8
  %32 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %31, i32 1
  store %"class.std::vector.10"* %32, %"class.std::vector.10"** %30, align 8
  %33 = load i32, i32* @x.116
  %34 = load i32, i32* @y.117
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -761210158, i32 -2047950611
  store i32 %46, i32* %14
  br label %55

; <label>:47:                                     ; preds = %15
  %48 = load volatile %"class.__gnu_cxx::__normal_iterator.25"*, %"class.__gnu_cxx::__normal_iterator.25"** %2
  ret %"class.__gnu_cxx::__normal_iterator.25"* %48

; <label>:49:                                     ; preds = %15
  %50 = alloca %"class.__gnu_cxx::__normal_iterator.25"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.25"* %0, %"class.__gnu_cxx::__normal_iterator.25"** %50, align 8
  %51 = load %"class.__gnu_cxx::__normal_iterator.25"*, %"class.__gnu_cxx::__normal_iterator.25"** %50, align 8
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %51, i32 0, i32 0
  %53 = load %"class.std::vector.10"*, %"class.std::vector.10"** %52, align 8
  %54 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %53, i32 1
  store %"class.std::vector.10"* %54, %"class.std::vector.10"** %52, align 8
  store i32 31822054, i32* %14
  br label %55

; <label>:55:                                     ; preds = %49, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI4EdgeSaIS0_EE12emplace_backIJS0_EEEvDpOT_(%"class.std::vector.0"*, %struct.Edge* dereferenceable(24)) #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.0"*
  %5 = alloca %struct.Edge**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.118
  %9 = load i32, i32* @y.119
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -1530789228, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %146
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1530789228, label %21
    i32 -1529295409, label %29
    i32 1982101503, label %60
    i32 -31632988, label %63
    i32 -1865578683, label %82
    i32 -2062804385, label %87
    i32 487689650, label %115
    i32 -568625771, label %131
    i32 -1571475834, label %132
    i32 -233600109, label %145
  ]

; <label>:20:                                     ; preds = %18
  br label %146

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1529295409, i32 -1571475834
  store i32 %28, i32* %17
  br label %146

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::vector.0"*, align 8
  %31 = alloca %struct.Edge*, align 8
  store %struct.Edge** %31, %struct.Edge*** %5
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %30, align 8
  %32 = load volatile %struct.Edge**, %struct.Edge*** %5
  store %struct.Edge* %1, %struct.Edge** %32, align 8
  %33 = load %"class.std::vector.0"*, %"class.std::vector.0"** %30, align 8
  store %"class.std::vector.0"* %33, %"class.std::vector.0"** %4
  %34 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %35 = bitcast %"class.std::vector.0"* %34 to %"struct.std::_Vector_base.1"*
  %36 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %35, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %36, i32 0, i32 1
  %38 = load %struct.Edge*, %struct.Edge** %37, align 8
  %39 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %40 = bitcast %"class.std::vector.0"* %39 to %"struct.std::_Vector_base.1"*
  %41 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %40, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %41, i32 0, i32 2
  %43 = load %struct.Edge*, %struct.Edge** %42, align 8
  %44 = icmp ne %struct.Edge* %38, %43
  store i1 %44, i1* %3
  %45 = load i32, i32* @x.118
  %46 = load i32, i32* @y.119
  %47 = sub i32 %45, 1891765650
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 1891765650
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 1982101503, i32 -1571475834
  store i32 %59, i32* %17
  br label %146

; <label>:60:                                     ; preds = %18
  %61 = load volatile i1, i1* %3
  %62 = select i1 %61, i32 -31632988, i32 -1865578683
  store i32 %62, i32* %17
  br label %146

; <label>:63:                                     ; preds = %18
  %64 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %65 = bitcast %"class.std::vector.0"* %64 to %"struct.std::_Vector_base.1"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %65, i32 0, i32 0
  %67 = bitcast %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %66 to %"class.std::allocator.2"*
  %68 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %69 = bitcast %"class.std::vector.0"* %68 to %"struct.std::_Vector_base.1"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %70, i32 0, i32 1
  %72 = load %struct.Edge*, %struct.Edge** %71, align 8
  %73 = load volatile %struct.Edge**, %struct.Edge*** %5
  %74 = load %struct.Edge*, %struct.Edge** %73, align 8
  %75 = call dereferenceable(24) %struct.Edge* @_ZSt7forwardI4EdgeEOT_RNSt16remove_referenceIS1_E4typeE(%struct.Edge* dereferenceable(24) %74) #10
  call void @_ZNSt16allocator_traitsISaI4EdgeEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1) %67, %struct.Edge* %72, %struct.Edge* dereferenceable(24) %75)
  %76 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %77 = bitcast %"class.std::vector.0"* %76 to %"struct.std::_Vector_base.1"*
  %78 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %77, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %78, i32 0, i32 1
  %80 = load %struct.Edge*, %struct.Edge** %79, align 8
  %81 = getelementptr inbounds %struct.Edge, %struct.Edge* %80, i32 1
  store %struct.Edge* %81, %struct.Edge** %79, align 8
  store i32 -2062804385, i32* %17
  br label %146

; <label>:82:                                     ; preds = %18
  %83 = load volatile %struct.Edge**, %struct.Edge*** %5
  %84 = load %struct.Edge*, %struct.Edge** %83, align 8
  %85 = call dereferenceable(24) %struct.Edge* @_ZSt7forwardI4EdgeEOT_RNSt16remove_referenceIS1_E4typeE(%struct.Edge* dereferenceable(24) %84) #10
  %86 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  call void @_ZNSt6vectorI4EdgeSaIS0_EE19_M_emplace_back_auxIJS0_EEEvDpOT_(%"class.std::vector.0"* %86, %struct.Edge* dereferenceable(24) %85)
  store i32 -2062804385, i32* %17
  br label %146

; <label>:87:                                     ; preds = %18
  %88 = load i32, i32* @x.118
  %89 = load i32, i32* @y.119
  %90 = add i32 %88, -1180464173
  %91 = sub i32 %90, 1
  %92 = sub i32 %91, -1180464173
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = xor i1 %96, true
  %99 = xor i1 %97, true
  %100 = xor i1 false, true
  %101 = and i1 %98, false
  %102 = and i1 %96, %100
  %103 = and i1 %99, false
  %104 = and i1 %97, %100
  %105 = or i1 %101, %102
  %106 = or i1 %103, %104
  %107 = xor i1 %105, %106
  %108 = or i1 %98, %99
  %109 = xor i1 %108, true
  %110 = or i1 false, %100
  %111 = and i1 %109, %110
  %112 = or i1 %107, %111
  %113 = or i1 %96, %97
  %114 = select i1 %112, i32 487689650, i32 -233600109
  store i32 %114, i32* %17
  br label %146

; <label>:115:                                    ; preds = %18
  %116 = load i32, i32* @x.118
  %117 = load i32, i32* @y.119
  %118 = add i32 %116, 470628758
  %119 = sub i32 %118, 1
  %120 = sub i32 %119, 470628758
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = and i1 %124, %125
  %127 = xor i1 %124, %125
  %128 = or i1 %126, %127
  %129 = or i1 %124, %125
  %130 = select i1 %128, i32 -568625771, i32 -233600109
  store i32 %130, i32* %17
  br label %146

; <label>:131:                                    ; preds = %18
  ret void

; <label>:132:                                    ; preds = %18
  %133 = alloca %"class.std::vector.0"*, align 8
  %134 = alloca %struct.Edge*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %133, align 8
  store %struct.Edge* %1, %struct.Edge** %134, align 8
  %135 = load %"class.std::vector.0"*, %"class.std::vector.0"** %133, align 8
  %136 = bitcast %"class.std::vector.0"* %135 to %"struct.std::_Vector_base.1"*
  %137 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %136, i32 0, i32 0
  %138 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %137, i32 0, i32 1
  %139 = load %struct.Edge*, %struct.Edge** %138, align 8
  %140 = bitcast %"class.std::vector.0"* %135 to %"struct.std::_Vector_base.1"*
  %141 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %140, i32 0, i32 0
  %142 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %141, i32 0, i32 2
  %143 = load %struct.Edge*, %struct.Edge** %142, align 8
  %144 = icmp ne %struct.Edge* %139, %143
  store i32 -1529295409, i32* %17
  br label %146

; <label>:145:                                    ; preds = %18
  store i32 487689650, i32* %17
  br label %146

; <label>:146:                                    ; preds = %145, %132, %115, %87, %82, %63, %60, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %struct.Edge* @_ZSt4moveIR4EdgeEONSt16remove_referenceIT_E4typeEOS3_(%struct.Edge* dereferenceable(24)) #0 comdat {
  %2 = alloca %struct.Edge*, align 8
  store %struct.Edge* %0, %struct.Edge** %2, align 8
  %3 = load %struct.Edge*, %struct.Edge** %2, align 8
  ret %struct.Edge* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI4EdgeEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1), %struct.Edge*, %struct.Edge* dereferenceable(24)) #1 comdat align 2 {
  %4 = alloca %"class.std::allocator.2"*, align 8
  %5 = alloca %struct.Edge*, align 8
  %6 = alloca %struct.Edge*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %4, align 8
  store %struct.Edge* %1, %struct.Edge** %5, align 8
  store %struct.Edge* %2, %struct.Edge** %6, align 8
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  %9 = load %struct.Edge*, %struct.Edge** %5, align 8
  %10 = load %struct.Edge*, %struct.Edge** %6, align 8
  %11 = call dereferenceable(24) %struct.Edge* @_ZSt7forwardI4EdgeEOT_RNSt16remove_referenceIS1_E4typeE(%struct.Edge* dereferenceable(24) %10) #10
  call void @_ZN9__gnu_cxx13new_allocatorI4EdgeE9constructIS1_JS1_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.3"* %8, %struct.Edge* %9, %struct.Edge* dereferenceable(24) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %struct.Edge* @_ZSt7forwardI4EdgeEOT_RNSt16remove_referenceIS1_E4typeE(%struct.Edge* dereferenceable(24)) #0 comdat {
  %2 = alloca %struct.Edge*, align 8
  store %struct.Edge* %0, %struct.Edge** %2, align 8
  %3 = load %struct.Edge*, %struct.Edge** %2, align 8
  ret %struct.Edge* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI4EdgeSaIS0_EE19_M_emplace_back_auxIJS0_EEEvDpOT_(%"class.std::vector.0"*, %struct.Edge* dereferenceable(24)) #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %struct.Edge*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.Edge*, align 8
  %7 = alloca %struct.Edge*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store %struct.Edge* %1, %struct.Edge** %4, align 8
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorI4EdgeSaIS0_EE12_M_check_lenEmPKc(%"class.std::vector.0"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %13 = load i64, i64* %5, align 8
  %14 = call %struct.Edge* @_ZNSt12_Vector_baseI4EdgeSaIS0_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %12, i64 %13)
  store %struct.Edge* %14, %struct.Edge** %6, align 8
  %15 = load %struct.Edge*, %struct.Edge** %6, align 8
  store %struct.Edge* %15, %struct.Edge** %7, align 8
  %16 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %17 to %"class.std::allocator.2"*
  %19 = load %struct.Edge*, %struct.Edge** %6, align 8
  %20 = call i64 @_ZNKSt6vectorI4EdgeSaIS0_EE4sizeEv(%"class.std::vector.0"* %10) #10
  %21 = getelementptr inbounds %struct.Edge, %struct.Edge* %19, i64 %20
  %22 = load %struct.Edge*, %struct.Edge** %4, align 8
  %23 = call dereferenceable(24) %struct.Edge* @_ZSt7forwardI4EdgeEOT_RNSt16remove_referenceIS1_E4typeE(%struct.Edge* dereferenceable(24) %22) #10
  invoke void @_ZNSt16allocator_traitsISaI4EdgeEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1) %18, %struct.Edge* %21, %struct.Edge* dereferenceable(24) %23)
          to label %24 unwind label %81

; <label>:24:                                     ; preds = %2
  %25 = load i32, i32* @x.126
  %26 = load i32, i32* @y.127
  %27 = sub i32 %25, -212036472
  %28 = sub i32 %27, 1
  %29 = add i32 %28, -212036472
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 true, true
  %38 = and i1 %35, true
  %39 = and i1 %33, %37
  %40 = and i1 %36, true
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 true, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  br i1 %49, label %51, label %306

; <label>:51:                                     ; preds = %24, %306
  store %struct.Edge* null, %struct.Edge** %7, align 8
  %52 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %53 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %52, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %53, i32 0, i32 0
  %55 = load %struct.Edge*, %struct.Edge** %54, align 8
  %56 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %56, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %57, i32 0, i32 1
  %59 = load %struct.Edge*, %struct.Edge** %58, align 8
  %60 = load %struct.Edge*, %struct.Edge** %6, align 8
  %61 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %62 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %61) #10
  %63 = load i32, i32* @x.126
  %64 = load i32, i32* @y.127
  %65 = sub i32 0, 1
  %66 = add i32 %63, %65
  %67 = sub i32 %63, 1
  %68 = mul i32 %63, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %64, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  br i1 %74, label %76, label %306

; <label>:76:                                     ; preds = %51
  %77 = invoke %struct.Edge* @_ZSt34__uninitialized_move_if_noexcept_aIP4EdgeS1_SaIS0_EET0_T_S4_S3_RT1_(%struct.Edge* %55, %struct.Edge* %59, %struct.Edge* %60, %"class.std::allocator.2"* dereferenceable(1) %62)
          to label %78 unwind label %81

; <label>:78:                                     ; preds = %76
  store %struct.Edge* %77, %struct.Edge** %7, align 8
  %79 = load %struct.Edge*, %struct.Edge** %7, align 8
  %80 = getelementptr inbounds %struct.Edge, %struct.Edge* %79, i32 1
  store %struct.Edge* %80, %struct.Edge** %7, align 8
  br label %253

; <label>:81:                                     ; preds = %76, %2
  %82 = landingpad { i8*, i32 }
          catch i8* null
  %83 = extractvalue { i8*, i32 } %82, 0
  store i8* %83, i8** %8, align 8
  %84 = extractvalue { i8*, i32 } %82, 1
  store i32 %84, i32* %9, align 4
  br label %85

; <label>:85:                                     ; preds = %81
  %86 = load i32, i32* @x.126
  %87 = load i32, i32* @y.127
  %88 = sub i32 0, 1
  %89 = add i32 %86, %88
  %90 = sub i32 %86, 1
  %91 = mul i32 %86, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %87, 10
  %95 = and i1 %93, %94
  %96 = xor i1 %93, %94
  %97 = or i1 %95, %96
  %98 = or i1 %93, %94
  br i1 %97, label %99, label %318

; <label>:99:                                     ; preds = %85, %318
  %100 = load i8*, i8** %8, align 8
  %101 = call i8* @__cxa_begin_catch(i8* %100) #10
  %102 = load %struct.Edge*, %struct.Edge** %7, align 8
  %103 = icmp ne %struct.Edge* %102, null
  %104 = load i32, i32* @x.126
  %105 = load i32, i32* @y.127
  %106 = sub i32 0, 1
  %107 = add i32 %104, %106
  %108 = sub i32 %104, 1
  %109 = mul i32 %104, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %105, 10
  %113 = and i1 %111, %112
  %114 = xor i1 %111, %112
  %115 = or i1 %113, %114
  %116 = or i1 %111, %112
  br i1 %115, label %117, label %318

; <label>:117:                                    ; preds = %99
  br i1 %103, label %130, label %118

; <label>:118:                                    ; preds = %117
  %119 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %120 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %119, i32 0, i32 0
  %121 = bitcast %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %120 to %"class.std::allocator.2"*
  %122 = load %struct.Edge*, %struct.Edge** %6, align 8
  %123 = call i64 @_ZNKSt6vectorI4EdgeSaIS0_EE4sizeEv(%"class.std::vector.0"* %10) #10
  %124 = getelementptr inbounds %struct.Edge, %struct.Edge* %122, i64 %123
  invoke void @_ZNSt16allocator_traitsISaI4EdgeEE7destroyIS0_EEvRS1_PT_(%"class.std::allocator.2"* dereferenceable(1) %121, %struct.Edge* %124)
          to label %125 unwind label %126

; <label>:125:                                    ; preds = %118
  br label %165

; <label>:126:                                    ; preds = %251, %209, %130, %118
  %127 = landingpad { i8*, i32 }
          cleanup
  %128 = extractvalue { i8*, i32 } %127, 0
  store i8* %128, i8** %8, align 8
  %129 = extractvalue { i8*, i32 } %127, 1
  store i32 %129, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %252 unwind label %302

; <label>:130:                                    ; preds = %117
  %131 = load %struct.Edge*, %struct.Edge** %6, align 8
  %132 = load %struct.Edge*, %struct.Edge** %7, align 8
  %133 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %134 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %133) #10
  invoke void @_ZSt8_DestroyIP4EdgeS0_EvT_S2_RSaIT0_E(%struct.Edge* %131, %struct.Edge* %132, %"class.std::allocator.2"* dereferenceable(1) %134)
          to label %135 unwind label %126

; <label>:135:                                    ; preds = %130
  %136 = load i32, i32* @x.126
  %137 = load i32, i32* @y.127
  %138 = add i32 %136, -571488233
  %139 = sub i32 %138, 1
  %140 = sub i32 %139, -571488233
  %141 = sub i32 %136, 1
  %142 = mul i32 %136, %140
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %137, 10
  %146 = and i1 %144, %145
  %147 = xor i1 %144, %145
  %148 = or i1 %146, %147
  %149 = or i1 %144, %145
  br i1 %148, label %150, label %323

; <label>:150:                                    ; preds = %135, %323
  %151 = load i32, i32* @x.126
  %152 = load i32, i32* @y.127
  %153 = sub i32 0, 1
  %154 = add i32 %151, %153
  %155 = sub i32 %151, 1
  %156 = mul i32 %151, %154
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %152, 10
  %160 = and i1 %158, %159
  %161 = xor i1 %158, %159
  %162 = or i1 %160, %161
  %163 = or i1 %158, %159
  br i1 %162, label %164, label %323

; <label>:164:                                    ; preds = %150
  br label %165

; <label>:165:                                    ; preds = %164, %125
  %166 = load i32, i32* @x.126
  %167 = load i32, i32* @y.127
  %168 = sub i32 0, 1
  %169 = add i32 %166, %168
  %170 = sub i32 %166, 1
  %171 = mul i32 %166, %169
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %167, 10
  %175 = xor i1 %173, true
  %176 = xor i1 %174, true
  %177 = xor i1 false, true
  %178 = and i1 %175, false
  %179 = and i1 %173, %177
  %180 = and i1 %176, false
  %181 = and i1 %174, %177
  %182 = or i1 %178, %179
  %183 = or i1 %180, %181
  %184 = xor i1 %182, %183
  %185 = or i1 %175, %176
  %186 = xor i1 %185, true
  %187 = or i1 false, %177
  %188 = and i1 %186, %187
  %189 = or i1 %184, %188
  %190 = or i1 %173, %174
  br i1 %189, label %191, label %324

; <label>:191:                                    ; preds = %165, %324
  %192 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %193 = load %struct.Edge*, %struct.Edge** %6, align 8
  %194 = load i64, i64* %5, align 8
  %195 = load i32, i32* @x.126
  %196 = load i32, i32* @y.127
  %197 = add i32 %195, 652736998
  %198 = sub i32 %197, 1
  %199 = sub i32 %198, 652736998
  %200 = sub i32 %195, 1
  %201 = mul i32 %195, %199
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %196, 10
  %205 = and i1 %203, %204
  %206 = xor i1 %203, %204
  %207 = or i1 %205, %206
  %208 = or i1 %203, %204
  br i1 %207, label %209, label %324

; <label>:209:                                    ; preds = %191
  invoke void @_ZNSt12_Vector_baseI4EdgeSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base.1"* %192, %struct.Edge* %193, i64 %194)
          to label %210 unwind label %126

; <label>:210:                                    ; preds = %209
  %211 = load i32, i32* @x.126
  %212 = load i32, i32* @y.127
  %213 = add i32 %211, 1827891970
  %214 = sub i32 %213, 1
  %215 = sub i32 %214, 1827891970
  %216 = sub i32 %211, 1
  %217 = mul i32 %211, %215
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %212, 10
  %221 = and i1 %219, %220
  %222 = xor i1 %219, %220
  %223 = or i1 %221, %222
  %224 = or i1 %219, %220
  br i1 %223, label %225, label %328

; <label>:225:                                    ; preds = %210, %328
  %226 = load i32, i32* @x.126
  %227 = load i32, i32* @y.127
  %228 = sub i32 0, 1
  %229 = add i32 %226, %228
  %230 = sub i32 %226, 1
  %231 = mul i32 %226, %229
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %227, 10
  %235 = xor i1 %233, true
  %236 = xor i1 %234, true
  %237 = xor i1 false, true
  %238 = and i1 %235, false
  %239 = and i1 %233, %237
  %240 = and i1 %236, false
  %241 = and i1 %234, %237
  %242 = or i1 %238, %239
  %243 = or i1 %240, %241
  %244 = xor i1 %242, %243
  %245 = or i1 %235, %236
  %246 = xor i1 %245, true
  %247 = or i1 false, %237
  %248 = and i1 %246, %247
  %249 = or i1 %244, %248
  %250 = or i1 %233, %234
  br i1 %249, label %251, label %328

; <label>:251:                                    ; preds = %225
  invoke void @__cxa_rethrow() #11
          to label %305 unwind label %126

; <label>:252:                                    ; preds = %126
  br label %297

; <label>:253:                                    ; preds = %78
  %254 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %255 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %254, i32 0, i32 0
  %256 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %255, i32 0, i32 0
  %257 = load %struct.Edge*, %struct.Edge** %256, align 8
  %258 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %259 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %258, i32 0, i32 0
  %260 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %259, i32 0, i32 1
  %261 = load %struct.Edge*, %struct.Edge** %260, align 8
  %262 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %263 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %262) #10
  call void @_ZSt8_DestroyIP4EdgeS0_EvT_S2_RSaIT0_E(%struct.Edge* %257, %struct.Edge* %261, %"class.std::allocator.2"* dereferenceable(1) %263)
  %264 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %265 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %266 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %265, i32 0, i32 0
  %267 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %266, i32 0, i32 0
  %268 = load %struct.Edge*, %struct.Edge** %267, align 8
  %269 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %270 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %269, i32 0, i32 0
  %271 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %270, i32 0, i32 2
  %272 = load %struct.Edge*, %struct.Edge** %271, align 8
  %273 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %274 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %273, i32 0, i32 0
  %275 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %274, i32 0, i32 0
  %276 = load %struct.Edge*, %struct.Edge** %275, align 8
  %277 = ptrtoint %struct.Edge* %272 to i64
  %278 = ptrtoint %struct.Edge* %276 to i64
  %279 = sub i64 0, %278
  %280 = add i64 %277, %279
  %281 = sub i64 %277, %278
  %282 = sdiv exact i64 %280, 24
  call void @_ZNSt12_Vector_baseI4EdgeSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base.1"* %264, %struct.Edge* %268, i64 %282)
  %283 = load %struct.Edge*, %struct.Edge** %6, align 8
  %284 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %285 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %284, i32 0, i32 0
  %286 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %285, i32 0, i32 0
  store %struct.Edge* %283, %struct.Edge** %286, align 8
  %287 = load %struct.Edge*, %struct.Edge** %7, align 8
  %288 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %289 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %288, i32 0, i32 0
  %290 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %289, i32 0, i32 1
  store %struct.Edge* %287, %struct.Edge** %290, align 8
  %291 = load %struct.Edge*, %struct.Edge** %6, align 8
  %292 = load i64, i64* %5, align 8
  %293 = getelementptr inbounds %struct.Edge, %struct.Edge* %291, i64 %292
  %294 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %295 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %294, i32 0, i32 0
  %296 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %295, i32 0, i32 2
  store %struct.Edge* %293, %struct.Edge** %296, align 8
  ret void

; <label>:297:                                    ; preds = %252
  %298 = load i8*, i8** %8, align 8
  %299 = load i32, i32* %9, align 4
  %300 = insertvalue { i8*, i32 } undef, i8* %298, 0
  %301 = insertvalue { i8*, i32 } %300, i32 %299, 1
  resume { i8*, i32 } %301

; <label>:302:                                    ; preds = %126
  %303 = landingpad { i8*, i32 }
          catch i8* null
  %304 = extractvalue { i8*, i32 } %303, 0
  call void @__clang_call_terminate(i8* %304) #8
  unreachable

; <label>:305:                                    ; preds = %251
  unreachable

; <label>:306:                                    ; preds = %51, %24
  store %struct.Edge* null, %struct.Edge** %7, align 8
  %307 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %308 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %307, i32 0, i32 0
  %309 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %308, i32 0, i32 0
  %310 = load %struct.Edge*, %struct.Edge** %309, align 8
  %311 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %312 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %311, i32 0, i32 0
  %313 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %312, i32 0, i32 1
  %314 = load %struct.Edge*, %struct.Edge** %313, align 8
  %315 = load %struct.Edge*, %struct.Edge** %6, align 8
  %316 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %317 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %316) #10
  br label %51

; <label>:318:                                    ; preds = %99, %85
  %319 = load i8*, i8** %8, align 8
  %320 = call i8* @__cxa_begin_catch(i8* %319) #10
  %321 = load %struct.Edge*, %struct.Edge** %7, align 8
  %322 = icmp ne %struct.Edge* %321, null
  br label %99

; <label>:323:                                    ; preds = %150, %135
  br label %150

; <label>:324:                                    ; preds = %191, %165
  %325 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %326 = load %struct.Edge*, %struct.Edge** %6, align 8
  %327 = load i64, i64* %5, align 8
  br label %191

; <label>:328:                                    ; preds = %225, %210
  br label %225
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI4EdgeE9constructIS1_JS1_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.3"*, %struct.Edge*, %struct.Edge* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %5 = alloca %struct.Edge*, align 8
  %6 = alloca %struct.Edge*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  store %struct.Edge* %1, %struct.Edge** %5, align 8
  store %struct.Edge* %2, %struct.Edge** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  %8 = load %struct.Edge*, %struct.Edge** %5, align 8
  %9 = bitcast %struct.Edge* %8 to i8*
  %10 = bitcast i8* %9 to %struct.Edge*
  %11 = load %struct.Edge*, %struct.Edge** %6, align 8
  %12 = call dereferenceable(24) %struct.Edge* @_ZSt7forwardI4EdgeEOT_RNSt16remove_referenceIS1_E4typeE(%struct.Edge* dereferenceable(24) %11) #10
  %13 = bitcast %struct.Edge* %10 to i8*
  %14 = bitcast %struct.Edge* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 24, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorI4EdgeSaIS0_EE12_M_check_lenEmPKc(%"class.std::vector.0"*, i64, i8*) #1 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"class.std::vector.0"*
  %6 = alloca i64*
  %7 = alloca i64*
  %8 = alloca i8**
  %9 = alloca i64*
  %10 = alloca i1
  %11 = alloca i1
  %12 = load i32, i32* @x.130
  %13 = load i32, i32* @y.131
  %14 = sub i32 0, 1
  %15 = add i32 %12, %14
  %16 = sub i32 %12, 1
  %17 = mul i32 %12, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  store i1 %19, i1* %11
  %20 = icmp slt i32 %13, 10
  store i1 %20, i1* %10
  %21 = alloca i32
  store i32 -756592471, i32* %21
  %22 = alloca i64
  br label %23

; <label>:23:                                     ; preds = %3, %160
  %24 = load i32, i32* %21
  switch i32 %24, label %25 [
    i32 -756592471, label %26
    i32 -1400359037, label %34
    i32 -761473980, label %67
    i32 -1990029357, label %70
    i32 564711574, label %73
    i32 -687215820, label %95
    i32 -271729436, label %102
    i32 941072423, label %105
    i32 1286304068, label %108
    i32 -1752685248, label %110
  ]

; <label>:25:                                     ; preds = %23
  br label %160

; <label>:26:                                     ; preds = %23
  %27 = load volatile i1, i1* %11
  %28 = load volatile i1, i1* %10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 -1400359037, i32 -1752685248
  store i32 %33, i32* %21
  br label %160

; <label>:34:                                     ; preds = %23
  %35 = alloca %"class.std::vector.0"*, align 8
  %36 = alloca i64, align 8
  store i64* %36, i64** %9
  %37 = alloca i8*, align 8
  store i8** %37, i8*** %8
  %38 = alloca i64, align 8
  store i64* %38, i64** %7
  %39 = alloca i64, align 8
  store i64* %39, i64** %6
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %35, align 8
  %40 = load volatile i64*, i64** %9
  store i64 %1, i64* %40, align 8
  %41 = load volatile i8**, i8*** %8
  store i8* %2, i8** %41, align 8
  %42 = load %"class.std::vector.0"*, %"class.std::vector.0"** %35, align 8
  store %"class.std::vector.0"* %42, %"class.std::vector.0"** %5
  %43 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  %44 = call i64 @_ZNKSt6vectorI4EdgeSaIS0_EE8max_sizeEv(%"class.std::vector.0"* %43) #10
  %45 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  %46 = call i64 @_ZNKSt6vectorI4EdgeSaIS0_EE4sizeEv(%"class.std::vector.0"* %45) #10
  %47 = sub i64 0, %46
  %48 = add i64 %44, %47
  %49 = sub i64 %44, %46
  %50 = load volatile i64*, i64** %9
  %51 = load i64, i64* %50, align 8
  %52 = icmp ult i64 %48, %51
  store i1 %52, i1* %4
  %53 = load i32, i32* @x.130
  %54 = load i32, i32* @y.131
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 -761473980, i32 -1752685248
  store i32 %66, i32* %21
  br label %160

; <label>:67:                                     ; preds = %23
  %68 = load volatile i1, i1* %4
  %69 = select i1 %68, i32 -1990029357, i32 564711574
  store i32 %69, i32* %21
  br label %160

; <label>:70:                                     ; preds = %23
  %71 = load volatile i8**, i8*** %8
  %72 = load i8*, i8** %71, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %72) #11
  unreachable

; <label>:73:                                     ; preds = %23
  %74 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  %75 = call i64 @_ZNKSt6vectorI4EdgeSaIS0_EE4sizeEv(%"class.std::vector.0"* %74) #10
  %76 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  %77 = call i64 @_ZNKSt6vectorI4EdgeSaIS0_EE4sizeEv(%"class.std::vector.0"* %76) #10
  %78 = load volatile i64*, i64** %6
  store i64 %77, i64* %78, align 8
  %79 = load volatile i64*, i64** %9
  %80 = load volatile i64*, i64** %6
  %81 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %80, i64* dereferenceable(8) %79)
  %82 = load i64, i64* %81, align 8
  %83 = sub i64 0, %75
  %84 = sub i64 0, %82
  %85 = add i64 %83, %84
  %86 = sub i64 0, %85
  %87 = add i64 %75, %82
  %88 = load volatile i64*, i64** %7
  store i64 %86, i64* %88, align 8
  %89 = load volatile i64*, i64** %7
  %90 = load i64, i64* %89, align 8
  %91 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  %92 = call i64 @_ZNKSt6vectorI4EdgeSaIS0_EE4sizeEv(%"class.std::vector.0"* %91) #10
  %93 = icmp ult i64 %90, %92
  %94 = select i1 %93, i32 -271729436, i32 -687215820
  store i32 %94, i32* %21
  br label %160

; <label>:95:                                     ; preds = %23
  %96 = load volatile i64*, i64** %7
  %97 = load i64, i64* %96, align 8
  %98 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  %99 = call i64 @_ZNKSt6vectorI4EdgeSaIS0_EE8max_sizeEv(%"class.std::vector.0"* %98) #10
  %100 = icmp ugt i64 %97, %99
  %101 = select i1 %100, i32 -271729436, i32 941072423
  store i32 %101, i32* %21
  br label %160

; <label>:102:                                    ; preds = %23
  %103 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  %104 = call i64 @_ZNKSt6vectorI4EdgeSaIS0_EE8max_sizeEv(%"class.std::vector.0"* %103) #10
  store i32 1286304068, i32* %21
  store i64 %104, i64* %22
  br label %160

; <label>:105:                                    ; preds = %23
  %106 = load volatile i64*, i64** %7
  %107 = load i64, i64* %106, align 8
  store i32 1286304068, i32* %21
  store i64 %107, i64* %22
  br label %160

; <label>:108:                                    ; preds = %23
  %109 = load i64, i64* %22
  ret i64 %109

; <label>:110:                                    ; preds = %23
  %111 = alloca %"class.std::vector.0"*, align 8
  %112 = alloca i64, align 8
  %113 = alloca i8*, align 8
  %114 = alloca i64, align 8
  %115 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %111, align 8
  store i64 %1, i64* %112, align 8
  store i8* %2, i8** %113, align 8
  %116 = load %"class.std::vector.0"*, %"class.std::vector.0"** %111, align 8
  %117 = call i64 @_ZNKSt6vectorI4EdgeSaIS0_EE8max_sizeEv(%"class.std::vector.0"* %116) #10
  %118 = call i64 @_ZNKSt6vectorI4EdgeSaIS0_EE4sizeEv(%"class.std::vector.0"* %116) #10
  %119 = add i64 0, 937394168562686393
  %120 = sub i64 %119, %117
  %121 = sub i64 %120, 937394168562686393
  %122 = sub i64 0, %117
  %123 = sub i64 0, %121
  %124 = sub i64 0, %118
  %125 = add i64 %123, %124
  %126 = sub i64 0, %125
  %127 = add i64 %121, %118
  %128 = shl i64 %117, %118
  %129 = sub i64 0, -5684353040555593344
  %130 = sub i64 %129, %117
  %131 = add i64 %130, -5684353040555593344
  %132 = sub i64 0, %117
  %133 = sub i64 0, %131
  %134 = sub i64 0, %118
  %135 = add i64 %133, %134
  %136 = sub i64 0, %135
  %137 = add i64 %131, %118
  %138 = sub i64 0, 3886677928229869113
  %139 = sub i64 %138, %117
  %140 = add i64 %139, 3886677928229869113
  %141 = sub i64 0, %117
  %142 = add i64 %140, -8041095417491691467
  %143 = add i64 %142, %118
  %144 = sub i64 %143, -8041095417491691467
  %145 = add i64 %140, %118
  %146 = shl i64 %117, %118
  %147 = sub i64 0, 7258979856011157188
  %148 = sub i64 %147, %117
  %149 = add i64 %148, 7258979856011157188
  %150 = sub i64 0, %117
  %151 = add i64 %149, -155294128385280726
  %152 = add i64 %151, %118
  %153 = sub i64 %152, -155294128385280726
  %154 = add i64 %149, %118
  %155 = sub i64 0, %118
  %156 = add i64 %117, %155
  %157 = sub i64 %117, %118
  %158 = load i64, i64* %112, align 8
  %159 = icmp ult i64 %156, %158
  store i32 -1400359037, i32* %21
  br label %160

; <label>:160:                                    ; preds = %110, %105, %102, %95, %73, %67, %34, %26, %25
  br label %23
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge* @_ZNSt12_Vector_baseI4EdgeSaIS0_EE11_M_allocateEm(%"struct.std::_Vector_base.1"*, i64) #1 comdat align 2 {
  %3 = alloca %struct.Edge*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base.1"*
  %6 = alloca %"struct.std::_Vector_base.1"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %6, align 8
  store %"struct.std::_Vector_base.1"* %8, %"struct.std::_Vector_base.1"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 969050199, i32* %10
  %11 = alloca %struct.Edge*
  br label %12

; <label>:12:                                     ; preds = %2, %62
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 969050199, label %15
    i32 1282316409, label %19
    i32 -1435537373, label %25
    i32 833725450, label %26
    i32 1377455444, label %43
    i32 143051551, label %59
    i32 881117977, label %61
  ]

; <label>:14:                                     ; preds = %12
  br label %62

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 1282316409, i32 -1435537373
  store i32 %18, i32* %10
  br label %62

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %21 to %"class.std::allocator.2"*
  %23 = load i64, i64* %7, align 8
  %24 = call %struct.Edge* @_ZNSt16allocator_traitsISaI4EdgeEE8allocateERS1_m(%"class.std::allocator.2"* dereferenceable(1) %22, i64 %23)
  store i32 833725450, i32* %10
  store %struct.Edge* %24, %struct.Edge** %11
  br label %62

; <label>:25:                                     ; preds = %12
  store i32 833725450, i32* %10
  store %struct.Edge* null, %struct.Edge** %11
  br label %62

; <label>:26:                                     ; preds = %12
  %27 = load %struct.Edge*, %struct.Edge** %11
  store %struct.Edge* %27, %struct.Edge** %3
  %28 = load i32, i32* @x.132
  %29 = load i32, i32* @y.133
  %30 = add i32 %28, -1513062988
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, -1513062988
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 1377455444, i32 881117977
  store i32 %42, i32* %10
  br label %62

; <label>:43:                                     ; preds = %12
  %44 = load i32, i32* @x.132
  %45 = load i32, i32* @y.133
  %46 = add i32 %44, 1495965182
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 1495965182
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 143051551, i32 881117977
  store i32 %58, i32* %10
  br label %62

; <label>:59:                                     ; preds = %12
  %60 = load volatile %struct.Edge*, %struct.Edge** %3
  ret %struct.Edge* %60

; <label>:61:                                     ; preds = %12
  store i32 1377455444, i32* %10
  br label %62

; <label>:62:                                     ; preds = %61, %43, %26, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI4EdgeSaIS0_EE4sizeEv(%"class.std::vector.0"*) #0 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.134
  %6 = load i32, i32* @y.135
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -102810940, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %122
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -102810940, label %18
    i32 -2102753640, label %26
    i32 -1858466793, label %58
    i32 1248893390, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %122

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -2102753640, i32 1248893390
  store i32 %25, i32* %14
  br label %122

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %27, align 8
  %28 = load %"class.std::vector.0"*, %"class.std::vector.0"** %27, align 8
  %29 = bitcast %"class.std::vector.0"* %28 to %"struct.std::_Vector_base.1"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %30, i32 0, i32 1
  %32 = load %struct.Edge*, %struct.Edge** %31, align 8
  %33 = bitcast %"class.std::vector.0"* %28 to %"struct.std::_Vector_base.1"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load %struct.Edge*, %struct.Edge** %35, align 8
  %37 = ptrtoint %struct.Edge* %32 to i64
  %38 = ptrtoint %struct.Edge* %36 to i64
  %39 = sub i64 0, %38
  %40 = add i64 %37, %39
  %41 = sub i64 %37, %38
  %42 = sdiv exact i64 %40, 24
  store i64 %42, i64* %2
  %43 = load i32, i32* @x.134
  %44 = load i32, i32* @y.135
  %45 = add i32 %43, 730489690
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 730489690
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -1858466793, i32 1248893390
  store i32 %57, i32* %14
  br label %122

; <label>:58:                                     ; preds = %15
  %59 = load volatile i64, i64* %2
  ret i64 %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %61, align 8
  %62 = load %"class.std::vector.0"*, %"class.std::vector.0"** %61, align 8
  %63 = bitcast %"class.std::vector.0"* %62 to %"struct.std::_Vector_base.1"*
  %64 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %64, i32 0, i32 1
  %66 = load %struct.Edge*, %struct.Edge** %65, align 8
  %67 = bitcast %"class.std::vector.0"* %62 to %"struct.std::_Vector_base.1"*
  %68 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %67, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %68, i32 0, i32 0
  %70 = load %struct.Edge*, %struct.Edge** %69, align 8
  %71 = ptrtoint %struct.Edge* %66 to i64
  %72 = ptrtoint %struct.Edge* %70 to i64
  %73 = sub i64 0, %72
  %74 = add i64 %71, %73
  %75 = sub i64 %71, %72
  %76 = mul i64 %74, %72
  %77 = add i64 %71, 4186276328594659124
  %78 = sub i64 %77, %72
  %79 = sub i64 %78, 4186276328594659124
  %80 = sub i64 %71, %72
  %81 = mul i64 %79, %72
  %82 = add i64 %71, 5052721136464328110
  %83 = sub i64 %82, %72
  %84 = sub i64 %83, 5052721136464328110
  %85 = sub i64 %71, %72
  %86 = mul i64 %84, %72
  %87 = sub i64 0, %71
  %88 = add i64 0, %87
  %89 = sub i64 0, %71
  %90 = sub i64 %88, -1323918845192243812
  %91 = add i64 %90, %72
  %92 = add i64 %91, -1323918845192243812
  %93 = add i64 %88, %72
  %94 = shl i64 %71, %72
  %95 = sub i64 0, %72
  %96 = add i64 %71, %95
  %97 = sub i64 %71, %72
  %98 = sub i64 0, %96
  %99 = add i64 0, %98
  %100 = sub i64 0, %96
  %101 = sub i64 %99, 1639514380143821609
  %102 = add i64 %101, 24
  %103 = add i64 %102, 1639514380143821609
  %104 = add i64 %99, 24
  %105 = sub i64 %96, 5561361162464603276
  %106 = sub i64 %105, 24
  %107 = add i64 %106, 5561361162464603276
  %108 = sub i64 %96, 24
  %109 = mul i64 %107, 24
  %110 = sub i64 %96, -2895376395491507355
  %111 = sub i64 %110, 24
  %112 = add i64 %111, -2895376395491507355
  %113 = sub i64 %96, 24
  %114 = mul i64 %112, 24
  %115 = shl i64 %96, 24
  %116 = add i64 %96, -2893049142040212249
  %117 = sub i64 %116, 24
  %118 = sub i64 %117, -2893049142040212249
  %119 = sub i64 %96, 24
  %120 = mul i64 %118, 24
  %121 = sdiv exact i64 %96, 24
  store i32 -2102753640, i32* %14
  br label %122

; <label>:122:                                    ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge* @_ZSt34__uninitialized_move_if_noexcept_aIP4EdgeS1_SaIS0_EET0_T_S4_S3_RT1_(%struct.Edge*, %struct.Edge*, %struct.Edge*, %"class.std::allocator.2"* dereferenceable(1)) #1 comdat {
  %5 = alloca %struct.Edge*, align 8
  %6 = alloca %struct.Edge*, align 8
  %7 = alloca %struct.Edge*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  store %struct.Edge* %0, %struct.Edge** %5, align 8
  store %struct.Edge* %1, %struct.Edge** %6, align 8
  store %struct.Edge* %2, %struct.Edge** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %11 = load %struct.Edge*, %struct.Edge** %5, align 8
  %12 = call %struct.Edge* @_ZSt32__make_move_if_noexcept_iteratorIP4EdgeSt13move_iteratorIS1_EET0_T_(%struct.Edge* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  store %struct.Edge* %12, %struct.Edge** %13, align 8
  %14 = load %struct.Edge*, %struct.Edge** %6, align 8
  %15 = call %struct.Edge* @_ZSt32__make_move_if_noexcept_iteratorIP4EdgeSt13move_iteratorIS1_EET0_T_(%struct.Edge* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  store %struct.Edge* %15, %struct.Edge** %16, align 8
  %17 = load %struct.Edge*, %struct.Edge** %7, align 8
  %18 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %struct.Edge*, %struct.Edge** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %22 = load %struct.Edge*, %struct.Edge** %21, align 8
  %23 = call %struct.Edge* @_ZSt22__uninitialized_copy_aISt13move_iteratorIP4EdgeES2_S1_ET0_T_S5_S4_RSaIT1_E(%struct.Edge* %20, %struct.Edge* %22, %struct.Edge* %17, %"class.std::allocator.2"* dereferenceable(1) %18)
  ret %struct.Edge* %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %4 to %"class.std::allocator.2"*
  ret %"class.std::allocator.2"* %5
}

declare i8* @__cxa_begin_catch(i8*)

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI4EdgeEE7destroyIS0_EEvRS1_PT_(%"class.std::allocator.2"* dereferenceable(1), %struct.Edge*) #1 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca %struct.Edge*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store %struct.Edge* %1, %struct.Edge** %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load %struct.Edge*, %struct.Edge** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI4EdgeE7destroyIS1_EEvPT_(%"class.__gnu_cxx::new_allocator.3"* %6, %struct.Edge* %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP4EdgeS0_EvT_S2_RSaIT0_E(%struct.Edge*, %struct.Edge*, %"class.std::allocator.2"* dereferenceable(1)) #1 comdat {
  %4 = alloca %struct.Edge*, align 8
  %5 = alloca %struct.Edge*, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  store %struct.Edge* %0, %struct.Edge** %4, align 8
  store %struct.Edge* %1, %struct.Edge** %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %7 = load %struct.Edge*, %struct.Edge** %4, align 8
  %8 = load %struct.Edge*, %struct.Edge** %5, align 8
  call void @_ZSt8_DestroyIP4EdgeEvT_S2_(%struct.Edge* %7, %struct.Edge* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI4EdgeSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base.1"*, %struct.Edge*, i64) #1 comdat align 2 {
  %4 = alloca %struct.Edge*
  %5 = alloca %"struct.std::_Vector_base.1"*
  %6 = alloca %"struct.std::_Vector_base.1"*, align 8
  %7 = alloca %struct.Edge*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %6, align 8
  store %struct.Edge* %1, %struct.Edge** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %6, align 8
  store %"struct.std::_Vector_base.1"* %9, %"struct.std::_Vector_base.1"** %5
  %10 = load %struct.Edge*, %struct.Edge** %7, align 8
  store %struct.Edge* %10, %struct.Edge** %4
  %11 = alloca i32
  store i32 1614897534, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %131
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1614897534, label %15
    i32 785148905, label %19
    i32 545536726, label %47
    i32 -140189273, label %79
    i32 1351549943, label %80
    i32 1280477062, label %107
    i32 1487788891, label %123
    i32 -942274905, label %124
    i32 1725117105, label %130
  ]

; <label>:14:                                     ; preds = %12
  br label %131

; <label>:15:                                     ; preds = %12
  %16 = load volatile %struct.Edge*, %struct.Edge** %4
  %17 = icmp ne %struct.Edge* %16, null
  %18 = select i1 %17, i32 785148905, i32 1351549943
  store i32 %18, i32* %11
  br label %131

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.144
  %21 = load i32, i32* @y.145
  %22 = sub i32 %20, 691685563
  %23 = sub i32 %22, 1
  %24 = add i32 %23, 691685563
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 false, true
  %33 = and i1 %30, false
  %34 = and i1 %28, %32
  %35 = and i1 %31, false
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 false, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 545536726, i32 -942274905
  store i32 %46, i32* %11
  br label %131

; <label>:47:                                     ; preds = %12
  %48 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %49 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %48, i32 0, i32 0
  %50 = bitcast %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %49 to %"class.std::allocator.2"*
  %51 = load %struct.Edge*, %struct.Edge** %7, align 8
  %52 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaI4EdgeEE10deallocateERS1_PS0_m(%"class.std::allocator.2"* dereferenceable(1) %50, %struct.Edge* %51, i64 %52)
  %53 = load i32, i32* @x.144
  %54 = load i32, i32* @y.145
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 -140189273, i32 -942274905
  store i32 %78, i32* %11
  br label %131

; <label>:79:                                     ; preds = %12
  store i32 1351549943, i32* %11
  br label %131

; <label>:80:                                     ; preds = %12
  %81 = load i32, i32* @x.144
  %82 = load i32, i32* @y.145
  %83 = sub i32 0, 1
  %84 = add i32 %81, %83
  %85 = sub i32 %81, 1
  %86 = mul i32 %81, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %82, 10
  %90 = xor i1 %88, true
  %91 = xor i1 %89, true
  %92 = xor i1 false, true
  %93 = and i1 %90, false
  %94 = and i1 %88, %92
  %95 = and i1 %91, false
  %96 = and i1 %89, %92
  %97 = or i1 %93, %94
  %98 = or i1 %95, %96
  %99 = xor i1 %97, %98
  %100 = or i1 %90, %91
  %101 = xor i1 %100, true
  %102 = or i1 false, %92
  %103 = and i1 %101, %102
  %104 = or i1 %99, %103
  %105 = or i1 %88, %89
  %106 = select i1 %104, i32 1280477062, i32 1725117105
  store i32 %106, i32* %11
  br label %131

; <label>:107:                                    ; preds = %12
  %108 = load i32, i32* @x.144
  %109 = load i32, i32* @y.145
  %110 = sub i32 %108, 1881180871
  %111 = sub i32 %110, 1
  %112 = add i32 %111, 1881180871
  %113 = sub i32 %108, 1
  %114 = mul i32 %108, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %109, 10
  %118 = and i1 %116, %117
  %119 = xor i1 %116, %117
  %120 = or i1 %118, %119
  %121 = or i1 %116, %117
  %122 = select i1 %120, i32 1487788891, i32 1725117105
  store i32 %122, i32* %11
  br label %131

; <label>:123:                                    ; preds = %12
  ret void

; <label>:124:                                    ; preds = %12
  %125 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %126 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %125, i32 0, i32 0
  %127 = bitcast %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %126 to %"class.std::allocator.2"*
  %128 = load %struct.Edge*, %struct.Edge** %7, align 8
  %129 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaI4EdgeEE10deallocateERS1_PS0_m(%"class.std::allocator.2"* dereferenceable(1) %127, %struct.Edge* %128, i64 %129)
  store i32 545536726, i32* %11
  br label %131

; <label>:130:                                    ; preds = %12
  store i32 1280477062, i32* %11
  br label %131

; <label>:131:                                    ; preds = %130, %124, %107, %80, %79, %47, %19, %15, %14
  br label %12
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #5 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #10
  call void @_ZSt9terminatev() #8
  unreachable
}

declare void @_ZSt9terminatev()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI4EdgeSaIS0_EE8max_sizeEv(%"class.std::vector.0"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %5 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %4) #10
  %6 = call i64 @_ZNSt16allocator_traitsISaI4EdgeEE8max_sizeERKS1_(%"class.std::allocator.2"* dereferenceable(1) %5) #10
  ret i64 %6
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #6

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  %8 = load i64*, i64** %6, align 8
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %4
  %10 = load i64*, i64** %7, align 8
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 1387614681, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %84
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1387614681, label %16
    i32 1485462724, label %21
    i32 405963232, label %48
    i32 -167805797, label %77
    i32 1915987600, label %78
    i32 755257479, label %80
    i32 1064068830, label %82
  ]

; <label>:15:                                     ; preds = %13
  br label %84

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp ult i64 %17, %18
  %20 = select i1 %19, i32 1485462724, i32 1915987600
  store i32 %20, i32* %12
  br label %84

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.150
  %23 = load i32, i32* @y.151
  %24 = sub i32 0, 1
  %25 = add i32 %22, %24
  %26 = sub i32 %22, 1
  %27 = mul i32 %22, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %23, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 false, true
  %34 = and i1 %31, false
  %35 = and i1 %29, %33
  %36 = and i1 %32, false
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 false, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  %47 = select i1 %45, i32 405963232, i32 1064068830
  store i32 %47, i32* %12
  br label %84

; <label>:48:                                     ; preds = %13
  %49 = load i64*, i64** %7, align 8
  store i64* %49, i64** %5, align 8
  %50 = load i32, i32* @x.150
  %51 = load i32, i32* @y.151
  %52 = add i32 %50, -66267155
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -66267155
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -167805797, i32 1064068830
  store i32 %76, i32* %12
  br label %84

; <label>:77:                                     ; preds = %13
  store i32 755257479, i32* %12
  br label %84

; <label>:78:                                     ; preds = %13
  %79 = load i64*, i64** %6, align 8
  store i64* %79, i64** %5, align 8
  store i32 755257479, i32* %12
  br label %84

; <label>:80:                                     ; preds = %13
  %81 = load i64*, i64** %5, align 8
  ret i64* %81

; <label>:82:                                     ; preds = %13
  %83 = load i64*, i64** %7, align 8
  store i64* %83, i64** %5, align 8
  store i32 405963232, i32* %12
  br label %84

; <label>:84:                                     ; preds = %82, %78, %77, %48, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaI4EdgeEE8max_sizeERKS1_(%"class.std::allocator.2"* dereferenceable(1)) #0 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.152
  %6 = load i32, i32* @y.153
  %7 = add i32 %5, -1359585849
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1359585849
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1360979803, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1360979803, label %19
    i32 670537435, label %27
    i32 875760470, label %47
    i32 608430325, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 670537435, i32 608430325
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %28, align 8
  %29 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %28, align 8
  %30 = bitcast %"class.std::allocator.2"* %29 to %"class.__gnu_cxx::new_allocator.3"*
  %31 = call i64 @_ZNK9__gnu_cxx13new_allocatorI4EdgeE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %30) #10
  store i64 %31, i64* %2
  %32 = load i32, i32* @x.152
  %33 = load i32, i32* @y.153
  %34 = sub i32 %32, -1702883265
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -1702883265
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 875760470, i32 608430325
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile i64, i64* %2
  ret i64 %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %50, align 8
  %51 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %50, align 8
  %52 = bitcast %"class.std::allocator.2"* %51 to %"class.__gnu_cxx::new_allocator.3"*
  %53 = call i64 @_ZNK9__gnu_cxx13new_allocatorI4EdgeE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %52) #10
  store i32 670537435, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %4 to %"class.std::allocator.2"*
  ret %"class.std::allocator.2"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorI4EdgeE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge* @_ZNSt16allocator_traitsISaI4EdgeEE8allocateERS1_m(%"class.std::allocator.2"* dereferenceable(1), i64) #1 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load i64, i64* %4, align 8
  %8 = call %struct.Edge* @_ZN9__gnu_cxx13new_allocatorI4EdgeE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"* %6, i64 %7, i8* null)
  ret %struct.Edge* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge* @_ZN9__gnu_cxx13new_allocatorI4EdgeE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"*, i64, i8*) #1 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorI4EdgeE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %9) #10
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 1363987279, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1363987279, label %16
    i32 1955508994, label %21
    i32 1238771946, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 1955508994, i32 1238771946
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #11
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 24
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %struct.Edge*
  ret %struct.Edge* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #6

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #7

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge* @_ZSt22__uninitialized_copy_aISt13move_iteratorIP4EdgeES2_S1_ET0_T_S5_S4_RSaIT1_E(%struct.Edge*, %struct.Edge*, %struct.Edge*, %"class.std::allocator.2"* dereferenceable(1)) #1 comdat {
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::move_iterator", align 8
  %7 = alloca %struct.Edge*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %struct.Edge* %0, %struct.Edge** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %6, i32 0, i32 0
  store %struct.Edge* %1, %struct.Edge** %12, align 8
  store %struct.Edge* %2, %struct.Edge** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %13 = bitcast %"class.std::move_iterator"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %struct.Edge*, %struct.Edge** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %19 = load %struct.Edge*, %struct.Edge** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %21 = load %struct.Edge*, %struct.Edge** %20, align 8
  %22 = call %struct.Edge* @_ZSt18uninitialized_copyISt13move_iteratorIP4EdgeES2_ET0_T_S5_S4_(%struct.Edge* %19, %struct.Edge* %21, %struct.Edge* %17)
  ret %struct.Edge* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge* @_ZSt32__make_move_if_noexcept_iteratorIP4EdgeSt13move_iteratorIS1_EET0_T_(%struct.Edge*) #1 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca %struct.Edge*, align 8
  store %struct.Edge* %0, %struct.Edge** %3, align 8
  %4 = load %struct.Edge*, %struct.Edge** %3, align 8
  call void @_ZNSt13move_iteratorIP4EdgeEC2ES1_(%"class.std::move_iterator"* %2, %struct.Edge* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  %6 = load %struct.Edge*, %struct.Edge** %5, align 8
  ret %struct.Edge* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge* @_ZSt18uninitialized_copyISt13move_iteratorIP4EdgeES2_ET0_T_S5_S4_(%struct.Edge*, %struct.Edge*, %struct.Edge*) #1 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %struct.Edge*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %struct.Edge* %0, %struct.Edge** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %struct.Edge* %1, %struct.Edge** %11, align 8
  store %struct.Edge* %2, %struct.Edge** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %struct.Edge*, %struct.Edge** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %18 = load %struct.Edge*, %struct.Edge** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %struct.Edge*, %struct.Edge** %19, align 8
  %21 = call %struct.Edge* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIP4EdgeES4_EET0_T_S7_S6_(%struct.Edge* %18, %struct.Edge* %20, %struct.Edge* %16)
  ret %struct.Edge* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIP4EdgeES4_EET0_T_S7_S6_(%struct.Edge*, %struct.Edge*, %struct.Edge*) #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %struct.Edge*, align 8
  %7 = alloca %struct.Edge*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %struct.Edge* %0, %struct.Edge** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %struct.Edge* %1, %struct.Edge** %11, align 8
  store %struct.Edge* %2, %struct.Edge** %6, align 8
  %12 = load %struct.Edge*, %struct.Edge** %6, align 8
  store %struct.Edge* %12, %struct.Edge** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %65, %3
  %14 = invoke zeroext i1 @_ZStneIP4EdgeEbRKSt13move_iteratorIT_ES6_(%"class.std::move_iterator"* dereferenceable(8) %4, %"class.std::move_iterator"* dereferenceable(8) %5)
          to label %15 unwind label %68

; <label>:15:                                     ; preds = %13
  br i1 %14, label %16, label %131

; <label>:16:                                     ; preds = %15
  %17 = load %struct.Edge*, %struct.Edge** %7, align 8
  %18 = call %struct.Edge* @_ZSt11__addressofI4EdgeEPT_RS1_(%struct.Edge* dereferenceable(24) %17) #10
  %19 = invoke dereferenceable(24) %struct.Edge* @_ZNKSt13move_iteratorIP4EdgeEdeEv(%"class.std::move_iterator"* %4)
          to label %20 unwind label %68

; <label>:20:                                     ; preds = %16
  invoke void @_ZSt10_ConstructI4EdgeJS0_EEvPT_DpOT0_(%struct.Edge* %18, %struct.Edge* dereferenceable(24) %19)
          to label %21 unwind label %68

; <label>:21:                                     ; preds = %20
  br label %22

; <label>:22:                                     ; preds = %21
  %23 = load i32, i32* @x.168
  %24 = load i32, i32* @y.169
  %25 = add i32 %23, -570484356
  %26 = sub i32 %25, 1
  %27 = sub i32 %26, -570484356
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 false, true
  %36 = and i1 %33, false
  %37 = and i1 %31, %35
  %38 = and i1 %34, false
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 false, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  br i1 %47, label %49, label %322

; <label>:49:                                     ; preds = %22, %322
  %50 = load i32, i32* @x.168
  %51 = load i32, i32* @y.169
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  br i1 %61, label %63, label %322

; <label>:63:                                     ; preds = %49
  %64 = invoke dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIP4EdgeEppEv(%"class.std::move_iterator"* %4)
          to label %65 unwind label %68

; <label>:65:                                     ; preds = %63
  %66 = load %struct.Edge*, %struct.Edge** %7, align 8
  %67 = getelementptr inbounds %struct.Edge, %struct.Edge* %66, i32 1
  store %struct.Edge* %67, %struct.Edge** %7, align 8
  br label %13

; <label>:68:                                     ; preds = %63, %20, %16, %13
  %69 = landingpad { i8*, i32 }
          catch i8* null
  %70 = extractvalue { i8*, i32 } %69, 0
  store i8* %70, i8** %8, align 8
  %71 = extractvalue { i8*, i32 } %69, 1
  store i32 %71, i32* %9, align 4
  br label %72

; <label>:72:                                     ; preds = %68
  %73 = load i8*, i8** %8, align 8
  %74 = call i8* @__cxa_begin_catch(i8* %73) #10
  %75 = load %struct.Edge*, %struct.Edge** %6, align 8
  %76 = load %struct.Edge*, %struct.Edge** %7, align 8
  invoke void @_ZSt8_DestroyIP4EdgeEvT_S2_(%struct.Edge* %75, %struct.Edge* %76)
          to label %77 unwind label %133

; <label>:77:                                     ; preds = %72
  %78 = load i32, i32* @x.168
  %79 = load i32, i32* @y.169
  %80 = sub i32 0, 1
  %81 = add i32 %78, %80
  %82 = sub i32 %78, 1
  %83 = mul i32 %78, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %79, 10
  %87 = xor i1 %85, true
  %88 = xor i1 %86, true
  %89 = xor i1 true, true
  %90 = and i1 %87, true
  %91 = and i1 %85, %89
  %92 = and i1 %88, true
  %93 = and i1 %86, %89
  %94 = or i1 %90, %91
  %95 = or i1 %92, %93
  %96 = xor i1 %94, %95
  %97 = or i1 %87, %88
  %98 = xor i1 %97, true
  %99 = or i1 true, %89
  %100 = and i1 %98, %99
  %101 = or i1 %96, %100
  %102 = or i1 %85, %86
  br i1 %101, label %103, label %323

; <label>:103:                                    ; preds = %77, %323
  %104 = load i32, i32* @x.168
  %105 = load i32, i32* @y.169
  %106 = sub i32 %104, -1857874155
  %107 = sub i32 %106, 1
  %108 = add i32 %107, -1857874155
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = xor i1 %112, true
  %115 = xor i1 %113, true
  %116 = xor i1 false, true
  %117 = and i1 %114, false
  %118 = and i1 %112, %116
  %119 = and i1 %115, false
  %120 = and i1 %113, %116
  %121 = or i1 %117, %118
  %122 = or i1 %119, %120
  %123 = xor i1 %121, %122
  %124 = or i1 %114, %115
  %125 = xor i1 %124, true
  %126 = or i1 false, %116
  %127 = and i1 %125, %126
  %128 = or i1 %123, %127
  %129 = or i1 %112, %113
  br i1 %128, label %130, label %323

; <label>:130:                                    ; preds = %103
  invoke void @__cxa_rethrow() #11
          to label %321 unwind label %133

; <label>:131:                                    ; preds = %15
  %132 = load %struct.Edge*, %struct.Edge** %7, align 8
  ret %struct.Edge* %132

; <label>:133:                                    ; preds = %130, %72
  %134 = load i32, i32* @x.168
  %135 = load i32, i32* @y.169
  %136 = sub i32 0, 1
  %137 = add i32 %134, %136
  %138 = sub i32 %134, 1
  %139 = mul i32 %134, %137
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %135, 10
  %143 = xor i1 %141, true
  %144 = xor i1 %142, true
  %145 = xor i1 true, true
  %146 = and i1 %143, true
  %147 = and i1 %141, %145
  %148 = and i1 %144, true
  %149 = and i1 %142, %145
  %150 = or i1 %146, %147
  %151 = or i1 %148, %149
  %152 = xor i1 %150, %151
  %153 = or i1 %143, %144
  %154 = xor i1 %153, true
  %155 = or i1 true, %145
  %156 = and i1 %154, %155
  %157 = or i1 %152, %156
  %158 = or i1 %141, %142
  br i1 %157, label %159, label %324

; <label>:159:                                    ; preds = %133, %324
  %160 = landingpad { i8*, i32 }
          cleanup
  %161 = extractvalue { i8*, i32 } %160, 0
  store i8* %161, i8** %8, align 8
  %162 = extractvalue { i8*, i32 } %160, 1
  store i32 %162, i32* %9, align 4
  %163 = load i32, i32* @x.168
  %164 = load i32, i32* @y.169
  %165 = sub i32 0, 1
  %166 = add i32 %163, %165
  %167 = sub i32 %163, 1
  %168 = mul i32 %163, %166
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %164, 10
  %172 = and i1 %170, %171
  %173 = xor i1 %170, %171
  %174 = or i1 %172, %173
  %175 = or i1 %170, %171
  br i1 %174, label %176, label %324

; <label>:176:                                    ; preds = %159
  invoke void @__cxa_end_catch()
          to label %177 unwind label %266

; <label>:177:                                    ; preds = %176
  br label %220
                                                  ; No predecessors!
  %179 = load i32, i32* @x.168
  %180 = load i32, i32* @y.169
  %181 = sub i32 0, 1
  %182 = add i32 %179, %181
  %183 = sub i32 %179, 1
  %184 = mul i32 %179, %182
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %180, 10
  %188 = and i1 %186, %187
  %189 = xor i1 %186, %187
  %190 = or i1 %188, %189
  %191 = or i1 %186, %187
  br i1 %190, label %192, label %328

; <label>:192:                                    ; preds = %178, %328
  call void @llvm.trap()
  %193 = load i32, i32* @x.168
  %194 = load i32, i32* @y.169
  %195 = add i32 %193, 25166567
  %196 = sub i32 %195, 1
  %197 = sub i32 %196, 25166567
  %198 = sub i32 %193, 1
  %199 = mul i32 %193, %197
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %194, 10
  %203 = xor i1 %201, true
  %204 = xor i1 %202, true
  %205 = xor i1 false, true
  %206 = and i1 %203, false
  %207 = and i1 %201, %205
  %208 = and i1 %204, false
  %209 = and i1 %202, %205
  %210 = or i1 %206, %207
  %211 = or i1 %208, %209
  %212 = xor i1 %210, %211
  %213 = or i1 %203, %204
  %214 = xor i1 %213, true
  %215 = or i1 false, %205
  %216 = and i1 %214, %215
  %217 = or i1 %212, %216
  %218 = or i1 %201, %202
  br i1 %217, label %219, label %328

; <label>:219:                                    ; preds = %192
  unreachable

; <label>:220:                                    ; preds = %177
  %221 = load i32, i32* @x.168
  %222 = load i32, i32* @y.169
  %223 = sub i32 %221, 354769090
  %224 = sub i32 %223, 1
  %225 = add i32 %224, 354769090
  %226 = sub i32 %221, 1
  %227 = mul i32 %221, %225
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %222, 10
  %231 = and i1 %229, %230
  %232 = xor i1 %229, %230
  %233 = or i1 %231, %232
  %234 = or i1 %229, %230
  br i1 %233, label %235, label %329

; <label>:235:                                    ; preds = %220, %329
  %236 = load i8*, i8** %8, align 8
  %237 = load i32, i32* %9, align 4
  %238 = insertvalue { i8*, i32 } undef, i8* %236, 0
  %239 = insertvalue { i8*, i32 } %238, i32 %237, 1
  %240 = load i32, i32* @x.168
  %241 = load i32, i32* @y.169
  %242 = sub i32 0, 1
  %243 = add i32 %240, %242
  %244 = sub i32 %240, 1
  %245 = mul i32 %240, %243
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %241, 10
  %249 = xor i1 %247, true
  %250 = xor i1 %248, true
  %251 = xor i1 true, true
  %252 = and i1 %249, true
  %253 = and i1 %247, %251
  %254 = and i1 %250, true
  %255 = and i1 %248, %251
  %256 = or i1 %252, %253
  %257 = or i1 %254, %255
  %258 = xor i1 %256, %257
  %259 = or i1 %249, %250
  %260 = xor i1 %259, true
  %261 = or i1 true, %251
  %262 = and i1 %260, %261
  %263 = or i1 %258, %262
  %264 = or i1 %247, %248
  br i1 %263, label %265, label %329

; <label>:265:                                    ; preds = %235
  resume { i8*, i32 } %239

; <label>:266:                                    ; preds = %176
  %267 = load i32, i32* @x.168
  %268 = load i32, i32* @y.169
  %269 = sub i32 0, 1
  %270 = add i32 %267, %269
  %271 = sub i32 %267, 1
  %272 = mul i32 %267, %270
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %268, 10
  %276 = xor i1 %274, true
  %277 = xor i1 %275, true
  %278 = xor i1 false, true
  %279 = and i1 %276, false
  %280 = and i1 %274, %278
  %281 = and i1 %277, false
  %282 = and i1 %275, %278
  %283 = or i1 %279, %280
  %284 = or i1 %281, %282
  %285 = xor i1 %283, %284
  %286 = or i1 %276, %277
  %287 = xor i1 %286, true
  %288 = or i1 false, %278
  %289 = and i1 %287, %288
  %290 = or i1 %285, %289
  %291 = or i1 %274, %275
  br i1 %290, label %292, label %334

; <label>:292:                                    ; preds = %266, %334
  %293 = landingpad { i8*, i32 }
          catch i8* null
  %294 = extractvalue { i8*, i32 } %293, 0
  call void @__clang_call_terminate(i8* %294) #8
  %295 = load i32, i32* @x.168
  %296 = load i32, i32* @y.169
  %297 = sub i32 0, 1
  %298 = add i32 %295, %297
  %299 = sub i32 %295, 1
  %300 = mul i32 %295, %298
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %296, 10
  %304 = xor i1 %302, true
  %305 = xor i1 %303, true
  %306 = xor i1 true, true
  %307 = and i1 %304, true
  %308 = and i1 %302, %306
  %309 = and i1 %305, true
  %310 = and i1 %303, %306
  %311 = or i1 %307, %308
  %312 = or i1 %309, %310
  %313 = xor i1 %311, %312
  %314 = or i1 %304, %305
  %315 = xor i1 %314, true
  %316 = or i1 true, %306
  %317 = and i1 %315, %316
  %318 = or i1 %313, %317
  %319 = or i1 %302, %303
  br i1 %318, label %320, label %334

; <label>:320:                                    ; preds = %292
  unreachable

; <label>:321:                                    ; preds = %130
  unreachable

; <label>:322:                                    ; preds = %49, %22
  br label %49

; <label>:323:                                    ; preds = %103, %77
  br label %103

; <label>:324:                                    ; preds = %159, %133
  %325 = landingpad { i8*, i32 }
          cleanup
  %326 = extractvalue { i8*, i32 } %325, 0
  store i8* %326, i8** %8, align 8
  %327 = extractvalue { i8*, i32 } %325, 1
  store i32 %327, i32* %9, align 4
  br label %159

; <label>:328:                                    ; preds = %192, %178
  call void @llvm.trap()
  br label %192

; <label>:329:                                    ; preds = %235, %220
  %330 = load i8*, i8** %8, align 8
  %331 = load i32, i32* %9, align 4
  %332 = insertvalue { i8*, i32 } undef, i8* %330, 0
  %333 = insertvalue { i8*, i32 } %332, i32 %331, 1
  br label %235

; <label>:334:                                    ; preds = %292, %266
  %335 = landingpad { i8*, i32 }
          catch i8* null
  %336 = extractvalue { i8*, i32 } %335, 0
  call void @__clang_call_terminate(i8* %336) #8
  br label %292
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIP4EdgeEbRKSt13move_iteratorIT_ES6_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #1 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.170
  %7 = load i32, i32* @y.171
  %8 = sub i32 %6, -519483876
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -519483876
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 556090422, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %131
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 556090422, label %20
    i32 -794083362, label %40
    i32 -188661548, label %67
    i32 1754485990, label %69
  ]

; <label>:19:                                     ; preds = %17
  br label %131

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -794083362, i32 1754485990
  store i32 %39, i32* %16
  br label %131

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::move_iterator"*, align 8
  %42 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %41, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %42, align 8
  %43 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %41, align 8
  %44 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %42, align 8
  %45 = call zeroext i1 @_ZSteqIP4EdgeEbRKSt13move_iteratorIT_ES6_(%"class.std::move_iterator"* dereferenceable(8) %43, %"class.std::move_iterator"* dereferenceable(8) %44)
  %46 = xor i1 %45, true
  %47 = and i1 true, %46
  %48 = xor i1 true, true
  %49 = and i1 %45, %48
  %50 = or i1 %47, %49
  %51 = xor i1 %45, true
  store i1 %50, i1* %3
  %52 = load i32, i32* @x.170
  %53 = load i32, i32* @y.171
  %54 = sub i32 %52, 574073521
  %55 = sub i32 %54, 1
  %56 = add i32 %55, 574073521
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 -188661548, i32 1754485990
  store i32 %66, i32* %16
  br label %131

; <label>:67:                                     ; preds = %17
  %68 = load volatile i1, i1* %3
  ret i1 %68

; <label>:69:                                     ; preds = %17
  %70 = alloca %"class.std::move_iterator"*, align 8
  %71 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %70, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %71, align 8
  %72 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %70, align 8
  %73 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %71, align 8
  %74 = call zeroext i1 @_ZSteqIP4EdgeEbRKSt13move_iteratorIT_ES6_(%"class.std::move_iterator"* dereferenceable(8) %72, %"class.std::move_iterator"* dereferenceable(8) %73)
  %75 = add i1 %74, false
  %76 = sub i1 %75, true
  %77 = sub i1 %76, false
  %78 = sub i1 %74, true
  %79 = mul i1 %77, true
  %80 = sub i1 false, true
  %81 = add i1 %74, %80
  %82 = sub i1 %74, true
  %83 = mul i1 %81, true
  %84 = sub i1 %74, false
  %85 = sub i1 %84, true
  %86 = add i1 %85, false
  %87 = sub i1 %74, true
  %88 = mul i1 %86, true
  %89 = sub i1 false, true
  %90 = sub i1 %89, %74
  %91 = add i1 %90, true
  %92 = sub i1 false, %74
  %93 = add i1 %91, true
  %94 = add i1 %93, true
  %95 = sub i1 %94, true
  %96 = add i1 %91, true
  %97 = add i1 %74, false
  %98 = sub i1 %97, true
  %99 = sub i1 %98, false
  %100 = sub i1 %74, true
  %101 = mul i1 %99, true
  %102 = add i1 false, false
  %103 = sub i1 %102, %74
  %104 = sub i1 %103, false
  %105 = sub i1 false, %74
  %106 = sub i1 false, %104
  %107 = sub i1 false, true
  %108 = add i1 %106, %107
  %109 = sub i1 false, %108
  %110 = add i1 %104, true
  %111 = sub i1 false, true
  %112 = sub i1 %111, %74
  %113 = add i1 %112, true
  %114 = sub i1 false, %74
  %115 = sub i1 false, %113
  %116 = sub i1 false, true
  %117 = add i1 %115, %116
  %118 = sub i1 false, %117
  %119 = add i1 %113, true
  %120 = xor i1 %74, true
  %121 = and i1 false, %120
  %122 = xor i1 false, true
  %123 = and i1 %74, %122
  %124 = xor i1 true, true
  %125 = and i1 %124, false
  %126 = and i1 true, %122
  %127 = or i1 %121, %123
  %128 = or i1 %125, %126
  %129 = xor i1 %127, %128
  %130 = xor i1 %74, true
  store i32 -794083362, i32* %16
  br label %131

; <label>:131:                                    ; preds = %69, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructI4EdgeJS0_EEvPT_DpOT0_(%struct.Edge*, %struct.Edge* dereferenceable(24)) #0 comdat {
  %3 = alloca %struct.Edge*, align 8
  %4 = alloca %struct.Edge*, align 8
  store %struct.Edge* %0, %struct.Edge** %3, align 8
  store %struct.Edge* %1, %struct.Edge** %4, align 8
  %5 = load %struct.Edge*, %struct.Edge** %3, align 8
  %6 = bitcast %struct.Edge* %5 to i8*
  %7 = bitcast i8* %6 to %struct.Edge*
  %8 = load %struct.Edge*, %struct.Edge** %4, align 8
  %9 = call dereferenceable(24) %struct.Edge* @_ZSt7forwardI4EdgeEOT_RNSt16remove_referenceIS1_E4typeE(%struct.Edge* dereferenceable(24) %8) #10
  %10 = bitcast %struct.Edge* %7 to i8*
  %11 = bitcast %struct.Edge* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 24, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.Edge* @_ZSt11__addressofI4EdgeEPT_RS1_(%struct.Edge* dereferenceable(24)) #0 comdat {
  %2 = alloca %struct.Edge*, align 8
  store %struct.Edge* %0, %struct.Edge** %2, align 8
  %3 = load %struct.Edge*, %struct.Edge** %2, align 8
  %4 = bitcast %struct.Edge* %3 to i8*
  %5 = bitcast i8* %4 to %struct.Edge*
  ret %struct.Edge* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %struct.Edge* @_ZNKSt13move_iteratorIP4EdgeEdeEv(%"class.std::move_iterator"*) #0 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %struct.Edge*, %struct.Edge** %4, align 8
  ret %struct.Edge* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIP4EdgeEppEv(%"class.std::move_iterator"*) #0 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %struct.Edge*, %struct.Edge** %4, align 8
  %6 = getelementptr inbounds %struct.Edge, %struct.Edge* %5, i32 1
  store %struct.Edge* %6, %struct.Edge** %4, align 8
  ret %"class.std::move_iterator"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP4EdgeEvT_S2_(%struct.Edge*, %struct.Edge*) #1 comdat {
  %3 = alloca %struct.Edge*, align 8
  %4 = alloca %struct.Edge*, align 8
  store %struct.Edge* %0, %struct.Edge** %3, align 8
  store %struct.Edge* %1, %struct.Edge** %4, align 8
  %5 = load %struct.Edge*, %struct.Edge** %3, align 8
  %6 = load %struct.Edge*, %struct.Edge** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIP4EdgeEEvT_S4_(%struct.Edge* %5, %struct.Edge* %6)
  ret void
}

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIP4EdgeEbRKSt13move_iteratorIT_ES6_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #1 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = call %struct.Edge* @_ZNKSt13move_iteratorIP4EdgeE4baseEv(%"class.std::move_iterator"* %5)
  %7 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %8 = call %struct.Edge* @_ZNKSt13move_iteratorIP4EdgeE4baseEv(%"class.std::move_iterator"* %7)
  %9 = icmp eq %struct.Edge* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.Edge* @_ZNKSt13move_iteratorIP4EdgeE4baseEv(%"class.std::move_iterator"*) #0 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %struct.Edge*, %struct.Edge** %4, align 8
  ret %struct.Edge* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIP4EdgeEEvT_S4_(%struct.Edge*, %struct.Edge*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.186
  %6 = load i32, i32* @y.187
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -570840853, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -570840853, label %18
    i32 547710059, label %38
    i32 1098100141, label %68
    i32 -46728531, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 547710059, i32 -46728531
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca %struct.Edge*, align 8
  %40 = alloca %struct.Edge*, align 8
  store %struct.Edge* %0, %struct.Edge** %39, align 8
  store %struct.Edge* %1, %struct.Edge** %40, align 8
  %41 = load i32, i32* @x.186
  %42 = load i32, i32* @y.187
  %43 = sub i32 %41, -1943956496
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -1943956496
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1098100141, i32 -46728531
  store i32 %67, i32* %14
  br label %72

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca %struct.Edge*, align 8
  %71 = alloca %struct.Edge*, align 8
  store %struct.Edge* %0, %struct.Edge** %70, align 8
  store %struct.Edge* %1, %struct.Edge** %71, align 8
  store i32 547710059, i32* %14
  br label %72

; <label>:72:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIP4EdgeEC2ES1_(%"class.std::move_iterator"*, %struct.Edge*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %struct.Edge*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %struct.Edge* %1, %struct.Edge** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  %7 = load %struct.Edge*, %struct.Edge** %4, align 8
  store %struct.Edge* %7, %struct.Edge** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI4EdgeE7destroyIS1_EEvPT_(%"class.__gnu_cxx::new_allocator.3"*, %struct.Edge*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.190
  %6 = load i32, i32* @y.191
  %7 = sub i32 %5, 2076657228
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 2076657228
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -847197469, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -847197469, label %19
    i32 -422042343, label %39
    i32 -135511395, label %58
    i32 1752590691, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -422042343, i32 1752590691
  store i32 %38, i32* %15
  br label %64

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %41 = alloca %struct.Edge*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %40, align 8
  store %struct.Edge* %1, %struct.Edge** %41, align 8
  %42 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %40, align 8
  %43 = load %struct.Edge*, %struct.Edge** %41, align 8
  %44 = load i32, i32* @x.190
  %45 = load i32, i32* @y.191
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -135511395, i32 1752590691
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  ret void

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %61 = alloca %struct.Edge*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %60, align 8
  store %struct.Edge* %1, %struct.Edge** %61, align 8
  %62 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %60, align 8
  %63 = load %struct.Edge*, %struct.Edge** %61, align 8
  store i32 -422042343, i32* %15
  br label %64

; <label>:64:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI4EdgeEE10deallocateERS1_PS0_m(%"class.std::allocator.2"* dereferenceable(1), %struct.Edge*, i64) #1 comdat align 2 {
  %4 = alloca %"class.std::allocator.2"*, align 8
  %5 = alloca %struct.Edge*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %4, align 8
  store %struct.Edge* %1, %struct.Edge** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  %9 = load %struct.Edge*, %struct.Edge** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI4EdgeE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.3"* %8, %struct.Edge* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI4EdgeE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.3"*, %struct.Edge*, i64) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %5 = alloca %struct.Edge*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  store %struct.Edge* %1, %struct.Edge** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  %8 = load %struct.Edge*, %struct.Edge** %5, align 8
  %9 = bitcast %struct.Edge* %8 to i8*
  call void @_ZdlPv(i8* %9) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #9

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxEC2Ev(%"class.__gnu_cxx::new_allocator.13"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxED2Ev(%"class.__gnu_cxx::new_allocator.13"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base.11"*, i64, %"class.std::allocator.12"* dereferenceable(1)) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.11"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.12"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.12"* %2, %"class.std::allocator.12"** %6, align 8
  %9 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %6, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %10, %"class.std::allocator.12"* dereferenceable(1) %11) #10
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm(%"struct.std::_Vector_base.11"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %10) #10
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i8*, i8** %7, align 8
  %20 = load i32, i32* %8, align 4
  %21 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE21_M_default_initializeEm(%"class.std::vector.10"*, i64) #1 comdat align 2 {
  %3 = alloca %"class.std::vector.10"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.10"*, %"class.std::vector.10"** %3, align 8
  %6 = bitcast %"class.std::vector.10"* %5 to %"struct.std::_Vector_base.11"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = bitcast %"class.std::vector.10"* %5 to %"struct.std::_Vector_base.11"*
  %12 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"* %11) #10
  %13 = call i64* @_ZSt27__uninitialized_default_n_aIPxmxET_S1_T0_RSaIT1_E(i64* %9, i64 %10, %"class.std::allocator.12"* dereferenceable(1) %12)
  %14 = bitcast %"class.std::vector.10"* %5 to %"struct.std::_Vector_base.11"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %15, i32 0, i32 1
  store i64* %13, i64** %16, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.11"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.11"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %2, align 8
  %5 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = ptrtoint i64* %11 to i64
  %16 = ptrtoint i64* %14 to i64
  %17 = add i64 %15, -3876652116645697747
  %18 = sub i64 %17, %16
  %19 = sub i64 %18, -3876652116645697747
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 8
  invoke void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.11"* %5, i64* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %23) #10
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %28) #10
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %30) #8
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"class.std::allocator.12"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.12"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.12"* %1, %"class.std::allocator.12"** %4, align 8
  %5 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5 to %"class.std::allocator.12"*
  %7 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %4, align 8
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator.12"* %6, %"class.std::allocator.12"* dereferenceable(1) %7) #10
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 0
  store i64* null, i64** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 1
  store i64* null, i64** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 2
  store i64* null, i64** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm(%"struct.std::_Vector_base.11"*, i64) #1 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.11"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base.11"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %8, i32 0, i32 0
  store i64* %7, i64** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %13, i32 0, i32 1
  store i64* %12, i64** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds i64, i64* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %20, i32 0, i32 2
  store i64* %19, i64** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.210
  %5 = load i32, i32* @y.211
  %6 = add i32 %4, -2063304096
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -2063304096
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -640081591, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -640081591, label %18
    i32 1248873221, label %26
    i32 -190660892, label %57
    i32 485896082, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1248873221, i32 485896082
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %27, align 8
  %28 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %27, align 8
  %29 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %28 to %"class.std::allocator.12"*
  call void @_ZNSaIxED2Ev(%"class.std::allocator.12"* %29) #10
  %30 = load i32, i32* @x.210
  %31 = load i32, i32* @y.211
  %32 = add i32 %30, 1171746323
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 1171746323
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -190660892, i32 485896082
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %59, align 8
  %60 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %59, align 8
  %61 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %60 to %"class.std::allocator.12"*
  call void @_ZNSaIxED2Ev(%"class.std::allocator.12"* %61) #10
  store i32 1248873221, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_(%"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %1, %"class.__gnu_cxx::new_allocator.13"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base.11"*, i64) #1 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.11"*
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.214
  %10 = load i32, i32* @y.215
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 711068236, i32* %18
  %19 = alloca i64*
  br label %20

; <label>:20:                                     ; preds = %2, %193
  %21 = load i32, i32* %18
  switch i32 %21, label %22 [
    i32 711068236, label %23
    i32 1811720474, label %31
    i32 -1720145916, label %54
    i32 -1761822163, label %57
    i32 552741471, label %84
    i32 -547654399, label %118
    i32 1220898853, label %120
    i32 -1822119263, label %148
    i32 1891727401, label %176
    i32 -1585709900, label %177
    i32 524760199, label %179
    i32 1158557029, label %185
    i32 257228008, label %192
  ]

; <label>:22:                                     ; preds = %20
  br label %193

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 1811720474, i32 524760199
  store i32 %30, i32* %18
  br label %193

; <label>:31:                                     ; preds = %20
  %32 = alloca %"struct.std::_Vector_base.11"*, align 8
  %33 = alloca i64, align 8
  store i64* %33, i64** %6
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %32, align 8
  %34 = load volatile i64*, i64** %6
  store i64 %1, i64* %34, align 8
  %35 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %32, align 8
  store %"struct.std::_Vector_base.11"* %35, %"struct.std::_Vector_base.11"** %5
  %36 = load volatile i64*, i64** %6
  %37 = load i64, i64* %36, align 8
  %38 = icmp ne i64 %37, 0
  store i1 %38, i1* %4
  %39 = load i32, i32* @x.214
  %40 = load i32, i32* @y.215
  %41 = add i32 %39, 81372761
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, 81372761
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -1720145916, i32 524760199
  store i32 %53, i32* %18
  br label %193

; <label>:54:                                     ; preds = %20
  %55 = load volatile i1, i1* %4
  %56 = select i1 %55, i32 -1761822163, i32 1220898853
  store i32 %56, i32* %18
  br label %193

; <label>:57:                                     ; preds = %20
  %58 = load i32, i32* @x.214
  %59 = load i32, i32* @y.215
  %60 = sub i32 0, 1
  %61 = add i32 %58, %60
  %62 = sub i32 %58, 1
  %63 = mul i32 %58, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %59, 10
  %67 = xor i1 %65, true
  %68 = xor i1 %66, true
  %69 = xor i1 false, true
  %70 = and i1 %67, false
  %71 = and i1 %65, %69
  %72 = and i1 %68, false
  %73 = and i1 %66, %69
  %74 = or i1 %70, %71
  %75 = or i1 %72, %73
  %76 = xor i1 %74, %75
  %77 = or i1 %67, %68
  %78 = xor i1 %77, true
  %79 = or i1 false, %69
  %80 = and i1 %78, %79
  %81 = or i1 %76, %80
  %82 = or i1 %65, %66
  %83 = select i1 %81, i32 552741471, i32 1158557029
  store i32 %83, i32* %18
  br label %193

; <label>:84:                                     ; preds = %20
  %85 = load volatile %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %5
  %86 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %85, i32 0, i32 0
  %87 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %86 to %"class.std::allocator.12"*
  %88 = load volatile i64*, i64** %6
  %89 = load i64, i64* %88, align 8
  %90 = call i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator.12"* dereferenceable(1) %87, i64 %89)
  store i64* %90, i64** %3
  %91 = load i32, i32* @x.214
  %92 = load i32, i32* @y.215
  %93 = add i32 %91, 699480523
  %94 = sub i32 %93, 1
  %95 = sub i32 %94, 699480523
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = xor i1 %99, true
  %102 = xor i1 %100, true
  %103 = xor i1 false, true
  %104 = and i1 %101, false
  %105 = and i1 %99, %103
  %106 = and i1 %102, false
  %107 = and i1 %100, %103
  %108 = or i1 %104, %105
  %109 = or i1 %106, %107
  %110 = xor i1 %108, %109
  %111 = or i1 %101, %102
  %112 = xor i1 %111, true
  %113 = or i1 false, %103
  %114 = and i1 %112, %113
  %115 = or i1 %110, %114
  %116 = or i1 %99, %100
  %117 = select i1 %115, i32 -547654399, i32 1158557029
  store i32 %117, i32* %18
  br label %193

; <label>:118:                                    ; preds = %20
  store i32 -1585709900, i32* %18
  %119 = load volatile i64*, i64** %3
  store i64* %119, i64** %19
  br label %193

; <label>:120:                                    ; preds = %20
  %121 = load i32, i32* @x.214
  %122 = load i32, i32* @y.215
  %123 = add i32 %121, -81394062
  %124 = sub i32 %123, 1
  %125 = sub i32 %124, -81394062
  %126 = sub i32 %121, 1
  %127 = mul i32 %121, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %122, 10
  %131 = xor i1 %129, true
  %132 = xor i1 %130, true
  %133 = xor i1 true, true
  %134 = and i1 %131, true
  %135 = and i1 %129, %133
  %136 = and i1 %132, true
  %137 = and i1 %130, %133
  %138 = or i1 %134, %135
  %139 = or i1 %136, %137
  %140 = xor i1 %138, %139
  %141 = or i1 %131, %132
  %142 = xor i1 %141, true
  %143 = or i1 true, %133
  %144 = and i1 %142, %143
  %145 = or i1 %140, %144
  %146 = or i1 %129, %130
  %147 = select i1 %145, i32 -1822119263, i32 257228008
  store i32 %147, i32* %18
  br label %193

; <label>:148:                                    ; preds = %20
  %149 = load i32, i32* @x.214
  %150 = load i32, i32* @y.215
  %151 = add i32 %149, -1202002424
  %152 = sub i32 %151, 1
  %153 = sub i32 %152, -1202002424
  %154 = sub i32 %149, 1
  %155 = mul i32 %149, %153
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %150, 10
  %159 = xor i1 %157, true
  %160 = xor i1 %158, true
  %161 = xor i1 false, true
  %162 = and i1 %159, false
  %163 = and i1 %157, %161
  %164 = and i1 %160, false
  %165 = and i1 %158, %161
  %166 = or i1 %162, %163
  %167 = or i1 %164, %165
  %168 = xor i1 %166, %167
  %169 = or i1 %159, %160
  %170 = xor i1 %169, true
  %171 = or i1 false, %161
  %172 = and i1 %170, %171
  %173 = or i1 %168, %172
  %174 = or i1 %157, %158
  %175 = select i1 %173, i32 1891727401, i32 257228008
  store i32 %175, i32* %18
  br label %193

; <label>:176:                                    ; preds = %20
  store i32 -1585709900, i32* %18
  store i64* null, i64** %19
  br label %193

; <label>:177:                                    ; preds = %20
  %178 = load i64*, i64** %19
  ret i64* %178

; <label>:179:                                    ; preds = %20
  %180 = alloca %"struct.std::_Vector_base.11"*, align 8
  %181 = alloca i64, align 8
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %180, align 8
  store i64 %1, i64* %181, align 8
  %182 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %180, align 8
  %183 = load i64, i64* %181, align 8
  %184 = icmp ne i64 %183, 0
  store i32 1811720474, i32* %18
  br label %193

; <label>:185:                                    ; preds = %20
  %186 = load volatile %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %5
  %187 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %186, i32 0, i32 0
  %188 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %187 to %"class.std::allocator.12"*
  %189 = load volatile i64*, i64** %6
  %190 = load i64, i64* %189, align 8
  %191 = call i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator.12"* dereferenceable(1) %188, i64 %190)
  store i32 552741471, i32* %18
  br label %193

; <label>:192:                                    ; preds = %20
  store i32 -1822119263, i32* %18
  br label %193

; <label>:193:                                    ; preds = %192, %185, %179, %176, %148, %120, %118, %84, %57, %54, %31, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator.12"* dereferenceable(1), i64) #1 comdat align 2 {
  %3 = alloca %"class.std::allocator.12"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %3, align 8
  %6 = bitcast %"class.std::allocator.12"* %5 to %"class.__gnu_cxx::new_allocator.13"*
  %7 = load i64, i64* %4, align 8
  %8 = call i64* @_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.13"* %6, i64 %7, i8* null)
  ret i64* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.13"*, i64, i8*) #1 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.13"* %9) #10
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 720648310, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 720648310, label %16
    i32 -867262446, label %21
    i32 184175896, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -867262446, i32 184175896
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #11
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 8
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to i64*
  ret i64* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.13"*) #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.220
  %5 = load i32, i32* @y.221
  %6 = add i32 %4, 1655021098
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1655021098
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -967606593, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -967606593, label %18
    i32 -1601764583, label %38
    i32 -1247844636, label %68
    i32 775920561, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1601764583, i32 775920561
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %39, align 8
  %41 = load i32, i32* @x.220
  %42 = load i32, i32* @y.221
  %43 = sub i32 %41, -1314840331
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -1314840331
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -1247844636, i32 775920561
  store i32 %67, i32* %14
  br label %72

; <label>:68:                                     ; preds = %15
  ret i64 2305843009213693951

; <label>:69:                                     ; preds = %15
  %70 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %70, align 8
  %71 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %70, align 8
  store i32 -1601764583, i32* %14
  br label %72

; <label>:72:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt27__uninitialized_default_n_aIPxmxET_S1_T0_RSaIT1_E(i64*, i64, %"class.std::allocator.12"* dereferenceable(1)) #1 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.12"*, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.12"* %2, %"class.std::allocator.12"** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64* @_ZSt25__uninitialized_default_nIPxmET_S1_T0_(i64* %7, i64 %8)
  ret i64* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.12"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.11"*, align 8
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %2, align 8
  %3 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %4 to %"class.std::allocator.12"*
  ret %"class.std::allocator.12"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt25__uninitialized_default_nIPxmET_S1_T0_(i64*, i64) #1 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  store i64* %0, i64** %3, align 8
  store i64 %1, i64* %4, align 8
  store i8 1, i8* %5, align 1
  %6 = load i64*, i64** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = call i64* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPxmEET_S3_T0_(i64* %6, i64 %7)
  ret i64* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPxmEET_S3_T0_(i64*, i64) #1 comdat align 2 {
  %3 = alloca i64*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  store i64* %0, i64** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load i64*, i64** %3, align 8
  %7 = load i64, i64* %4, align 8
  store i64 0, i64* %5, align 8
  %8 = call i64* @_ZSt6fill_nIPxmxET_S1_T0_RKT1_(i64* %6, i64 %7, i64* dereferenceable(8) %5)
  ret i64* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt6fill_nIPxmxET_S1_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #1 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.230
  %8 = load i32, i32* @y.231
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 375235340, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %75
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 375235340, label %20
    i32 -1483964340, label %28
    i32 -835803970, label %64
    i32 167448470, label %66
  ]

; <label>:19:                                     ; preds = %17
  br label %75

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1483964340, i32 167448470
  store i32 %27, i32* %16
  br label %75

; <label>:28:                                     ; preds = %17
  %29 = alloca i64*, align 8
  %30 = alloca i64, align 8
  %31 = alloca i64*, align 8
  store i64* %0, i64** %29, align 8
  store i64 %1, i64* %30, align 8
  store i64* %2, i64** %31, align 8
  %32 = load i64*, i64** %29, align 8
  %33 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %32)
  %34 = load i64, i64* %30, align 8
  %35 = load i64*, i64** %31, align 8
  %36 = call i64* @_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64* %33, i64 %34, i64* dereferenceable(8) %35)
  store i64* %36, i64** %4
  %37 = load i32, i32* @x.230
  %38 = load i32, i32* @y.231
  %39 = add i32 %37, 1897978313
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, 1897978313
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -835803970, i32 167448470
  store i32 %63, i32* %16
  br label %75

; <label>:64:                                     ; preds = %17
  %65 = load volatile i64*, i64** %4
  ret i64* %65

; <label>:66:                                     ; preds = %17
  %67 = alloca i64*, align 8
  %68 = alloca i64, align 8
  %69 = alloca i64*, align 8
  store i64* %0, i64** %67, align 8
  store i64 %1, i64* %68, align 8
  store i64* %2, i64** %69, align 8
  %70 = load i64*, i64** %67, align 8
  %71 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %70)
  %72 = load i64, i64* %68, align 8
  %73 = load i64*, i64** %69, align 8
  %74 = call i64* @_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64* %71, i64 %72, i64* dereferenceable(8) %73)
  store i32 -1483964340, i32* %16
  br label %75

; <label>:75:                                     ; preds = %66, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64*, i64, i64* dereferenceable(8)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %7, align 8
  %11 = load i64, i64* %5, align 8
  store i64 %11, i64* %8, align 8
  %12 = alloca i32
  store i32 -915360983, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %33
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -915360983, label %16
    i32 2015656582, label %20
    i32 -1347597761, label %23
    i32 907022369, label %31
  ]

; <label>:15:                                     ; preds = %13
  br label %33

; <label>:16:                                     ; preds = %13
  %17 = load i64, i64* %8, align 8
  %18 = icmp ugt i64 %17, 0
  %19 = select i1 %18, i32 2015656582, i32 907022369
  store i32 %19, i32* %12
  br label %33

; <label>:20:                                     ; preds = %13
  %21 = load i64, i64* %7, align 8
  %22 = load i64*, i64** %4, align 8
  store i64 %21, i64* %22, align 8
  store i32 -1347597761, i32* %12
  br label %33

; <label>:23:                                     ; preds = %13
  %24 = load i64, i64* %8, align 8
  %25 = sub i64 %24, -591766789799430638
  %26 = add i64 %25, -1
  %27 = add i64 %26, -591766789799430638
  %28 = add i64 %24, -1
  store i64 %27, i64* %8, align 8
  %29 = load i64*, i64** %4, align 8
  %30 = getelementptr inbounds i64, i64* %29, i32 1
  store i64* %30, i64** %4, align 8
  store i32 -915360983, i32* %12
  br label %33

; <label>:31:                                     ; preds = %13
  %32 = load i64*, i64** %4, align 8
  ret i64* %32

; <label>:33:                                     ; preds = %23, %20, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64*) #1 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  %4 = call i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64* %3)
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64*) #0 comdat align 2 {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.11"*, i64*, i64) #1 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca %"struct.std::_Vector_base.11"*
  %6 = alloca %"struct.std::_Vector_base.11"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %6, align 8
  store i64* %1, i64** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %6, align 8
  store %"struct.std::_Vector_base.11"* %9, %"struct.std::_Vector_base.11"** %5
  %10 = load i64*, i64** %7, align 8
  store i64* %10, i64** %4
  %11 = alloca i32
  store i32 1974894728, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %132
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1974894728, label %15
    i32 2128049097, label %19
    i32 -1633850827, label %47
    i32 1247767423, label %79
    i32 -897737940, label %80
    i32 2108973135, label %96
    i32 1989669783, label %124
    i32 -1301000322, label %125
    i32 -998471516, label %131
  ]

; <label>:14:                                     ; preds = %12
  br label %132

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64*, i64** %4
  %17 = icmp ne i64* %16, null
  %18 = select i1 %17, i32 2128049097, i32 -897737940
  store i32 %18, i32* %11
  br label %132

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.238
  %21 = load i32, i32* @y.239
  %22 = sub i32 %20, -213042133
  %23 = sub i32 %22, 1
  %24 = add i32 %23, -213042133
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 false, true
  %33 = and i1 %30, false
  %34 = and i1 %28, %32
  %35 = and i1 %31, false
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 false, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 -1633850827, i32 -1301000322
  store i32 %46, i32* %11
  br label %132

; <label>:47:                                     ; preds = %12
  %48 = load volatile %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %5
  %49 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %48, i32 0, i32 0
  %50 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %49 to %"class.std::allocator.12"*
  %51 = load i64*, i64** %7, align 8
  %52 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator.12"* dereferenceable(1) %50, i64* %51, i64 %52)
  %53 = load i32, i32* @x.238
  %54 = load i32, i32* @y.239
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 1247767423, i32 -1301000322
  store i32 %78, i32* %11
  br label %132

; <label>:79:                                     ; preds = %12
  store i32 -897737940, i32* %11
  br label %132

; <label>:80:                                     ; preds = %12
  %81 = load i32, i32* @x.238
  %82 = load i32, i32* @y.239
  %83 = sub i32 %81, -1183207311
  %84 = sub i32 %83, 1
  %85 = add i32 %84, -1183207311
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  %95 = select i1 %93, i32 2108973135, i32 -998471516
  store i32 %95, i32* %11
  br label %132

; <label>:96:                                     ; preds = %12
  %97 = load i32, i32* @x.238
  %98 = load i32, i32* @y.239
  %99 = sub i32 %97, -2135549074
  %100 = sub i32 %99, 1
  %101 = add i32 %100, -2135549074
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = xor i1 %105, true
  %108 = xor i1 %106, true
  %109 = xor i1 true, true
  %110 = and i1 %107, true
  %111 = and i1 %105, %109
  %112 = and i1 %108, true
  %113 = and i1 %106, %109
  %114 = or i1 %110, %111
  %115 = or i1 %112, %113
  %116 = xor i1 %114, %115
  %117 = or i1 %107, %108
  %118 = xor i1 %117, true
  %119 = or i1 true, %109
  %120 = and i1 %118, %119
  %121 = or i1 %116, %120
  %122 = or i1 %105, %106
  %123 = select i1 %121, i32 1989669783, i32 -998471516
  store i32 %123, i32* %11
  br label %132

; <label>:124:                                    ; preds = %12
  ret void

; <label>:125:                                    ; preds = %12
  %126 = load volatile %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %5
  %127 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %126, i32 0, i32 0
  %128 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %127 to %"class.std::allocator.12"*
  %129 = load i64*, i64** %7, align 8
  %130 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator.12"* dereferenceable(1) %128, i64* %129, i64 %130)
  store i32 -1633850827, i32* %11
  br label %132

; <label>:131:                                    ; preds = %12
  store i32 2108973135, i32* %11
  br label %132

; <label>:132:                                    ; preds = %131, %125, %96, %80, %79, %47, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator.12"* dereferenceable(1), i64*, i64) #1 comdat align 2 {
  %4 = alloca %"class.std::allocator.12"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %4, align 8
  %8 = bitcast %"class.std::allocator.12"* %7 to %"class.__gnu_cxx::new_allocator.13"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator.13"* %8, i64* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator.13"*, i64*, i64) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = bitcast i64* %8 to i8*
  call void @_ZdlPv(i8* %9) #10
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64*, i64*, %"class.std::allocator.12"* dereferenceable(1)) #1 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca %"class.std::allocator.12"*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store %"class.std::allocator.12"* %2, %"class.std::allocator.12"** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = load i64*, i64** %5, align 8
  call void @_ZSt8_DestroyIPxEvT_S1_(i64* %7, i64* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPxEvT_S1_(i64*, i64*) #1 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.246
  %6 = load i32, i32* @y.247
  %7 = sub i32 %5, 1959951770
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1959951770
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 443539585, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 443539585, label %19
    i32 -1116029836, label %39
    i32 1441902714, label %71
    i32 -2082673525, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1116029836, i32 -2082673525
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca i64*, align 8
  %41 = alloca i64*, align 8
  store i64* %0, i64** %40, align 8
  store i64* %1, i64** %41, align 8
  %42 = load i64*, i64** %40, align 8
  %43 = load i64*, i64** %41, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i64* %42, i64* %43)
  %44 = load i32, i32* @x.246
  %45 = load i32, i32* @y.247
  %46 = add i32 %44, 1177969115
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 1177969115
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 1441902714, i32 -2082673525
  store i32 %70, i32* %15
  br label %77

; <label>:71:                                     ; preds = %16
  ret void

; <label>:72:                                     ; preds = %16
  %73 = alloca i64*, align 8
  %74 = alloca i64*, align 8
  store i64* %0, i64** %73, align 8
  store i64* %1, i64** %74, align 8
  %75 = load i64*, i64** %73, align 8
  %76 = load i64*, i64** %74, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i64* %75, i64* %76)
  store i32 -1116029836, i32* %15
  br label %77

; <label>:77:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i64*, i64*) #0 comdat align 2 {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIP4EdgeSt6vectorIS1_SaIS1_EEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator"*, %struct.Edge** dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %struct.Edge**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %struct.Edge** %1, %struct.Edge*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load %struct.Edge**, %struct.Edge*** %4, align 8
  %8 = load %struct.Edge*, %struct.Edge** %7, align 8
  store %struct.Edge* %8, %struct.Edge** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %struct.Edge** @_ZNK9__gnu_cxx17__normal_iteratorIP4EdgeSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #0 comdat align 2 {
  %2 = alloca %struct.Edge**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.252
  %6 = load i32, i32* @y.253
  %7 = add i32 %5, 1971442493
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1971442493
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -755418569, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %51
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -755418569, label %19
    i32 -1511547478, label %27
    i32 -1144448015, label %45
    i32 497471070, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %51

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1511547478, i32 497471070
  store i32 %26, i32* %15
  br label %51

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %29, i32 0, i32 0
  store %struct.Edge** %30, %struct.Edge*** %2
  %31 = load i32, i32* @x.252
  %32 = load i32, i32* @y.253
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -1144448015, i32 497471070
  store i32 %44, i32* %15
  br label %51

; <label>:45:                                     ; preds = %16
  %46 = load volatile %struct.Edge**, %struct.Edge*** %2
  ret %struct.Edge** %46

; <label>:47:                                     ; preds = %16
  %48 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %48, align 8
  %49 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %48, align 8
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %49, i32 0, i32 0
  store i32 -1511547478, i32* %15
  br label %51

; <label>:51:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EEC2Ev(%"struct.std::_Vector_base.6"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %2, align 8
  %3 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %3 to %"class.std::allocator.7"*
  call void @_ZNSaISt6vectorIxSaIxEEEC2Ev(%"class.std::allocator.7"* %4) #10
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %3, i32 0, i32 0
  store %"class.std::vector.10"* null, %"class.std::vector.10"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %3, i32 0, i32 1
  store %"class.std::vector.10"* null, %"class.std::vector.10"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %3, i32 0, i32 2
  store %"class.std::vector.10"* null, %"class.std::vector.10"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2Ev(%"class.__gnu_cxx::new_allocator.8"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIxSaIxEES2_EvT_S4_RSaIT0_E(%"class.std::vector.10"*, %"class.std::vector.10"*, %"class.std::allocator.7"* dereferenceable(1)) #1 comdat {
  %4 = alloca %"class.std::vector.10"*, align 8
  %5 = alloca %"class.std::vector.10"*, align 8
  %6 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %4, align 8
  store %"class.std::vector.10"* %1, %"class.std::vector.10"** %5, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %6, align 8
  %7 = load %"class.std::vector.10"*, %"class.std::vector.10"** %4, align 8
  %8 = load %"class.std::vector.10"*, %"class.std::vector.10"** %5, align 8
  call void @_ZSt8_DestroyIPSt6vectorIxSaIxEEEvT_S4_(%"class.std::vector.10"* %7, %"class.std::vector.10"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %2, align 8
  %3 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %4 to %"class.std::allocator.7"*
  ret %"class.std::allocator.7"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev(%"struct.std::_Vector_base.6"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.6"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %2, align 8
  %5 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::vector.10"*, %"class.std::vector.10"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::vector.10"*, %"class.std::vector.10"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::vector.10"*, %"class.std::vector.10"** %13, align 8
  %15 = ptrtoint %"class.std::vector.10"* %11 to i64
  %16 = ptrtoint %"class.std::vector.10"* %14 to i64
  %17 = sub i64 0, %16
  %18 = add i64 %15, %17
  %19 = sub i64 %15, %16
  %20 = sdiv exact i64 %18, 24
  invoke void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.6"* %5, %"class.std::vector.10"* %8, i64 %20)
          to label %21 unwind label %23

; <label>:21:                                     ; preds = %1
  %22 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %22) #10
  ret void

; <label>:23:                                     ; preds = %1
  %24 = landingpad { i8*, i32 }
          catch i8* null
  %25 = extractvalue { i8*, i32 } %24, 0
  store i8* %25, i8** %3, align 8
  %26 = extractvalue { i8*, i32 } %24, 1
  store i32 %26, i32* %4, align 4
  %27 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %27) #10
  br label %28

; <label>:28:                                     ; preds = %23
  %29 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %29) #8
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIxSaIxEEEvT_S4_(%"class.std::vector.10"*, %"class.std::vector.10"*) #1 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.266
  %6 = load i32, i32* @y.267
  %7 = add i32 %5, -1566088186
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1566088186
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 773615604, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %76
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 773615604, label %19
    i32 1984335365, label %39
    i32 -2092401430, label %70
    i32 -1180950912, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %76

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1984335365, i32 -1180950912
  store i32 %38, i32* %15
  br label %76

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.10"*, align 8
  %41 = alloca %"class.std::vector.10"*, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %40, align 8
  store %"class.std::vector.10"* %1, %"class.std::vector.10"** %41, align 8
  %42 = load %"class.std::vector.10"*, %"class.std::vector.10"** %40, align 8
  %43 = load %"class.std::vector.10"*, %"class.std::vector.10"** %41, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIxSaIxEEEEvT_S6_(%"class.std::vector.10"* %42, %"class.std::vector.10"* %43)
  %44 = load i32, i32* @x.266
  %45 = load i32, i32* @y.267
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -2092401430, i32 -1180950912
  store i32 %69, i32* %15
  br label %76

; <label>:70:                                     ; preds = %16
  ret void

; <label>:71:                                     ; preds = %16
  %72 = alloca %"class.std::vector.10"*, align 8
  %73 = alloca %"class.std::vector.10"*, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %72, align 8
  store %"class.std::vector.10"* %1, %"class.std::vector.10"** %73, align 8
  %74 = load %"class.std::vector.10"*, %"class.std::vector.10"** %72, align 8
  %75 = load %"class.std::vector.10"*, %"class.std::vector.10"** %73, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIxSaIxEEEEvT_S6_(%"class.std::vector.10"* %74, %"class.std::vector.10"* %75)
  store i32 1984335365, i32* %15
  br label %76

; <label>:76:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIxSaIxEEEEvT_S6_(%"class.std::vector.10"*, %"class.std::vector.10"*) #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.10"**
  %5 = alloca %"class.std::vector.10"**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.268
  %9 = load i32, i32* @y.269
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -690744306, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %178
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -690744306, label %21
    i32 675096261, label %41
    i32 -1384225776, label %60
    i32 -204440916, label %61
    i32 -1959022094, label %88
    i32 1373834698, label %109
    i32 -649777615, label %112
    i32 1098976897, label %139
    i32 -2122297887, label %158
    i32 -1235590421, label %159
    i32 2057740963, label %164
    i32 -1444013491, label %165
    i32 534833653, label %168
    i32 -798984232, label %174
  ]

; <label>:20:                                     ; preds = %18
  br label %178

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 675096261, i32 -1444013491
  store i32 %40, i32* %17
  br label %178

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::vector.10"*, align 8
  store %"class.std::vector.10"** %42, %"class.std::vector.10"*** %5
  %43 = alloca %"class.std::vector.10"*, align 8
  store %"class.std::vector.10"** %43, %"class.std::vector.10"*** %4
  %44 = load volatile %"class.std::vector.10"**, %"class.std::vector.10"*** %5
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %44, align 8
  %45 = load volatile %"class.std::vector.10"**, %"class.std::vector.10"*** %4
  store %"class.std::vector.10"* %1, %"class.std::vector.10"** %45, align 8
  %46 = load i32, i32* @x.268
  %47 = load i32, i32* @y.269
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -1384225776, i32 -1444013491
  store i32 %59, i32* %17
  br label %178

; <label>:60:                                     ; preds = %18
  store i32 -204440916, i32* %17
  br label %178

; <label>:61:                                     ; preds = %18
  %62 = load i32, i32* @x.268
  %63 = load i32, i32* @y.269
  %64 = sub i32 0, 1
  %65 = add i32 %62, %64
  %66 = sub i32 %62, 1
  %67 = mul i32 %62, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %63, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 false, true
  %74 = and i1 %71, false
  %75 = and i1 %69, %73
  %76 = and i1 %72, false
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 false, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  %87 = select i1 %85, i32 -1959022094, i32 534833653
  store i32 %87, i32* %17
  br label %178

; <label>:88:                                     ; preds = %18
  %89 = load volatile %"class.std::vector.10"**, %"class.std::vector.10"*** %5
  %90 = load %"class.std::vector.10"*, %"class.std::vector.10"** %89, align 8
  %91 = load volatile %"class.std::vector.10"**, %"class.std::vector.10"*** %4
  %92 = load %"class.std::vector.10"*, %"class.std::vector.10"** %91, align 8
  %93 = icmp ne %"class.std::vector.10"* %90, %92
  store i1 %93, i1* %3
  %94 = load i32, i32* @x.268
  %95 = load i32, i32* @y.269
  %96 = sub i32 %94, 266520358
  %97 = sub i32 %96, 1
  %98 = add i32 %97, 266520358
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = and i1 %102, %103
  %105 = xor i1 %102, %103
  %106 = or i1 %104, %105
  %107 = or i1 %102, %103
  %108 = select i1 %106, i32 1373834698, i32 534833653
  store i32 %108, i32* %17
  br label %178

; <label>:109:                                    ; preds = %18
  %110 = load volatile i1, i1* %3
  %111 = select i1 %110, i32 -649777615, i32 2057740963
  store i32 %111, i32* %17
  br label %178

; <label>:112:                                    ; preds = %18
  %113 = load i32, i32* @x.268
  %114 = load i32, i32* @y.269
  %115 = sub i32 0, 1
  %116 = add i32 %113, %115
  %117 = sub i32 %113, 1
  %118 = mul i32 %113, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %114, 10
  %122 = xor i1 %120, true
  %123 = xor i1 %121, true
  %124 = xor i1 true, true
  %125 = and i1 %122, true
  %126 = and i1 %120, %124
  %127 = and i1 %123, true
  %128 = and i1 %121, %124
  %129 = or i1 %125, %126
  %130 = or i1 %127, %128
  %131 = xor i1 %129, %130
  %132 = or i1 %122, %123
  %133 = xor i1 %132, true
  %134 = or i1 true, %124
  %135 = and i1 %133, %134
  %136 = or i1 %131, %135
  %137 = or i1 %120, %121
  %138 = select i1 %136, i32 1098976897, i32 -798984232
  store i32 %138, i32* %17
  br label %178

; <label>:139:                                    ; preds = %18
  %140 = load volatile %"class.std::vector.10"**, %"class.std::vector.10"*** %5
  %141 = load %"class.std::vector.10"*, %"class.std::vector.10"** %140, align 8
  %142 = call %"class.std::vector.10"* @_ZSt11__addressofISt6vectorIxSaIxEEEPT_RS3_(%"class.std::vector.10"* dereferenceable(24) %141) #10
  call void @_ZSt8_DestroyISt6vectorIxSaIxEEEvPT_(%"class.std::vector.10"* %142)
  %143 = load i32, i32* @x.268
  %144 = load i32, i32* @y.269
  %145 = sub i32 %143, 320953523
  %146 = sub i32 %145, 1
  %147 = add i32 %146, 320953523
  %148 = sub i32 %143, 1
  %149 = mul i32 %143, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %144, 10
  %153 = and i1 %151, %152
  %154 = xor i1 %151, %152
  %155 = or i1 %153, %154
  %156 = or i1 %151, %152
  %157 = select i1 %155, i32 -2122297887, i32 -798984232
  store i32 %157, i32* %17
  br label %178

; <label>:158:                                    ; preds = %18
  store i32 -1235590421, i32* %17
  br label %178

; <label>:159:                                    ; preds = %18
  %160 = load volatile %"class.std::vector.10"**, %"class.std::vector.10"*** %5
  %161 = load %"class.std::vector.10"*, %"class.std::vector.10"** %160, align 8
  %162 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %161, i32 1
  %163 = load volatile %"class.std::vector.10"**, %"class.std::vector.10"*** %5
  store %"class.std::vector.10"* %162, %"class.std::vector.10"** %163, align 8
  store i32 -204440916, i32* %17
  br label %178

; <label>:164:                                    ; preds = %18
  ret void

; <label>:165:                                    ; preds = %18
  %166 = alloca %"class.std::vector.10"*, align 8
  %167 = alloca %"class.std::vector.10"*, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %166, align 8
  store %"class.std::vector.10"* %1, %"class.std::vector.10"** %167, align 8
  store i32 675096261, i32* %17
  br label %178

; <label>:168:                                    ; preds = %18
  %169 = load volatile %"class.std::vector.10"**, %"class.std::vector.10"*** %5
  %170 = load %"class.std::vector.10"*, %"class.std::vector.10"** %169, align 8
  %171 = load volatile %"class.std::vector.10"**, %"class.std::vector.10"*** %4
  %172 = load %"class.std::vector.10"*, %"class.std::vector.10"** %171, align 8
  %173 = icmp ne %"class.std::vector.10"* %170, %172
  store i32 -1959022094, i32* %17
  br label %178

; <label>:174:                                    ; preds = %18
  %175 = load volatile %"class.std::vector.10"**, %"class.std::vector.10"*** %5
  %176 = load %"class.std::vector.10"*, %"class.std::vector.10"** %175, align 8
  %177 = call %"class.std::vector.10"* @_ZSt11__addressofISt6vectorIxSaIxEEEPT_RS3_(%"class.std::vector.10"* dereferenceable(24) %176) #10
  call void @_ZSt8_DestroyISt6vectorIxSaIxEEEvPT_(%"class.std::vector.10"* %177)
  store i32 1098976897, i32* %17
  br label %178

; <label>:178:                                    ; preds = %174, %168, %165, %159, %158, %139, %112, %109, %88, %61, %60, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIxSaIxEEEvPT_(%"class.std::vector.10"*) #0 comdat {
  %2 = alloca %"class.std::vector.10"*, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %2, align 8
  %3 = load %"class.std::vector.10"*, %"class.std::vector.10"** %2, align 8
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.10"* %3) #10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.10"* @_ZSt11__addressofISt6vectorIxSaIxEEEPT_RS3_(%"class.std::vector.10"* dereferenceable(24)) #0 comdat {
  %2 = alloca %"class.std::vector.10"*, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %2, align 8
  %3 = load %"class.std::vector.10"*, %"class.std::vector.10"** %2, align 8
  %4 = bitcast %"class.std::vector.10"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.10"*
  ret %"class.std::vector.10"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.6"*, %"class.std::vector.10"*, i64) #1 comdat align 2 {
  %4 = alloca %"class.std::vector.10"*
  %5 = alloca %"struct.std::_Vector_base.6"*
  %6 = alloca %"struct.std::_Vector_base.6"*, align 8
  %7 = alloca %"class.std::vector.10"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %6, align 8
  store %"class.std::vector.10"* %1, %"class.std::vector.10"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %6, align 8
  store %"struct.std::_Vector_base.6"* %9, %"struct.std::_Vector_base.6"** %5
  %10 = load %"class.std::vector.10"*, %"class.std::vector.10"** %7, align 8
  store %"class.std::vector.10"* %10, %"class.std::vector.10"** %4
  %11 = alloca i32
  store i32 -1884710337, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %58
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -1884710337, label %15
    i32 -979252086, label %19
    i32 -2049737202, label %25
    i32 1948412915, label %40
    i32 -163407345, label %56
    i32 2036513327, label %57
  ]

; <label>:14:                                     ; preds = %12
  br label %58

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %4
  %17 = icmp ne %"class.std::vector.10"* %16, null
  %18 = select i1 %17, i32 -979252086, i32 -2049737202
  store i32 %18, i32* %11
  br label %58

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %21 to %"class.std::allocator.7"*
  %23 = load %"class.std::vector.10"*, %"class.std::vector.10"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE10deallocateERS3_PS2_m(%"class.std::allocator.7"* dereferenceable(1) %22, %"class.std::vector.10"* %23, i64 %24)
  store i32 -2049737202, i32* %11
  br label %58

; <label>:25:                                     ; preds = %12
  %26 = load i32, i32* @x.274
  %27 = load i32, i32* @y.275
  %28 = sub i32 0, 1
  %29 = add i32 %26, %28
  %30 = sub i32 %26, 1
  %31 = mul i32 %26, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %27, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  %39 = select i1 %37, i32 1948412915, i32 2036513327
  store i32 %39, i32* %11
  br label %58

; <label>:40:                                     ; preds = %12
  %41 = load i32, i32* @x.274
  %42 = load i32, i32* @y.275
  %43 = sub i32 %41, -81168061
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -81168061
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -163407345, i32 2036513327
  store i32 %55, i32* %11
  br label %58

; <label>:56:                                     ; preds = %12
  ret void

; <label>:57:                                     ; preds = %12
  store i32 1948412915, i32* %11
  br label %58

; <label>:58:                                     ; preds = %57, %40, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %3 to %"class.std::allocator.7"*
  call void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator.7"* %4) #10
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE10deallocateERS3_PS2_m(%"class.std::allocator.7"* dereferenceable(1), %"class.std::vector.10"*, i64) #1 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.278
  %7 = load i32, i32* @y.279
  %8 = add i32 %6, 1659507153
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1659507153
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -30362434, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %60
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -30362434, label %20
    i32 1142964814, label %28
    i32 978561743, label %51
    i32 1653038790, label %52
  ]

; <label>:19:                                     ; preds = %17
  br label %60

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1142964814, i32 1653038790
  store i32 %27, i32* %16
  br label %60

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.7"*, align 8
  %30 = alloca %"class.std::vector.10"*, align 8
  %31 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %29, align 8
  store %"class.std::vector.10"* %1, %"class.std::vector.10"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %29, align 8
  %33 = bitcast %"class.std::allocator.7"* %32 to %"class.__gnu_cxx::new_allocator.8"*
  %34 = load %"class.std::vector.10"*, %"class.std::vector.10"** %30, align 8
  %35 = load i64, i64* %31, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.8"* %33, %"class.std::vector.10"* %34, i64 %35)
  %36 = load i32, i32* @x.278
  %37 = load i32, i32* @y.279
  %38 = sub i32 %36, -1700607970
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -1700607970
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 978561743, i32 1653038790
  store i32 %50, i32* %16
  br label %60

; <label>:51:                                     ; preds = %17
  ret void

; <label>:52:                                     ; preds = %17
  %53 = alloca %"class.std::allocator.7"*, align 8
  %54 = alloca %"class.std::vector.10"*, align 8
  %55 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %53, align 8
  store %"class.std::vector.10"* %1, %"class.std::vector.10"** %54, align 8
  store i64 %2, i64* %55, align 8
  %56 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %53, align 8
  %57 = bitcast %"class.std::allocator.7"* %56 to %"class.__gnu_cxx::new_allocator.8"*
  %58 = load %"class.std::vector.10"*, %"class.std::vector.10"** %54, align 8
  %59 = load i64, i64* %55, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.8"* %57, %"class.std::vector.10"* %58, i64 %59)
  store i32 1142964814, i32* %16
  br label %60

; <label>:60:                                     ; preds = %52, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.8"*, %"class.std::vector.10"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.280
  %7 = load i32, i32* @y.281
  %8 = add i32 %6, 1675755050
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1675755050
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 785240008, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %58
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 785240008, label %20
    i32 -786468797, label %28
    i32 2057061284, label %50
    i32 -2023221134, label %51
  ]

; <label>:19:                                     ; preds = %17
  br label %58

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -786468797, i32 -2023221134
  store i32 %27, i32* %16
  br label %58

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %30 = alloca %"class.std::vector.10"*, align 8
  %31 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %29, align 8
  store %"class.std::vector.10"* %1, %"class.std::vector.10"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %29, align 8
  %33 = load %"class.std::vector.10"*, %"class.std::vector.10"** %30, align 8
  %34 = bitcast %"class.std::vector.10"* %33 to i8*
  call void @_ZdlPv(i8* %34) #10
  %35 = load i32, i32* @x.280
  %36 = load i32, i32* @y.281
  %37 = add i32 %35, -775175390
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -775175390
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 2057061284, i32 -2023221134
  store i32 %49, i32* %16
  br label %58

; <label>:50:                                     ; preds = %17
  ret void

; <label>:51:                                     ; preds = %17
  %52 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %53 = alloca %"class.std::vector.10"*, align 8
  %54 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %52, align 8
  store %"class.std::vector.10"* %1, %"class.std::vector.10"** %53, align 8
  store i64 %2, i64* %54, align 8
  %55 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %52, align 8
  %56 = load %"class.std::vector.10"*, %"class.std::vector.10"** %53, align 8
  %57 = bitcast %"class.std::vector.10"* %56 to i8*
  call void @_ZdlPv(i8* %57) #10
  store i32 -786468797, i32* %16
  br label %58

; <label>:58:                                     ; preds = %51, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEED2Ev(%"class.__gnu_cxx::new_allocator.8"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.282
  %5 = load i32, i32* @y.283
  %6 = sub i32 %4, 1103340365
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1103340365
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 368412895, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 368412895, label %18
    i32 -747207137, label %26
    i32 970677204, label %55
    i32 416421819, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -747207137, i32 416421819
  store i32 %25, i32* %14
  br label %59

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %27, align 8
  %29 = load i32, i32* @x.282
  %30 = load i32, i32* @y.283
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 970677204, i32 416421819
  store i32 %54, i32* %14
  br label %59

; <label>:55:                                     ; preds = %15
  ret void

; <label>:56:                                     ; preds = %15
  %57 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %57, align 8
  store i32 -747207137, i32* %14
  br label %59

; <label>:59:                                     ; preds = %56, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.5"* @_ZSt4moveIRSt6vectorIS0_IxSaIxEESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.5"* dereferenceable(24)) #0 comdat {
  %2 = alloca %"class.std::vector.5"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.284
  %6 = load i32, i32* @y.285
  %7 = add i32 %5, -243836736
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -243836736
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1371695498, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1371695498, label %19
    i32 1033218662, label %39
    i32 598871377, label %56
    i32 1521917943, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1033218662, i32 1521917943
  store i32 %38, i32* %15
  br label %61

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %40, align 8
  %41 = load %"class.std::vector.5"*, %"class.std::vector.5"** %40, align 8
  store %"class.std::vector.5"* %41, %"class.std::vector.5"** %2
  %42 = load i32, i32* @x.284
  %43 = load i32, i32* @y.285
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 598871377, i32 1521917943
  store i32 %55, i32* %15
  br label %61

; <label>:56:                                     ; preds = %16
  %57 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %2
  ret %"class.std::vector.5"* %57

; <label>:58:                                     ; preds = %16
  %59 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %59, align 8
  %60 = load %"class.std::vector.5"*, %"class.std::vector.5"** %59, align 8
  store i32 1033218662, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EEC2EOS4_(%"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.286
  %6 = load i32, i32* @y.287
  %7 = sub i32 %5, -1455922615
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1455922615
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1213593351, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %88
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1213593351, label %19
    i32 -1548608622, label %39
    i32 -674193207, label %76
    i32 1142424292, label %77
  ]

; <label>:18:                                     ; preds = %16
  br label %88

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1548608622, i32 1142424292
  store i32 %38, i32* %15
  br label %88

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.6"*, align 8
  %41 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %40, align 8
  store %"struct.std::_Vector_base.6"* %1, %"struct.std::_Vector_base.6"** %41, align 8
  %42 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %40, align 8
  %43 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %42, i32 0, i32 0
  %44 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %41, align 8
  %45 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %44) #10
  %46 = call dereferenceable(1) %"class.std::allocator.7"* @_ZSt4moveIRSaISt6vectorIxSaIxEEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::allocator.7"* dereferenceable(1) %45) #10
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implC2EOS3_(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %43, %"class.std::allocator.7"* dereferenceable(1) %46) #10
  %47 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %42, i32 0, i32 0
  %48 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %41, align 8
  %49 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %48, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_impl12_M_swap_dataERS5_(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %47, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* dereferenceable(24) %49) #10
  %50 = load i32, i32* @x.286
  %51 = load i32, i32* @y.287
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -674193207, i32 1142424292
  store i32 %75, i32* %15
  br label %88

; <label>:76:                                     ; preds = %16
  ret void

; <label>:77:                                     ; preds = %16
  %78 = alloca %"struct.std::_Vector_base.6"*, align 8
  %79 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %78, align 8
  store %"struct.std::_Vector_base.6"* %1, %"struct.std::_Vector_base.6"** %79, align 8
  %80 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %78, align 8
  %81 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %80, i32 0, i32 0
  %82 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %79, align 8
  %83 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %82) #10
  %84 = call dereferenceable(1) %"class.std::allocator.7"* @_ZSt4moveIRSaISt6vectorIxSaIxEEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::allocator.7"* dereferenceable(1) %83) #10
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implC2EOS3_(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %81, %"class.std::allocator.7"* dereferenceable(1) %84) #10
  %85 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %80, i32 0, i32 0
  %86 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %79, align 8
  %87 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %86, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_impl12_M_swap_dataERS5_(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %85, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* dereferenceable(24) %87) #10
  store i32 -1548608622, i32* %15
  br label %88

; <label>:88:                                     ; preds = %77, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.7"* @_ZSt4moveIRSaISt6vectorIxSaIxEEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %2 = alloca %"class.std::allocator.7"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.288
  %6 = load i32, i32* @y.289
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -360159727, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -360159727, label %18
    i32 270190935, label %38
    i32 -1402624840, label %67
    i32 -1920089315, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 270190935, i32 -1920089315
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %39, align 8
  %40 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %39, align 8
  store %"class.std::allocator.7"* %40, %"class.std::allocator.7"** %2
  %41 = load i32, i32* @x.288
  %42 = load i32, i32* @y.289
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -1402624840, i32 -1920089315
  store i32 %66, i32* %14
  br label %72

; <label>:67:                                     ; preds = %15
  %68 = load volatile %"class.std::allocator.7"*, %"class.std::allocator.7"** %2
  ret %"class.std::allocator.7"* %68

; <label>:69:                                     ; preds = %15
  %70 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %70, align 8
  %71 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %70, align 8
  store i32 270190935, i32* %14
  br label %72

; <label>:72:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implC2EOS3_(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.7"*, align 8
  store %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %5 to %"class.std::allocator.7"*
  %7 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.7"* @_ZSt4moveIRSaISt6vectorIxSaIxEEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::allocator.7"* dereferenceable(1) %7) #10
  call void @_ZNSaISt6vectorIxSaIxEEEC2ERKS2_(%"class.std::allocator.7"* %6, %"class.std::allocator.7"* dereferenceable(1) %8) #10
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %5, i32 0, i32 0
  store %"class.std::vector.10"* null, %"class.std::vector.10"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %5, i32 0, i32 1
  store %"class.std::vector.10"* null, %"class.std::vector.10"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %5, i32 0, i32 2
  store %"class.std::vector.10"* null, %"class.std::vector.10"** %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_impl12_M_swap_dataERS5_(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %1, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPSt6vectorIxSaIxEEEvRT_S5_(%"class.std::vector.10"** dereferenceable(8) %6, %"class.std::vector.10"** dereferenceable(8) %8) #10
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPSt6vectorIxSaIxEEEvRT_S5_(%"class.std::vector.10"** dereferenceable(8) %9, %"class.std::vector.10"** dereferenceable(8) %11) #10
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPSt6vectorIxSaIxEEEvRT_S5_(%"class.std::vector.10"** dereferenceable(8) %12, %"class.std::vector.10"** dereferenceable(8) %14) #10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIxSaIxEEEC2ERKS2_(%"class.std::allocator.7"*, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.7"*, align 8
  %4 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %3, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %4, align 8
  %5 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %3, align 8
  %6 = bitcast %"class.std::allocator.7"* %5 to %"class.__gnu_cxx::new_allocator.8"*
  %7 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  %8 = bitcast %"class.std::allocator.7"* %7 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.8"* %6, %"class.__gnu_cxx::new_allocator.8"* dereferenceable(1) %8) #10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %1, %"class.__gnu_cxx::new_allocator.8"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPSt6vectorIxSaIxEEEvRT_S5_(%"class.std::vector.10"** dereferenceable(8), %"class.std::vector.10"** dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::vector.10"**, align 8
  %4 = alloca %"class.std::vector.10"**, align 8
  %5 = alloca %"class.std::vector.10"*, align 8
  store %"class.std::vector.10"** %0, %"class.std::vector.10"*** %3, align 8
  store %"class.std::vector.10"** %1, %"class.std::vector.10"*** %4, align 8
  %6 = load %"class.std::vector.10"**, %"class.std::vector.10"*** %3, align 8
  %7 = call dereferenceable(8) %"class.std::vector.10"** @_ZSt4moveIRPSt6vectorIxSaIxEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::vector.10"** dereferenceable(8) %6) #10
  %8 = load %"class.std::vector.10"*, %"class.std::vector.10"** %7, align 8
  store %"class.std::vector.10"* %8, %"class.std::vector.10"** %5, align 8
  %9 = load %"class.std::vector.10"**, %"class.std::vector.10"*** %4, align 8
  %10 = call dereferenceable(8) %"class.std::vector.10"** @_ZSt4moveIRPSt6vectorIxSaIxEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::vector.10"** dereferenceable(8) %9) #10
  %11 = load %"class.std::vector.10"*, %"class.std::vector.10"** %10, align 8
  %12 = load %"class.std::vector.10"**, %"class.std::vector.10"*** %3, align 8
  store %"class.std::vector.10"* %11, %"class.std::vector.10"** %12, align 8
  %13 = call dereferenceable(8) %"class.std::vector.10"** @_ZSt4moveIRPSt6vectorIxSaIxEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::vector.10"** dereferenceable(8) %5) #10
  %14 = load %"class.std::vector.10"*, %"class.std::vector.10"** %13, align 8
  %15 = load %"class.std::vector.10"**, %"class.std::vector.10"*** %4, align 8
  store %"class.std::vector.10"* %14, %"class.std::vector.10"** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.10"** @_ZSt4moveIRPSt6vectorIxSaIxEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::vector.10"** dereferenceable(8)) #0 comdat {
  %2 = alloca %"class.std::vector.10"**, align 8
  store %"class.std::vector.10"** %0, %"class.std::vector.10"*** %2, align 8
  %3 = load %"class.std::vector.10"**, %"class.std::vector.10"*** %2, align 8
  ret %"class.std::vector.10"** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE18_M_fill_initializeEmRKx(%"class.std::vector.10"*, i64, i64* dereferenceable(8)) #1 comdat align 2 {
  %4 = alloca %"class.std::vector.10"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"class.std::vector.10"*, %"class.std::vector.10"** %4, align 8
  %8 = bitcast %"class.std::vector.10"* %7 to %"struct.std::_Vector_base.11"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load i64*, i64** %6, align 8
  %14 = bitcast %"class.std::vector.10"* %7 to %"struct.std::_Vector_base.11"*
  %15 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"* %14) #10
  %16 = call i64* @_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E(i64* %11, i64 %12, i64* dereferenceable(8) %13, %"class.std::allocator.12"* dereferenceable(1) %15)
  %17 = bitcast %"class.std::vector.10"* %7 to %"struct.std::_Vector_base.11"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %18, i32 0, i32 1
  store i64* %16, i64** %19, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E(i64*, i64, i64* dereferenceable(8), %"class.std::allocator.12"* dereferenceable(1)) #1 comdat {
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.12"*, align 8
  store i64* %0, i64** %5, align 8
  store i64 %1, i64* %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.12"* %3, %"class.std::allocator.12"** %8, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load i64*, i64** %7, align 8
  %12 = call i64* @_ZSt20uninitialized_fill_nIPxmxET_S1_T0_RKT1_(i64* %9, i64 %10, i64* dereferenceable(8) %11)
  ret i64* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt20uninitialized_fill_nIPxmxET_S1_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #1 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i64*, i64** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPxmxEET_S3_T0_RKT1_(i64* %8, i64 %9, i64* dereferenceable(8) %10)
  ret i64* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPxmxEET_S3_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #1 comdat align 2 {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = call i64* @_ZSt6fill_nIPxmxET_S1_T0_RKT1_(i64* %7, i64 %8, i64* dereferenceable(8) %9)
  ret i64* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.6"*, i64, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.6"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.7"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %6, align 8
  %9 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %6, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %10, %"class.std::allocator.7"* dereferenceable(1) %11) #10
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.6"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = load i32, i32* @x.310
  %16 = load i32, i32* @y.311
  %17 = add i32 %15, -1290963428
  %18 = sub i32 %17, 1
  %19 = sub i32 %18, -1290963428
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %16, 10
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  br i1 %27, label %29, label %52

; <label>:29:                                     ; preds = %14, %52
  %30 = landingpad { i8*, i32 }
          cleanup
  %31 = extractvalue { i8*, i32 } %30, 0
  store i8* %31, i8** %7, align 8
  %32 = extractvalue { i8*, i32 } %30, 1
  store i32 %32, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %10) #10
  %33 = load i32, i32* @x.310
  %34 = load i32, i32* @y.311
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %52

; <label>:46:                                     ; preds = %29
  br label %47

; <label>:47:                                     ; preds = %46
  %48 = load i8*, i8** %7, align 8
  %49 = load i32, i32* %8, align 4
  %50 = insertvalue { i8*, i32 } undef, i8* %48, 0
  %51 = insertvalue { i8*, i32 } %50, i32 %49, 1
  resume { i8*, i32 } %51

; <label>:52:                                     ; preds = %29, %14
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = extractvalue { i8*, i32 } %53, 0
  store i8* %54, i8** %7, align 8
  %55 = extractvalue { i8*, i32 } %53, 1
  store i32 %55, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %10) #10
  br label %29
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IxSaIxEESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.5"*, i64, %"class.std::vector.10"* dereferenceable(24)) #1 comdat align 2 {
  %4 = alloca %"class.std::vector.5"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.10"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.10"* %2, %"class.std::vector.10"** %6, align 8
  %7 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %8 = bitcast %"class.std::vector.5"* %7 to %"struct.std::_Vector_base.6"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::vector.10"*, %"class.std::vector.10"** %10, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load %"class.std::vector.10"*, %"class.std::vector.10"** %6, align 8
  %14 = bitcast %"class.std::vector.5"* %7 to %"struct.std::_Vector_base.6"*
  %15 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %14) #10
  %16 = call %"class.std::vector.10"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIxSaIxEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.10"* %11, i64 %12, %"class.std::vector.10"* dereferenceable(24) %13, %"class.std::allocator.7"* dereferenceable(1) %15)
  %17 = bitcast %"class.std::vector.5"* %7 to %"struct.std::_Vector_base.6"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %18, i32 0, i32 1
  store %"class.std::vector.10"* %16, %"class.std::vector.10"** %19, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.314
  %6 = load i32, i32* @y.315
  %7 = sub i32 %5, -1408012715
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1408012715
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2063666031, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2063666031, label %19
    i32 1987248250, label %27
    i32 180973960, label %51
    i32 -1280870567, label %52
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1987248250, i32 -1280870567
  store i32 %26, i32* %15
  br label %61

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, align 8
  %29 = alloca %"class.std::allocator.7"*, align 8
  store %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %28, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %29, align 8
  %30 = load %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %28, align 8
  %31 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %30 to %"class.std::allocator.7"*
  %32 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %29, align 8
  call void @_ZNSaISt6vectorIxSaIxEEEC2ERKS2_(%"class.std::allocator.7"* %31, %"class.std::allocator.7"* dereferenceable(1) %32) #10
  %33 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %30, i32 0, i32 0
  store %"class.std::vector.10"* null, %"class.std::vector.10"** %33, align 8
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %30, i32 0, i32 1
  store %"class.std::vector.10"* null, %"class.std::vector.10"** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %30, i32 0, i32 2
  store %"class.std::vector.10"* null, %"class.std::vector.10"** %35, align 8
  %36 = load i32, i32* @x.314
  %37 = load i32, i32* @y.315
  %38 = add i32 %36, -137413771
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, -137413771
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 180973960, i32 -1280870567
  store i32 %50, i32* %15
  br label %61

; <label>:51:                                     ; preds = %16
  ret void

; <label>:52:                                     ; preds = %16
  %53 = alloca %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, align 8
  %54 = alloca %"class.std::allocator.7"*, align 8
  store %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %53, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %54, align 8
  %55 = load %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %53, align 8
  %56 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %55 to %"class.std::allocator.7"*
  %57 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %54, align 8
  call void @_ZNSaISt6vectorIxSaIxEEEC2ERKS2_(%"class.std::allocator.7"* %56, %"class.std::allocator.7"* dereferenceable(1) %57) #10
  %58 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %55, i32 0, i32 0
  store %"class.std::vector.10"* null, %"class.std::vector.10"** %58, align 8
  %59 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %55, i32 0, i32 1
  store %"class.std::vector.10"* null, %"class.std::vector.10"** %59, align 8
  %60 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %55, i32 0, i32 2
  store %"class.std::vector.10"* null, %"class.std::vector.10"** %60, align 8
  store i32 1987248250, i32* %15
  br label %61

; <label>:61:                                     ; preds = %52, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.6"*, i64) #1 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.6"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"class.std::vector.10"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.6"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %8, i32 0, i32 0
  store %"class.std::vector.10"* %7, %"class.std::vector.10"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"class.std::vector.10"*, %"class.std::vector.10"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %13, i32 0, i32 1
  store %"class.std::vector.10"* %12, %"class.std::vector.10"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"class.std::vector.10"*, %"class.std::vector.10"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %20, i32 0, i32 2
  store %"class.std::vector.10"* %19, %"class.std::vector.10"** %21, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.10"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.6"*, i64) #1 comdat align 2 {
  %3 = alloca %"class.std::vector.10"*
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.6"*
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.318
  %10 = load i32, i32* @y.319
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 197437244, i32* %18
  %19 = alloca %"class.std::vector.10"*
  br label %20

; <label>:20:                                     ; preds = %2, %137
  %21 = load i32, i32* %18
  switch i32 %21, label %22 [
    i32 197437244, label %23
    i32 -224590986, label %43
    i32 -2066956406, label %66
    i32 449510327, label %69
    i32 333187284, label %85
    i32 2138825864, label %119
    i32 2116171534, label %121
    i32 -1050728210, label %122
    i32 626850337, label %124
    i32 534979999, label %130
  ]

; <label>:22:                                     ; preds = %20
  br label %137

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 false, true
  %29 = and i1 %26, false
  %30 = and i1 %24, %28
  %31 = and i1 %27, false
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 false, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 -224590986, i32 626850337
  store i32 %42, i32* %18
  br label %137

; <label>:43:                                     ; preds = %20
  %44 = alloca %"struct.std::_Vector_base.6"*, align 8
  %45 = alloca i64, align 8
  store i64* %45, i64** %6
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %44, align 8
  %46 = load volatile i64*, i64** %6
  store i64 %1, i64* %46, align 8
  %47 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %44, align 8
  store %"struct.std::_Vector_base.6"* %47, %"struct.std::_Vector_base.6"** %5
  %48 = load volatile i64*, i64** %6
  %49 = load i64, i64* %48, align 8
  %50 = icmp ne i64 %49, 0
  store i1 %50, i1* %4
  %51 = load i32, i32* @x.318
  %52 = load i32, i32* @y.319
  %53 = sub i32 %51, -1905302666
  %54 = sub i32 %53, 1
  %55 = add i32 %54, -1905302666
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 -2066956406, i32 626850337
  store i32 %65, i32* %18
  br label %137

; <label>:66:                                     ; preds = %20
  %67 = load volatile i1, i1* %4
  %68 = select i1 %67, i32 449510327, i32 2116171534
  store i32 %68, i32* %18
  br label %137

; <label>:69:                                     ; preds = %20
  %70 = load i32, i32* @x.318
  %71 = load i32, i32* @y.319
  %72 = add i32 %70, -999453127
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, -999453127
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  %84 = select i1 %82, i32 333187284, i32 534979999
  store i32 %84, i32* %18
  br label %137

; <label>:85:                                     ; preds = %20
  %86 = load volatile %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %5
  %87 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %86, i32 0, i32 0
  %88 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %87 to %"class.std::allocator.7"*
  %89 = load volatile i64*, i64** %6
  %90 = load i64, i64* %89, align 8
  %91 = call %"class.std::vector.10"* @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE8allocateERS3_m(%"class.std::allocator.7"* dereferenceable(1) %88, i64 %90)
  store %"class.std::vector.10"* %91, %"class.std::vector.10"** %3
  %92 = load i32, i32* @x.318
  %93 = load i32, i32* @y.319
  %94 = sub i32 %92, 1834761277
  %95 = sub i32 %94, 1
  %96 = add i32 %95, 1834761277
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 true, true
  %105 = and i1 %102, true
  %106 = and i1 %100, %104
  %107 = and i1 %103, true
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 true, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  %118 = select i1 %116, i32 2138825864, i32 534979999
  store i32 %118, i32* %18
  br label %137

; <label>:119:                                    ; preds = %20
  store i32 -1050728210, i32* %18
  %120 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %3
  store %"class.std::vector.10"* %120, %"class.std::vector.10"** %19
  br label %137

; <label>:121:                                    ; preds = %20
  store i32 -1050728210, i32* %18
  store %"class.std::vector.10"* null, %"class.std::vector.10"** %19
  br label %137

; <label>:122:                                    ; preds = %20
  %123 = load %"class.std::vector.10"*, %"class.std::vector.10"** %19
  ret %"class.std::vector.10"* %123

; <label>:124:                                    ; preds = %20
  %125 = alloca %"struct.std::_Vector_base.6"*, align 8
  %126 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %125, align 8
  store i64 %1, i64* %126, align 8
  %127 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %125, align 8
  %128 = load i64, i64* %126, align 8
  %129 = icmp ne i64 %128, 0
  store i32 -224590986, i32* %18
  br label %137

; <label>:130:                                    ; preds = %20
  %131 = load volatile %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %5
  %132 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %131, i32 0, i32 0
  %133 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %132 to %"class.std::allocator.7"*
  %134 = load volatile i64*, i64** %6
  %135 = load i64, i64* %134, align 8
  %136 = call %"class.std::vector.10"* @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE8allocateERS3_m(%"class.std::allocator.7"* dereferenceable(1) %133, i64 %135)
  store i32 333187284, i32* %18
  br label %137

; <label>:137:                                    ; preds = %130, %124, %121, %119, %85, %69, %66, %43, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.10"* @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE8allocateERS3_m(%"class.std::allocator.7"* dereferenceable(1), i64) #1 comdat align 2 {
  %3 = alloca %"class.std::allocator.7"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %3, align 8
  %6 = bitcast %"class.std::allocator.7"* %5 to %"class.__gnu_cxx::new_allocator.8"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector.10"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.8"* %6, i64 %7, i8* null)
  ret %"class.std::vector.10"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.10"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.8"*, i64, i8*) #1 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"* %9) #10
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 1985637788, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1985637788, label %16
    i32 811458017, label %21
    i32 1277762725, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 811458017, i32 1277762725
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #11
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 24
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"class.std::vector.10"*
  ret %"class.std::vector.10"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.10"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIxSaIxEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.10"*, i64, %"class.std::vector.10"* dereferenceable(24), %"class.std::allocator.7"* dereferenceable(1)) #1 comdat {
  %5 = alloca %"class.std::vector.10"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.10"*, align 8
  %8 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector.10"* %2, %"class.std::vector.10"** %7, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %8, align 8
  %9 = load %"class.std::vector.10"*, %"class.std::vector.10"** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %"class.std::vector.10"*, %"class.std::vector.10"** %7, align 8
  %12 = call %"class.std::vector.10"* @_ZSt20uninitialized_fill_nIPSt6vectorIxSaIxEEmS2_ET_S4_T0_RKT1_(%"class.std::vector.10"* %9, i64 %10, %"class.std::vector.10"* dereferenceable(24) %11)
  ret %"class.std::vector.10"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.10"* @_ZSt20uninitialized_fill_nIPSt6vectorIxSaIxEEmS2_ET_S4_T0_RKT1_(%"class.std::vector.10"*, i64, %"class.std::vector.10"* dereferenceable(24)) #1 comdat {
  %4 = alloca %"class.std::vector.10"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.328
  %8 = load i32, i32* @y.329
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 949706884, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %75
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 949706884, label %20
    i32 -849938446, label %28
    i32 1109771786, label %64
    i32 -623701322, label %66
  ]

; <label>:19:                                     ; preds = %17
  br label %75

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -849938446, i32 -623701322
  store i32 %27, i32* %16
  br label %75

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.10"*, align 8
  %30 = alloca i64, align 8
  %31 = alloca %"class.std::vector.10"*, align 8
  %32 = alloca i8, align 1
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %29, align 8
  store i64 %1, i64* %30, align 8
  store %"class.std::vector.10"* %2, %"class.std::vector.10"** %31, align 8
  store i8 1, i8* %32, align 1
  %33 = load %"class.std::vector.10"*, %"class.std::vector.10"** %29, align 8
  %34 = load i64, i64* %30, align 8
  %35 = load %"class.std::vector.10"*, %"class.std::vector.10"** %31, align 8
  %36 = call %"class.std::vector.10"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIxSaIxEEmS4_EET_S6_T0_RKT1_(%"class.std::vector.10"* %33, i64 %34, %"class.std::vector.10"* dereferenceable(24) %35)
  store %"class.std::vector.10"* %36, %"class.std::vector.10"** %4
  %37 = load i32, i32* @x.328
  %38 = load i32, i32* @y.329
  %39 = add i32 %37, 156153152
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, 156153152
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 1109771786, i32 -623701322
  store i32 %63, i32* %16
  br label %75

; <label>:64:                                     ; preds = %17
  %65 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %4
  ret %"class.std::vector.10"* %65

; <label>:66:                                     ; preds = %17
  %67 = alloca %"class.std::vector.10"*, align 8
  %68 = alloca i64, align 8
  %69 = alloca %"class.std::vector.10"*, align 8
  %70 = alloca i8, align 1
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %67, align 8
  store i64 %1, i64* %68, align 8
  store %"class.std::vector.10"* %2, %"class.std::vector.10"** %69, align 8
  store i8 1, i8* %70, align 1
  %71 = load %"class.std::vector.10"*, %"class.std::vector.10"** %67, align 8
  %72 = load i64, i64* %68, align 8
  %73 = load %"class.std::vector.10"*, %"class.std::vector.10"** %69, align 8
  %74 = call %"class.std::vector.10"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIxSaIxEEmS4_EET_S6_T0_RKT1_(%"class.std::vector.10"* %71, i64 %72, %"class.std::vector.10"* dereferenceable(24) %73)
  store i32 -849938446, i32* %16
  br label %75

; <label>:75:                                     ; preds = %66, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.10"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIxSaIxEEmS4_EET_S6_T0_RKT1_(%"class.std::vector.10"*, i64, %"class.std::vector.10"* dereferenceable(24)) #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.10"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.10"*, align 8
  %7 = alloca %"class.std::vector.10"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.10"* %2, %"class.std::vector.10"** %6, align 8
  %10 = load %"class.std::vector.10"*, %"class.std::vector.10"** %4, align 8
  store %"class.std::vector.10"* %10, %"class.std::vector.10"** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %19, %3
  %12 = load i64, i64* %5, align 8
  %13 = icmp ugt i64 %12, 0
  br i1 %13, label %14, label %38

; <label>:14:                                     ; preds = %11
  %15 = load %"class.std::vector.10"*, %"class.std::vector.10"** %7, align 8
  %16 = call %"class.std::vector.10"* @_ZSt11__addressofISt6vectorIxSaIxEEEPT_RS3_(%"class.std::vector.10"* dereferenceable(24) %15) #10
  %17 = load %"class.std::vector.10"*, %"class.std::vector.10"** %6, align 8
  invoke void @_ZSt10_ConstructISt6vectorIxSaIxEEJRKS2_EEvPT_DpOT0_(%"class.std::vector.10"* %16, %"class.std::vector.10"* dereferenceable(24) %17)
          to label %18 unwind label %28

; <label>:18:                                     ; preds = %14
  br label %19

; <label>:19:                                     ; preds = %18
  %20 = load i64, i64* %5, align 8
  %21 = sub i64 0, %20
  %22 = sub i64 0, -1
  %23 = add i64 %21, %22
  %24 = sub i64 0, %23
  %25 = add i64 %20, -1
  store i64 %24, i64* %5, align 8
  %26 = load %"class.std::vector.10"*, %"class.std::vector.10"** %7, align 8
  %27 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %26, i32 1
  store %"class.std::vector.10"* %27, %"class.std::vector.10"** %7, align 8
  br label %11

; <label>:28:                                     ; preds = %14
  %29 = landingpad { i8*, i32 }
          catch i8* null
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %8, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %9, align 4
  br label %32

; <label>:32:                                     ; preds = %28
  %33 = load i8*, i8** %8, align 8
  %34 = call i8* @__cxa_begin_catch(i8* %33) #10
  %35 = load %"class.std::vector.10"*, %"class.std::vector.10"** %4, align 8
  %36 = load %"class.std::vector.10"*, %"class.std::vector.10"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIxSaIxEEEvT_S4_(%"class.std::vector.10"* %35, %"class.std::vector.10"* %36)
          to label %37 unwind label %69

; <label>:37:                                     ; preds = %32
  invoke void @__cxa_rethrow() #11
          to label %219 unwind label %69

; <label>:38:                                     ; preds = %11
  %39 = load i32, i32* @x.330
  %40 = load i32, i32* @y.331
  %41 = sub i32 %39, -1239384832
  %42 = sub i32 %41, 1
  %43 = add i32 %42, -1239384832
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  br i1 %51, label %53, label %220

; <label>:53:                                     ; preds = %38, %220
  %54 = load %"class.std::vector.10"*, %"class.std::vector.10"** %7, align 8
  %55 = load i32, i32* @x.330
  %56 = load i32, i32* @y.331
  %57 = sub i32 0, 1
  %58 = add i32 %55, %57
  %59 = sub i32 %55, 1
  %60 = mul i32 %55, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %56, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  br i1 %66, label %68, label %220

; <label>:68:                                     ; preds = %53
  ret %"class.std::vector.10"* %54

; <label>:69:                                     ; preds = %37, %32
  %70 = landingpad { i8*, i32 }
          cleanup
  %71 = extractvalue { i8*, i32 } %70, 0
  store i8* %71, i8** %8, align 8
  %72 = extractvalue { i8*, i32 } %70, 1
  store i32 %72, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %73 unwind label %162

; <label>:73:                                     ; preds = %69
  %74 = load i32, i32* @x.330
  %75 = load i32, i32* @y.331
  %76 = sub i32 0, 1
  %77 = add i32 %74, %76
  %78 = sub i32 %74, 1
  %79 = mul i32 %74, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %75, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  br i1 %85, label %87, label %222

; <label>:87:                                     ; preds = %73, %222
  %88 = load i32, i32* @x.330
  %89 = load i32, i32* @y.331
  %90 = add i32 %88, 1258894678
  %91 = sub i32 %90, 1
  %92 = sub i32 %91, 1258894678
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = xor i1 %96, true
  %99 = xor i1 %97, true
  %100 = xor i1 true, true
  %101 = and i1 %98, true
  %102 = and i1 %96, %100
  %103 = and i1 %99, true
  %104 = and i1 %97, %100
  %105 = or i1 %101, %102
  %106 = or i1 %103, %104
  %107 = xor i1 %105, %106
  %108 = or i1 %98, %99
  %109 = xor i1 %108, true
  %110 = or i1 true, %100
  %111 = and i1 %109, %110
  %112 = or i1 %107, %111
  %113 = or i1 %96, %97
  br i1 %112, label %114, label %222

; <label>:114:                                    ; preds = %87
  br label %157
                                                  ; No predecessors!
  %116 = load i32, i32* @x.330
  %117 = load i32, i32* @y.331
  %118 = sub i32 0, 1
  %119 = add i32 %116, %118
  %120 = sub i32 %116, 1
  %121 = mul i32 %116, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %117, 10
  %125 = xor i1 %123, true
  %126 = xor i1 %124, true
  %127 = xor i1 false, true
  %128 = and i1 %125, false
  %129 = and i1 %123, %127
  %130 = and i1 %126, false
  %131 = and i1 %124, %127
  %132 = or i1 %128, %129
  %133 = or i1 %130, %131
  %134 = xor i1 %132, %133
  %135 = or i1 %125, %126
  %136 = xor i1 %135, true
  %137 = or i1 false, %127
  %138 = and i1 %136, %137
  %139 = or i1 %134, %138
  %140 = or i1 %123, %124
  br i1 %139, label %141, label %223

; <label>:141:                                    ; preds = %115, %223
  call void @llvm.trap()
  %142 = load i32, i32* @x.330
  %143 = load i32, i32* @y.331
  %144 = add i32 %142, 1538595600
  %145 = sub i32 %144, 1
  %146 = sub i32 %145, 1538595600
  %147 = sub i32 %142, 1
  %148 = mul i32 %142, %146
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %143, 10
  %152 = and i1 %150, %151
  %153 = xor i1 %150, %151
  %154 = or i1 %152, %153
  %155 = or i1 %150, %151
  br i1 %154, label %156, label %223

; <label>:156:                                    ; preds = %141
  unreachable

; <label>:157:                                    ; preds = %114
  %158 = load i8*, i8** %8, align 8
  %159 = load i32, i32* %9, align 4
  %160 = insertvalue { i8*, i32 } undef, i8* %158, 0
  %161 = insertvalue { i8*, i32 } %160, i32 %159, 1
  resume { i8*, i32 } %161

; <label>:162:                                    ; preds = %69
  %163 = load i32, i32* @x.330
  %164 = load i32, i32* @y.331
  %165 = sub i32 %163, 1616828713
  %166 = sub i32 %165, 1
  %167 = add i32 %166, 1616828713
  %168 = sub i32 %163, 1
  %169 = mul i32 %163, %167
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %164, 10
  %173 = xor i1 %171, true
  %174 = xor i1 %172, true
  %175 = xor i1 false, true
  %176 = and i1 %173, false
  %177 = and i1 %171, %175
  %178 = and i1 %174, false
  %179 = and i1 %172, %175
  %180 = or i1 %176, %177
  %181 = or i1 %178, %179
  %182 = xor i1 %180, %181
  %183 = or i1 %173, %174
  %184 = xor i1 %183, true
  %185 = or i1 false, %175
  %186 = and i1 %184, %185
  %187 = or i1 %182, %186
  %188 = or i1 %171, %172
  br i1 %187, label %189, label %224

; <label>:189:                                    ; preds = %162, %224
  %190 = landingpad { i8*, i32 }
          catch i8* null
  %191 = extractvalue { i8*, i32 } %190, 0
  call void @__clang_call_terminate(i8* %191) #8
  %192 = load i32, i32* @x.330
  %193 = load i32, i32* @y.331
  %194 = sub i32 %192, -1299431558
  %195 = sub i32 %194, 1
  %196 = add i32 %195, -1299431558
  %197 = sub i32 %192, 1
  %198 = mul i32 %192, %196
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %193, 10
  %202 = xor i1 %200, true
  %203 = xor i1 %201, true
  %204 = xor i1 false, true
  %205 = and i1 %202, false
  %206 = and i1 %200, %204
  %207 = and i1 %203, false
  %208 = and i1 %201, %204
  %209 = or i1 %205, %206
  %210 = or i1 %207, %208
  %211 = xor i1 %209, %210
  %212 = or i1 %202, %203
  %213 = xor i1 %212, true
  %214 = or i1 false, %204
  %215 = and i1 %213, %214
  %216 = or i1 %211, %215
  %217 = or i1 %200, %201
  br i1 %216, label %218, label %224

; <label>:218:                                    ; preds = %189
  unreachable

; <label>:219:                                    ; preds = %37
  unreachable

; <label>:220:                                    ; preds = %53, %38
  %221 = load %"class.std::vector.10"*, %"class.std::vector.10"** %7, align 8
  br label %53

; <label>:222:                                    ; preds = %87, %73
  br label %87

; <label>:223:                                    ; preds = %141, %115
  call void @llvm.trap()
  br label %141

; <label>:224:                                    ; preds = %189, %162
  %225 = landingpad { i8*, i32 }
          catch i8* null
  %226 = extractvalue { i8*, i32 } %225, 0
  call void @__clang_call_terminate(i8* %226) #8
  br label %189
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIxSaIxEEJRKS2_EEvPT_DpOT0_(%"class.std::vector.10"*, %"class.std::vector.10"* dereferenceable(24)) #1 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.332
  %6 = load i32, i32* @y.333
  %7 = add i32 %5, 2069262208
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 2069262208
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -245510384, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %71
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -245510384, label %19
    i32 308750020, label %39
    i32 -613368221, label %62
    i32 414223962, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %71

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 308750020, i32 414223962
  store i32 %38, i32* %15
  br label %71

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.10"*, align 8
  %41 = alloca %"class.std::vector.10"*, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %40, align 8
  store %"class.std::vector.10"* %1, %"class.std::vector.10"** %41, align 8
  %42 = load %"class.std::vector.10"*, %"class.std::vector.10"** %40, align 8
  %43 = bitcast %"class.std::vector.10"* %42 to i8*
  %44 = bitcast i8* %43 to %"class.std::vector.10"*
  %45 = load %"class.std::vector.10"*, %"class.std::vector.10"** %41, align 8
  %46 = call dereferenceable(24) %"class.std::vector.10"* @_ZSt7forwardIRKSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.10"* dereferenceable(24) %45) #10
  call void @_ZNSt6vectorIxSaIxEEC2ERKS1_(%"class.std::vector.10"* %44, %"class.std::vector.10"* dereferenceable(24) %46)
  %47 = load i32, i32* @x.332
  %48 = load i32, i32* @y.333
  %49 = sub i32 %47, -2008892954
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -2008892954
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -613368221, i32 414223962
  store i32 %61, i32* %15
  br label %71

; <label>:62:                                     ; preds = %16
  ret void

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::vector.10"*, align 8
  %65 = alloca %"class.std::vector.10"*, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %64, align 8
  store %"class.std::vector.10"* %1, %"class.std::vector.10"** %65, align 8
  %66 = load %"class.std::vector.10"*, %"class.std::vector.10"** %64, align 8
  %67 = bitcast %"class.std::vector.10"* %66 to i8*
  %68 = bitcast i8* %67 to %"class.std::vector.10"*
  %69 = load %"class.std::vector.10"*, %"class.std::vector.10"** %65, align 8
  %70 = call dereferenceable(24) %"class.std::vector.10"* @_ZSt7forwardIRKSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.10"* dereferenceable(24) %69) #10
  call void @_ZNSt6vectorIxSaIxEEC2ERKS1_(%"class.std::vector.10"* %68, %"class.std::vector.10"* dereferenceable(24) %70)
  store i32 308750020, i32* %15
  br label %71

; <label>:71:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.10"* @_ZSt7forwardIRKSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.10"* dereferenceable(24)) #0 comdat {
  %2 = alloca %"class.std::vector.10"*, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %2, align 8
  %3 = load %"class.std::vector.10"*, %"class.std::vector.10"** %2, align 8
  ret %"class.std::vector.10"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorImEC2Ev(%"class.__gnu_cxx::new_allocator.23"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %0, %"class.__gnu_cxx::new_allocator.23"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorImED2Ev(%"class.__gnu_cxx::new_allocator.23"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.338
  %5 = load i32, i32* @y.339
  %6 = add i32 %4, -85026324
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -85026324
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1495304577, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1495304577, label %18
    i32 1602762066, label %38
    i32 -581777680, label %68
    i32 -1452594772, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1602762066, i32 -1452594772
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %0, %"class.__gnu_cxx::new_allocator.23"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"** %39, align 8
  %41 = load i32, i32* @x.338
  %42 = load i32, i32* @y.339
  %43 = add i32 %41, -674333052
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -674333052
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -581777680, i32 -1452594772
  store i32 %67, i32* %14
  br label %72

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %0, %"class.__gnu_cxx::new_allocator.23"** %70, align 8
  %71 = load %"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"** %70, align 8
  store i32 1602762066, i32* %14
  br label %72

; <label>:72:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseImSaImEEC2EmRKS0_(%"struct.std::_Vector_base.21"*, i64, %"class.std::allocator.22"* dereferenceable(1)) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.21"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.22"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.21"* %0, %"struct.std::_Vector_base.21"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.22"* %2, %"class.std::allocator.22"** %6, align 8
  %9 = load %"struct.std::_Vector_base.21"*, %"struct.std::_Vector_base.21"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %6, align 8
  call void @_ZNSt12_Vector_baseImSaImEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %10, %"class.std::allocator.22"* dereferenceable(1) %11) #10
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseImSaImEE17_M_create_storageEm(%"struct.std::_Vector_base.21"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = load i32, i32* @x.340
  %16 = load i32, i32* @y.341
  %17 = sub i32 %15, -1616895891
  %18 = sub i32 %17, 1
  %19 = add i32 %18, -1616895891
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %16, 10
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  br i1 %39, label %41, label %77

; <label>:41:                                     ; preds = %14, %77
  %42 = landingpad { i8*, i32 }
          cleanup
  %43 = extractvalue { i8*, i32 } %42, 0
  store i8* %43, i8** %7, align 8
  %44 = extractvalue { i8*, i32 } %42, 1
  store i32 %44, i32* %8, align 4
  call void @_ZNSt12_Vector_baseImSaImEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %10) #10
  %45 = load i32, i32* @x.340
  %46 = load i32, i32* @y.341
  %47 = sub i32 %45, -120766851
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -120766851
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  br i1 %69, label %71, label %77

; <label>:71:                                     ; preds = %41
  br label %72

; <label>:72:                                     ; preds = %71
  %73 = load i8*, i8** %7, align 8
  %74 = load i32, i32* %8, align 4
  %75 = insertvalue { i8*, i32 } undef, i8* %73, 0
  %76 = insertvalue { i8*, i32 } %75, i32 %74, 1
  resume { i8*, i32 } %76

; <label>:77:                                     ; preds = %41, %14
  %78 = landingpad { i8*, i32 }
          cleanup
  %79 = extractvalue { i8*, i32 } %78, 0
  store i8* %79, i8** %7, align 8
  %80 = extractvalue { i8*, i32 } %78, 1
  store i32 %80, i32* %8, align 4
  call void @_ZNSt12_Vector_baseImSaImEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %10) #10
  br label %41
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorImSaImEE18_M_fill_initializeEmRKm(%"class.std::vector.20"*, i64, i64* dereferenceable(8)) #1 comdat align 2 {
  %4 = alloca %"class.std::vector.20"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"class.std::vector.20"*, %"class.std::vector.20"** %4, align 8
  %8 = bitcast %"class.std::vector.20"* %7 to %"struct.std::_Vector_base.21"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl", %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load i64*, i64** %6, align 8
  %14 = bitcast %"class.std::vector.20"* %7 to %"struct.std::_Vector_base.21"*
  %15 = call dereferenceable(1) %"class.std::allocator.22"* @_ZNSt12_Vector_baseImSaImEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.21"* %14) #10
  %16 = call i64* @_ZSt24__uninitialized_fill_n_aIPmmmmET_S1_T0_RKT1_RSaIT2_E(i64* %11, i64 %12, i64* dereferenceable(8) %13, %"class.std::allocator.22"* dereferenceable(1) %15)
  %17 = bitcast %"class.std::vector.20"* %7 to %"struct.std::_Vector_base.21"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl", %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %18, i32 0, i32 1
  store i64* %16, i64** %19, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseImSaImEED2Ev(%"struct.std::_Vector_base.21"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.21"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.21"* %0, %"struct.std::_Vector_base.21"** %2, align 8
  %5 = load %"struct.std::_Vector_base.21"*, %"struct.std::_Vector_base.21"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl", %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl", %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl", %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = ptrtoint i64* %11 to i64
  %16 = ptrtoint i64* %14 to i64
  %17 = sub i64 %15, 24096771456667833
  %18 = sub i64 %17, %16
  %19 = add i64 %18, 24096771456667833
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 8
  invoke void @_ZNSt12_Vector_baseImSaImEE13_M_deallocateEPmm(%"struct.std::_Vector_base.21"* %5, i64* %8, i64 %21)
          to label %22 unwind label %78

; <label>:22:                                     ; preds = %1
  %23 = load i32, i32* @x.344
  %24 = load i32, i32* @y.345
  %25 = sub i32 %23, -1501512279
  %26 = sub i32 %25, 1
  %27 = add i32 %26, -1501512279
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 false, true
  %36 = and i1 %33, false
  %37 = and i1 %31, %35
  %38 = and i1 %34, false
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 false, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  br i1 %47, label %49, label %138

; <label>:49:                                     ; preds = %22, %138
  %50 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseImSaImEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %50) #10
  %51 = load i32, i32* @x.344
  %52 = load i32, i32* @y.345
  %53 = sub i32 %51, 805227780
  %54 = sub i32 %53, 1
  %55 = add i32 %54, 805227780
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  br i1 %75, label %77, label %138

; <label>:77:                                     ; preds = %49
  ret void

; <label>:78:                                     ; preds = %1
  %79 = load i32, i32* @x.344
  %80 = load i32, i32* @y.345
  %81 = sub i32 0, 1
  %82 = add i32 %79, %81
  %83 = sub i32 %79, 1
  %84 = mul i32 %79, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %80, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 true, true
  %91 = and i1 %88, true
  %92 = and i1 %86, %90
  %93 = and i1 %89, true
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 true, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  br i1 %102, label %104, label %140

; <label>:104:                                    ; preds = %78, %140
  %105 = landingpad { i8*, i32 }
          catch i8* null
  %106 = extractvalue { i8*, i32 } %105, 0
  store i8* %106, i8** %3, align 8
  %107 = extractvalue { i8*, i32 } %105, 1
  store i32 %107, i32* %4, align 4
  %108 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseImSaImEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %108) #10
  %109 = load i32, i32* @x.344
  %110 = load i32, i32* @y.345
  %111 = add i32 %109, -316858877
  %112 = sub i32 %111, 1
  %113 = sub i32 %112, -316858877
  %114 = sub i32 %109, 1
  %115 = mul i32 %109, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %110, 10
  %119 = xor i1 %117, true
  %120 = xor i1 %118, true
  %121 = xor i1 false, true
  %122 = and i1 %119, false
  %123 = and i1 %117, %121
  %124 = and i1 %120, false
  %125 = and i1 %118, %121
  %126 = or i1 %122, %123
  %127 = or i1 %124, %125
  %128 = xor i1 %126, %127
  %129 = or i1 %119, %120
  %130 = xor i1 %129, true
  %131 = or i1 false, %121
  %132 = and i1 %130, %131
  %133 = or i1 %128, %132
  %134 = or i1 %117, %118
  br i1 %133, label %135, label %140

; <label>:135:                                    ; preds = %104
  br label %136

; <label>:136:                                    ; preds = %135
  %137 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %137) #8
  unreachable

; <label>:138:                                    ; preds = %49, %22
  %139 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseImSaImEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %139) #10
  br label %49

; <label>:140:                                    ; preds = %104, %78
  %141 = landingpad { i8*, i32 }
          catch i8* null
  %142 = extractvalue { i8*, i32 } %141, 0
  store i8* %142, i8** %3, align 8
  %143 = extractvalue { i8*, i32 } %141, 1
  store i32 %143, i32* %4, align 4
  %144 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseImSaImEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %144) #10
  br label %104
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseImSaImEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"*, %"class.std::allocator.22"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.22"*, align 8
  store %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.22"* %1, %"class.std::allocator.22"** %4, align 8
  %5 = load %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"*, %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %5 to %"class.std::allocator.22"*
  %7 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %4, align 8
  call void @_ZNSaImEC2ERKS_(%"class.std::allocator.22"* %6, %"class.std::allocator.22"* dereferenceable(1) %7) #10
  %8 = getelementptr inbounds %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl", %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %5, i32 0, i32 0
  store i64* null, i64** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl", %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %5, i32 0, i32 1
  store i64* null, i64** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl", %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %5, i32 0, i32 2
  store i64* null, i64** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseImSaImEE17_M_create_storageEm(%"struct.std::_Vector_base.21"*, i64) #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.348
  %6 = load i32, i32* @y.349
  %7 = add i32 %5, 812614308
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 812614308
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1867931673, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %95
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1867931673, label %19
    i32 2032549889, label %27
    i32 -662555792, label %74
    i32 2035020629, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %95

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 2032549889, i32 2035020629
  store i32 %26, i32* %15
  br label %95

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base.21"*, align 8
  %29 = alloca i64, align 8
  store %"struct.std::_Vector_base.21"* %0, %"struct.std::_Vector_base.21"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"struct.std::_Vector_base.21"*, %"struct.std::_Vector_base.21"** %28, align 8
  %31 = load i64, i64* %29, align 8
  %32 = call i64* @_ZNSt12_Vector_baseImSaImEE11_M_allocateEm(%"struct.std::_Vector_base.21"* %30, i64 %31)
  %33 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %30, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl", %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %33, i32 0, i32 0
  store i64* %32, i64** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %30, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl", %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %35, i32 0, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %30, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl", %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %38, i32 0, i32 1
  store i64* %37, i64** %39, align 8
  %40 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %30, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl", %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %40, i32 0, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = load i64, i64* %29, align 8
  %44 = getelementptr inbounds i64, i64* %42, i64 %43
  %45 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %30, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl", %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %45, i32 0, i32 2
  store i64* %44, i64** %46, align 8
  %47 = load i32, i32* @x.348
  %48 = load i32, i32* @y.349
  %49 = sub i32 %47, -656801500
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -656801500
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -662555792, i32 2035020629
  store i32 %73, i32* %15
  br label %95

; <label>:74:                                     ; preds = %16
  ret void

; <label>:75:                                     ; preds = %16
  %76 = alloca %"struct.std::_Vector_base.21"*, align 8
  %77 = alloca i64, align 8
  store %"struct.std::_Vector_base.21"* %0, %"struct.std::_Vector_base.21"** %76, align 8
  store i64 %1, i64* %77, align 8
  %78 = load %"struct.std::_Vector_base.21"*, %"struct.std::_Vector_base.21"** %76, align 8
  %79 = load i64, i64* %77, align 8
  %80 = call i64* @_ZNSt12_Vector_baseImSaImEE11_M_allocateEm(%"struct.std::_Vector_base.21"* %78, i64 %79)
  %81 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %78, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl", %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %81, i32 0, i32 0
  store i64* %80, i64** %82, align 8
  %83 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %78, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl", %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %83, i32 0, i32 0
  %85 = load i64*, i64** %84, align 8
  %86 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %78, i32 0, i32 0
  %87 = getelementptr inbounds %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl", %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %86, i32 0, i32 1
  store i64* %85, i64** %87, align 8
  %88 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %78, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl", %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %88, i32 0, i32 0
  %90 = load i64*, i64** %89, align 8
  %91 = load i64, i64* %77, align 8
  %92 = getelementptr inbounds i64, i64* %90, i64 %91
  %93 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %78, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl", %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %93, i32 0, i32 2
  store i64* %92, i64** %94, align 8
  store i32 2032549889, i32* %15
  br label %95

; <label>:95:                                     ; preds = %75, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseImSaImEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"*, %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %3 to %"class.std::allocator.22"*
  call void @_ZNSaImED2Ev(%"class.std::allocator.22"* %4) #10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorImEC2ERKS1_(%"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.352
  %6 = load i32, i32* @y.353
  %7 = sub i32 %5, -1394365897
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1394365897
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1393304638, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %75
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1393304638, label %19
    i32 1276051711, label %39
    i32 -1244621584, label %70
    i32 -1202812872, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %75

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1276051711, i32 -1202812872
  store i32 %38, i32* %15
  br label %75

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  %41 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %0, %"class.__gnu_cxx::new_allocator.23"** %40, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %1, %"class.__gnu_cxx::new_allocator.23"** %41, align 8
  %42 = load %"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"** %40, align 8
  %43 = load i32, i32* @x.352
  %44 = load i32, i32* @y.353
  %45 = sub i32 %43, 995237022
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 995237022
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -1244621584, i32 -1202812872
  store i32 %69, i32* %15
  br label %75

; <label>:70:                                     ; preds = %16
  ret void

; <label>:71:                                     ; preds = %16
  %72 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  %73 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %0, %"class.__gnu_cxx::new_allocator.23"** %72, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %1, %"class.__gnu_cxx::new_allocator.23"** %73, align 8
  %74 = load %"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"** %72, align 8
  store i32 1276051711, i32* %15
  br label %75

; <label>:75:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt12_Vector_baseImSaImEE11_M_allocateEm(%"struct.std::_Vector_base.21"*, i64) #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"struct.std::_Vector_base.21"*
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.354
  %9 = load i32, i32* @y.355
  %10 = add i32 %8, -2075285918
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -2075285918
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 191899480, i32* %18
  %19 = alloca i64*
  br label %20

; <label>:20:                                     ; preds = %2, %73
  %21 = load i32, i32* %18
  switch i32 %21, label %22 [
    i32 191899480, label %23
    i32 -117626386, label %31
    i32 -613810874, label %54
    i32 -146845417, label %57
    i32 361219324, label %64
    i32 2067802523, label %65
    i32 1345287155, label %67
  ]

; <label>:22:                                     ; preds = %20
  br label %73

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %7
  %25 = load volatile i1, i1* %6
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 -117626386, i32 1345287155
  store i32 %30, i32* %18
  br label %73

; <label>:31:                                     ; preds = %20
  %32 = alloca %"struct.std::_Vector_base.21"*, align 8
  %33 = alloca i64, align 8
  store i64* %33, i64** %5
  store %"struct.std::_Vector_base.21"* %0, %"struct.std::_Vector_base.21"** %32, align 8
  %34 = load volatile i64*, i64** %5
  store i64 %1, i64* %34, align 8
  %35 = load %"struct.std::_Vector_base.21"*, %"struct.std::_Vector_base.21"** %32, align 8
  store %"struct.std::_Vector_base.21"* %35, %"struct.std::_Vector_base.21"** %4
  %36 = load volatile i64*, i64** %5
  %37 = load i64, i64* %36, align 8
  %38 = icmp ne i64 %37, 0
  store i1 %38, i1* %3
  %39 = load i32, i32* @x.354
  %40 = load i32, i32* @y.355
  %41 = sub i32 %39, 424054966
  %42 = sub i32 %41, 1
  %43 = add i32 %42, 424054966
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -613810874, i32 1345287155
  store i32 %53, i32* %18
  br label %73

; <label>:54:                                     ; preds = %20
  %55 = load volatile i1, i1* %3
  %56 = select i1 %55, i32 -146845417, i32 361219324
  store i32 %56, i32* %18
  br label %73

; <label>:57:                                     ; preds = %20
  %58 = load volatile %"struct.std::_Vector_base.21"*, %"struct.std::_Vector_base.21"** %4
  %59 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %58, i32 0, i32 0
  %60 = bitcast %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %59 to %"class.std::allocator.22"*
  %61 = load volatile i64*, i64** %5
  %62 = load i64, i64* %61, align 8
  %63 = call i64* @_ZNSt16allocator_traitsISaImEE8allocateERS0_m(%"class.std::allocator.22"* dereferenceable(1) %60, i64 %62)
  store i32 2067802523, i32* %18
  store i64* %63, i64** %19
  br label %73

; <label>:64:                                     ; preds = %20
  store i32 2067802523, i32* %18
  store i64* null, i64** %19
  br label %73

; <label>:65:                                     ; preds = %20
  %66 = load i64*, i64** %19
  ret i64* %66

; <label>:67:                                     ; preds = %20
  %68 = alloca %"struct.std::_Vector_base.21"*, align 8
  %69 = alloca i64, align 8
  store %"struct.std::_Vector_base.21"* %0, %"struct.std::_Vector_base.21"** %68, align 8
  store i64 %1, i64* %69, align 8
  %70 = load %"struct.std::_Vector_base.21"*, %"struct.std::_Vector_base.21"** %68, align 8
  %71 = load i64, i64* %69, align 8
  %72 = icmp ne i64 %71, 0
  store i32 -117626386, i32* %18
  br label %73

; <label>:73:                                     ; preds = %67, %64, %57, %54, %31, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt16allocator_traitsISaImEE8allocateERS0_m(%"class.std::allocator.22"* dereferenceable(1), i64) #1 comdat align 2 {
  %3 = alloca %"class.std::allocator.22"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.22"* %0, %"class.std::allocator.22"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %3, align 8
  %6 = bitcast %"class.std::allocator.22"* %5 to %"class.__gnu_cxx::new_allocator.23"*
  %7 = load i64, i64* %4, align 8
  %8 = call i64* @_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.23"* %6, i64 %7, i8* null)
  ret i64* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.23"*, i64, i8*) #1 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %0, %"class.__gnu_cxx::new_allocator.23"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv(%"class.__gnu_cxx::new_allocator.23"* %10) #10
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 -368955002, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %108
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -368955002, label %17
    i32 988758301, label %22
    i32 -45871176, label %23
    i32 -502508285, label %51
    i32 301316258, label %82
    i32 1238947803, label %84
  ]

; <label>:16:                                     ; preds = %14
  br label %108

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 988758301, i32 -45871176
  store i32 %21, i32* %13
  br label %108

; <label>:22:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #11
  unreachable

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* @x.358
  %25 = load i32, i32* @y.359
  %26 = add i32 %24, 2116272055
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, 2116272055
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 false, true
  %37 = and i1 %34, false
  %38 = and i1 %32, %36
  %39 = and i1 %35, false
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 false, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  %50 = select i1 %48, i32 -502508285, i32 1238947803
  store i32 %50, i32* %13
  br label %108

; <label>:51:                                     ; preds = %14
  %52 = load i64, i64* %8, align 8
  %53 = mul i64 %52, 8
  %54 = call i8* @_Znwm(i64 %53)
  %55 = bitcast i8* %54 to i64*
  store i64* %55, i64** %4
  %56 = load i32, i32* @x.358
  %57 = load i32, i32* @y.359
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 true, true
  %68 = and i1 %65, true
  %69 = and i1 %63, %67
  %70 = and i1 %66, true
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 true, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  %81 = select i1 %79, i32 301316258, i32 1238947803
  store i32 %81, i32* %13
  br label %108

; <label>:82:                                     ; preds = %14
  %83 = load volatile i64*, i64** %4
  ret i64* %83

; <label>:84:                                     ; preds = %14
  %85 = load i64, i64* %8, align 8
  %86 = shl i64 %85, 8
  %87 = add i64 0, -6167205501348869563
  %88 = sub i64 %87, %85
  %89 = sub i64 %88, -6167205501348869563
  %90 = sub i64 0, %85
  %91 = sub i64 0, %89
  %92 = sub i64 0, 8
  %93 = add i64 %91, %92
  %94 = sub i64 0, %93
  %95 = add i64 %89, 8
  %96 = add i64 %85, -4057830353234418263
  %97 = sub i64 %96, 8
  %98 = sub i64 %97, -4057830353234418263
  %99 = sub i64 %85, 8
  %100 = mul i64 %98, 8
  %101 = sub i64 0, 8
  %102 = add i64 %85, %101
  %103 = sub i64 %85, 8
  %104 = mul i64 %102, 8
  %105 = mul i64 %85, 8
  %106 = call i8* @_Znwm(i64 %105)
  %107 = bitcast i8* %106 to i64*
  store i32 -502508285, i32* %13
  br label %108

; <label>:108:                                    ; preds = %84, %51, %23, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv(%"class.__gnu_cxx::new_allocator.23"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %0, %"class.__gnu_cxx::new_allocator.23"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt24__uninitialized_fill_n_aIPmmmmET_S1_T0_RKT1_RSaIT2_E(i64*, i64, i64* dereferenceable(8), %"class.std::allocator.22"* dereferenceable(1)) #1 comdat {
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.22"*, align 8
  store i64* %0, i64** %5, align 8
  store i64 %1, i64* %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.22"* %3, %"class.std::allocator.22"** %8, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load i64*, i64** %7, align 8
  %12 = call i64* @_ZSt20uninitialized_fill_nIPmmmET_S1_T0_RKT1_(i64* %9, i64 %10, i64* dereferenceable(8) %11)
  ret i64* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.22"* @_ZNSt12_Vector_baseImSaImEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.21"*) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.22"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.364
  %6 = load i32, i32* @y.365
  %7 = add i32 %5, -281801656
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -281801656
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 135014350, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 135014350, label %19
    i32 -1797830981, label %27
    i32 1374102715, label %59
    i32 -641583651, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1797830981, i32 -641583651
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base.21"*, align 8
  store %"struct.std::_Vector_base.21"* %0, %"struct.std::_Vector_base.21"** %28, align 8
  %29 = load %"struct.std::_Vector_base.21"*, %"struct.std::_Vector_base.21"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %30 to %"class.std::allocator.22"*
  store %"class.std::allocator.22"* %31, %"class.std::allocator.22"** %2
  %32 = load i32, i32* @x.364
  %33 = load i32, i32* @y.365
  %34 = add i32 %32, 1687380925
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 1687380925
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 1374102715, i32 -641583651
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"class.std::allocator.22"*, %"class.std::allocator.22"** %2
  ret %"class.std::allocator.22"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_Vector_base.21"*, align 8
  store %"struct.std::_Vector_base.21"* %0, %"struct.std::_Vector_base.21"** %62, align 8
  %63 = load %"struct.std::_Vector_base.21"*, %"struct.std::_Vector_base.21"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %63, i32 0, i32 0
  %65 = bitcast %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %64 to %"class.std::allocator.22"*
  store i32 -1797830981, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt20uninitialized_fill_nIPmmmET_S1_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #1 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i64*, i64** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPmmmEET_S3_T0_RKT1_(i64* %8, i64 %9, i64* dereferenceable(8) %10)
  ret i64* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPmmmEET_S3_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #1 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.368
  %8 = load i32, i32* @y.369
  %9 = add i32 %7, -1755723870
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -1755723870
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -957744481, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %73
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -957744481, label %21
    i32 1633846877, label %41
    i32 -1099806923, label %63
    i32 -1685668456, label %65
  ]

; <label>:20:                                     ; preds = %18
  br label %73

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1633846877, i32 -1685668456
  store i32 %40, i32* %17
  br label %73

; <label>:41:                                     ; preds = %18
  %42 = alloca i64*, align 8
  %43 = alloca i64, align 8
  %44 = alloca i64*, align 8
  store i64* %0, i64** %42, align 8
  store i64 %1, i64* %43, align 8
  store i64* %2, i64** %44, align 8
  %45 = load i64*, i64** %42, align 8
  %46 = load i64, i64* %43, align 8
  %47 = load i64*, i64** %44, align 8
  %48 = call i64* @_ZSt6fill_nIPmmmET_S1_T0_RKT1_(i64* %45, i64 %46, i64* dereferenceable(8) %47)
  store i64* %48, i64** %4
  %49 = load i32, i32* @x.368
  %50 = load i32, i32* @y.369
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -1099806923, i32 -1685668456
  store i32 %62, i32* %17
  br label %73

; <label>:63:                                     ; preds = %18
  %64 = load volatile i64*, i64** %4
  ret i64* %64

; <label>:65:                                     ; preds = %18
  %66 = alloca i64*, align 8
  %67 = alloca i64, align 8
  %68 = alloca i64*, align 8
  store i64* %0, i64** %66, align 8
  store i64 %1, i64* %67, align 8
  store i64* %2, i64** %68, align 8
  %69 = load i64*, i64** %66, align 8
  %70 = load i64, i64* %67, align 8
  %71 = load i64*, i64** %68, align 8
  %72 = call i64* @_ZSt6fill_nIPmmmET_S1_T0_RKT1_(i64* %69, i64 %70, i64* dereferenceable(8) %71)
  store i32 1633846877, i32* %17
  br label %73

; <label>:73:                                     ; preds = %65, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt6fill_nIPmmmET_S1_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #1 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZSt10__fill_n_aIPmmmEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64* %8, i64 %9, i64* dereferenceable(8) %10)
  ret i64* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt10__fill_n_aIPmmmEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64*, i64, i64* dereferenceable(8)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %7, align 8
  %11 = load i64, i64* %5, align 8
  store i64 %11, i64* %8, align 8
  %12 = alloca i32
  store i32 1928476175, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %34
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1928476175, label %16
    i32 -1346609707, label %20
    i32 -52511265, label %23
    i32 -198742129, label %32
  ]

; <label>:15:                                     ; preds = %13
  br label %34

; <label>:16:                                     ; preds = %13
  %17 = load i64, i64* %8, align 8
  %18 = icmp ugt i64 %17, 0
  %19 = select i1 %18, i32 -1346609707, i32 -198742129
  store i32 %19, i32* %12
  br label %34

; <label>:20:                                     ; preds = %13
  %21 = load i64, i64* %7, align 8
  %22 = load i64*, i64** %4, align 8
  store i64 %21, i64* %22, align 8
  store i32 -52511265, i32* %12
  br label %34

; <label>:23:                                     ; preds = %13
  %24 = load i64, i64* %8, align 8
  %25 = sub i64 0, %24
  %26 = sub i64 0, -1
  %27 = add i64 %25, %26
  %28 = sub i64 0, %27
  %29 = add i64 %24, -1
  store i64 %28, i64* %8, align 8
  %30 = load i64*, i64** %4, align 8
  %31 = getelementptr inbounds i64, i64* %30, i32 1
  store i64* %31, i64** %4, align 8
  store i32 1928476175, i32* %12
  br label %34

; <label>:32:                                     ; preds = %13
  %33 = load i64*, i64** %4, align 8
  ret i64* %33

; <label>:34:                                     ; preds = %23, %20, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64*) #1 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.374
  %6 = load i32, i32* @y.375
  %7 = sub i32 %5, -1452905068
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1452905068
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 382924829, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %52
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 382924829, label %19
    i32 -1242694444, label %27
    i32 -389845652, label %46
    i32 -392463718, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %52

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1242694444, i32 -392463718
  store i32 %26, i32* %15
  br label %52

; <label>:27:                                     ; preds = %16
  %28 = alloca i64*, align 8
  store i64* %0, i64** %28, align 8
  %29 = load i64*, i64** %28, align 8
  %30 = call i64* @_ZNSt10_Iter_baseIPmLb0EE7_S_baseES0_(i64* %29)
  store i64* %30, i64** %2
  %31 = load i32, i32* @x.374
  %32 = load i32, i32* @y.375
  %33 = add i32 %31, 2038581419
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 2038581419
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -389845652, i32 -392463718
  store i32 %45, i32* %15
  br label %52

; <label>:46:                                     ; preds = %16
  %47 = load volatile i64*, i64** %2
  ret i64* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca i64*, align 8
  store i64* %0, i64** %49, align 8
  %50 = load i64*, i64** %49, align 8
  %51 = call i64* @_ZNSt10_Iter_baseIPmLb0EE7_S_baseES0_(i64* %50)
  store i32 -1242694444, i32* %15
  br label %52

; <label>:52:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIPmLb0EE7_S_baseES0_(i64*) #0 comdat align 2 {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseImSaImEE13_M_deallocateEPmm(%"struct.std::_Vector_base.21"*, i64*, i64) #1 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca %"struct.std::_Vector_base.21"*
  %6 = alloca %"struct.std::_Vector_base.21"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.21"* %0, %"struct.std::_Vector_base.21"** %6, align 8
  store i64* %1, i64** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.21"*, %"struct.std::_Vector_base.21"** %6, align 8
  store %"struct.std::_Vector_base.21"* %9, %"struct.std::_Vector_base.21"** %5
  %10 = load i64*, i64** %7, align 8
  store i64* %10, i64** %4
  %11 = alloca i32
  store i32 2077281396, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 2077281396, label %15
    i32 779182544, label %19
    i32 -1316606235, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64*, i64** %4
  %17 = icmp ne i64* %16, null
  %18 = select i1 %17, i32 779182544, i32 -1316606235
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.21"*, %"struct.std::_Vector_base.21"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %21 to %"class.std::allocator.22"*
  %23 = load i64*, i64** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm(%"class.std::allocator.22"* dereferenceable(1) %22, i64* %23, i64 %24)
  store i32 -1316606235, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm(%"class.std::allocator.22"* dereferenceable(1), i64*, i64) #1 comdat align 2 {
  %4 = alloca %"class.std::allocator.22"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.22"* %0, %"class.std::allocator.22"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %4, align 8
  %8 = bitcast %"class.std::allocator.22"* %7 to %"class.__gnu_cxx::new_allocator.23"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm(%"class.__gnu_cxx::new_allocator.23"* %8, i64* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm(%"class.__gnu_cxx::new_allocator.23"*, i64*, i64) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %0, %"class.__gnu_cxx::new_allocator.23"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = bitcast i64* %8 to i8*
  call void @_ZdlPv(i8* %9) #10
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPmmEvT_S1_RSaIT0_E(i64*, i64*, %"class.std::allocator.22"* dereferenceable(1)) #1 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca %"class.std::allocator.22"*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store %"class.std::allocator.22"* %2, %"class.std::allocator.22"** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = load i64*, i64** %5, align 8
  call void @_ZSt8_DestroyIPmEvT_S1_(i64* %7, i64* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPmEvT_S1_(i64*, i64*) #1 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.386
  %6 = load i32, i32* @y.387
  %7 = add i32 %5, 1765322341
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1765322341
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1447086297, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %53
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1447086297, label %19
    i32 1398384832, label %27
    i32 305068049, label %47
    i32 -132845795, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %53

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1398384832, i32 -132845795
  store i32 %26, i32* %15
  br label %53

; <label>:27:                                     ; preds = %16
  %28 = alloca i64*, align 8
  %29 = alloca i64*, align 8
  store i64* %0, i64** %28, align 8
  store i64* %1, i64** %29, align 8
  %30 = load i64*, i64** %28, align 8
  %31 = load i64*, i64** %29, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPmEEvT_S3_(i64* %30, i64* %31)
  %32 = load i32, i32* @x.386
  %33 = load i32, i32* @y.387
  %34 = sub i32 %32, 1695407785
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 1695407785
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 305068049, i32 -132845795
  store i32 %46, i32* %15
  br label %53

; <label>:47:                                     ; preds = %16
  ret void

; <label>:48:                                     ; preds = %16
  %49 = alloca i64*, align 8
  %50 = alloca i64*, align 8
  store i64* %0, i64** %49, align 8
  store i64* %1, i64** %50, align 8
  %51 = load i64*, i64** %49, align 8
  %52 = load i64*, i64** %50, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPmEEvT_S3_(i64* %51, i64* %52)
  store i32 1398384832, i32* %15
  br label %53

; <label>:53:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPmEEvT_S3_(i64*, i64*) #0 comdat align 2 {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorImSaImEEEC2Ev(%"class.__gnu_cxx::new_allocator.18"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.390
  %5 = load i32, i32* @y.391
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 574525792, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %70
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 574525792, label %17
    i32 1469676077, label %37
    i32 -1531147521, label %66
    i32 1619738732, label %67
  ]

; <label>:16:                                     ; preds = %14
  br label %70

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 1469676077, i32 1619738732
  store i32 %36, i32* %13
  br label %70

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %38, align 8
  %40 = load i32, i32* @x.390
  %41 = load i32, i32* @y.391
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 -1531147521, i32 1619738732
  store i32 %65, i32* %13
  br label %70

; <label>:66:                                     ; preds = %14
  ret void

; <label>:67:                                     ; preds = %14
  %68 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %68, align 8
  %69 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %68, align 8
  store i32 1469676077, i32* %13
  br label %70

; <label>:70:                                     ; preds = %67, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorImSaImEEED2Ev(%"class.__gnu_cxx::new_allocator.18"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.392
  %5 = load i32, i32* @y.393
  %6 = sub i32 %4, 1055894156
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1055894156
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -485652927, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %71
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -485652927, label %18
    i32 -762032581, label %38
    i32 1447391997, label %67
    i32 -914561030, label %68
  ]

; <label>:17:                                     ; preds = %15
  br label %71

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -762032581, i32 -914561030
  store i32 %37, i32* %14
  br label %71

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %39, align 8
  %41 = load i32, i32* @x.392
  %42 = load i32, i32* @y.393
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 1447391997, i32 -914561030
  store i32 %66, i32* %14
  br label %71

; <label>:67:                                     ; preds = %15
  ret void

; <label>:68:                                     ; preds = %15
  %69 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %69, align 8
  %70 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %69, align 8
  store i32 -762032581, i32* %14
  br label %71

; <label>:71:                                     ; preds = %68, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.16"*, i64, %"class.std::allocator.17"* dereferenceable(1)) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.16"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.17"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.16"* %0, %"struct.std::_Vector_base.16"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.17"* %2, %"class.std::allocator.17"** %6, align 8
  %9 = load %"struct.std::_Vector_base.16"*, %"struct.std::_Vector_base.16"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %6, align 8
  call void @_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %10, %"class.std::allocator.17"* dereferenceable(1) %11) #10
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.16"* %9, i64 %12)
          to label %13 unwind label %43

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @x.394
  %15 = load i32, i32* @y.395
  %16 = sub i32 %14, -1928200786
  %17 = sub i32 %16, 1
  %18 = add i32 %17, -1928200786
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  br i1 %26, label %28, label %52

; <label>:28:                                     ; preds = %13, %52
  %29 = load i32, i32* @x.394
  %30 = load i32, i32* @y.395
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  br i1 %40, label %42, label %52

; <label>:42:                                     ; preds = %28
  ret void

; <label>:43:                                     ; preds = %3
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = extractvalue { i8*, i32 } %44, 0
  store i8* %45, i8** %7, align 8
  %46 = extractvalue { i8*, i32 } %44, 1
  store i32 %46, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %10) #10
  br label %47

; <label>:47:                                     ; preds = %43
  %48 = load i8*, i8** %7, align 8
  %49 = load i32, i32* %8, align 4
  %50 = insertvalue { i8*, i32 } undef, i8* %48, 0
  %51 = insertvalue { i8*, i32 } %50, i32 %49, 1
  resume { i8*, i32 } %51

; <label>:52:                                     ; preds = %28, %13
  br label %28
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_ImSaImEESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.15"*, i64, %"class.std::vector.20"* dereferenceable(24)) #1 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.396
  %7 = load i32, i32* @y.397
  %8 = add i32 %6, -550557967
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -550557967
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 802412867, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %90
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 802412867, label %20
    i32 115235044, label %28
    i32 -743471344, label %72
    i32 560484798, label %73
  ]

; <label>:19:                                     ; preds = %17
  br label %90

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 115235044, i32 560484798
  store i32 %27, i32* %16
  br label %90

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.15"*, align 8
  %30 = alloca i64, align 8
  %31 = alloca %"class.std::vector.20"*, align 8
  store %"class.std::vector.15"* %0, %"class.std::vector.15"** %29, align 8
  store i64 %1, i64* %30, align 8
  store %"class.std::vector.20"* %2, %"class.std::vector.20"** %31, align 8
  %32 = load %"class.std::vector.15"*, %"class.std::vector.15"** %29, align 8
  %33 = bitcast %"class.std::vector.15"* %32 to %"struct.std::_Vector_base.16"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load %"class.std::vector.20"*, %"class.std::vector.20"** %35, align 8
  %37 = load i64, i64* %30, align 8
  %38 = load %"class.std::vector.20"*, %"class.std::vector.20"** %31, align 8
  %39 = bitcast %"class.std::vector.15"* %32 to %"struct.std::_Vector_base.16"*
  %40 = call dereferenceable(1) %"class.std::allocator.17"* @_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.16"* %39) #10
  %41 = call %"class.std::vector.20"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorImSaImEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.20"* %36, i64 %37, %"class.std::vector.20"* dereferenceable(24) %38, %"class.std::allocator.17"* dereferenceable(1) %40)
  %42 = bitcast %"class.std::vector.15"* %32 to %"struct.std::_Vector_base.16"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %43, i32 0, i32 1
  store %"class.std::vector.20"* %41, %"class.std::vector.20"** %44, align 8
  %45 = load i32, i32* @x.396
  %46 = load i32, i32* @y.397
  %47 = sub i32 %45, -1996860013
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -1996860013
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -743471344, i32 560484798
  store i32 %71, i32* %16
  br label %90

; <label>:72:                                     ; preds = %17
  ret void

; <label>:73:                                     ; preds = %17
  %74 = alloca %"class.std::vector.15"*, align 8
  %75 = alloca i64, align 8
  %76 = alloca %"class.std::vector.20"*, align 8
  store %"class.std::vector.15"* %0, %"class.std::vector.15"** %74, align 8
  store i64 %1, i64* %75, align 8
  store %"class.std::vector.20"* %2, %"class.std::vector.20"** %76, align 8
  %77 = load %"class.std::vector.15"*, %"class.std::vector.15"** %74, align 8
  %78 = bitcast %"class.std::vector.15"* %77 to %"struct.std::_Vector_base.16"*
  %79 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %78, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %79, i32 0, i32 0
  %81 = load %"class.std::vector.20"*, %"class.std::vector.20"** %80, align 8
  %82 = load i64, i64* %75, align 8
  %83 = load %"class.std::vector.20"*, %"class.std::vector.20"** %76, align 8
  %84 = bitcast %"class.std::vector.15"* %77 to %"struct.std::_Vector_base.16"*
  %85 = call dereferenceable(1) %"class.std::allocator.17"* @_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.16"* %84) #10
  %86 = call %"class.std::vector.20"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorImSaImEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.20"* %81, i64 %82, %"class.std::vector.20"* dereferenceable(24) %83, %"class.std::allocator.17"* dereferenceable(1) %85)
  %87 = bitcast %"class.std::vector.15"* %77 to %"struct.std::_Vector_base.16"*
  %88 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %87, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %88, i32 0, i32 1
  store %"class.std::vector.20"* %86, %"class.std::vector.20"** %89, align 8
  store i32 115235044, i32* %16
  br label %90

; <label>:90:                                     ; preds = %73, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EED2Ev(%"struct.std::_Vector_base.16"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.16"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.16"* %0, %"struct.std::_Vector_base.16"** %2, align 8
  %5 = load %"struct.std::_Vector_base.16"*, %"struct.std::_Vector_base.16"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::vector.20"*, %"class.std::vector.20"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::vector.20"*, %"class.std::vector.20"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::vector.20"*, %"class.std::vector.20"** %13, align 8
  %15 = ptrtoint %"class.std::vector.20"* %11 to i64
  %16 = ptrtoint %"class.std::vector.20"* %14 to i64
  %17 = sub i64 %15, 1635064585902354954
  %18 = sub i64 %17, %16
  %19 = add i64 %18, 1635064585902354954
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 24
  invoke void @_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.16"* %5, %"class.std::vector.20"* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %23) #10
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %28) #10
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %30) #8
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"*, %"class.std::allocator.17"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.17"*, align 8
  store %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.17"* %1, %"class.std::allocator.17"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %5 to %"class.std::allocator.17"*
  %7 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %4, align 8
  call void @_ZNSaISt6vectorImSaImEEEC2ERKS2_(%"class.std::allocator.17"* %6, %"class.std::allocator.17"* dereferenceable(1) %7) #10
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %5, i32 0, i32 0
  store %"class.std::vector.20"* null, %"class.std::vector.20"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %5, i32 0, i32 1
  store %"class.std::vector.20"* null, %"class.std::vector.20"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %5, i32 0, i32 2
  store %"class.std::vector.20"* null, %"class.std::vector.20"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.16"*, i64) #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.402
  %6 = load i32, i32* @y.403
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1508137867, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %106
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1508137867, label %18
    i32 1557215778, label %38
    i32 132777761, label %85
    i32 -116519273, label %86
  ]

; <label>:17:                                     ; preds = %15
  br label %106

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1557215778, i32 -116519273
  store i32 %37, i32* %14
  br label %106

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base.16"*, align 8
  %40 = alloca i64, align 8
  store %"struct.std::_Vector_base.16"* %0, %"struct.std::_Vector_base.16"** %39, align 8
  store i64 %1, i64* %40, align 8
  %41 = load %"struct.std::_Vector_base.16"*, %"struct.std::_Vector_base.16"** %39, align 8
  %42 = load i64, i64* %40, align 8
  %43 = call %"class.std::vector.20"* @_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.16"* %41, i64 %42)
  %44 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %41, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %44, i32 0, i32 0
  store %"class.std::vector.20"* %43, %"class.std::vector.20"** %45, align 8
  %46 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %41, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %46, i32 0, i32 0
  %48 = load %"class.std::vector.20"*, %"class.std::vector.20"** %47, align 8
  %49 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %41, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %49, i32 0, i32 1
  store %"class.std::vector.20"* %48, %"class.std::vector.20"** %50, align 8
  %51 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %41, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %51, i32 0, i32 0
  %53 = load %"class.std::vector.20"*, %"class.std::vector.20"** %52, align 8
  %54 = load i64, i64* %40, align 8
  %55 = getelementptr inbounds %"class.std::vector.20", %"class.std::vector.20"* %53, i64 %54
  %56 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %41, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %56, i32 0, i32 2
  store %"class.std::vector.20"* %55, %"class.std::vector.20"** %57, align 8
  %58 = load i32, i32* @x.402
  %59 = load i32, i32* @y.403
  %60 = add i32 %58, 606500132
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, 606500132
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 132777761, i32 -116519273
  store i32 %84, i32* %14
  br label %106

; <label>:85:                                     ; preds = %15
  ret void

; <label>:86:                                     ; preds = %15
  %87 = alloca %"struct.std::_Vector_base.16"*, align 8
  %88 = alloca i64, align 8
  store %"struct.std::_Vector_base.16"* %0, %"struct.std::_Vector_base.16"** %87, align 8
  store i64 %1, i64* %88, align 8
  %89 = load %"struct.std::_Vector_base.16"*, %"struct.std::_Vector_base.16"** %87, align 8
  %90 = load i64, i64* %88, align 8
  %91 = call %"class.std::vector.20"* @_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.16"* %89, i64 %90)
  %92 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %89, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %92, i32 0, i32 0
  store %"class.std::vector.20"* %91, %"class.std::vector.20"** %93, align 8
  %94 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %89, i32 0, i32 0
  %95 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %94, i32 0, i32 0
  %96 = load %"class.std::vector.20"*, %"class.std::vector.20"** %95, align 8
  %97 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %89, i32 0, i32 0
  %98 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %97, i32 0, i32 1
  store %"class.std::vector.20"* %96, %"class.std::vector.20"** %98, align 8
  %99 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %89, i32 0, i32 0
  %100 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %99, i32 0, i32 0
  %101 = load %"class.std::vector.20"*, %"class.std::vector.20"** %100, align 8
  %102 = load i64, i64* %88, align 8
  %103 = getelementptr inbounds %"class.std::vector.20", %"class.std::vector.20"* %101, i64 %102
  %104 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %89, i32 0, i32 0
  %105 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %104, i32 0, i32 2
  store %"class.std::vector.20"* %103, %"class.std::vector.20"** %105, align 8
  store i32 1557215778, i32* %14
  br label %106

; <label>:106:                                    ; preds = %86, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %3 to %"class.std::allocator.17"*
  call void @_ZNSaISt6vectorImSaImEEED2Ev(%"class.std::allocator.17"* %4) #10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorImSaImEEEC2ERKS2_(%"class.std::allocator.17"*, %"class.std::allocator.17"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.406
  %6 = load i32, i32* @y.407
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -47465050, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %55
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -47465050, label %18
    i32 -1342213467, label %26
    i32 -1126136574, label %47
    i32 367193274, label %48
  ]

; <label>:17:                                     ; preds = %15
  br label %55

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1342213467, i32 367193274
  store i32 %25, i32* %14
  br label %55

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.17"*, align 8
  %28 = alloca %"class.std::allocator.17"*, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %27, align 8
  store %"class.std::allocator.17"* %1, %"class.std::allocator.17"** %28, align 8
  %29 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %27, align 8
  %30 = bitcast %"class.std::allocator.17"* %29 to %"class.__gnu_cxx::new_allocator.18"*
  %31 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %28, align 8
  %32 = bitcast %"class.std::allocator.17"* %31 to %"class.__gnu_cxx::new_allocator.18"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorImSaImEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.18"* %30, %"class.__gnu_cxx::new_allocator.18"* dereferenceable(1) %32) #10
  %33 = load i32, i32* @x.406
  %34 = load i32, i32* @y.407
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -1126136574, i32 367193274
  store i32 %46, i32* %14
  br label %55

; <label>:47:                                     ; preds = %15
  ret void

; <label>:48:                                     ; preds = %15
  %49 = alloca %"class.std::allocator.17"*, align 8
  %50 = alloca %"class.std::allocator.17"*, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %49, align 8
  store %"class.std::allocator.17"* %1, %"class.std::allocator.17"** %50, align 8
  %51 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %49, align 8
  %52 = bitcast %"class.std::allocator.17"* %51 to %"class.__gnu_cxx::new_allocator.18"*
  %53 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %50, align 8
  %54 = bitcast %"class.std::allocator.17"* %53 to %"class.__gnu_cxx::new_allocator.18"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorImSaImEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.18"* %52, %"class.__gnu_cxx::new_allocator.18"* dereferenceable(1) %54) #10
  store i32 -1342213467, i32* %14
  br label %55

; <label>:55:                                     ; preds = %48, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorImSaImEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.408
  %6 = load i32, i32* @y.409
  %7 = sub i32 %5, -762919347
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -762919347
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1721264463, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %75
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1721264463, label %19
    i32 -1806980409, label %39
    i32 583931271, label %70
    i32 1779171817, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %75

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1806980409, i32 1779171817
  store i32 %38, i32* %15
  br label %75

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  %41 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %40, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %1, %"class.__gnu_cxx::new_allocator.18"** %41, align 8
  %42 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %40, align 8
  %43 = load i32, i32* @x.408
  %44 = load i32, i32* @y.409
  %45 = sub i32 %43, 1430712741
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 1430712741
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 583931271, i32 1779171817
  store i32 %69, i32* %15
  br label %75

; <label>:70:                                     ; preds = %16
  ret void

; <label>:71:                                     ; preds = %16
  %72 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  %73 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %72, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %1, %"class.__gnu_cxx::new_allocator.18"** %73, align 8
  %74 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %72, align 8
  store i32 -1806980409, i32* %15
  br label %75

; <label>:75:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.20"* @_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.16"*, i64) #1 comdat align 2 {
  %3 = alloca %"class.std::vector.20"*
  %4 = alloca %"class.std::vector.20"*
  %5 = alloca i64
  %6 = alloca %"struct.std::_Vector_base.16"*
  %7 = alloca %"struct.std::_Vector_base.16"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.16"* %0, %"struct.std::_Vector_base.16"** %7, align 8
  store i64 %1, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.16"*, %"struct.std::_Vector_base.16"** %7, align 8
  store %"struct.std::_Vector_base.16"* %9, %"struct.std::_Vector_base.16"** %6
  %10 = load i64, i64* %8, align 8
  store i64 %10, i64* %5
  %11 = alloca i32
  store i32 59442256, i32* %11
  %12 = alloca %"class.std::vector.20"*
  br label %13

; <label>:13:                                     ; preds = %2, %136
  %14 = load i32, i32* %11
  switch i32 %14, label %15 [
    i32 59442256, label %16
    i32 -1168947214, label %20
    i32 -1420023820, label %35
    i32 109522855, label %67
    i32 -1754034969, label %69
    i32 -183516513, label %70
    i32 1951208119, label %99
    i32 622222843, label %127
    i32 -389906254, label %129
    i32 1782586682, label %135
  ]

; <label>:15:                                     ; preds = %13
  br label %136

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = icmp ne i64 %17, 0
  %19 = select i1 %18, i32 -1168947214, i32 -1754034969
  store i32 %19, i32* %11
  br label %136

; <label>:20:                                     ; preds = %13
  %21 = load i32, i32* @x.410
  %22 = load i32, i32* @y.411
  %23 = sub i32 0, 1
  %24 = add i32 %21, %23
  %25 = sub i32 %21, 1
  %26 = mul i32 %21, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %22, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  %34 = select i1 %32, i32 -1420023820, i32 -389906254
  store i32 %34, i32* %11
  br label %136

; <label>:35:                                     ; preds = %13
  %36 = load volatile %"struct.std::_Vector_base.16"*, %"struct.std::_Vector_base.16"** %6
  %37 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %37 to %"class.std::allocator.17"*
  %39 = load i64, i64* %8, align 8
  %40 = call %"class.std::vector.20"* @_ZNSt16allocator_traitsISaISt6vectorImSaImEEEE8allocateERS3_m(%"class.std::allocator.17"* dereferenceable(1) %38, i64 %39)
  store %"class.std::vector.20"* %40, %"class.std::vector.20"** %4
  %41 = load i32, i32* @x.410
  %42 = load i32, i32* @y.411
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 109522855, i32 -389906254
  store i32 %66, i32* %11
  br label %136

; <label>:67:                                     ; preds = %13
  store i32 -183516513, i32* %11
  %68 = load volatile %"class.std::vector.20"*, %"class.std::vector.20"** %4
  store %"class.std::vector.20"* %68, %"class.std::vector.20"** %12
  br label %136

; <label>:69:                                     ; preds = %13
  store i32 -183516513, i32* %11
  store %"class.std::vector.20"* null, %"class.std::vector.20"** %12
  br label %136

; <label>:70:                                     ; preds = %13
  %71 = load %"class.std::vector.20"*, %"class.std::vector.20"** %12
  store %"class.std::vector.20"* %71, %"class.std::vector.20"** %3
  %72 = load i32, i32* @x.410
  %73 = load i32, i32* @y.411
  %74 = add i32 %72, 2042933025
  %75 = sub i32 %74, 1
  %76 = sub i32 %75, 2042933025
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = xor i1 %80, true
  %83 = xor i1 %81, true
  %84 = xor i1 false, true
  %85 = and i1 %82, false
  %86 = and i1 %80, %84
  %87 = and i1 %83, false
  %88 = and i1 %81, %84
  %89 = or i1 %85, %86
  %90 = or i1 %87, %88
  %91 = xor i1 %89, %90
  %92 = or i1 %82, %83
  %93 = xor i1 %92, true
  %94 = or i1 false, %84
  %95 = and i1 %93, %94
  %96 = or i1 %91, %95
  %97 = or i1 %80, %81
  %98 = select i1 %96, i32 1951208119, i32 1782586682
  store i32 %98, i32* %11
  br label %136

; <label>:99:                                     ; preds = %13
  %100 = load i32, i32* @x.410
  %101 = load i32, i32* @y.411
  %102 = add i32 %100, 148712256
  %103 = sub i32 %102, 1
  %104 = sub i32 %103, 148712256
  %105 = sub i32 %100, 1
  %106 = mul i32 %100, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %101, 10
  %110 = xor i1 %108, true
  %111 = xor i1 %109, true
  %112 = xor i1 false, true
  %113 = and i1 %110, false
  %114 = and i1 %108, %112
  %115 = and i1 %111, false
  %116 = and i1 %109, %112
  %117 = or i1 %113, %114
  %118 = or i1 %115, %116
  %119 = xor i1 %117, %118
  %120 = or i1 %110, %111
  %121 = xor i1 %120, true
  %122 = or i1 false, %112
  %123 = and i1 %121, %122
  %124 = or i1 %119, %123
  %125 = or i1 %108, %109
  %126 = select i1 %124, i32 622222843, i32 1782586682
  store i32 %126, i32* %11
  br label %136

; <label>:127:                                    ; preds = %13
  %128 = load volatile %"class.std::vector.20"*, %"class.std::vector.20"** %3
  ret %"class.std::vector.20"* %128

; <label>:129:                                    ; preds = %13
  %130 = load volatile %"struct.std::_Vector_base.16"*, %"struct.std::_Vector_base.16"** %6
  %131 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %130, i32 0, i32 0
  %132 = bitcast %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %131 to %"class.std::allocator.17"*
  %133 = load i64, i64* %8, align 8
  %134 = call %"class.std::vector.20"* @_ZNSt16allocator_traitsISaISt6vectorImSaImEEEE8allocateERS3_m(%"class.std::allocator.17"* dereferenceable(1) %132, i64 %133)
  store i32 -1420023820, i32* %11
  br label %136

; <label>:135:                                    ; preds = %13
  store i32 1951208119, i32* %11
  br label %136

; <label>:136:                                    ; preds = %135, %129, %99, %70, %69, %67, %35, %20, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.20"* @_ZNSt16allocator_traitsISaISt6vectorImSaImEEEE8allocateERS3_m(%"class.std::allocator.17"* dereferenceable(1), i64) #1 comdat align 2 {
  %3 = alloca %"class.std::allocator.17"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %3, align 8
  %6 = bitcast %"class.std::allocator.17"* %5 to %"class.__gnu_cxx::new_allocator.18"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector.20"* @_ZN9__gnu_cxx13new_allocatorISt6vectorImSaImEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.18"* %6, i64 %7, i8* null)
  ret %"class.std::vector.20"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.20"* @_ZN9__gnu_cxx13new_allocatorISt6vectorImSaImEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.18"*, i64, i8*) #1 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorImSaImEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.18"* %9) #10
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -1186960864, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %60
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1186960864, label %16
    i32 -1146429017, label %21
    i32 455240920, label %37
    i32 -730392502, label %53
    i32 361905085, label %54
    i32 -879501080, label %59
  ]

; <label>:15:                                     ; preds = %13
  br label %60

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -1146429017, i32 361905085
  store i32 %20, i32* %12
  br label %60

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.414
  %23 = load i32, i32* @y.415
  %24 = sub i32 %22, 284345700
  %25 = sub i32 %24, 1
  %26 = add i32 %25, 284345700
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 455240920, i32 -879501080
  store i32 %36, i32* %12
  br label %60

; <label>:37:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #11
  %38 = load i32, i32* @x.414
  %39 = load i32, i32* @y.415
  %40 = add i32 %38, 1550512545
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 1550512545
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -730392502, i32 -879501080
  store i32 %52, i32* %12
  br label %60

; <label>:53:                                     ; preds = %13
  unreachable

; <label>:54:                                     ; preds = %13
  %55 = load i64, i64* %7, align 8
  %56 = mul i64 %55, 24
  %57 = call i8* @_Znwm(i64 %56)
  %58 = bitcast i8* %57 to %"class.std::vector.20"*
  ret %"class.std::vector.20"* %58

; <label>:59:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #11
  store i32 455240920, i32* %12
  br label %60

; <label>:60:                                     ; preds = %59, %37, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorImSaImEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.18"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.20"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorImSaImEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.20"*, i64, %"class.std::vector.20"* dereferenceable(24), %"class.std::allocator.17"* dereferenceable(1)) #1 comdat {
  %5 = alloca %"class.std::vector.20"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.418
  %9 = load i32, i32* @y.419
  %10 = add i32 %8, -639817236
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -639817236
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 985509898, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %76
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 985509898, label %22
    i32 396016689, label %42
    i32 -879843255, label %65
    i32 -1003821233, label %67
  ]

; <label>:21:                                     ; preds = %19
  br label %76

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 396016689, i32 -1003821233
  store i32 %41, i32* %18
  br label %76

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.std::vector.20"*, align 8
  %44 = alloca i64, align 8
  %45 = alloca %"class.std::vector.20"*, align 8
  %46 = alloca %"class.std::allocator.17"*, align 8
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %43, align 8
  store i64 %1, i64* %44, align 8
  store %"class.std::vector.20"* %2, %"class.std::vector.20"** %45, align 8
  store %"class.std::allocator.17"* %3, %"class.std::allocator.17"** %46, align 8
  %47 = load %"class.std::vector.20"*, %"class.std::vector.20"** %43, align 8
  %48 = load i64, i64* %44, align 8
  %49 = load %"class.std::vector.20"*, %"class.std::vector.20"** %45, align 8
  %50 = call %"class.std::vector.20"* @_ZSt20uninitialized_fill_nIPSt6vectorImSaImEEmS2_ET_S4_T0_RKT1_(%"class.std::vector.20"* %47, i64 %48, %"class.std::vector.20"* dereferenceable(24) %49)
  store %"class.std::vector.20"* %50, %"class.std::vector.20"** %5
  %51 = load i32, i32* @x.418
  %52 = load i32, i32* @y.419
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -879843255, i32 -1003821233
  store i32 %64, i32* %18
  br label %76

; <label>:65:                                     ; preds = %19
  %66 = load volatile %"class.std::vector.20"*, %"class.std::vector.20"** %5
  ret %"class.std::vector.20"* %66

; <label>:67:                                     ; preds = %19
  %68 = alloca %"class.std::vector.20"*, align 8
  %69 = alloca i64, align 8
  %70 = alloca %"class.std::vector.20"*, align 8
  %71 = alloca %"class.std::allocator.17"*, align 8
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %68, align 8
  store i64 %1, i64* %69, align 8
  store %"class.std::vector.20"* %2, %"class.std::vector.20"** %70, align 8
  store %"class.std::allocator.17"* %3, %"class.std::allocator.17"** %71, align 8
  %72 = load %"class.std::vector.20"*, %"class.std::vector.20"** %68, align 8
  %73 = load i64, i64* %69, align 8
  %74 = load %"class.std::vector.20"*, %"class.std::vector.20"** %70, align 8
  %75 = call %"class.std::vector.20"* @_ZSt20uninitialized_fill_nIPSt6vectorImSaImEEmS2_ET_S4_T0_RKT1_(%"class.std::vector.20"* %72, i64 %73, %"class.std::vector.20"* dereferenceable(24) %74)
  store i32 396016689, i32* %18
  br label %76

; <label>:76:                                     ; preds = %67, %42, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.17"* @_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.16"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.16"*, align 8
  store %"struct.std::_Vector_base.16"* %0, %"struct.std::_Vector_base.16"** %2, align 8
  %3 = load %"struct.std::_Vector_base.16"*, %"struct.std::_Vector_base.16"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %4 to %"class.std::allocator.17"*
  ret %"class.std::allocator.17"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.20"* @_ZSt20uninitialized_fill_nIPSt6vectorImSaImEEmS2_ET_S4_T0_RKT1_(%"class.std::vector.20"*, i64, %"class.std::vector.20"* dereferenceable(24)) #1 comdat {
  %4 = alloca %"class.std::vector.20"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.422
  %8 = load i32, i32* @y.423
  %9 = add i32 %7, -336298713
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -336298713
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 829398142, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %87
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 829398142, label %21
    i32 1133859147, label %41
    i32 1460360850, label %76
    i32 -10826001, label %78
  ]

; <label>:20:                                     ; preds = %18
  br label %87

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1133859147, i32 -10826001
  store i32 %40, i32* %17
  br label %87

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::vector.20"*, align 8
  %43 = alloca i64, align 8
  %44 = alloca %"class.std::vector.20"*, align 8
  %45 = alloca i8, align 1
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %42, align 8
  store i64 %1, i64* %43, align 8
  store %"class.std::vector.20"* %2, %"class.std::vector.20"** %44, align 8
  store i8 1, i8* %45, align 1
  %46 = load %"class.std::vector.20"*, %"class.std::vector.20"** %42, align 8
  %47 = load i64, i64* %43, align 8
  %48 = load %"class.std::vector.20"*, %"class.std::vector.20"** %44, align 8
  %49 = call %"class.std::vector.20"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorImSaImEEmS4_EET_S6_T0_RKT1_(%"class.std::vector.20"* %46, i64 %47, %"class.std::vector.20"* dereferenceable(24) %48)
  store %"class.std::vector.20"* %49, %"class.std::vector.20"** %4
  %50 = load i32, i32* @x.422
  %51 = load i32, i32* @y.423
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 1460360850, i32 -10826001
  store i32 %75, i32* %17
  br label %87

; <label>:76:                                     ; preds = %18
  %77 = load volatile %"class.std::vector.20"*, %"class.std::vector.20"** %4
  ret %"class.std::vector.20"* %77

; <label>:78:                                     ; preds = %18
  %79 = alloca %"class.std::vector.20"*, align 8
  %80 = alloca i64, align 8
  %81 = alloca %"class.std::vector.20"*, align 8
  %82 = alloca i8, align 1
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %79, align 8
  store i64 %1, i64* %80, align 8
  store %"class.std::vector.20"* %2, %"class.std::vector.20"** %81, align 8
  store i8 1, i8* %82, align 1
  %83 = load %"class.std::vector.20"*, %"class.std::vector.20"** %79, align 8
  %84 = load i64, i64* %80, align 8
  %85 = load %"class.std::vector.20"*, %"class.std::vector.20"** %81, align 8
  %86 = call %"class.std::vector.20"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorImSaImEEmS4_EET_S6_T0_RKT1_(%"class.std::vector.20"* %83, i64 %84, %"class.std::vector.20"* dereferenceable(24) %85)
  store i32 1133859147, i32* %17
  br label %87

; <label>:87:                                     ; preds = %78, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.20"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorImSaImEEmS4_EET_S6_T0_RKT1_(%"class.std::vector.20"*, i64, %"class.std::vector.20"* dereferenceable(24)) #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.424
  %5 = load i32, i32* @y.425
  %6 = add i32 %4, 2120564507
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 2120564507
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 false, true
  %17 = and i1 %14, false
  %18 = and i1 %12, %16
  %19 = and i1 %15, false
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 false, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %194

; <label>:30:                                     ; preds = %3, %194
  %31 = alloca %"class.std::vector.20"*, align 8
  %32 = alloca i64, align 8
  %33 = alloca %"class.std::vector.20"*, align 8
  %34 = alloca %"class.std::vector.20"*, align 8
  %35 = alloca i8*
  %36 = alloca i32
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %31, align 8
  store i64 %1, i64* %32, align 8
  store %"class.std::vector.20"* %2, %"class.std::vector.20"** %33, align 8
  %37 = load %"class.std::vector.20"*, %"class.std::vector.20"** %31, align 8
  store %"class.std::vector.20"* %37, %"class.std::vector.20"** %34, align 8
  %38 = load i32, i32* @x.424
  %39 = load i32, i32* @y.425
  %40 = sub i32 %38, -2087858567
  %41 = sub i32 %40, 1
  %42 = add i32 %41, -2087858567
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %194

; <label>:52:                                     ; preds = %30
  br label %53

; <label>:53:                                     ; preds = %102, %52
  %54 = load i64, i64* %32, align 8
  %55 = icmp ugt i64 %54, 0
  br i1 %55, label %56, label %119

; <label>:56:                                     ; preds = %53
  %57 = load i32, i32* @x.424
  %58 = load i32, i32* @y.425
  %59 = sub i32 0, 1
  %60 = add i32 %57, %59
  %61 = sub i32 %57, 1
  %62 = mul i32 %57, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %58, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  br i1 %68, label %70, label %202

; <label>:70:                                     ; preds = %56, %202
  %71 = load %"class.std::vector.20"*, %"class.std::vector.20"** %34, align 8
  %72 = call %"class.std::vector.20"* @_ZSt11__addressofISt6vectorImSaImEEEPT_RS3_(%"class.std::vector.20"* dereferenceable(24) %71) #10
  %73 = load %"class.std::vector.20"*, %"class.std::vector.20"** %33, align 8
  %74 = load i32, i32* @x.424
  %75 = load i32, i32* @y.425
  %76 = sub i32 %74, 1008710802
  %77 = sub i32 %76, 1
  %78 = add i32 %77, 1008710802
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = xor i1 %82, true
  %85 = xor i1 %83, true
  %86 = xor i1 true, true
  %87 = and i1 %84, true
  %88 = and i1 %82, %86
  %89 = and i1 %85, true
  %90 = and i1 %83, %86
  %91 = or i1 %87, %88
  %92 = or i1 %89, %90
  %93 = xor i1 %91, %92
  %94 = or i1 %84, %85
  %95 = xor i1 %94, true
  %96 = or i1 true, %86
  %97 = and i1 %95, %96
  %98 = or i1 %93, %97
  %99 = or i1 %82, %83
  br i1 %98, label %100, label %202

; <label>:100:                                    ; preds = %70
  invoke void @_ZSt10_ConstructISt6vectorImSaImEEJRKS2_EEvPT_DpOT0_(%"class.std::vector.20"* %72, %"class.std::vector.20"* dereferenceable(24) %73)
          to label %101 unwind label %109

; <label>:101:                                    ; preds = %100
  br label %102

; <label>:102:                                    ; preds = %101
  %103 = load i64, i64* %32, align 8
  %104 = sub i64 0, -1
  %105 = sub i64 %103, %104
  %106 = add i64 %103, -1
  store i64 %105, i64* %32, align 8
  %107 = load %"class.std::vector.20"*, %"class.std::vector.20"** %34, align 8
  %108 = getelementptr inbounds %"class.std::vector.20", %"class.std::vector.20"* %107, i32 1
  store %"class.std::vector.20"* %108, %"class.std::vector.20"** %34, align 8
  br label %53

; <label>:109:                                    ; preds = %100
  %110 = landingpad { i8*, i32 }
          catch i8* null
  %111 = extractvalue { i8*, i32 } %110, 0
  store i8* %111, i8** %35, align 8
  %112 = extractvalue { i8*, i32 } %110, 1
  store i32 %112, i32* %36, align 4
  br label %113

; <label>:113:                                    ; preds = %109
  %114 = load i8*, i8** %35, align 8
  %115 = call i8* @__cxa_begin_catch(i8* %114) #10
  %116 = load %"class.std::vector.20"*, %"class.std::vector.20"** %31, align 8
  %117 = load %"class.std::vector.20"*, %"class.std::vector.20"** %34, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorImSaImEEEvT_S4_(%"class.std::vector.20"* %116, %"class.std::vector.20"* %117)
          to label %118 unwind label %121

; <label>:118:                                    ; preds = %113
  invoke void @__cxa_rethrow() #11
          to label %193 unwind label %121

; <label>:119:                                    ; preds = %53
  %120 = load %"class.std::vector.20"*, %"class.std::vector.20"** %34, align 8
  ret %"class.std::vector.20"* %120

; <label>:121:                                    ; preds = %118, %113
  %122 = landingpad { i8*, i32 }
          cleanup
  %123 = extractvalue { i8*, i32 } %122, 0
  store i8* %123, i8** %35, align 8
  %124 = extractvalue { i8*, i32 } %122, 1
  store i32 %124, i32* %36, align 4
  invoke void @__cxa_end_catch()
          to label %125 unwind label %161

; <label>:125:                                    ; preds = %121
  br label %127
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:127:                                    ; preds = %125
  %128 = load i32, i32* @x.424
  %129 = load i32, i32* @y.425
  %130 = sub i32 0, 1
  %131 = add i32 %128, %130
  %132 = sub i32 %128, 1
  %133 = mul i32 %128, %131
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %129, 10
  %137 = and i1 %135, %136
  %138 = xor i1 %135, %136
  %139 = or i1 %137, %138
  %140 = or i1 %135, %136
  br i1 %139, label %141, label %206

; <label>:141:                                    ; preds = %127, %206
  %142 = load i8*, i8** %35, align 8
  %143 = load i32, i32* %36, align 4
  %144 = insertvalue { i8*, i32 } undef, i8* %142, 0
  %145 = insertvalue { i8*, i32 } %144, i32 %143, 1
  %146 = load i32, i32* @x.424
  %147 = load i32, i32* @y.425
  %148 = add i32 %146, 459037476
  %149 = sub i32 %148, 1
  %150 = sub i32 %149, 459037476
  %151 = sub i32 %146, 1
  %152 = mul i32 %146, %150
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %147, 10
  %156 = and i1 %154, %155
  %157 = xor i1 %154, %155
  %158 = or i1 %156, %157
  %159 = or i1 %154, %155
  br i1 %158, label %160, label %206

; <label>:160:                                    ; preds = %141
  resume { i8*, i32 } %145

; <label>:161:                                    ; preds = %121
  %162 = load i32, i32* @x.424
  %163 = load i32, i32* @y.425
  %164 = sub i32 0, 1
  %165 = add i32 %162, %164
  %166 = sub i32 %162, 1
  %167 = mul i32 %162, %165
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %163, 10
  %171 = and i1 %169, %170
  %172 = xor i1 %169, %170
  %173 = or i1 %171, %172
  %174 = or i1 %169, %170
  br i1 %173, label %175, label %211

; <label>:175:                                    ; preds = %161, %211
  %176 = landingpad { i8*, i32 }
          catch i8* null
  %177 = extractvalue { i8*, i32 } %176, 0
  call void @__clang_call_terminate(i8* %177) #8
  %178 = load i32, i32* @x.424
  %179 = load i32, i32* @y.425
  %180 = sub i32 %178, 252309439
  %181 = sub i32 %180, 1
  %182 = add i32 %181, 252309439
  %183 = sub i32 %178, 1
  %184 = mul i32 %178, %182
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %179, 10
  %188 = and i1 %186, %187
  %189 = xor i1 %186, %187
  %190 = or i1 %188, %189
  %191 = or i1 %186, %187
  br i1 %190, label %192, label %211

; <label>:192:                                    ; preds = %175
  unreachable

; <label>:193:                                    ; preds = %118
  unreachable

; <label>:194:                                    ; preds = %30, %3
  %195 = alloca %"class.std::vector.20"*, align 8
  %196 = alloca i64, align 8
  %197 = alloca %"class.std::vector.20"*, align 8
  %198 = alloca %"class.std::vector.20"*, align 8
  %199 = alloca i8*
  %200 = alloca i32
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %195, align 8
  store i64 %1, i64* %196, align 8
  store %"class.std::vector.20"* %2, %"class.std::vector.20"** %197, align 8
  %201 = load %"class.std::vector.20"*, %"class.std::vector.20"** %195, align 8
  store %"class.std::vector.20"* %201, %"class.std::vector.20"** %198, align 8
  br label %30

; <label>:202:                                    ; preds = %70, %56
  %203 = load %"class.std::vector.20"*, %"class.std::vector.20"** %34, align 8
  %204 = call %"class.std::vector.20"* @_ZSt11__addressofISt6vectorImSaImEEEPT_RS3_(%"class.std::vector.20"* dereferenceable(24) %203) #10
  %205 = load %"class.std::vector.20"*, %"class.std::vector.20"** %33, align 8
  br label %70

; <label>:206:                                    ; preds = %141, %127
  %207 = load i8*, i8** %35, align 8
  %208 = load i32, i32* %36, align 4
  %209 = insertvalue { i8*, i32 } undef, i8* %207, 0
  %210 = insertvalue { i8*, i32 } %209, i32 %208, 1
  br label %141

; <label>:211:                                    ; preds = %175, %161
  %212 = landingpad { i8*, i32 }
          catch i8* null
  %213 = extractvalue { i8*, i32 } %212, 0
  call void @__clang_call_terminate(i8* %213) #8
  br label %175
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorImSaImEEJRKS2_EEvPT_DpOT0_(%"class.std::vector.20"*, %"class.std::vector.20"* dereferenceable(24)) #1 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.426
  %6 = load i32, i32* @y.427
  %7 = sub i32 %5, 404268790
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 404268790
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1491262787, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %59
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1491262787, label %19
    i32 88711749, label %27
    i32 300058060, label %50
    i32 -582786168, label %51
  ]

; <label>:18:                                     ; preds = %16
  br label %59

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 88711749, i32 -582786168
  store i32 %26, i32* %15
  br label %59

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.20"*, align 8
  %29 = alloca %"class.std::vector.20"*, align 8
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %28, align 8
  store %"class.std::vector.20"* %1, %"class.std::vector.20"** %29, align 8
  %30 = load %"class.std::vector.20"*, %"class.std::vector.20"** %28, align 8
  %31 = bitcast %"class.std::vector.20"* %30 to i8*
  %32 = bitcast i8* %31 to %"class.std::vector.20"*
  %33 = load %"class.std::vector.20"*, %"class.std::vector.20"** %29, align 8
  %34 = call dereferenceable(24) %"class.std::vector.20"* @_ZSt7forwardIRKSt6vectorImSaImEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.20"* dereferenceable(24) %33) #10
  call void @_ZNSt6vectorImSaImEEC2ERKS1_(%"class.std::vector.20"* %32, %"class.std::vector.20"* dereferenceable(24) %34)
  %35 = load i32, i32* @x.426
  %36 = load i32, i32* @y.427
  %37 = sub i32 %35, 1591652328
  %38 = sub i32 %37, 1
  %39 = add i32 %38, 1591652328
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 300058060, i32 -582786168
  store i32 %49, i32* %15
  br label %59

; <label>:50:                                     ; preds = %16
  ret void

; <label>:51:                                     ; preds = %16
  %52 = alloca %"class.std::vector.20"*, align 8
  %53 = alloca %"class.std::vector.20"*, align 8
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %52, align 8
  store %"class.std::vector.20"* %1, %"class.std::vector.20"** %53, align 8
  %54 = load %"class.std::vector.20"*, %"class.std::vector.20"** %52, align 8
  %55 = bitcast %"class.std::vector.20"* %54 to i8*
  %56 = bitcast i8* %55 to %"class.std::vector.20"*
  %57 = load %"class.std::vector.20"*, %"class.std::vector.20"** %53, align 8
  %58 = call dereferenceable(24) %"class.std::vector.20"* @_ZSt7forwardIRKSt6vectorImSaImEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.20"* dereferenceable(24) %57) #10
  call void @_ZNSt6vectorImSaImEEC2ERKS1_(%"class.std::vector.20"* %56, %"class.std::vector.20"* dereferenceable(24) %58)
  store i32 88711749, i32* %15
  br label %59

; <label>:59:                                     ; preds = %51, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.20"* @_ZSt11__addressofISt6vectorImSaImEEEPT_RS3_(%"class.std::vector.20"* dereferenceable(24)) #0 comdat {
  %2 = alloca %"class.std::vector.20"*, align 8
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %2, align 8
  %3 = load %"class.std::vector.20"*, %"class.std::vector.20"** %2, align 8
  %4 = bitcast %"class.std::vector.20"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.20"*
  ret %"class.std::vector.20"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorImSaImEEEvT_S4_(%"class.std::vector.20"*, %"class.std::vector.20"*) #1 comdat {
  %3 = alloca %"class.std::vector.20"*, align 8
  %4 = alloca %"class.std::vector.20"*, align 8
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %3, align 8
  store %"class.std::vector.20"* %1, %"class.std::vector.20"** %4, align 8
  %5 = load %"class.std::vector.20"*, %"class.std::vector.20"** %3, align 8
  %6 = load %"class.std::vector.20"*, %"class.std::vector.20"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorImSaImEEEEvT_S6_(%"class.std::vector.20"* %5, %"class.std::vector.20"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.20"* @_ZSt7forwardIRKSt6vectorImSaImEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.20"* dereferenceable(24)) #0 comdat {
  %2 = alloca %"class.std::vector.20"*, align 8
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %2, align 8
  %3 = load %"class.std::vector.20"*, %"class.std::vector.20"** %2, align 8
  ret %"class.std::vector.20"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorImSaImEEC2ERKS1_(%"class.std::vector.20"*, %"class.std::vector.20"* dereferenceable(24)) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.434
  %4 = load i32, i32* @y.435
  %5 = sub i32 %3, -1359542622
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -1359542622
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %148

; <label>:29:                                     ; preds = %2, %148
  %30 = alloca %"class.std::vector.20"*, align 8
  %31 = alloca %"class.std::vector.20"*, align 8
  %32 = alloca %"class.std::allocator.22", align 1
  %33 = alloca i8*
  %34 = alloca i32
  %35 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %36 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %30, align 8
  store %"class.std::vector.20"* %1, %"class.std::vector.20"** %31, align 8
  %37 = load %"class.std::vector.20"*, %"class.std::vector.20"** %30, align 8
  %38 = bitcast %"class.std::vector.20"* %37 to %"struct.std::_Vector_base.21"*
  %39 = load %"class.std::vector.20"*, %"class.std::vector.20"** %31, align 8
  %40 = call i64 @_ZNKSt6vectorImSaImEE4sizeEv(%"class.std::vector.20"* %39) #10
  %41 = load %"class.std::vector.20"*, %"class.std::vector.20"** %31, align 8
  %42 = bitcast %"class.std::vector.20"* %41 to %"struct.std::_Vector_base.21"*
  %43 = call dereferenceable(1) %"class.std::allocator.22"* @_ZNKSt12_Vector_baseImSaImEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.21"* %42) #10
  call void @_ZN9__gnu_cxx14__alloc_traitsISaImEE17_S_select_on_copyERKS1_(%"class.std::allocator.22"* sret %32, %"class.std::allocator.22"* dereferenceable(1) %43)
  %44 = load i32, i32* @x.434
  %45 = load i32, i32* @y.435
  %46 = sub i32 %44, 1132386632
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1132386632
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  br i1 %56, label %58, label %148

; <label>:58:                                     ; preds = %29
  invoke void @_ZNSt12_Vector_baseImSaImEEC2EmRKS0_(%"struct.std::_Vector_base.21"* %38, i64 %40, %"class.std::allocator.22"* dereferenceable(1) %32)
          to label %59 unwind label %134

; <label>:59:                                     ; preds = %58
  call void @_ZNSaImED2Ev(%"class.std::allocator.22"* %32) #10
  %60 = load %"class.std::vector.20"*, %"class.std::vector.20"** %31, align 8
  %61 = call i64* @_ZNKSt6vectorImSaImEE5beginEv(%"class.std::vector.20"* %60) #10
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %35, i32 0, i32 0
  store i64* %61, i64** %62, align 8
  %63 = load %"class.std::vector.20"*, %"class.std::vector.20"** %31, align 8
  %64 = call i64* @_ZNKSt6vectorImSaImEE3endEv(%"class.std::vector.20"* %63) #10
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %36, i32 0, i32 0
  store i64* %64, i64** %65, align 8
  %66 = bitcast %"class.std::vector.20"* %37 to %"struct.std::_Vector_base.21"*
  %67 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %66, i32 0, i32 0
  %68 = getelementptr inbounds %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl", %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %67, i32 0, i32 0
  %69 = load i64*, i64** %68, align 8
  %70 = bitcast %"class.std::vector.20"* %37 to %"struct.std::_Vector_base.21"*
  %71 = call dereferenceable(1) %"class.std::allocator.22"* @_ZNSt12_Vector_baseImSaImEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.21"* %70) #10
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %35, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %36, i32 0, i32 0
  %75 = load i64*, i64** %74, align 8
  %76 = invoke i64* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEPmmET0_T_SA_S9_RSaIT1_E(i64* %73, i64* %75, i64* %69, %"class.std::allocator.22"* dereferenceable(1) %71)
          to label %77 unwind label %138

; <label>:77:                                     ; preds = %59
  %78 = load i32, i32* @x.434
  %79 = load i32, i32* @y.435
  %80 = add i32 %78, 1639630585
  %81 = sub i32 %80, 1
  %82 = sub i32 %81, 1639630585
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 false, true
  %91 = and i1 %88, false
  %92 = and i1 %86, %90
  %93 = and i1 %89, false
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 false, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  br i1 %102, label %104, label %163

; <label>:104:                                    ; preds = %77, %163
  %105 = bitcast %"class.std::vector.20"* %37 to %"struct.std::_Vector_base.21"*
  %106 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %105, i32 0, i32 0
  %107 = getelementptr inbounds %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl", %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %106, i32 0, i32 1
  store i64* %76, i64** %107, align 8
  %108 = load i32, i32* @x.434
  %109 = load i32, i32* @y.435
  %110 = sub i32 0, 1
  %111 = add i32 %108, %110
  %112 = sub i32 %108, 1
  %113 = mul i32 %108, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %109, 10
  %117 = xor i1 %115, true
  %118 = xor i1 %116, true
  %119 = xor i1 true, true
  %120 = and i1 %117, true
  %121 = and i1 %115, %119
  %122 = and i1 %118, true
  %123 = and i1 %116, %119
  %124 = or i1 %120, %121
  %125 = or i1 %122, %123
  %126 = xor i1 %124, %125
  %127 = or i1 %117, %118
  %128 = xor i1 %127, true
  %129 = or i1 true, %119
  %130 = and i1 %128, %129
  %131 = or i1 %126, %130
  %132 = or i1 %115, %116
  br i1 %131, label %133, label %163

; <label>:133:                                    ; preds = %104
  ret void

; <label>:134:                                    ; preds = %58
  %135 = landingpad { i8*, i32 }
          cleanup
  %136 = extractvalue { i8*, i32 } %135, 0
  store i8* %136, i8** %33, align 8
  %137 = extractvalue { i8*, i32 } %135, 1
  store i32 %137, i32* %34, align 4
  call void @_ZNSaImED2Ev(%"class.std::allocator.22"* %32) #10
  br label %143

; <label>:138:                                    ; preds = %59
  %139 = landingpad { i8*, i32 }
          cleanup
  %140 = extractvalue { i8*, i32 } %139, 0
  store i8* %140, i8** %33, align 8
  %141 = extractvalue { i8*, i32 } %139, 1
  store i32 %141, i32* %34, align 4
  %142 = bitcast %"class.std::vector.20"* %37 to %"struct.std::_Vector_base.21"*
  call void @_ZNSt12_Vector_baseImSaImEED2Ev(%"struct.std::_Vector_base.21"* %142) #10
  br label %143

; <label>:143:                                    ; preds = %138, %134
  %144 = load i8*, i8** %33, align 8
  %145 = load i32, i32* %34, align 4
  %146 = insertvalue { i8*, i32 } undef, i8* %144, 0
  %147 = insertvalue { i8*, i32 } %146, i32 %145, 1
  resume { i8*, i32 } %147

; <label>:148:                                    ; preds = %29, %2
  %149 = alloca %"class.std::vector.20"*, align 8
  %150 = alloca %"class.std::vector.20"*, align 8
  %151 = alloca %"class.std::allocator.22", align 1
  %152 = alloca i8*
  %153 = alloca i32
  %154 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %155 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %149, align 8
  store %"class.std::vector.20"* %1, %"class.std::vector.20"** %150, align 8
  %156 = load %"class.std::vector.20"*, %"class.std::vector.20"** %149, align 8
  %157 = bitcast %"class.std::vector.20"* %156 to %"struct.std::_Vector_base.21"*
  %158 = load %"class.std::vector.20"*, %"class.std::vector.20"** %150, align 8
  %159 = call i64 @_ZNKSt6vectorImSaImEE4sizeEv(%"class.std::vector.20"* %158) #10
  %160 = load %"class.std::vector.20"*, %"class.std::vector.20"** %150, align 8
  %161 = bitcast %"class.std::vector.20"* %160 to %"struct.std::_Vector_base.21"*
  %162 = call dereferenceable(1) %"class.std::allocator.22"* @_ZNKSt12_Vector_baseImSaImEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.21"* %161) #10
  call void @_ZN9__gnu_cxx14__alloc_traitsISaImEE17_S_select_on_copyERKS1_(%"class.std::allocator.22"* sret %151, %"class.std::allocator.22"* dereferenceable(1) %162)
  br label %29

; <label>:163:                                    ; preds = %104, %77
  %164 = bitcast %"class.std::vector.20"* %37 to %"struct.std::_Vector_base.21"*
  %165 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %164, i32 0, i32 0
  %166 = getelementptr inbounds %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl", %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %165, i32 0, i32 1
  store i64* %76, i64** %166, align 8
  br label %104
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorImSaImEE4sizeEv(%"class.std::vector.20"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.20"*, align 8
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %2, align 8
  %3 = load %"class.std::vector.20"*, %"class.std::vector.20"** %2, align 8
  %4 = bitcast %"class.std::vector.20"* %3 to %"struct.std::_Vector_base.21"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl", %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8
  %8 = bitcast %"class.std::vector.20"* %3 to %"struct.std::_Vector_base.21"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl", %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = ptrtoint i64* %7 to i64
  %13 = ptrtoint i64* %11 to i64
  %14 = sub i64 %12, 7407326002234651336
  %15 = sub i64 %14, %13
  %16 = add i64 %15, 7407326002234651336
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 8
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaImEE17_S_select_on_copyERKS1_(%"class.std::allocator.22"* noalias sret, %"class.std::allocator.22"* dereferenceable(1)) #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.438
  %6 = load i32, i32* @y.439
  %7 = add i32 %5, 1559644799
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1559644799
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1116683087, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %60
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1116683087, label %19
    i32 640369130, label %27
    i32 -995102060, label %56
    i32 -653884727, label %57
  ]

; <label>:18:                                     ; preds = %16
  br label %60

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 640369130, i32 -653884727
  store i32 %26, i32* %15
  br label %60

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.22"*, align 8
  store %"class.std::allocator.22"* %1, %"class.std::allocator.22"** %28, align 8
  %29 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %28, align 8
  call void @_ZNSt16allocator_traitsISaImEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.22"* sret %0, %"class.std::allocator.22"* dereferenceable(1) %29)
  %30 = load i32, i32* @x.438
  %31 = load i32, i32* @y.439
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -995102060, i32 -653884727
  store i32 %55, i32* %15
  br label %60

; <label>:56:                                     ; preds = %16
  ret void

; <label>:57:                                     ; preds = %16
  %58 = alloca %"class.std::allocator.22"*, align 8
  store %"class.std::allocator.22"* %1, %"class.std::allocator.22"** %58, align 8
  %59 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %58, align 8
  call void @_ZNSt16allocator_traitsISaImEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.22"* sret %0, %"class.std::allocator.22"* dereferenceable(1) %59)
  store i32 640369130, i32* %15
  br label %60

; <label>:60:                                     ; preds = %57, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.22"* @_ZNKSt12_Vector_baseImSaImEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.21"*) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.22"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.440
  %6 = load i32, i32* @y.441
  %7 = sub i32 %5, 1551400021
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1551400021
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -12717297, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -12717297, label %19
    i32 -1577811032, label %39
    i32 1520841281, label %70
    i32 -1869145487, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1577811032, i32 -1869145487
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.21"*, align 8
  store %"struct.std::_Vector_base.21"* %0, %"struct.std::_Vector_base.21"** %40, align 8
  %41 = load %"struct.std::_Vector_base.21"*, %"struct.std::_Vector_base.21"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %42 to %"class.std::allocator.22"*
  store %"class.std::allocator.22"* %43, %"class.std::allocator.22"** %2
  %44 = load i32, i32* @x.440
  %45 = load i32, i32* @y.441
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 1520841281, i32 -1869145487
  store i32 %69, i32* %15
  br label %77

; <label>:70:                                     ; preds = %16
  %71 = load volatile %"class.std::allocator.22"*, %"class.std::allocator.22"** %2
  ret %"class.std::allocator.22"* %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %"struct.std::_Vector_base.21"*, align 8
  store %"struct.std::_Vector_base.21"* %0, %"struct.std::_Vector_base.21"** %73, align 8
  %74 = load %"struct.std::_Vector_base.21"*, %"struct.std::_Vector_base.21"** %73, align 8
  %75 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %74, i32 0, i32 0
  %76 = bitcast %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %75 to %"class.std::allocator.22"*
  store i32 -1577811032, i32* %15
  br label %77

; <label>:77:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEPmmET0_T_SA_S9_RSaIT1_E(i64*, i64*, i64*, %"class.std::allocator.22"* dereferenceable(1)) #1 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.22"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %5, i32 0, i32 0
  store i64* %0, i64** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %6, i32 0, i32 0
  store i64* %1, i64** %12, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.22"* %3, %"class.std::allocator.22"** %8, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %9 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %10 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load i64*, i64** %7, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %9, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %10, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = call i64* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEPmET0_T_SA_S9_(i64* %19, i64* %21, i64* %17)
  ret i64* %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt6vectorImSaImEE5beginEv(%"class.std::vector.20"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %3 = alloca %"class.std::vector.20"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %3, align 8
  %5 = load %"class.std::vector.20"*, %"class.std::vector.20"** %3, align 8
  %6 = bitcast %"class.std::vector.20"* %5 to %"struct.std::_Vector_base.21"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl", %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  store i64* %9, i64** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.26"* %2, i64** dereferenceable(8) %4) #10
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %2, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  ret i64* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt6vectorImSaImEE3endEv(%"class.std::vector.20"*) #0 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.446
  %6 = load i32, i32* @y.447
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1787631705, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %88
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1787631705, label %18
    i32 -1266224645, label %38
    i32 -1356867766, label %75
    i32 1750744926, label %77
  ]

; <label>:17:                                     ; preds = %15
  br label %88

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1266224645, i32 1750744926
  store i32 %37, i32* %14
  br label %88

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %40 = alloca %"class.std::vector.20"*, align 8
  %41 = alloca i64*, align 8
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %40, align 8
  %42 = load %"class.std::vector.20"*, %"class.std::vector.20"** %40, align 8
  %43 = bitcast %"class.std::vector.20"* %42 to %"struct.std::_Vector_base.21"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl", %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %44, i32 0, i32 1
  %46 = load i64*, i64** %45, align 8
  store i64* %46, i64** %41, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.26"* %39, i64** dereferenceable(8) %41) #10
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %39, i32 0, i32 0
  %48 = load i64*, i64** %47, align 8
  store i64* %48, i64** %2
  %49 = load i32, i32* @x.446
  %50 = load i32, i32* @y.447
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 -1356867766, i32 1750744926
  store i32 %74, i32* %14
  br label %88

; <label>:75:                                     ; preds = %15
  %76 = load volatile i64*, i64** %2
  ret i64* %76

; <label>:77:                                     ; preds = %15
  %78 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %79 = alloca %"class.std::vector.20"*, align 8
  %80 = alloca i64*, align 8
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %79, align 8
  %81 = load %"class.std::vector.20"*, %"class.std::vector.20"** %79, align 8
  %82 = bitcast %"class.std::vector.20"* %81 to %"struct.std::_Vector_base.21"*
  %83 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %82, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl", %"struct.std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_impl"* %83, i32 0, i32 1
  %85 = load i64*, i64** %84, align 8
  store i64* %85, i64** %80, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.26"* %78, i64** dereferenceable(8) %80) #10
  %86 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %78, i32 0, i32 0
  %87 = load i64*, i64** %86, align 8
  store i32 -1266224645, i32* %14
  br label %88

; <label>:88:                                     ; preds = %77, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaImEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.22"* noalias sret, %"class.std::allocator.22"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.22"*, align 8
  store %"class.std::allocator.22"* %1, %"class.std::allocator.22"** %3, align 8
  %4 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %3, align 8
  call void @_ZNSaImEC2ERKS_(%"class.std::allocator.22"* %0, %"class.std::allocator.22"* dereferenceable(1) %4) #10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaImEC2ERKS_(%"class.std::allocator.22"*, %"class.std::allocator.22"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.450
  %6 = load i32, i32* @y.451
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1307792074, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %68
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1307792074, label %18
    i32 -1259155921, label %26
    i32 -47004558, label %60
    i32 1652623574, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %68

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1259155921, i32 1652623574
  store i32 %25, i32* %14
  br label %68

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.22"*, align 8
  %28 = alloca %"class.std::allocator.22"*, align 8
  store %"class.std::allocator.22"* %0, %"class.std::allocator.22"** %27, align 8
  store %"class.std::allocator.22"* %1, %"class.std::allocator.22"** %28, align 8
  %29 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %27, align 8
  %30 = bitcast %"class.std::allocator.22"* %29 to %"class.__gnu_cxx::new_allocator.23"*
  %31 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %28, align 8
  %32 = bitcast %"class.std::allocator.22"* %31 to %"class.__gnu_cxx::new_allocator.23"*
  call void @_ZN9__gnu_cxx13new_allocatorImEC2ERKS1_(%"class.__gnu_cxx::new_allocator.23"* %30, %"class.__gnu_cxx::new_allocator.23"* dereferenceable(1) %32) #10
  %33 = load i32, i32* @x.450
  %34 = load i32, i32* @y.451
  %35 = sub i32 %33, 615263124
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 615263124
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -47004558, i32 1652623574
  store i32 %59, i32* %14
  br label %68

; <label>:60:                                     ; preds = %15
  ret void

; <label>:61:                                     ; preds = %15
  %62 = alloca %"class.std::allocator.22"*, align 8
  %63 = alloca %"class.std::allocator.22"*, align 8
  store %"class.std::allocator.22"* %0, %"class.std::allocator.22"** %62, align 8
  store %"class.std::allocator.22"* %1, %"class.std::allocator.22"** %63, align 8
  %64 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %62, align 8
  %65 = bitcast %"class.std::allocator.22"* %64 to %"class.__gnu_cxx::new_allocator.23"*
  %66 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %63, align 8
  %67 = bitcast %"class.std::allocator.22"* %66 to %"class.__gnu_cxx::new_allocator.23"*
  call void @_ZN9__gnu_cxx13new_allocatorImEC2ERKS1_(%"class.__gnu_cxx::new_allocator.23"* %65, %"class.__gnu_cxx::new_allocator.23"* dereferenceable(1) %67) #10
  store i32 -1259155921, i32* %14
  br label %68

; <label>:68:                                     ; preds = %61, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEPmET0_T_SA_S9_(i64*, i64*, i64*) #1 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.452
  %8 = load i32, i32* @y.453
  %9 = add i32 %7, 624870633
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 624870633
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 365585870, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %108
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 365585870, label %21
    i32 -1545132832, label %41
    i32 2020316661, label %87
    i32 1218908299, label %89
  ]

; <label>:20:                                     ; preds = %18
  br label %108

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1545132832, i32 1218908299
  store i32 %40, i32* %17
  br label %108

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %44 = alloca i64*, align 8
  %45 = alloca i8, align 1
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %42, i32 0, i32 0
  store i64* %0, i64** %48, align 8
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %43, i32 0, i32 0
  store i64* %1, i64** %49, align 8
  store i64* %2, i64** %44, align 8
  store i8 1, i8* %45, align 1
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %46 to i8*
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %47 to i8*
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = load i64*, i64** %44, align 8
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %46, i32 0, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %47, i32 0, i32 0
  %58 = load i64*, i64** %57, align 8
  %59 = call i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEPmEET0_T_SC_SB_(i64* %56, i64* %58, i64* %54)
  store i64* %59, i64** %4
  %60 = load i32, i32* @x.452
  %61 = load i32, i32* @y.453
  %62 = add i32 %60, 67245282
  %63 = sub i32 %62, 1
  %64 = sub i32 %63, 67245282
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 false, true
  %73 = and i1 %70, false
  %74 = and i1 %68, %72
  %75 = and i1 %71, false
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 false, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  %86 = select i1 %84, i32 2020316661, i32 1218908299
  store i32 %86, i32* %17
  br label %108

; <label>:87:                                     ; preds = %18
  %88 = load volatile i64*, i64** %4
  ret i64* %88

; <label>:89:                                     ; preds = %18
  %90 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %91 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %92 = alloca i64*, align 8
  %93 = alloca i8, align 1
  %94 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %95 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %96 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %90, i32 0, i32 0
  store i64* %0, i64** %96, align 8
  %97 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %91, i32 0, i32 0
  store i64* %1, i64** %97, align 8
  store i64* %2, i64** %92, align 8
  store i8 1, i8* %93, align 1
  %98 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %94 to i8*
  %99 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %98, i8* %99, i64 8, i32 8, i1 false)
  %100 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %95 to i8*
  %101 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %100, i8* %101, i64 8, i32 8, i1 false)
  %102 = load i64*, i64** %92, align 8
  %103 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %94, i32 0, i32 0
  %104 = load i64*, i64** %103, align 8
  %105 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %95, i32 0, i32 0
  %106 = load i64*, i64** %105, align 8
  %107 = call i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEPmEET0_T_SC_SB_(i64* %104, i64* %106, i64* %102)
  store i32 -1545132832, i32* %17
  br label %108

; <label>:108:                                    ; preds = %89, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEPmEET0_T_SC_SB_(i64*, i64*, i64*) #1 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %4, i32 0, i32 0
  store i64* %0, i64** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %5, i32 0, i32 0
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load i64*, i64** %6, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %7, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = call i64* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEPmET0_T_SA_S9_(i64* %17, i64* %19, i64* %15)
  ret i64* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEPmET0_T_SA_S9_(i64*, i64*, i64*) #1 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %4, i32 0, i32 0
  store i64* %0, i64** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %5, i32 0, i32 0
  store i64* %1, i64** %12, align 8
  store i64* %2, i64** %6, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %8, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = call i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64* %16)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %7, i32 0, i32 0
  store i64* %17, i64** %18, align 8
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %10 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %10, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = call i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64* %22)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %9, i32 0, i32 0
  store i64* %23, i64** %24, align 8
  %25 = load i64*, i64** %6, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %7, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %9, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = call i64* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEPmET1_T0_SA_S9_(i64* %27, i64* %29, i64* %25)
  ret i64* %30
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEPmET1_T0_SA_S9_(i64*, i64*, i64*) #1 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.458
  %8 = load i32, i32* @y.459
  %9 = sub i32 %7, 1227234573
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 1227234573
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -499210861, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %100
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -499210861, label %21
    i32 -1393127305, label %41
    i32 -94669193, label %77
    i32 -21466961, label %79
  ]

; <label>:20:                                     ; preds = %18
  br label %100

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1393127305, i32 -21466961
  store i32 %40, i32* %17
  br label %100

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %44 = alloca i64*, align 8
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %42, i32 0, i32 0
  store i64* %0, i64** %47, align 8
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %43, i32 0, i32 0
  store i64* %1, i64** %48, align 8
  store i64* %2, i64** %44, align 8
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %45 to i8*
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %45, i32 0, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64* %52)
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %46 to i8*
  %55 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 8, i32 8, i1 false)
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %46, i32 0, i32 0
  %57 = load i64*, i64** %56, align 8
  %58 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64* %57)
  %59 = load i64*, i64** %44, align 8
  %60 = call i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %59)
  %61 = call i64* @_ZSt13__copy_move_aILb0EPKmPmET1_T0_S4_S3_(i64* %53, i64* %58, i64* %60)
  store i64* %61, i64** %4
  %62 = load i32, i32* @x.458
  %63 = load i32, i32* @y.459
  %64 = add i32 %62, 54258763
  %65 = sub i32 %64, 1
  %66 = sub i32 %65, 54258763
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  %76 = select i1 %74, i32 -94669193, i32 -21466961
  store i32 %76, i32* %17
  br label %100

; <label>:77:                                     ; preds = %18
  %78 = load volatile i64*, i64** %4
  ret i64* %78

; <label>:79:                                     ; preds = %18
  %80 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %81 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %82 = alloca i64*, align 8
  %83 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %84 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %85 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %80, i32 0, i32 0
  store i64* %0, i64** %85, align 8
  %86 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %81, i32 0, i32 0
  store i64* %1, i64** %86, align 8
  store i64* %2, i64** %82, align 8
  %87 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %83 to i8*
  %88 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* %88, i64 8, i32 8, i1 false)
  %89 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %83, i32 0, i32 0
  %90 = load i64*, i64** %89, align 8
  %91 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64* %90)
  %92 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %84 to i8*
  %93 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %81 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %92, i8* %93, i64 8, i32 8, i1 false)
  %94 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %84, i32 0, i32 0
  %95 = load i64*, i64** %94, align 8
  %96 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64* %95)
  %97 = load i64*, i64** %82, align 8
  %98 = call i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %97)
  %99 = call i64* @_ZSt13__copy_move_aILb0EPKmPmET1_T0_S4_S3_(i64* %91, i64* %96, i64* %98)
  store i32 -1393127305, i32* %17
  br label %100

; <label>:100:                                    ; preds = %79, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64*) #1 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %3, i32 0, i32 0
  store i64* %0, i64** %5, align 8
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %4 to i8*
  %7 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 8, i32 8, i1 false)
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %4, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = call i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEELb0EE7_S_baseES7_(i64* %9)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %2, i32 0, i32 0
  store i64* %10, i64** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %2, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  ret i64* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt13__copy_move_aILb0EPKmPmET1_T0_S4_S3_(i64*, i64*, i64*) #1 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i64*, i64** %4, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_(i64* %8, i64* %9, i64* %10)
  ret i64* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64*) #1 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %2, i32 0, i32 0
  store i64* %0, i64** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %3, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = call i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEELb1EE7_S_baseES7_(i64* %8)
  ret i64* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_(i64*, i64*, i64*) #0 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca i64
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i64, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  store i64* %2, i64** %8, align 8
  %10 = load i64*, i64** %7, align 8
  %11 = load i64*, i64** %6, align 8
  %12 = ptrtoint i64* %10 to i64
  %13 = ptrtoint i64* %11 to i64
  %14 = sub i64 %12, 7604535109188009525
  %15 = sub i64 %14, %13
  %16 = add i64 %15, 7604535109188009525
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 8
  store i64 %18, i64* %9, align 8
  %19 = load i64, i64* %9, align 8
  store i64 %19, i64* %5
  %20 = alloca i32
  store i32 1449001525, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %76
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 1449001525, label %24
    i32 770869004, label %28
    i32 1724403649, label %35
    i32 59643301, label %51
    i32 -1373653147, label %70
    i32 1304315406, label %72
  ]

; <label>:23:                                     ; preds = %21
  br label %76

; <label>:24:                                     ; preds = %21
  %25 = load volatile i64, i64* %5
  %26 = icmp ne i64 %25, 0
  %27 = select i1 %26, i32 770869004, i32 1724403649
  store i32 %27, i32* %20
  br label %76

; <label>:28:                                     ; preds = %21
  %29 = load i64*, i64** %8, align 8
  %30 = bitcast i64* %29 to i8*
  %31 = load i64*, i64** %6, align 8
  %32 = bitcast i64* %31 to i8*
  %33 = load i64, i64* %9, align 8
  %34 = mul i64 8, %33
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %30, i8* %32, i64 %34, i32 8, i1 false)
  store i32 1724403649, i32* %20
  br label %76

; <label>:35:                                     ; preds = %21
  %36 = load i32, i32* @x.466
  %37 = load i32, i32* @y.467
  %38 = sub i32 %36, 1916896408
  %39 = sub i32 %38, 1
  %40 = add i32 %39, 1916896408
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 59643301, i32 1304315406
  store i32 %50, i32* %20
  br label %76

; <label>:51:                                     ; preds = %21
  %52 = load i64*, i64** %8, align 8
  %53 = load i64, i64* %9, align 8
  %54 = getelementptr inbounds i64, i64* %52, i64 %53
  store i64* %54, i64** %4
  %55 = load i32, i32* @x.466
  %56 = load i32, i32* @y.467
  %57 = add i32 %55, 267885026
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, 267885026
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 -1373653147, i32 1304315406
  store i32 %69, i32* %20
  br label %76

; <label>:70:                                     ; preds = %21
  %71 = load volatile i64*, i64** %4
  ret i64* %71

; <label>:72:                                     ; preds = %21
  %73 = load i64*, i64** %8, align 8
  %74 = load i64, i64* %9, align 8
  %75 = getelementptr inbounds i64, i64* %73, i64 %74
  store i32 59643301, i32* %20
  br label %76

; <label>:76:                                     ; preds = %72, %51, %35, %28, %24, %23
  br label %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEELb1EE7_S_baseES7_(i64*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %2, i32 0, i32 0
  store i64* %0, i64** %3, align 8
  %4 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.26"* %2) #10
  %5 = load i64*, i64** %4, align 8
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.26"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.26"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.26"* %0, %"class.__gnu_cxx::__normal_iterator.26"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.26"*, %"class.__gnu_cxx::__normal_iterator.26"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %3, i32 0, i32 0
  ret i64** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEELb0EE7_S_baseES7_(i64*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %3, i32 0, i32 0
  store i64* %0, i64** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %2 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.26"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %2, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  ret i64* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.26"*, i64** dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.26"*, align 8
  %4 = alloca i64**, align 8
  store %"class.__gnu_cxx::__normal_iterator.26"* %0, %"class.__gnu_cxx::__normal_iterator.26"** %3, align 8
  store i64** %1, i64*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.26"*, %"class.__gnu_cxx::__normal_iterator.26"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %5, i32 0, i32 0
  %7 = load i64**, i64*** %4, align 8
  %8 = load i64*, i64** %7, align 8
  store i64* %8, i64** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorImSaImEEEEvT_S6_(%"class.std::vector.20"*, %"class.std::vector.20"*) #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.20"*, align 8
  %5 = alloca %"class.std::vector.20"*, align 8
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %4, align 8
  store %"class.std::vector.20"* %1, %"class.std::vector.20"** %5, align 8
  %6 = alloca i32
  store i32 -757298690, i32* %6
  br label %7

; <label>:7:                                      ; preds = %2, %116
  %8 = load i32, i32* %6
  switch i32 %8, label %9 [
    i32 -757298690, label %10
    i32 943230533, label %26
    i32 -1853911895, label %45
    i32 -564856144, label %48
    i32 -1479928547, label %51
    i32 1306172009, label %54
    i32 -1598574392, label %82
    i32 608022968, label %110
    i32 -490153504, label %111
    i32 1126999256, label %115
  ]

; <label>:9:                                      ; preds = %7
  br label %116

; <label>:10:                                     ; preds = %7
  %11 = load i32, i32* @x.476
  %12 = load i32, i32* @y.477
  %13 = sub i32 %11, -436747288
  %14 = sub i32 %13, 1
  %15 = add i32 %14, -436747288
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %12, 10
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 943230533, i32 -490153504
  store i32 %25, i32* %6
  br label %116

; <label>:26:                                     ; preds = %7
  %27 = load %"class.std::vector.20"*, %"class.std::vector.20"** %4, align 8
  %28 = load %"class.std::vector.20"*, %"class.std::vector.20"** %5, align 8
  %29 = icmp ne %"class.std::vector.20"* %27, %28
  store i1 %29, i1* %3
  %30 = load i32, i32* @x.476
  %31 = load i32, i32* @y.477
  %32 = add i32 %30, -929081767
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -929081767
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -1853911895, i32 -490153504
  store i32 %44, i32* %6
  br label %116

; <label>:45:                                     ; preds = %7
  %46 = load volatile i1, i1* %3
  %47 = select i1 %46, i32 -564856144, i32 1306172009
  store i32 %47, i32* %6
  br label %116

; <label>:48:                                     ; preds = %7
  %49 = load %"class.std::vector.20"*, %"class.std::vector.20"** %4, align 8
  %50 = call %"class.std::vector.20"* @_ZSt11__addressofISt6vectorImSaImEEEPT_RS3_(%"class.std::vector.20"* dereferenceable(24) %49) #10
  call void @_ZSt8_DestroyISt6vectorImSaImEEEvPT_(%"class.std::vector.20"* %50)
  store i32 -1479928547, i32* %6
  br label %116

; <label>:51:                                     ; preds = %7
  %52 = load %"class.std::vector.20"*, %"class.std::vector.20"** %4, align 8
  %53 = getelementptr inbounds %"class.std::vector.20", %"class.std::vector.20"* %52, i32 1
  store %"class.std::vector.20"* %53, %"class.std::vector.20"** %4, align 8
  store i32 -757298690, i32* %6
  br label %116

; <label>:54:                                     ; preds = %7
  %55 = load i32, i32* @x.476
  %56 = load i32, i32* @y.477
  %57 = sub i32 %55, -295081906
  %58 = sub i32 %57, 1
  %59 = add i32 %58, -295081906
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 false, true
  %68 = and i1 %65, false
  %69 = and i1 %63, %67
  %70 = and i1 %66, false
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 false, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  %81 = select i1 %79, i32 -1598574392, i32 1126999256
  store i32 %81, i32* %6
  br label %116

; <label>:82:                                     ; preds = %7
  %83 = load i32, i32* @x.476
  %84 = load i32, i32* @y.477
  %85 = sub i32 %83, -1689755409
  %86 = sub i32 %85, 1
  %87 = add i32 %86, -1689755409
  %88 = sub i32 %83, 1
  %89 = mul i32 %83, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %84, 10
  %93 = xor i1 %91, true
  %94 = xor i1 %92, true
  %95 = xor i1 false, true
  %96 = and i1 %93, false
  %97 = and i1 %91, %95
  %98 = and i1 %94, false
  %99 = and i1 %92, %95
  %100 = or i1 %96, %97
  %101 = or i1 %98, %99
  %102 = xor i1 %100, %101
  %103 = or i1 %93, %94
  %104 = xor i1 %103, true
  %105 = or i1 false, %95
  %106 = and i1 %104, %105
  %107 = or i1 %102, %106
  %108 = or i1 %91, %92
  %109 = select i1 %107, i32 608022968, i32 1126999256
  store i32 %109, i32* %6
  br label %116

; <label>:110:                                    ; preds = %7
  ret void

; <label>:111:                                    ; preds = %7
  %112 = load %"class.std::vector.20"*, %"class.std::vector.20"** %4, align 8
  %113 = load %"class.std::vector.20"*, %"class.std::vector.20"** %5, align 8
  %114 = icmp ne %"class.std::vector.20"* %112, %113
  store i32 943230533, i32* %6
  br label %116

; <label>:115:                                    ; preds = %7
  store i32 -1598574392, i32* %6
  br label %116

; <label>:116:                                    ; preds = %115, %111, %82, %54, %51, %48, %45, %26, %10, %9
  br label %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorImSaImEEEvPT_(%"class.std::vector.20"*) #0 comdat {
  %2 = alloca %"class.std::vector.20"*, align 8
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %2, align 8
  %3 = load %"class.std::vector.20"*, %"class.std::vector.20"** %2, align 8
  call void @_ZNSt6vectorImSaImEED2Ev(%"class.std::vector.20"* %3) #10
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.16"*, %"class.std::vector.20"*, i64) #1 comdat align 2 {
  %4 = alloca %"class.std::vector.20"*
  %5 = alloca %"struct.std::_Vector_base.16"*
  %6 = alloca %"struct.std::_Vector_base.16"*, align 8
  %7 = alloca %"class.std::vector.20"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.16"* %0, %"struct.std::_Vector_base.16"** %6, align 8
  store %"class.std::vector.20"* %1, %"class.std::vector.20"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.16"*, %"struct.std::_Vector_base.16"** %6, align 8
  store %"struct.std::_Vector_base.16"* %9, %"struct.std::_Vector_base.16"** %5
  %10 = load %"class.std::vector.20"*, %"class.std::vector.20"** %7, align 8
  store %"class.std::vector.20"* %10, %"class.std::vector.20"** %4
  %11 = alloca i32
  store i32 -233584994, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -233584994, label %15
    i32 1805729899, label %19
    i32 -24914804, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::vector.20"*, %"class.std::vector.20"** %4
  %17 = icmp ne %"class.std::vector.20"* %16, null
  %18 = select i1 %17, i32 1805729899, i32 -24914804
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.16"*, %"struct.std::_Vector_base.16"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_Vector_impl"* %21 to %"class.std::allocator.17"*
  %23 = load %"class.std::vector.20"*, %"class.std::vector.20"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorImSaImEEEE10deallocateERS3_PS2_m(%"class.std::allocator.17"* dereferenceable(1) %22, %"class.std::vector.20"* %23, i64 %24)
  store i32 -24914804, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorImSaImEEEE10deallocateERS3_PS2_m(%"class.std::allocator.17"* dereferenceable(1), %"class.std::vector.20"*, i64) #1 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.482
  %7 = load i32, i32* @y.483
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 895500867, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %71
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 895500867, label %19
    i32 -1442719379, label %27
    i32 1261581831, label %62
    i32 -708563445, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %71

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1442719379, i32 -708563445
  store i32 %26, i32* %15
  br label %71

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.17"*, align 8
  %29 = alloca %"class.std::vector.20"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %28, align 8
  store %"class.std::vector.20"* %1, %"class.std::vector.20"** %29, align 8
  store i64 %2, i64* %30, align 8
  %31 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %28, align 8
  %32 = bitcast %"class.std::allocator.17"* %31 to %"class.__gnu_cxx::new_allocator.18"*
  %33 = load %"class.std::vector.20"*, %"class.std::vector.20"** %29, align 8
  %34 = load i64, i64* %30, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorImSaImEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.18"* %32, %"class.std::vector.20"* %33, i64 %34)
  %35 = load i32, i32* @x.482
  %36 = load i32, i32* @y.483
  %37 = add i32 %35, 341010786
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 341010786
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 1261581831, i32 -708563445
  store i32 %61, i32* %15
  br label %71

; <label>:62:                                     ; preds = %16
  ret void

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::allocator.17"*, align 8
  %65 = alloca %"class.std::vector.20"*, align 8
  %66 = alloca i64, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %64, align 8
  store %"class.std::vector.20"* %1, %"class.std::vector.20"** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %64, align 8
  %68 = bitcast %"class.std::allocator.17"* %67 to %"class.__gnu_cxx::new_allocator.18"*
  %69 = load %"class.std::vector.20"*, %"class.std::vector.20"** %65, align 8
  %70 = load i64, i64* %66, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorImSaImEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.18"* %68, %"class.std::vector.20"* %69, i64 %70)
  store i32 -1442719379, i32* %15
  br label %71

; <label>:71:                                     ; preds = %63, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorImSaImEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.18"*, %"class.std::vector.20"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  %5 = alloca %"class.std::vector.20"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %4, align 8
  store %"class.std::vector.20"* %1, %"class.std::vector.20"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %4, align 8
  %8 = load %"class.std::vector.20"*, %"class.std::vector.20"** %5, align 8
  %9 = bitcast %"class.std::vector.20"* %8 to i8*
  call void @_ZdlPv(i8* %9) #10
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorImSaImEES2_EvT_S4_RSaIT0_E(%"class.std::vector.20"*, %"class.std::vector.20"*, %"class.std::allocator.17"* dereferenceable(1)) #1 comdat {
  %4 = alloca %"class.std::vector.20"*, align 8
  %5 = alloca %"class.std::vector.20"*, align 8
  %6 = alloca %"class.std::allocator.17"*, align 8
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %4, align 8
  store %"class.std::vector.20"* %1, %"class.std::vector.20"** %5, align 8
  store %"class.std::allocator.17"* %2, %"class.std::allocator.17"** %6, align 8
  %7 = load %"class.std::vector.20"*, %"class.std::vector.20"** %4, align 8
  %8 = load %"class.std::vector.20"*, %"class.std::vector.20"** %5, align 8
  call void @_ZSt8_DestroyIPSt6vectorImSaImEEEvT_S4_(%"class.std::vector.20"* %7, %"class.std::vector.20"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI4EdgeSaIS0_EEC2Ev(%"class.std::_Deque_base"*) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.488
  %3 = load i32, i32* @y.489
  %4 = sub i32 %2, 1250820428
  %5 = sub i32 %4, 1
  %6 = add i32 %5, 1250820428
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %47

; <label>:16:                                     ; preds = %1, %47
  %17 = alloca %"class.std::_Deque_base"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %17, align 8
  %20 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %17, align 8
  %21 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %20, i32 0, i32 0
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE11_Deque_implC2Ev(%"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %21)
  %22 = load i32, i32* @x.488
  %23 = load i32, i32* @y.489
  %24 = sub i32 %22, -1677306099
  %25 = sub i32 %24, 1
  %26 = add i32 %25, -1677306099
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  br i1 %34, label %36, label %47

; <label>:36:                                     ; preds = %16
  invoke void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE17_M_initialize_mapEm(%"class.std::_Deque_base"* %20, i64 0)
          to label %37 unwind label %38

; <label>:37:                                     ; preds = %36
  ret void

; <label>:38:                                     ; preds = %36
  %39 = landingpad { i8*, i32 }
          cleanup
  %40 = extractvalue { i8*, i32 } %39, 0
  store i8* %40, i8** %18, align 8
  %41 = extractvalue { i8*, i32 } %39, 1
  store i32 %41, i32* %19, align 4
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE11_Deque_implD2Ev(%"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %21) #10
  br label %42

; <label>:42:                                     ; preds = %38
  %43 = load i8*, i8** %18, align 8
  %44 = load i32, i32* %19, align 4
  %45 = insertvalue { i8*, i32 } undef, i8* %43, 0
  %46 = insertvalue { i8*, i32 } %45, i32 %44, 1
  resume { i8*, i32 } %46

; <label>:47:                                     ; preds = %16, %1
  %48 = alloca %"class.std::_Deque_base"*, align 8
  %49 = alloca i8*
  %50 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %48, align 8
  %51 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %48, align 8
  %52 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %51, i32 0, i32 0
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE11_Deque_implC2Ev(%"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %52)
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE11_Deque_implC2Ev(%"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %0, %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"** %2, align 8
  %3 = load %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"*, %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %3 to %"class.std::allocator.2"*
  call void @_ZNSaI4EdgeEC2Ev(%"class.std::allocator.2"* %4) #10
  %5 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %3, i32 0, i32 0
  store %struct.Edge** null, %struct.Edge*** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %3, i32 0, i32 1
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %3, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2Ev(%"struct.std::_Deque_iterator"* %7) #10
  %8 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %3, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2Ev(%"struct.std::_Deque_iterator"* %8) #10
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE17_M_initialize_mapEm(%"class.std::_Deque_base"*, i64) #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.Edge**, align 8
  %9 = alloca %struct.Edge**, align 8
  %10 = alloca i8*
  %11 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %12 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %13 = load i64, i64* %4, align 8
  %14 = call i64 @_ZSt16__deque_buf_sizem(i64 24)
  %15 = udiv i64 %13, %14
  %16 = add i64 %15, 7856296867672950216
  %17 = add i64 %16, 1
  %18 = sub i64 %17, 7856296867672950216
  %19 = add i64 %15, 1
  store i64 %18, i64* %5, align 8
  store i64 8, i64* %6, align 8
  %20 = load i64, i64* %5, align 8
  %21 = add i64 %20, -5270936361058599853
  %22 = add i64 %21, 2
  %23 = sub i64 %22, -5270936361058599853
  %24 = add i64 %20, 2
  store i64 %23, i64* %7, align 8
  %25 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %6, i64* dereferenceable(8) %7)
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %27, i32 0, i32 1
  store i64 %26, i64* %28, align 8
  %29 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %29, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Edge** @_ZNSt11_Deque_baseI4EdgeSaIS0_EE15_M_allocate_mapEm(%"class.std::_Deque_base"* %12, i64 %31)
  %33 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %33, i32 0, i32 0
  store %struct.Edge** %32, %struct.Edge*** %34, align 8
  %35 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %35, i32 0, i32 0
  %37 = load %struct.Edge**, %struct.Edge*** %36, align 8
  %38 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %38, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = load i64, i64* %5, align 8
  %42 = sub i64 0, %41
  %43 = add i64 %40, %42
  %44 = sub i64 %40, %41
  %45 = udiv i64 %43, 2
  %46 = getelementptr inbounds %struct.Edge*, %struct.Edge** %37, i64 %45
  store %struct.Edge** %46, %struct.Edge*** %8, align 8
  %47 = load %struct.Edge**, %struct.Edge*** %8, align 8
  %48 = load i64, i64* %5, align 8
  %49 = getelementptr inbounds %struct.Edge*, %struct.Edge** %47, i64 %48
  store %struct.Edge** %49, %struct.Edge*** %9, align 8
  %50 = load %struct.Edge**, %struct.Edge*** %8, align 8
  %51 = load %struct.Edge**, %struct.Edge*** %9, align 8
  invoke void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE15_M_create_nodesEPPS0_S4_(%"class.std::_Deque_base"* %12, %struct.Edge** %50, %struct.Edge** %51)
          to label %52 unwind label %53

; <label>:52:                                     ; preds = %2
  br label %170

; <label>:53:                                     ; preds = %2
  %54 = load i32, i32* @x.492
  %55 = load i32, i32* @y.493
  %56 = add i32 %54, 1448555107
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, 1448555107
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 false, true
  %67 = and i1 %64, false
  %68 = and i1 %62, %66
  %69 = and i1 %65, false
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 false, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  br i1 %78, label %80, label %246

; <label>:80:                                     ; preds = %53, %246
  %81 = landingpad { i8*, i32 }
          catch i8* null
  %82 = extractvalue { i8*, i32 } %81, 0
  store i8* %82, i8** %10, align 8
  %83 = extractvalue { i8*, i32 } %81, 1
  store i32 %83, i32* %11, align 4
  %84 = load i32, i32* @x.492
  %85 = load i32, i32* @y.493
  %86 = sub i32 0, 1
  %87 = add i32 %84, %86
  %88 = sub i32 %84, 1
  %89 = mul i32 %84, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %85, 10
  %93 = xor i1 %91, true
  %94 = xor i1 %92, true
  %95 = xor i1 true, true
  %96 = and i1 %93, true
  %97 = and i1 %91, %95
  %98 = and i1 %94, true
  %99 = and i1 %92, %95
  %100 = or i1 %96, %97
  %101 = or i1 %98, %99
  %102 = xor i1 %100, %101
  %103 = or i1 %93, %94
  %104 = xor i1 %103, true
  %105 = or i1 true, %95
  %106 = and i1 %104, %105
  %107 = or i1 %102, %106
  %108 = or i1 %91, %92
  br i1 %107, label %109, label %246

; <label>:109:                                    ; preds = %80
  br label %110

; <label>:110:                                    ; preds = %109
  %111 = load i8*, i8** %10, align 8
  %112 = call i8* @__cxa_begin_catch(i8* %111) #10
  %113 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %114 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %113, i32 0, i32 0
  %115 = load %struct.Edge**, %struct.Edge*** %114, align 8
  %116 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %117 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %116, i32 0, i32 1
  %118 = load i64, i64* %117, align 8
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE17_M_deallocate_mapEPPS0_m(%"class.std::_Deque_base"* %12, %struct.Edge** %115, i64 %118) #10
  %119 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %120 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %119, i32 0, i32 0
  store %struct.Edge** null, %struct.Edge*** %120, align 8
  %121 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %122 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %121, i32 0, i32 1
  store i64 0, i64* %122, align 8
  invoke void @__cxa_rethrow() #11
          to label %204 unwind label %123

; <label>:123:                                    ; preds = %110
  %124 = landingpad { i8*, i32 }
          cleanup
  %125 = extractvalue { i8*, i32 } %124, 0
  store i8* %125, i8** %10, align 8
  %126 = extractvalue { i8*, i32 } %124, 1
  store i32 %126, i32* %11, align 4
  invoke void @__cxa_end_catch()
          to label %127 unwind label %201

; <label>:127:                                    ; preds = %123
  %128 = load i32, i32* @x.492
  %129 = load i32, i32* @y.493
  %130 = sub i32 %128, 1670925793
  %131 = sub i32 %130, 1
  %132 = add i32 %131, 1670925793
  %133 = sub i32 %128, 1
  %134 = mul i32 %128, %132
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %129, 10
  %138 = xor i1 %136, true
  %139 = xor i1 %137, true
  %140 = xor i1 true, true
  %141 = and i1 %138, true
  %142 = and i1 %136, %140
  %143 = and i1 %139, true
  %144 = and i1 %137, %140
  %145 = or i1 %141, %142
  %146 = or i1 %143, %144
  %147 = xor i1 %145, %146
  %148 = or i1 %138, %139
  %149 = xor i1 %148, true
  %150 = or i1 true, %140
  %151 = and i1 %149, %150
  %152 = or i1 %147, %151
  %153 = or i1 %136, %137
  br i1 %152, label %154, label %250

; <label>:154:                                    ; preds = %127, %250
  %155 = load i32, i32* @x.492
  %156 = load i32, i32* @y.493
  %157 = add i32 %155, -639163399
  %158 = sub i32 %157, 1
  %159 = sub i32 %158, -639163399
  %160 = sub i32 %155, 1
  %161 = mul i32 %155, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %156, 10
  %165 = and i1 %163, %164
  %166 = xor i1 %163, %164
  %167 = or i1 %165, %166
  %168 = or i1 %163, %164
  br i1 %167, label %169, label %250

; <label>:169:                                    ; preds = %154
  br label %196

; <label>:170:                                    ; preds = %52
  %171 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %172 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %171, i32 0, i32 2
  %173 = load %struct.Edge**, %struct.Edge*** %8, align 8
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator"* %172, %struct.Edge** %173) #10
  %174 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %175 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %174, i32 0, i32 3
  %176 = load %struct.Edge**, %struct.Edge*** %9, align 8
  %177 = getelementptr inbounds %struct.Edge*, %struct.Edge** %176, i64 -1
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator"* %175, %struct.Edge** %177) #10
  %178 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %179 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %178, i32 0, i32 2
  %180 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %179, i32 0, i32 1
  %181 = load %struct.Edge*, %struct.Edge** %180, align 8
  %182 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %183 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %182, i32 0, i32 2
  %184 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %183, i32 0, i32 0
  store %struct.Edge* %181, %struct.Edge** %184, align 8
  %185 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %186 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %185, i32 0, i32 3
  %187 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %186, i32 0, i32 1
  %188 = load %struct.Edge*, %struct.Edge** %187, align 8
  %189 = load i64, i64* %4, align 8
  %190 = call i64 @_ZSt16__deque_buf_sizem(i64 24)
  %191 = urem i64 %189, %190
  %192 = getelementptr inbounds %struct.Edge, %struct.Edge* %188, i64 %191
  %193 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %194 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %193, i32 0, i32 3
  %195 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %194, i32 0, i32 0
  store %struct.Edge* %192, %struct.Edge** %195, align 8
  ret void

; <label>:196:                                    ; preds = %169
  %197 = load i8*, i8** %10, align 8
  %198 = load i32, i32* %11, align 4
  %199 = insertvalue { i8*, i32 } undef, i8* %197, 0
  %200 = insertvalue { i8*, i32 } %199, i32 %198, 1
  resume { i8*, i32 } %200

; <label>:201:                                    ; preds = %123
  %202 = landingpad { i8*, i32 }
          catch i8* null
  %203 = extractvalue { i8*, i32 } %202, 0
  call void @__clang_call_terminate(i8* %203) #8
  unreachable

; <label>:204:                                    ; preds = %110
  %205 = load i32, i32* @x.492
  %206 = load i32, i32* @y.493
  %207 = add i32 %205, -70352595
  %208 = sub i32 %207, 1
  %209 = sub i32 %208, -70352595
  %210 = sub i32 %205, 1
  %211 = mul i32 %205, %209
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %206, 10
  %215 = xor i1 %213, true
  %216 = xor i1 %214, true
  %217 = xor i1 false, true
  %218 = and i1 %215, false
  %219 = and i1 %213, %217
  %220 = and i1 %216, false
  %221 = and i1 %214, %217
  %222 = or i1 %218, %219
  %223 = or i1 %220, %221
  %224 = xor i1 %222, %223
  %225 = or i1 %215, %216
  %226 = xor i1 %225, true
  %227 = or i1 false, %217
  %228 = and i1 %226, %227
  %229 = or i1 %224, %228
  %230 = or i1 %213, %214
  br i1 %229, label %231, label %251

; <label>:231:                                    ; preds = %204, %251
  %232 = load i32, i32* @x.492
  %233 = load i32, i32* @y.493
  %234 = sub i32 0, 1
  %235 = add i32 %232, %234
  %236 = sub i32 %232, 1
  %237 = mul i32 %232, %235
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %233, 10
  %241 = and i1 %239, %240
  %242 = xor i1 %239, %240
  %243 = or i1 %241, %242
  %244 = or i1 %239, %240
  br i1 %243, label %245, label %251

; <label>:245:                                    ; preds = %231
  unreachable

; <label>:246:                                    ; preds = %80, %53
  %247 = landingpad { i8*, i32 }
          catch i8* null
  %248 = extractvalue { i8*, i32 } %247, 0
  store i8* %248, i8** %10, align 8
  %249 = extractvalue { i8*, i32 } %247, 1
  store i32 %249, i32* %11, align 4
  br label %80

; <label>:250:                                    ; preds = %154, %127
  br label %154

; <label>:251:                                    ; preds = %231, %204
  br label %231
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE11_Deque_implD2Ev(%"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.494
  %5 = load i32, i32* @y.495
  %6 = add i32 %4, -1764615222
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1764615222
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -2109959944, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %49
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2109959944, label %18
    i32 120805648, label %26
    i32 2143653485, label %44
    i32 1930562272, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %49

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 120805648, i32 1930562272
  store i32 %25, i32* %14
  br label %49

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %0, %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"** %27, align 8
  %28 = load %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"*, %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"** %27, align 8
  %29 = bitcast %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %28 to %"class.std::allocator.2"*
  call void @_ZNSaI4EdgeED2Ev(%"class.std::allocator.2"* %29) #10
  %30 = load i32, i32* @x.494
  %31 = load i32, i32* @y.495
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 2143653485, i32 1930562272
  store i32 %43, i32* %14
  br label %49

; <label>:44:                                     ; preds = %15
  ret void

; <label>:45:                                     ; preds = %15
  %46 = alloca %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %0, %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"** %46, align 8
  %47 = load %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"*, %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"** %46, align 8
  %48 = bitcast %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %47 to %"class.std::allocator.2"*
  call void @_ZNSaI4EdgeED2Ev(%"class.std::allocator.2"* %48) #10
  store i32 120805648, i32* %14
  br label %49

; <label>:49:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI4EdgeEC2Ev(%"class.std::allocator.2"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorI4EdgeEC2Ev(%"class.__gnu_cxx::new_allocator.3"* %4) #10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2Ev(%"struct.std::_Deque_iterator"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  store %struct.Edge* null, %struct.Edge** %4, align 8
  %5 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 1
  store %struct.Edge* null, %struct.Edge** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 2
  store %struct.Edge* null, %struct.Edge** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 3
  store %struct.Edge** null, %struct.Edge*** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI4EdgeEC2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt16__deque_buf_sizem(i64) #0 comdat {
  %2 = alloca i64
  %3 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  %4 = load i64, i64* %3, align 8
  store i64 %4, i64* %2
  %5 = alloca i32
  store i32 -1375021612, i32* %5
  %6 = alloca i64
  br label %7

; <label>:7:                                      ; preds = %1, %20
  %8 = load i32, i32* %5
  switch i32 %8, label %9 [
    i32 -1375021612, label %10
    i32 731090900, label %14
    i32 177628394, label %17
    i32 2127026798, label %18
  ]

; <label>:9:                                      ; preds = %7
  br label %20

; <label>:10:                                     ; preds = %7
  %11 = load volatile i64, i64* %2
  %12 = icmp ult i64 %11, 512
  %13 = select i1 %12, i32 731090900, i32 177628394
  store i32 %13, i32* %5
  br label %20

; <label>:14:                                     ; preds = %7
  %15 = load i64, i64* %3, align 8
  %16 = udiv i64 512, %15
  store i32 2127026798, i32* %5
  store i64 %16, i64* %6
  br label %20

; <label>:17:                                     ; preds = %7
  store i32 2127026798, i32* %5
  store i64 1, i64* %6
  br label %20

; <label>:18:                                     ; preds = %7
  %19 = load i64, i64* %6
  ret i64 %19

; <label>:20:                                     ; preds = %17, %14, %10, %9
  br label %7
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge** @_ZNSt11_Deque_baseI4EdgeSaIS0_EE15_M_allocate_mapEm(%"class.std::_Deque_base"*, i64) #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::allocator.27", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  call void @_ZNKSt11_Deque_baseI4EdgeSaIS0_EE20_M_get_map_allocatorEv(%"class.std::allocator.27"* sret %5, %"class.std::_Deque_base"* %8) #10
  %9 = load i64, i64* %4, align 8
  %10 = invoke %struct.Edge** @_ZNSt16allocator_traitsISaIP4EdgeEE8allocateERS2_m(%"class.std::allocator.27"* dereferenceable(1) %5, i64 %9)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %2
  call void @_ZNSaIP4EdgeED2Ev(%"class.std::allocator.27"* %5) #10
  ret %struct.Edge** %10

; <label>:12:                                     ; preds = %2
  %13 = load i32, i32* @x.504
  %14 = load i32, i32* @y.505
  %15 = sub i32 %13, 2023560116
  %16 = sub i32 %15, 1
  %17 = add i32 %16, 2023560116
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %14, 10
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  br i1 %25, label %27, label %50

; <label>:27:                                     ; preds = %12, %50
  %28 = landingpad { i8*, i32 }
          cleanup
  %29 = extractvalue { i8*, i32 } %28, 0
  store i8* %29, i8** %6, align 8
  %30 = extractvalue { i8*, i32 } %28, 1
  store i32 %30, i32* %7, align 4
  call void @_ZNSaIP4EdgeED2Ev(%"class.std::allocator.27"* %5) #10
  %31 = load i32, i32* @x.504
  %32 = load i32, i32* @y.505
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  br i1 %42, label %44, label %50

; <label>:44:                                     ; preds = %27
  br label %45

; <label>:45:                                     ; preds = %44
  %46 = load i8*, i8** %6, align 8
  %47 = load i32, i32* %7, align 4
  %48 = insertvalue { i8*, i32 } undef, i8* %46, 0
  %49 = insertvalue { i8*, i32 } %48, i32 %47, 1
  resume { i8*, i32 } %49

; <label>:50:                                     ; preds = %27, %12
  %51 = landingpad { i8*, i32 }
          cleanup
  %52 = extractvalue { i8*, i32 } %51, 0
  store i8* %52, i8** %6, align 8
  %53 = extractvalue { i8*, i32 } %51, 1
  store i32 %53, i32* %7, align 4
  call void @_ZNSaIP4EdgeED2Ev(%"class.std::allocator.27"* %5) #10
  br label %27
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE15_M_create_nodesEPPS0_S4_(%"class.std::_Deque_base"*, %struct.Edge**, %struct.Edge**) #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %struct.Edge**, align 8
  %6 = alloca %struct.Edge**, align 8
  %7 = alloca %struct.Edge**, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store %struct.Edge** %1, %struct.Edge*** %5, align 8
  store %struct.Edge** %2, %struct.Edge*** %6, align 8
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %11 = load %struct.Edge**, %struct.Edge*** %5, align 8
  store %struct.Edge** %11, %struct.Edge*** %7, align 8
  br label %12

; <label>:12:                                     ; preds = %76, %3
  %13 = load %struct.Edge**, %struct.Edge*** %7, align 8
  %14 = load %struct.Edge**, %struct.Edge*** %6, align 8
  %15 = icmp ult %struct.Edge** %13, %14
  br i1 %15, label %16, label %181

; <label>:16:                                     ; preds = %12
  %17 = invoke %struct.Edge* @_ZNSt11_Deque_baseI4EdgeSaIS0_EE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %10)
          to label %18 unwind label %77

; <label>:18:                                     ; preds = %16
  %19 = load %struct.Edge**, %struct.Edge*** %7, align 8
  store %struct.Edge* %17, %struct.Edge** %19, align 8
  br label %20

; <label>:20:                                     ; preds = %18
  %21 = load i32, i32* @x.506
  %22 = load i32, i32* @y.507
  %23 = sub i32 %21, -2013375557
  %24 = sub i32 %23, 1
  %25 = add i32 %24, -2013375557
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 false, true
  %34 = and i1 %31, false
  %35 = and i1 %29, %33
  %36 = and i1 %32, false
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 false, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  br i1 %45, label %47, label %291

; <label>:47:                                     ; preds = %20, %291
  %48 = load %struct.Edge**, %struct.Edge*** %7, align 8
  %49 = getelementptr inbounds %struct.Edge*, %struct.Edge** %48, i32 1
  store %struct.Edge** %49, %struct.Edge*** %7, align 8
  %50 = load i32, i32* @x.506
  %51 = load i32, i32* @y.507
  %52 = add i32 %50, -1096353237
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -1096353237
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  br i1 %74, label %76, label %291

; <label>:76:                                     ; preds = %47
  br label %12

; <label>:77:                                     ; preds = %16
  %78 = load i32, i32* @x.506
  %79 = load i32, i32* @y.507
  %80 = sub i32 0, 1
  %81 = add i32 %78, %80
  %82 = sub i32 %78, 1
  %83 = mul i32 %78, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %79, 10
  %87 = xor i1 %85, true
  %88 = xor i1 %86, true
  %89 = xor i1 true, true
  %90 = and i1 %87, true
  %91 = and i1 %85, %89
  %92 = and i1 %88, true
  %93 = and i1 %86, %89
  %94 = or i1 %90, %91
  %95 = or i1 %92, %93
  %96 = xor i1 %94, %95
  %97 = or i1 %87, %88
  %98 = xor i1 %97, true
  %99 = or i1 true, %89
  %100 = and i1 %98, %99
  %101 = or i1 %96, %100
  %102 = or i1 %85, %86
  br i1 %101, label %103, label %294

; <label>:103:                                    ; preds = %77, %294
  %104 = landingpad { i8*, i32 }
          catch i8* null
  %105 = extractvalue { i8*, i32 } %104, 0
  store i8* %105, i8** %8, align 8
  %106 = extractvalue { i8*, i32 } %104, 1
  store i32 %106, i32* %9, align 4
  %107 = load i32, i32* @x.506
  %108 = load i32, i32* @y.507
  %109 = sub i32 %107, 32603292
  %110 = sub i32 %109, 1
  %111 = add i32 %110, 32603292
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = and i1 %115, %116
  %118 = xor i1 %115, %116
  %119 = or i1 %117, %118
  %120 = or i1 %115, %116
  br i1 %119, label %121, label %294

; <label>:121:                                    ; preds = %103
  br label %122

; <label>:122:                                    ; preds = %121
  %123 = load i32, i32* @x.506
  %124 = load i32, i32* @y.507
  %125 = sub i32 %123, -1324133172
  %126 = sub i32 %125, 1
  %127 = add i32 %126, -1324133172
  %128 = sub i32 %123, 1
  %129 = mul i32 %123, %127
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %124, 10
  %133 = xor i1 %131, true
  %134 = xor i1 %132, true
  %135 = xor i1 true, true
  %136 = and i1 %133, true
  %137 = and i1 %131, %135
  %138 = and i1 %134, true
  %139 = and i1 %132, %135
  %140 = or i1 %136, %137
  %141 = or i1 %138, %139
  %142 = xor i1 %140, %141
  %143 = or i1 %133, %134
  %144 = xor i1 %143, true
  %145 = or i1 true, %135
  %146 = and i1 %144, %145
  %147 = or i1 %142, %146
  %148 = or i1 %131, %132
  br i1 %147, label %149, label %298

; <label>:149:                                    ; preds = %122, %298
  %150 = load i8*, i8** %8, align 8
  %151 = call i8* @__cxa_begin_catch(i8* %150) #10
  %152 = load %struct.Edge**, %struct.Edge*** %5, align 8
  %153 = load %struct.Edge**, %struct.Edge*** %7, align 8
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE16_M_destroy_nodesEPPS0_S4_(%"class.std::_Deque_base"* %10, %struct.Edge** %152, %struct.Edge** %153) #10
  %154 = load i32, i32* @x.506
  %155 = load i32, i32* @y.507
  %156 = add i32 %154, -610406293
  %157 = sub i32 %156, 1
  %158 = sub i32 %157, -610406293
  %159 = sub i32 %154, 1
  %160 = mul i32 %154, %158
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %155, 10
  %164 = xor i1 %162, true
  %165 = xor i1 %163, true
  %166 = xor i1 false, true
  %167 = and i1 %164, false
  %168 = and i1 %162, %166
  %169 = and i1 %165, false
  %170 = and i1 %163, %166
  %171 = or i1 %167, %168
  %172 = or i1 %169, %170
  %173 = xor i1 %171, %172
  %174 = or i1 %164, %165
  %175 = xor i1 %174, true
  %176 = or i1 false, %166
  %177 = and i1 %175, %176
  %178 = or i1 %173, %177
  %179 = or i1 %162, %163
  br i1 %178, label %180, label %298

; <label>:180:                                    ; preds = %149
  invoke void @__cxa_rethrow() #11
          to label %237 unwind label %223

; <label>:181:                                    ; preds = %12
  %182 = load i32, i32* @x.506
  %183 = load i32, i32* @y.507
  %184 = sub i32 0, 1
  %185 = add i32 %182, %184
  %186 = sub i32 %182, 1
  %187 = mul i32 %182, %185
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %183, 10
  %191 = xor i1 %189, true
  %192 = xor i1 %190, true
  %193 = xor i1 true, true
  %194 = and i1 %191, true
  %195 = and i1 %189, %193
  %196 = and i1 %192, true
  %197 = and i1 %190, %193
  %198 = or i1 %194, %195
  %199 = or i1 %196, %197
  %200 = xor i1 %198, %199
  %201 = or i1 %191, %192
  %202 = xor i1 %201, true
  %203 = or i1 true, %193
  %204 = and i1 %202, %203
  %205 = or i1 %200, %204
  %206 = or i1 %189, %190
  br i1 %205, label %207, label %303

; <label>:207:                                    ; preds = %181, %303
  %208 = load i32, i32* @x.506
  %209 = load i32, i32* @y.507
  %210 = sub i32 %208, -407298661
  %211 = sub i32 %210, 1
  %212 = add i32 %211, -407298661
  %213 = sub i32 %208, 1
  %214 = mul i32 %208, %212
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %209, 10
  %218 = and i1 %216, %217
  %219 = xor i1 %216, %217
  %220 = or i1 %218, %219
  %221 = or i1 %216, %217
  br i1 %220, label %222, label %303

; <label>:222:                                    ; preds = %207
  br label %228

; <label>:223:                                    ; preds = %180
  %224 = landingpad { i8*, i32 }
          cleanup
  %225 = extractvalue { i8*, i32 } %224, 0
  store i8* %225, i8** %8, align 8
  %226 = extractvalue { i8*, i32 } %224, 1
  store i32 %226, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %227 unwind label %234

; <label>:227:                                    ; preds = %223
  br label %229

; <label>:228:                                    ; preds = %222
  ret void

; <label>:229:                                    ; preds = %227
  %230 = load i8*, i8** %8, align 8
  %231 = load i32, i32* %9, align 4
  %232 = insertvalue { i8*, i32 } undef, i8* %230, 0
  %233 = insertvalue { i8*, i32 } %232, i32 %231, 1
  resume { i8*, i32 } %233

; <label>:234:                                    ; preds = %223
  %235 = landingpad { i8*, i32 }
          catch i8* null
  %236 = extractvalue { i8*, i32 } %235, 0
  call void @__clang_call_terminate(i8* %236) #8
  unreachable

; <label>:237:                                    ; preds = %180
  %238 = load i32, i32* @x.506
  %239 = load i32, i32* @y.507
  %240 = sub i32 %238, -300478892
  %241 = sub i32 %240, 1
  %242 = add i32 %241, -300478892
  %243 = sub i32 %238, 1
  %244 = mul i32 %238, %242
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %239, 10
  %248 = xor i1 %246, true
  %249 = xor i1 %247, true
  %250 = xor i1 true, true
  %251 = and i1 %248, true
  %252 = and i1 %246, %250
  %253 = and i1 %249, true
  %254 = and i1 %247, %250
  %255 = or i1 %251, %252
  %256 = or i1 %253, %254
  %257 = xor i1 %255, %256
  %258 = or i1 %248, %249
  %259 = xor i1 %258, true
  %260 = or i1 true, %250
  %261 = and i1 %259, %260
  %262 = or i1 %257, %261
  %263 = or i1 %246, %247
  br i1 %262, label %264, label %304

; <label>:264:                                    ; preds = %237, %304
  %265 = load i32, i32* @x.506
  %266 = load i32, i32* @y.507
  %267 = sub i32 0, 1
  %268 = add i32 %265, %267
  %269 = sub i32 %265, 1
  %270 = mul i32 %265, %268
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %266, 10
  %274 = xor i1 %272, true
  %275 = xor i1 %273, true
  %276 = xor i1 true, true
  %277 = and i1 %274, true
  %278 = and i1 %272, %276
  %279 = and i1 %275, true
  %280 = and i1 %273, %276
  %281 = or i1 %277, %278
  %282 = or i1 %279, %280
  %283 = xor i1 %281, %282
  %284 = or i1 %274, %275
  %285 = xor i1 %284, true
  %286 = or i1 true, %276
  %287 = and i1 %285, %286
  %288 = or i1 %283, %287
  %289 = or i1 %272, %273
  br i1 %288, label %290, label %304

; <label>:290:                                    ; preds = %264
  unreachable

; <label>:291:                                    ; preds = %47, %20
  %292 = load %struct.Edge**, %struct.Edge*** %7, align 8
  %293 = getelementptr inbounds %struct.Edge*, %struct.Edge** %292, i32 1
  store %struct.Edge** %293, %struct.Edge*** %7, align 8
  br label %47

; <label>:294:                                    ; preds = %103, %77
  %295 = landingpad { i8*, i32 }
          catch i8* null
  %296 = extractvalue { i8*, i32 } %295, 0
  store i8* %296, i8** %8, align 8
  %297 = extractvalue { i8*, i32 } %295, 1
  store i32 %297, i32* %9, align 4
  br label %103

; <label>:298:                                    ; preds = %149, %122
  %299 = load i8*, i8** %8, align 8
  %300 = call i8* @__cxa_begin_catch(i8* %299) #10
  %301 = load %struct.Edge**, %struct.Edge*** %5, align 8
  %302 = load %struct.Edge**, %struct.Edge*** %7, align 8
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE16_M_destroy_nodesEPPS0_S4_(%"class.std::_Deque_base"* %10, %struct.Edge** %301, %struct.Edge** %302) #10
  br label %149

; <label>:303:                                    ; preds = %207, %181
  br label %207

; <label>:304:                                    ; preds = %264, %237
  br label %264
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE17_M_deallocate_mapEPPS0_m(%"class.std::_Deque_base"*, %struct.Edge**, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %struct.Edge**, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::allocator.27", align 1
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store %struct.Edge** %1, %struct.Edge*** %5, align 8
  store i64 %2, i64* %6, align 8
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  call void @_ZNKSt11_Deque_baseI4EdgeSaIS0_EE20_M_get_map_allocatorEv(%"class.std::allocator.27"* sret %7, %"class.std::_Deque_base"* %10) #10
  %11 = load %struct.Edge**, %struct.Edge*** %5, align 8
  %12 = load i64, i64* %6, align 8
  invoke void @_ZNSt16allocator_traitsISaIP4EdgeEE10deallocateERS2_PS1_m(%"class.std::allocator.27"* dereferenceable(1) %7, %struct.Edge** %11, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  call void @_ZNSaIP4EdgeED2Ev(%"class.std::allocator.27"* %7) #10
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          catch i8* null
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %8, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %9, align 4
  call void @_ZNSaIP4EdgeED2Ev(%"class.std::allocator.27"* %7) #10
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i8*, i8** %8, align 8
  call void @__clang_call_terminate(i8* %19) #8
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator"*, %struct.Edge**) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %struct.Edge**, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %struct.Edge** %1, %struct.Edge*** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = load %struct.Edge**, %struct.Edge*** %4, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 3
  store %struct.Edge** %6, %struct.Edge*** %7, align 8
  %8 = load %struct.Edge**, %struct.Edge*** %4, align 8
  %9 = load %struct.Edge*, %struct.Edge** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  store %struct.Edge* %9, %struct.Edge** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  %12 = load %struct.Edge*, %struct.Edge** %11, align 8
  %13 = call i64 @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E14_S_buffer_sizeEv() #10
  %14 = getelementptr inbounds %struct.Edge, %struct.Edge* %12, i64 %13
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 2
  store %struct.Edge* %14, %struct.Edge** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt11_Deque_baseI4EdgeSaIS0_EE20_M_get_map_allocatorEv(%"class.std::allocator.27"* noalias sret, %"class.std::_Deque_base"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.512
  %6 = load i32, i32* @y.513
  %7 = add i32 %5, -1437764395
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1437764395
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1074708703, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1074708703, label %19
    i32 -431949332, label %39
    i32 -497968659, label %58
    i32 -578126754, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -431949332, i32 -578126754
  store i32 %38, i32* %15
  br label %63

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %40, align 8
  %41 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %40, align 8
  %42 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt11_Deque_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %41) #10
  call void @_ZNSaIP4EdgeEC2IS_EERKSaIT_E(%"class.std::allocator.27"* %0, %"class.std::allocator.2"* dereferenceable(1) %42) #10
  %43 = load i32, i32* @x.512
  %44 = load i32, i32* @y.513
  %45 = sub i32 %43, -703570204
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -703570204
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -497968659, i32 -578126754
  store i32 %57, i32* %15
  br label %63

; <label>:58:                                     ; preds = %16
  ret void

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %60, align 8
  %61 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %60, align 8
  %62 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt11_Deque_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %61) #10
  call void @_ZNSaIP4EdgeEC2IS_EERKSaIT_E(%"class.std::allocator.27"* %0, %"class.std::allocator.2"* dereferenceable(1) %62) #10
  store i32 -431949332, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge** @_ZNSt16allocator_traitsISaIP4EdgeEE8allocateERS2_m(%"class.std::allocator.27"* dereferenceable(1), i64) #1 comdat align 2 {
  %3 = alloca %struct.Edge**
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.514
  %7 = load i32, i32* @y.515
  %8 = add i32 %6, 832024428
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 832024428
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 2040140947, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %83
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 2040140947, label %20
    i32 -785938760, label %40
    i32 1440088587, label %74
    i32 -1893645516, label %76
  ]

; <label>:19:                                     ; preds = %17
  br label %83

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -785938760, i32 -1893645516
  store i32 %39, i32* %16
  br label %83

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.27"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %41, align 8
  store i64 %1, i64* %42, align 8
  %43 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %41, align 8
  %44 = bitcast %"class.std::allocator.27"* %43 to %"class.__gnu_cxx::new_allocator.28"*
  %45 = load i64, i64* %42, align 8
  %46 = call %struct.Edge** @_ZN9__gnu_cxx13new_allocatorIP4EdgeE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.28"* %44, i64 %45, i8* null)
  store %struct.Edge** %46, %struct.Edge*** %3
  %47 = load i32, i32* @x.514
  %48 = load i32, i32* @y.515
  %49 = add i32 %47, -1307477813
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -1307477813
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 1440088587, i32 -1893645516
  store i32 %73, i32* %16
  br label %83

; <label>:74:                                     ; preds = %17
  %75 = load volatile %struct.Edge**, %struct.Edge*** %3
  ret %struct.Edge** %75

; <label>:76:                                     ; preds = %17
  %77 = alloca %"class.std::allocator.27"*, align 8
  %78 = alloca i64, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %77, align 8
  store i64 %1, i64* %78, align 8
  %79 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %77, align 8
  %80 = bitcast %"class.std::allocator.27"* %79 to %"class.__gnu_cxx::new_allocator.28"*
  %81 = load i64, i64* %78, align 8
  %82 = call %struct.Edge** @_ZN9__gnu_cxx13new_allocatorIP4EdgeE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.28"* %80, i64 %81, i8* null)
  store i32 -785938760, i32* %16
  br label %83

; <label>:83:                                     ; preds = %76, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIP4EdgeED2Ev(%"class.std::allocator.27"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.27"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %2, align 8
  %3 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %2, align 8
  %4 = bitcast %"class.std::allocator.27"* %3 to %"class.__gnu_cxx::new_allocator.28"*
  call void @_ZN9__gnu_cxx13new_allocatorIP4EdgeED2Ev(%"class.__gnu_cxx::new_allocator.28"* %4) #10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt11_Deque_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #0 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %4 to %"class.std::allocator.2"*
  ret %"class.std::allocator.2"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIP4EdgeEC2IS_EERKSaIT_E(%"class.std::allocator.27"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.27"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %5 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %3, align 8
  %6 = bitcast %"class.std::allocator.27"* %5 to %"class.__gnu_cxx::new_allocator.28"*
  call void @_ZN9__gnu_cxx13new_allocatorIP4EdgeEC2Ev(%"class.__gnu_cxx::new_allocator.28"* %6) #10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIP4EdgeEC2Ev(%"class.__gnu_cxx::new_allocator.28"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge** @_ZN9__gnu_cxx13new_allocatorIP4EdgeE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.28"*, i64, i8*) #1 comdat align 2 {
  %4 = alloca %struct.Edge**
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorIP4EdgeE8max_sizeEv(%"class.__gnu_cxx::new_allocator.28"* %10) #10
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 1442417714, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %79
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1442417714, label %17
    i32 -2044917649, label %22
    i32 780545966, label %23
    i32 -986061819, label %38
    i32 74694222, label %58
    i32 686532804, label %60
  ]

; <label>:16:                                     ; preds = %14
  br label %79

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 -2044917649, i32 780545966
  store i32 %21, i32* %13
  br label %79

; <label>:22:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #11
  unreachable

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* @x.524
  %25 = load i32, i32* @y.525
  %26 = sub i32 0, 1
  %27 = add i32 %24, %26
  %28 = sub i32 %24, 1
  %29 = mul i32 %24, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %25, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  %37 = select i1 %35, i32 -986061819, i32 686532804
  store i32 %37, i32* %13
  br label %79

; <label>:38:                                     ; preds = %14
  %39 = load i64, i64* %8, align 8
  %40 = mul i64 %39, 8
  %41 = call i8* @_Znwm(i64 %40)
  %42 = bitcast i8* %41 to %struct.Edge**
  store %struct.Edge** %42, %struct.Edge*** %4
  %43 = load i32, i32* @x.524
  %44 = load i32, i32* @y.525
  %45 = add i32 %43, 1588252816
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 1588252816
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 74694222, i32 686532804
  store i32 %57, i32* %13
  br label %79

; <label>:58:                                     ; preds = %14
  %59 = load volatile %struct.Edge**, %struct.Edge*** %4
  ret %struct.Edge** %59

; <label>:60:                                     ; preds = %14
  %61 = load i64, i64* %8, align 8
  %62 = sub i64 0, %61
  %63 = add i64 0, %62
  %64 = sub i64 0, %61
  %65 = add i64 %63, -939007943622835916
  %66 = add i64 %65, 8
  %67 = sub i64 %66, -939007943622835916
  %68 = add i64 %63, 8
  %69 = add i64 0, 8620177182671211385
  %70 = sub i64 %69, %61
  %71 = sub i64 %70, 8620177182671211385
  %72 = sub i64 0, %61
  %73 = sub i64 0, 8
  %74 = sub i64 %71, %73
  %75 = add i64 %71, 8
  %76 = mul i64 %61, 8
  %77 = call i8* @_Znwm(i64 %76)
  %78 = bitcast i8* %77 to %struct.Edge**
  store i32 -986061819, i32* %13
  br label %79

; <label>:79:                                     ; preds = %60, %38, %23, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIP4EdgeE8max_sizeEv(%"class.__gnu_cxx::new_allocator.28"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIP4EdgeED2Ev(%"class.__gnu_cxx::new_allocator.28"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge* @_ZNSt11_Deque_baseI4EdgeSaIS0_EE16_M_allocate_nodeEv(%"class.std::_Deque_base"*) #1 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %4 to %"class.std::allocator.2"*
  %6 = call i64 @_ZSt16__deque_buf_sizem(i64 24)
  %7 = call %struct.Edge* @_ZNSt16allocator_traitsISaI4EdgeEE8allocateERS1_m(%"class.std::allocator.2"* dereferenceable(1) %5, i64 %6)
  ret %struct.Edge* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE16_M_destroy_nodesEPPS0_S4_(%"class.std::_Deque_base"*, %struct.Edge**, %struct.Edge**) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"class.std::_Deque_base"*
  %6 = alloca %"class.std::_Deque_base"*, align 8
  %7 = alloca %struct.Edge**, align 8
  %8 = alloca %struct.Edge**, align 8
  %9 = alloca %struct.Edge**, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %6, align 8
  store %struct.Edge** %1, %struct.Edge*** %7, align 8
  store %struct.Edge** %2, %struct.Edge*** %8, align 8
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %6, align 8
  store %"class.std::_Deque_base"* %10, %"class.std::_Deque_base"** %5
  %11 = load %struct.Edge**, %struct.Edge*** %7, align 8
  store %struct.Edge** %11, %struct.Edge*** %9, align 8
  %12 = alloca i32
  store i32 1282411801, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %109
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1282411801, label %16
    i32 -1453913961, label %32
    i32 -417166871, label %51
    i32 -1392287315, label %54
    i32 1294174320, label %58
    i32 794438810, label %61
    i32 -2057473753, label %88
    i32 1860054117, label %103
    i32 1982097371, label %104
    i32 -1999501504, label %108
  ]

; <label>:15:                                     ; preds = %13
  br label %109

; <label>:16:                                     ; preds = %13
  %17 = load i32, i32* @x.532
  %18 = load i32, i32* @y.533
  %19 = add i32 %17, -717193550
  %20 = sub i32 %19, 1
  %21 = sub i32 %20, -717193550
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 -1453913961, i32 1982097371
  store i32 %31, i32* %12
  br label %109

; <label>:32:                                     ; preds = %13
  %33 = load %struct.Edge**, %struct.Edge*** %9, align 8
  %34 = load %struct.Edge**, %struct.Edge*** %8, align 8
  %35 = icmp ult %struct.Edge** %33, %34
  store i1 %35, i1* %4
  %36 = load i32, i32* @x.532
  %37 = load i32, i32* @y.533
  %38 = sub i32 %36, -601227199
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -601227199
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 -417166871, i32 1982097371
  store i32 %50, i32* %12
  br label %109

; <label>:51:                                     ; preds = %13
  %52 = load volatile i1, i1* %4
  %53 = select i1 %52, i32 -1392287315, i32 794438810
  store i32 %53, i32* %12
  br label %109

; <label>:54:                                     ; preds = %13
  %55 = load %struct.Edge**, %struct.Edge*** %9, align 8
  %56 = load %struct.Edge*, %struct.Edge** %55, align 8
  %57 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE18_M_deallocate_nodeEPS0_(%"class.std::_Deque_base"* %57, %struct.Edge* %56) #10
  store i32 1294174320, i32* %12
  br label %109

; <label>:58:                                     ; preds = %13
  %59 = load %struct.Edge**, %struct.Edge*** %9, align 8
  %60 = getelementptr inbounds %struct.Edge*, %struct.Edge** %59, i32 1
  store %struct.Edge** %60, %struct.Edge*** %9, align 8
  store i32 1282411801, i32* %12
  br label %109

; <label>:61:                                     ; preds = %13
  %62 = load i32, i32* @x.532
  %63 = load i32, i32* @y.533
  %64 = sub i32 0, 1
  %65 = add i32 %62, %64
  %66 = sub i32 %62, 1
  %67 = mul i32 %62, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %63, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 true, true
  %74 = and i1 %71, true
  %75 = and i1 %69, %73
  %76 = and i1 %72, true
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 true, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  %87 = select i1 %85, i32 -2057473753, i32 -1999501504
  store i32 %87, i32* %12
  br label %109

; <label>:88:                                     ; preds = %13
  %89 = load i32, i32* @x.532
  %90 = load i32, i32* @y.533
  %91 = sub i32 0, 1
  %92 = add i32 %89, %91
  %93 = sub i32 %89, 1
  %94 = mul i32 %89, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %90, 10
  %98 = and i1 %96, %97
  %99 = xor i1 %96, %97
  %100 = or i1 %98, %99
  %101 = or i1 %96, %97
  %102 = select i1 %100, i32 1860054117, i32 -1999501504
  store i32 %102, i32* %12
  br label %109

; <label>:103:                                    ; preds = %13
  ret void

; <label>:104:                                    ; preds = %13
  %105 = load %struct.Edge**, %struct.Edge*** %9, align 8
  %106 = load %struct.Edge**, %struct.Edge*** %8, align 8
  %107 = icmp ult %struct.Edge** %105, %106
  store i32 -1453913961, i32* %12
  br label %109

; <label>:108:                                    ; preds = %13
  store i32 -2057473753, i32* %12
  br label %109

; <label>:109:                                    ; preds = %108, %104, %88, %61, %58, %54, %51, %32, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE18_M_deallocate_nodeEPS0_(%"class.std::_Deque_base"*, %struct.Edge*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca %struct.Edge*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store %struct.Edge* %1, %struct.Edge** %4, align 8
  %5 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %6 to %"class.std::allocator.2"*
  %8 = load %struct.Edge*, %struct.Edge** %4, align 8
  %9 = invoke i64 @_ZSt16__deque_buf_sizem(i64 24)
          to label %10 unwind label %12

; <label>:10:                                     ; preds = %2
  invoke void @_ZNSt16allocator_traitsISaI4EdgeEE10deallocateERS1_PS0_m(%"class.std::allocator.2"* dereferenceable(1) %7, %struct.Edge* %8, i64 %9)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %10
  ret void

; <label>:12:                                     ; preds = %10, %2
  %13 = load i32, i32* @x.534
  %14 = load i32, i32* @y.535
  %15 = sub i32 0, 1
  %16 = add i32 %13, %15
  %17 = sub i32 %13, 1
  %18 = mul i32 %13, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %14, 10
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  br i1 %36, label %38, label %68

; <label>:38:                                     ; preds = %12, %68
  %39 = landingpad { i8*, i32 }
          catch i8* null
  %40 = extractvalue { i8*, i32 } %39, 0
  call void @__clang_call_terminate(i8* %40) #8
  %41 = load i32, i32* @x.534
  %42 = load i32, i32* @y.535
  %43 = sub i32 %41, -90188784
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -90188784
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  br i1 %65, label %67, label %68

; <label>:67:                                     ; preds = %38
  unreachable

; <label>:68:                                     ; preds = %38, %12
  %69 = landingpad { i8*, i32 }
          catch i8* null
  %70 = extractvalue { i8*, i32 } %69, 0
  call void @__clang_call_terminate(i8* %70) #8
  br label %38
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIP4EdgeEE10deallocateERS2_PS1_m(%"class.std::allocator.27"* dereferenceable(1), %struct.Edge**, i64) #1 comdat align 2 {
  %4 = alloca %"class.std::allocator.27"*, align 8
  %5 = alloca %struct.Edge**, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %4, align 8
  store %struct.Edge** %1, %struct.Edge*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %4, align 8
  %8 = bitcast %"class.std::allocator.27"* %7 to %"class.__gnu_cxx::new_allocator.28"*
  %9 = load %struct.Edge**, %struct.Edge*** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIP4EdgeE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.28"* %8, %struct.Edge** %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIP4EdgeE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.28"*, %struct.Edge**, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.538
  %7 = load i32, i32* @y.539
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 932442659, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 932442659, label %19
    i32 -1675128171, label %27
    i32 1363638716, label %61
    i32 433617774, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1675128171, i32 433617774
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  %29 = alloca %struct.Edge**, align 8
  %30 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %28, align 8
  store %struct.Edge** %1, %struct.Edge*** %29, align 8
  store i64 %2, i64* %30, align 8
  %31 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %28, align 8
  %32 = load %struct.Edge**, %struct.Edge*** %29, align 8
  %33 = bitcast %struct.Edge** %32 to i8*
  call void @_ZdlPv(i8* %33) #10
  %34 = load i32, i32* @x.538
  %35 = load i32, i32* @y.539
  %36 = sub i32 %34, 1399331640
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 1399331640
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 1363638716, i32 433617774
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  %64 = alloca %struct.Edge**, align 8
  %65 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %63, align 8
  store %struct.Edge** %1, %struct.Edge*** %64, align 8
  store i64 %2, i64* %65, align 8
  %66 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %63, align 8
  %67 = load %struct.Edge**, %struct.Edge*** %64, align 8
  %68 = bitcast %struct.Edge** %67 to i8*
  call void @_ZdlPv(i8* %68) #10
  store i32 -1675128171, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E14_S_buffer_sizeEv() #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = load i32, i32* @x.540
  %2 = load i32, i32* @y.541
  %3 = sub i32 %1, -452971406
  %4 = sub i32 %3, 1
  %5 = add i32 %4, -452971406
  %6 = sub i32 %1, 1
  %7 = mul i32 %1, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %2, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %35

; <label>:15:                                     ; preds = %0, %35
  %16 = load i32, i32* @x.540
  %17 = load i32, i32* @y.541
  %18 = sub i32 0, 1
  %19 = add i32 %16, %18
  %20 = sub i32 %16, 1
  %21 = mul i32 %16, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %17, 10
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  br i1 %27, label %29, label %35

; <label>:29:                                     ; preds = %15
  %30 = invoke i64 @_ZSt16__deque_buf_sizem(i64 24)
          to label %31 unwind label %32

; <label>:31:                                     ; preds = %29
  ret i64 %30

; <label>:32:                                     ; preds = %29
  %33 = landingpad { i8*, i32 }
          catch i8* null
  %34 = extractvalue { i8*, i32 } %33, 0
  call void @__clang_call_terminate(i8* %34) #8
  unreachable

; <label>:35:                                     ; preds = %15, %0
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI4EdgeED2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.542
  %5 = load i32, i32* @y.543
  %6 = add i32 %4, -1778987715
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1778987715
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1483455621, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %48
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1483455621, label %18
    i32 2133338403, label %26
    i32 -1425992523, label %44
    i32 -338622822, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %48

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 2133338403, i32 -338622822
  store i32 %25, i32* %14
  br label %48

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %27, align 8
  %29 = load i32, i32* @x.542
  %30 = load i32, i32* @y.543
  %31 = sub i32 %29, -106816896
  %32 = sub i32 %31, 1
  %33 = add i32 %32, -106816896
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -1425992523, i32 -338622822
  store i32 %43, i32* %14
  br label %48

; <label>:44:                                     ; preds = %15
  ret void

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %46, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %46, align 8
  store i32 2133338403, i32* %14
  br label %48

; <label>:48:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeI4EdgeSaIS0_EE15_M_destroy_dataESt15_Deque_iteratorIS0_RS0_PS0_ES6_RKS1_(%"class.std::deque"*, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat align 2 {
  %5 = alloca %"class.std::deque"*, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %5, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %6, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %5, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeI4EdgeSaIS0_EE5beginEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.546
  %6 = load i32, i32* @y.547
  %7 = add i32 %5, 1498372313
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1498372313
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1048403659, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1048403659, label %19
    i32 1906724581, label %27
    i32 46916321, label %60
    i32 518358888, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1906724581, i32 518358888
  store i32 %26, i32* %15
  br label %67

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %28, align 8
  %29 = load %"class.std::deque"*, %"class.std::deque"** %28, align 8
  %30 = bitcast %"class.std::deque"* %29 to %"class.std::_Deque_base"*
  %31 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %31, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %32) #10
  %33 = load i32, i32* @x.546
  %34 = load i32, i32* @y.547
  %35 = sub i32 %33, 1242771593
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 1242771593
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 46916321, i32 518358888
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %62, align 8
  %63 = load %"class.std::deque"*, %"class.std::deque"** %62, align 8
  %64 = bitcast %"class.std::deque"* %63 to %"class.std::_Deque_base"*
  %65 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %64, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %65, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %66) #10
  store i32 1906724581, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeI4EdgeSaIS0_EE3endEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.548
  %6 = load i32, i32* @y.549
  %7 = add i32 %5, -2091410299
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -2091410299
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1103169789, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %55
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1103169789, label %19
    i32 961191204, label %27
    i32 -988380219, label %48
    i32 1007082082, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %55

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 961191204, i32 1007082082
  store i32 %26, i32* %15
  br label %55

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %28, align 8
  %29 = load %"class.std::deque"*, %"class.std::deque"** %28, align 8
  %30 = bitcast %"class.std::deque"* %29 to %"class.std::_Deque_base"*
  %31 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %31, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %32) #10
  %33 = load i32, i32* @x.548
  %34 = load i32, i32* @y.549
  %35 = sub i32 %33, 1621357947
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 1621357947
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 -988380219, i32 1007082082
  store i32 %47, i32* %15
  br label %55

; <label>:48:                                     ; preds = %16
  ret void

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %50, align 8
  %51 = load %"class.std::deque"*, %"class.std::deque"** %50, align 8
  %52 = bitcast %"class.std::deque"* %51 to %"class.std::_Deque_base"*
  %53 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %52, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %53, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %54) #10
  store i32 961191204, i32* %15
  br label %55

; <label>:55:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNSt11_Deque_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.550
  %6 = load i32, i32* @y.551
  %7 = sub i32 %5, 513823668
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 513823668
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -754981268, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %53
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -754981268, label %19
    i32 202486378, label %27
    i32 382424596, label %46
    i32 1768077560, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %53

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 202486378, i32 1768077560
  store i32 %26, i32* %15
  br label %53

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %28, align 8
  %29 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %28, align 8
  %30 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %30 to %"class.std::allocator.2"*
  store %"class.std::allocator.2"* %31, %"class.std::allocator.2"** %2
  %32 = load i32, i32* @x.550
  %33 = load i32, i32* @y.551
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 382424596, i32 1768077560
  store i32 %45, i32* %15
  br label %53

; <label>:46:                                     ; preds = %16
  %47 = load volatile %"class.std::allocator.2"*, %"class.std::allocator.2"** %2
  ret %"class.std::allocator.2"* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %49, align 8
  %50 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %49, align 8
  %51 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %50, i32 0, i32 0
  %52 = bitcast %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %51 to %"class.std::allocator.2"*
  store i32 202486378, i32* %15
  br label %53

; <label>:53:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI4EdgeSaIS0_EED2Ev(%"class.std::_Deque_base"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %struct.Edge**
  %3 = alloca %"class.std::_Deque_base"*
  %4 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  %5 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  store %"class.std::_Deque_base"* %5, %"class.std::_Deque_base"** %3
  %6 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %7 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %7, i32 0, i32 0
  %9 = load %struct.Edge**, %struct.Edge*** %8, align 8
  store %struct.Edge** %9, %struct.Edge*** %2
  %10 = alloca i32
  store i32 960746498, i32* %10
  br label %11

; <label>:11:                                     ; preds = %1, %97
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 960746498, label %14
    i32 -247289640, label %18
    i32 -681670990, label %34
    i32 -1195241041, label %71
    i32 960938209, label %72
    i32 1325524895, label %75
  ]

; <label>:13:                                     ; preds = %11
  br label %97

; <label>:14:                                     ; preds = %11
  %15 = load volatile %struct.Edge**, %struct.Edge*** %2
  %16 = icmp ne %struct.Edge** %15, null
  %17 = select i1 %16, i32 -247289640, i32 960938209
  store i32 %17, i32* %10
  br label %97

; <label>:18:                                     ; preds = %11
  %19 = load i32, i32* @x.552
  %20 = load i32, i32* @y.553
  %21 = sub i32 %19, 1713645979
  %22 = sub i32 %21, 1
  %23 = add i32 %22, 1713645979
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 -681670990, i32 1325524895
  store i32 %33, i32* %10
  br label %97

; <label>:34:                                     ; preds = %11
  %35 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %36 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %35, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %36, i32 0, i32 2
  %38 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %37, i32 0, i32 3
  %39 = load %struct.Edge**, %struct.Edge*** %38, align 8
  %40 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %41 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %40, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %41, i32 0, i32 3
  %43 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %42, i32 0, i32 3
  %44 = load %struct.Edge**, %struct.Edge*** %43, align 8
  %45 = getelementptr inbounds %struct.Edge*, %struct.Edge** %44, i64 1
  %46 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE16_M_destroy_nodesEPPS0_S4_(%"class.std::_Deque_base"* %46, %struct.Edge** %39, %struct.Edge** %45) #10
  %47 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %48 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %47, i32 0, i32 0
  %49 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %48, i32 0, i32 0
  %50 = load %struct.Edge**, %struct.Edge*** %49, align 8
  %51 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %52 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %51, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %52, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE17_M_deallocate_mapEPPS0_m(%"class.std::_Deque_base"* %55, %struct.Edge** %50, i64 %54) #10
  %56 = load i32, i32* @x.552
  %57 = load i32, i32* @y.553
  %58 = add i32 %56, 664693912
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, 664693912
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 -1195241041, i32 1325524895
  store i32 %70, i32* %10
  br label %97

; <label>:71:                                     ; preds = %11
  store i32 960938209, i32* %10
  br label %97

; <label>:72:                                     ; preds = %11
  %73 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %74 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %73, i32 0, i32 0
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE11_Deque_implD2Ev(%"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %74) #10
  ret void

; <label>:75:                                     ; preds = %11
  %76 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %77 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %77, i32 0, i32 2
  %79 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %78, i32 0, i32 3
  %80 = load %struct.Edge**, %struct.Edge*** %79, align 8
  %81 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %82 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %81, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %82, i32 0, i32 3
  %84 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %83, i32 0, i32 3
  %85 = load %struct.Edge**, %struct.Edge*** %84, align 8
  %86 = getelementptr inbounds %struct.Edge*, %struct.Edge** %85, i64 1
  %87 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE16_M_destroy_nodesEPPS0_S4_(%"class.std::_Deque_base"* %87, %struct.Edge** %80, %struct.Edge** %86) #10
  %88 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %89 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %88, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %89, i32 0, i32 0
  %91 = load %struct.Edge**, %struct.Edge*** %90, align 8
  %92 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %93 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %92, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %93, i32 0, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE17_M_deallocate_mapEPPS0_m(%"class.std::_Deque_base"* %96, %struct.Edge** %91, i64 %95) #10
  store i32 -681670990, i32* %10
  br label %97

; <label>:97:                                     ; preds = %75, %71, %34, %18, %14, %13
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %7, i32 0, i32 0
  %9 = load %struct.Edge*, %struct.Edge** %8, align 8
  store %struct.Edge* %9, %struct.Edge** %6, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  %11 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %11, i32 0, i32 1
  %13 = load %struct.Edge*, %struct.Edge** %12, align 8
  store %struct.Edge* %13, %struct.Edge** %10, align 8
  %14 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 2
  %15 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %16 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %15, i32 0, i32 2
  %17 = load %struct.Edge*, %struct.Edge** %16, align 8
  store %struct.Edge* %17, %struct.Edge** %14, align 8
  %18 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 3
  %19 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %20 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %19, i32 0, i32 3
  %21 = load %struct.Edge**, %struct.Edge*** %20, align 8
  store %struct.Edge** %21, %struct.Edge*** %18, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeI4EdgeSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::deque"* dereferenceable(80)) #0 comdat {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  ret %"class.std::deque"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeI4EdgeSaIS0_EEC2EOS2_(%"class.std::deque"*, %"class.std::deque"* dereferenceable(80)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %4, align 8
  %5 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %6 = bitcast %"class.std::deque"* %5 to %"class.std::_Deque_base"*
  %7 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %8 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeI4EdgeSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::deque"* dereferenceable(80) %7) #10
  %9 = bitcast %"class.std::deque"* %8 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EEC2EOS2_(%"class.std::_Deque_base"* %6, %"class.std::_Deque_base"* dereferenceable(80) %9)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt9make_heapISt15_Deque_iteratorI4EdgeRS1_PS1_ESt4lessIS1_EEvT_S7_T0_(%"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*) #1 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.560
  %6 = load i32, i32* @y.561
  %7 = sub i32 %5, 2035044389
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 2035044389
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -544526239, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -544526239, label %19
    i32 -283548736, label %39
    i32 -711512531, label %73
    i32 949733972, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -283548736, i32 949733972
  store i32 %38, i32* %15
  br label %81

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::less", align 1
  %41 = alloca %"struct.std::_Deque_iterator", align 8
  %42 = alloca %"struct.std::_Deque_iterator", align 8
  %43 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %44 = alloca %"struct.std::less", align 1
  %45 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %41, %"struct.std::_Deque_iterator"* dereferenceable(32) %0) #10
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %42, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #10
  call void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt4lessI4EdgeEEENS0_15_Iter_comp_iterIT_EES6_()
  call void @_ZSt11__make_heapISt15_Deque_iteratorI4EdgeRS1_PS1_EN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessIS1_EEEEvT_SB_T0_(%"struct.std::_Deque_iterator"* %41, %"struct.std::_Deque_iterator"* %42)
  %46 = load i32, i32* @x.560
  %47 = load i32, i32* @y.561
  %48 = add i32 %46, -1606558711
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -1606558711
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -711512531, i32 949733972
  store i32 %72, i32* %15
  br label %81

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"struct.std::less", align 1
  %76 = alloca %"struct.std::_Deque_iterator", align 8
  %77 = alloca %"struct.std::_Deque_iterator", align 8
  %78 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %79 = alloca %"struct.std::less", align 1
  %80 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %76, %"struct.std::_Deque_iterator"* dereferenceable(32) %0) #10
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %77, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #10
  call void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt4lessI4EdgeEEENS0_15_Iter_comp_iterIT_EES6_()
  call void @_ZSt11__make_heapISt15_Deque_iteratorI4EdgeRS1_PS1_EN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessIS1_EEEEvT_SB_T0_(%"struct.std::_Deque_iterator"* %76, %"struct.std::_Deque_iterator"* %77)
  store i32 -283548736, i32* %15
  br label %81

; <label>:81:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI4EdgeSaIS0_EEC2EOS2_(%"class.std::_Deque_base"*, %"class.std::_Deque_base"* dereferenceable(80)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %"struct.std::integral_constant", align 1
  %6 = alloca %"struct.__gnu_cxx::__allocator_always_compares_equal", align 1
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %4, align 8
  %7 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %9 = call dereferenceable(80) %"class.std::_Deque_base"* @_ZSt4moveIRSt11_Deque_baseI4EdgeSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::_Deque_base"* dereferenceable(80) %8) #10
  %10 = bitcast %"struct.__gnu_cxx::__allocator_always_compares_equal"* %6 to %"struct.std::integral_constant"*
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EEC2EOS2_St17integral_constantIbLb1EE(%"class.std::_Deque_base"* %7, %"class.std::_Deque_base"* dereferenceable(80) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::_Deque_base"* @_ZSt4moveIRSt11_Deque_baseI4EdgeSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::_Deque_base"* dereferenceable(80)) #0 comdat {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  ret %"class.std::_Deque_base"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI4EdgeSaIS0_EEC2EOS2_St17integral_constantIbLb1EE(%"class.std::_Deque_base"*, %"class.std::_Deque_base"* dereferenceable(80)) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %"class.std::_Deque_base"*, align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %5, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %9 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %8, i32 0, i32 0
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %11 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt11_Deque_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %10) #10
  %12 = call dereferenceable(1) %"class.std::allocator.2"* @_ZSt4moveIRSaI4EdgeEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::allocator.2"* dereferenceable(1) %11) #10
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE11_Deque_implC2EOS1_(%"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %9, %"class.std::allocator.2"* dereferenceable(1) %12) #10
  invoke void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE17_M_initialize_mapEm(%"class.std::_Deque_base"* %8, i64 0)
          to label %13 unwind label %119

; <label>:13:                                     ; preds = %2
  %14 = load i32, i32* @x.566
  %15 = load i32, i32* @y.567
  %16 = add i32 %14, -1172326826
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, -1172326826
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  br i1 %38, label %40, label %170

; <label>:40:                                     ; preds = %13, %170
  %41 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %42 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %42, i32 0, i32 0
  %44 = load %struct.Edge**, %struct.Edge*** %43, align 8
  %45 = icmp ne %struct.Edge** %44, null
  %46 = load i32, i32* @x.566
  %47 = load i32, i32* @y.567
  %48 = add i32 %46, -1253836187
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -1253836187
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  br i1 %58, label %60, label %170

; <label>:60:                                     ; preds = %40
  br i1 %45, label %61, label %164

; <label>:61:                                     ; preds = %60
  %62 = load i32, i32* @x.566
  %63 = load i32, i32* @y.567
  %64 = add i32 %62, -377734964
  %65 = sub i32 %64, 1
  %66 = sub i32 %65, -377734964
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 false, true
  %75 = and i1 %72, false
  %76 = and i1 %70, %74
  %77 = and i1 %73, false
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 false, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  br i1 %86, label %88, label %176

; <label>:88:                                     ; preds = %61, %176
  %89 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %8, i32 0, i32 0
  %90 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %91 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %90, i32 0, i32 0
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE11_Deque_impl12_M_swap_dataERS3_(%"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %89, %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* dereferenceable(80) %91) #10
  %92 = load i32, i32* @x.566
  %93 = load i32, i32* @y.567
  %94 = add i32 %92, 285653600
  %95 = sub i32 %94, 1
  %96 = sub i32 %95, 285653600
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 false, true
  %105 = and i1 %102, false
  %106 = and i1 %100, %104
  %107 = and i1 %103, false
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 false, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  br i1 %116, label %118, label %176

; <label>:118:                                    ; preds = %88
  br label %164

; <label>:119:                                    ; preds = %2
  %120 = load i32, i32* @x.566
  %121 = load i32, i32* @y.567
  %122 = add i32 %120, -839789362
  %123 = sub i32 %122, 1
  %124 = sub i32 %123, -839789362
  %125 = sub i32 %120, 1
  %126 = mul i32 %120, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %121, 10
  %130 = and i1 %128, %129
  %131 = xor i1 %128, %129
  %132 = or i1 %130, %131
  %133 = or i1 %128, %129
  br i1 %132, label %134, label %180

; <label>:134:                                    ; preds = %119, %180
  %135 = landingpad { i8*, i32 }
          cleanup
  %136 = extractvalue { i8*, i32 } %135, 0
  store i8* %136, i8** %6, align 8
  %137 = extractvalue { i8*, i32 } %135, 1
  store i32 %137, i32* %7, align 4
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE11_Deque_implD2Ev(%"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %9) #10
  %138 = load i32, i32* @x.566
  %139 = load i32, i32* @y.567
  %140 = sub i32 0, 1
  %141 = add i32 %138, %140
  %142 = sub i32 %138, 1
  %143 = mul i32 %138, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %139, 10
  %147 = xor i1 %145, true
  %148 = xor i1 %146, true
  %149 = xor i1 false, true
  %150 = and i1 %147, false
  %151 = and i1 %145, %149
  %152 = and i1 %148, false
  %153 = and i1 %146, %149
  %154 = or i1 %150, %151
  %155 = or i1 %152, %153
  %156 = xor i1 %154, %155
  %157 = or i1 %147, %148
  %158 = xor i1 %157, true
  %159 = or i1 false, %149
  %160 = and i1 %158, %159
  %161 = or i1 %156, %160
  %162 = or i1 %145, %146
  br i1 %161, label %163, label %180

; <label>:163:                                    ; preds = %134
  br label %165

; <label>:164:                                    ; preds = %118, %60
  ret void

; <label>:165:                                    ; preds = %163
  %166 = load i8*, i8** %6, align 8
  %167 = load i32, i32* %7, align 4
  %168 = insertvalue { i8*, i32 } undef, i8* %166, 0
  %169 = insertvalue { i8*, i32 } %168, i32 %167, 1
  resume { i8*, i32 } %169

; <label>:170:                                    ; preds = %40, %13
  %171 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %172 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %171, i32 0, i32 0
  %173 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %172, i32 0, i32 0
  %174 = load %struct.Edge**, %struct.Edge*** %173, align 8
  %175 = icmp ne %struct.Edge** %174, null
  br label %40

; <label>:176:                                    ; preds = %88, %61
  %177 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %8, i32 0, i32 0
  %178 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %179 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %178, i32 0, i32 0
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE11_Deque_impl12_M_swap_dataERS3_(%"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %177, %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* dereferenceable(80) %179) #10
  br label %88

; <label>:180:                                    ; preds = %134, %119
  %181 = landingpad { i8*, i32 }
          cleanup
  %182 = extractvalue { i8*, i32 } %181, 0
  store i8* %182, i8** %6, align 8
  %183 = extractvalue { i8*, i32 } %181, 1
  store i32 %183, i32* %7, align 4
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE11_Deque_implD2Ev(%"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %9) #10
  br label %134
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZSt4moveIRSaI4EdgeEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  ret %"class.std::allocator.2"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE11_Deque_implC2EOS1_(%"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %0, %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %5 = load %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"*, %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %5 to %"class.std::allocator.2"*
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.2"* @_ZSt4moveIRSaI4EdgeEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::allocator.2"* dereferenceable(1) %7) #10
  call void @_ZNSaI4EdgeEC2ERKS0_(%"class.std::allocator.2"* %6, %"class.std::allocator.2"* dereferenceable(1) %8) #10
  %9 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %5, i32 0, i32 0
  store %struct.Edge** null, %struct.Edge*** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %5, i32 0, i32 1
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %5, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2Ev(%"struct.std::_Deque_iterator"* %11) #10
  %12 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %5, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2Ev(%"struct.std::_Deque_iterator"* %12) #10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE11_Deque_impl12_M_swap_dataERS3_(%"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"*, %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* dereferenceable(80)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"*, align 8
  %4 = alloca %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %0, %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"** %3, align 8
  store %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %1, %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"** %4, align 8
  %5 = load %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"*, %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %5, i32 0, i32 2
  %7 = load %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"*, %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %7, i32 0, i32 2
  call void @_ZSt4swapISt15_Deque_iteratorI4EdgeRS1_PS1_EEvRT_S6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6, %"struct.std::_Deque_iterator"* dereferenceable(32) %8) #10
  %9 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %5, i32 0, i32 3
  %10 = load %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"*, %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %10, i32 0, i32 3
  call void @_ZSt4swapISt15_Deque_iteratorI4EdgeRS1_PS1_EEvRT_S6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %9, %"struct.std::_Deque_iterator"* dereferenceable(32) %11) #10
  %12 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %5, i32 0, i32 0
  %13 = load %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"*, %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %13, i32 0, i32 0
  call void @_ZSt4swapIPP4EdgeEvRT_S4_(%struct.Edge*** dereferenceable(8) %12, %struct.Edge*** dereferenceable(8) %14) #10
  %15 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %5, i32 0, i32 1
  %16 = load %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"*, %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"** %4, align 8
  %17 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %16, i32 0, i32 1
  call void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8) %15, i64* dereferenceable(8) %17) #10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI4EdgeEC2ERKS2_(%"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.574
  %6 = load i32, i32* @y.575
  %7 = sub i32 %5, -865488574
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -865488574
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2108188697, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %75
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2108188697, label %19
    i32 -2129171666, label %39
    i32 -1366480958, label %70
    i32 -1821215955, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %75

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2129171666, i32 -1821215955
  store i32 %38, i32* %15
  br label %75

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %41 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %40, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %1, %"class.__gnu_cxx::new_allocator.3"** %41, align 8
  %42 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %40, align 8
  %43 = load i32, i32* @x.574
  %44 = load i32, i32* @y.575
  %45 = sub i32 %43, -1852179705
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -1852179705
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -1366480958, i32 -1821215955
  store i32 %69, i32* %15
  br label %75

; <label>:70:                                     ; preds = %16
  ret void

; <label>:71:                                     ; preds = %16
  %72 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %73 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %72, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %1, %"class.__gnu_cxx::new_allocator.3"** %73, align 8
  %74 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %72, align 8
  store i32 -2129171666, i32* %15
  br label %75

; <label>:75:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapISt15_Deque_iteratorI4EdgeRS1_PS1_EEvRT_S6_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.576
  %6 = load i32, i32* @y.577
  %7 = add i32 %5, 1247246400
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1247246400
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 167646962, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %85
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 167646962, label %19
    i32 318957144, label %27
    i32 -2077234097, label %69
    i32 1784225024, label %70
  ]

; <label>:18:                                     ; preds = %16
  br label %85

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 318957144, i32 1784225024
  store i32 %26, i32* %15
  br label %85

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Deque_iterator"*, align 8
  %29 = alloca %"struct.std::_Deque_iterator"*, align 8
  %30 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %28, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %29, align 8
  %31 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %28, align 8
  %32 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorI4EdgeRS1_PS1_EEONSt16remove_referenceIT_E4typeEOS7_(%"struct.std::_Deque_iterator"* dereferenceable(32) %31) #10
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %30, %"struct.std::_Deque_iterator"* dereferenceable(32) %32) #10
  %33 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %29, align 8
  %34 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorI4EdgeRS1_PS1_EEONSt16remove_referenceIT_E4typeEOS7_(%"struct.std::_Deque_iterator"* dereferenceable(32) %33) #10
  %35 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %28, align 8
  %36 = bitcast %"struct.std::_Deque_iterator"* %35 to i8*
  %37 = bitcast %"struct.std::_Deque_iterator"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 32, i32 8, i1 false)
  %38 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorI4EdgeRS1_PS1_EEONSt16remove_referenceIT_E4typeEOS7_(%"struct.std::_Deque_iterator"* dereferenceable(32) %30) #10
  %39 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %29, align 8
  %40 = bitcast %"struct.std::_Deque_iterator"* %39 to i8*
  %41 = bitcast %"struct.std::_Deque_iterator"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 32, i32 8, i1 false)
  %42 = load i32, i32* @x.576
  %43 = load i32, i32* @y.577
  %44 = sub i32 %42, 1066312582
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 1066312582
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -2077234097, i32 1784225024
  store i32 %68, i32* %15
  br label %85

; <label>:69:                                     ; preds = %16
  ret void

; <label>:70:                                     ; preds = %16
  %71 = alloca %"struct.std::_Deque_iterator"*, align 8
  %72 = alloca %"struct.std::_Deque_iterator"*, align 8
  %73 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %71, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %72, align 8
  %74 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %71, align 8
  %75 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorI4EdgeRS1_PS1_EEONSt16remove_referenceIT_E4typeEOS7_(%"struct.std::_Deque_iterator"* dereferenceable(32) %74) #10
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %73, %"struct.std::_Deque_iterator"* dereferenceable(32) %75) #10
  %76 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %72, align 8
  %77 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorI4EdgeRS1_PS1_EEONSt16remove_referenceIT_E4typeEOS7_(%"struct.std::_Deque_iterator"* dereferenceable(32) %76) #10
  %78 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %71, align 8
  %79 = bitcast %"struct.std::_Deque_iterator"* %78 to i8*
  %80 = bitcast %"struct.std::_Deque_iterator"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %79, i8* %80, i64 32, i32 8, i1 false)
  %81 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorI4EdgeRS1_PS1_EEONSt16remove_referenceIT_E4typeEOS7_(%"struct.std::_Deque_iterator"* dereferenceable(32) %73) #10
  %82 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %72, align 8
  %83 = bitcast %"struct.std::_Deque_iterator"* %82 to i8*
  %84 = bitcast %"struct.std::_Deque_iterator"* %81 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %83, i8* %84, i64 32, i32 8, i1 false)
  store i32 318957144, i32* %15
  br label %85

; <label>:85:                                     ; preds = %70, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPP4EdgeEvRT_S4_(%struct.Edge*** dereferenceable(8), %struct.Edge*** dereferenceable(8)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.578
  %6 = load i32, i32* @y.579
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1474145064, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %81
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1474145064, label %18
    i32 600330966, label %26
    i32 1150688156, label %66
    i32 -244506765, label %67
  ]

; <label>:17:                                     ; preds = %15
  br label %81

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 600330966, i32 -244506765
  store i32 %25, i32* %14
  br label %81

; <label>:26:                                     ; preds = %15
  %27 = alloca %struct.Edge***, align 8
  %28 = alloca %struct.Edge***, align 8
  %29 = alloca %struct.Edge**, align 8
  store %struct.Edge*** %0, %struct.Edge**** %27, align 8
  store %struct.Edge*** %1, %struct.Edge**** %28, align 8
  %30 = load %struct.Edge***, %struct.Edge**** %27, align 8
  %31 = call dereferenceable(8) %struct.Edge*** @_ZSt4moveIRPP4EdgeEONSt16remove_referenceIT_E4typeEOS5_(%struct.Edge*** dereferenceable(8) %30) #10
  %32 = load %struct.Edge**, %struct.Edge*** %31, align 8
  store %struct.Edge** %32, %struct.Edge*** %29, align 8
  %33 = load %struct.Edge***, %struct.Edge**** %28, align 8
  %34 = call dereferenceable(8) %struct.Edge*** @_ZSt4moveIRPP4EdgeEONSt16remove_referenceIT_E4typeEOS5_(%struct.Edge*** dereferenceable(8) %33) #10
  %35 = load %struct.Edge**, %struct.Edge*** %34, align 8
  %36 = load %struct.Edge***, %struct.Edge**** %27, align 8
  store %struct.Edge** %35, %struct.Edge*** %36, align 8
  %37 = call dereferenceable(8) %struct.Edge*** @_ZSt4moveIRPP4EdgeEONSt16remove_referenceIT_E4typeEOS5_(%struct.Edge*** dereferenceable(8) %29) #10
  %38 = load %struct.Edge**, %struct.Edge*** %37, align 8
  %39 = load %struct.Edge***, %struct.Edge**** %28, align 8
  store %struct.Edge** %38, %struct.Edge*** %39, align 8
  %40 = load i32, i32* @x.578
  %41 = load i32, i32* @y.579
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 1150688156, i32 -244506765
  store i32 %65, i32* %14
  br label %81

; <label>:66:                                     ; preds = %15
  ret void

; <label>:67:                                     ; preds = %15
  %68 = alloca %struct.Edge***, align 8
  %69 = alloca %struct.Edge***, align 8
  %70 = alloca %struct.Edge**, align 8
  store %struct.Edge*** %0, %struct.Edge**** %68, align 8
  store %struct.Edge*** %1, %struct.Edge**** %69, align 8
  %71 = load %struct.Edge***, %struct.Edge**** %68, align 8
  %72 = call dereferenceable(8) %struct.Edge*** @_ZSt4moveIRPP4EdgeEONSt16remove_referenceIT_E4typeEOS5_(%struct.Edge*** dereferenceable(8) %71) #10
  %73 = load %struct.Edge**, %struct.Edge*** %72, align 8
  store %struct.Edge** %73, %struct.Edge*** %70, align 8
  %74 = load %struct.Edge***, %struct.Edge**** %69, align 8
  %75 = call dereferenceable(8) %struct.Edge*** @_ZSt4moveIRPP4EdgeEONSt16remove_referenceIT_E4typeEOS5_(%struct.Edge*** dereferenceable(8) %74) #10
  %76 = load %struct.Edge**, %struct.Edge*** %75, align 8
  %77 = load %struct.Edge***, %struct.Edge**** %68, align 8
  store %struct.Edge** %76, %struct.Edge*** %77, align 8
  %78 = call dereferenceable(8) %struct.Edge*** @_ZSt4moveIRPP4EdgeEONSt16remove_referenceIT_E4typeEOS5_(%struct.Edge*** dereferenceable(8) %70) #10
  %79 = load %struct.Edge**, %struct.Edge*** %78, align 8
  %80 = load %struct.Edge***, %struct.Edge**** %69, align 8
  store %struct.Edge** %79, %struct.Edge*** %80, align 8
  store i32 600330966, i32* %14
  br label %81

; <label>:81:                                     ; preds = %67, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  %6 = load i64*, i64** %3, align 8
  %7 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %6) #10
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %5, align 8
  %9 = load i64*, i64** %4, align 8
  %10 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %9) #10
  %11 = load i64, i64* %10, align 8
  %12 = load i64*, i64** %3, align 8
  store i64 %11, i64* %12, align 8
  %13 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %5) #10
  %14 = load i64, i64* %13, align 8
  %15 = load i64*, i64** %4, align 8
  store i64 %14, i64* %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorI4EdgeRS1_PS1_EEONSt16remove_referenceIT_E4typeEOS7_(%"struct.std::_Deque_iterator"* dereferenceable(32)) #0 comdat {
  %2 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2, align 8
  ret %"struct.std::_Deque_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %struct.Edge*** @_ZSt4moveIRPP4EdgeEONSt16remove_referenceIT_E4typeEOS5_(%struct.Edge*** dereferenceable(8)) #0 comdat {
  %2 = alloca %struct.Edge***, align 8
  store %struct.Edge*** %0, %struct.Edge**** %2, align 8
  %3 = load %struct.Edge***, %struct.Edge**** %2, align 8
  ret %struct.Edge*** %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8)) #0 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt11__make_heapISt15_Deque_iteratorI4EdgeRS1_PS1_EN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessIS1_EEEEvT_SB_T0_(%"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*) #1 comdat {
  %3 = alloca i1
  %4 = alloca i64
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.Edge, align 8
  %9 = alloca %"struct.std::_Deque_iterator", align 8
  %10 = alloca %"struct.std::_Deque_iterator", align 8
  %11 = alloca %struct.Edge, align 8
  %12 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %13 = call i64 @_ZStmiI4EdgeRS0_PS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_(%"struct.std::_Deque_iterator"* dereferenceable(32) %1, %"struct.std::_Deque_iterator"* dereferenceable(32) %0) #10
  store i64 %13, i64* %4
  %14 = alloca i32
  store i32 -2133253379, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %145
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2133253379, label %18
    i32 12745648, label %22
    i32 -444152058, label %37
    i32 -1118220703, label %64
    i32 -390403415, label %65
    i32 -916104468, label %73
    i32 418817821, label %88
    i32 1996539207, label %117
    i32 -387880783, label %120
    i32 1027917305, label %121
    i32 114309645, label %128
    i32 -1193175150, label %129
    i32 1622330857, label %130
  ]

; <label>:17:                                     ; preds = %15
  br label %145

; <label>:18:                                     ; preds = %15
  %19 = load volatile i64, i64* %4
  %20 = icmp slt i64 %19, 2
  %21 = select i1 %20, i32 12745648, i32 -390403415
  store i32 %21, i32* %14
  br label %145

; <label>:22:                                     ; preds = %15
  %23 = load i32, i32* @x.588
  %24 = load i32, i32* @y.589
  %25 = sub i32 0, 1
  %26 = add i32 %23, %25
  %27 = sub i32 %23, 1
  %28 = mul i32 %23, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %24, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 -444152058, i32 -1193175150
  store i32 %36, i32* %14
  br label %145

; <label>:37:                                     ; preds = %15
  %38 = load i32, i32* @x.588
  %39 = load i32, i32* @y.589
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -1118220703, i32 -1193175150
  store i32 %63, i32* %14
  br label %145

; <label>:64:                                     ; preds = %15
  store i32 114309645, i32* %14
  br label %145

; <label>:65:                                     ; preds = %15
  %66 = call i64 @_ZStmiI4EdgeRS0_PS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_(%"struct.std::_Deque_iterator"* dereferenceable(32) %1, %"struct.std::_Deque_iterator"* dereferenceable(32) %0) #10
  store i64 %66, i64* %6, align 8
  %67 = load i64, i64* %6, align 8
  %68 = add i64 %67, -2871675133785524922
  %69 = sub i64 %68, 2
  %70 = sub i64 %69, -2871675133785524922
  %71 = sub nsw i64 %67, 2
  %72 = sdiv i64 %70, 2
  store i64 %72, i64* %7, align 8
  store i32 -916104468, i32* %14
  br label %145

; <label>:73:                                     ; preds = %15
  %74 = load i32, i32* @x.588
  %75 = load i32, i32* @y.589
  %76 = sub i32 0, 1
  %77 = add i32 %74, %76
  %78 = sub i32 %74, 1
  %79 = mul i32 %74, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %75, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  %87 = select i1 %85, i32 418817821, i32 1622330857
  store i32 %87, i32* %14
  br label %145

; <label>:88:                                     ; preds = %15
  %89 = load i64, i64* %7, align 8
  call void @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EplEl(%"struct.std::_Deque_iterator"* sret %9, %"struct.std::_Deque_iterator"* %0, i64 %89) #10
  %90 = call dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"* %9) #10
  %91 = call dereferenceable(24) %struct.Edge* @_ZSt4moveIR4EdgeEONSt16remove_referenceIT_E4typeEOS3_(%struct.Edge* dereferenceable(24) %90) #10
  %92 = bitcast %struct.Edge* %8 to i8*
  %93 = bitcast %struct.Edge* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %92, i8* %93, i64 24, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %10, %"struct.std::_Deque_iterator"* dereferenceable(32) %0) #10
  %94 = load i64, i64* %7, align 8
  %95 = load i64, i64* %6, align 8
  %96 = call dereferenceable(24) %struct.Edge* @_ZSt4moveIR4EdgeEONSt16remove_referenceIT_E4typeEOS3_(%struct.Edge* dereferenceable(24) %8) #10
  %97 = bitcast %struct.Edge* %11 to i8*
  %98 = bitcast %struct.Edge* %96 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %97, i8* %98, i64 24, i32 8, i1 false)
  %99 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %12 to i8*
  %100 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %99, i8* %100, i64 1, i32 1, i1 false)
  call void @_ZSt13__adjust_heapISt15_Deque_iteratorI4EdgeRS1_PS1_ElS1_N9__gnu_cxx5__ops15_Iter_comp_iterISt4lessIS1_EEEEvT_T0_SC_T1_T2_(%"struct.std::_Deque_iterator"* %10, i64 %94, i64 %95, %struct.Edge* byval align 8 %11)
  %101 = load i64, i64* %7, align 8
  %102 = icmp eq i64 %101, 0
  store i1 %102, i1* %3
  %103 = load i32, i32* @x.588
  %104 = load i32, i32* @y.589
  %105 = sub i32 0, 1
  %106 = add i32 %103, %105
  %107 = sub i32 %103, 1
  %108 = mul i32 %103, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %104, 10
  %112 = and i1 %110, %111
  %113 = xor i1 %110, %111
  %114 = or i1 %112, %113
  %115 = or i1 %110, %111
  %116 = select i1 %114, i32 1996539207, i32 1622330857
  store i32 %116, i32* %14
  br label %145

; <label>:117:                                    ; preds = %15
  %118 = load volatile i1, i1* %3
  %119 = select i1 %118, i32 -387880783, i32 1027917305
  store i32 %119, i32* %14
  br label %145

; <label>:120:                                    ; preds = %15
  store i32 114309645, i32* %14
  br label %145

; <label>:121:                                    ; preds = %15
  %122 = load i64, i64* %7, align 8
  %123 = sub i64 0, %122
  %124 = sub i64 0, -1
  %125 = add i64 %123, %124
  %126 = sub i64 0, %125
  %127 = add nsw i64 %122, -1
  store i64 %126, i64* %7, align 8
  store i32 -916104468, i32* %14
  br label %145

; <label>:128:                                    ; preds = %15
  ret void

; <label>:129:                                    ; preds = %15
  store i32 -444152058, i32* %14
  br label %145

; <label>:130:                                    ; preds = %15
  %131 = load i64, i64* %7, align 8
  call void @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EplEl(%"struct.std::_Deque_iterator"* sret %9, %"struct.std::_Deque_iterator"* %0, i64 %131) #10
  %132 = call dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"* %9) #10
  %133 = call dereferenceable(24) %struct.Edge* @_ZSt4moveIR4EdgeEONSt16remove_referenceIT_E4typeEOS3_(%struct.Edge* dereferenceable(24) %132) #10
  %134 = bitcast %struct.Edge* %8 to i8*
  %135 = bitcast %struct.Edge* %133 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %134, i8* %135, i64 24, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %10, %"struct.std::_Deque_iterator"* dereferenceable(32) %0) #10
  %136 = load i64, i64* %7, align 8
  %137 = load i64, i64* %6, align 8
  %138 = call dereferenceable(24) %struct.Edge* @_ZSt4moveIR4EdgeEONSt16remove_referenceIT_E4typeEOS3_(%struct.Edge* dereferenceable(24) %8) #10
  %139 = bitcast %struct.Edge* %11 to i8*
  %140 = bitcast %struct.Edge* %138 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %139, i8* %140, i64 24, i32 8, i1 false)
  %141 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %12 to i8*
  %142 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %141, i8* %142, i64 1, i32 1, i1 false)
  call void @_ZSt13__adjust_heapISt15_Deque_iteratorI4EdgeRS1_PS1_ElS1_N9__gnu_cxx5__ops15_Iter_comp_iterISt4lessIS1_EEEEvT_T0_SC_T1_T2_(%"struct.std::_Deque_iterator"* %10, i64 %136, i64 %137, %struct.Edge* byval align 8 %11)
  %143 = load i64, i64* %7, align 8
  %144 = icmp eq i64 %143, 0
  store i32 418817821, i32* %14
  br label %145

; <label>:145:                                    ; preds = %130, %129, %121, %120, %117, %88, %73, %65, %64, %37, %22, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt4lessI4EdgeEEENS0_15_Iter_comp_iterIT_EES6_() #1 comdat {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.590
  %4 = load i32, i32* @y.591
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %2
  %11 = icmp slt i32 %4, 10
  store i1 %11, i1* %1
  %12 = alloca i32
  store i32 -1754131272, i32* %12
  br label %13

; <label>:13:                                     ; preds = %0, %60
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1754131272, label %16
    i32 105669643, label %36
    i32 1171887715, label %55
    i32 1409416929, label %56
  ]

; <label>:15:                                     ; preds = %13
  br label %60

; <label>:16:                                     ; preds = %13
  %17 = load volatile i1, i1* %2
  %18 = load volatile i1, i1* %1
  %19 = xor i1 %17, true
  %20 = xor i1 %18, true
  %21 = xor i1 true, true
  %22 = and i1 %19, true
  %23 = and i1 %17, %21
  %24 = and i1 %20, true
  %25 = and i1 %18, %21
  %26 = or i1 %22, %23
  %27 = or i1 %24, %25
  %28 = xor i1 %26, %27
  %29 = or i1 %19, %20
  %30 = xor i1 %29, true
  %31 = or i1 true, %21
  %32 = and i1 %30, %31
  %33 = or i1 %28, %32
  %34 = or i1 %17, %18
  %35 = select i1 %33, i32 105669643, i32 1409416929
  store i32 %35, i32* %12
  br label %60

; <label>:36:                                     ; preds = %13
  %37 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %38 = alloca %"struct.std::less", align 1
  %39 = alloca %"struct.std::less", align 1
  call void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessI4EdgeEEC2ES4_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %37)
  %40 = load i32, i32* @x.590
  %41 = load i32, i32* @y.591
  %42 = sub i32 %40, -2104777794
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -2104777794
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 1171887715, i32 1409416929
  store i32 %54, i32* %12
  br label %60

; <label>:55:                                     ; preds = %13
  ret void

; <label>:56:                                     ; preds = %13
  %57 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %58 = alloca %"struct.std::less", align 1
  %59 = alloca %"struct.std::less", align 1
  call void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessI4EdgeEEC2ES4_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %57)
  store i32 105669643, i32* %12
  br label %60

; <label>:60:                                     ; preds = %56, %36, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZStmiI4EdgeRS0_PS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #0 comdat {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %5 = call i64 @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E14_S_buffer_sizeEv() #10
  %6 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %6, i32 0, i32 3
  %8 = load %struct.Edge**, %struct.Edge*** %7, align 8
  %9 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %9, i32 0, i32 3
  %11 = load %struct.Edge**, %struct.Edge*** %10, align 8
  %12 = ptrtoint %struct.Edge** %8 to i64
  %13 = ptrtoint %struct.Edge** %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 8
  %18 = sub i64 0, 1
  %19 = add i64 %17, %18
  %20 = sub nsw i64 %17, 1
  %21 = mul nsw i64 %5, %19
  %22 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %23 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %22, i32 0, i32 0
  %24 = load %struct.Edge*, %struct.Edge** %23, align 8
  %25 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %26 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %25, i32 0, i32 1
  %27 = load %struct.Edge*, %struct.Edge** %26, align 8
  %28 = ptrtoint %struct.Edge* %24 to i64
  %29 = ptrtoint %struct.Edge* %27 to i64
  %30 = add i64 %28, 4159661876932374972
  %31 = sub i64 %30, %29
  %32 = sub i64 %31, 4159661876932374972
  %33 = sub i64 %28, %29
  %34 = sdiv exact i64 %32, 24
  %35 = sub i64 0, %21
  %36 = sub i64 0, %34
  %37 = add i64 %35, %36
  %38 = sub i64 0, %37
  %39 = add nsw i64 %21, %34
  %40 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %41 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %40, i32 0, i32 2
  %42 = load %struct.Edge*, %struct.Edge** %41, align 8
  %43 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %43, i32 0, i32 0
  %45 = load %struct.Edge*, %struct.Edge** %44, align 8
  %46 = ptrtoint %struct.Edge* %42 to i64
  %47 = ptrtoint %struct.Edge* %45 to i64
  %48 = add i64 %46, 6171735672012300479
  %49 = sub i64 %48, %47
  %50 = sub i64 %49, 6171735672012300479
  %51 = sub i64 %46, %47
  %52 = sdiv exact i64 %50, 24
  %53 = sub i64 0, %52
  %54 = sub i64 %38, %53
  %55 = add nsw i64 %38, %52
  ret i64 %54
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EplEl(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator"*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  store i64 %2, i64* %5, align 8
  %7 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %6, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #10
  %8 = load i64, i64* %5, align 8
  %9 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EpLEl(%"struct.std::_Deque_iterator"* %6, i64 %8) #10
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %9) #10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  %5 = load %struct.Edge*, %struct.Edge** %4, align 8
  ret %struct.Edge* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt13__adjust_heapISt15_Deque_iteratorI4EdgeRS1_PS1_ElS1_N9__gnu_cxx5__ops15_Iter_comp_iterISt4lessIS1_EEEEvT_T0_SC_T1_T2_(%"struct.std::_Deque_iterator"*, i64, i64, %struct.Edge* byval align 8) #1 comdat {
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"struct.std::_Deque_iterator", align 8
  %11 = alloca %"struct.std::_Deque_iterator", align 8
  %12 = alloca %"struct.std::_Deque_iterator", align 8
  %13 = alloca %"struct.std::_Deque_iterator", align 8
  %14 = alloca %"struct.std::_Deque_iterator", align 8
  %15 = alloca %"struct.std::_Deque_iterator", align 8
  %16 = alloca %"struct.std::_Deque_iterator", align 8
  %17 = alloca %struct.Edge, align 8
  %18 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %19 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %20 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  store i64 %1, i64* %6, align 8
  store i64 %2, i64* %7, align 8
  %21 = load i64, i64* %6, align 8
  store i64 %21, i64* %8, align 8
  %22 = load i64, i64* %6, align 8
  store i64 %22, i64* %9, align 8
  %23 = alloca i32
  store i32 -2002694104, i32* %23
  br label %24

; <label>:24:                                     ; preds = %4, %117
  %25 = load i32, i32* %23
  switch i32 %25, label %26 [
    i32 -2002694104, label %27
    i32 -502141547, label %37
    i32 -1454557912, label %53
    i32 -1383227228, label %59
    i32 -767822015, label %68
    i32 -2064641024, label %76
    i32 1160122035, label %86
    i32 -199002516, label %109
  ]

; <label>:26:                                     ; preds = %24
  br label %117

; <label>:27:                                     ; preds = %24
  %28 = load i64, i64* %9, align 8
  %29 = load i64, i64* %7, align 8
  %30 = sub i64 %29, 230391418907846472
  %31 = sub i64 %30, 1
  %32 = add i64 %31, 230391418907846472
  %33 = sub nsw i64 %29, 1
  %34 = sdiv i64 %32, 2
  %35 = icmp slt i64 %28, %34
  %36 = select i1 %35, i32 -502141547, i32 -767822015
  store i32 %36, i32* %23
  br label %117

; <label>:37:                                     ; preds = %24
  %38 = load i64, i64* %9, align 8
  %39 = sub i64 0, %38
  %40 = sub i64 0, 1
  %41 = add i64 %39, %40
  %42 = sub i64 0, %41
  %43 = add nsw i64 %38, 1
  %44 = mul nsw i64 2, %42
  store i64 %44, i64* %9, align 8
  %45 = load i64, i64* %9, align 8
  call void @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EplEl(%"struct.std::_Deque_iterator"* sret %10, %"struct.std::_Deque_iterator"* %0, i64 %45) #10
  %46 = load i64, i64* %9, align 8
  %47 = sub i64 %46, 4847608404627095940
  %48 = sub i64 %47, 1
  %49 = add i64 %48, 4847608404627095940
  %50 = sub nsw i64 %46, 1
  call void @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EplEl(%"struct.std::_Deque_iterator"* sret %11, %"struct.std::_Deque_iterator"* %0, i64 %49) #10
  %51 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessI4EdgeEEclISt15_Deque_iteratorIS3_RS3_PS3_ESA_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %5, %"struct.std::_Deque_iterator"* %10, %"struct.std::_Deque_iterator"* %11)
  %52 = select i1 %51, i32 -1454557912, i32 -1383227228
  store i32 %52, i32* %23
  br label %117

; <label>:53:                                     ; preds = %24
  %54 = load i64, i64* %9, align 8
  %55 = sub i64 %54, -5349787356557967231
  %56 = add i64 %55, -1
  %57 = add i64 %56, -5349787356557967231
  %58 = add nsw i64 %54, -1
  store i64 %57, i64* %9, align 8
  store i32 -1383227228, i32* %23
  br label %117

; <label>:59:                                     ; preds = %24
  %60 = load i64, i64* %9, align 8
  call void @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EplEl(%"struct.std::_Deque_iterator"* sret %12, %"struct.std::_Deque_iterator"* %0, i64 %60) #10
  %61 = call dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"* %12) #10
  %62 = call dereferenceable(24) %struct.Edge* @_ZSt4moveIR4EdgeEONSt16remove_referenceIT_E4typeEOS3_(%struct.Edge* dereferenceable(24) %61) #10
  %63 = load i64, i64* %6, align 8
  call void @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EplEl(%"struct.std::_Deque_iterator"* sret %13, %"struct.std::_Deque_iterator"* %0, i64 %63) #10
  %64 = call dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"* %13) #10
  %65 = bitcast %struct.Edge* %64 to i8*
  %66 = bitcast %struct.Edge* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 24, i32 8, i1 false)
  %67 = load i64, i64* %9, align 8
  store i64 %67, i64* %6, align 8
  store i32 -2002694104, i32* %23
  br label %117

; <label>:68:                                     ; preds = %24
  %69 = load i64, i64* %7, align 8
  %70 = xor i64 1, -1
  %71 = xor i64 %69, %70
  %72 = and i64 %71, %69
  %73 = and i64 %69, 1
  %74 = icmp eq i64 %72, 0
  %75 = select i1 %74, i32 -2064641024, i32 -199002516
  store i32 %75, i32* %23
  br label %117

; <label>:76:                                     ; preds = %24
  %77 = load i64, i64* %9, align 8
  %78 = load i64, i64* %7, align 8
  %79 = sub i64 %78, -7299308136196330683
  %80 = sub i64 %79, 2
  %81 = add i64 %80, -7299308136196330683
  %82 = sub nsw i64 %78, 2
  %83 = sdiv i64 %81, 2
  %84 = icmp eq i64 %77, %83
  %85 = select i1 %84, i32 1160122035, i32 -199002516
  store i32 %85, i32* %23
  br label %117

; <label>:86:                                     ; preds = %24
  %87 = load i64, i64* %9, align 8
  %88 = sub i64 %87, -5655877763653391170
  %89 = add i64 %88, 1
  %90 = add i64 %89, -5655877763653391170
  %91 = add nsw i64 %87, 1
  %92 = mul nsw i64 2, %90
  store i64 %92, i64* %9, align 8
  %93 = load i64, i64* %9, align 8
  %94 = sub i64 %93, 8387252065246784252
  %95 = sub i64 %94, 1
  %96 = add i64 %95, 8387252065246784252
  %97 = sub nsw i64 %93, 1
  call void @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EplEl(%"struct.std::_Deque_iterator"* sret %14, %"struct.std::_Deque_iterator"* %0, i64 %96) #10
  %98 = call dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"* %14) #10
  %99 = call dereferenceable(24) %struct.Edge* @_ZSt4moveIR4EdgeEONSt16remove_referenceIT_E4typeEOS3_(%struct.Edge* dereferenceable(24) %98) #10
  %100 = load i64, i64* %6, align 8
  call void @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EplEl(%"struct.std::_Deque_iterator"* sret %15, %"struct.std::_Deque_iterator"* %0, i64 %100) #10
  %101 = call dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"* %15) #10
  %102 = bitcast %struct.Edge* %101 to i8*
  %103 = bitcast %struct.Edge* %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %102, i8* %103, i64 24, i32 8, i1 false)
  %104 = load i64, i64* %9, align 8
  %105 = sub i64 %104, -3673774575071648699
  %106 = sub i64 %105, 1
  %107 = add i64 %106, -3673774575071648699
  %108 = sub nsw i64 %104, 1
  store i64 %107, i64* %6, align 8
  store i32 -199002516, i32* %23
  br label %117

; <label>:109:                                    ; preds = %24
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %16, %"struct.std::_Deque_iterator"* dereferenceable(32) %0) #10
  %110 = load i64, i64* %6, align 8
  %111 = load i64, i64* %8, align 8
  %112 = call dereferenceable(24) %struct.Edge* @_ZSt4moveIR4EdgeEONSt16remove_referenceIT_E4typeEOS3_(%struct.Edge* dereferenceable(24) %3) #10
  %113 = bitcast %struct.Edge* %17 to i8*
  %114 = bitcast %struct.Edge* %112 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %113, i8* %114, i64 24, i32 8, i1 false)
  %115 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %19 to i8*
  %116 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %115, i8* %116, i64 1, i32 1, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessI4EdgeEEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS6_EE()
  call void @_ZSt11__push_heapISt15_Deque_iteratorI4EdgeRS1_PS1_ElS1_N9__gnu_cxx5__ops14_Iter_comp_valISt4lessIS1_EEEEvT_T0_SC_T1_T2_(%"struct.std::_Deque_iterator"* %16, i64 %110, i64 %111, %struct.Edge* byval align 8 %17)
  ret void

; <label>:117:                                    ; preds = %86, %76, %68, %59, %53, %37, %27, %26
  br label %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EpLEl(%"struct.std::_Deque_iterator"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca %"struct.std::_Deque_iterator"*
  %6 = alloca i64*
  %7 = alloca i64*
  %8 = alloca i64*
  %9 = alloca i1
  %10 = alloca i1
  %11 = load i32, i32* @x.600
  %12 = load i32, i32* @y.601
  %13 = sub i32 %11, -668544444
  %14 = sub i32 %13, 1
  %15 = add i32 %14, -668544444
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  store i1 %19, i1* %10
  %20 = icmp slt i32 %12, 10
  store i1 %20, i1* %9
  %21 = alloca i32
  store i32 1249352030, i32* %21
  %22 = alloca i64
  br label %23

; <label>:23:                                     ; preds = %2, %381
  %24 = load i32, i32* %21
  switch i32 %24, label %25 [
    i32 1249352030, label %26
    i32 -1380399174, label %34
    i32 808826434, label %78
    i32 2049519250, label %81
    i32 -1142952907, label %87
    i32 -328366827, label %102
    i32 1330815330, label %136
    i32 602402099, label %137
    i32 410264432, label %142
    i32 1195321616, label %170
    i32 305874465, label %190
    i32 -1032383568, label %192
    i32 -1701695876, label %211
    i32 -226636216, label %236
    i32 -941381846, label %263
    i32 -100178455, label %291
    i32 745431328, label %293
    i32 -214042111, label %360
    i32 959775297, label %367
    i32 121678619, label %380
  ]

; <label>:25:                                     ; preds = %23
  br label %381

; <label>:26:                                     ; preds = %23
  %27 = load volatile i1, i1* %10
  %28 = load volatile i1, i1* %9
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 -1380399174, i32 745431328
  store i32 %33, i32* %21
  br label %381

; <label>:34:                                     ; preds = %23
  %35 = alloca %"struct.std::_Deque_iterator"*, align 8
  %36 = alloca i64, align 8
  store i64* %36, i64** %8
  %37 = alloca i64, align 8
  store i64* %37, i64** %7
  %38 = alloca i64, align 8
  store i64* %38, i64** %6
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %35, align 8
  %39 = load volatile i64*, i64** %8
  store i64 %1, i64* %39, align 8
  %40 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %35, align 8
  store %"struct.std::_Deque_iterator"* %40, %"struct.std::_Deque_iterator"** %5
  %41 = load volatile i64*, i64** %8
  %42 = load i64, i64* %41, align 8
  %43 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %5
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %43, i32 0, i32 0
  %45 = load %struct.Edge*, %struct.Edge** %44, align 8
  %46 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %5
  %47 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %46, i32 0, i32 1
  %48 = load %struct.Edge*, %struct.Edge** %47, align 8
  %49 = ptrtoint %struct.Edge* %45 to i64
  %50 = ptrtoint %struct.Edge* %48 to i64
  %51 = sub i64 %49, 3129847089745190004
  %52 = sub i64 %51, %50
  %53 = add i64 %52, 3129847089745190004
  %54 = sub i64 %49, %50
  %55 = sdiv exact i64 %53, 24
  %56 = sub i64 0, %55
  %57 = sub i64 %42, %56
  %58 = add nsw i64 %42, %55
  %59 = load volatile i64*, i64** %7
  store i64 %57, i64* %59, align 8
  %60 = load volatile i64*, i64** %7
  %61 = load i64, i64* %60, align 8
  %62 = icmp sge i64 %61, 0
  store i1 %62, i1* %4
  %63 = load i32, i32* @x.600
  %64 = load i32, i32* @y.601
  %65 = sub i32 %63, -996853435
  %66 = sub i32 %65, 1
  %67 = add i32 %66, -996853435
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = and i1 %71, %72
  %74 = xor i1 %71, %72
  %75 = or i1 %73, %74
  %76 = or i1 %71, %72
  %77 = select i1 %75, i32 808826434, i32 745431328
  store i32 %77, i32* %21
  br label %381

; <label>:78:                                     ; preds = %23
  %79 = load volatile i1, i1* %4
  %80 = select i1 %79, i32 2049519250, i32 602402099
  store i32 %80, i32* %21
  br label %381

; <label>:81:                                     ; preds = %23
  %82 = load volatile i64*, i64** %7
  %83 = load i64, i64* %82, align 8
  %84 = call i64 @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E14_S_buffer_sizeEv() #10
  %85 = icmp slt i64 %83, %84
  %86 = select i1 %85, i32 -1142952907, i32 602402099
  store i32 %86, i32* %21
  br label %381

; <label>:87:                                     ; preds = %23
  %88 = load i32, i32* @x.600
  %89 = load i32, i32* @y.601
  %90 = sub i32 0, 1
  %91 = add i32 %88, %90
  %92 = sub i32 %88, 1
  %93 = mul i32 %88, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %89, 10
  %97 = and i1 %95, %96
  %98 = xor i1 %95, %96
  %99 = or i1 %97, %98
  %100 = or i1 %95, %96
  %101 = select i1 %99, i32 -328366827, i32 -214042111
  store i32 %101, i32* %21
  br label %381

; <label>:102:                                    ; preds = %23
  %103 = load volatile i64*, i64** %8
  %104 = load i64, i64* %103, align 8
  %105 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %5
  %106 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %105, i32 0, i32 0
  %107 = load %struct.Edge*, %struct.Edge** %106, align 8
  %108 = getelementptr inbounds %struct.Edge, %struct.Edge* %107, i64 %104
  store %struct.Edge* %108, %struct.Edge** %106, align 8
  %109 = load i32, i32* @x.600
  %110 = load i32, i32* @y.601
  %111 = add i32 %109, 1415274689
  %112 = sub i32 %111, 1
  %113 = sub i32 %112, 1415274689
  %114 = sub i32 %109, 1
  %115 = mul i32 %109, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %110, 10
  %119 = xor i1 %117, true
  %120 = xor i1 %118, true
  %121 = xor i1 false, true
  %122 = and i1 %119, false
  %123 = and i1 %117, %121
  %124 = and i1 %120, false
  %125 = and i1 %118, %121
  %126 = or i1 %122, %123
  %127 = or i1 %124, %125
  %128 = xor i1 %126, %127
  %129 = or i1 %119, %120
  %130 = xor i1 %129, true
  %131 = or i1 false, %121
  %132 = and i1 %130, %131
  %133 = or i1 %128, %132
  %134 = or i1 %117, %118
  %135 = select i1 %133, i32 1330815330, i32 -214042111
  store i32 %135, i32* %21
  br label %381

; <label>:136:                                    ; preds = %23
  store i32 -226636216, i32* %21
  br label %381

; <label>:137:                                    ; preds = %23
  %138 = load volatile i64*, i64** %7
  %139 = load i64, i64* %138, align 8
  %140 = icmp sgt i64 %139, 0
  %141 = select i1 %140, i32 410264432, i32 -1032383568
  store i32 %141, i32* %21
  br label %381

; <label>:142:                                    ; preds = %23
  %143 = load i32, i32* @x.600
  %144 = load i32, i32* @y.601
  %145 = sub i32 %143, 1021537521
  %146 = sub i32 %145, 1
  %147 = add i32 %146, 1021537521
  %148 = sub i32 %143, 1
  %149 = mul i32 %143, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %144, 10
  %153 = xor i1 %151, true
  %154 = xor i1 %152, true
  %155 = xor i1 false, true
  %156 = and i1 %153, false
  %157 = and i1 %151, %155
  %158 = and i1 %154, false
  %159 = and i1 %152, %155
  %160 = or i1 %156, %157
  %161 = or i1 %158, %159
  %162 = xor i1 %160, %161
  %163 = or i1 %153, %154
  %164 = xor i1 %163, true
  %165 = or i1 false, %155
  %166 = and i1 %164, %165
  %167 = or i1 %162, %166
  %168 = or i1 %151, %152
  %169 = select i1 %167, i32 1195321616, i32 959775297
  store i32 %169, i32* %21
  br label %381

; <label>:170:                                    ; preds = %23
  %171 = load volatile i64*, i64** %7
  %172 = load i64, i64* %171, align 8
  %173 = call i64 @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E14_S_buffer_sizeEv() #10
  %174 = sdiv i64 %172, %173
  store i64 %174, i64* %3
  %175 = load i32, i32* @x.600
  %176 = load i32, i32* @y.601
  %177 = sub i32 %175, 37389605
  %178 = sub i32 %177, 1
  %179 = add i32 %178, 37389605
  %180 = sub i32 %175, 1
  %181 = mul i32 %175, %179
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %176, 10
  %185 = and i1 %183, %184
  %186 = xor i1 %183, %184
  %187 = or i1 %185, %186
  %188 = or i1 %183, %184
  %189 = select i1 %187, i32 305874465, i32 959775297
  store i32 %189, i32* %21
  br label %381

; <label>:190:                                    ; preds = %23
  store i32 -1701695876, i32* %21
  %191 = load volatile i64, i64* %3
  store i64 %191, i64* %22
  br label %381

; <label>:192:                                    ; preds = %23
  %193 = load volatile i64*, i64** %7
  %194 = load i64, i64* %193, align 8
  %195 = add i64 0, 7580700084705070836
  %196 = sub i64 %195, %194
  %197 = sub i64 %196, 7580700084705070836
  %198 = sub nsw i64 0, %194
  %199 = sub i64 0, 1
  %200 = add i64 %197, %199
  %201 = sub nsw i64 %197, 1
  %202 = call i64 @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E14_S_buffer_sizeEv() #10
  %203 = udiv i64 %200, %202
  %204 = sub i64 0, %203
  %205 = add i64 0, %204
  %206 = sub nsw i64 0, %203
  %207 = sub i64 %205, 2352007827209441383
  %208 = sub i64 %207, 1
  %209 = add i64 %208, 2352007827209441383
  %210 = sub nsw i64 %205, 1
  store i32 -1701695876, i32* %21
  store i64 %209, i64* %22
  br label %381

; <label>:211:                                    ; preds = %23
  %212 = load i64, i64* %22
  %213 = load volatile i64*, i64** %6
  store i64 %212, i64* %213, align 8
  %214 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %5
  %215 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %214, i32 0, i32 3
  %216 = load %struct.Edge**, %struct.Edge*** %215, align 8
  %217 = load volatile i64*, i64** %6
  %218 = load i64, i64* %217, align 8
  %219 = getelementptr inbounds %struct.Edge*, %struct.Edge** %216, i64 %218
  %220 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %5
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator"* %220, %struct.Edge** %219) #10
  %221 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %5
  %222 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %221, i32 0, i32 1
  %223 = load %struct.Edge*, %struct.Edge** %222, align 8
  %224 = load volatile i64*, i64** %7
  %225 = load i64, i64* %224, align 8
  %226 = load volatile i64*, i64** %6
  %227 = load i64, i64* %226, align 8
  %228 = call i64 @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E14_S_buffer_sizeEv() #10
  %229 = mul nsw i64 %227, %228
  %230 = sub i64 0, %229
  %231 = add i64 %225, %230
  %232 = sub nsw i64 %225, %229
  %233 = getelementptr inbounds %struct.Edge, %struct.Edge* %223, i64 %231
  %234 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %5
  %235 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %234, i32 0, i32 0
  store %struct.Edge* %233, %struct.Edge** %235, align 8
  store i32 -226636216, i32* %21
  br label %381

; <label>:236:                                    ; preds = %23
  %237 = load i32, i32* @x.600
  %238 = load i32, i32* @y.601
  %239 = sub i32 0, 1
  %240 = add i32 %237, %239
  %241 = sub i32 %237, 1
  %242 = mul i32 %237, %240
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %238, 10
  %246 = xor i1 %244, true
  %247 = xor i1 %245, true
  %248 = xor i1 true, true
  %249 = and i1 %246, true
  %250 = and i1 %244, %248
  %251 = and i1 %247, true
  %252 = and i1 %245, %248
  %253 = or i1 %249, %250
  %254 = or i1 %251, %252
  %255 = xor i1 %253, %254
  %256 = or i1 %246, %247
  %257 = xor i1 %256, true
  %258 = or i1 true, %248
  %259 = and i1 %257, %258
  %260 = or i1 %255, %259
  %261 = or i1 %244, %245
  %262 = select i1 %260, i32 -941381846, i32 121678619
  store i32 %262, i32* %21
  br label %381

; <label>:263:                                    ; preds = %23
  %264 = load i32, i32* @x.600
  %265 = load i32, i32* @y.601
  %266 = add i32 %264, 535430283
  %267 = sub i32 %266, 1
  %268 = sub i32 %267, 535430283
  %269 = sub i32 %264, 1
  %270 = mul i32 %264, %268
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %265, 10
  %274 = xor i1 %272, true
  %275 = xor i1 %273, true
  %276 = xor i1 true, true
  %277 = and i1 %274, true
  %278 = and i1 %272, %276
  %279 = and i1 %275, true
  %280 = and i1 %273, %276
  %281 = or i1 %277, %278
  %282 = or i1 %279, %280
  %283 = xor i1 %281, %282
  %284 = or i1 %274, %275
  %285 = xor i1 %284, true
  %286 = or i1 true, %276
  %287 = and i1 %285, %286
  %288 = or i1 %283, %287
  %289 = or i1 %272, %273
  %290 = select i1 %288, i32 -100178455, i32 121678619
  store i32 %290, i32* %21
  br label %381

; <label>:291:                                    ; preds = %23
  %292 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %5
  ret %"struct.std::_Deque_iterator"* %292

; <label>:293:                                    ; preds = %23
  %294 = alloca %"struct.std::_Deque_iterator"*, align 8
  %295 = alloca i64, align 8
  %296 = alloca i64, align 8
  %297 = alloca i64, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %294, align 8
  store i64 %1, i64* %295, align 8
  %298 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %294, align 8
  %299 = load i64, i64* %295, align 8
  %300 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %298, i32 0, i32 0
  %301 = load %struct.Edge*, %struct.Edge** %300, align 8
  %302 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %298, i32 0, i32 1
  %303 = load %struct.Edge*, %struct.Edge** %302, align 8
  %304 = ptrtoint %struct.Edge* %301 to i64
  %305 = ptrtoint %struct.Edge* %303 to i64
  %306 = sub i64 0, 5312475453831825727
  %307 = sub i64 %306, %304
  %308 = add i64 %307, 5312475453831825727
  %309 = sub i64 0, %304
  %310 = sub i64 0, %305
  %311 = sub i64 %308, %310
  %312 = add i64 %308, %305
  %313 = add i64 %304, 607969785111352361
  %314 = sub i64 %313, %305
  %315 = sub i64 %314, 607969785111352361
  %316 = sub i64 %304, %305
  %317 = mul i64 %315, %305
  %318 = shl i64 %304, %305
  %319 = sub i64 0, %304
  %320 = add i64 0, %319
  %321 = sub i64 0, %304
  %322 = sub i64 0, %305
  %323 = sub i64 %320, %322
  %324 = add i64 %320, %305
  %325 = sub i64 %304, -1611430105541157194
  %326 = sub i64 %325, %305
  %327 = add i64 %326, -1611430105541157194
  %328 = sub i64 %304, %305
  %329 = sub i64 0, 24
  %330 = add i64 %327, %329
  %331 = sub i64 %327, 24
  %332 = mul i64 %330, 24
  %333 = add i64 %327, 6816241579193578714
  %334 = sub i64 %333, 24
  %335 = sub i64 %334, 6816241579193578714
  %336 = sub i64 %327, 24
  %337 = mul i64 %335, 24
  %338 = sdiv exact i64 %327, 24
  %339 = sub i64 0, %338
  %340 = add i64 %299, %339
  %341 = sub i64 %299, %338
  %342 = mul i64 %340, %338
  %343 = shl i64 %299, %338
  %344 = shl i64 %299, %338
  %345 = sub i64 0, %299
  %346 = add i64 0, %345
  %347 = sub i64 0, %299
  %348 = sub i64 0, %346
  %349 = sub i64 0, %338
  %350 = add i64 %348, %349
  %351 = sub i64 0, %350
  %352 = add i64 %346, %338
  %353 = sub i64 0, %299
  %354 = sub i64 0, %338
  %355 = add i64 %353, %354
  %356 = sub i64 0, %355
  %357 = add nsw i64 %299, %338
  store i64 %356, i64* %296, align 8
  %358 = load i64, i64* %296, align 8
  %359 = icmp sge i64 %358, 0
  store i32 -1380399174, i32* %21
  br label %381

; <label>:360:                                    ; preds = %23
  %361 = load volatile i64*, i64** %8
  %362 = load i64, i64* %361, align 8
  %363 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %5
  %364 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %363, i32 0, i32 0
  %365 = load %struct.Edge*, %struct.Edge** %364, align 8
  %366 = getelementptr inbounds %struct.Edge, %struct.Edge* %365, i64 %362
  store %struct.Edge* %366, %struct.Edge** %364, align 8
  store i32 -328366827, i32* %21
  br label %381

; <label>:367:                                    ; preds = %23
  %368 = load volatile i64*, i64** %7
  %369 = load i64, i64* %368, align 8
  %370 = call i64 @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E14_S_buffer_sizeEv() #10
  %371 = sub i64 0, %369
  %372 = add i64 0, %371
  %373 = sub i64 0, %369
  %374 = add i64 %372, -5645346151311848272
  %375 = add i64 %374, %370
  %376 = sub i64 %375, -5645346151311848272
  %377 = add i64 %372, %370
  %378 = shl i64 %369, %370
  %379 = sdiv i64 %369, %370
  store i32 1195321616, i32* %21
  br label %381

; <label>:380:                                    ; preds = %23
  store i32 -941381846, i32* %21
  br label %381

; <label>:381:                                    ; preds = %380, %367, %360, %293, %263, %236, %211, %192, %190, %170, %142, %137, %136, %102, %87, %81, %78, %34, %26, %25
  br label %23
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessI4EdgeEEclISt15_Deque_iteratorIS3_RS3_PS3_ESA_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*) #1 comdat align 2 {
  %4 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %4, align 8
  %5 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %4, align 8
  %6 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %5, i32 0, i32 0
  %7 = call dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"* %1) #10
  %8 = call dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"* %2) #10
  %9 = call zeroext i1 @_ZNKSt4lessI4EdgeEclERKS0_S3_(%"struct.std::less"* %6, %struct.Edge* dereferenceable(24) %7, %struct.Edge* dereferenceable(24) %8)
  ret i1 %9
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt11__push_heapISt15_Deque_iteratorI4EdgeRS1_PS1_ElS1_N9__gnu_cxx5__ops14_Iter_comp_valISt4lessIS1_EEEEvT_T0_SC_T1_T2_(%"struct.std::_Deque_iterator"*, i64, i64, %struct.Edge* byval align 8) #1 comdat {
  %5 = alloca i1
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"struct.std::_Deque_iterator", align 8
  %11 = alloca %"struct.std::_Deque_iterator", align 8
  %12 = alloca %"struct.std::_Deque_iterator", align 8
  %13 = alloca %"struct.std::_Deque_iterator", align 8
  store i64 %1, i64* %7, align 8
  store i64 %2, i64* %8, align 8
  %14 = load i64, i64* %7, align 8
  %15 = add i64 %14, 2051416998243856067
  %16 = sub i64 %15, 1
  %17 = sub i64 %16, 2051416998243856067
  %18 = sub nsw i64 %14, 1
  %19 = sdiv i64 %17, 2
  store i64 %19, i64* %9, align 8
  %20 = alloca i32
  store i32 216799044, i32* %20
  %21 = alloca i1
  br label %22

; <label>:22:                                     ; preds = %4, %210
  %23 = load i32, i32* %20
  switch i32 %23, label %24 [
    i32 216799044, label %25
    i32 -1383858710, label %41
    i32 1704834767, label %71
    i32 1094107953, label %74
    i32 -1312954710, label %77
    i32 1226826271, label %80
    i32 390921484, label %108
    i32 1225914420, label %136
    i32 -1023171797, label %137
    i32 -1816463712, label %143
    i32 -1143041540, label %147
  ]

; <label>:24:                                     ; preds = %22
  br label %210

; <label>:25:                                     ; preds = %22
  %26 = load i32, i32* @x.604
  %27 = load i32, i32* @y.605
  %28 = add i32 %26, 1869670778
  %29 = sub i32 %28, 1
  %30 = sub i32 %29, 1869670778
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  %40 = select i1 %38, i32 -1383858710, i32 -1816463712
  store i32 %40, i32* %20
  br label %210

; <label>:41:                                     ; preds = %22
  %42 = load i64, i64* %7, align 8
  %43 = load i64, i64* %8, align 8
  %44 = icmp sgt i64 %42, %43
  store i1 %44, i1* %5
  %45 = load i32, i32* @x.604
  %46 = load i32, i32* @y.605
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 1704834767, i32 -1816463712
  store i32 %70, i32* %20
  br label %210

; <label>:71:                                     ; preds = %22
  %72 = load volatile i1, i1* %5
  %73 = select i1 %72, i32 1094107953, i32 -1312954710
  store i32 %73, i32* %20
  store i1 false, i1* %21
  br label %210

; <label>:74:                                     ; preds = %22
  %75 = load i64, i64* %9, align 8
  call void @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EplEl(%"struct.std::_Deque_iterator"* sret %10, %"struct.std::_Deque_iterator"* %0, i64 %75) #10
  %76 = call zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessI4EdgeEEclISt15_Deque_iteratorIS3_RS3_PS3_ES3_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %6, %"struct.std::_Deque_iterator"* %10, %struct.Edge* dereferenceable(24) %3)
  store i32 -1312954710, i32* %20
  store i1 %76, i1* %21
  br label %210

; <label>:77:                                     ; preds = %22
  %78 = load i1, i1* %21
  %79 = select i1 %78, i32 1226826271, i32 -1023171797
  store i32 %79, i32* %20
  br label %210

; <label>:80:                                     ; preds = %22
  %81 = load i32, i32* @x.604
  %82 = load i32, i32* @y.605
  %83 = add i32 %81, 366281221
  %84 = sub i32 %83, 1
  %85 = sub i32 %84, 366281221
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = xor i1 %89, true
  %92 = xor i1 %90, true
  %93 = xor i1 true, true
  %94 = and i1 %91, true
  %95 = and i1 %89, %93
  %96 = and i1 %92, true
  %97 = and i1 %90, %93
  %98 = or i1 %94, %95
  %99 = or i1 %96, %97
  %100 = xor i1 %98, %99
  %101 = or i1 %91, %92
  %102 = xor i1 %101, true
  %103 = or i1 true, %93
  %104 = and i1 %102, %103
  %105 = or i1 %100, %104
  %106 = or i1 %89, %90
  %107 = select i1 %105, i32 390921484, i32 -1143041540
  store i32 %107, i32* %20
  br label %210

; <label>:108:                                    ; preds = %22
  %109 = load i64, i64* %9, align 8
  call void @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EplEl(%"struct.std::_Deque_iterator"* sret %11, %"struct.std::_Deque_iterator"* %0, i64 %109) #10
  %110 = call dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"* %11) #10
  %111 = call dereferenceable(24) %struct.Edge* @_ZSt4moveIR4EdgeEONSt16remove_referenceIT_E4typeEOS3_(%struct.Edge* dereferenceable(24) %110) #10
  %112 = load i64, i64* %7, align 8
  call void @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EplEl(%"struct.std::_Deque_iterator"* sret %12, %"struct.std::_Deque_iterator"* %0, i64 %112) #10
  %113 = call dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"* %12) #10
  %114 = bitcast %struct.Edge* %113 to i8*
  %115 = bitcast %struct.Edge* %111 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %114, i8* %115, i64 24, i32 8, i1 false)
  %116 = load i64, i64* %9, align 8
  store i64 %116, i64* %7, align 8
  %117 = load i64, i64* %7, align 8
  %118 = sub i64 0, 1
  %119 = add i64 %117, %118
  %120 = sub nsw i64 %117, 1
  %121 = sdiv i64 %119, 2
  store i64 %121, i64* %9, align 8
  %122 = load i32, i32* @x.604
  %123 = load i32, i32* @y.605
  %124 = sub i32 0, 1
  %125 = add i32 %122, %124
  %126 = sub i32 %122, 1
  %127 = mul i32 %122, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %123, 10
  %131 = and i1 %129, %130
  %132 = xor i1 %129, %130
  %133 = or i1 %131, %132
  %134 = or i1 %129, %130
  %135 = select i1 %133, i32 1225914420, i32 -1143041540
  store i32 %135, i32* %20
  br label %210

; <label>:136:                                    ; preds = %22
  store i32 216799044, i32* %20
  br label %210

; <label>:137:                                    ; preds = %22
  %138 = call dereferenceable(24) %struct.Edge* @_ZSt4moveIR4EdgeEONSt16remove_referenceIT_E4typeEOS3_(%struct.Edge* dereferenceable(24) %3) #10
  %139 = load i64, i64* %7, align 8
  call void @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EplEl(%"struct.std::_Deque_iterator"* sret %13, %"struct.std::_Deque_iterator"* %0, i64 %139) #10
  %140 = call dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"* %13) #10
  %141 = bitcast %struct.Edge* %140 to i8*
  %142 = bitcast %struct.Edge* %138 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %141, i8* %142, i64 24, i32 8, i1 false)
  ret void

; <label>:143:                                    ; preds = %22
  %144 = load i64, i64* %7, align 8
  %145 = load i64, i64* %8, align 8
  %146 = icmp sgt i64 %144, %145
  store i32 -1383858710, i32* %20
  br label %210

; <label>:147:                                    ; preds = %22
  %148 = load i64, i64* %9, align 8
  call void @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EplEl(%"struct.std::_Deque_iterator"* sret %11, %"struct.std::_Deque_iterator"* %0, i64 %148) #10
  %149 = call dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"* %11) #10
  %150 = call dereferenceable(24) %struct.Edge* @_ZSt4moveIR4EdgeEONSt16remove_referenceIT_E4typeEOS3_(%struct.Edge* dereferenceable(24) %149) #10
  %151 = load i64, i64* %7, align 8
  call void @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EplEl(%"struct.std::_Deque_iterator"* sret %12, %"struct.std::_Deque_iterator"* %0, i64 %151) #10
  %152 = call dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"* %12) #10
  %153 = bitcast %struct.Edge* %152 to i8*
  %154 = bitcast %struct.Edge* %150 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %153, i8* %154, i64 24, i32 8, i1 false)
  %155 = load i64, i64* %9, align 8
  store i64 %155, i64* %7, align 8
  %156 = load i64, i64* %7, align 8
  %157 = shl i64 %156, 1
  %158 = sub i64 0, 1
  %159 = add i64 %156, %158
  %160 = sub i64 %156, 1
  %161 = mul i64 %159, 1
  %162 = sub i64 0, 7246860241098810426
  %163 = sub i64 %162, %156
  %164 = add i64 %163, 7246860241098810426
  %165 = sub i64 0, %156
  %166 = sub i64 0, %164
  %167 = sub i64 0, 1
  %168 = add i64 %166, %167
  %169 = sub i64 0, %168
  %170 = add i64 %164, 1
  %171 = shl i64 %156, 1
  %172 = sub i64 0, %156
  %173 = add i64 0, %172
  %174 = sub i64 0, %156
  %175 = add i64 %173, -6834476943562349254
  %176 = add i64 %175, 1
  %177 = sub i64 %176, -6834476943562349254
  %178 = add i64 %173, 1
  %179 = sub i64 0, 1
  %180 = add i64 %156, %179
  %181 = sub nsw i64 %156, 1
  %182 = sub i64 0, 663161284145606671
  %183 = sub i64 %182, %180
  %184 = add i64 %183, 663161284145606671
  %185 = sub i64 0, %180
  %186 = sub i64 %184, -348523295213481070
  %187 = add i64 %186, 2
  %188 = add i64 %187, -348523295213481070
  %189 = add i64 %184, 2
  %190 = shl i64 %180, 2
  %191 = sub i64 0, %180
  %192 = add i64 0, %191
  %193 = sub i64 0, %180
  %194 = sub i64 0, %192
  %195 = sub i64 0, 2
  %196 = add i64 %194, %195
  %197 = sub i64 0, %196
  %198 = add i64 %192, 2
  %199 = shl i64 %180, 2
  %200 = sub i64 0, %180
  %201 = add i64 0, %200
  %202 = sub i64 0, %180
  %203 = sub i64 0, %201
  %204 = sub i64 0, 2
  %205 = add i64 %203, %204
  %206 = sub i64 0, %205
  %207 = add i64 %201, 2
  %208 = shl i64 %180, 2
  %209 = sdiv i64 %180, 2
  store i64 %209, i64* %9, align 8
  store i32 390921484, i32* %20
  br label %210

; <label>:210:                                    ; preds = %147, %143, %136, %108, %80, %77, %74, %71, %41, %25, %24
  br label %22
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessI4EdgeEEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS6_EE() #1 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %2 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %3 = alloca %"struct.std::less", align 1
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %2, i32 0, i32 0
  call void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessI4EdgeEEC2ES4_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %1)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt4lessI4EdgeEclERKS0_S3_(%"struct.std::less"*, %struct.Edge* dereferenceable(24), %struct.Edge* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"struct.std::less"*, align 8
  %5 = alloca %struct.Edge*, align 8
  %6 = alloca %struct.Edge*, align 8
  store %"struct.std::less"* %0, %"struct.std::less"** %4, align 8
  store %struct.Edge* %1, %struct.Edge** %5, align 8
  store %struct.Edge* %2, %struct.Edge** %6, align 8
  %7 = load %"struct.std::less"*, %"struct.std::less"** %4, align 8
  %8 = load %struct.Edge*, %struct.Edge** %5, align 8
  %9 = load %struct.Edge*, %struct.Edge** %6, align 8
  %10 = call zeroext i1 @_ZltRK4EdgeS1_(%struct.Edge* dereferenceable(24) %8, %struct.Edge* dereferenceable(24) %9)
  ret i1 %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessI4EdgeEEclISt15_Deque_iteratorIS3_RS3_PS3_ES3_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.std::_Deque_iterator"*, %struct.Edge* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.610
  %8 = load i32, i32* @y.611
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -342431455, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %72
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -342431455, label %20
    i32 -853284885, label %40
    i32 68692477, label %62
    i32 769145710, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %72

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -853284885, i32 769145710
  store i32 %39, i32* %16
  br label %72

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, align 8
  %42 = alloca %struct.Edge*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %41, align 8
  store %struct.Edge* %2, %struct.Edge** %42, align 8
  %43 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %41, align 8
  %44 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val", %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %43, i32 0, i32 0
  %45 = call dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"* %1) #10
  %46 = load %struct.Edge*, %struct.Edge** %42, align 8
  %47 = call zeroext i1 @_ZNKSt4lessI4EdgeEclERKS0_S3_(%"struct.std::less"* %44, %struct.Edge* dereferenceable(24) %45, %struct.Edge* dereferenceable(24) %46)
  store i1 %47, i1* %4
  %48 = load i32, i32* @x.610
  %49 = load i32, i32* @y.611
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 68692477, i32 769145710
  store i32 %61, i32* %16
  br label %72

; <label>:62:                                     ; preds = %17
  %63 = load volatile i1, i1* %4
  ret i1 %63

; <label>:64:                                     ; preds = %17
  %65 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, align 8
  %66 = alloca %struct.Edge*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %65, align 8
  store %struct.Edge* %2, %struct.Edge** %66, align 8
  %67 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %65, align 8
  %68 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val", %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %67, i32 0, i32 0
  %69 = call dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"* %1) #10
  %70 = load %struct.Edge*, %struct.Edge** %66, align 8
  %71 = call zeroext i1 @_ZNKSt4lessI4EdgeEclERKS0_S3_(%"struct.std::less"* %68, %struct.Edge* dereferenceable(24) %69, %struct.Edge* dereferenceable(24) %70)
  store i32 -853284885, i32* %16
  br label %72

; <label>:72:                                     ; preds = %64, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessI4EdgeEEC2ES4_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::less", align 1
  %3 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %3, align 8
  %4 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %3, align 8
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val", %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %4, i32 0, i32 0
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessI4EdgeEEC2ES4_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::less", align 1
  %3 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %3, align 8
  %4 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %3, align 8
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4, i32 0, i32 0
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeI4EdgeSaIS0_EE9push_backEOS0_(%"class.std::deque"*, %struct.Edge* dereferenceable(24)) #1 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca %struct.Edge*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store %struct.Edge* %1, %struct.Edge** %4, align 8
  %5 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %6 = load %struct.Edge*, %struct.Edge** %4, align 8
  %7 = call dereferenceable(24) %struct.Edge* @_ZSt4moveIR4EdgeEONSt16remove_referenceIT_E4typeEOS3_(%struct.Edge* dereferenceable(24) %6) #10
  call void @_ZNSt5dequeI4EdgeSaIS0_EE12emplace_backIJS0_EEEvDpOT_(%"class.std::deque"* %5, %struct.Edge* dereferenceable(24) %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt9push_heapISt15_Deque_iteratorI4EdgeRS1_PS1_ESt4lessIS1_EEvT_S7_T0_(%"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*) #1 comdat {
  %3 = alloca %"struct.std::less", align 1
  %4 = alloca %struct.Edge, align 8
  %5 = alloca %"struct.std::_Deque_iterator", align 8
  %6 = alloca %"struct.std::_Deque_iterator", align 8
  %7 = alloca %struct.Edge, align 8
  %8 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %9 = alloca %"struct.std::less", align 1
  %10 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  call void @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EmiEl(%"struct.std::_Deque_iterator"* sret %5, %"struct.std::_Deque_iterator"* %1, i64 1) #10
  %11 = call dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"* %5) #10
  %12 = call dereferenceable(24) %struct.Edge* @_ZSt4moveIR4EdgeEONSt16remove_referenceIT_E4typeEOS3_(%struct.Edge* dereferenceable(24) %11) #10
  %13 = bitcast %struct.Edge* %4 to i8*
  %14 = bitcast %struct.Edge* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 24, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %6, %"struct.std::_Deque_iterator"* dereferenceable(32) %0) #10
  %15 = call i64 @_ZStmiI4EdgeRS0_PS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_(%"struct.std::_Deque_iterator"* dereferenceable(32) %1, %"struct.std::_Deque_iterator"* dereferenceable(32) %0) #10
  %16 = add i64 %15, -1627584634029354084
  %17 = sub i64 %16, 1
  %18 = sub i64 %17, -1627584634029354084
  %19 = sub nsw i64 %15, 1
  %20 = call dereferenceable(24) %struct.Edge* @_ZSt4moveIR4EdgeEONSt16remove_referenceIT_E4typeEOS3_(%struct.Edge* dereferenceable(24) %4) #10
  %21 = bitcast %struct.Edge* %7 to i8*
  %22 = bitcast %struct.Edge* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 24, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessI4EdgeEEENS0_14_Iter_comp_valIT_EES6_()
  call void @_ZSt11__push_heapISt15_Deque_iteratorI4EdgeRS1_PS1_ElS1_N9__gnu_cxx5__ops14_Iter_comp_valISt4lessIS1_EEEEvT_T0_SC_T1_T2_(%"struct.std::_Deque_iterator"* %6, i64 %18, i64 0, %struct.Edge* byval align 8 %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeI4EdgeSaIS0_EE12emplace_backIJS0_EEEvDpOT_(%"class.std::deque"*, %struct.Edge* dereferenceable(24)) #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::deque"*
  %5 = alloca %struct.Edge**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.620
  %9 = load i32, i32* @y.621
  %10 = sub i32 %8, -229279027
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -229279027
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1971219469, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %170
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1971219469, label %22
    i32 15609132, label %30
    i32 1422741307, label %63
    i32 -544118784, label %66
    i32 1738207450, label %87
    i32 609506277, label %115
    i32 -767584572, label %147
    i32 -109143357, label %148
    i32 -1291206740, label %149
    i32 1039071094, label %165
  ]

; <label>:21:                                     ; preds = %19
  br label %170

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 15609132, i32 -1291206740
  store i32 %29, i32* %18
  br label %170

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::deque"*, align 8
  %32 = alloca %struct.Edge*, align 8
  store %struct.Edge** %32, %struct.Edge*** %5
  store %"class.std::deque"* %0, %"class.std::deque"** %31, align 8
  %33 = load volatile %struct.Edge**, %struct.Edge*** %5
  store %struct.Edge* %1, %struct.Edge** %33, align 8
  %34 = load %"class.std::deque"*, %"class.std::deque"** %31, align 8
  store %"class.std::deque"* %34, %"class.std::deque"** %4
  %35 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %36 = bitcast %"class.std::deque"* %35 to %"class.std::_Deque_base"*
  %37 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %37, i32 0, i32 3
  %39 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %38, i32 0, i32 0
  %40 = load %struct.Edge*, %struct.Edge** %39, align 8
  %41 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %42 = bitcast %"class.std::deque"* %41 to %"class.std::_Deque_base"*
  %43 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %43, i32 0, i32 3
  %45 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %44, i32 0, i32 2
  %46 = load %struct.Edge*, %struct.Edge** %45, align 8
  %47 = getelementptr inbounds %struct.Edge, %struct.Edge* %46, i64 -1
  %48 = icmp ne %struct.Edge* %40, %47
  store i1 %48, i1* %3
  %49 = load i32, i32* @x.620
  %50 = load i32, i32* @y.621
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 1422741307, i32 -1291206740
  store i32 %62, i32* %18
  br label %170

; <label>:63:                                     ; preds = %19
  %64 = load volatile i1, i1* %3
  %65 = select i1 %64, i32 -544118784, i32 1738207450
  store i32 %65, i32* %18
  br label %170

; <label>:66:                                     ; preds = %19
  %67 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %68 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %69 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %68, i32 0, i32 0
  %70 = bitcast %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %69 to %"class.std::allocator.2"*
  %71 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %72 = bitcast %"class.std::deque"* %71 to %"class.std::_Deque_base"*
  %73 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %72, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %73, i32 0, i32 3
  %75 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %74, i32 0, i32 0
  %76 = load %struct.Edge*, %struct.Edge** %75, align 8
  %77 = load volatile %struct.Edge**, %struct.Edge*** %5
  %78 = load %struct.Edge*, %struct.Edge** %77, align 8
  %79 = call dereferenceable(24) %struct.Edge* @_ZSt7forwardI4EdgeEOT_RNSt16remove_referenceIS1_E4typeE(%struct.Edge* dereferenceable(24) %78) #10
  call void @_ZNSt16allocator_traitsISaI4EdgeEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1) %70, %struct.Edge* %76, %struct.Edge* dereferenceable(24) %79)
  %80 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %81 = bitcast %"class.std::deque"* %80 to %"class.std::_Deque_base"*
  %82 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %81, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %82, i32 0, i32 3
  %84 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %83, i32 0, i32 0
  %85 = load %struct.Edge*, %struct.Edge** %84, align 8
  %86 = getelementptr inbounds %struct.Edge, %struct.Edge* %85, i32 1
  store %struct.Edge* %86, %struct.Edge** %84, align 8
  store i32 -109143357, i32* %18
  br label %170

; <label>:87:                                     ; preds = %19
  %88 = load i32, i32* @x.620
  %89 = load i32, i32* @y.621
  %90 = sub i32 %88, -1006806608
  %91 = sub i32 %90, 1
  %92 = add i32 %91, -1006806608
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = xor i1 %96, true
  %99 = xor i1 %97, true
  %100 = xor i1 false, true
  %101 = and i1 %98, false
  %102 = and i1 %96, %100
  %103 = and i1 %99, false
  %104 = and i1 %97, %100
  %105 = or i1 %101, %102
  %106 = or i1 %103, %104
  %107 = xor i1 %105, %106
  %108 = or i1 %98, %99
  %109 = xor i1 %108, true
  %110 = or i1 false, %100
  %111 = and i1 %109, %110
  %112 = or i1 %107, %111
  %113 = or i1 %96, %97
  %114 = select i1 %112, i32 609506277, i32 1039071094
  store i32 %114, i32* %18
  br label %170

; <label>:115:                                    ; preds = %19
  %116 = load volatile %struct.Edge**, %struct.Edge*** %5
  %117 = load %struct.Edge*, %struct.Edge** %116, align 8
  %118 = call dereferenceable(24) %struct.Edge* @_ZSt7forwardI4EdgeEOT_RNSt16remove_referenceIS1_E4typeE(%struct.Edge* dereferenceable(24) %117) #10
  %119 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  call void @_ZNSt5dequeI4EdgeSaIS0_EE16_M_push_back_auxIJS0_EEEvDpOT_(%"class.std::deque"* %119, %struct.Edge* dereferenceable(24) %118)
  %120 = load i32, i32* @x.620
  %121 = load i32, i32* @y.621
  %122 = add i32 %120, -1265319460
  %123 = sub i32 %122, 1
  %124 = sub i32 %123, -1265319460
  %125 = sub i32 %120, 1
  %126 = mul i32 %120, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %121, 10
  %130 = xor i1 %128, true
  %131 = xor i1 %129, true
  %132 = xor i1 false, true
  %133 = and i1 %130, false
  %134 = and i1 %128, %132
  %135 = and i1 %131, false
  %136 = and i1 %129, %132
  %137 = or i1 %133, %134
  %138 = or i1 %135, %136
  %139 = xor i1 %137, %138
  %140 = or i1 %130, %131
  %141 = xor i1 %140, true
  %142 = or i1 false, %132
  %143 = and i1 %141, %142
  %144 = or i1 %139, %143
  %145 = or i1 %128, %129
  %146 = select i1 %144, i32 -767584572, i32 1039071094
  store i32 %146, i32* %18
  br label %170

; <label>:147:                                    ; preds = %19
  store i32 -109143357, i32* %18
  br label %170

; <label>:148:                                    ; preds = %19
  ret void

; <label>:149:                                    ; preds = %19
  %150 = alloca %"class.std::deque"*, align 8
  %151 = alloca %struct.Edge*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %150, align 8
  store %struct.Edge* %1, %struct.Edge** %151, align 8
  %152 = load %"class.std::deque"*, %"class.std::deque"** %150, align 8
  %153 = bitcast %"class.std::deque"* %152 to %"class.std::_Deque_base"*
  %154 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %153, i32 0, i32 0
  %155 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %154, i32 0, i32 3
  %156 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %155, i32 0, i32 0
  %157 = load %struct.Edge*, %struct.Edge** %156, align 8
  %158 = bitcast %"class.std::deque"* %152 to %"class.std::_Deque_base"*
  %159 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %158, i32 0, i32 0
  %160 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %159, i32 0, i32 3
  %161 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %160, i32 0, i32 2
  %162 = load %struct.Edge*, %struct.Edge** %161, align 8
  %163 = getelementptr inbounds %struct.Edge, %struct.Edge* %162, i64 -1
  %164 = icmp ne %struct.Edge* %157, %163
  store i32 15609132, i32* %18
  br label %170

; <label>:165:                                    ; preds = %19
  %166 = load volatile %struct.Edge**, %struct.Edge*** %5
  %167 = load %struct.Edge*, %struct.Edge** %166, align 8
  %168 = call dereferenceable(24) %struct.Edge* @_ZSt7forwardI4EdgeEOT_RNSt16remove_referenceIS1_E4typeE(%struct.Edge* dereferenceable(24) %167) #10
  %169 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  call void @_ZNSt5dequeI4EdgeSaIS0_EE16_M_push_back_auxIJS0_EEEvDpOT_(%"class.std::deque"* %169, %struct.Edge* dereferenceable(24) %168)
  store i32 609506277, i32* %18
  br label %170

; <label>:170:                                    ; preds = %165, %149, %147, %115, %87, %66, %63, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeI4EdgeSaIS0_EE16_M_push_back_auxIJS0_EEEvDpOT_(%"class.std::deque"*, %struct.Edge* dereferenceable(24)) #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca %struct.Edge*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store %struct.Edge* %1, %struct.Edge** %4, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  call void @_ZNSt5dequeI4EdgeSaIS0_EE22_M_reserve_map_at_backEm(%"class.std::deque"* %7, i64 1)
  %8 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %9 = call %struct.Edge* @_ZNSt11_Deque_baseI4EdgeSaIS0_EE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %8)
  %10 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %11 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %11, i32 0, i32 3
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %12, i32 0, i32 3
  %14 = load %struct.Edge**, %struct.Edge*** %13, align 8
  %15 = getelementptr inbounds %struct.Edge*, %struct.Edge** %14, i64 1
  store %struct.Edge* %9, %struct.Edge** %15, align 8
  %16 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %17 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %17 to %"class.std::allocator.2"*
  %19 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %20, i32 0, i32 3
  %22 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %21, i32 0, i32 0
  %23 = load %struct.Edge*, %struct.Edge** %22, align 8
  %24 = load %struct.Edge*, %struct.Edge** %4, align 8
  %25 = call dereferenceable(24) %struct.Edge* @_ZSt7forwardI4EdgeEOT_RNSt16remove_referenceIS1_E4typeE(%struct.Edge* dereferenceable(24) %24) #10
  invoke void @_ZNSt16allocator_traitsISaI4EdgeEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1) %18, %struct.Edge* %23, %struct.Edge* dereferenceable(24) %25)
          to label %26 unwind label %45

; <label>:26:                                     ; preds = %2
  %27 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %28 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %28, i32 0, i32 3
  %30 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %31 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %31, i32 0, i32 3
  %33 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %32, i32 0, i32 3
  %34 = load %struct.Edge**, %struct.Edge*** %33, align 8
  %35 = getelementptr inbounds %struct.Edge*, %struct.Edge** %34, i64 1
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator"* %29, %struct.Edge** %35) #10
  %36 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %37 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %37, i32 0, i32 3
  %39 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %38, i32 0, i32 1
  %40 = load %struct.Edge*, %struct.Edge** %39, align 8
  %41 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %42 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %42, i32 0, i32 3
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %43, i32 0, i32 0
  store %struct.Edge* %40, %struct.Edge** %44, align 8
  br label %161

; <label>:45:                                     ; preds = %2
  %46 = landingpad { i8*, i32 }
          catch i8* null
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %5, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %6, align 4
  br label %49

; <label>:49:                                     ; preds = %45
  %50 = load i8*, i8** %5, align 8
  %51 = call i8* @__cxa_begin_catch(i8* %50) #10
  %52 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %53 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %54 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %54, i32 0, i32 3
  %56 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %55, i32 0, i32 3
  %57 = load %struct.Edge**, %struct.Edge*** %56, align 8
  %58 = getelementptr inbounds %struct.Edge*, %struct.Edge** %57, i64 1
  %59 = load %struct.Edge*, %struct.Edge** %58, align 8
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE18_M_deallocate_nodeEPS0_(%"class.std::_Deque_base"* %52, %struct.Edge* %59) #10
  invoke void @__cxa_rethrow() #11
          to label %211 unwind label %60

; <label>:60:                                     ; preds = %49
  %61 = load i32, i32* @x.622
  %62 = load i32, i32* @y.623
  %63 = add i32 %61, -952740396
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, -952740396
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 true, true
  %74 = and i1 %71, true
  %75 = and i1 %69, %73
  %76 = and i1 %72, true
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 true, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  br i1 %85, label %87, label %212

; <label>:87:                                     ; preds = %60, %212
  %88 = landingpad { i8*, i32 }
          cleanup
  %89 = extractvalue { i8*, i32 } %88, 0
  store i8* %89, i8** %5, align 8
  %90 = extractvalue { i8*, i32 } %88, 1
  store i32 %90, i32* %6, align 4
  %91 = load i32, i32* @x.622
  %92 = load i32, i32* @y.623
  %93 = sub i32 %91, -1394320360
  %94 = sub i32 %93, 1
  %95 = add i32 %94, -1394320360
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  br i1 %103, label %105, label %212

; <label>:105:                                    ; preds = %87
  invoke void @__cxa_end_catch()
          to label %106 unwind label %208

; <label>:106:                                    ; preds = %105
  %107 = load i32, i32* @x.622
  %108 = load i32, i32* @y.623
  %109 = sub i32 %107, -979818218
  %110 = sub i32 %109, 1
  %111 = add i32 %110, -979818218
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = xor i1 %115, true
  %118 = xor i1 %116, true
  %119 = xor i1 true, true
  %120 = and i1 %117, true
  %121 = and i1 %115, %119
  %122 = and i1 %118, true
  %123 = and i1 %116, %119
  %124 = or i1 %120, %121
  %125 = or i1 %122, %123
  %126 = xor i1 %124, %125
  %127 = or i1 %117, %118
  %128 = xor i1 %127, true
  %129 = or i1 true, %119
  %130 = and i1 %128, %129
  %131 = or i1 %126, %130
  %132 = or i1 %115, %116
  br i1 %131, label %133, label %216

; <label>:133:                                    ; preds = %106, %216
  %134 = load i32, i32* @x.622
  %135 = load i32, i32* @y.623
  %136 = sub i32 %134, 1975999332
  %137 = sub i32 %136, 1
  %138 = add i32 %137, 1975999332
  %139 = sub i32 %134, 1
  %140 = mul i32 %134, %138
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %135, 10
  %144 = xor i1 %142, true
  %145 = xor i1 %143, true
  %146 = xor i1 false, true
  %147 = and i1 %144, false
  %148 = and i1 %142, %146
  %149 = and i1 %145, false
  %150 = and i1 %143, %146
  %151 = or i1 %147, %148
  %152 = or i1 %149, %150
  %153 = xor i1 %151, %152
  %154 = or i1 %144, %145
  %155 = xor i1 %154, true
  %156 = or i1 false, %146
  %157 = and i1 %155, %156
  %158 = or i1 %153, %157
  %159 = or i1 %142, %143
  br i1 %158, label %160, label %216

; <label>:160:                                    ; preds = %133
  br label %162

; <label>:161:                                    ; preds = %26
  ret void

; <label>:162:                                    ; preds = %160
  %163 = load i32, i32* @x.622
  %164 = load i32, i32* @y.623
  %165 = sub i32 0, 1
  %166 = add i32 %163, %165
  %167 = sub i32 %163, 1
  %168 = mul i32 %163, %166
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %164, 10
  %172 = xor i1 %170, true
  %173 = xor i1 %171, true
  %174 = xor i1 true, true
  %175 = and i1 %172, true
  %176 = and i1 %170, %174
  %177 = and i1 %173, true
  %178 = and i1 %171, %174
  %179 = or i1 %175, %176
  %180 = or i1 %177, %178
  %181 = xor i1 %179, %180
  %182 = or i1 %172, %173
  %183 = xor i1 %182, true
  %184 = or i1 true, %174
  %185 = and i1 %183, %184
  %186 = or i1 %181, %185
  %187 = or i1 %170, %171
  br i1 %186, label %188, label %217

; <label>:188:                                    ; preds = %162, %217
  %189 = load i8*, i8** %5, align 8
  %190 = load i32, i32* %6, align 4
  %191 = insertvalue { i8*, i32 } undef, i8* %189, 0
  %192 = insertvalue { i8*, i32 } %191, i32 %190, 1
  %193 = load i32, i32* @x.622
  %194 = load i32, i32* @y.623
  %195 = sub i32 %193, 1143656380
  %196 = sub i32 %195, 1
  %197 = add i32 %196, 1143656380
  %198 = sub i32 %193, 1
  %199 = mul i32 %193, %197
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %194, 10
  %203 = and i1 %201, %202
  %204 = xor i1 %201, %202
  %205 = or i1 %203, %204
  %206 = or i1 %201, %202
  br i1 %205, label %207, label %217

; <label>:207:                                    ; preds = %188
  resume { i8*, i32 } %192

; <label>:208:                                    ; preds = %105
  %209 = landingpad { i8*, i32 }
          catch i8* null
  %210 = extractvalue { i8*, i32 } %209, 0
  call void @__clang_call_terminate(i8* %210) #8
  unreachable

; <label>:211:                                    ; preds = %49
  unreachable

; <label>:212:                                    ; preds = %87, %60
  %213 = landingpad { i8*, i32 }
          cleanup
  %214 = extractvalue { i8*, i32 } %213, 0
  store i8* %214, i8** %5, align 8
  %215 = extractvalue { i8*, i32 } %213, 1
  store i32 %215, i32* %6, align 4
  br label %87

; <label>:216:                                    ; preds = %133, %106
  br label %133

; <label>:217:                                    ; preds = %188, %162
  %218 = load i8*, i8** %5, align 8
  %219 = load i32, i32* %6, align 4
  %220 = insertvalue { i8*, i32 } undef, i8* %218, 0
  %221 = insertvalue { i8*, i32 } %220, i32 %219, 1
  br label %188
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeI4EdgeSaIS0_EE22_M_reserve_map_at_backEm(%"class.std::deque"*, i64) #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::deque"*
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.624
  %9 = load i32, i32* @y.625
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 381314588, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %192
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 381314588, label %21
    i32 461296533, label %29
    i32 -1462644105, label %82
    i32 581478283, label %85
    i32 -1093682826, label %89
    i32 -1770565057, label %90
  ]

; <label>:20:                                     ; preds = %18
  br label %192

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 461296533, i32 -1770565057
  store i32 %28, i32* %17
  br label %192

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::deque"*, align 8
  %31 = alloca i64, align 8
  store i64* %31, i64** %5
  store %"class.std::deque"* %0, %"class.std::deque"** %30, align 8
  %32 = load volatile i64*, i64** %5
  store i64 %1, i64* %32, align 8
  %33 = load %"class.std::deque"*, %"class.std::deque"** %30, align 8
  store %"class.std::deque"* %33, %"class.std::deque"** %4
  %34 = load volatile i64*, i64** %5
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %35, -1737373769873754494
  %37 = add i64 %36, 1
  %38 = add i64 %37, -1737373769873754494
  %39 = add i64 %35, 1
  %40 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %41 = bitcast %"class.std::deque"* %40 to %"class.std::_Deque_base"*
  %42 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %42, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %46 = bitcast %"class.std::deque"* %45 to %"class.std::_Deque_base"*
  %47 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %46, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %47, i32 0, i32 3
  %49 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %48, i32 0, i32 3
  %50 = load %struct.Edge**, %struct.Edge*** %49, align 8
  %51 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %52 = bitcast %"class.std::deque"* %51 to %"class.std::_Deque_base"*
  %53 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %52, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %53, i32 0, i32 0
  %55 = load %struct.Edge**, %struct.Edge*** %54, align 8
  %56 = ptrtoint %struct.Edge** %50 to i64
  %57 = ptrtoint %struct.Edge** %55 to i64
  %58 = sub i64 0, %57
  %59 = add i64 %56, %58
  %60 = sub i64 %56, %57
  %61 = sdiv exact i64 %59, 8
  %62 = sub i64 %44, 9117254605132310975
  %63 = sub i64 %62, %61
  %64 = add i64 %63, 9117254605132310975
  %65 = sub i64 %44, %61
  %66 = icmp ugt i64 %38, %64
  store i1 %66, i1* %3
  %67 = load i32, i32* @x.624
  %68 = load i32, i32* @y.625
  %69 = add i32 %67, -1600187899
  %70 = sub i32 %69, 1
  %71 = sub i32 %70, -1600187899
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  %81 = select i1 %79, i32 -1462644105, i32 -1770565057
  store i32 %81, i32* %17
  br label %192

; <label>:82:                                     ; preds = %18
  %83 = load volatile i1, i1* %3
  %84 = select i1 %83, i32 581478283, i32 -1093682826
  store i32 %84, i32* %17
  br label %192

; <label>:85:                                     ; preds = %18
  %86 = load volatile i64*, i64** %5
  %87 = load i64, i64* %86, align 8
  %88 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  call void @_ZNSt5dequeI4EdgeSaIS0_EE17_M_reallocate_mapEmb(%"class.std::deque"* %88, i64 %87, i1 zeroext false)
  store i32 -1093682826, i32* %17
  br label %192

; <label>:89:                                     ; preds = %18
  ret void

; <label>:90:                                     ; preds = %18
  %91 = alloca %"class.std::deque"*, align 8
  %92 = alloca i64, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %91, align 8
  store i64 %1, i64* %92, align 8
  %93 = load %"class.std::deque"*, %"class.std::deque"** %91, align 8
  %94 = load i64, i64* %92, align 8
  %95 = sub i64 0, 1
  %96 = add i64 %94, %95
  %97 = sub i64 %94, 1
  %98 = mul i64 %96, 1
  %99 = sub i64 %94, -37191452016468430
  %100 = sub i64 %99, 1
  %101 = add i64 %100, -37191452016468430
  %102 = sub i64 %94, 1
  %103 = mul i64 %101, 1
  %104 = sub i64 %94, 3602839288801145437
  %105 = sub i64 %104, 1
  %106 = add i64 %105, 3602839288801145437
  %107 = sub i64 %94, 1
  %108 = mul i64 %106, 1
  %109 = shl i64 %94, 1
  %110 = sub i64 0, %94
  %111 = sub i64 0, 1
  %112 = add i64 %110, %111
  %113 = sub i64 0, %112
  %114 = add i64 %94, 1
  %115 = bitcast %"class.std::deque"* %93 to %"class.std::_Deque_base"*
  %116 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %115, i32 0, i32 0
  %117 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %116, i32 0, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.std::deque"* %93 to %"class.std::_Deque_base"*
  %120 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %119, i32 0, i32 0
  %121 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %120, i32 0, i32 3
  %122 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %121, i32 0, i32 3
  %123 = load %struct.Edge**, %struct.Edge*** %122, align 8
  %124 = bitcast %"class.std::deque"* %93 to %"class.std::_Deque_base"*
  %125 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %124, i32 0, i32 0
  %126 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %125, i32 0, i32 0
  %127 = load %struct.Edge**, %struct.Edge*** %126, align 8
  %128 = ptrtoint %struct.Edge** %123 to i64
  %129 = ptrtoint %struct.Edge** %127 to i64
  %130 = sub i64 0, 4831578366800267955
  %131 = sub i64 %130, %128
  %132 = add i64 %131, 4831578366800267955
  %133 = sub i64 0, %128
  %134 = add i64 %132, 9038830781339036695
  %135 = add i64 %134, %129
  %136 = sub i64 %135, 9038830781339036695
  %137 = add i64 %132, %129
  %138 = sub i64 0, %128
  %139 = add i64 0, %138
  %140 = sub i64 0, %128
  %141 = sub i64 %139, 3994656079880328887
  %142 = add i64 %141, %129
  %143 = add i64 %142, 3994656079880328887
  %144 = add i64 %139, %129
  %145 = sub i64 %128, -4288280965047263485
  %146 = sub i64 %145, %129
  %147 = add i64 %146, -4288280965047263485
  %148 = sub i64 %128, %129
  %149 = mul i64 %147, %129
  %150 = add i64 %128, -3376526281423317260
  %151 = sub i64 %150, %129
  %152 = sub i64 %151, -3376526281423317260
  %153 = sub i64 %128, %129
  %154 = sub i64 0, %152
  %155 = add i64 0, %154
  %156 = sub i64 0, %152
  %157 = sub i64 %155, -5505856387921067755
  %158 = add i64 %157, 8
  %159 = add i64 %158, -5505856387921067755
  %160 = add i64 %155, 8
  %161 = add i64 %152, -552046704999939016
  %162 = sub i64 %161, 8
  %163 = sub i64 %162, -552046704999939016
  %164 = sub i64 %152, 8
  %165 = mul i64 %163, 8
  %166 = shl i64 %152, 8
  %167 = shl i64 %152, 8
  %168 = shl i64 %152, 8
  %169 = sub i64 %152, -2369576936848992512
  %170 = sub i64 %169, 8
  %171 = add i64 %170, -2369576936848992512
  %172 = sub i64 %152, 8
  %173 = mul i64 %171, 8
  %174 = sub i64 0, 1530615289567140723
  %175 = sub i64 %174, %152
  %176 = add i64 %175, 1530615289567140723
  %177 = sub i64 0, %152
  %178 = add i64 %176, -1326636479581785612
  %179 = add i64 %178, 8
  %180 = sub i64 %179, -1326636479581785612
  %181 = add i64 %176, 8
  %182 = sdiv exact i64 %152, 8
  %183 = sub i64 0, %182
  %184 = add i64 %118, %183
  %185 = sub i64 %118, %182
  %186 = mul i64 %184, %182
  %187 = sub i64 %118, 507248496860472723
  %188 = sub i64 %187, %182
  %189 = add i64 %188, 507248496860472723
  %190 = sub i64 %118, %182
  %191 = icmp ugt i64 %113, %189
  store i32 461296533, i32* %17
  br label %192

; <label>:192:                                    ; preds = %90, %85, %82, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeI4EdgeSaIS0_EE17_M_reallocate_mapEmb(%"class.std::deque"*, i64, i1 zeroext) #1 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %struct.Edge**
  %7 = alloca i1
  %8 = alloca %struct.Edge**
  %9 = alloca i1
  %10 = alloca %"class.std::deque"*
  %11 = alloca %struct.Edge***
  %12 = alloca i64*
  %13 = alloca %struct.Edge***
  %14 = alloca i64*
  %15 = alloca i64*
  %16 = alloca i8*
  %17 = alloca i64*
  %18 = alloca i1
  %19 = alloca i1
  %20 = load i32, i32* @x.626
  %21 = load i32, i32* @y.627
  %22 = add i32 %20, -1440515010
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, -1440515010
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  store i1 %28, i1* %19
  %29 = icmp slt i32 %21, 10
  store i1 %29, i1* %18
  %30 = alloca i32
  store i32 -643228936, i32* %30
  %31 = alloca i64
  %32 = alloca i64
  br label %33

; <label>:33:                                     ; preds = %3, %685
  %34 = load i32, i32* %30
  switch i32 %34, label %35 [
    i32 -643228936, label %36
    i32 469799329, label %44
    i32 -604940734, label %115
    i32 591614707, label %118
    i32 1432857867, label %141
    i32 -1733982412, label %144
    i32 -29047265, label %160
    i32 -352933027, label %188
    i32 89877113, label %189
    i32 1844197470, label %218
    i32 -784445678, label %247
    i32 -337053057, label %250
    i32 -494582291, label %267
    i32 -1209400226, label %287
    i32 -2074250612, label %288
    i32 1523333565, label %333
    i32 -1684302104, label %336
    i32 1774599994, label %337
    i32 1220228839, label %353
    i32 -2125413406, label %413
    i32 1732067128, label %414
    i32 -1100047941, label %431
    i32 -2006136006, label %625
    i32 -1890420024, label %626
    i32 -997923138, label %640
  ]

; <label>:35:                                     ; preds = %33
  br label %685

; <label>:36:                                     ; preds = %33
  %37 = load volatile i1, i1* %19
  %38 = load volatile i1, i1* %18
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 469799329, i32 -1100047941
  store i32 %43, i32* %30
  br label %685

; <label>:44:                                     ; preds = %33
  %45 = alloca %"class.std::deque"*, align 8
  %46 = alloca i64, align 8
  store i64* %46, i64** %17
  %47 = alloca i8, align 1
  store i8* %47, i8** %16
  %48 = alloca i64, align 8
  store i64* %48, i64** %15
  %49 = alloca i64, align 8
  store i64* %49, i64** %14
  %50 = alloca %struct.Edge**, align 8
  store %struct.Edge*** %50, %struct.Edge**** %13
  %51 = alloca i64, align 8
  store i64* %51, i64** %12
  %52 = alloca %struct.Edge**, align 8
  store %struct.Edge*** %52, %struct.Edge**** %11
  store %"class.std::deque"* %0, %"class.std::deque"** %45, align 8
  %53 = load volatile i64*, i64** %17
  store i64 %1, i64* %53, align 8
  %54 = zext i1 %2 to i8
  %55 = load volatile i8*, i8** %16
  store i8 %54, i8* %55, align 1
  %56 = load %"class.std::deque"*, %"class.std::deque"** %45, align 8
  store %"class.std::deque"* %56, %"class.std::deque"** %10
  %57 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %58 = bitcast %"class.std::deque"* %57 to %"class.std::_Deque_base"*
  %59 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %58, i32 0, i32 0
  %60 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %59, i32 0, i32 3
  %61 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %60, i32 0, i32 3
  %62 = load %struct.Edge**, %struct.Edge*** %61, align 8
  %63 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %64 = bitcast %"class.std::deque"* %63 to %"class.std::_Deque_base"*
  %65 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %64, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %65, i32 0, i32 2
  %67 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %66, i32 0, i32 3
  %68 = load %struct.Edge**, %struct.Edge*** %67, align 8
  %69 = ptrtoint %struct.Edge** %62 to i64
  %70 = ptrtoint %struct.Edge** %68 to i64
  %71 = sub i64 %69, -3645946048482723450
  %72 = sub i64 %71, %70
  %73 = add i64 %72, -3645946048482723450
  %74 = sub i64 %69, %70
  %75 = sdiv exact i64 %73, 8
  %76 = sub i64 0, %75
  %77 = sub i64 0, 1
  %78 = add i64 %76, %77
  %79 = sub i64 0, %78
  %80 = add nsw i64 %75, 1
  %81 = load volatile i64*, i64** %15
  store i64 %79, i64* %81, align 8
  %82 = load volatile i64*, i64** %15
  %83 = load i64, i64* %82, align 8
  %84 = load volatile i64*, i64** %17
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %83, -5249691014944449709
  %87 = add i64 %86, %85
  %88 = sub i64 %87, -5249691014944449709
  %89 = add i64 %83, %85
  %90 = load volatile i64*, i64** %14
  store i64 %88, i64* %90, align 8
  %91 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %92 = bitcast %"class.std::deque"* %91 to %"class.std::_Deque_base"*
  %93 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %92, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %93, i32 0, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = load volatile i64*, i64** %14
  %97 = load i64, i64* %96, align 8
  %98 = mul i64 2, %97
  %99 = icmp ugt i64 %95, %98
  store i1 %99, i1* %9
  %100 = load i32, i32* @x.626
  %101 = load i32, i32* @y.627
  %102 = add i32 %100, -536799562
  %103 = sub i32 %102, 1
  %104 = sub i32 %103, -536799562
  %105 = sub i32 %100, 1
  %106 = mul i32 %100, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %101, 10
  %110 = and i1 %108, %109
  %111 = xor i1 %108, %109
  %112 = or i1 %110, %111
  %113 = or i1 %108, %109
  %114 = select i1 %112, i32 -604940734, i32 -1100047941
  store i32 %114, i32* %30
  br label %685

; <label>:115:                                    ; preds = %33
  %116 = load volatile i1, i1* %9
  %117 = select i1 %116, i32 591614707, i32 -2074250612
  store i32 %117, i32* %30
  br label %685

; <label>:118:                                    ; preds = %33
  %119 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %120 = bitcast %"class.std::deque"* %119 to %"class.std::_Deque_base"*
  %121 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %120, i32 0, i32 0
  %122 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %121, i32 0, i32 0
  %123 = load %struct.Edge**, %struct.Edge*** %122, align 8
  %124 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %125 = bitcast %"class.std::deque"* %124 to %"class.std::_Deque_base"*
  %126 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %125, i32 0, i32 0
  %127 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %126, i32 0, i32 1
  %128 = load i64, i64* %127, align 8
  %129 = load volatile i64*, i64** %14
  %130 = load i64, i64* %129, align 8
  %131 = add i64 %128, -7191138041650349094
  %132 = sub i64 %131, %130
  %133 = sub i64 %132, -7191138041650349094
  %134 = sub i64 %128, %130
  %135 = udiv i64 %133, 2
  %136 = getelementptr inbounds %struct.Edge*, %struct.Edge** %123, i64 %135
  store %struct.Edge** %136, %struct.Edge*** %8
  %137 = load volatile i8*, i8** %16
  %138 = load i8, i8* %137, align 1
  %139 = trunc i8 %138 to i1
  %140 = select i1 %139, i32 1432857867, i32 -1733982412
  store i32 %140, i32* %30
  br label %685

; <label>:141:                                    ; preds = %33
  %142 = load volatile i64*, i64** %17
  %143 = load i64, i64* %142, align 8
  store i32 89877113, i32* %30
  store i64 %143, i64* %31
  br label %685

; <label>:144:                                    ; preds = %33
  %145 = load i32, i32* @x.626
  %146 = load i32, i32* @y.627
  %147 = add i32 %145, -1640745073
  %148 = sub i32 %147, 1
  %149 = sub i32 %148, -1640745073
  %150 = sub i32 %145, 1
  %151 = mul i32 %145, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %146, 10
  %155 = and i1 %153, %154
  %156 = xor i1 %153, %154
  %157 = or i1 %155, %156
  %158 = or i1 %153, %154
  %159 = select i1 %157, i32 -29047265, i32 -2006136006
  store i32 %159, i32* %30
  br label %685

; <label>:160:                                    ; preds = %33
  %161 = load i32, i32* @x.626
  %162 = load i32, i32* @y.627
  %163 = add i32 %161, -303331098
  %164 = sub i32 %163, 1
  %165 = sub i32 %164, -303331098
  %166 = sub i32 %161, 1
  %167 = mul i32 %161, %165
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %162, 10
  %171 = xor i1 %169, true
  %172 = xor i1 %170, true
  %173 = xor i1 false, true
  %174 = and i1 %171, false
  %175 = and i1 %169, %173
  %176 = and i1 %172, false
  %177 = and i1 %170, %173
  %178 = or i1 %174, %175
  %179 = or i1 %176, %177
  %180 = xor i1 %178, %179
  %181 = or i1 %171, %172
  %182 = xor i1 %181, true
  %183 = or i1 false, %173
  %184 = and i1 %182, %183
  %185 = or i1 %180, %184
  %186 = or i1 %169, %170
  %187 = select i1 %185, i32 -352933027, i32 -2006136006
  store i32 %187, i32* %30
  br label %685

; <label>:188:                                    ; preds = %33
  store i32 89877113, i32* %30
  store i64 0, i64* %31
  br label %685

; <label>:189:                                    ; preds = %33
  %190 = load i64, i64* %31
  store i64 %190, i64* %5
  %191 = load i32, i32* @x.626
  %192 = load i32, i32* @y.627
  %193 = sub i32 %191, 1271132265
  %194 = sub i32 %193, 1
  %195 = add i32 %194, 1271132265
  %196 = sub i32 %191, 1
  %197 = mul i32 %191, %195
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %192, 10
  %201 = xor i1 %199, true
  %202 = xor i1 %200, true
  %203 = xor i1 false, true
  %204 = and i1 %201, false
  %205 = and i1 %199, %203
  %206 = and i1 %202, false
  %207 = and i1 %200, %203
  %208 = or i1 %204, %205
  %209 = or i1 %206, %207
  %210 = xor i1 %208, %209
  %211 = or i1 %201, %202
  %212 = xor i1 %211, true
  %213 = or i1 false, %203
  %214 = and i1 %212, %213
  %215 = or i1 %210, %214
  %216 = or i1 %199, %200
  %217 = select i1 %215, i32 1844197470, i32 -1890420024
  store i32 %217, i32* %30
  br label %685

; <label>:218:                                    ; preds = %33
  %219 = load volatile %struct.Edge**, %struct.Edge*** %8
  %220 = load volatile i64, i64* %5
  %221 = getelementptr inbounds %struct.Edge*, %struct.Edge** %219, i64 %220
  %222 = load volatile %struct.Edge***, %struct.Edge**** %13
  store %struct.Edge** %221, %struct.Edge*** %222, align 8
  %223 = load volatile %struct.Edge***, %struct.Edge**** %13
  %224 = load %struct.Edge**, %struct.Edge*** %223, align 8
  %225 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %226 = bitcast %"class.std::deque"* %225 to %"class.std::_Deque_base"*
  %227 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %226, i32 0, i32 0
  %228 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %227, i32 0, i32 2
  %229 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %228, i32 0, i32 3
  %230 = load %struct.Edge**, %struct.Edge*** %229, align 8
  %231 = icmp ult %struct.Edge** %224, %230
  store i1 %231, i1* %7
  %232 = load i32, i32* @x.626
  %233 = load i32, i32* @y.627
  %234 = sub i32 %232, -1320851202
  %235 = sub i32 %234, 1
  %236 = add i32 %235, -1320851202
  %237 = sub i32 %232, 1
  %238 = mul i32 %232, %236
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %233, 10
  %242 = and i1 %240, %241
  %243 = xor i1 %240, %241
  %244 = or i1 %242, %243
  %245 = or i1 %240, %241
  %246 = select i1 %244, i32 -784445678, i32 -1890420024
  store i32 %246, i32* %30
  br label %685

; <label>:247:                                    ; preds = %33
  %248 = load volatile i1, i1* %7
  %249 = select i1 %248, i32 -337053057, i32 -494582291
  store i32 %249, i32* %30
  br label %685

; <label>:250:                                    ; preds = %33
  %251 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %252 = bitcast %"class.std::deque"* %251 to %"class.std::_Deque_base"*
  %253 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %252, i32 0, i32 0
  %254 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %253, i32 0, i32 2
  %255 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %254, i32 0, i32 3
  %256 = load %struct.Edge**, %struct.Edge*** %255, align 8
  %257 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %258 = bitcast %"class.std::deque"* %257 to %"class.std::_Deque_base"*
  %259 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %258, i32 0, i32 0
  %260 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %259, i32 0, i32 3
  %261 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %260, i32 0, i32 3
  %262 = load %struct.Edge**, %struct.Edge*** %261, align 8
  %263 = getelementptr inbounds %struct.Edge*, %struct.Edge** %262, i64 1
  %264 = load volatile %struct.Edge***, %struct.Edge**** %13
  %265 = load %struct.Edge**, %struct.Edge*** %264, align 8
  %266 = call %struct.Edge** @_ZSt4copyIPP4EdgeS2_ET0_T_S4_S3_(%struct.Edge** %256, %struct.Edge** %263, %struct.Edge** %265)
  store i32 -1209400226, i32* %30
  br label %685

; <label>:267:                                    ; preds = %33
  %268 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %269 = bitcast %"class.std::deque"* %268 to %"class.std::_Deque_base"*
  %270 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %269, i32 0, i32 0
  %271 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %270, i32 0, i32 2
  %272 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %271, i32 0, i32 3
  %273 = load %struct.Edge**, %struct.Edge*** %272, align 8
  %274 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %275 = bitcast %"class.std::deque"* %274 to %"class.std::_Deque_base"*
  %276 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %275, i32 0, i32 0
  %277 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %276, i32 0, i32 3
  %278 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %277, i32 0, i32 3
  %279 = load %struct.Edge**, %struct.Edge*** %278, align 8
  %280 = getelementptr inbounds %struct.Edge*, %struct.Edge** %279, i64 1
  %281 = load volatile %struct.Edge***, %struct.Edge**** %13
  %282 = load %struct.Edge**, %struct.Edge*** %281, align 8
  %283 = load volatile i64*, i64** %15
  %284 = load i64, i64* %283, align 8
  %285 = getelementptr inbounds %struct.Edge*, %struct.Edge** %282, i64 %284
  %286 = call %struct.Edge** @_ZSt13copy_backwardIPP4EdgeS2_ET0_T_S4_S3_(%struct.Edge** %273, %struct.Edge** %280, %struct.Edge** %285)
  store i32 -1209400226, i32* %30
  br label %685

; <label>:287:                                    ; preds = %33
  store i32 1732067128, i32* %30
  br label %685

; <label>:288:                                    ; preds = %33
  %289 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %290 = bitcast %"class.std::deque"* %289 to %"class.std::_Deque_base"*
  %291 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %290, i32 0, i32 0
  %292 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %291, i32 0, i32 1
  %293 = load i64, i64* %292, align 8
  %294 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %295 = bitcast %"class.std::deque"* %294 to %"class.std::_Deque_base"*
  %296 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %295, i32 0, i32 0
  %297 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %296, i32 0, i32 1
  %298 = load volatile i64*, i64** %17
  %299 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %297, i64* dereferenceable(8) %298)
  %300 = load i64, i64* %299, align 8
  %301 = add i64 %293, -5732397163140141797
  %302 = add i64 %301, %300
  %303 = sub i64 %302, -5732397163140141797
  %304 = add i64 %293, %300
  %305 = sub i64 0, %303
  %306 = sub i64 0, 2
  %307 = add i64 %305, %306
  %308 = sub i64 0, %307
  %309 = add i64 %303, 2
  %310 = load volatile i64*, i64** %12
  store i64 %308, i64* %310, align 8
  %311 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %312 = bitcast %"class.std::deque"* %311 to %"class.std::_Deque_base"*
  %313 = load volatile i64*, i64** %12
  %314 = load i64, i64* %313, align 8
  %315 = call %struct.Edge** @_ZNSt11_Deque_baseI4EdgeSaIS0_EE15_M_allocate_mapEm(%"class.std::_Deque_base"* %312, i64 %314)
  %316 = load volatile %struct.Edge***, %struct.Edge**** %11
  store %struct.Edge** %315, %struct.Edge*** %316, align 8
  %317 = load volatile %struct.Edge***, %struct.Edge**** %11
  %318 = load %struct.Edge**, %struct.Edge*** %317, align 8
  %319 = load volatile i64*, i64** %12
  %320 = load i64, i64* %319, align 8
  %321 = load volatile i64*, i64** %14
  %322 = load i64, i64* %321, align 8
  %323 = sub i64 %320, 7717058513574466334
  %324 = sub i64 %323, %322
  %325 = add i64 %324, 7717058513574466334
  %326 = sub i64 %320, %322
  %327 = udiv i64 %325, 2
  %328 = getelementptr inbounds %struct.Edge*, %struct.Edge** %318, i64 %327
  store %struct.Edge** %328, %struct.Edge*** %6
  %329 = load volatile i8*, i8** %16
  %330 = load i8, i8* %329, align 1
  %331 = trunc i8 %330 to i1
  %332 = select i1 %331, i32 1523333565, i32 -1684302104
  store i32 %332, i32* %30
  br label %685

; <label>:333:                                    ; preds = %33
  %334 = load volatile i64*, i64** %17
  %335 = load i64, i64* %334, align 8
  store i32 1774599994, i32* %30
  store i64 %335, i64* %32
  br label %685

; <label>:336:                                    ; preds = %33
  store i32 1774599994, i32* %30
  store i64 0, i64* %32
  br label %685

; <label>:337:                                    ; preds = %33
  %338 = load i64, i64* %32
  store i64 %338, i64* %4
  %339 = load i32, i32* @x.626
  %340 = load i32, i32* @y.627
  %341 = sub i32 0, 1
  %342 = add i32 %339, %341
  %343 = sub i32 %339, 1
  %344 = mul i32 %339, %342
  %345 = urem i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %340, 10
  %348 = and i1 %346, %347
  %349 = xor i1 %346, %347
  %350 = or i1 %348, %349
  %351 = or i1 %346, %347
  %352 = select i1 %350, i32 1220228839, i32 -997923138
  store i32 %352, i32* %30
  br label %685

; <label>:353:                                    ; preds = %33
  %354 = load volatile %struct.Edge**, %struct.Edge*** %6
  %355 = load volatile i64, i64* %4
  %356 = getelementptr inbounds %struct.Edge*, %struct.Edge** %354, i64 %355
  %357 = load volatile %struct.Edge***, %struct.Edge**** %13
  store %struct.Edge** %356, %struct.Edge*** %357, align 8
  %358 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %359 = bitcast %"class.std::deque"* %358 to %"class.std::_Deque_base"*
  %360 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %359, i32 0, i32 0
  %361 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %360, i32 0, i32 2
  %362 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %361, i32 0, i32 3
  %363 = load %struct.Edge**, %struct.Edge*** %362, align 8
  %364 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %365 = bitcast %"class.std::deque"* %364 to %"class.std::_Deque_base"*
  %366 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %365, i32 0, i32 0
  %367 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %366, i32 0, i32 3
  %368 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %367, i32 0, i32 3
  %369 = load %struct.Edge**, %struct.Edge*** %368, align 8
  %370 = getelementptr inbounds %struct.Edge*, %struct.Edge** %369, i64 1
  %371 = load volatile %struct.Edge***, %struct.Edge**** %13
  %372 = load %struct.Edge**, %struct.Edge*** %371, align 8
  %373 = call %struct.Edge** @_ZSt4copyIPP4EdgeS2_ET0_T_S4_S3_(%struct.Edge** %363, %struct.Edge** %370, %struct.Edge** %372)
  %374 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %375 = bitcast %"class.std::deque"* %374 to %"class.std::_Deque_base"*
  %376 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %377 = bitcast %"class.std::deque"* %376 to %"class.std::_Deque_base"*
  %378 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %377, i32 0, i32 0
  %379 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %378, i32 0, i32 0
  %380 = load %struct.Edge**, %struct.Edge*** %379, align 8
  %381 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %382 = bitcast %"class.std::deque"* %381 to %"class.std::_Deque_base"*
  %383 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %382, i32 0, i32 0
  %384 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %383, i32 0, i32 1
  %385 = load i64, i64* %384, align 8
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE17_M_deallocate_mapEPPS0_m(%"class.std::_Deque_base"* %375, %struct.Edge** %380, i64 %385) #10
  %386 = load volatile %struct.Edge***, %struct.Edge**** %11
  %387 = load %struct.Edge**, %struct.Edge*** %386, align 8
  %388 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %389 = bitcast %"class.std::deque"* %388 to %"class.std::_Deque_base"*
  %390 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %389, i32 0, i32 0
  %391 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %390, i32 0, i32 0
  store %struct.Edge** %387, %struct.Edge*** %391, align 8
  %392 = load volatile i64*, i64** %12
  %393 = load i64, i64* %392, align 8
  %394 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %395 = bitcast %"class.std::deque"* %394 to %"class.std::_Deque_base"*
  %396 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %395, i32 0, i32 0
  %397 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %396, i32 0, i32 1
  store i64 %393, i64* %397, align 8
  %398 = load i32, i32* @x.626
  %399 = load i32, i32* @y.627
  %400 = sub i32 %398, 385615443
  %401 = sub i32 %400, 1
  %402 = add i32 %401, 385615443
  %403 = sub i32 %398, 1
  %404 = mul i32 %398, %402
  %405 = urem i32 %404, 2
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %399, 10
  %408 = and i1 %406, %407
  %409 = xor i1 %406, %407
  %410 = or i1 %408, %409
  %411 = or i1 %406, %407
  %412 = select i1 %410, i32 -2125413406, i32 -997923138
  store i32 %412, i32* %30
  br label %685

; <label>:413:                                    ; preds = %33
  store i32 1732067128, i32* %30
  br label %685

; <label>:414:                                    ; preds = %33
  %415 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %416 = bitcast %"class.std::deque"* %415 to %"class.std::_Deque_base"*
  %417 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %416, i32 0, i32 0
  %418 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %417, i32 0, i32 2
  %419 = load volatile %struct.Edge***, %struct.Edge**** %13
  %420 = load %struct.Edge**, %struct.Edge*** %419, align 8
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator"* %418, %struct.Edge** %420) #10
  %421 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %422 = bitcast %"class.std::deque"* %421 to %"class.std::_Deque_base"*
  %423 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %422, i32 0, i32 0
  %424 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %423, i32 0, i32 3
  %425 = load volatile %struct.Edge***, %struct.Edge**** %13
  %426 = load %struct.Edge**, %struct.Edge*** %425, align 8
  %427 = load volatile i64*, i64** %15
  %428 = load i64, i64* %427, align 8
  %429 = getelementptr inbounds %struct.Edge*, %struct.Edge** %426, i64 %428
  %430 = getelementptr inbounds %struct.Edge*, %struct.Edge** %429, i64 -1
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator"* %424, %struct.Edge** %430) #10
  ret void

; <label>:431:                                    ; preds = %33
  %432 = alloca %"class.std::deque"*, align 8
  %433 = alloca i64, align 8
  %434 = alloca i8, align 1
  %435 = alloca i64, align 8
  %436 = alloca i64, align 8
  %437 = alloca %struct.Edge**, align 8
  %438 = alloca i64, align 8
  %439 = alloca %struct.Edge**, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %432, align 8
  store i64 %1, i64* %433, align 8
  %440 = zext i1 %2 to i8
  store i8 %440, i8* %434, align 1
  %441 = load %"class.std::deque"*, %"class.std::deque"** %432, align 8
  %442 = bitcast %"class.std::deque"* %441 to %"class.std::_Deque_base"*
  %443 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %442, i32 0, i32 0
  %444 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %443, i32 0, i32 3
  %445 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %444, i32 0, i32 3
  %446 = load %struct.Edge**, %struct.Edge*** %445, align 8
  %447 = bitcast %"class.std::deque"* %441 to %"class.std::_Deque_base"*
  %448 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %447, i32 0, i32 0
  %449 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %448, i32 0, i32 2
  %450 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %449, i32 0, i32 3
  %451 = load %struct.Edge**, %struct.Edge*** %450, align 8
  %452 = ptrtoint %struct.Edge** %446 to i64
  %453 = ptrtoint %struct.Edge** %451 to i64
  %454 = sub i64 0, 809579638410311540
  %455 = sub i64 %454, %452
  %456 = add i64 %455, 809579638410311540
  %457 = sub i64 0, %452
  %458 = sub i64 %456, -5173182600130900380
  %459 = add i64 %458, %453
  %460 = add i64 %459, -5173182600130900380
  %461 = add i64 %456, %453
  %462 = sub i64 %452, 360176600211840354
  %463 = sub i64 %462, %453
  %464 = add i64 %463, 360176600211840354
  %465 = sub i64 %452, %453
  %466 = mul i64 %464, %453
  %467 = add i64 0, 8671001527391988570
  %468 = sub i64 %467, %452
  %469 = sub i64 %468, 8671001527391988570
  %470 = sub i64 0, %452
  %471 = sub i64 0, %469
  %472 = sub i64 0, %453
  %473 = add i64 %471, %472
  %474 = sub i64 0, %473
  %475 = add i64 %469, %453
  %476 = shl i64 %452, %453
  %477 = shl i64 %452, %453
  %478 = shl i64 %452, %453
  %479 = sub i64 %452, 5598107789654868306
  %480 = sub i64 %479, %453
  %481 = add i64 %480, 5598107789654868306
  %482 = sub i64 %452, %453
  %483 = add i64 0, -417134268034657859
  %484 = sub i64 %483, %481
  %485 = sub i64 %484, -417134268034657859
  %486 = sub i64 0, %481
  %487 = sub i64 0, %485
  %488 = sub i64 0, 8
  %489 = add i64 %487, %488
  %490 = sub i64 0, %489
  %491 = add i64 %485, 8
  %492 = add i64 0, -4939428219562683385
  %493 = sub i64 %492, %481
  %494 = sub i64 %493, -4939428219562683385
  %495 = sub i64 0, %481
  %496 = sub i64 %494, 3289154716868469977
  %497 = add i64 %496, 8
  %498 = add i64 %497, 3289154716868469977
  %499 = add i64 %494, 8
  %500 = sub i64 0, %481
  %501 = add i64 0, %500
  %502 = sub i64 0, %481
  %503 = add i64 %501, 8927514051260925224
  %504 = add i64 %503, 8
  %505 = sub i64 %504, 8927514051260925224
  %506 = add i64 %501, 8
  %507 = add i64 %481, -6675556598871985728
  %508 = sub i64 %507, 8
  %509 = sub i64 %508, -6675556598871985728
  %510 = sub i64 %481, 8
  %511 = mul i64 %509, 8
  %512 = add i64 0, 2049815877466202651
  %513 = sub i64 %512, %481
  %514 = sub i64 %513, 2049815877466202651
  %515 = sub i64 0, %481
  %516 = sub i64 0, %514
  %517 = sub i64 0, 8
  %518 = add i64 %516, %517
  %519 = sub i64 0, %518
  %520 = add i64 %514, 8
  %521 = sdiv exact i64 %481, 8
  %522 = add i64 0, -106429744952680013
  %523 = sub i64 %522, %521
  %524 = sub i64 %523, -106429744952680013
  %525 = sub i64 0, %521
  %526 = sub i64 0, %524
  %527 = sub i64 0, 1
  %528 = add i64 %526, %527
  %529 = sub i64 0, %528
  %530 = add i64 %524, 1
  %531 = add i64 %521, -7229104629770854338
  %532 = sub i64 %531, 1
  %533 = sub i64 %532, -7229104629770854338
  %534 = sub i64 %521, 1
  %535 = mul i64 %533, 1
  %536 = sub i64 0, -5050251527508156841
  %537 = sub i64 %536, %521
  %538 = add i64 %537, -5050251527508156841
  %539 = sub i64 0, %521
  %540 = sub i64 %538, -363496394220613741
  %541 = add i64 %540, 1
  %542 = add i64 %541, -363496394220613741
  %543 = add i64 %538, 1
  %544 = sub i64 0, 1
  %545 = add i64 %521, %544
  %546 = sub i64 %521, 1
  %547 = mul i64 %545, 1
  %548 = sub i64 0, -633359961776259954
  %549 = sub i64 %548, %521
  %550 = add i64 %549, -633359961776259954
  %551 = sub i64 0, %521
  %552 = add i64 %550, 1502847315437193873
  %553 = add i64 %552, 1
  %554 = sub i64 %553, 1502847315437193873
  %555 = add i64 %550, 1
  %556 = shl i64 %521, 1
  %557 = sub i64 %521, 5744730593669290593
  %558 = sub i64 %557, 1
  %559 = add i64 %558, 5744730593669290593
  %560 = sub i64 %521, 1
  %561 = mul i64 %559, 1
  %562 = add i64 %521, 8499733201774213394
  %563 = add i64 %562, 1
  %564 = sub i64 %563, 8499733201774213394
  %565 = add nsw i64 %521, 1
  store i64 %564, i64* %435, align 8
  %566 = load i64, i64* %435, align 8
  %567 = load i64, i64* %433, align 8
  %568 = sub i64 0, %567
  %569 = add i64 %566, %568
  %570 = sub i64 %566, %567
  %571 = mul i64 %569, %567
  %572 = sub i64 0, %567
  %573 = add i64 %566, %572
  %574 = sub i64 %566, %567
  %575 = mul i64 %573, %567
  %576 = shl i64 %566, %567
  %577 = sub i64 0, %566
  %578 = add i64 0, %577
  %579 = sub i64 0, %566
  %580 = sub i64 %578, 4360414586050694044
  %581 = add i64 %580, %567
  %582 = add i64 %581, 4360414586050694044
  %583 = add i64 %578, %567
  %584 = sub i64 %566, 2638267146346166085
  %585 = sub i64 %584, %567
  %586 = add i64 %585, 2638267146346166085
  %587 = sub i64 %566, %567
  %588 = mul i64 %586, %567
  %589 = shl i64 %566, %567
  %590 = add i64 0, 3400028084887895192
  %591 = sub i64 %590, %566
  %592 = sub i64 %591, 3400028084887895192
  %593 = sub i64 0, %566
  %594 = sub i64 0, %567
  %595 = sub i64 %592, %594
  %596 = add i64 %592, %567
  %597 = sub i64 %566, -7284856159431956643
  %598 = add i64 %597, %567
  %599 = add i64 %598, -7284856159431956643
  %600 = add i64 %566, %567
  store i64 %599, i64* %436, align 8
  %601 = bitcast %"class.std::deque"* %441 to %"class.std::_Deque_base"*
  %602 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %601, i32 0, i32 0
  %603 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %602, i32 0, i32 1
  %604 = load i64, i64* %603, align 8
  %605 = load i64, i64* %436, align 8
  %606 = shl i64 2, %605
  %607 = add i64 2, -2150034140102899810
  %608 = sub i64 %607, %605
  %609 = sub i64 %608, -2150034140102899810
  %610 = sub i64 2, %605
  %611 = mul i64 %609, %605
  %612 = sub i64 0, 2
  %613 = add i64 0, %612
  %614 = sub i64 0, 2
  %615 = sub i64 %613, 2938156087112079998
  %616 = add i64 %615, %605
  %617 = add i64 %616, 2938156087112079998
  %618 = add i64 %613, %605
  %619 = sub i64 0, %605
  %620 = add i64 2, %619
  %621 = sub i64 2, %605
  %622 = mul i64 %620, %605
  %623 = mul i64 2, %605
  %624 = icmp ugt i64 %604, %623
  store i32 469799329, i32* %30
  br label %685

; <label>:625:                                    ; preds = %33
  store i32 -29047265, i32* %30
  br label %685

; <label>:626:                                    ; preds = %33
  %627 = load volatile %struct.Edge**, %struct.Edge*** %8
  %628 = load volatile i64, i64* %5
  %629 = getelementptr inbounds %struct.Edge*, %struct.Edge** %627, i64 %628
  %630 = load volatile %struct.Edge***, %struct.Edge**** %13
  store %struct.Edge** %629, %struct.Edge*** %630, align 8
  %631 = load volatile %struct.Edge***, %struct.Edge**** %13
  %632 = load %struct.Edge**, %struct.Edge*** %631, align 8
  %633 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %634 = bitcast %"class.std::deque"* %633 to %"class.std::_Deque_base"*
  %635 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %634, i32 0, i32 0
  %636 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %635, i32 0, i32 2
  %637 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %636, i32 0, i32 3
  %638 = load %struct.Edge**, %struct.Edge*** %637, align 8
  %639 = icmp ult %struct.Edge** %632, %638
  store i32 1844197470, i32* %30
  br label %685

; <label>:640:                                    ; preds = %33
  %641 = load volatile %struct.Edge**, %struct.Edge*** %6
  %642 = load volatile i64, i64* %4
  %643 = getelementptr inbounds %struct.Edge*, %struct.Edge** %641, i64 %642
  %644 = load volatile %struct.Edge***, %struct.Edge**** %13
  store %struct.Edge** %643, %struct.Edge*** %644, align 8
  %645 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %646 = bitcast %"class.std::deque"* %645 to %"class.std::_Deque_base"*
  %647 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %646, i32 0, i32 0
  %648 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %647, i32 0, i32 2
  %649 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %648, i32 0, i32 3
  %650 = load %struct.Edge**, %struct.Edge*** %649, align 8
  %651 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %652 = bitcast %"class.std::deque"* %651 to %"class.std::_Deque_base"*
  %653 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %652, i32 0, i32 0
  %654 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %653, i32 0, i32 3
  %655 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %654, i32 0, i32 3
  %656 = load %struct.Edge**, %struct.Edge*** %655, align 8
  %657 = getelementptr inbounds %struct.Edge*, %struct.Edge** %656, i64 1
  %658 = load volatile %struct.Edge***, %struct.Edge**** %13
  %659 = load %struct.Edge**, %struct.Edge*** %658, align 8
  %660 = call %struct.Edge** @_ZSt4copyIPP4EdgeS2_ET0_T_S4_S3_(%struct.Edge** %650, %struct.Edge** %657, %struct.Edge** %659)
  %661 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %662 = bitcast %"class.std::deque"* %661 to %"class.std::_Deque_base"*
  %663 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %664 = bitcast %"class.std::deque"* %663 to %"class.std::_Deque_base"*
  %665 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %664, i32 0, i32 0
  %666 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %665, i32 0, i32 0
  %667 = load %struct.Edge**, %struct.Edge*** %666, align 8
  %668 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %669 = bitcast %"class.std::deque"* %668 to %"class.std::_Deque_base"*
  %670 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %669, i32 0, i32 0
  %671 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %670, i32 0, i32 1
  %672 = load i64, i64* %671, align 8
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE17_M_deallocate_mapEPPS0_m(%"class.std::_Deque_base"* %662, %struct.Edge** %667, i64 %672) #10
  %673 = load volatile %struct.Edge***, %struct.Edge**** %11
  %674 = load %struct.Edge**, %struct.Edge*** %673, align 8
  %675 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %676 = bitcast %"class.std::deque"* %675 to %"class.std::_Deque_base"*
  %677 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %676, i32 0, i32 0
  %678 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %677, i32 0, i32 0
  store %struct.Edge** %674, %struct.Edge*** %678, align 8
  %679 = load volatile i64*, i64** %12
  %680 = load i64, i64* %679, align 8
  %681 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %682 = bitcast %"class.std::deque"* %681 to %"class.std::_Deque_base"*
  %683 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %682, i32 0, i32 0
  %684 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %683, i32 0, i32 1
  store i64 %680, i64* %684, align 8
  store i32 1220228839, i32* %30
  br label %685

; <label>:685:                                    ; preds = %640, %626, %625, %431, %413, %353, %337, %336, %333, %288, %287, %267, %250, %247, %218, %189, %188, %160, %144, %141, %118, %115, %44, %36, %35
  br label %33
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge** @_ZSt4copyIPP4EdgeS2_ET0_T_S4_S3_(%struct.Edge**, %struct.Edge**, %struct.Edge**) #1 comdat {
  %4 = alloca %struct.Edge**, align 8
  %5 = alloca %struct.Edge**, align 8
  %6 = alloca %struct.Edge**, align 8
  store %struct.Edge** %0, %struct.Edge*** %4, align 8
  store %struct.Edge** %1, %struct.Edge*** %5, align 8
  store %struct.Edge** %2, %struct.Edge*** %6, align 8
  %7 = load %struct.Edge**, %struct.Edge*** %4, align 8
  %8 = call %struct.Edge** @_ZSt12__miter_baseIPP4EdgeENSt11_Miter_baseIT_E13iterator_typeES4_(%struct.Edge** %7)
  %9 = load %struct.Edge**, %struct.Edge*** %5, align 8
  %10 = call %struct.Edge** @_ZSt12__miter_baseIPP4EdgeENSt11_Miter_baseIT_E13iterator_typeES4_(%struct.Edge** %9)
  %11 = load %struct.Edge**, %struct.Edge*** %6, align 8
  %12 = call %struct.Edge** @_ZSt14__copy_move_a2ILb0EPP4EdgeS2_ET1_T0_S4_S3_(%struct.Edge** %8, %struct.Edge** %10, %struct.Edge** %11)
  ret %struct.Edge** %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge** @_ZSt13copy_backwardIPP4EdgeS2_ET0_T_S4_S3_(%struct.Edge**, %struct.Edge**, %struct.Edge**) #1 comdat {
  %4 = alloca %struct.Edge**, align 8
  %5 = alloca %struct.Edge**, align 8
  %6 = alloca %struct.Edge**, align 8
  store %struct.Edge** %0, %struct.Edge*** %4, align 8
  store %struct.Edge** %1, %struct.Edge*** %5, align 8
  store %struct.Edge** %2, %struct.Edge*** %6, align 8
  %7 = load %struct.Edge**, %struct.Edge*** %4, align 8
  %8 = call %struct.Edge** @_ZSt12__miter_baseIPP4EdgeENSt11_Miter_baseIT_E13iterator_typeES4_(%struct.Edge** %7)
  %9 = load %struct.Edge**, %struct.Edge*** %5, align 8
  %10 = call %struct.Edge** @_ZSt12__miter_baseIPP4EdgeENSt11_Miter_baseIT_E13iterator_typeES4_(%struct.Edge** %9)
  %11 = load %struct.Edge**, %struct.Edge*** %6, align 8
  %12 = call %struct.Edge** @_ZSt23__copy_move_backward_a2ILb0EPP4EdgeS2_ET1_T0_S4_S3_(%struct.Edge** %8, %struct.Edge** %10, %struct.Edge** %11)
  ret %struct.Edge** %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge** @_ZSt14__copy_move_a2ILb0EPP4EdgeS2_ET1_T0_S4_S3_(%struct.Edge**, %struct.Edge**, %struct.Edge**) #1 comdat {
  %4 = alloca %struct.Edge**, align 8
  %5 = alloca %struct.Edge**, align 8
  %6 = alloca %struct.Edge**, align 8
  store %struct.Edge** %0, %struct.Edge*** %4, align 8
  store %struct.Edge** %1, %struct.Edge*** %5, align 8
  store %struct.Edge** %2, %struct.Edge*** %6, align 8
  %7 = load %struct.Edge**, %struct.Edge*** %4, align 8
  %8 = call %struct.Edge** @_ZSt12__niter_baseIPP4EdgeENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Edge** %7)
  %9 = load %struct.Edge**, %struct.Edge*** %5, align 8
  %10 = call %struct.Edge** @_ZSt12__niter_baseIPP4EdgeENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Edge** %9)
  %11 = load %struct.Edge**, %struct.Edge*** %6, align 8
  %12 = call %struct.Edge** @_ZSt12__niter_baseIPP4EdgeENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Edge** %11)
  %13 = call %struct.Edge** @_ZSt13__copy_move_aILb0EPP4EdgeS2_ET1_T0_S4_S3_(%struct.Edge** %8, %struct.Edge** %10, %struct.Edge** %12)
  ret %struct.Edge** %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.Edge** @_ZSt12__miter_baseIPP4EdgeENSt11_Miter_baseIT_E13iterator_typeES4_(%struct.Edge**) #0 comdat {
  %2 = alloca %struct.Edge**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.634
  %6 = load i32, i32* @y.635
  %7 = sub i32 %5, 1617092920
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1617092920
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1368252874, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %76
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1368252874, label %19
    i32 1651584, label %39
    i32 -1141704545, label %70
    i32 579958236, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %76

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1651584, i32 579958236
  store i32 %38, i32* %15
  br label %76

; <label>:39:                                     ; preds = %16
  %40 = alloca %struct.Edge**, align 8
  store %struct.Edge** %0, %struct.Edge*** %40, align 8
  %41 = load %struct.Edge**, %struct.Edge*** %40, align 8
  %42 = call %struct.Edge** @_ZNSt10_Iter_baseIPP4EdgeLb0EE7_S_baseES2_(%struct.Edge** %41)
  store %struct.Edge** %42, %struct.Edge*** %2
  %43 = load i32, i32* @x.634
  %44 = load i32, i32* @y.635
  %45 = sub i32 %43, -898993552
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -898993552
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -1141704545, i32 579958236
  store i32 %69, i32* %15
  br label %76

; <label>:70:                                     ; preds = %16
  %71 = load volatile %struct.Edge**, %struct.Edge*** %2
  ret %struct.Edge** %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %struct.Edge**, align 8
  store %struct.Edge** %0, %struct.Edge*** %73, align 8
  %74 = load %struct.Edge**, %struct.Edge*** %73, align 8
  %75 = call %struct.Edge** @_ZNSt10_Iter_baseIPP4EdgeLb0EE7_S_baseES2_(%struct.Edge** %74)
  store i32 1651584, i32* %15
  br label %76

; <label>:76:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge** @_ZSt13__copy_move_aILb0EPP4EdgeS2_ET1_T0_S4_S3_(%struct.Edge**, %struct.Edge**, %struct.Edge**) #1 comdat {
  %4 = alloca %struct.Edge**, align 8
  %5 = alloca %struct.Edge**, align 8
  %6 = alloca %struct.Edge**, align 8
  %7 = alloca i8, align 1
  store %struct.Edge** %0, %struct.Edge*** %4, align 8
  store %struct.Edge** %1, %struct.Edge*** %5, align 8
  store %struct.Edge** %2, %struct.Edge*** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %struct.Edge**, %struct.Edge*** %4, align 8
  %9 = load %struct.Edge**, %struct.Edge*** %5, align 8
  %10 = load %struct.Edge**, %struct.Edge*** %6, align 8
  %11 = call %struct.Edge** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP4EdgeEEPT_PKS5_S8_S6_(%struct.Edge** %8, %struct.Edge** %9, %struct.Edge** %10)
  ret %struct.Edge** %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge** @_ZSt12__niter_baseIPP4EdgeENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Edge**) #1 comdat {
  %2 = alloca %struct.Edge**, align 8
  store %struct.Edge** %0, %struct.Edge*** %2, align 8
  %3 = load %struct.Edge**, %struct.Edge*** %2, align 8
  %4 = call %struct.Edge** @_ZNSt10_Iter_baseIPP4EdgeLb0EE7_S_baseES2_(%struct.Edge** %3)
  ret %struct.Edge** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.Edge** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP4EdgeEEPT_PKS5_S8_S6_(%struct.Edge**, %struct.Edge**, %struct.Edge**) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca %struct.Edge**, align 8
  %6 = alloca %struct.Edge**, align 8
  %7 = alloca %struct.Edge**, align 8
  %8 = alloca i64, align 8
  store %struct.Edge** %0, %struct.Edge*** %5, align 8
  store %struct.Edge** %1, %struct.Edge*** %6, align 8
  store %struct.Edge** %2, %struct.Edge*** %7, align 8
  %9 = load %struct.Edge**, %struct.Edge*** %6, align 8
  %10 = load %struct.Edge**, %struct.Edge*** %5, align 8
  %11 = ptrtoint %struct.Edge** %9 to i64
  %12 = ptrtoint %struct.Edge** %10 to i64
  %13 = add i64 %11, 6232755324863437789
  %14 = sub i64 %13, %12
  %15 = sub i64 %14, 6232755324863437789
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 8
  store i64 %17, i64* %8, align 8
  %18 = load i64, i64* %8, align 8
  store i64 %18, i64* %4
  %19 = alloca i32
  store i32 319053920, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %38
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 319053920, label %23
    i32 1120198253, label %27
    i32 144300640, label %34
  ]

; <label>:22:                                     ; preds = %20
  br label %38

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %4
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 1120198253, i32 144300640
  store i32 %26, i32* %19
  br label %38

; <label>:27:                                     ; preds = %20
  %28 = load %struct.Edge**, %struct.Edge*** %7, align 8
  %29 = bitcast %struct.Edge** %28 to i8*
  %30 = load %struct.Edge**, %struct.Edge*** %5, align 8
  %31 = bitcast %struct.Edge** %30 to i8*
  %32 = load i64, i64* %8, align 8
  %33 = mul i64 8, %32
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %29, i8* %31, i64 %33, i32 8, i1 false)
  store i32 144300640, i32* %19
  br label %38

; <label>:34:                                     ; preds = %20
  %35 = load %struct.Edge**, %struct.Edge*** %7, align 8
  %36 = load i64, i64* %8, align 8
  %37 = getelementptr inbounds %struct.Edge*, %struct.Edge** %35, i64 %36
  ret %struct.Edge** %37

; <label>:38:                                     ; preds = %27, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.Edge** @_ZNSt10_Iter_baseIPP4EdgeLb0EE7_S_baseES2_(%struct.Edge**) #0 comdat align 2 {
  %2 = alloca %struct.Edge**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.642
  %6 = load i32, i32* @y.643
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1221014707, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1221014707, label %18
    i32 -40480377, label %26
    i32 2098069384, label %56
    i32 1731223665, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -40480377, i32 1731223665
  store i32 %25, i32* %14
  br label %61

; <label>:26:                                     ; preds = %15
  %27 = alloca %struct.Edge**, align 8
  store %struct.Edge** %0, %struct.Edge*** %27, align 8
  %28 = load %struct.Edge**, %struct.Edge*** %27, align 8
  store %struct.Edge** %28, %struct.Edge*** %2
  %29 = load i32, i32* @x.642
  %30 = load i32, i32* @y.643
  %31 = add i32 %29, -464108703
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, -464108703
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 2098069384, i32 1731223665
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  %57 = load volatile %struct.Edge**, %struct.Edge*** %2
  ret %struct.Edge** %57

; <label>:58:                                     ; preds = %15
  %59 = alloca %struct.Edge**, align 8
  store %struct.Edge** %0, %struct.Edge*** %59, align 8
  %60 = load %struct.Edge**, %struct.Edge*** %59, align 8
  store i32 -40480377, i32* %14
  br label %61

; <label>:61:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge** @_ZSt23__copy_move_backward_a2ILb0EPP4EdgeS2_ET1_T0_S4_S3_(%struct.Edge**, %struct.Edge**, %struct.Edge**) #1 comdat {
  %4 = alloca %struct.Edge**, align 8
  %5 = alloca %struct.Edge**, align 8
  %6 = alloca %struct.Edge**, align 8
  store %struct.Edge** %0, %struct.Edge*** %4, align 8
  store %struct.Edge** %1, %struct.Edge*** %5, align 8
  store %struct.Edge** %2, %struct.Edge*** %6, align 8
  %7 = load %struct.Edge**, %struct.Edge*** %4, align 8
  %8 = call %struct.Edge** @_ZSt12__niter_baseIPP4EdgeENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Edge** %7)
  %9 = load %struct.Edge**, %struct.Edge*** %5, align 8
  %10 = call %struct.Edge** @_ZSt12__niter_baseIPP4EdgeENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Edge** %9)
  %11 = load %struct.Edge**, %struct.Edge*** %6, align 8
  %12 = call %struct.Edge** @_ZSt12__niter_baseIPP4EdgeENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Edge** %11)
  %13 = call %struct.Edge** @_ZSt22__copy_move_backward_aILb0EPP4EdgeS2_ET1_T0_S4_S3_(%struct.Edge** %8, %struct.Edge** %10, %struct.Edge** %12)
  ret %struct.Edge** %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge** @_ZSt22__copy_move_backward_aILb0EPP4EdgeS2_ET1_T0_S4_S3_(%struct.Edge**, %struct.Edge**, %struct.Edge**) #1 comdat {
  %4 = alloca %struct.Edge**, align 8
  %5 = alloca %struct.Edge**, align 8
  %6 = alloca %struct.Edge**, align 8
  %7 = alloca i8, align 1
  store %struct.Edge** %0, %struct.Edge*** %4, align 8
  store %struct.Edge** %1, %struct.Edge*** %5, align 8
  store %struct.Edge** %2, %struct.Edge*** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %struct.Edge**, %struct.Edge*** %4, align 8
  %9 = load %struct.Edge**, %struct.Edge*** %5, align 8
  %10 = load %struct.Edge**, %struct.Edge*** %6, align 8
  %11 = call %struct.Edge** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIP4EdgeEEPT_PKS5_S8_S6_(%struct.Edge** %8, %struct.Edge** %9, %struct.Edge** %10)
  ret %struct.Edge** %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.Edge** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIP4EdgeEEPT_PKS5_S8_S6_(%struct.Edge**, %struct.Edge**, %struct.Edge**) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca %struct.Edge***
  %7 = alloca %struct.Edge***
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.648
  %11 = load i32, i32* @y.649
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 -1048827937, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %169
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1048827937, label %23
    i32 882191654, label %31
    i32 771949295, label %79
    i32 1250726769, label %82
    i32 1761673466, label %99
    i32 103082535, label %108
  ]

; <label>:22:                                     ; preds = %20
  br label %169

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 882191654, i32 103082535
  store i32 %30, i32* %19
  br label %169

; <label>:31:                                     ; preds = %20
  %32 = alloca %struct.Edge**, align 8
  store %struct.Edge*** %32, %struct.Edge**** %7
  %33 = alloca %struct.Edge**, align 8
  %34 = alloca %struct.Edge**, align 8
  store %struct.Edge*** %34, %struct.Edge**** %6
  %35 = alloca i64, align 8
  store i64* %35, i64** %5
  %36 = load volatile %struct.Edge***, %struct.Edge**** %7
  store %struct.Edge** %0, %struct.Edge*** %36, align 8
  store %struct.Edge** %1, %struct.Edge*** %33, align 8
  %37 = load volatile %struct.Edge***, %struct.Edge**** %6
  store %struct.Edge** %2, %struct.Edge*** %37, align 8
  %38 = load %struct.Edge**, %struct.Edge*** %33, align 8
  %39 = load volatile %struct.Edge***, %struct.Edge**** %7
  %40 = load %struct.Edge**, %struct.Edge*** %39, align 8
  %41 = ptrtoint %struct.Edge** %38 to i64
  %42 = ptrtoint %struct.Edge** %40 to i64
  %43 = sub i64 %41, -5855920820559643922
  %44 = sub i64 %43, %42
  %45 = add i64 %44, -5855920820559643922
  %46 = sub i64 %41, %42
  %47 = sdiv exact i64 %45, 8
  %48 = load volatile i64*, i64** %5
  store i64 %47, i64* %48, align 8
  %49 = load volatile i64*, i64** %5
  %50 = load i64, i64* %49, align 8
  %51 = icmp ne i64 %50, 0
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.648
  %53 = load i32, i32* @y.649
  %54 = add i32 %52, -43909636
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, -43909636
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 771949295, i32 103082535
  store i32 %78, i32* %19
  br label %169

; <label>:79:                                     ; preds = %20
  %80 = load volatile i1, i1* %4
  %81 = select i1 %80, i32 1250726769, i32 1761673466
  store i32 %81, i32* %19
  br label %169

; <label>:82:                                     ; preds = %20
  %83 = load volatile %struct.Edge***, %struct.Edge**** %6
  %84 = load %struct.Edge**, %struct.Edge*** %83, align 8
  %85 = load volatile i64*, i64** %5
  %86 = load i64, i64* %85, align 8
  %87 = add i64 0, -4436473100596535227
  %88 = sub i64 %87, %86
  %89 = sub i64 %88, -4436473100596535227
  %90 = sub i64 0, %86
  %91 = getelementptr inbounds %struct.Edge*, %struct.Edge** %84, i64 %89
  %92 = bitcast %struct.Edge** %91 to i8*
  %93 = load volatile %struct.Edge***, %struct.Edge**** %7
  %94 = load %struct.Edge**, %struct.Edge*** %93, align 8
  %95 = bitcast %struct.Edge** %94 to i8*
  %96 = load volatile i64*, i64** %5
  %97 = load i64, i64* %96, align 8
  %98 = mul i64 8, %97
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %92, i8* %95, i64 %98, i32 8, i1 false)
  store i32 1761673466, i32* %19
  br label %169

; <label>:99:                                     ; preds = %20
  %100 = load volatile %struct.Edge***, %struct.Edge**** %6
  %101 = load %struct.Edge**, %struct.Edge*** %100, align 8
  %102 = load volatile i64*, i64** %5
  %103 = load i64, i64* %102, align 8
  %104 = sub i64 0, %103
  %105 = add i64 0, %104
  %106 = sub i64 0, %103
  %107 = getelementptr inbounds %struct.Edge*, %struct.Edge** %101, i64 %105
  ret %struct.Edge** %107

; <label>:108:                                    ; preds = %20
  %109 = alloca %struct.Edge**, align 8
  %110 = alloca %struct.Edge**, align 8
  %111 = alloca %struct.Edge**, align 8
  %112 = alloca i64, align 8
  store %struct.Edge** %0, %struct.Edge*** %109, align 8
  store %struct.Edge** %1, %struct.Edge*** %110, align 8
  store %struct.Edge** %2, %struct.Edge*** %111, align 8
  %113 = load %struct.Edge**, %struct.Edge*** %110, align 8
  %114 = load %struct.Edge**, %struct.Edge*** %109, align 8
  %115 = ptrtoint %struct.Edge** %113 to i64
  %116 = ptrtoint %struct.Edge** %114 to i64
  %117 = add i64 0, 8506219209945167212
  %118 = sub i64 %117, %115
  %119 = sub i64 %118, 8506219209945167212
  %120 = sub i64 0, %115
  %121 = sub i64 0, %119
  %122 = sub i64 0, %116
  %123 = add i64 %121, %122
  %124 = sub i64 0, %123
  %125 = add i64 %119, %116
  %126 = add i64 %115, -568947341813211495
  %127 = sub i64 %126, %116
  %128 = sub i64 %127, -568947341813211495
  %129 = sub i64 %115, %116
  %130 = mul i64 %128, %116
  %131 = shl i64 %115, %116
  %132 = sub i64 0, 1005268139132115533
  %133 = sub i64 %132, %115
  %134 = add i64 %133, 1005268139132115533
  %135 = sub i64 0, %115
  %136 = sub i64 %134, -3561267017826960445
  %137 = add i64 %136, %116
  %138 = add i64 %137, -3561267017826960445
  %139 = add i64 %134, %116
  %140 = shl i64 %115, %116
  %141 = add i64 %115, 916649048629516796
  %142 = sub i64 %141, %116
  %143 = sub i64 %142, 916649048629516796
  %144 = sub i64 %115, %116
  %145 = sub i64 0, -7851801960189080533
  %146 = sub i64 %145, %143
  %147 = add i64 %146, -7851801960189080533
  %148 = sub i64 0, %143
  %149 = add i64 %147, -1339358421333616922
  %150 = add i64 %149, 8
  %151 = sub i64 %150, -1339358421333616922
  %152 = add i64 %147, 8
  %153 = sub i64 0, 8
  %154 = add i64 %143, %153
  %155 = sub i64 %143, 8
  %156 = mul i64 %154, 8
  %157 = add i64 0, -964545544281270515
  %158 = sub i64 %157, %143
  %159 = sub i64 %158, -964545544281270515
  %160 = sub i64 0, %143
  %161 = sub i64 0, %159
  %162 = sub i64 0, 8
  %163 = add i64 %161, %162
  %164 = sub i64 0, %163
  %165 = add i64 %159, 8
  %166 = sdiv exact i64 %143, 8
  store i64 %166, i64* %112, align 8
  %167 = load i64, i64* %112, align 8
  %168 = icmp ne i64 %167, 0
  store i32 882191654, i32* %19
  br label %169

; <label>:169:                                    ; preds = %108, %82, %79, %31, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EmiEl(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.650
  %7 = load i32, i32* @y.651
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -2048241264, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %57
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2048241264, label %19
    i32 1150682286, label %27
    i32 307966940, label %49
    i32 -1868777628, label %50
  ]

; <label>:18:                                     ; preds = %16
  br label %57

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1150682286, i32 -1868777628
  store i32 %26, i32* %15
  br label %57

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Deque_iterator"*, align 8
  %29 = alloca i64, align 8
  %30 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %28, align 8
  store i64 %2, i64* %29, align 8
  %31 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %28, align 8
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %30, %"struct.std::_Deque_iterator"* dereferenceable(32) %31) #10
  %32 = load i64, i64* %29, align 8
  %33 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EmIEl(%"struct.std::_Deque_iterator"* %30, i64 %32) #10
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %33) #10
  %34 = load i32, i32* @x.650
  %35 = load i32, i32* @y.651
  %36 = sub i32 %34, 1628561071
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 1628561071
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 307966940, i32 -1868777628
  store i32 %48, i32* %15
  br label %57

; <label>:49:                                     ; preds = %16
  ret void

; <label>:50:                                     ; preds = %16
  %51 = alloca %"struct.std::_Deque_iterator"*, align 8
  %52 = alloca i64, align 8
  %53 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %51, align 8
  store i64 %2, i64* %52, align 8
  %54 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %51, align 8
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %53, %"struct.std::_Deque_iterator"* dereferenceable(32) %54) #10
  %55 = load i64, i64* %52, align 8
  %56 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EmIEl(%"struct.std::_Deque_iterator"* %53, i64 %55) #10
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %56) #10
  store i32 1150682286, i32* %15
  br label %57

; <label>:57:                                     ; preds = %50, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessI4EdgeEEENS0_14_Iter_comp_valIT_EES6_() #1 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %2 = alloca %"struct.std::less", align 1
  %3 = alloca %"struct.std::less", align 1
  call void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessI4EdgeEEC2ES4_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %1)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EmIEl(%"struct.std::_Deque_iterator"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = sub i64 0, %6
  %8 = add i64 0, %7
  %9 = sub nsw i64 0, %6
  %10 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EpLEl(%"struct.std::_Deque_iterator"* %5, i64 %8) #10
  ret %"struct.std::_Deque_iterator"* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt5dequeI4EdgeSaIS0_EE5emptyEv(%"class.std::deque"*) #0 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %5 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %5, i32 0, i32 3
  %7 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %8 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %8, i32 0, i32 2
  %10 = call zeroext i1 @_ZSteqI4EdgeRS0_PS0_EbRKSt15_Deque_iteratorIT_T0_T1_ES9_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6, %"struct.std::_Deque_iterator"* dereferenceable(32) %9) #10
  ret i1 %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZSteqI4EdgeRS0_PS0_EbRKSt15_Deque_iteratorIT_T0_T1_ES9_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #0 comdat {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 0
  %7 = load %struct.Edge*, %struct.Edge** %6, align 8
  %8 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %8, i32 0, i32 0
  %10 = load %struct.Edge*, %struct.Edge** %9, align 8
  %11 = icmp eq %struct.Edge* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %struct.Edge* @_ZNKSt5dequeI4EdgeSaIS0_EE5frontEv(%"class.std::deque"*) #0 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  %3 = alloca %"struct.std::_Deque_iterator.30", align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  call void @_ZNKSt5dequeI4EdgeSaIS0_EE5beginEv(%"struct.std::_Deque_iterator.30"* sret %3, %"class.std::deque"* %4) #10
  %5 = call dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRKS0_PS1_EdeEv(%"struct.std::_Deque_iterator.30"* %3) #10
  ret %struct.Edge* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt5dequeI4EdgeSaIS0_EE5beginEv(%"struct.std::_Deque_iterator.30"* noalias sret, %"class.std::deque"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.662
  %6 = load i32, i32* @y.663
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1729559379, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1729559379, label %18
    i32 -1801310899, label %38
    i32 353699575, label %58
    i32 596566673, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1801310899, i32 596566673
  store i32 %37, i32* %14
  br label %65

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %39, align 8
  %40 = load %"class.std::deque"*, %"class.std::deque"** %39, align 8
  %41 = bitcast %"class.std::deque"* %40 to %"class.std::_Deque_base"*
  %42 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %42, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorI4EdgeRKS0_PS1_EC2ERKS_IS0_RS0_PS0_E(%"struct.std::_Deque_iterator.30"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %43) #10
  %44 = load i32, i32* @x.662
  %45 = load i32, i32* @y.663
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 353699575, i32 596566673
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  ret void

; <label>:59:                                     ; preds = %15
  %60 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %60, align 8
  %61 = load %"class.std::deque"*, %"class.std::deque"** %60, align 8
  %62 = bitcast %"class.std::deque"* %61 to %"class.std::_Deque_base"*
  %63 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %62, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %63, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorI4EdgeRKS0_PS1_EC2ERKS_IS0_RS0_PS0_E(%"struct.std::_Deque_iterator.30"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %64) #10
  store i32 -1801310899, i32* %14
  br label %65

; <label>:65:                                     ; preds = %59, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRKS0_PS1_EdeEv(%"struct.std::_Deque_iterator.30"*) #0 comdat align 2 {
  %2 = alloca %struct.Edge*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.664
  %6 = load i32, i32* @y.665
  %7 = add i32 %5, -1522224128
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1522224128
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1228801916, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1228801916, label %19
    i32 -59688178, label %27
    i32 -760133554, label %47
    i32 -1159274256, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -59688178, i32 -1159274256
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Deque_iterator.30"*, align 8
  store %"struct.std::_Deque_iterator.30"* %0, %"struct.std::_Deque_iterator.30"** %28, align 8
  %29 = load %"struct.std::_Deque_iterator.30"*, %"struct.std::_Deque_iterator.30"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Deque_iterator.30", %"struct.std::_Deque_iterator.30"* %29, i32 0, i32 0
  %31 = load %struct.Edge*, %struct.Edge** %30, align 8
  store %struct.Edge* %31, %struct.Edge** %2
  %32 = load i32, i32* @x.664
  %33 = load i32, i32* @y.665
  %34 = sub i32 %32, -1766914383
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -1766914383
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -760133554, i32 -1159274256
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile %struct.Edge*, %struct.Edge** %2
  ret %struct.Edge* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"struct.std::_Deque_iterator.30"*, align 8
  store %"struct.std::_Deque_iterator.30"* %0, %"struct.std::_Deque_iterator.30"** %50, align 8
  %51 = load %"struct.std::_Deque_iterator.30"*, %"struct.std::_Deque_iterator.30"** %50, align 8
  %52 = getelementptr inbounds %"struct.std::_Deque_iterator.30", %"struct.std::_Deque_iterator.30"* %51, i32 0, i32 0
  %53 = load %struct.Edge*, %struct.Edge** %52, align 8
  store i32 -59688178, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorI4EdgeRKS0_PS1_EC2ERKS_IS0_RS0_PS0_E(%"struct.std::_Deque_iterator.30"*, %"struct.std::_Deque_iterator"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.666
  %6 = load i32, i32* @y.667
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 200773267, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %94
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 200773267, label %18
    i32 -53585241, label %38
    i32 1265370614, label %73
    i32 -585835526, label %74
  ]

; <label>:17:                                     ; preds = %15
  br label %94

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -53585241, i32 -585835526
  store i32 %37, i32* %14
  br label %94

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Deque_iterator.30"*, align 8
  %40 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator.30"* %0, %"struct.std::_Deque_iterator.30"** %39, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %40, align 8
  %41 = load %"struct.std::_Deque_iterator.30"*, %"struct.std::_Deque_iterator.30"** %39, align 8
  %42 = getelementptr inbounds %"struct.std::_Deque_iterator.30", %"struct.std::_Deque_iterator.30"* %41, i32 0, i32 0
  %43 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %40, align 8
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %43, i32 0, i32 0
  %45 = load %struct.Edge*, %struct.Edge** %44, align 8
  store %struct.Edge* %45, %struct.Edge** %42, align 8
  %46 = getelementptr inbounds %"struct.std::_Deque_iterator.30", %"struct.std::_Deque_iterator.30"* %41, i32 0, i32 1
  %47 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %40, align 8
  %48 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %47, i32 0, i32 1
  %49 = load %struct.Edge*, %struct.Edge** %48, align 8
  store %struct.Edge* %49, %struct.Edge** %46, align 8
  %50 = getelementptr inbounds %"struct.std::_Deque_iterator.30", %"struct.std::_Deque_iterator.30"* %41, i32 0, i32 2
  %51 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %40, align 8
  %52 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %51, i32 0, i32 2
  %53 = load %struct.Edge*, %struct.Edge** %52, align 8
  store %struct.Edge* %53, %struct.Edge** %50, align 8
  %54 = getelementptr inbounds %"struct.std::_Deque_iterator.30", %"struct.std::_Deque_iterator.30"* %41, i32 0, i32 3
  %55 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %40, align 8
  %56 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %55, i32 0, i32 3
  %57 = load %struct.Edge**, %struct.Edge*** %56, align 8
  store %struct.Edge** %57, %struct.Edge*** %54, align 8
  %58 = load i32, i32* @x.666
  %59 = load i32, i32* @y.667
  %60 = sub i32 %58, -1920206934
  %61 = sub i32 %60, 1
  %62 = add i32 %61, -1920206934
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  %72 = select i1 %70, i32 1265370614, i32 -585835526
  store i32 %72, i32* %14
  br label %94

; <label>:73:                                     ; preds = %15
  ret void

; <label>:74:                                     ; preds = %15
  %75 = alloca %"struct.std::_Deque_iterator.30"*, align 8
  %76 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator.30"* %0, %"struct.std::_Deque_iterator.30"** %75, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %76, align 8
  %77 = load %"struct.std::_Deque_iterator.30"*, %"struct.std::_Deque_iterator.30"** %75, align 8
  %78 = getelementptr inbounds %"struct.std::_Deque_iterator.30", %"struct.std::_Deque_iterator.30"* %77, i32 0, i32 0
  %79 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %76, align 8
  %80 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %79, i32 0, i32 0
  %81 = load %struct.Edge*, %struct.Edge** %80, align 8
  store %struct.Edge* %81, %struct.Edge** %78, align 8
  %82 = getelementptr inbounds %"struct.std::_Deque_iterator.30", %"struct.std::_Deque_iterator.30"* %77, i32 0, i32 1
  %83 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %76, align 8
  %84 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %83, i32 0, i32 1
  %85 = load %struct.Edge*, %struct.Edge** %84, align 8
  store %struct.Edge* %85, %struct.Edge** %82, align 8
  %86 = getelementptr inbounds %"struct.std::_Deque_iterator.30", %"struct.std::_Deque_iterator.30"* %77, i32 0, i32 2
  %87 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %76, align 8
  %88 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %87, i32 0, i32 2
  %89 = load %struct.Edge*, %struct.Edge** %88, align 8
  store %struct.Edge* %89, %struct.Edge** %86, align 8
  %90 = getelementptr inbounds %"struct.std::_Deque_iterator.30", %"struct.std::_Deque_iterator.30"* %77, i32 0, i32 3
  %91 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %76, align 8
  %92 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %91, i32 0, i32 3
  %93 = load %struct.Edge**, %struct.Edge*** %92, align 8
  store %struct.Edge** %93, %struct.Edge*** %90, align 8
  store i32 -53585241, i32* %14
  br label %94

; <label>:94:                                     ; preds = %74, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8pop_heapISt15_Deque_iteratorI4EdgeRS1_PS1_ESt4lessIS1_EEvT_S7_T0_(%"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*) #1 comdat {
  %3 = alloca i1
  %4 = alloca %"struct.std::_Deque_iterator"*
  %5 = alloca %"struct.std::_Deque_iterator"*
  %6 = alloca %"struct.std::_Deque_iterator"*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.668
  %10 = load i32, i32* @y.669
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 -34219401, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %152
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -34219401, label %22
    i32 -547969752, label %42
    i32 -820027935, label %66
    i32 -1945701922, label %69
    i32 1910336439, label %97
    i32 -1714371519, label %132
    i32 -1752112978, label %133
    i32 -1552836104, label %134
    i32 -483516026, label %144
  ]

; <label>:21:                                     ; preds = %19
  br label %152

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %8
  %24 = load volatile i1, i1* %7
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -547969752, i32 -1552836104
  store i32 %41, i32* %18
  br label %152

; <label>:42:                                     ; preds = %19
  %43 = alloca %"struct.std::less", align 1
  %44 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %44, %"struct.std::_Deque_iterator"** %6
  %45 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %45, %"struct.std::_Deque_iterator"** %5
  %46 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %46, %"struct.std::_Deque_iterator"** %4
  %47 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %48 = alloca %"struct.std::less", align 1
  %49 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %50 = call i64 @_ZStmiI4EdgeRS0_PS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_(%"struct.std::_Deque_iterator"* dereferenceable(32) %1, %"struct.std::_Deque_iterator"* dereferenceable(32) %0) #10
  %51 = icmp sgt i64 %50, 1
  store i1 %51, i1* %3
  %52 = load i32, i32* @x.668
  %53 = load i32, i32* @y.669
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 -820027935, i32 -1552836104
  store i32 %65, i32* %18
  br label %152

; <label>:66:                                     ; preds = %19
  %67 = load volatile i1, i1* %3
  %68 = select i1 %67, i32 -1945701922, i32 -1752112978
  store i32 %68, i32* %18
  br label %152

; <label>:69:                                     ; preds = %19
  %70 = load i32, i32* @x.668
  %71 = load i32, i32* @y.669
  %72 = add i32 %70, 1124303677
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, 1124303677
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 true, true
  %83 = and i1 %80, true
  %84 = and i1 %78, %82
  %85 = and i1 %81, true
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 true, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  %96 = select i1 %94, i32 1910336439, i32 -483516026
  store i32 %96, i32* %18
  br label %152

; <label>:97:                                     ; preds = %19
  %98 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EmmEv(%"struct.std::_Deque_iterator"* %1) #10
  %99 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %6
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %99, %"struct.std::_Deque_iterator"* dereferenceable(32) %0) #10
  %100 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %5
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %100, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #10
  %101 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %101, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #10
  call void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt4lessI4EdgeEEENS0_15_Iter_comp_iterIT_EES6_()
  %102 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %6
  %103 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %5
  %104 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  call void @_ZSt10__pop_heapISt15_Deque_iteratorI4EdgeRS1_PS1_EN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessIS1_EEEEvT_SB_SB_T0_(%"struct.std::_Deque_iterator"* %102, %"struct.std::_Deque_iterator"* %103, %"struct.std::_Deque_iterator"* %104)
  %105 = load i32, i32* @x.668
  %106 = load i32, i32* @y.669
  %107 = sub i32 %105, -39774600
  %108 = sub i32 %107, 1
  %109 = add i32 %108, -39774600
  %110 = sub i32 %105, 1
  %111 = mul i32 %105, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %106, 10
  %115 = xor i1 %113, true
  %116 = xor i1 %114, true
  %117 = xor i1 true, true
  %118 = and i1 %115, true
  %119 = and i1 %113, %117
  %120 = and i1 %116, true
  %121 = and i1 %114, %117
  %122 = or i1 %118, %119
  %123 = or i1 %120, %121
  %124 = xor i1 %122, %123
  %125 = or i1 %115, %116
  %126 = xor i1 %125, true
  %127 = or i1 true, %117
  %128 = and i1 %126, %127
  %129 = or i1 %124, %128
  %130 = or i1 %113, %114
  %131 = select i1 %129, i32 -1714371519, i32 -483516026
  store i32 %131, i32* %18
  br label %152

; <label>:132:                                    ; preds = %19
  store i32 -1752112978, i32* %18
  br label %152

; <label>:133:                                    ; preds = %19
  ret void

; <label>:134:                                    ; preds = %19
  %135 = alloca %"struct.std::less", align 1
  %136 = alloca %"struct.std::_Deque_iterator", align 8
  %137 = alloca %"struct.std::_Deque_iterator", align 8
  %138 = alloca %"struct.std::_Deque_iterator", align 8
  %139 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %140 = alloca %"struct.std::less", align 1
  %141 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %142 = call i64 @_ZStmiI4EdgeRS0_PS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_(%"struct.std::_Deque_iterator"* dereferenceable(32) %1, %"struct.std::_Deque_iterator"* dereferenceable(32) %0) #10
  %143 = icmp sgt i64 %142, 1
  store i32 -547969752, i32* %18
  br label %152

; <label>:144:                                    ; preds = %19
  %145 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EmmEv(%"struct.std::_Deque_iterator"* %1) #10
  %146 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %6
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %146, %"struct.std::_Deque_iterator"* dereferenceable(32) %0) #10
  %147 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %5
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %147, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #10
  %148 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %148, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #10
  call void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt4lessI4EdgeEEENS0_15_Iter_comp_iterIT_EES6_()
  %149 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %6
  %150 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %5
  %151 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  call void @_ZSt10__pop_heapISt15_Deque_iteratorI4EdgeRS1_PS1_EN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessIS1_EEEEvT_SB_SB_T0_(%"struct.std::_Deque_iterator"* %149, %"struct.std::_Deque_iterator"* %150, %"struct.std::_Deque_iterator"* %151)
  store i32 1910336439, i32* %18
  br label %152

; <label>:152:                                    ; preds = %144, %134, %132, %97, %69, %66, %42, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeI4EdgeSaIS0_EE8pop_backEv(%"class.std::deque"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %5 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %5, i32 0, i32 3
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %6, i32 0, i32 0
  %8 = load %struct.Edge*, %struct.Edge** %7, align 8
  %9 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %10 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %9, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %10, i32 0, i32 3
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %11, i32 0, i32 1
  %13 = load %struct.Edge*, %struct.Edge** %12, align 8
  %14 = icmp ne %struct.Edge* %8, %13
  br i1 %14, label %15, label %31

; <label>:15:                                     ; preds = %1
  %16 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %17 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %16, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %17, i32 0, i32 3
  %19 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %18, i32 0, i32 0
  %20 = load %struct.Edge*, %struct.Edge** %19, align 8
  %21 = getelementptr inbounds %struct.Edge, %struct.Edge* %20, i32 -1
  store %struct.Edge* %21, %struct.Edge** %19, align 8
  %22 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %23 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %22, i32 0, i32 0
  %24 = bitcast %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %23 to %"class.std::allocator.2"*
  %25 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %26 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %26, i32 0, i32 3
  %28 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %27, i32 0, i32 0
  %29 = load %struct.Edge*, %struct.Edge** %28, align 8
  invoke void @_ZNSt16allocator_traitsISaI4EdgeEE7destroyIS0_EEvRS1_PT_(%"class.std::allocator.2"* dereferenceable(1) %24, %struct.Edge* %29)
          to label %30 unwind label %64

; <label>:30:                                     ; preds = %15
  br label %63

; <label>:31:                                     ; preds = %1
  invoke void @_ZNSt5dequeI4EdgeSaIS0_EE15_M_pop_back_auxEv(%"class.std::deque"* %3)
          to label %32 unwind label %64

; <label>:32:                                     ; preds = %31
  %33 = load i32, i32* @x.670
  %34 = load i32, i32* @y.671
  %35 = add i32 %33, -154984417
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -154984417
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  br i1 %45, label %47, label %67

; <label>:47:                                     ; preds = %32, %67
  %48 = load i32, i32* @x.670
  %49 = load i32, i32* @y.671
  %50 = sub i32 %48, -1350740642
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -1350740642
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  br i1 %60, label %62, label %67

; <label>:62:                                     ; preds = %47
  br label %63

; <label>:63:                                     ; preds = %62, %30
  ret void

; <label>:64:                                     ; preds = %31, %15
  %65 = landingpad { i8*, i32 }
          catch i8* null
  %66 = extractvalue { i8*, i32 } %65, 0
  call void @__clang_call_terminate(i8* %66) #8
  unreachable

; <label>:67:                                     ; preds = %47, %32
  br label %47
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EmmEv(%"struct.std::_Deque_iterator"*) #0 comdat align 2 {
  %2 = alloca %struct.Edge*
  %3 = alloca %struct.Edge*
  %4 = alloca %"struct.std::_Deque_iterator"*
  %5 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %5, align 8
  %6 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %5, align 8
  store %"struct.std::_Deque_iterator"* %6, %"struct.std::_Deque_iterator"** %4
  %7 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %8 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %7, i32 0, i32 0
  %9 = load %struct.Edge*, %struct.Edge** %8, align 8
  store %struct.Edge* %9, %struct.Edge** %3
  %10 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %11 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %10, i32 0, i32 1
  %12 = load %struct.Edge*, %struct.Edge** %11, align 8
  store %struct.Edge* %12, %struct.Edge** %2
  %13 = alloca i32
  store i32 -1001568964, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %39
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1001568964, label %17
    i32 901763749, label %22
    i32 2123943659, label %33
  ]

; <label>:16:                                     ; preds = %14
  br label %39

; <label>:17:                                     ; preds = %14
  %18 = load volatile %struct.Edge*, %struct.Edge** %3
  %19 = load volatile %struct.Edge*, %struct.Edge** %2
  %20 = icmp eq %struct.Edge* %18, %19
  %21 = select i1 %20, i32 901763749, i32 2123943659
  store i32 %21, i32* %13
  br label %39

; <label>:22:                                     ; preds = %14
  %23 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %24 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %23, i32 0, i32 3
  %25 = load %struct.Edge**, %struct.Edge*** %24, align 8
  %26 = getelementptr inbounds %struct.Edge*, %struct.Edge** %25, i64 -1
  %27 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator"* %27, %struct.Edge** %26) #10
  %28 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %29 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %28, i32 0, i32 2
  %30 = load %struct.Edge*, %struct.Edge** %29, align 8
  %31 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %32 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %31, i32 0, i32 0
  store %struct.Edge* %30, %struct.Edge** %32, align 8
  store i32 2123943659, i32* %13
  br label %39

; <label>:33:                                     ; preds = %14
  %34 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %35 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %34, i32 0, i32 0
  %36 = load %struct.Edge*, %struct.Edge** %35, align 8
  %37 = getelementptr inbounds %struct.Edge, %struct.Edge* %36, i32 -1
  store %struct.Edge* %37, %struct.Edge** %35, align 8
  %38 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  ret %"struct.std::_Deque_iterator"* %38

; <label>:39:                                     ; preds = %22, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10__pop_heapISt15_Deque_iteratorI4EdgeRS1_PS1_EN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessIS1_EEEEvT_SB_SB_T0_(%"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*) #1 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.674
  %7 = load i32, i32* @y.675
  %8 = add i32 %6, -1155296049
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1155296049
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1604308597, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %85
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1604308597, label %20
    i32 554717954, label %28
    i32 -689692950, label %63
    i32 -647605944, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %85

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 554717954, i32 -647605944
  store i32 %27, i32* %16
  br label %85

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %30 = alloca %struct.Edge, align 8
  %31 = alloca %"struct.std::_Deque_iterator", align 8
  %32 = alloca %struct.Edge, align 8
  %33 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %34 = call dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"* %2) #10
  %35 = call dereferenceable(24) %struct.Edge* @_ZSt4moveIR4EdgeEONSt16remove_referenceIT_E4typeEOS3_(%struct.Edge* dereferenceable(24) %34) #10
  %36 = bitcast %struct.Edge* %30 to i8*
  %37 = bitcast %struct.Edge* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 24, i32 8, i1 false)
  %38 = call dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"* %0) #10
  %39 = call dereferenceable(24) %struct.Edge* @_ZSt4moveIR4EdgeEONSt16remove_referenceIT_E4typeEOS3_(%struct.Edge* dereferenceable(24) %38) #10
  %40 = call dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"* %2) #10
  %41 = bitcast %struct.Edge* %40 to i8*
  %42 = bitcast %struct.Edge* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 24, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %31, %"struct.std::_Deque_iterator"* dereferenceable(32) %0) #10
  %43 = call i64 @_ZStmiI4EdgeRS0_PS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_(%"struct.std::_Deque_iterator"* dereferenceable(32) %1, %"struct.std::_Deque_iterator"* dereferenceable(32) %0) #10
  %44 = call dereferenceable(24) %struct.Edge* @_ZSt4moveIR4EdgeEONSt16remove_referenceIT_E4typeEOS3_(%struct.Edge* dereferenceable(24) %30) #10
  %45 = bitcast %struct.Edge* %32 to i8*
  %46 = bitcast %struct.Edge* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %46, i64 24, i32 8, i1 false)
  %47 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %33 to i8*
  %48 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 1, i32 1, i1 false)
  call void @_ZSt13__adjust_heapISt15_Deque_iteratorI4EdgeRS1_PS1_ElS1_N9__gnu_cxx5__ops15_Iter_comp_iterISt4lessIS1_EEEEvT_T0_SC_T1_T2_(%"struct.std::_Deque_iterator"* %31, i64 0, i64 %43, %struct.Edge* byval align 8 %32)
  %49 = load i32, i32* @x.674
  %50 = load i32, i32* @y.675
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -689692950, i32 -647605944
  store i32 %62, i32* %16
  br label %85

; <label>:63:                                     ; preds = %17
  ret void

; <label>:64:                                     ; preds = %17
  %65 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %66 = alloca %struct.Edge, align 8
  %67 = alloca %"struct.std::_Deque_iterator", align 8
  %68 = alloca %struct.Edge, align 8
  %69 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %70 = call dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"* %2) #10
  %71 = call dereferenceable(24) %struct.Edge* @_ZSt4moveIR4EdgeEONSt16remove_referenceIT_E4typeEOS3_(%struct.Edge* dereferenceable(24) %70) #10
  %72 = bitcast %struct.Edge* %66 to i8*
  %73 = bitcast %struct.Edge* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %72, i8* %73, i64 24, i32 8, i1 false)
  %74 = call dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"* %0) #10
  %75 = call dereferenceable(24) %struct.Edge* @_ZSt4moveIR4EdgeEONSt16remove_referenceIT_E4typeEOS3_(%struct.Edge* dereferenceable(24) %74) #10
  %76 = call dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"* %2) #10
  %77 = bitcast %struct.Edge* %76 to i8*
  %78 = bitcast %struct.Edge* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %77, i8* %78, i64 24, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %67, %"struct.std::_Deque_iterator"* dereferenceable(32) %0) #10
  %79 = call i64 @_ZStmiI4EdgeRS0_PS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_(%"struct.std::_Deque_iterator"* dereferenceable(32) %1, %"struct.std::_Deque_iterator"* dereferenceable(32) %0) #10
  %80 = call dereferenceable(24) %struct.Edge* @_ZSt4moveIR4EdgeEONSt16remove_referenceIT_E4typeEOS3_(%struct.Edge* dereferenceable(24) %66) #10
  %81 = bitcast %struct.Edge* %68 to i8*
  %82 = bitcast %struct.Edge* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %81, i8* %82, i64 24, i32 8, i1 false)
  %83 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %69 to i8*
  %84 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %83, i8* %84, i64 1, i32 1, i1 false)
  call void @_ZSt13__adjust_heapISt15_Deque_iteratorI4EdgeRS1_PS1_ElS1_N9__gnu_cxx5__ops15_Iter_comp_iterISt4lessIS1_EEEEvT_T0_SC_T1_T2_(%"struct.std::_Deque_iterator"* %67, i64 0, i64 %79, %struct.Edge* byval align 8 %68)
  store i32 554717954, i32* %16
  br label %85

; <label>:85:                                     ; preds = %64, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeI4EdgeSaIS0_EE15_M_pop_back_auxEv(%"class.std::deque"*) #1 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %5 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %6, i32 0, i32 3
  %8 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %7, i32 0, i32 1
  %9 = load %struct.Edge*, %struct.Edge** %8, align 8
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE18_M_deallocate_nodeEPS0_(%"class.std::_Deque_base"* %4, %struct.Edge* %9) #10
  %10 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %11 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %11, i32 0, i32 3
  %13 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %14 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %13, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %14, i32 0, i32 3
  %16 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %15, i32 0, i32 3
  %17 = load %struct.Edge**, %struct.Edge*** %16, align 8
  %18 = getelementptr inbounds %struct.Edge*, %struct.Edge** %17, i64 -1
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator"* %12, %struct.Edge** %18) #10
  %19 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %20, i32 0, i32 3
  %22 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %21, i32 0, i32 2
  %23 = load %struct.Edge*, %struct.Edge** %22, align 8
  %24 = getelementptr inbounds %struct.Edge, %struct.Edge* %23, i64 -1
  %25 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %26 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %26, i32 0, i32 3
  %28 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %27, i32 0, i32 0
  store %struct.Edge* %24, %struct.Edge** %28, align 8
  %29 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %30 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt11_Deque_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %29) #10
  %31 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %32 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %32, i32 0, i32 3
  %34 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %33, i32 0, i32 0
  %35 = load %struct.Edge*, %struct.Edge** %34, align 8
  call void @_ZNSt16allocator_traitsISaI4EdgeEE7destroyIS0_EEvRS1_PT_(%"class.std::allocator.2"* dereferenceable(1) %30, %struct.Edge* %35)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEEC2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.678
  %5 = load i32, i32* @y.679
  %6 = sub i32 %4, -29523382
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -29523382
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1934251226, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %47
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1934251226, label %18
    i32 -1381370914, label %26
    i32 43484817, label %43
    i32 -1542868306, label %44
  ]

; <label>:17:                                     ; preds = %15
  br label %47

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1381370914, i32 -1542868306
  store i32 %25, i32* %14
  br label %47

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %27, align 8
  %29 = load i32, i32* @x.678
  %30 = load i32, i32* @y.679
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 43484817, i32 -1542868306
  store i32 %42, i32* %14
  br label %47

; <label>:43:                                     ; preds = %15
  ret void

; <label>:44:                                     ; preds = %15
  %45 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %45, align 8
  %46 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %45, align 8
  store i32 -1381370914, i32* %14
  br label %47

; <label>:47:                                     ; preds = %44, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEED2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EEC2EmRKS4_(%"struct.std::_Vector_base"*, i64, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.682
  %5 = load i32, i32* @y.683
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %5, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %94

; <label>:17:                                     ; preds = %3, %94
  %18 = alloca %"struct.std::_Vector_base"*, align 8
  %19 = alloca i64, align 8
  %20 = alloca %"class.std::allocator"*, align 8
  %21 = alloca i8*
  %22 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %18, align 8
  store i64 %1, i64* %19, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %20, align 8
  %23 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %18, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %23, i32 0, i32 0
  %25 = load %"class.std::allocator"*, %"class.std::allocator"** %20, align 8
  call void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE12_Vector_implC2ERKS4_(%"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %24, %"class.std::allocator"* dereferenceable(1) %25) #10
  %26 = load i64, i64* %19, align 8
  %27 = load i32, i32* @x.682
  %28 = load i32, i32* @y.683
  %29 = add i32 %27, -252725593
  %30 = sub i32 %29, 1
  %31 = sub i32 %30, -252725593
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  br i1 %39, label %41, label %94

; <label>:41:                                     ; preds = %17
  invoke void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE17_M_create_storageEm(%"struct.std::_Vector_base"* %23, i64 %26)
          to label %42 unwind label %85

; <label>:42:                                     ; preds = %41
  %43 = load i32, i32* @x.682
  %44 = load i32, i32* @y.683
  %45 = add i32 %43, 1423191412
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 1423191412
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  br i1 %67, label %69, label %104

; <label>:69:                                     ; preds = %42, %104
  %70 = load i32, i32* @x.682
  %71 = load i32, i32* @y.683
  %72 = add i32 %70, 789992629
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, 789992629
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  br i1 %82, label %84, label %104

; <label>:84:                                     ; preds = %69
  ret void

; <label>:85:                                     ; preds = %41
  %86 = landingpad { i8*, i32 }
          cleanup
  %87 = extractvalue { i8*, i32 } %86, 0
  store i8* %87, i8** %21, align 8
  %88 = extractvalue { i8*, i32 } %86, 1
  store i32 %88, i32* %22, align 4
  call void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %24) #10
  br label %89

; <label>:89:                                     ; preds = %85
  %90 = load i8*, i8** %21, align 8
  %91 = load i32, i32* %22, align 4
  %92 = insertvalue { i8*, i32 } undef, i8* %90, 0
  %93 = insertvalue { i8*, i32 } %92, i32 %91, 1
  resume { i8*, i32 } %93

; <label>:94:                                     ; preds = %17, %3
  %95 = alloca %"struct.std::_Vector_base"*, align 8
  %96 = alloca i64, align 8
  %97 = alloca %"class.std::allocator"*, align 8
  %98 = alloca i8*
  %99 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %95, align 8
  store i64 %1, i64* %96, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %97, align 8
  %100 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %95, align 8
  %101 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %100, i32 0, i32 0
  %102 = load %"class.std::allocator"*, %"class.std::allocator"** %97, align 8
  call void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE12_Vector_implC2ERKS4_(%"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %101, %"class.std::allocator"* dereferenceable(1) %102) #10
  %103 = load i64, i64* %96, align 8
  br label %17

; <label>:104:                                    ; preds = %69, %42
  br label %69
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EE21_M_default_initializeEm(%"class.std::vector"*, i64) #1 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %12 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %11) #10
  %13 = call %"class.std::vector.0"* @_ZSt27__uninitialized_default_n_aIPSt6vectorI4EdgeSaIS1_EEmS3_ET_S5_T0_RSaIT1_E(%"class.std::vector.0"* %9, i64 %10, %"class.std::allocator"* dereferenceable(1) %12)
  %14 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %15, i32 0, i32 1
  store %"class.std::vector.0"* %13, %"class.std::vector.0"** %16, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.686
  %3 = load i32, i32* @y.687
  %4 = add i32 %2, 720774766
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 720774766
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %113

; <label>:28:                                     ; preds = %1, %113
  %29 = alloca %"struct.std::_Vector_base"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %29, align 8
  %32 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %29, align 8
  %33 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load %"class.std::vector.0"*, %"class.std::vector.0"** %34, align 8
  %36 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %36, i32 0, i32 2
  %38 = load %"class.std::vector.0"*, %"class.std::vector.0"** %37, align 8
  %39 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %39, i32 0, i32 0
  %41 = load %"class.std::vector.0"*, %"class.std::vector.0"** %40, align 8
  %42 = ptrtoint %"class.std::vector.0"* %38 to i64
  %43 = ptrtoint %"class.std::vector.0"* %41 to i64
  %44 = sub i64 %42, -7307169341866712625
  %45 = sub i64 %44, %43
  %46 = add i64 %45, -7307169341866712625
  %47 = sub i64 %42, %43
  %48 = sdiv exact i64 %46, 24
  %49 = load i32, i32* @x.686
  %50 = load i32, i32* @y.687
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  br i1 %72, label %74, label %113

; <label>:74:                                     ; preds = %28
  invoke void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE13_M_deallocateEPS3_m(%"struct.std::_Vector_base"* %32, %"class.std::vector.0"* %35, i64 %48)
          to label %75 unwind label %77

; <label>:75:                                     ; preds = %74
  %76 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %76) #10
  ret void

; <label>:77:                                     ; preds = %74
  %78 = load i32, i32* @x.686
  %79 = load i32, i32* @y.687
  %80 = sub i32 0, 1
  %81 = add i32 %78, %80
  %82 = sub i32 %78, 1
  %83 = mul i32 %78, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %79, 10
  %87 = and i1 %85, %86
  %88 = xor i1 %85, %86
  %89 = or i1 %87, %88
  %90 = or i1 %85, %86
  br i1 %89, label %91, label %179

; <label>:91:                                     ; preds = %77, %179
  %92 = landingpad { i8*, i32 }
          catch i8* null
  %93 = extractvalue { i8*, i32 } %92, 0
  store i8* %93, i8** %30, align 8
  %94 = extractvalue { i8*, i32 } %92, 1
  store i32 %94, i32* %31, align 4
  %95 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %95) #10
  %96 = load i32, i32* @x.686
  %97 = load i32, i32* @y.687
  %98 = add i32 %96, 371333280
  %99 = sub i32 %98, 1
  %100 = sub i32 %99, 371333280
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = and i1 %104, %105
  %107 = xor i1 %104, %105
  %108 = or i1 %106, %107
  %109 = or i1 %104, %105
  br i1 %108, label %110, label %179

; <label>:110:                                    ; preds = %91
  br label %111

; <label>:111:                                    ; preds = %110
  %112 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %112) #8
  unreachable

; <label>:113:                                    ; preds = %28, %1
  %114 = alloca %"struct.std::_Vector_base"*, align 8
  %115 = alloca i8*
  %116 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %114, align 8
  %117 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %114, align 8
  %118 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %117, i32 0, i32 0
  %119 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %118, i32 0, i32 0
  %120 = load %"class.std::vector.0"*, %"class.std::vector.0"** %119, align 8
  %121 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %117, i32 0, i32 0
  %122 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %121, i32 0, i32 2
  %123 = load %"class.std::vector.0"*, %"class.std::vector.0"** %122, align 8
  %124 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %117, i32 0, i32 0
  %125 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %124, i32 0, i32 0
  %126 = load %"class.std::vector.0"*, %"class.std::vector.0"** %125, align 8
  %127 = ptrtoint %"class.std::vector.0"* %123 to i64
  %128 = ptrtoint %"class.std::vector.0"* %126 to i64
  %129 = add i64 %127, -3287505297424306618
  %130 = sub i64 %129, %128
  %131 = sub i64 %130, -3287505297424306618
  %132 = sub i64 %127, %128
  %133 = mul i64 %131, %128
  %134 = shl i64 %127, %128
  %135 = sub i64 0, %127
  %136 = add i64 0, %135
  %137 = sub i64 0, %127
  %138 = sub i64 0, %136
  %139 = sub i64 0, %128
  %140 = add i64 %138, %139
  %141 = sub i64 0, %140
  %142 = add i64 %136, %128
  %143 = sub i64 0, %128
  %144 = add i64 %127, %143
  %145 = sub i64 %127, %128
  %146 = mul i64 %144, %128
  %147 = sub i64 %127, -8827133487469692459
  %148 = sub i64 %147, %128
  %149 = add i64 %148, -8827133487469692459
  %150 = sub i64 %127, %128
  %151 = mul i64 %149, %128
  %152 = shl i64 %127, %128
  %153 = add i64 %127, -3445149884822704771
  %154 = sub i64 %153, %128
  %155 = sub i64 %154, -3445149884822704771
  %156 = sub i64 %127, %128
  %157 = add i64 %155, -2563884701531051320
  %158 = sub i64 %157, 24
  %159 = sub i64 %158, -2563884701531051320
  %160 = sub i64 %155, 24
  %161 = mul i64 %159, 24
  %162 = sub i64 0, %155
  %163 = add i64 0, %162
  %164 = sub i64 0, %155
  %165 = sub i64 %163, -8126200054611067551
  %166 = add i64 %165, 24
  %167 = add i64 %166, -8126200054611067551
  %168 = add i64 %163, 24
  %169 = sub i64 0, 6754974689875921078
  %170 = sub i64 %169, %155
  %171 = add i64 %170, 6754974689875921078
  %172 = sub i64 0, %155
  %173 = sub i64 0, %171
  %174 = sub i64 0, 24
  %175 = add i64 %173, %174
  %176 = sub i64 0, %175
  %177 = add i64 %171, 24
  %178 = sdiv exact i64 %155, 24
  br label %28

; <label>:179:                                    ; preds = %91, %77
  %180 = landingpad { i8*, i32 }
          catch i8* null
  %181 = extractvalue { i8*, i32 } %180, 0
  store i8* %181, i8** %30, align 8
  %182 = extractvalue { i8*, i32 } %180, 1
  store i32 %182, i32* %31, align 4
  %183 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %183) #10
  br label %91
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE12_Vector_implC2ERKS4_(%"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %5 to %"class.std::allocator"*
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  call void @_ZNSaISt6vectorI4EdgeSaIS0_EEEC2ERKS3_(%"class.std::allocator"* %6, %"class.std::allocator"* dereferenceable(1) %7) #10
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %5, i32 0, i32 0
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %5, i32 0, i32 1
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %5, i32 0, i32 2
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE17_M_create_storageEm(%"struct.std::_Vector_base"*, i64) #1 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"class.std::vector.0"* @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE11_M_allocateEm(%"struct.std::_Vector_base"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %8, i32 0, i32 0
  store %"class.std::vector.0"* %7, %"class.std::vector.0"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"class.std::vector.0"*, %"class.std::vector.0"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %13, i32 0, i32 1
  store %"class.std::vector.0"* %12, %"class.std::vector.0"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"class.std::vector.0"*, %"class.std::vector.0"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %20, i32 0, i32 2
  store %"class.std::vector.0"* %19, %"class.std::vector.0"** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaISt6vectorI4EdgeSaIS0_EEED2Ev(%"class.std::allocator"* %4) #10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEEC2ERKS5_(%"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %3, align 8
  store %"class.__gnu_cxx::new_allocator"* %1, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #1 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base"*
  %5 = alloca %"struct.std::_Vector_base"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5, align 8
  store %"struct.std::_Vector_base"* %7, %"struct.std::_Vector_base"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 69802738, i32* %9
  %10 = alloca %"class.std::vector.0"*
  br label %11

; <label>:11:                                     ; preds = %2, %27
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 69802738, label %14
    i32 1669052768, label %18
    i32 -1513411104, label %24
    i32 1547395213, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %27

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 1669052768, i32 -1513411104
  store i32 %17, i32* %9
  br label %27

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %20 to %"class.std::allocator"*
  %22 = load i64, i64* %6, align 8
  %23 = call %"class.std::vector.0"* @_ZNSt16allocator_traitsISaISt6vectorI4EdgeSaIS1_EEEE8allocateERS4_m(%"class.std::allocator"* dereferenceable(1) %21, i64 %22)
  store i32 1547395213, i32* %9
  store %"class.std::vector.0"* %23, %"class.std::vector.0"** %10
  br label %27

; <label>:24:                                     ; preds = %11
  store i32 1547395213, i32* %9
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %10
  br label %27

; <label>:25:                                     ; preds = %11
  %26 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10
  ret %"class.std::vector.0"* %26

; <label>:27:                                     ; preds = %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt16allocator_traitsISaISt6vectorI4EdgeSaIS1_EEEE8allocateERS4_m(%"class.std::allocator"* dereferenceable(1), i64) #1 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector.0"* @_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %6, i64 %7, i8* null)
  ret %"class.std::vector.0"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"*, i64, i8*) #1 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %9) #10
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -172531209, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %60
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -172531209, label %16
    i32 -1026429196, label %21
    i32 1279488779, label %37
    i32 385610441, label %53
    i32 -29231490, label %54
    i32 114537824, label %59
  ]

; <label>:15:                                     ; preds = %13
  br label %60

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -1026429196, i32 -29231490
  store i32 %20, i32* %12
  br label %60

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.700
  %23 = load i32, i32* @y.701
  %24 = sub i32 %22, 1255463830
  %25 = sub i32 %24, 1
  %26 = add i32 %25, 1255463830
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 1279488779, i32 114537824
  store i32 %36, i32* %12
  br label %60

; <label>:37:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #11
  %38 = load i32, i32* @x.700
  %39 = load i32, i32* @y.701
  %40 = sub i32 %38, -490429981
  %41 = sub i32 %40, 1
  %42 = add i32 %41, -490429981
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 385610441, i32 114537824
  store i32 %52, i32* %12
  br label %60

; <label>:53:                                     ; preds = %13
  unreachable

; <label>:54:                                     ; preds = %13
  %55 = load i64, i64* %7, align 8
  %56 = mul i64 %55, 24
  %57 = call i8* @_Znwm(i64 %56)
  %58 = bitcast i8* %57 to %"class.std::vector.0"*
  ret %"class.std::vector.0"* %58

; <label>:59:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #11
  store i32 1279488779, i32* %12
  br label %60

; <label>:60:                                     ; preds = %59, %37, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt27__uninitialized_default_n_aIPSt6vectorI4EdgeSaIS1_EEmS3_ET_S5_T0_RSaIT1_E(%"class.std::vector.0"*, i64, %"class.std::allocator"* dereferenceable(1)) #1 comdat {
  %4 = alloca %"class.std::vector.0"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.704
  %8 = load i32, i32* @y.705
  %9 = add i32 %7, -533467862
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -533467862
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1073089217, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %59
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1073089217, label %21
    i32 -699660277, label %29
    i32 2130444526, label %50
    i32 1022526304, label %52
  ]

; <label>:20:                                     ; preds = %18
  br label %59

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -699660277, i32 1022526304
  store i32 %28, i32* %17
  br label %59

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::vector.0"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.std::allocator"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %30, align 8
  store i64 %1, i64* %31, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %32, align 8
  %33 = load %"class.std::vector.0"*, %"class.std::vector.0"** %30, align 8
  %34 = load i64, i64* %31, align 8
  %35 = call %"class.std::vector.0"* @_ZSt25__uninitialized_default_nIPSt6vectorI4EdgeSaIS1_EEmET_S5_T0_(%"class.std::vector.0"* %33, i64 %34)
  store %"class.std::vector.0"* %35, %"class.std::vector.0"** %4
  %36 = load i32, i32* @x.704
  %37 = load i32, i32* @y.705
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 2130444526, i32 1022526304
  store i32 %49, i32* %17
  br label %59

; <label>:50:                                     ; preds = %18
  %51 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  ret %"class.std::vector.0"* %51

; <label>:52:                                     ; preds = %18
  %53 = alloca %"class.std::vector.0"*, align 8
  %54 = alloca i64, align 8
  %55 = alloca %"class.std::allocator"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %53, align 8
  store i64 %1, i64* %54, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %55, align 8
  %56 = load %"class.std::vector.0"*, %"class.std::vector.0"** %53, align 8
  %57 = load i64, i64* %54, align 8
  %58 = call %"class.std::vector.0"* @_ZSt25__uninitialized_default_nIPSt6vectorI4EdgeSaIS1_EEmET_S5_T0_(%"class.std::vector.0"* %56, i64 %57)
  store i32 -699660277, i32* %17
  br label %59

; <label>:59:                                     ; preds = %52, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.706
  %6 = load i32, i32* @y.707
  %7 = add i32 %5, 1685652210
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1685652210
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1412681090, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1412681090, label %19
    i32 1519999937, label %39
    i32 1620058238, label %70
    i32 786221562, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1519999937, i32 786221562
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %40, align 8
  %41 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %42 to %"class.std::allocator"*
  store %"class.std::allocator"* %43, %"class.std::allocator"** %2
  %44 = load i32, i32* @x.706
  %45 = load i32, i32* @y.707
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 1620058238, i32 786221562
  store i32 %69, i32* %15
  br label %77

; <label>:70:                                     ; preds = %16
  %71 = load volatile %"class.std::allocator"*, %"class.std::allocator"** %2
  ret %"class.std::allocator"* %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %73, align 8
  %74 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %73, align 8
  %75 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %74, i32 0, i32 0
  %76 = bitcast %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %75 to %"class.std::allocator"*
  store i32 1519999937, i32* %15
  br label %77

; <label>:77:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt25__uninitialized_default_nIPSt6vectorI4EdgeSaIS1_EEmET_S5_T0_(%"class.std::vector.0"*, i64) #1 comdat {
  %3 = alloca %"class.std::vector.0"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.708
  %7 = load i32, i32* @y.709
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 57018094, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 57018094, label %19
    i32 -1415680226, label %27
    i32 1479181837, label %60
    i32 -154108099, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1415680226, i32 -154108099
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.0"*, align 8
  %29 = alloca i64, align 8
  %30 = alloca i8, align 1
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %28, align 8
  store i64 %1, i64* %29, align 8
  store i8 1, i8* %30, align 1
  %31 = load %"class.std::vector.0"*, %"class.std::vector.0"** %28, align 8
  %32 = load i64, i64* %29, align 8
  %33 = call %"class.std::vector.0"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorI4EdgeSaIS3_EEmEET_S7_T0_(%"class.std::vector.0"* %31, i64 %32)
  store %"class.std::vector.0"* %33, %"class.std::vector.0"** %3
  %34 = load i32, i32* @x.708
  %35 = load i32, i32* @y.709
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 1479181837, i32 -154108099
  store i32 %59, i32* %15
  br label %69

; <label>:60:                                     ; preds = %16
  %61 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %3
  ret %"class.std::vector.0"* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::vector.0"*, align 8
  %64 = alloca i64, align 8
  %65 = alloca i8, align 1
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %63, align 8
  store i64 %1, i64* %64, align 8
  store i8 1, i8* %65, align 1
  %66 = load %"class.std::vector.0"*, %"class.std::vector.0"** %63, align 8
  %67 = load i64, i64* %64, align 8
  %68 = call %"class.std::vector.0"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorI4EdgeSaIS3_EEmEET_S7_T0_(%"class.std::vector.0"* %66, i64 %67)
  store i32 -1415680226, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorI4EdgeSaIS3_EEmEET_S7_T0_(%"class.std::vector.0"*, i64) #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.710
  %4 = load i32, i32* @y.711
  %5 = add i32 %3, -98460809
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, -98460809
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %366

; <label>:29:                                     ; preds = %2, %366
  %30 = alloca %"class.std::vector.0"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.std::vector.0"*, align 8
  %33 = alloca i8*
  %34 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %30, align 8
  store i64 %1, i64* %31, align 8
  %35 = load %"class.std::vector.0"*, %"class.std::vector.0"** %30, align 8
  store %"class.std::vector.0"* %35, %"class.std::vector.0"** %32, align 8
  %36 = load i32, i32* @x.710
  %37 = load i32, i32* @y.711
  %38 = add i32 %36, -1989256453
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, -1989256453
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  br i1 %60, label %62, label %366

; <label>:62:                                     ; preds = %29
  br label %63

; <label>:63:                                     ; preds = %160, %62
  %64 = load i64, i64* %31, align 8
  %65 = icmp ugt i64 %64, 0
  br i1 %65, label %66, label %212

; <label>:66:                                     ; preds = %63
  %67 = load i32, i32* @x.710
  %68 = load i32, i32* @y.711
  %69 = sub i32 %67, 1363497925
  %70 = sub i32 %69, 1
  %71 = add i32 %70, 1363497925
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  br i1 %79, label %81, label %373

; <label>:81:                                     ; preds = %66, %373
  %82 = load %"class.std::vector.0"*, %"class.std::vector.0"** %32, align 8
  %83 = call %"class.std::vector.0"* @_ZSt11__addressofISt6vectorI4EdgeSaIS1_EEEPT_RS4_(%"class.std::vector.0"* dereferenceable(24) %82) #10
  %84 = load i32, i32* @x.710
  %85 = load i32, i32* @y.711
  %86 = add i32 %84, -1947182009
  %87 = sub i32 %86, 1
  %88 = sub i32 %87, -1947182009
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = and i1 %92, %93
  %95 = xor i1 %92, %93
  %96 = or i1 %94, %95
  %97 = or i1 %92, %93
  br i1 %96, label %98, label %373

; <label>:98:                                     ; preds = %81
  invoke void @_ZSt10_ConstructISt6vectorI4EdgeSaIS1_EEJEEvPT_DpOT0_(%"class.std::vector.0"* %83)
          to label %99 unwind label %161

; <label>:99:                                     ; preds = %98
  br label %100

; <label>:100:                                    ; preds = %99
  %101 = load i32, i32* @x.710
  %102 = load i32, i32* @y.711
  %103 = sub i32 %101, 2120442811
  %104 = sub i32 %103, 1
  %105 = add i32 %104, 2120442811
  %106 = sub i32 %101, 1
  %107 = mul i32 %101, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %102, 10
  %111 = xor i1 %109, true
  %112 = xor i1 %110, true
  %113 = xor i1 false, true
  %114 = and i1 %111, false
  %115 = and i1 %109, %113
  %116 = and i1 %112, false
  %117 = and i1 %110, %113
  %118 = or i1 %114, %115
  %119 = or i1 %116, %117
  %120 = xor i1 %118, %119
  %121 = or i1 %111, %112
  %122 = xor i1 %121, true
  %123 = or i1 false, %113
  %124 = and i1 %122, %123
  %125 = or i1 %120, %124
  %126 = or i1 %109, %110
  br i1 %125, label %127, label %376

; <label>:127:                                    ; preds = %100, %376
  %128 = load i64, i64* %31, align 8
  %129 = sub i64 %128, 2131298422792943825
  %130 = add i64 %129, -1
  %131 = add i64 %130, 2131298422792943825
  %132 = add i64 %128, -1
  store i64 %131, i64* %31, align 8
  %133 = load %"class.std::vector.0"*, %"class.std::vector.0"** %32, align 8
  %134 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %133, i32 1
  store %"class.std::vector.0"* %134, %"class.std::vector.0"** %32, align 8
  %135 = load i32, i32* @x.710
  %136 = load i32, i32* @y.711
  %137 = sub i32 0, 1
  %138 = add i32 %135, %137
  %139 = sub i32 %135, 1
  %140 = mul i32 %135, %138
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %136, 10
  %144 = xor i1 %142, true
  %145 = xor i1 %143, true
  %146 = xor i1 true, true
  %147 = and i1 %144, true
  %148 = and i1 %142, %146
  %149 = and i1 %145, true
  %150 = and i1 %143, %146
  %151 = or i1 %147, %148
  %152 = or i1 %149, %150
  %153 = xor i1 %151, %152
  %154 = or i1 %144, %145
  %155 = xor i1 %154, true
  %156 = or i1 true, %146
  %157 = and i1 %155, %156
  %158 = or i1 %153, %157
  %159 = or i1 %142, %143
  br i1 %158, label %160, label %376

; <label>:160:                                    ; preds = %127
  br label %63

; <label>:161:                                    ; preds = %98
  %162 = load i32, i32* @x.710
  %163 = load i32, i32* @y.711
  %164 = sub i32 0, 1
  %165 = add i32 %162, %164
  %166 = sub i32 %162, 1
  %167 = mul i32 %162, %165
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %163, 10
  %171 = and i1 %169, %170
  %172 = xor i1 %169, %170
  %173 = or i1 %171, %172
  %174 = or i1 %169, %170
  br i1 %173, label %175, label %403

; <label>:175:                                    ; preds = %161, %403
  %176 = landingpad { i8*, i32 }
          catch i8* null
  %177 = extractvalue { i8*, i32 } %176, 0
  store i8* %177, i8** %33, align 8
  %178 = extractvalue { i8*, i32 } %176, 1
  store i32 %178, i32* %34, align 4
  %179 = load i32, i32* @x.710
  %180 = load i32, i32* @y.711
  %181 = sub i32 %179, -939307601
  %182 = sub i32 %181, 1
  %183 = add i32 %182, -939307601
  %184 = sub i32 %179, 1
  %185 = mul i32 %179, %183
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %180, 10
  %189 = xor i1 %187, true
  %190 = xor i1 %188, true
  %191 = xor i1 true, true
  %192 = and i1 %189, true
  %193 = and i1 %187, %191
  %194 = and i1 %190, true
  %195 = and i1 %188, %191
  %196 = or i1 %192, %193
  %197 = or i1 %194, %195
  %198 = xor i1 %196, %197
  %199 = or i1 %189, %190
  %200 = xor i1 %199, true
  %201 = or i1 true, %191
  %202 = and i1 %200, %201
  %203 = or i1 %198, %202
  %204 = or i1 %187, %188
  br i1 %203, label %205, label %403

; <label>:205:                                    ; preds = %175
  br label %206

; <label>:206:                                    ; preds = %205
  %207 = load i8*, i8** %33, align 8
  %208 = call i8* @__cxa_begin_catch(i8* %207) #10
  %209 = load %"class.std::vector.0"*, %"class.std::vector.0"** %30, align 8
  %210 = load %"class.std::vector.0"*, %"class.std::vector.0"** %32, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorI4EdgeSaIS1_EEEvT_S5_(%"class.std::vector.0"* %209, %"class.std::vector.0"* %210)
          to label %211 unwind label %214

; <label>:211:                                    ; preds = %206
  invoke void @__cxa_rethrow() #11
          to label %335 unwind label %214

; <label>:212:                                    ; preds = %63
  %213 = load %"class.std::vector.0"*, %"class.std::vector.0"** %32, align 8
  ret %"class.std::vector.0"* %213

; <label>:214:                                    ; preds = %211, %206
  %215 = landingpad { i8*, i32 }
          cleanup
  %216 = extractvalue { i8*, i32 } %215, 0
  store i8* %216, i8** %33, align 8
  %217 = extractvalue { i8*, i32 } %215, 1
  store i32 %217, i32* %34, align 4
  invoke void @__cxa_end_catch()
          to label %218 unwind label %278

; <label>:218:                                    ; preds = %214
  %219 = load i32, i32* @x.710
  %220 = load i32, i32* @y.711
  %221 = sub i32 0, 1
  %222 = add i32 %219, %221
  %223 = sub i32 %219, 1
  %224 = mul i32 %219, %222
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %220, 10
  %228 = xor i1 %226, true
  %229 = xor i1 %227, true
  %230 = xor i1 false, true
  %231 = and i1 %228, false
  %232 = and i1 %226, %230
  %233 = and i1 %229, false
  %234 = and i1 %227, %230
  %235 = or i1 %231, %232
  %236 = or i1 %233, %234
  %237 = xor i1 %235, %236
  %238 = or i1 %228, %229
  %239 = xor i1 %238, true
  %240 = or i1 false, %230
  %241 = and i1 %239, %240
  %242 = or i1 %237, %241
  %243 = or i1 %226, %227
  br i1 %242, label %244, label %407

; <label>:244:                                    ; preds = %218, %407
  %245 = load i32, i32* @x.710
  %246 = load i32, i32* @y.711
  %247 = sub i32 %245, -1397867374
  %248 = sub i32 %247, 1
  %249 = add i32 %248, -1397867374
  %250 = sub i32 %245, 1
  %251 = mul i32 %245, %249
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %246, 10
  %255 = xor i1 %253, true
  %256 = xor i1 %254, true
  %257 = xor i1 true, true
  %258 = and i1 %255, true
  %259 = and i1 %253, %257
  %260 = and i1 %256, true
  %261 = and i1 %254, %257
  %262 = or i1 %258, %259
  %263 = or i1 %260, %261
  %264 = xor i1 %262, %263
  %265 = or i1 %255, %256
  %266 = xor i1 %265, true
  %267 = or i1 true, %257
  %268 = and i1 %266, %267
  %269 = or i1 %264, %268
  %270 = or i1 %253, %254
  br i1 %269, label %271, label %407

; <label>:271:                                    ; preds = %244
  br label %273
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:273:                                    ; preds = %271
  %274 = load i8*, i8** %33, align 8
  %275 = load i32, i32* %34, align 4
  %276 = insertvalue { i8*, i32 } undef, i8* %274, 0
  %277 = insertvalue { i8*, i32 } %276, i32 %275, 1
  resume { i8*, i32 } %277

; <label>:278:                                    ; preds = %214
  %279 = load i32, i32* @x.710
  %280 = load i32, i32* @y.711
  %281 = sub i32 %279, 37067254
  %282 = sub i32 %281, 1
  %283 = add i32 %282, 37067254
  %284 = sub i32 %279, 1
  %285 = mul i32 %279, %283
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %280, 10
  %289 = xor i1 %287, true
  %290 = xor i1 %288, true
  %291 = xor i1 false, true
  %292 = and i1 %289, false
  %293 = and i1 %287, %291
  %294 = and i1 %290, false
  %295 = and i1 %288, %291
  %296 = or i1 %292, %293
  %297 = or i1 %294, %295
  %298 = xor i1 %296, %297
  %299 = or i1 %289, %290
  %300 = xor i1 %299, true
  %301 = or i1 false, %291
  %302 = and i1 %300, %301
  %303 = or i1 %298, %302
  %304 = or i1 %287, %288
  br i1 %303, label %305, label %408

; <label>:305:                                    ; preds = %278, %408
  %306 = landingpad { i8*, i32 }
          catch i8* null
  %307 = extractvalue { i8*, i32 } %306, 0
  call void @__clang_call_terminate(i8* %307) #8
  %308 = load i32, i32* @x.710
  %309 = load i32, i32* @y.711
  %310 = sub i32 %308, 1708896800
  %311 = sub i32 %310, 1
  %312 = add i32 %311, 1708896800
  %313 = sub i32 %308, 1
  %314 = mul i32 %308, %312
  %315 = urem i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %309, 10
  %318 = xor i1 %316, true
  %319 = xor i1 %317, true
  %320 = xor i1 false, true
  %321 = and i1 %318, false
  %322 = and i1 %316, %320
  %323 = and i1 %319, false
  %324 = and i1 %317, %320
  %325 = or i1 %321, %322
  %326 = or i1 %323, %324
  %327 = xor i1 %325, %326
  %328 = or i1 %318, %319
  %329 = xor i1 %328, true
  %330 = or i1 false, %320
  %331 = and i1 %329, %330
  %332 = or i1 %327, %331
  %333 = or i1 %316, %317
  br i1 %332, label %334, label %408

; <label>:334:                                    ; preds = %305
  unreachable

; <label>:335:                                    ; preds = %211
  %336 = load i32, i32* @x.710
  %337 = load i32, i32* @y.711
  %338 = add i32 %336, -1039082324
  %339 = sub i32 %338, 1
  %340 = sub i32 %339, -1039082324
  %341 = sub i32 %336, 1
  %342 = mul i32 %336, %340
  %343 = urem i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %337, 10
  %346 = and i1 %344, %345
  %347 = xor i1 %344, %345
  %348 = or i1 %346, %347
  %349 = or i1 %344, %345
  br i1 %348, label %350, label %411

; <label>:350:                                    ; preds = %335, %411
  %351 = load i32, i32* @x.710
  %352 = load i32, i32* @y.711
  %353 = add i32 %351, -805520337
  %354 = sub i32 %353, 1
  %355 = sub i32 %354, -805520337
  %356 = sub i32 %351, 1
  %357 = mul i32 %351, %355
  %358 = urem i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %352, 10
  %361 = and i1 %359, %360
  %362 = xor i1 %359, %360
  %363 = or i1 %361, %362
  %364 = or i1 %359, %360
  br i1 %363, label %365, label %411

; <label>:365:                                    ; preds = %350
  unreachable

; <label>:366:                                    ; preds = %29, %2
  %367 = alloca %"class.std::vector.0"*, align 8
  %368 = alloca i64, align 8
  %369 = alloca %"class.std::vector.0"*, align 8
  %370 = alloca i8*
  %371 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %367, align 8
  store i64 %1, i64* %368, align 8
  %372 = load %"class.std::vector.0"*, %"class.std::vector.0"** %367, align 8
  store %"class.std::vector.0"* %372, %"class.std::vector.0"** %369, align 8
  br label %29

; <label>:373:                                    ; preds = %81, %66
  %374 = load %"class.std::vector.0"*, %"class.std::vector.0"** %32, align 8
  %375 = call %"class.std::vector.0"* @_ZSt11__addressofISt6vectorI4EdgeSaIS1_EEEPT_RS4_(%"class.std::vector.0"* dereferenceable(24) %374) #10
  br label %81

; <label>:376:                                    ; preds = %127, %100
  %377 = load i64, i64* %31, align 8
  %378 = sub i64 0, -1
  %379 = add i64 %377, %378
  %380 = sub i64 %377, -1
  %381 = mul i64 %379, -1
  %382 = shl i64 %377, -1
  %383 = sub i64 0, -1
  %384 = add i64 %377, %383
  %385 = sub i64 %377, -1
  %386 = mul i64 %384, -1
  %387 = add i64 %377, 6893528439333457501
  %388 = sub i64 %387, -1
  %389 = sub i64 %388, 6893528439333457501
  %390 = sub i64 %377, -1
  %391 = mul i64 %389, -1
  %392 = sub i64 %377, 5505347504884394100
  %393 = sub i64 %392, -1
  %394 = add i64 %393, 5505347504884394100
  %395 = sub i64 %377, -1
  %396 = mul i64 %394, -1
  %397 = sub i64 %377, -9171301377308251656
  %398 = add i64 %397, -1
  %399 = add i64 %398, -9171301377308251656
  %400 = add i64 %377, -1
  store i64 %399, i64* %31, align 8
  %401 = load %"class.std::vector.0"*, %"class.std::vector.0"** %32, align 8
  %402 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %401, i32 1
  store %"class.std::vector.0"* %402, %"class.std::vector.0"** %32, align 8
  br label %127

; <label>:403:                                    ; preds = %175, %161
  %404 = landingpad { i8*, i32 }
          catch i8* null
  %405 = extractvalue { i8*, i32 } %404, 0
  store i8* %405, i8** %33, align 8
  %406 = extractvalue { i8*, i32 } %404, 1
  store i32 %406, i32* %34, align 4
  br label %175

; <label>:407:                                    ; preds = %244, %218
  br label %244

; <label>:408:                                    ; preds = %305, %278
  %409 = landingpad { i8*, i32 }
          catch i8* null
  %410 = extractvalue { i8*, i32 } %409, 0
  call void @__clang_call_terminate(i8* %410) #8
  br label %305

; <label>:411:                                    ; preds = %350, %335
  br label %350
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorI4EdgeSaIS1_EEJEEvPT_DpOT0_(%"class.std::vector.0"*) #0 comdat {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.0"*
  call void @_ZNSt6vectorI4EdgeSaIS0_EEC2Ev(%"class.std::vector.0"* %5) #10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt11__addressofISt6vectorI4EdgeSaIS1_EEEPT_RS4_(%"class.std::vector.0"* dereferenceable(24)) #0 comdat {
  %2 = alloca %"class.std::vector.0"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.714
  %6 = load i32, i32* @y.715
  %7 = add i32 %5, 474094069
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 474094069
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -929524120, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -929524120, label %19
    i32 753530337, label %27
    i32 -789620501, label %59
    i32 -792786033, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 753530337, i32 -792786033
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %28, align 8
  %29 = load %"class.std::vector.0"*, %"class.std::vector.0"** %28, align 8
  %30 = bitcast %"class.std::vector.0"* %29 to i8*
  %31 = bitcast i8* %30 to %"class.std::vector.0"*
  store %"class.std::vector.0"* %31, %"class.std::vector.0"** %2
  %32 = load i32, i32* @x.714
  %33 = load i32, i32* @y.715
  %34 = add i32 %32, 650687912
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 650687912
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -789620501, i32 -792786033
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %2
  ret %"class.std::vector.0"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %62, align 8
  %63 = load %"class.std::vector.0"*, %"class.std::vector.0"** %62, align 8
  %64 = bitcast %"class.std::vector.0"* %63 to i8*
  %65 = bitcast i8* %64 to %"class.std::vector.0"*
  store i32 753530337, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorI4EdgeSaIS1_EEEvT_S5_(%"class.std::vector.0"*, %"class.std::vector.0"*) #1 comdat {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorI4EdgeSaIS3_EEEEvT_S7_(%"class.std::vector.0"* %5, %"class.std::vector.0"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorI4EdgeSaIS0_EEC2Ev(%"class.std::vector.0"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  invoke void @_ZNSt12_Vector_baseI4EdgeSaIS0_EEC2Ev(%"struct.std::_Vector_base.1"* %4)
          to label %5 unwind label %48

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.718
  %7 = load i32, i32* @y.719
  %8 = add i32 %6, -1233865319
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1233865319
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %7, 10
  %16 = xor i1 %14, true
  %17 = xor i1 %15, true
  %18 = xor i1 false, true
  %19 = and i1 %16, false
  %20 = and i1 %14, %18
  %21 = and i1 %17, false
  %22 = and i1 %15, %18
  %23 = or i1 %19, %20
  %24 = or i1 %21, %22
  %25 = xor i1 %23, %24
  %26 = or i1 %16, %17
  %27 = xor i1 %26, true
  %28 = or i1 false, %18
  %29 = and i1 %27, %28
  %30 = or i1 %25, %29
  %31 = or i1 %14, %15
  br i1 %30, label %32, label %51

; <label>:32:                                     ; preds = %5, %51
  %33 = load i32, i32* @x.718
  %34 = load i32, i32* @y.719
  %35 = add i32 %33, 1468449521
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 1468449521
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  br i1 %45, label %47, label %51

; <label>:47:                                     ; preds = %32
  ret void

; <label>:48:                                     ; preds = %1
  %49 = landingpad { i8*, i32 }
          catch i8* null
  %50 = extractvalue { i8*, i32 } %49, 0
  call void @__clang_call_terminate(i8* %50) #8
  unreachable

; <label>:51:                                     ; preds = %32, %5
  br label %32
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI4EdgeSaIS0_EEC2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI4EdgeSaIS0_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI4EdgeSaIS0_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %3 to %"class.std::allocator.2"*
  call void @_ZNSaI4EdgeEC2Ev(%"class.std::allocator.2"* %4) #10
  %5 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %3, i32 0, i32 0
  store %struct.Edge* null, %struct.Edge** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %3, i32 0, i32 1
  store %struct.Edge* null, %struct.Edge** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %3, i32 0, i32 2
  store %struct.Edge* null, %struct.Edge** %7, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorI4EdgeSaIS3_EEEEvT_S7_(%"class.std::vector.0"*, %"class.std::vector.0"*) #1 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  %5 = alloca i32
  store i32 -1199311788, i32* %5
  br label %6

; <label>:6:                                      ; preds = %2, %55
  %7 = load i32, i32* %5
  switch i32 %7, label %8 [
    i32 -1199311788, label %9
    i32 -1317767132, label %14
    i32 -2128920062, label %29
    i32 1580670385, label %47
    i32 499752270, label %48
    i32 -433146748, label %51
    i32 304712329, label %52
  ]

; <label>:8:                                      ; preds = %6
  br label %55

; <label>:9:                                      ; preds = %6
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %12 = icmp ne %"class.std::vector.0"* %10, %11
  %13 = select i1 %12, i32 -1317767132, i32 -433146748
  store i32 %13, i32* %5
  br label %55

; <label>:14:                                     ; preds = %6
  %15 = load i32, i32* @x.724
  %16 = load i32, i32* @y.725
  %17 = sub i32 0, 1
  %18 = add i32 %15, %17
  %19 = sub i32 %15, 1
  %20 = mul i32 %15, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %16, 10
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -2128920062, i32 304712329
  store i32 %28, i32* %5
  br label %55

; <label>:29:                                     ; preds = %6
  %30 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %31 = call %"class.std::vector.0"* @_ZSt11__addressofISt6vectorI4EdgeSaIS1_EEEPT_RS4_(%"class.std::vector.0"* dereferenceable(24) %30) #10
  call void @_ZSt8_DestroyISt6vectorI4EdgeSaIS1_EEEvPT_(%"class.std::vector.0"* %31)
  %32 = load i32, i32* @x.724
  %33 = load i32, i32* @y.725
  %34 = add i32 %32, -247558145
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -247558145
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 1580670385, i32 304712329
  store i32 %46, i32* %5
  br label %55

; <label>:47:                                     ; preds = %6
  store i32 499752270, i32* %5
  br label %55

; <label>:48:                                     ; preds = %6
  %49 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %50 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %49, i32 1
  store %"class.std::vector.0"* %50, %"class.std::vector.0"** %3, align 8
  store i32 -1199311788, i32* %5
  br label %55

; <label>:51:                                     ; preds = %6
  ret void

; <label>:52:                                     ; preds = %6
  %53 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %54 = call %"class.std::vector.0"* @_ZSt11__addressofISt6vectorI4EdgeSaIS1_EEEPT_RS4_(%"class.std::vector.0"* dereferenceable(24) %53) #10
  call void @_ZSt8_DestroyISt6vectorI4EdgeSaIS1_EEEvPT_(%"class.std::vector.0"* %54)
  store i32 -2128920062, i32* %5
  br label %55

; <label>:55:                                     ; preds = %52, %48, %47, %29, %14, %9, %8
  br label %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorI4EdgeSaIS1_EEEvPT_(%"class.std::vector.0"*) #0 comdat {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  call void @_ZNSt6vectorI4EdgeSaIS0_EED2Ev(%"class.std::vector.0"* %3) #10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorI4EdgeSaIS0_EED2Ev(%"class.std::vector.0"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.0"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %struct.Edge*, %struct.Edge** %8, align 8
  %10 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %struct.Edge*, %struct.Edge** %12, align 8
  %14 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %15 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %14) #10
  invoke void @_ZSt8_DestroyIP4EdgeS0_EvT_S2_RSaIT0_E(%struct.Edge* %9, %struct.Edge* %13, %"class.std::allocator.2"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseI4EdgeSaIS0_EED2Ev(%"struct.std::_Vector_base.1"* %17) #10
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseI4EdgeSaIS0_EED2Ev(%"struct.std::_Vector_base.1"* %22) #10
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #8
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI4EdgeSaIS0_EED2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.730
  %3 = load i32, i32* @y.731
  %4 = add i32 %2, 1381011260
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 1381011260
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %71

; <label>:16:                                     ; preds = %1, %71
  %17 = alloca %"struct.std::_Vector_base.1"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %17, align 8
  %20 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %17, align 8
  %21 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %21, i32 0, i32 0
  %23 = load %struct.Edge*, %struct.Edge** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %24, i32 0, i32 2
  %26 = load %struct.Edge*, %struct.Edge** %25, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %27, i32 0, i32 0
  %29 = load %struct.Edge*, %struct.Edge** %28, align 8
  %30 = ptrtoint %struct.Edge* %26 to i64
  %31 = ptrtoint %struct.Edge* %29 to i64
  %32 = sub i64 0, %31
  %33 = add i64 %30, %32
  %34 = sub i64 %30, %31
  %35 = sdiv exact i64 %33, 24
  %36 = load i32, i32* @x.730
  %37 = load i32, i32* @y.731
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  br i1 %59, label %61, label %71

; <label>:61:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseI4EdgeSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base.1"* %20, %struct.Edge* %23, i64 %35)
          to label %62 unwind label %64

; <label>:62:                                     ; preds = %61
  %63 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI4EdgeSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %63) #10
  ret void

; <label>:64:                                     ; preds = %61
  %65 = landingpad { i8*, i32 }
          catch i8* null
  %66 = extractvalue { i8*, i32 } %65, 0
  store i8* %66, i8** %18, align 8
  %67 = extractvalue { i8*, i32 } %65, 1
  store i32 %67, i32* %19, align 4
  %68 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI4EdgeSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %68) #10
  br label %69

; <label>:69:                                     ; preds = %64
  %70 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %70) #8
  unreachable

; <label>:71:                                     ; preds = %16, %1
  %72 = alloca %"struct.std::_Vector_base.1"*, align 8
  %73 = alloca i8*
  %74 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %72, align 8
  %75 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %72, align 8
  %76 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %76, i32 0, i32 0
  %78 = load %struct.Edge*, %struct.Edge** %77, align 8
  %79 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %75, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %79, i32 0, i32 2
  %81 = load %struct.Edge*, %struct.Edge** %80, align 8
  %82 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %75, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %82, i32 0, i32 0
  %84 = load %struct.Edge*, %struct.Edge** %83, align 8
  %85 = ptrtoint %struct.Edge* %81 to i64
  %86 = ptrtoint %struct.Edge* %84 to i64
  %87 = sub i64 %85, 8618142853309438677
  %88 = sub i64 %87, %86
  %89 = add i64 %88, 8618142853309438677
  %90 = sub i64 %85, %86
  %91 = mul i64 %89, %86
  %92 = shl i64 %85, %86
  %93 = sub i64 0, %86
  %94 = add i64 %85, %93
  %95 = sub i64 %85, %86
  %96 = mul i64 %94, %86
  %97 = shl i64 %85, %86
  %98 = sub i64 %85, 3981587601554419349
  %99 = sub i64 %98, %86
  %100 = add i64 %99, 3981587601554419349
  %101 = sub i64 %85, %86
  %102 = mul i64 %100, %86
  %103 = sub i64 0, %85
  %104 = add i64 0, %103
  %105 = sub i64 0, %85
  %106 = add i64 %104, -31368354259326356
  %107 = add i64 %106, %86
  %108 = sub i64 %107, -31368354259326356
  %109 = add i64 %104, %86
  %110 = sub i64 0, -364084298347970709
  %111 = sub i64 %110, %85
  %112 = add i64 %111, -364084298347970709
  %113 = sub i64 0, %85
  %114 = sub i64 %112, 5366325363728868980
  %115 = add i64 %114, %86
  %116 = add i64 %115, 5366325363728868980
  %117 = add i64 %112, %86
  %118 = sub i64 %85, -4848067946542483281
  %119 = sub i64 %118, %86
  %120 = add i64 %119, -4848067946542483281
  %121 = sub i64 %85, %86
  %122 = mul i64 %120, %86
  %123 = sub i64 0, %86
  %124 = add i64 %85, %123
  %125 = sub i64 %85, %86
  %126 = sub i64 %124, 9107668427771892339
  %127 = sub i64 %126, 24
  %128 = add i64 %127, 9107668427771892339
  %129 = sub i64 %124, 24
  %130 = mul i64 %128, 24
  %131 = shl i64 %124, 24
  %132 = add i64 0, -6977204065130701519
  %133 = sub i64 %132, %124
  %134 = sub i64 %133, -6977204065130701519
  %135 = sub i64 0, %124
  %136 = sub i64 0, %134
  %137 = sub i64 0, 24
  %138 = add i64 %136, %137
  %139 = sub i64 0, %138
  %140 = add i64 %134, 24
  %141 = sdiv exact i64 %124, 24
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI4EdgeSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %3 to %"class.std::allocator.2"*
  call void @_ZNSaI4EdgeED2Ev(%"class.std::allocator.2"* %4) #10
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE13_M_deallocateEPS3_m(%"struct.std::_Vector_base"*, %"class.std::vector.0"*, i64) #1 comdat align 2 {
  %4 = alloca %"class.std::vector.0"*
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca %"struct.std::_Vector_base"*, align 8
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %6, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6, align 8
  store %"struct.std::_Vector_base"* %9, %"struct.std::_Vector_base"** %5
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  store %"class.std::vector.0"* %10, %"class.std::vector.0"** %4
  %11 = alloca i32
  store i32 256254811, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 256254811, label %15
    i32 713681808, label %19
    i32 81037414, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %17 = icmp ne %"class.std::vector.0"* %16, null
  %18 = select i1 %17, i32 713681808, i32 81037414
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %21 to %"class.std::allocator"*
  %23 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorI4EdgeSaIS1_EEEE10deallocateERS4_PS3_m(%"class.std::allocator"* dereferenceable(1) %22, %"class.std::vector.0"* %23, i64 %24)
  store i32 81037414, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorI4EdgeSaIS1_EEEE10deallocateERS4_PS3_m(%"class.std::allocator"* dereferenceable(1), %"class.std::vector.0"*, i64) #1 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEE10deallocateEPS4_m(%"class.__gnu_cxx::new_allocator"* %8, %"class.std::vector.0"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEE10deallocateEPS4_m(%"class.__gnu_cxx::new_allocator"*, %"class.std::vector.0"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.738
  %7 = load i32, i32* @y.739
  %8 = add i32 %6, -1690824152
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1690824152
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1765080168, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1765080168, label %20
    i32 -1237760312, label %28
    i32 1646792414, label %62
    i32 1063207929, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1237760312, i32 1063207929
  store i32 %27, i32* %16
  br label %70

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %30 = alloca %"class.std::vector.0"*, align 8
  %31 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %29, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %29, align 8
  %33 = load %"class.std::vector.0"*, %"class.std::vector.0"** %30, align 8
  %34 = bitcast %"class.std::vector.0"* %33 to i8*
  call void @_ZdlPv(i8* %34) #10
  %35 = load i32, i32* @x.738
  %36 = load i32, i32* @y.739
  %37 = add i32 %35, -383891038
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -383891038
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 1646792414, i32 1063207929
  store i32 %61, i32* %16
  br label %70

; <label>:62:                                     ; preds = %17
  ret void

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %65 = alloca %"class.std::vector.0"*, align 8
  %66 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %64, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %64, align 8
  %68 = load %"class.std::vector.0"*, %"class.std::vector.0"** %65, align 8
  %69 = bitcast %"class.std::vector.0"* %68 to i8*
  call void @_ZdlPv(i8* %69) #10
  store i32 -1237760312, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorI4EdgeSaIS1_EES3_EvT_S5_RSaIT0_E(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::allocator"* dereferenceable(1)) #1 comdat {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  call void @_ZSt8_DestroyIPSt6vectorI4EdgeSaIS1_EEEvT_S5_(%"class.std::vector.0"* %7, %"class.std::vector.0"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorI4EdgeSaIS2_EEEE17_S_select_on_copyERKS5_(%"class.std::allocator"* noalias sret, %"class.std::allocator"* dereferenceable(1)) #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.742
  %6 = load i32, i32* @y.743
  %7 = sub i32 %5, 2145821114
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 2145821114
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -567337166, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -567337166, label %19
    i32 -1122506758, label %39
    i32 1818948343, label %57
    i32 1681294836, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1122506758, i32 1681294836
  store i32 %38, i32* %15
  br label %61

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %40, align 8
  %41 = load %"class.std::allocator"*, %"class.std::allocator"** %40, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorI4EdgeSaIS1_EEEE37select_on_container_copy_constructionERKS4_(%"class.std::allocator"* sret %0, %"class.std::allocator"* dereferenceable(1) %41)
  %42 = load i32, i32* @x.742
  %43 = load i32, i32* @y.743
  %44 = sub i32 %42, 1496771352
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 1496771352
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 1818948343, i32 1681294836
  store i32 %56, i32* %15
  br label %61

; <label>:57:                                     ; preds = %16
  ret void

; <label>:58:                                     ; preds = %16
  %59 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %59, align 8
  %60 = load %"class.std::allocator"*, %"class.std::allocator"** %59, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorI4EdgeSaIS1_EEEE37select_on_container_copy_constructionERKS4_(%"class.std::allocator"* sret %0, %"class.std::allocator"* dereferenceable(1) %60)
  store i32 -1122506758, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.744
  %6 = load i32, i32* @y.745
  %7 = add i32 %5, -2134653673
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -2134653673
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -435849391, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -435849391, label %19
    i32 -1343271868, label %39
    i32 -1991803440, label %71
    i32 1419786084, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1343271868, i32 1419786084
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %40, align 8
  %41 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %42 to %"class.std::allocator"*
  store %"class.std::allocator"* %43, %"class.std::allocator"** %2
  %44 = load i32, i32* @x.744
  %45 = load i32, i32* @y.745
  %46 = sub i32 %44, 1136522841
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1136522841
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -1991803440, i32 1419786084
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile %"class.std::allocator"*, %"class.std::allocator"** %2
  ret %"class.std::allocator"* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %74, align 8
  %75 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %75, i32 0, i32 0
  %77 = bitcast %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %76 to %"class.std::allocator"*
  store i32 -1343271868, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKSt6vectorI4EdgeSaIS3_EES2_IS5_SaIS5_EEEEPS5_S5_ET0_T_SD_SC_RSaIT1_E(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::allocator"* dereferenceable(1)) #1 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %5, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %6, i32 0, i32 0
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %12, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %9 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %10 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %9, i32 0, i32 0
  %19 = load %"class.std::vector.0"*, %"class.std::vector.0"** %18, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %10, i32 0, i32 0
  %21 = load %"class.std::vector.0"*, %"class.std::vector.0"** %20, align 8
  %22 = call %"class.std::vector.0"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorI4EdgeSaIS3_EES2_IS5_SaIS5_EEEEPS5_ET0_T_SD_SC_(%"class.std::vector.0"* %19, %"class.std::vector.0"* %21, %"class.std::vector.0"* %17)
  ret %"class.std::vector.0"* %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNKSt6vectorIS_I4EdgeSaIS0_EESaIS2_EE5beginEv(%"class.std::vector"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.748
  %6 = load i32, i32* @y.749
  %7 = sub i32 %5, -596983699
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -596983699
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1534517125, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1534517125, label %19
    i32 -1969039533, label %27
    i32 2029808564, label %53
    i32 -1898710290, label %55
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1969039533, i32 -1898710290
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %29 = alloca %"class.std::vector"*, align 8
  %30 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %29, align 8
  %31 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8
  %32 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load %"class.std::vector.0"*, %"class.std::vector.0"** %34, align 8
  store %"class.std::vector.0"* %35, %"class.std::vector.0"** %30, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorI4EdgeSaIS2_EES1_IS4_SaIS4_EEEC2ERKS6_(%"class.__gnu_cxx::__normal_iterator.31"* %28, %"class.std::vector.0"** dereferenceable(8) %30) #10
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %28, i32 0, i32 0
  %37 = load %"class.std::vector.0"*, %"class.std::vector.0"** %36, align 8
  store %"class.std::vector.0"* %37, %"class.std::vector.0"** %2
  %38 = load i32, i32* @x.748
  %39 = load i32, i32* @y.749
  %40 = sub i32 %38, 1232753574
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 1232753574
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 2029808564, i32 -1898710290
  store i32 %52, i32* %15
  br label %66

; <label>:53:                                     ; preds = %16
  %54 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %2
  ret %"class.std::vector.0"* %54

; <label>:55:                                     ; preds = %16
  %56 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %57 = alloca %"class.std::vector"*, align 8
  %58 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %57, align 8
  %59 = load %"class.std::vector"*, %"class.std::vector"** %57, align 8
  %60 = bitcast %"class.std::vector"* %59 to %"struct.std::_Vector_base"*
  %61 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %60, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %61, i32 0, i32 0
  %63 = load %"class.std::vector.0"*, %"class.std::vector.0"** %62, align 8
  store %"class.std::vector.0"* %63, %"class.std::vector.0"** %58, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorI4EdgeSaIS2_EES1_IS4_SaIS4_EEEC2ERKS6_(%"class.__gnu_cxx::__normal_iterator.31"* %56, %"class.std::vector.0"** dereferenceable(8) %58) #10
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %56, i32 0, i32 0
  %65 = load %"class.std::vector.0"*, %"class.std::vector.0"** %64, align 8
  store i32 -1969039533, i32* %15
  br label %66

; <label>:66:                                     ; preds = %55, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNKSt6vectorIS_I4EdgeSaIS0_EESaIS2_EE3endEv(%"class.std::vector"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  store %"class.std::vector.0"* %9, %"class.std::vector.0"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorI4EdgeSaIS2_EES1_IS4_SaIS4_EEEC2ERKS6_(%"class.__gnu_cxx::__normal_iterator.31"* %2, %"class.std::vector.0"** dereferenceable(8) %4) #10
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %2, i32 0, i32 0
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  ret %"class.std::vector.0"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorI4EdgeSaIS1_EEEE37select_on_container_copy_constructionERKS4_(%"class.std::allocator"* noalias sret, %"class.std::allocator"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %3, align 8
  %4 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  call void @_ZNSaISt6vectorI4EdgeSaIS0_EEEC2ERKS3_(%"class.std::allocator"* %0, %"class.std::allocator"* dereferenceable(1) %4) #10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorI4EdgeSaIS0_EEEC2ERKS3_(%"class.std::allocator"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEEC2ERKS5_(%"class.__gnu_cxx::new_allocator"* %6, %"class.__gnu_cxx::new_allocator"* dereferenceable(1) %8) #10
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorI4EdgeSaIS3_EES2_IS5_SaIS5_EEEEPS5_ET0_T_SD_SC_(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"*) #1 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %6 = alloca %"class.std::vector.0"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %4, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %5, i32 0, i32 0
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %11, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %8 to i8*
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %9 to i8*
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %8, i32 0, i32 0
  %18 = load %"class.std::vector.0"*, %"class.std::vector.0"** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %9, i32 0, i32 0
  %20 = load %"class.std::vector.0"*, %"class.std::vector.0"** %19, align 8
  %21 = call %"class.std::vector.0"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorI4EdgeSaIS5_EES4_IS7_SaIS7_EEEEPS7_EET0_T_SF_SE_(%"class.std::vector.0"* %18, %"class.std::vector.0"* %20, %"class.std::vector.0"* %16)
  ret %"class.std::vector.0"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorI4EdgeSaIS5_EES4_IS7_SaIS7_EEEEPS7_EET0_T_SF_SE_(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"*) #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.758
  %5 = load i32, i32* @y.759
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %5, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %367

; <label>:29:                                     ; preds = %3, %367
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %32 = alloca %"class.std::vector.0"*, align 8
  %33 = alloca %"class.std::vector.0"*, align 8
  %34 = alloca i8*
  %35 = alloca i32
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %30, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %36, align 8
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %31, i32 0, i32 0
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %37, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %32, align 8
  %38 = load %"class.std::vector.0"*, %"class.std::vector.0"** %32, align 8
  store %"class.std::vector.0"* %38, %"class.std::vector.0"** %33, align 8
  %39 = load i32, i32* @x.758
  %40 = load i32, i32* @y.759
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %367

; <label>:52:                                     ; preds = %29
  br label %53

; <label>:53:                                     ; preds = %199, %52
  %54 = load i32, i32* @x.758
  %55 = load i32, i32* @y.759
  %56 = add i32 %54, -779926958
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, -779926958
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 true, true
  %67 = and i1 %64, true
  %68 = and i1 %62, %66
  %69 = and i1 %65, true
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 true, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  br i1 %78, label %80, label %377

; <label>:80:                                     ; preds = %53, %377
  %81 = call zeroext i1 @_ZN9__gnu_cxxneIPKSt6vectorI4EdgeSaIS2_EES1_IS4_SaIS4_EEEEbRKNS_17__normal_iteratorIT_T0_EESE_(%"class.__gnu_cxx::__normal_iterator.31"* dereferenceable(8) %30, %"class.__gnu_cxx::__normal_iterator.31"* dereferenceable(8) %31) #10
  %82 = load i32, i32* @x.758
  %83 = load i32, i32* @y.759
  %84 = sub i32 0, 1
  %85 = add i32 %82, %84
  %86 = sub i32 %82, 1
  %87 = mul i32 %82, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %83, 10
  %91 = xor i1 %89, true
  %92 = xor i1 %90, true
  %93 = xor i1 true, true
  %94 = and i1 %91, true
  %95 = and i1 %89, %93
  %96 = and i1 %92, true
  %97 = and i1 %90, %93
  %98 = or i1 %94, %95
  %99 = or i1 %96, %97
  %100 = xor i1 %98, %99
  %101 = or i1 %91, %92
  %102 = xor i1 %101, true
  %103 = or i1 true, %93
  %104 = and i1 %102, %103
  %105 = or i1 %100, %104
  %106 = or i1 %89, %90
  br i1 %105, label %107, label %377

; <label>:107:                                    ; preds = %80
  br i1 %81, label %108, label %279

; <label>:108:                                    ; preds = %107
  %109 = load %"class.std::vector.0"*, %"class.std::vector.0"** %33, align 8
  %110 = call %"class.std::vector.0"* @_ZSt11__addressofISt6vectorI4EdgeSaIS1_EEEPT_RS4_(%"class.std::vector.0"* dereferenceable(24) %109) #10
  %111 = call dereferenceable(24) %"class.std::vector.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorI4EdgeSaIS2_EES1_IS4_SaIS4_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.31"* %30) #10
  invoke void @_ZSt10_ConstructISt6vectorI4EdgeSaIS1_EEJRKS3_EEvPT_DpOT0_(%"class.std::vector.0"* %110, %"class.std::vector.0"* dereferenceable(24) %111)
          to label %112 unwind label %200

; <label>:112:                                    ; preds = %108
  %113 = load i32, i32* @x.758
  %114 = load i32, i32* @y.759
  %115 = add i32 %113, 1519809516
  %116 = sub i32 %115, 1
  %117 = sub i32 %116, 1519809516
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  br i1 %125, label %127, label %379

; <label>:127:                                    ; preds = %112, %379
  %128 = load i32, i32* @x.758
  %129 = load i32, i32* @y.759
  %130 = sub i32 0, 1
  %131 = add i32 %128, %130
  %132 = sub i32 %128, 1
  %133 = mul i32 %128, %131
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %129, 10
  %137 = and i1 %135, %136
  %138 = xor i1 %135, %136
  %139 = or i1 %137, %138
  %140 = or i1 %135, %136
  br i1 %139, label %141, label %379

; <label>:141:                                    ; preds = %127
  br label %142

; <label>:142:                                    ; preds = %141
  %143 = load i32, i32* @x.758
  %144 = load i32, i32* @y.759
  %145 = sub i32 %143, -936700460
  %146 = sub i32 %145, 1
  %147 = add i32 %146, -936700460
  %148 = sub i32 %143, 1
  %149 = mul i32 %143, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %144, 10
  %153 = xor i1 %151, true
  %154 = xor i1 %152, true
  %155 = xor i1 false, true
  %156 = and i1 %153, false
  %157 = and i1 %151, %155
  %158 = and i1 %154, false
  %159 = and i1 %152, %155
  %160 = or i1 %156, %157
  %161 = or i1 %158, %159
  %162 = xor i1 %160, %161
  %163 = or i1 %153, %154
  %164 = xor i1 %163, true
  %165 = or i1 false, %155
  %166 = and i1 %164, %165
  %167 = or i1 %162, %166
  %168 = or i1 %151, %152
  br i1 %167, label %169, label %380

; <label>:169:                                    ; preds = %142, %380
  %170 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.31"* @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorI4EdgeSaIS2_EES1_IS4_SaIS4_EEEppEv(%"class.__gnu_cxx::__normal_iterator.31"* %30) #10
  %171 = load %"class.std::vector.0"*, %"class.std::vector.0"** %33, align 8
  %172 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %171, i32 1
  store %"class.std::vector.0"* %172, %"class.std::vector.0"** %33, align 8
  %173 = load i32, i32* @x.758
  %174 = load i32, i32* @y.759
  %175 = add i32 %173, 1339951464
  %176 = sub i32 %175, 1
  %177 = sub i32 %176, 1339951464
  %178 = sub i32 %173, 1
  %179 = mul i32 %173, %177
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %174, 10
  %183 = xor i1 %181, true
  %184 = xor i1 %182, true
  %185 = xor i1 true, true
  %186 = and i1 %183, true
  %187 = and i1 %181, %185
  %188 = and i1 %184, true
  %189 = and i1 %182, %185
  %190 = or i1 %186, %187
  %191 = or i1 %188, %189
  %192 = xor i1 %190, %191
  %193 = or i1 %183, %184
  %194 = xor i1 %193, true
  %195 = or i1 true, %185
  %196 = and i1 %194, %195
  %197 = or i1 %192, %196
  %198 = or i1 %181, %182
  br i1 %197, label %199, label %380

; <label>:199:                                    ; preds = %169
  br label %53

; <label>:200:                                    ; preds = %108
  %201 = load i32, i32* @x.758
  %202 = load i32, i32* @y.759
  %203 = sub i32 0, 1
  %204 = add i32 %201, %203
  %205 = sub i32 %201, 1
  %206 = mul i32 %201, %204
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %202, 10
  %210 = and i1 %208, %209
  %211 = xor i1 %208, %209
  %212 = or i1 %210, %211
  %213 = or i1 %208, %209
  br i1 %212, label %214, label %384

; <label>:214:                                    ; preds = %200, %384
  %215 = landingpad { i8*, i32 }
          catch i8* null
  %216 = extractvalue { i8*, i32 } %215, 0
  store i8* %216, i8** %34, align 8
  %217 = extractvalue { i8*, i32 } %215, 1
  store i32 %217, i32* %35, align 4
  %218 = load i32, i32* @x.758
  %219 = load i32, i32* @y.759
  %220 = sub i32 %218, -1265056569
  %221 = sub i32 %220, 1
  %222 = add i32 %221, -1265056569
  %223 = sub i32 %218, 1
  %224 = mul i32 %218, %222
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %219, 10
  %228 = and i1 %226, %227
  %229 = xor i1 %226, %227
  %230 = or i1 %228, %229
  %231 = or i1 %226, %227
  br i1 %230, label %232, label %384

; <label>:232:                                    ; preds = %214
  br label %233

; <label>:233:                                    ; preds = %232
  %234 = load i32, i32* @x.758
  %235 = load i32, i32* @y.759
  %236 = sub i32 0, 1
  %237 = add i32 %234, %236
  %238 = sub i32 %234, 1
  %239 = mul i32 %234, %237
  %240 = urem i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %235, 10
  %243 = and i1 %241, %242
  %244 = xor i1 %241, %242
  %245 = or i1 %243, %244
  %246 = or i1 %241, %242
  br i1 %245, label %247, label %388

; <label>:247:                                    ; preds = %233, %388
  %248 = load i8*, i8** %34, align 8
  %249 = call i8* @__cxa_begin_catch(i8* %248) #10
  %250 = load %"class.std::vector.0"*, %"class.std::vector.0"** %32, align 8
  %251 = load %"class.std::vector.0"*, %"class.std::vector.0"** %33, align 8
  %252 = load i32, i32* @x.758
  %253 = load i32, i32* @y.759
  %254 = sub i32 0, 1
  %255 = add i32 %252, %254
  %256 = sub i32 %252, 1
  %257 = mul i32 %252, %255
  %258 = urem i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %253, 10
  %261 = xor i1 %259, true
  %262 = xor i1 %260, true
  %263 = xor i1 true, true
  %264 = and i1 %261, true
  %265 = and i1 %259, %263
  %266 = and i1 %262, true
  %267 = and i1 %260, %263
  %268 = or i1 %264, %265
  %269 = or i1 %266, %267
  %270 = xor i1 %268, %269
  %271 = or i1 %261, %262
  %272 = xor i1 %271, true
  %273 = or i1 true, %263
  %274 = and i1 %272, %273
  %275 = or i1 %270, %274
  %276 = or i1 %259, %260
  br i1 %275, label %277, label %388

; <label>:277:                                    ; preds = %247
  invoke void @_ZSt8_DestroyIPSt6vectorI4EdgeSaIS1_EEEvT_S5_(%"class.std::vector.0"* %250, %"class.std::vector.0"* %251)
          to label %278 unwind label %310

; <label>:278:                                    ; preds = %277
  invoke void @__cxa_rethrow() #11
          to label %366 unwind label %310

; <label>:279:                                    ; preds = %107
  %280 = load i32, i32* @x.758
  %281 = load i32, i32* @y.759
  %282 = add i32 %280, -1937374419
  %283 = sub i32 %282, 1
  %284 = sub i32 %283, -1937374419
  %285 = sub i32 %280, 1
  %286 = mul i32 %280, %284
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %281, 10
  %290 = and i1 %288, %289
  %291 = xor i1 %288, %289
  %292 = or i1 %290, %291
  %293 = or i1 %288, %289
  br i1 %292, label %294, label %393

; <label>:294:                                    ; preds = %279, %393
  %295 = load %"class.std::vector.0"*, %"class.std::vector.0"** %33, align 8
  %296 = load i32, i32* @x.758
  %297 = load i32, i32* @y.759
  %298 = sub i32 0, 1
  %299 = add i32 %296, %298
  %300 = sub i32 %296, 1
  %301 = mul i32 %296, %299
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %297, 10
  %305 = and i1 %303, %304
  %306 = xor i1 %303, %304
  %307 = or i1 %305, %306
  %308 = or i1 %303, %304
  br i1 %307, label %309, label %393

; <label>:309:                                    ; preds = %294
  ret %"class.std::vector.0"* %295

; <label>:310:                                    ; preds = %278, %277
  %311 = load i32, i32* @x.758
  %312 = load i32, i32* @y.759
  %313 = add i32 %311, -1705655822
  %314 = sub i32 %313, 1
  %315 = sub i32 %314, -1705655822
  %316 = sub i32 %311, 1
  %317 = mul i32 %311, %315
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %312, 10
  %321 = xor i1 %319, true
  %322 = xor i1 %320, true
  %323 = xor i1 true, true
  %324 = and i1 %321, true
  %325 = and i1 %319, %323
  %326 = and i1 %322, true
  %327 = and i1 %320, %323
  %328 = or i1 %324, %325
  %329 = or i1 %326, %327
  %330 = xor i1 %328, %329
  %331 = or i1 %321, %322
  %332 = xor i1 %331, true
  %333 = or i1 true, %323
  %334 = and i1 %332, %333
  %335 = or i1 %330, %334
  %336 = or i1 %319, %320
  br i1 %335, label %337, label %395

; <label>:337:                                    ; preds = %310, %395
  %338 = landingpad { i8*, i32 }
          cleanup
  %339 = extractvalue { i8*, i32 } %338, 0
  store i8* %339, i8** %34, align 8
  %340 = extractvalue { i8*, i32 } %338, 1
  store i32 %340, i32* %35, align 4
  %341 = load i32, i32* @x.758
  %342 = load i32, i32* @y.759
  %343 = add i32 %341, -1412347833
  %344 = sub i32 %343, 1
  %345 = sub i32 %344, -1412347833
  %346 = sub i32 %341, 1
  %347 = mul i32 %341, %345
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %342, 10
  %351 = and i1 %349, %350
  %352 = xor i1 %349, %350
  %353 = or i1 %351, %352
  %354 = or i1 %349, %350
  br i1 %353, label %355, label %395

; <label>:355:                                    ; preds = %337
  invoke void @__cxa_end_catch()
          to label %356 unwind label %363

; <label>:356:                                    ; preds = %355
  br label %358
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:358:                                    ; preds = %356
  %359 = load i8*, i8** %34, align 8
  %360 = load i32, i32* %35, align 4
  %361 = insertvalue { i8*, i32 } undef, i8* %359, 0
  %362 = insertvalue { i8*, i32 } %361, i32 %360, 1
  resume { i8*, i32 } %362

; <label>:363:                                    ; preds = %355
  %364 = landingpad { i8*, i32 }
          catch i8* null
  %365 = extractvalue { i8*, i32 } %364, 0
  call void @__clang_call_terminate(i8* %365) #8
  unreachable

; <label>:366:                                    ; preds = %278
  unreachable

; <label>:367:                                    ; preds = %29, %3
  %368 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %369 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %370 = alloca %"class.std::vector.0"*, align 8
  %371 = alloca %"class.std::vector.0"*, align 8
  %372 = alloca i8*
  %373 = alloca i32
  %374 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %368, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %374, align 8
  %375 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %369, i32 0, i32 0
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %375, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %370, align 8
  %376 = load %"class.std::vector.0"*, %"class.std::vector.0"** %370, align 8
  store %"class.std::vector.0"* %376, %"class.std::vector.0"** %371, align 8
  br label %29

; <label>:377:                                    ; preds = %80, %53
  %378 = call zeroext i1 @_ZN9__gnu_cxxneIPKSt6vectorI4EdgeSaIS2_EES1_IS4_SaIS4_EEEEbRKNS_17__normal_iteratorIT_T0_EESE_(%"class.__gnu_cxx::__normal_iterator.31"* dereferenceable(8) %30, %"class.__gnu_cxx::__normal_iterator.31"* dereferenceable(8) %31) #10
  br label %80

; <label>:379:                                    ; preds = %127, %112
  br label %127

; <label>:380:                                    ; preds = %169, %142
  %381 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.31"* @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorI4EdgeSaIS2_EES1_IS4_SaIS4_EEEppEv(%"class.__gnu_cxx::__normal_iterator.31"* %30) #10
  %382 = load %"class.std::vector.0"*, %"class.std::vector.0"** %33, align 8
  %383 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %382, i32 1
  store %"class.std::vector.0"* %383, %"class.std::vector.0"** %33, align 8
  br label %169

; <label>:384:                                    ; preds = %214, %200
  %385 = landingpad { i8*, i32 }
          catch i8* null
  %386 = extractvalue { i8*, i32 } %385, 0
  store i8* %386, i8** %34, align 8
  %387 = extractvalue { i8*, i32 } %385, 1
  store i32 %387, i32* %35, align 4
  br label %214

; <label>:388:                                    ; preds = %247, %233
  %389 = load i8*, i8** %34, align 8
  %390 = call i8* @__cxa_begin_catch(i8* %389) #10
  %391 = load %"class.std::vector.0"*, %"class.std::vector.0"** %32, align 8
  %392 = load %"class.std::vector.0"*, %"class.std::vector.0"** %33, align 8
  br label %247

; <label>:393:                                    ; preds = %294, %279
  %394 = load %"class.std::vector.0"*, %"class.std::vector.0"** %33, align 8
  br label %294

; <label>:395:                                    ; preds = %337, %310
  %396 = landingpad { i8*, i32 }
          cleanup
  %397 = extractvalue { i8*, i32 } %396, 0
  store i8* %397, i8** %34, align 8
  %398 = extractvalue { i8*, i32 } %396, 1
  store i32 %398, i32* %35, align 4
  br label %337
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPKSt6vectorI4EdgeSaIS2_EES1_IS4_SaIS4_EEEEbRKNS_17__normal_iteratorIT_T0_EESE_(%"class.__gnu_cxx::__normal_iterator.31"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.31"* dereferenceable(8)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.760
  %7 = load i32, i32* @y.761
  %8 = add i32 %6, -1349423671
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1349423671
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 2001869872, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %64
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 2001869872, label %20
    i32 153010203, label %28
    i32 -110822536, label %52
    i32 1783483730, label %54
  ]

; <label>:19:                                     ; preds = %17
  br label %64

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 153010203, i32 1783483730
  store i32 %27, i32* %16
  br label %64

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %0, %"class.__gnu_cxx::__normal_iterator.31"** %29, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %1, %"class.__gnu_cxx::__normal_iterator.31"** %30, align 8
  %31 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %29, align 8
  %32 = call dereferenceable(8) %"class.std::vector.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorI4EdgeSaIS2_EES1_IS4_SaIS4_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.31"* %31) #10
  %33 = load %"class.std::vector.0"*, %"class.std::vector.0"** %32, align 8
  %34 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %30, align 8
  %35 = call dereferenceable(8) %"class.std::vector.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorI4EdgeSaIS2_EES1_IS4_SaIS4_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.31"* %34) #10
  %36 = load %"class.std::vector.0"*, %"class.std::vector.0"** %35, align 8
  %37 = icmp ne %"class.std::vector.0"* %33, %36
  store i1 %37, i1* %3
  %38 = load i32, i32* @x.760
  %39 = load i32, i32* @y.761
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 -110822536, i32 1783483730
  store i32 %51, i32* %16
  br label %64

; <label>:52:                                     ; preds = %17
  %53 = load volatile i1, i1* %3
  ret i1 %53

; <label>:54:                                     ; preds = %17
  %55 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  %56 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %0, %"class.__gnu_cxx::__normal_iterator.31"** %55, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %1, %"class.__gnu_cxx::__normal_iterator.31"** %56, align 8
  %57 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %55, align 8
  %58 = call dereferenceable(8) %"class.std::vector.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorI4EdgeSaIS2_EES1_IS4_SaIS4_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.31"* %57) #10
  %59 = load %"class.std::vector.0"*, %"class.std::vector.0"** %58, align 8
  %60 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %56, align 8
  %61 = call dereferenceable(8) %"class.std::vector.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorI4EdgeSaIS2_EES1_IS4_SaIS4_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.31"* %60) #10
  %62 = load %"class.std::vector.0"*, %"class.std::vector.0"** %61, align 8
  %63 = icmp ne %"class.std::vector.0"* %59, %62
  store i32 153010203, i32* %16
  br label %64

; <label>:64:                                     ; preds = %54, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorI4EdgeSaIS1_EEJRKS3_EEvPT_DpOT0_(%"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) #1 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.762
  %6 = load i32, i32* @y.763
  %7 = add i32 %5, -1219891685
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1219891685
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2028986201, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2028986201, label %19
    i32 -1780166317, label %27
    i32 -1047911277, label %61
    i32 1656707503, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1780166317, i32 1656707503
  store i32 %26, i32* %15
  br label %70

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.0"*, align 8
  %29 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %28, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %29, align 8
  %30 = load %"class.std::vector.0"*, %"class.std::vector.0"** %28, align 8
  %31 = bitcast %"class.std::vector.0"* %30 to i8*
  %32 = bitcast i8* %31 to %"class.std::vector.0"*
  %33 = load %"class.std::vector.0"*, %"class.std::vector.0"** %29, align 8
  %34 = call dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardIRKSt6vectorI4EdgeSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::vector.0"* dereferenceable(24) %33) #10
  call void @_ZNSt6vectorI4EdgeSaIS0_EEC2ERKS2_(%"class.std::vector.0"* %32, %"class.std::vector.0"* dereferenceable(24) %34)
  %35 = load i32, i32* @x.762
  %36 = load i32, i32* @y.763
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -1047911277, i32 1656707503
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::vector.0"*, align 8
  %64 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %63, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %64, align 8
  %65 = load %"class.std::vector.0"*, %"class.std::vector.0"** %63, align 8
  %66 = bitcast %"class.std::vector.0"* %65 to i8*
  %67 = bitcast i8* %66 to %"class.std::vector.0"*
  %68 = load %"class.std::vector.0"*, %"class.std::vector.0"** %64, align 8
  %69 = call dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardIRKSt6vectorI4EdgeSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::vector.0"* dereferenceable(24) %68) #10
  call void @_ZNSt6vectorI4EdgeSaIS0_EEC2ERKS2_(%"class.std::vector.0"* %67, %"class.std::vector.0"* dereferenceable(24) %69)
  store i32 -1780166317, i32* %15
  br label %70

; <label>:70:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorI4EdgeSaIS2_EES1_IS4_SaIS4_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.31"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.764
  %6 = load i32, i32* @y.765
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1062294671, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1062294671, label %18
    i32 -2061682534, label %26
    i32 -757198213, label %58
    i32 1082225512, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -2061682534, i32 1082225512
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %0, %"class.__gnu_cxx::__normal_iterator.31"** %27, align 8
  %28 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %27, align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %28, i32 0, i32 0
  %30 = load %"class.std::vector.0"*, %"class.std::vector.0"** %29, align 8
  store %"class.std::vector.0"* %30, %"class.std::vector.0"** %2
  %31 = load i32, i32* @x.764
  %32 = load i32, i32* @y.765
  %33 = sub i32 %31, 1280695104
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 1280695104
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -757198213, i32 1082225512
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %2
  ret %"class.std::vector.0"* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %0, %"class.__gnu_cxx::__normal_iterator.31"** %61, align 8
  %62 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %61, align 8
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %62, i32 0, i32 0
  %64 = load %"class.std::vector.0"*, %"class.std::vector.0"** %63, align 8
  store i32 -2061682534, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.31"* @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorI4EdgeSaIS2_EES1_IS4_SaIS4_EEEppEv(%"class.__gnu_cxx::__normal_iterator.31"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %0, %"class.__gnu_cxx::__normal_iterator.31"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %6 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %5, i32 1
  store %"class.std::vector.0"* %6, %"class.std::vector.0"** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator.31"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorI4EdgeSaIS2_EES1_IS4_SaIS4_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.31"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %0, %"class.__gnu_cxx::__normal_iterator.31"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %3, i32 0, i32 0
  ret %"class.std::vector.0"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardIRKSt6vectorI4EdgeSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::vector.0"* dereferenceable(24)) #0 comdat {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  ret %"class.std::vector.0"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI4EdgeSaIS0_EEC2ERKS2_(%"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca %"class.std::allocator.2", align 1
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %11 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %12 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %13 = call i64 @_ZNKSt6vectorI4EdgeSaIS0_EE4sizeEv(%"class.std::vector.0"* %12) #10
  %14 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %15 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %16 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %15) #10
  call void @_ZN9__gnu_cxx14__alloc_traitsISaI4EdgeEE17_S_select_on_copyERKS2_(%"class.std::allocator.2"* sret %5, %"class.std::allocator.2"* dereferenceable(1) %16)
  invoke void @_ZNSt12_Vector_baseI4EdgeSaIS0_EEC2EmRKS1_(%"struct.std::_Vector_base.1"* %11, i64 %13, %"class.std::allocator.2"* dereferenceable(1) %5)
          to label %17 unwind label %68

; <label>:17:                                     ; preds = %2
  %18 = load i32, i32* @x.772
  %19 = load i32, i32* @y.773
  %20 = sub i32 0, 1
  %21 = add i32 %18, %20
  %22 = sub i32 %18, 1
  %23 = mul i32 %18, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %19, 10
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  br i1 %29, label %31, label %178

; <label>:31:                                     ; preds = %17, %178
  call void @_ZNSaI4EdgeED2Ev(%"class.std::allocator.2"* %5) #10
  %32 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %33 = call %struct.Edge* @_ZNKSt6vectorI4EdgeSaIS0_EE5beginEv(%"class.std::vector.0"* %32) #10
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %8, i32 0, i32 0
  store %struct.Edge* %33, %struct.Edge** %34, align 8
  %35 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %36 = call %struct.Edge* @_ZNKSt6vectorI4EdgeSaIS0_EE3endEv(%"class.std::vector.0"* %35) #10
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %9, i32 0, i32 0
  store %struct.Edge* %36, %struct.Edge** %37, align 8
  %38 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %39 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %38, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %39, i32 0, i32 0
  %41 = load %struct.Edge*, %struct.Edge** %40, align 8
  %42 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %43 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %42) #10
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %8, i32 0, i32 0
  %45 = load %struct.Edge*, %struct.Edge** %44, align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %9, i32 0, i32 0
  %47 = load %struct.Edge*, %struct.Edge** %46, align 8
  %48 = load i32, i32* @x.772
  %49 = load i32, i32* @y.773
  %50 = add i32 %48, 1808328677
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, 1808328677
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  br i1 %60, label %62, label %178

; <label>:62:                                     ; preds = %31
  %63 = invoke %struct.Edge* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E(%struct.Edge* %45, %struct.Edge* %47, %struct.Edge* %41, %"class.std::allocator.2"* dereferenceable(1) %43)
          to label %64 unwind label %72

; <label>:64:                                     ; preds = %62
  %65 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %65, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %66, i32 0, i32 1
  store %struct.Edge* %63, %struct.Edge** %67, align 8
  ret void

; <label>:68:                                     ; preds = %2
  %69 = landingpad { i8*, i32 }
          cleanup
  %70 = extractvalue { i8*, i32 } %69, 0
  store i8* %70, i8** %6, align 8
  %71 = extractvalue { i8*, i32 } %69, 1
  store i32 %71, i32* %7, align 4
  call void @_ZNSaI4EdgeED2Ev(%"class.std::allocator.2"* %5) #10
  br label %119

; <label>:72:                                     ; preds = %62
  %73 = load i32, i32* @x.772
  %74 = load i32, i32* @y.773
  %75 = add i32 %73, 332841955
  %76 = sub i32 %75, 1
  %77 = sub i32 %76, 332841955
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = xor i1 %81, true
  %84 = xor i1 %82, true
  %85 = xor i1 true, true
  %86 = and i1 %83, true
  %87 = and i1 %81, %85
  %88 = and i1 %84, true
  %89 = and i1 %82, %85
  %90 = or i1 %86, %87
  %91 = or i1 %88, %89
  %92 = xor i1 %90, %91
  %93 = or i1 %83, %84
  %94 = xor i1 %93, true
  %95 = or i1 true, %85
  %96 = and i1 %94, %95
  %97 = or i1 %92, %96
  %98 = or i1 %81, %82
  br i1 %97, label %99, label %195

; <label>:99:                                     ; preds = %72, %195
  %100 = landingpad { i8*, i32 }
          cleanup
  %101 = extractvalue { i8*, i32 } %100, 0
  store i8* %101, i8** %6, align 8
  %102 = extractvalue { i8*, i32 } %100, 1
  store i32 %102, i32* %7, align 4
  %103 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseI4EdgeSaIS0_EED2Ev(%"struct.std::_Vector_base.1"* %103) #10
  %104 = load i32, i32* @x.772
  %105 = load i32, i32* @y.773
  %106 = add i32 %104, -232509965
  %107 = sub i32 %106, 1
  %108 = sub i32 %107, -232509965
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = and i1 %112, %113
  %115 = xor i1 %112, %113
  %116 = or i1 %114, %115
  %117 = or i1 %112, %113
  br i1 %116, label %118, label %195

; <label>:118:                                    ; preds = %99
  br label %119

; <label>:119:                                    ; preds = %118, %68
  %120 = load i32, i32* @x.772
  %121 = load i32, i32* @y.773
  %122 = sub i32 %120, 679182443
  %123 = sub i32 %122, 1
  %124 = add i32 %123, 679182443
  %125 = sub i32 %120, 1
  %126 = mul i32 %120, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %121, 10
  %130 = xor i1 %128, true
  %131 = xor i1 %129, true
  %132 = xor i1 true, true
  %133 = and i1 %130, true
  %134 = and i1 %128, %132
  %135 = and i1 %131, true
  %136 = and i1 %129, %132
  %137 = or i1 %133, %134
  %138 = or i1 %135, %136
  %139 = xor i1 %137, %138
  %140 = or i1 %130, %131
  %141 = xor i1 %140, true
  %142 = or i1 true, %132
  %143 = and i1 %141, %142
  %144 = or i1 %139, %143
  %145 = or i1 %128, %129
  br i1 %144, label %146, label %200

; <label>:146:                                    ; preds = %119, %200
  %147 = load i8*, i8** %6, align 8
  %148 = load i32, i32* %7, align 4
  %149 = insertvalue { i8*, i32 } undef, i8* %147, 0
  %150 = insertvalue { i8*, i32 } %149, i32 %148, 1
  %151 = load i32, i32* @x.772
  %152 = load i32, i32* @y.773
  %153 = sub i32 %151, 845187692
  %154 = sub i32 %153, 1
  %155 = add i32 %154, 845187692
  %156 = sub i32 %151, 1
  %157 = mul i32 %151, %155
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %152, 10
  %161 = xor i1 %159, true
  %162 = xor i1 %160, true
  %163 = xor i1 false, true
  %164 = and i1 %161, false
  %165 = and i1 %159, %163
  %166 = and i1 %162, false
  %167 = and i1 %160, %163
  %168 = or i1 %164, %165
  %169 = or i1 %166, %167
  %170 = xor i1 %168, %169
  %171 = or i1 %161, %162
  %172 = xor i1 %171, true
  %173 = or i1 false, %163
  %174 = and i1 %172, %173
  %175 = or i1 %170, %174
  %176 = or i1 %159, %160
  br i1 %175, label %177, label %200

; <label>:177:                                    ; preds = %146
  resume { i8*, i32 } %150

; <label>:178:                                    ; preds = %31, %17
  call void @_ZNSaI4EdgeED2Ev(%"class.std::allocator.2"* %5) #10
  %179 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %180 = call %struct.Edge* @_ZNKSt6vectorI4EdgeSaIS0_EE5beginEv(%"class.std::vector.0"* %179) #10
  %181 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %8, i32 0, i32 0
  store %struct.Edge* %180, %struct.Edge** %181, align 8
  %182 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %183 = call %struct.Edge* @_ZNKSt6vectorI4EdgeSaIS0_EE3endEv(%"class.std::vector.0"* %182) #10
  %184 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %9, i32 0, i32 0
  store %struct.Edge* %183, %struct.Edge** %184, align 8
  %185 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %186 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %185, i32 0, i32 0
  %187 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %186, i32 0, i32 0
  %188 = load %struct.Edge*, %struct.Edge** %187, align 8
  %189 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %190 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %189) #10
  %191 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %8, i32 0, i32 0
  %192 = load %struct.Edge*, %struct.Edge** %191, align 8
  %193 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %9, i32 0, i32 0
  %194 = load %struct.Edge*, %struct.Edge** %193, align 8
  br label %31

; <label>:195:                                    ; preds = %99, %72
  %196 = landingpad { i8*, i32 }
          cleanup
  %197 = extractvalue { i8*, i32 } %196, 0
  store i8* %197, i8** %6, align 8
  %198 = extractvalue { i8*, i32 } %196, 1
  store i32 %198, i32* %7, align 4
  %199 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseI4EdgeSaIS0_EED2Ev(%"struct.std::_Vector_base.1"* %199) #10
  br label %99

; <label>:200:                                    ; preds = %146, %119
  %201 = load i8*, i8** %6, align 8
  %202 = load i32, i32* %7, align 4
  %203 = insertvalue { i8*, i32 } undef, i8* %201, 0
  %204 = insertvalue { i8*, i32 } %203, i32 %202, 1
  br label %146
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaI4EdgeEE17_S_select_on_copyERKS2_(%"class.std::allocator.2"* noalias sret, %"class.std::allocator.2"* dereferenceable(1)) #1 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %3, align 8
  %4 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  call void @_ZNSt16allocator_traitsISaI4EdgeEE37select_on_container_copy_constructionERKS1_(%"class.std::allocator.2"* sret %0, %"class.std::allocator.2"* dereferenceable(1) %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI4EdgeSaIS0_EEC2EmRKS1_(%"struct.std::_Vector_base.1"*, i64, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.776
  %5 = load i32, i32* @y.777
  %6 = sub i32 %4, -447562590
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -447562590
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 true, true
  %17 = and i1 %14, true
  %18 = and i1 %12, %16
  %19 = and i1 %15, true
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 true, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %106

; <label>:30:                                     ; preds = %3, %106
  %31 = alloca %"struct.std::_Vector_base.1"*, align 8
  %32 = alloca i64, align 8
  %33 = alloca %"class.std::allocator.2"*, align 8
  %34 = alloca i8*
  %35 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %31, align 8
  store i64 %1, i64* %32, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %33, align 8
  %36 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %31, align 8
  %37 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %36, i32 0, i32 0
  %38 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %33, align 8
  call void @_ZNSt12_Vector_baseI4EdgeSaIS0_EE12_Vector_implC2ERKS1_(%"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %37, %"class.std::allocator.2"* dereferenceable(1) %38) #10
  %39 = load i64, i64* %32, align 8
  %40 = load i32, i32* @x.776
  %41 = load i32, i32* @y.777
  %42 = sub i32 %40, -689353887
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -689353887
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  br i1 %52, label %54, label %106

; <label>:54:                                     ; preds = %30
  invoke void @_ZNSt12_Vector_baseI4EdgeSaIS0_EE17_M_create_storageEm(%"struct.std::_Vector_base.1"* %36, i64 %39)
          to label %55 unwind label %97

; <label>:55:                                     ; preds = %54
  %56 = load i32, i32* @x.776
  %57 = load i32, i32* @y.777
  %58 = add i32 %56, -1335850886
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, -1335850886
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  br i1 %68, label %70, label %116

; <label>:70:                                     ; preds = %55, %116
  %71 = load i32, i32* @x.776
  %72 = load i32, i32* @y.777
  %73 = sub i32 0, 1
  %74 = add i32 %71, %73
  %75 = sub i32 %71, 1
  %76 = mul i32 %71, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %72, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 true, true
  %83 = and i1 %80, true
  %84 = and i1 %78, %82
  %85 = and i1 %81, true
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 true, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  br i1 %94, label %96, label %116

; <label>:96:                                     ; preds = %70
  ret void

; <label>:97:                                     ; preds = %54
  %98 = landingpad { i8*, i32 }
          cleanup
  %99 = extractvalue { i8*, i32 } %98, 0
  store i8* %99, i8** %34, align 8
  %100 = extractvalue { i8*, i32 } %98, 1
  store i32 %100, i32* %35, align 4
  call void @_ZNSt12_Vector_baseI4EdgeSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %37) #10
  br label %101

; <label>:101:                                    ; preds = %97
  %102 = load i8*, i8** %34, align 8
  %103 = load i32, i32* %35, align 4
  %104 = insertvalue { i8*, i32 } undef, i8* %102, 0
  %105 = insertvalue { i8*, i32 } %104, i32 %103, 1
  resume { i8*, i32 } %105

; <label>:106:                                    ; preds = %30, %3
  %107 = alloca %"struct.std::_Vector_base.1"*, align 8
  %108 = alloca i64, align 8
  %109 = alloca %"class.std::allocator.2"*, align 8
  %110 = alloca i8*
  %111 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %107, align 8
  store i64 %1, i64* %108, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %109, align 8
  %112 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %107, align 8
  %113 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %112, i32 0, i32 0
  %114 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %109, align 8
  call void @_ZNSt12_Vector_baseI4EdgeSaIS0_EE12_Vector_implC2ERKS1_(%"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %113, %"class.std::allocator.2"* dereferenceable(1) %114) #10
  %115 = load i64, i64* %108, align 8
  br label %30

; <label>:116:                                    ; preds = %70, %55
  br label %70
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI4EdgeED2Ev(%"class.std::allocator.2"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorI4EdgeED2Ev(%"class.__gnu_cxx::new_allocator.3"* %4) #10
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E(%struct.Edge*, %struct.Edge*, %struct.Edge*, %"class.std::allocator.2"* dereferenceable(1)) #1 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %7 = alloca %struct.Edge*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %5, i32 0, i32 0
  store %struct.Edge* %0, %struct.Edge** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %6, i32 0, i32 0
  store %struct.Edge* %1, %struct.Edge** %12, align 8
  store %struct.Edge* %2, %struct.Edge** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %9 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %10 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %struct.Edge*, %struct.Edge** %7, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %9, i32 0, i32 0
  %19 = load %struct.Edge*, %struct.Edge** %18, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %10, i32 0, i32 0
  %21 = load %struct.Edge*, %struct.Edge** %20, align 8
  %22 = call %struct.Edge* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_(%struct.Edge* %19, %struct.Edge* %21, %struct.Edge* %17)
  ret %struct.Edge* %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.Edge* @_ZNKSt6vectorI4EdgeSaIS0_EE5beginEv(%"class.std::vector.0"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %struct.Edge*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %struct.Edge*, %struct.Edge** %8, align 8
  store %struct.Edge* %9, %struct.Edge** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.32"* %2, %struct.Edge** dereferenceable(8) %4) #10
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %2, i32 0, i32 0
  %11 = load %struct.Edge*, %struct.Edge** %10, align 8
  ret %struct.Edge* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.Edge* @_ZNKSt6vectorI4EdgeSaIS0_EE3endEv(%"class.std::vector.0"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %struct.Edge*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load %struct.Edge*, %struct.Edge** %8, align 8
  store %struct.Edge* %9, %struct.Edge** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.32"* %2, %struct.Edge** dereferenceable(8) %4) #10
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %2, i32 0, i32 0
  %11 = load %struct.Edge*, %struct.Edge** %10, align 8
  ret %struct.Edge* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI4EdgeEE37select_on_container_copy_constructionERKS1_(%"class.std::allocator.2"* noalias sret, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %3, align 8
  %4 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  call void @_ZNSaI4EdgeEC2ERKS0_(%"class.std::allocator.2"* %0, %"class.std::allocator.2"* dereferenceable(1) %4) #10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI4EdgeEC2ERKS0_(%"class.std::allocator.2"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorI4EdgeEC2ERKS2_(%"class.__gnu_cxx::new_allocator.3"* %6, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1) %8) #10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI4EdgeSaIS0_EE12_Vector_implC2ERKS1_(%"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.790
  %6 = load i32, i32* @y.791
  %7 = add i32 %5, 1578134810
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1578134810
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 723070272, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 723070272, label %19
    i32 -288526174, label %27
    i32 356801231, label %63
    i32 645956813, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -288526174, i32 645956813
  store i32 %26, i32* %15
  br label %73

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"*, align 8
  %29 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"** %28, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %29, align 8
  %30 = load %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"** %28, align 8
  %31 = bitcast %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %30 to %"class.std::allocator.2"*
  %32 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %29, align 8
  call void @_ZNSaI4EdgeEC2ERKS0_(%"class.std::allocator.2"* %31, %"class.std::allocator.2"* dereferenceable(1) %32) #10
  %33 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %30, i32 0, i32 0
  store %struct.Edge* null, %struct.Edge** %33, align 8
  %34 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %30, i32 0, i32 1
  store %struct.Edge* null, %struct.Edge** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %30, i32 0, i32 2
  store %struct.Edge* null, %struct.Edge** %35, align 8
  %36 = load i32, i32* @x.790
  %37 = load i32, i32* @y.791
  %38 = add i32 %36, 754587587
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, 754587587
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 356801231, i32 645956813
  store i32 %62, i32* %15
  br label %73

; <label>:63:                                     ; preds = %16
  ret void

; <label>:64:                                     ; preds = %16
  %65 = alloca %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"*, align 8
  %66 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"** %65, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %66, align 8
  %67 = load %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"** %65, align 8
  %68 = bitcast %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %67 to %"class.std::allocator.2"*
  %69 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %66, align 8
  call void @_ZNSaI4EdgeEC2ERKS0_(%"class.std::allocator.2"* %68, %"class.std::allocator.2"* dereferenceable(1) %69) #10
  %70 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %67, i32 0, i32 0
  store %struct.Edge* null, %struct.Edge** %70, align 8
  %71 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %67, i32 0, i32 1
  store %struct.Edge* null, %struct.Edge** %71, align 8
  %72 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %67, i32 0, i32 2
  store %struct.Edge* null, %struct.Edge** %72, align 8
  store i32 -288526174, i32* %15
  br label %73

; <label>:73:                                     ; preds = %64, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI4EdgeSaIS0_EE17_M_create_storageEm(%"struct.std::_Vector_base.1"*, i64) #1 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.792
  %6 = load i32, i32* @y.793
  %7 = add i32 %5, 1707249920
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1707249920
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1504441439, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %94
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1504441439, label %19
    i32 -504744845, label %27
    i32 1337698711, label %73
    i32 1182505121, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %94

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -504744845, i32 1182505121
  store i32 %26, i32* %15
  br label %94

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base.1"*, align 8
  %29 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %28, align 8
  %31 = load i64, i64* %29, align 8
  %32 = call %struct.Edge* @_ZNSt12_Vector_baseI4EdgeSaIS0_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %30, i64 %31)
  %33 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %33, i32 0, i32 0
  store %struct.Edge* %32, %struct.Edge** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %35, i32 0, i32 0
  %37 = load %struct.Edge*, %struct.Edge** %36, align 8
  %38 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %38, i32 0, i32 1
  store %struct.Edge* %37, %struct.Edge** %39, align 8
  %40 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %40, i32 0, i32 0
  %42 = load %struct.Edge*, %struct.Edge** %41, align 8
  %43 = load i64, i64* %29, align 8
  %44 = getelementptr inbounds %struct.Edge, %struct.Edge* %42, i64 %43
  %45 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %45, i32 0, i32 2
  store %struct.Edge* %44, %struct.Edge** %46, align 8
  %47 = load i32, i32* @x.792
  %48 = load i32, i32* @y.793
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 1337698711, i32 1182505121
  store i32 %72, i32* %15
  br label %94

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"struct.std::_Vector_base.1"*, align 8
  %76 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %75, align 8
  store i64 %1, i64* %76, align 8
  %77 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %75, align 8
  %78 = load i64, i64* %76, align 8
  %79 = call %struct.Edge* @_ZNSt12_Vector_baseI4EdgeSaIS0_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %77, i64 %78)
  %80 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %77, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %80, i32 0, i32 0
  store %struct.Edge* %79, %struct.Edge** %81, align 8
  %82 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %77, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %82, i32 0, i32 0
  %84 = load %struct.Edge*, %struct.Edge** %83, align 8
  %85 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %77, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %85, i32 0, i32 1
  store %struct.Edge* %84, %struct.Edge** %86, align 8
  %87 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %77, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %87, i32 0, i32 0
  %89 = load %struct.Edge*, %struct.Edge** %88, align 8
  %90 = load i64, i64* %76, align 8
  %91 = getelementptr inbounds %struct.Edge, %struct.Edge* %89, i64 %90
  %92 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %77, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %92, i32 0, i32 2
  store %struct.Edge* %91, %struct.Edge** %93, align 8
  store i32 -504744845, i32* %15
  br label %94

; <label>:94:                                     ; preds = %74, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_(%struct.Edge*, %struct.Edge*, %struct.Edge*) #1 comdat {
  %4 = alloca %struct.Edge*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.794
  %8 = load i32, i32* @y.795
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 1012804710, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %82
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1012804710, label %20
    i32 101940691, label %28
    i32 -392315898, label %61
    i32 1919039303, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %82

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 101940691, i32 1919039303
  store i32 %27, i32* %16
  br label %82

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %31 = alloca %struct.Edge*, align 8
  %32 = alloca i8, align 1
  %33 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %34 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %35 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %29, i32 0, i32 0
  store %struct.Edge* %0, %struct.Edge** %35, align 8
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %30, i32 0, i32 0
  store %struct.Edge* %1, %struct.Edge** %36, align 8
  store %struct.Edge* %2, %struct.Edge** %31, align 8
  store i8 1, i8* %32, align 1
  %37 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %33 to i8*
  %38 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 8, i32 8, i1 false)
  %39 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %34 to i8*
  %40 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 8, i1 false)
  %41 = load %struct.Edge*, %struct.Edge** %31, align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %33, i32 0, i32 0
  %43 = load %struct.Edge*, %struct.Edge** %42, align 8
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %34, i32 0, i32 0
  %45 = load %struct.Edge*, %struct.Edge** %44, align 8
  %46 = call %struct.Edge* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_(%struct.Edge* %43, %struct.Edge* %45, %struct.Edge* %41)
  store %struct.Edge* %46, %struct.Edge** %4
  %47 = load i32, i32* @x.794
  %48 = load i32, i32* @y.795
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -392315898, i32 1919039303
  store i32 %60, i32* %16
  br label %82

; <label>:61:                                     ; preds = %17
  %62 = load volatile %struct.Edge*, %struct.Edge** %4
  ret %struct.Edge* %62

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %65 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %66 = alloca %struct.Edge*, align 8
  %67 = alloca i8, align 1
  %68 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %69 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %70 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %64, i32 0, i32 0
  store %struct.Edge* %0, %struct.Edge** %70, align 8
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %65, i32 0, i32 0
  store %struct.Edge* %1, %struct.Edge** %71, align 8
  store %struct.Edge* %2, %struct.Edge** %66, align 8
  store i8 1, i8* %67, align 1
  %72 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %68 to i8*
  %73 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %72, i8* %73, i64 8, i32 8, i1 false)
  %74 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %69 to i8*
  %75 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %74, i8* %75, i64 8, i32 8, i1 false)
  %76 = load %struct.Edge*, %struct.Edge** %66, align 8
  %77 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %68, i32 0, i32 0
  %78 = load %struct.Edge*, %struct.Edge** %77, align 8
  %79 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %69, i32 0, i32 0
  %80 = load %struct.Edge*, %struct.Edge** %79, align 8
  %81 = call %struct.Edge* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_(%struct.Edge* %78, %struct.Edge* %80, %struct.Edge* %76)
  store i32 101940691, i32* %16
  br label %82

; <label>:82:                                     ; preds = %63, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_(%struct.Edge*, %struct.Edge*, %struct.Edge*) #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.796
  %5 = load i32, i32* @y.797
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %5, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %357

; <label>:17:                                     ; preds = %3, %357
  %18 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %19 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %20 = alloca %struct.Edge*, align 8
  %21 = alloca %struct.Edge*, align 8
  %22 = alloca i8*
  %23 = alloca i32
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %18, i32 0, i32 0
  store %struct.Edge* %0, %struct.Edge** %24, align 8
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %19, i32 0, i32 0
  store %struct.Edge* %1, %struct.Edge** %25, align 8
  store %struct.Edge* %2, %struct.Edge** %20, align 8
  %26 = load %struct.Edge*, %struct.Edge** %20, align 8
  store %struct.Edge* %26, %struct.Edge** %21, align 8
  %27 = load i32, i32* @x.796
  %28 = load i32, i32* @y.797
  %29 = add i32 %27, 142113545
  %30 = sub i32 %29, 1
  %31 = sub i32 %30, 142113545
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  br i1 %39, label %41, label %357

; <label>:41:                                     ; preds = %17
  br label %42

; <label>:42:                                     ; preds = %160, %41
  %43 = load i32, i32* @x.796
  %44 = load i32, i32* @y.797
  %45 = add i32 %43, -1819591355
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -1819591355
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  br i1 %55, label %57, label %367

; <label>:57:                                     ; preds = %42, %367
  %58 = call zeroext i1 @_ZN9__gnu_cxxneIPK4EdgeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %18, %"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %19) #10
  %59 = load i32, i32* @x.796
  %60 = load i32, i32* @y.797
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 true, true
  %71 = and i1 %68, true
  %72 = and i1 %66, %70
  %73 = and i1 %69, true
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 true, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  br i1 %82, label %84, label %367

; <label>:84:                                     ; preds = %57
  br i1 %58, label %85, label %269

; <label>:85:                                     ; preds = %84
  %86 = load i32, i32* @x.796
  %87 = load i32, i32* @y.797
  %88 = add i32 %86, -231587696
  %89 = sub i32 %88, 1
  %90 = sub i32 %89, -231587696
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = and i1 %94, %95
  %97 = xor i1 %94, %95
  %98 = or i1 %96, %97
  %99 = or i1 %94, %95
  br i1 %98, label %100, label %369

; <label>:100:                                    ; preds = %85, %369
  %101 = load %struct.Edge*, %struct.Edge** %21, align 8
  %102 = call %struct.Edge* @_ZSt11__addressofI4EdgeEPT_RS1_(%struct.Edge* dereferenceable(24) %101) #10
  %103 = call dereferenceable(24) %struct.Edge* @_ZNK9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.32"* %18) #10
  %104 = load i32, i32* @x.796
  %105 = load i32, i32* @y.797
  %106 = sub i32 0, 1
  %107 = add i32 %104, %106
  %108 = sub i32 %104, 1
  %109 = mul i32 %104, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %105, 10
  %113 = xor i1 %111, true
  %114 = xor i1 %112, true
  %115 = xor i1 false, true
  %116 = and i1 %113, false
  %117 = and i1 %111, %115
  %118 = and i1 %114, false
  %119 = and i1 %112, %115
  %120 = or i1 %116, %117
  %121 = or i1 %118, %119
  %122 = xor i1 %120, %121
  %123 = or i1 %113, %114
  %124 = xor i1 %123, true
  %125 = or i1 false, %115
  %126 = and i1 %124, %125
  %127 = or i1 %122, %126
  %128 = or i1 %111, %112
  br i1 %127, label %129, label %369

; <label>:129:                                    ; preds = %100
  invoke void @_ZSt10_ConstructI4EdgeJRKS0_EEvPT_DpOT0_(%struct.Edge* %102, %struct.Edge* dereferenceable(24) %103)
          to label %130 unwind label %164

; <label>:130:                                    ; preds = %129
  %131 = load i32, i32* @x.796
  %132 = load i32, i32* @y.797
  %133 = sub i32 %131, 1715711809
  %134 = sub i32 %133, 1
  %135 = add i32 %134, 1715711809
  %136 = sub i32 %131, 1
  %137 = mul i32 %131, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %132, 10
  %141 = and i1 %139, %140
  %142 = xor i1 %139, %140
  %143 = or i1 %141, %142
  %144 = or i1 %139, %140
  br i1 %143, label %145, label %373

; <label>:145:                                    ; preds = %130, %373
  %146 = load i32, i32* @x.796
  %147 = load i32, i32* @y.797
  %148 = sub i32 0, 1
  %149 = add i32 %146, %148
  %150 = sub i32 %146, 1
  %151 = mul i32 %146, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %147, 10
  %155 = and i1 %153, %154
  %156 = xor i1 %153, %154
  %157 = or i1 %155, %156
  %158 = or i1 %153, %154
  br i1 %157, label %159, label %373

; <label>:159:                                    ; preds = %145
  br label %160

; <label>:160:                                    ; preds = %159
  %161 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.32"* @_ZN9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEEppEv(%"class.__gnu_cxx::__normal_iterator.32"* %18) #10
  %162 = load %struct.Edge*, %struct.Edge** %21, align 8
  %163 = getelementptr inbounds %struct.Edge, %struct.Edge* %162, i32 1
  store %struct.Edge* %163, %struct.Edge** %21, align 8
  br label %42

; <label>:164:                                    ; preds = %129
  %165 = load i32, i32* @x.796
  %166 = load i32, i32* @y.797
  %167 = sub i32 %165, -1476777744
  %168 = sub i32 %167, 1
  %169 = add i32 %168, -1476777744
  %170 = sub i32 %165, 1
  %171 = mul i32 %165, %169
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %166, 10
  %175 = xor i1 %173, true
  %176 = xor i1 %174, true
  %177 = xor i1 false, true
  %178 = and i1 %175, false
  %179 = and i1 %173, %177
  %180 = and i1 %176, false
  %181 = and i1 %174, %177
  %182 = or i1 %178, %179
  %183 = or i1 %180, %181
  %184 = xor i1 %182, %183
  %185 = or i1 %175, %176
  %186 = xor i1 %185, true
  %187 = or i1 false, %177
  %188 = and i1 %186, %187
  %189 = or i1 %184, %188
  %190 = or i1 %173, %174
  br i1 %189, label %191, label %374

; <label>:191:                                    ; preds = %164, %374
  %192 = landingpad { i8*, i32 }
          catch i8* null
  %193 = extractvalue { i8*, i32 } %192, 0
  store i8* %193, i8** %22, align 8
  %194 = extractvalue { i8*, i32 } %192, 1
  store i32 %194, i32* %23, align 4
  %195 = load i32, i32* @x.796
  %196 = load i32, i32* @y.797
  %197 = add i32 %195, 1903967321
  %198 = sub i32 %197, 1
  %199 = sub i32 %198, 1903967321
  %200 = sub i32 %195, 1
  %201 = mul i32 %195, %199
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %196, 10
  %205 = xor i1 %203, true
  %206 = xor i1 %204, true
  %207 = xor i1 false, true
  %208 = and i1 %205, false
  %209 = and i1 %203, %207
  %210 = and i1 %206, false
  %211 = and i1 %204, %207
  %212 = or i1 %208, %209
  %213 = or i1 %210, %211
  %214 = xor i1 %212, %213
  %215 = or i1 %205, %206
  %216 = xor i1 %215, true
  %217 = or i1 false, %207
  %218 = and i1 %216, %217
  %219 = or i1 %214, %218
  %220 = or i1 %203, %204
  br i1 %219, label %221, label %374

; <label>:221:                                    ; preds = %191
  br label %222

; <label>:222:                                    ; preds = %221
  %223 = load i8*, i8** %22, align 8
  %224 = call i8* @__cxa_begin_catch(i8* %223) #10
  %225 = load %struct.Edge*, %struct.Edge** %20, align 8
  %226 = load %struct.Edge*, %struct.Edge** %21, align 8
  invoke void @_ZSt8_DestroyIP4EdgeEvT_S2_(%struct.Edge* %225, %struct.Edge* %226)
          to label %227 unwind label %271

; <label>:227:                                    ; preds = %222
  %228 = load i32, i32* @x.796
  %229 = load i32, i32* @y.797
  %230 = sub i32 0, 1
  %231 = add i32 %228, %230
  %232 = sub i32 %228, 1
  %233 = mul i32 %228, %231
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %229, 10
  %237 = and i1 %235, %236
  %238 = xor i1 %235, %236
  %239 = or i1 %237, %238
  %240 = or i1 %235, %236
  br i1 %239, label %241, label %378

; <label>:241:                                    ; preds = %227, %378
  %242 = load i32, i32* @x.796
  %243 = load i32, i32* @y.797
  %244 = add i32 %242, -549422826
  %245 = sub i32 %244, 1
  %246 = sub i32 %245, -549422826
  %247 = sub i32 %242, 1
  %248 = mul i32 %242, %246
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %243, 10
  %252 = xor i1 %250, true
  %253 = xor i1 %251, true
  %254 = xor i1 true, true
  %255 = and i1 %252, true
  %256 = and i1 %250, %254
  %257 = and i1 %253, true
  %258 = and i1 %251, %254
  %259 = or i1 %255, %256
  %260 = or i1 %257, %258
  %261 = xor i1 %259, %260
  %262 = or i1 %252, %253
  %263 = xor i1 %262, true
  %264 = or i1 true, %254
  %265 = and i1 %263, %264
  %266 = or i1 %261, %265
  %267 = or i1 %250, %251
  br i1 %266, label %268, label %378

; <label>:268:                                    ; preds = %241
  invoke void @__cxa_rethrow() #11
          to label %356 unwind label %271

; <label>:269:                                    ; preds = %84
  %270 = load %struct.Edge*, %struct.Edge** %21, align 8
  ret %struct.Edge* %270

; <label>:271:                                    ; preds = %268, %222
  %272 = load i32, i32* @x.796
  %273 = load i32, i32* @y.797
  %274 = sub i32 %272, 379287804
  %275 = sub i32 %274, 1
  %276 = add i32 %275, 379287804
  %277 = sub i32 %272, 1
  %278 = mul i32 %272, %276
  %279 = urem i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %273, 10
  %282 = and i1 %280, %281
  %283 = xor i1 %280, %281
  %284 = or i1 %282, %283
  %285 = or i1 %280, %281
  br i1 %284, label %286, label %379

; <label>:286:                                    ; preds = %271, %379
  %287 = landingpad { i8*, i32 }
          cleanup
  %288 = extractvalue { i8*, i32 } %287, 0
  store i8* %288, i8** %22, align 8
  %289 = extractvalue { i8*, i32 } %287, 1
  store i32 %289, i32* %23, align 4
  %290 = load i32, i32* @x.796
  %291 = load i32, i32* @y.797
  %292 = sub i32 0, 1
  %293 = add i32 %290, %292
  %294 = sub i32 %290, 1
  %295 = mul i32 %290, %293
  %296 = urem i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %291, 10
  %299 = xor i1 %297, true
  %300 = xor i1 %298, true
  %301 = xor i1 true, true
  %302 = and i1 %299, true
  %303 = and i1 %297, %301
  %304 = and i1 %300, true
  %305 = and i1 %298, %301
  %306 = or i1 %302, %303
  %307 = or i1 %304, %305
  %308 = xor i1 %306, %307
  %309 = or i1 %299, %300
  %310 = xor i1 %309, true
  %311 = or i1 true, %301
  %312 = and i1 %310, %311
  %313 = or i1 %308, %312
  %314 = or i1 %297, %298
  br i1 %313, label %315, label %379

; <label>:315:                                    ; preds = %286
  invoke void @__cxa_end_catch()
          to label %316 unwind label %353

; <label>:316:                                    ; preds = %315
  br label %318
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:318:                                    ; preds = %316
  %319 = load i32, i32* @x.796
  %320 = load i32, i32* @y.797
  %321 = sub i32 %319, -846294279
  %322 = sub i32 %321, 1
  %323 = add i32 %322, -846294279
  %324 = sub i32 %319, 1
  %325 = mul i32 %319, %323
  %326 = urem i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %320, 10
  %329 = and i1 %327, %328
  %330 = xor i1 %327, %328
  %331 = or i1 %329, %330
  %332 = or i1 %327, %328
  br i1 %331, label %333, label %383

; <label>:333:                                    ; preds = %318, %383
  %334 = load i8*, i8** %22, align 8
  %335 = load i32, i32* %23, align 4
  %336 = insertvalue { i8*, i32 } undef, i8* %334, 0
  %337 = insertvalue { i8*, i32 } %336, i32 %335, 1
  %338 = load i32, i32* @x.796
  %339 = load i32, i32* @y.797
  %340 = sub i32 %338, -107915707
  %341 = sub i32 %340, 1
  %342 = add i32 %341, -107915707
  %343 = sub i32 %338, 1
  %344 = mul i32 %338, %342
  %345 = urem i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %339, 10
  %348 = and i1 %346, %347
  %349 = xor i1 %346, %347
  %350 = or i1 %348, %349
  %351 = or i1 %346, %347
  br i1 %350, label %352, label %383

; <label>:352:                                    ; preds = %333
  resume { i8*, i32 } %337

; <label>:353:                                    ; preds = %315
  %354 = landingpad { i8*, i32 }
          catch i8* null
  %355 = extractvalue { i8*, i32 } %354, 0
  call void @__clang_call_terminate(i8* %355) #8
  unreachable

; <label>:356:                                    ; preds = %268
  unreachable

; <label>:357:                                    ; preds = %17, %3
  %358 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %359 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %360 = alloca %struct.Edge*, align 8
  %361 = alloca %struct.Edge*, align 8
  %362 = alloca i8*
  %363 = alloca i32
  %364 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %358, i32 0, i32 0
  store %struct.Edge* %0, %struct.Edge** %364, align 8
  %365 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %359, i32 0, i32 0
  store %struct.Edge* %1, %struct.Edge** %365, align 8
  store %struct.Edge* %2, %struct.Edge** %360, align 8
  %366 = load %struct.Edge*, %struct.Edge** %360, align 8
  store %struct.Edge* %366, %struct.Edge** %361, align 8
  br label %17

; <label>:367:                                    ; preds = %57, %42
  %368 = call zeroext i1 @_ZN9__gnu_cxxneIPK4EdgeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %18, %"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %19) #10
  br label %57

; <label>:369:                                    ; preds = %100, %85
  %370 = load %struct.Edge*, %struct.Edge** %21, align 8
  %371 = call %struct.Edge* @_ZSt11__addressofI4EdgeEPT_RS1_(%struct.Edge* dereferenceable(24) %370) #10
  %372 = call dereferenceable(24) %struct.Edge* @_ZNK9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.32"* %18) #10
  br label %100

; <label>:373:                                    ; preds = %145, %130
  br label %145

; <label>:374:                                    ; preds = %191, %164
  %375 = landingpad { i8*, i32 }
          catch i8* null
  %376 = extractvalue { i8*, i32 } %375, 0
  store i8* %376, i8** %22, align 8
  %377 = extractvalue { i8*, i32 } %375, 1
  store i32 %377, i32* %23, align 4
  br label %191

; <label>:378:                                    ; preds = %241, %227
  br label %241

; <label>:379:                                    ; preds = %286, %271
  %380 = landingpad { i8*, i32 }
          cleanup
  %381 = extractvalue { i8*, i32 } %380, 0
  store i8* %381, i8** %22, align 8
  %382 = extractvalue { i8*, i32 } %380, 1
  store i32 %382, i32* %23, align 4
  br label %286

; <label>:383:                                    ; preds = %333, %318
  %384 = load i8*, i8** %22, align 8
  %385 = load i32, i32* %23, align 4
  %386 = insertvalue { i8*, i32 } undef, i8* %384, 0
  %387 = insertvalue { i8*, i32 } %386, i32 %385, 1
  br label %333
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPK4EdgeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.798
  %7 = load i32, i32* @y.799
  %8 = add i32 %6, -1788773219
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1788773219
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1389057517, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %89
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1389057517, label %20
    i32 -1604548526, label %40
    i32 2012343120, label %77
    i32 99861348, label %79
  ]

; <label>:19:                                     ; preds = %17
  br label %89

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1604548526, i32 99861348
  store i32 %39, i32* %16
  br label %89

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %0, %"class.__gnu_cxx::__normal_iterator.32"** %41, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %1, %"class.__gnu_cxx::__normal_iterator.32"** %42, align 8
  %43 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %41, align 8
  %44 = call dereferenceable(8) %struct.Edge** @_ZNK9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"* %43) #10
  %45 = load %struct.Edge*, %struct.Edge** %44, align 8
  %46 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %42, align 8
  %47 = call dereferenceable(8) %struct.Edge** @_ZNK9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"* %46) #10
  %48 = load %struct.Edge*, %struct.Edge** %47, align 8
  %49 = icmp ne %struct.Edge* %45, %48
  store i1 %49, i1* %3
  %50 = load i32, i32* @x.798
  %51 = load i32, i32* @y.799
  %52 = sub i32 %50, -270114077
  %53 = sub i32 %52, 1
  %54 = add i32 %53, -270114077
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 2012343120, i32 99861348
  store i32 %76, i32* %16
  br label %89

; <label>:77:                                     ; preds = %17
  %78 = load volatile i1, i1* %3
  ret i1 %78

; <label>:79:                                     ; preds = %17
  %80 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  %81 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %0, %"class.__gnu_cxx::__normal_iterator.32"** %80, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %1, %"class.__gnu_cxx::__normal_iterator.32"** %81, align 8
  %82 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %80, align 8
  %83 = call dereferenceable(8) %struct.Edge** @_ZNK9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"* %82) #10
  %84 = load %struct.Edge*, %struct.Edge** %83, align 8
  %85 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %81, align 8
  %86 = call dereferenceable(8) %struct.Edge** @_ZNK9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"* %85) #10
  %87 = load %struct.Edge*, %struct.Edge** %86, align 8
  %88 = icmp ne %struct.Edge* %84, %87
  store i32 -1604548526, i32* %16
  br label %89

; <label>:89:                                     ; preds = %79, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructI4EdgeJRKS0_EEvPT_DpOT0_(%struct.Edge*, %struct.Edge* dereferenceable(24)) #0 comdat {
  %3 = alloca %struct.Edge*, align 8
  %4 = alloca %struct.Edge*, align 8
  store %struct.Edge* %0, %struct.Edge** %3, align 8
  store %struct.Edge* %1, %struct.Edge** %4, align 8
  %5 = load %struct.Edge*, %struct.Edge** %3, align 8
  %6 = bitcast %struct.Edge* %5 to i8*
  %7 = bitcast i8* %6 to %struct.Edge*
  %8 = load %struct.Edge*, %struct.Edge** %4, align 8
  %9 = call dereferenceable(24) %struct.Edge* @_ZSt7forwardIRK4EdgeEOT_RNSt16remove_referenceIS3_E4typeE(%struct.Edge* dereferenceable(24) %8) #10
  %10 = bitcast %struct.Edge* %7 to i8*
  %11 = bitcast %struct.Edge* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 24, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %struct.Edge* @_ZNK9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.32"*) #0 comdat align 2 {
  %2 = alloca %struct.Edge*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.802
  %6 = load i32, i32* @y.803
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1614074704, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %77
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1614074704, label %18
    i32 1912098842, label %38
    i32 1970519070, label %70
    i32 -214899926, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %77

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1912098842, i32 -214899926
  store i32 %37, i32* %14
  br label %77

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %0, %"class.__gnu_cxx::__normal_iterator.32"** %39, align 8
  %40 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %39, align 8
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %40, i32 0, i32 0
  %42 = load %struct.Edge*, %struct.Edge** %41, align 8
  store %struct.Edge* %42, %struct.Edge** %2
  %43 = load i32, i32* @x.802
  %44 = load i32, i32* @y.803
  %45 = add i32 %43, -310849794
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -310849794
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 1970519070, i32 -214899926
  store i32 %69, i32* %14
  br label %77

; <label>:70:                                     ; preds = %15
  %71 = load volatile %struct.Edge*, %struct.Edge** %2
  ret %struct.Edge* %71

; <label>:72:                                     ; preds = %15
  %73 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %0, %"class.__gnu_cxx::__normal_iterator.32"** %73, align 8
  %74 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %73, align 8
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %74, i32 0, i32 0
  %76 = load %struct.Edge*, %struct.Edge** %75, align 8
  store i32 1912098842, i32* %14
  br label %77

; <label>:77:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.32"* @_ZN9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEEppEv(%"class.__gnu_cxx::__normal_iterator.32"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %0, %"class.__gnu_cxx::__normal_iterator.32"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %3, i32 0, i32 0
  %5 = load %struct.Edge*, %struct.Edge** %4, align 8
  %6 = getelementptr inbounds %struct.Edge, %struct.Edge* %5, i32 1
  store %struct.Edge* %6, %struct.Edge** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator.32"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %struct.Edge** @_ZNK9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %0, %"class.__gnu_cxx::__normal_iterator.32"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %3, i32 0, i32 0
  ret %struct.Edge** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %struct.Edge* @_ZSt7forwardIRK4EdgeEOT_RNSt16remove_referenceIS3_E4typeE(%struct.Edge* dereferenceable(24)) #0 comdat {
  %2 = alloca %struct.Edge*, align 8
  store %struct.Edge* %0, %struct.Edge** %2, align 8
  %3 = load %struct.Edge*, %struct.Edge** %2, align 8
  ret %struct.Edge* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.32"*, %struct.Edge** dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  %4 = alloca %struct.Edge**, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %0, %"class.__gnu_cxx::__normal_iterator.32"** %3, align 8
  store %struct.Edge** %1, %struct.Edge*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %5, i32 0, i32 0
  %7 = load %struct.Edge**, %struct.Edge*** %4, align 8
  %8 = load %struct.Edge*, %struct.Edge** %7, align 8
  store %struct.Edge* %8, %struct.Edge** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorI4EdgeSaIS2_EES1_IS4_SaIS4_EEEC2ERKS6_(%"class.__gnu_cxx::__normal_iterator.31"*, %"class.std::vector.0"** dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  %4 = alloca %"class.std::vector.0"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %0, %"class.__gnu_cxx::__normal_iterator.31"** %3, align 8
  store %"class.std::vector.0"** %1, %"class.std::vector.0"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.0"**, %"class.std::vector.0"*** %4, align 8
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  store %"class.std::vector.0"* %8, %"class.std::vector.0"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxeqIPKSt6vectorIxSaIxEES1_IS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.33"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.33"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.33"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.33"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %0, %"class.__gnu_cxx::__normal_iterator.33"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %1, %"class.__gnu_cxx::__normal_iterator.33"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %3, align 8
  %6 = call dereferenceable(8) %"class.std::vector.10"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIxSaIxEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.33"* %5) #10
  %7 = load %"class.std::vector.10"*, %"class.std::vector.10"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %4, align 8
  %9 = call dereferenceable(8) %"class.std::vector.10"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIxSaIxEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.33"* %8) #10
  %10 = load %"class.std::vector.10"*, %"class.std::vector.10"** %9, align 8
  %11 = icmp eq %"class.std::vector.10"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.10"* @_ZNKSt6vectorIS_IxSaIxEESaIS1_EE5beginEv(%"class.std::vector.5"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca %"class.std::vector.10"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %6 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.10"*, %"class.std::vector.10"** %8, align 8
  store %"class.std::vector.10"* %9, %"class.std::vector.10"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIxSaIxEES1_IS3_SaIS3_EEEC2ERKS5_(%"class.__gnu_cxx::__normal_iterator.33"* %2, %"class.std::vector.10"** dereferenceable(8) %4) #10
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %2, i32 0, i32 0
  %11 = load %"class.std::vector.10"*, %"class.std::vector.10"** %10, align 8
  ret %"class.std::vector.10"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.10"* @_ZNKSt6vectorIS_IxSaIxEESaIS1_EE3endEv(%"class.std::vector.5"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.10"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.818
  %6 = load i32, i32* @y.819
  %7 = sub i32 %5, 1847738603
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1847738603
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1161393580, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1161393580, label %19
    i32 -107032142, label %27
    i32 -753689675, label %65
    i32 130671495, label %67
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -107032142, i32 130671495
  store i32 %26, i32* %15
  br label %78

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %29 = alloca %"class.std::vector.5"*, align 8
  %30 = alloca %"class.std::vector.10"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %29, align 8
  %31 = load %"class.std::vector.5"*, %"class.std::vector.5"** %29, align 8
  %32 = bitcast %"class.std::vector.5"* %31 to %"struct.std::_Vector_base.6"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %33, i32 0, i32 1
  %35 = load %"class.std::vector.10"*, %"class.std::vector.10"** %34, align 8
  store %"class.std::vector.10"* %35, %"class.std::vector.10"** %30, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIxSaIxEES1_IS3_SaIS3_EEEC2ERKS5_(%"class.__gnu_cxx::__normal_iterator.33"* %28, %"class.std::vector.10"** dereferenceable(8) %30) #10
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %28, i32 0, i32 0
  %37 = load %"class.std::vector.10"*, %"class.std::vector.10"** %36, align 8
  store %"class.std::vector.10"* %37, %"class.std::vector.10"** %2
  %38 = load i32, i32* @x.818
  %39 = load i32, i32* @y.819
  %40 = add i32 %38, -1433712581
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -1433712581
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 -753689675, i32 130671495
  store i32 %64, i32* %15
  br label %78

; <label>:65:                                     ; preds = %16
  %66 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %2
  ret %"class.std::vector.10"* %66

; <label>:67:                                     ; preds = %16
  %68 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %69 = alloca %"class.std::vector.5"*, align 8
  %70 = alloca %"class.std::vector.10"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %69, align 8
  %71 = load %"class.std::vector.5"*, %"class.std::vector.5"** %69, align 8
  %72 = bitcast %"class.std::vector.5"* %71 to %"struct.std::_Vector_base.6"*
  %73 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %72, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %73, i32 0, i32 1
  %75 = load %"class.std::vector.10"*, %"class.std::vector.10"** %74, align 8
  store %"class.std::vector.10"* %75, %"class.std::vector.10"** %70, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIxSaIxEES1_IS3_SaIS3_EEEC2ERKS5_(%"class.__gnu_cxx::__normal_iterator.33"* %68, %"class.std::vector.10"** dereferenceable(8) %70) #10
  %76 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %68, i32 0, i32 0
  %77 = load %"class.std::vector.10"*, %"class.std::vector.10"** %76, align 8
  store i32 -107032142, i32* %15
  br label %78

; <label>:78:                                     ; preds = %67, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.10"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIxSaIxEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.33"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.10"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.820
  %6 = load i32, i32* @y.821
  %7 = add i32 %5, -955827947
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -955827947
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 418439452, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 418439452, label %19
    i32 1103117682, label %39
    i32 -519111551, label %58
    i32 -302937019, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1103117682, i32 -302937019
  store i32 %38, i32* %15
  br label %64

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.33"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %0, %"class.__gnu_cxx::__normal_iterator.33"** %40, align 8
  %41 = load %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %40, align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %41, i32 0, i32 0
  store %"class.std::vector.10"** %42, %"class.std::vector.10"*** %2
  %43 = load i32, i32* @x.820
  %44 = load i32, i32* @y.821
  %45 = add i32 %43, 2085599225
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 2085599225
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -519111551, i32 -302937019
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"class.std::vector.10"**, %"class.std::vector.10"*** %2
  ret %"class.std::vector.10"** %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.__gnu_cxx::__normal_iterator.33"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %0, %"class.__gnu_cxx::__normal_iterator.33"** %61, align 8
  %62 = load %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %61, align 8
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %62, i32 0, i32 0
  store i32 1103117682, i32* %15
  br label %64

; <label>:64:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIxSaIxEES1_IS3_SaIS3_EEEC2ERKS5_(%"class.__gnu_cxx::__normal_iterator.33"*, %"class.std::vector.10"** dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.33"*, align 8
  %4 = alloca %"class.std::vector.10"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %0, %"class.__gnu_cxx::__normal_iterator.33"** %3, align 8
  store %"class.std::vector.10"** %1, %"class.std::vector.10"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.10"**, %"class.std::vector.10"*** %4, align 8
  %8 = load %"class.std::vector.10"*, %"class.std::vector.10"** %7, align 8
  store %"class.std::vector.10"* %8, %"class.std::vector.10"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.25"*, %"class.std::vector.10"** dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.25"*, align 8
  %4 = alloca %"class.std::vector.10"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.25"* %0, %"class.__gnu_cxx::__normal_iterator.25"** %3, align 8
  store %"class.std::vector.10"** %1, %"class.std::vector.10"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.25"*, %"class.__gnu_cxx::__normal_iterator.25"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.10"**, %"class.std::vector.10"*** %4, align 8
  %8 = load %"class.std::vector.10"*, %"class.std::vector.10"** %7, align 8
  store %"class.std::vector.10"* %8, %"class.std::vector.10"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.10"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.25"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.10"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.826
  %6 = load i32, i32* @y.827
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1435798800, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %51
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1435798800, label %18
    i32 340574220, label %26
    i32 -1491680066, label %45
    i32 63503543, label %47
  ]

; <label>:17:                                     ; preds = %15
  br label %51

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 340574220, i32 63503543
  store i32 %25, i32* %14
  br label %51

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.25"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.25"* %0, %"class.__gnu_cxx::__normal_iterator.25"** %27, align 8
  %28 = load %"class.__gnu_cxx::__normal_iterator.25"*, %"class.__gnu_cxx::__normal_iterator.25"** %27, align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %28, i32 0, i32 0
  store %"class.std::vector.10"** %29, %"class.std::vector.10"*** %2
  %30 = load i32, i32* @x.826
  %31 = load i32, i32* @y.827
  %32 = sub i32 %30, -174013618
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -174013618
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -1491680066, i32 63503543
  store i32 %44, i32* %14
  br label %51

; <label>:45:                                     ; preds = %15
  %46 = load volatile %"class.std::vector.10"**, %"class.std::vector.10"*** %2
  ret %"class.std::vector.10"** %46

; <label>:47:                                     ; preds = %15
  %48 = alloca %"class.__gnu_cxx::__normal_iterator.25"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.25"* %0, %"class.__gnu_cxx::__normal_iterator.25"** %48, align 8
  %49 = load %"class.__gnu_cxx::__normal_iterator.25"*, %"class.__gnu_cxx::__normal_iterator.25"** %48, align 8
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %49, i32 0, i32 0
  store i32 340574220, i32* %14
  br label %51

; <label>:51:                                     ; preds = %47, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.10"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.10"*, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %2, align 8
  %3 = load %"class.std::vector.10"*, %"class.std::vector.10"** %2, align 8
  %4 = bitcast %"class.std::vector.10"* %3 to %"struct.std::_Vector_base.11"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8
  %8 = bitcast %"class.std::vector.10"* %3 to %"struct.std::_Vector_base.11"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = ptrtoint i64* %7 to i64
  %13 = ptrtoint i64* %11 to i64
  %14 = add i64 %12, 6741744948359482091
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, 6741744948359482091
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 8
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIxEE17_S_select_on_copyERKS1_(%"class.std::allocator.12"* noalias sret, %"class.std::allocator.12"* dereferenceable(1)) #1 comdat align 2 {
  %3 = alloca %"class.std::allocator.12"*, align 8
  store %"class.std::allocator.12"* %1, %"class.std::allocator.12"** %3, align 8
  %4 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %3, align 8
  call void @_ZNSt16allocator_traitsISaIxEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.12"* sret %0, %"class.std::allocator.12"* dereferenceable(1) %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.12"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.11"*, align 8
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %2, align 8
  %3 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %4 to %"class.std::allocator.12"*
  ret %"class.std::allocator.12"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxxET0_T_SA_S9_RSaIT1_E(i64*, i64*, i64*, %"class.std::allocator.12"* dereferenceable(1)) #1 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.12"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %5, i32 0, i32 0
  store i64* %0, i64** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %6, i32 0, i32 0
  store i64* %1, i64** %12, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.12"* %3, %"class.std::allocator.12"** %8, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %9 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %10 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load i64*, i64** %7, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %9, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %10, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = call i64* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64* %19, i64* %21, i64* %17)
  ret i64* %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt6vectorIxSaIxEE5beginEv(%"class.std::vector.10"*) #0 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.836
  %6 = load i32, i32* @y.837
  %7 = sub i32 %5, -1405429881
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1405429881
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1516872188, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %90
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1516872188, label %19
    i32 -913748044, label %39
    i32 -491755026, label %77
    i32 1659270118, label %79
  ]

; <label>:18:                                     ; preds = %16
  br label %90

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -913748044, i32 1659270118
  store i32 %38, i32* %15
  br label %90

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %41 = alloca %"class.std::vector.10"*, align 8
  %42 = alloca i64*, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %41, align 8
  %43 = load %"class.std::vector.10"*, %"class.std::vector.10"** %41, align 8
  %44 = bitcast %"class.std::vector.10"* %43 to %"struct.std::_Vector_base.11"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %45, i32 0, i32 0
  %47 = load i64*, i64** %46, align 8
  store i64* %47, i64** %42, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.34"* %40, i64** dereferenceable(8) %42) #10
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %40, i32 0, i32 0
  %49 = load i64*, i64** %48, align 8
  store i64* %49, i64** %2
  %50 = load i32, i32* @x.836
  %51 = load i32, i32* @y.837
  %52 = add i32 %50, -587764792
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -587764792
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -491755026, i32 1659270118
  store i32 %76, i32* %15
  br label %90

; <label>:77:                                     ; preds = %16
  %78 = load volatile i64*, i64** %2
  ret i64* %78

; <label>:79:                                     ; preds = %16
  %80 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %81 = alloca %"class.std::vector.10"*, align 8
  %82 = alloca i64*, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %81, align 8
  %83 = load %"class.std::vector.10"*, %"class.std::vector.10"** %81, align 8
  %84 = bitcast %"class.std::vector.10"* %83 to %"struct.std::_Vector_base.11"*
  %85 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %84, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %85, i32 0, i32 0
  %87 = load i64*, i64** %86, align 8
  store i64* %87, i64** %82, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.34"* %80, i64** dereferenceable(8) %82) #10
  %88 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %80, i32 0, i32 0
  %89 = load i64*, i64** %88, align 8
  store i32 -913748044, i32* %15
  br label %90

; <label>:90:                                     ; preds = %79, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt6vectorIxSaIxEE3endEv(%"class.std::vector.10"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %3 = alloca %"class.std::vector.10"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %3, align 8
  %5 = load %"class.std::vector.10"*, %"class.std::vector.10"** %3, align 8
  %6 = bitcast %"class.std::vector.10"* %5 to %"struct.std::_Vector_base.11"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load i64*, i64** %8, align 8
  store i64* %9, i64** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.34"* %2, i64** dereferenceable(8) %4) #10
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %2, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  ret i64* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.12"* noalias sret, %"class.std::allocator.12"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.840
  %6 = load i32, i32* @y.841
  %7 = add i32 %5, 1103731933
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1103731933
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1033246515, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1033246515, label %19
    i32 1924364859, label %27
    i32 1561173034, label %57
    i32 1909500447, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1924364859, i32 1909500447
  store i32 %26, i32* %15
  br label %61

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.12"*, align 8
  store %"class.std::allocator.12"* %1, %"class.std::allocator.12"** %28, align 8
  %29 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %28, align 8
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator.12"* %0, %"class.std::allocator.12"* dereferenceable(1) %29) #10
  %30 = load i32, i32* @x.840
  %31 = load i32, i32* @y.841
  %32 = add i32 %30, 392684312
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 392684312
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 1561173034, i32 1909500447
  store i32 %56, i32* %15
  br label %61

; <label>:57:                                     ; preds = %16
  ret void

; <label>:58:                                     ; preds = %16
  %59 = alloca %"class.std::allocator.12"*, align 8
  store %"class.std::allocator.12"* %1, %"class.std::allocator.12"** %59, align 8
  %60 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %59, align 8
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator.12"* %0, %"class.std::allocator.12"* dereferenceable(1) %60) #10
  store i32 1924364859, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxEC2ERKS_(%"class.std::allocator.12"*, %"class.std::allocator.12"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.12"*, align 8
  %4 = alloca %"class.std::allocator.12"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %3, align 8
  store %"class.std::allocator.12"* %1, %"class.std::allocator.12"** %4, align 8
  %5 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %3, align 8
  %6 = bitcast %"class.std::allocator.12"* %5 to %"class.__gnu_cxx::new_allocator.13"*
  %7 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %4, align 8
  %8 = bitcast %"class.std::allocator.12"* %7 to %"class.__gnu_cxx::new_allocator.13"*
  call void @_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_(%"class.__gnu_cxx::new_allocator.13"* %6, %"class.__gnu_cxx::new_allocator.13"* dereferenceable(1) %8) #10
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64*, i64*, i64*) #1 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %4, i32 0, i32 0
  store i64* %0, i64** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %5, i32 0, i32 0
  store i64* %1, i64** %11, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %8 to i8*
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %9 to i8*
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load i64*, i64** %6, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %8, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %9, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = call i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxEET0_T_SC_SB_(i64* %18, i64* %20, i64* %16)
  ret i64* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxEET0_T_SC_SB_(i64*, i64*, i64*) #1 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.846
  %8 = load i32, i32* @y.847
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 1998398714, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %80
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1998398714, label %20
    i32 662075902, label %28
    i32 -1170610139, label %60
    i32 1749820145, label %62
  ]

; <label>:19:                                     ; preds = %17
  br label %80

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 662075902, i32 1749820145
  store i32 %27, i32* %16
  br label %80

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %31 = alloca i64*, align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %33 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %29, i32 0, i32 0
  store i64* %0, i64** %34, align 8
  %35 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %30, i32 0, i32 0
  store i64* %1, i64** %35, align 8
  store i64* %2, i64** %31, align 8
  %36 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %32 to i8*
  %37 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 8, i32 8, i1 false)
  %38 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %33 to i8*
  %39 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 8, i1 false)
  %40 = load i64*, i64** %31, align 8
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %32, i32 0, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %33, i32 0, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = call i64* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64* %42, i64* %44, i64* %40)
  store i64* %45, i64** %4
  %46 = load i32, i32* @x.846
  %47 = load i32, i32* @y.847
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -1170610139, i32 1749820145
  store i32 %59, i32* %16
  br label %80

; <label>:60:                                     ; preds = %17
  %61 = load volatile i64*, i64** %4
  ret i64* %61

; <label>:62:                                     ; preds = %17
  %63 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %64 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %65 = alloca i64*, align 8
  %66 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %67 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %68 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %63, i32 0, i32 0
  store i64* %0, i64** %68, align 8
  %69 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %64, i32 0, i32 0
  store i64* %1, i64** %69, align 8
  store i64* %2, i64** %65, align 8
  %70 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %66 to i8*
  %71 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %70, i8* %71, i64 8, i32 8, i1 false)
  %72 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %67 to i8*
  %73 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %72, i8* %73, i64 8, i32 8, i1 false)
  %74 = load i64*, i64** %65, align 8
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %66, i32 0, i32 0
  %76 = load i64*, i64** %75, align 8
  %77 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %67, i32 0, i32 0
  %78 = load i64*, i64** %77, align 8
  %79 = call i64* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64* %76, i64* %78, i64* %74)
  store i32 662075902, i32* %16
  br label %80

; <label>:80:                                     ; preds = %62, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64*, i64*, i64*) #1 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %4, i32 0, i32 0
  store i64* %0, i64** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %5, i32 0, i32 0
  store i64* %1, i64** %12, align 8
  store i64* %2, i64** %6, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %8, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = call i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64* %16)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %7, i32 0, i32 0
  store i64* %17, i64** %18, align 8
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %10 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %10, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = call i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64* %22)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %9, i32 0, i32 0
  store i64* %23, i64** %24, align 8
  %25 = load i64*, i64** %6, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %7, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %9, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = call i64* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET1_T0_SA_S9_(i64* %27, i64* %29, i64* %25)
  ret i64* %30
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET1_T0_SA_S9_(i64*, i64*, i64*) #1 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %4, i32 0, i32 0
  store i64* %0, i64** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %5, i32 0, i32 0
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %7, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64* %19)
  %21 = load i64*, i64** %6, align 8
  %22 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %21)
  %23 = call i64* @_ZSt13__copy_move_aILb0EPKxPxET1_T0_S4_S3_(i64* %15, i64* %20, i64* %22)
  ret i64* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64*) #1 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %3, i32 0, i32 0
  store i64* %0, i64** %5, align 8
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %4 to i8*
  %7 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 8, i32 8, i1 false)
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %4, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = call i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb0EE7_S_baseES7_(i64* %9)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %2, i32 0, i32 0
  store i64* %10, i64** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %2, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  ret i64* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt13__copy_move_aILb0EPKxPxET1_T0_S4_S3_(i64*, i64*, i64*) #1 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.854
  %8 = load i32, i32* @y.855
  %9 = sub i32 %7, 303294131
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 303294131
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 735287437, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %76
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 735287437, label %21
    i32 -1480293246, label %41
    i32 1955139770, label %65
    i32 -1250050087, label %67
  ]

; <label>:20:                                     ; preds = %18
  br label %76

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1480293246, i32 -1250050087
  store i32 %40, i32* %17
  br label %76

; <label>:41:                                     ; preds = %18
  %42 = alloca i64*, align 8
  %43 = alloca i64*, align 8
  %44 = alloca i64*, align 8
  %45 = alloca i8, align 1
  store i64* %0, i64** %42, align 8
  store i64* %1, i64** %43, align 8
  store i64* %2, i64** %44, align 8
  store i8 1, i8* %45, align 1
  %46 = load i64*, i64** %42, align 8
  %47 = load i64*, i64** %43, align 8
  %48 = load i64*, i64** %44, align 8
  %49 = call i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64* %46, i64* %47, i64* %48)
  store i64* %49, i64** %4
  %50 = load i32, i32* @x.854
  %51 = load i32, i32* @y.855
  %52 = sub i32 %50, 1641095669
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 1641095669
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 1955139770, i32 -1250050087
  store i32 %64, i32* %17
  br label %76

; <label>:65:                                     ; preds = %18
  %66 = load volatile i64*, i64** %4
  ret i64* %66

; <label>:67:                                     ; preds = %18
  %68 = alloca i64*, align 8
  %69 = alloca i64*, align 8
  %70 = alloca i64*, align 8
  %71 = alloca i8, align 1
  store i64* %0, i64** %68, align 8
  store i64* %1, i64** %69, align 8
  store i64* %2, i64** %70, align 8
  store i8 1, i8* %71, align 1
  %72 = load i64*, i64** %68, align 8
  %73 = load i64*, i64** %69, align 8
  %74 = load i64*, i64** %70, align 8
  %75 = call i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64* %72, i64* %73, i64* %74)
  store i32 -1480293246, i32* %17
  br label %76

; <label>:76:                                     ; preds = %67, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64*) #1 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %2, i32 0, i32 0
  store i64* %0, i64** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %3, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = call i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb1EE7_S_baseES7_(i64* %8)
  ret i64* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64*, i64*, i64*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64, align 8
  store i64* %0, i64** %5, align 8
  store i64* %1, i64** %6, align 8
  store i64* %2, i64** %7, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = load i64*, i64** %5, align 8
  %11 = ptrtoint i64* %9 to i64
  %12 = ptrtoint i64* %10 to i64
  %13 = sub i64 %11, 2013852250624415649
  %14 = sub i64 %13, %12
  %15 = add i64 %14, 2013852250624415649
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 8
  store i64 %17, i64* %8, align 8
  %18 = load i64, i64* %8, align 8
  store i64 %18, i64* %4
  %19 = alloca i32
  store i32 1302850802, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %116
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1302850802, label %23
    i32 1769829451, label %27
    i32 1616499946, label %42
    i32 904380644, label %76
    i32 -1079680756, label %77
    i32 -673123126, label %81
  ]

; <label>:22:                                     ; preds = %20
  br label %116

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %4
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 1769829451, i32 -1079680756
  store i32 %26, i32* %19
  br label %116

; <label>:27:                                     ; preds = %20
  %28 = load i32, i32* @x.858
  %29 = load i32, i32* @y.859
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  %41 = select i1 %39, i32 1616499946, i32 -673123126
  store i32 %41, i32* %19
  br label %116

; <label>:42:                                     ; preds = %20
  %43 = load i64*, i64** %7, align 8
  %44 = bitcast i64* %43 to i8*
  %45 = load i64*, i64** %5, align 8
  %46 = bitcast i64* %45 to i8*
  %47 = load i64, i64* %8, align 8
  %48 = mul i64 8, %47
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %44, i8* %46, i64 %48, i32 8, i1 false)
  %49 = load i32, i32* @x.858
  %50 = load i32, i32* @y.859
  %51 = sub i32 %49, 1774959009
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 1774959009
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 904380644, i32 -673123126
  store i32 %75, i32* %19
  br label %116

; <label>:76:                                     ; preds = %20
  store i32 -1079680756, i32* %19
  br label %116

; <label>:77:                                     ; preds = %20
  %78 = load i64*, i64** %7, align 8
  %79 = load i64, i64* %8, align 8
  %80 = getelementptr inbounds i64, i64* %78, i64 %79
  ret i64* %80

; <label>:81:                                     ; preds = %20
  %82 = load i64*, i64** %7, align 8
  %83 = bitcast i64* %82 to i8*
  %84 = load i64*, i64** %5, align 8
  %85 = bitcast i64* %84 to i8*
  %86 = load i64, i64* %8, align 8
  %87 = add i64 8, -6894463354150741574
  %88 = sub i64 %87, %86
  %89 = sub i64 %88, -6894463354150741574
  %90 = sub i64 8, %86
  %91 = mul i64 %89, %86
  %92 = sub i64 0, 6993985778107154350
  %93 = sub i64 %92, 8
  %94 = add i64 %93, 6993985778107154350
  %95 = sub i64 0, 8
  %96 = sub i64 0, %94
  %97 = sub i64 0, %86
  %98 = add i64 %96, %97
  %99 = sub i64 0, %98
  %100 = add i64 %94, %86
  %101 = add i64 8, -3358504749665976770
  %102 = sub i64 %101, %86
  %103 = sub i64 %102, -3358504749665976770
  %104 = sub i64 8, %86
  %105 = mul i64 %103, %86
  %106 = sub i64 8, 8438093281731756307
  %107 = sub i64 %106, %86
  %108 = add i64 %107, 8438093281731756307
  %109 = sub i64 8, %86
  %110 = mul i64 %108, %86
  %111 = sub i64 0, %86
  %112 = add i64 8, %111
  %113 = sub i64 8, %86
  %114 = mul i64 %112, %86
  %115 = mul i64 8, %86
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %83, i8* %85, i64 %115, i32 8, i1 false)
  store i32 1616499946, i32* %19
  br label %116

; <label>:116:                                    ; preds = %81, %76, %42, %27, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb1EE7_S_baseES7_(i64*) #0 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.860
  %6 = load i32, i32* @y.861
  %7 = sub i32 %5, -1510443259
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1510443259
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1523171234, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %53
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1523171234, label %19
    i32 -1231260685, label %27
    i32 -1730981048, label %46
    i32 -1006496231, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %53

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1231260685, i32 -1006496231
  store i32 %26, i32* %15
  br label %53

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %28, i32 0, i32 0
  store i64* %0, i64** %29, align 8
  %30 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.34"* %28) #10
  %31 = load i64*, i64** %30, align 8
  store i64* %31, i64** %2
  %32 = load i32, i32* @x.860
  %33 = load i32, i32* @y.861
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -1730981048, i32 -1006496231
  store i32 %45, i32* %15
  br label %53

; <label>:46:                                     ; preds = %16
  %47 = load volatile i64*, i64** %2
  ret i64* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %49, i32 0, i32 0
  store i64* %0, i64** %50, align 8
  %51 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.34"* %49) #10
  %52 = load i64*, i64** %51, align 8
  store i32 -1231260685, i32* %15
  br label %53

; <label>:53:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.34"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.34"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.34"* %0, %"class.__gnu_cxx::__normal_iterator.34"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.34"*, %"class.__gnu_cxx::__normal_iterator.34"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %3, i32 0, i32 0
  ret i64** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb0EE7_S_baseES7_(i64*) #0 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.864
  %6 = load i32, i32* @y.865
  %7 = sub i32 %5, 1190294104
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1190294104
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1306744341, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %71
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1306744341, label %19
    i32 -185372298, label %39
    i32 -808925181, label %61
    i32 -1245544479, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %71

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -185372298, i32 -1245544479
  store i32 %38, i32* %15
  br label %71

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %41, i32 0, i32 0
  store i64* %0, i64** %42, align 8
  %43 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %40 to i8*
  %44 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 8, i32 8, i1 false)
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %40, i32 0, i32 0
  %46 = load i64*, i64** %45, align 8
  store i64* %46, i64** %2
  %47 = load i32, i32* @x.864
  %48 = load i32, i32* @y.865
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -808925181, i32 -1245544479
  store i32 %60, i32* %15
  br label %71

; <label>:61:                                     ; preds = %16
  %62 = load volatile i64*, i64** %2
  ret i64* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %65 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %65, i32 0, i32 0
  store i64* %0, i64** %66, align 8
  %67 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %64 to i8*
  %68 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %67, i8* %68, i64 8, i32 8, i1 false)
  %69 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %64, i32 0, i32 0
  %70 = load i64*, i64** %69, align 8
  store i32 -185372298, i32* %15
  br label %71

; <label>:71:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.34"*, i64** dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.34"*, align 8
  %4 = alloca i64**, align 8
  store %"class.__gnu_cxx::__normal_iterator.34"* %0, %"class.__gnu_cxx::__normal_iterator.34"** %3, align 8
  store i64** %1, i64*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.34"*, %"class.__gnu_cxx::__normal_iterator.34"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %5, i32 0, i32 0
  %7 = load i64**, i64*** %4, align 8
  %8 = load i64*, i64** %7, align 8
  store i64* %8, i64** %6, align 8
  ret void
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline noreturn nounwind }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
