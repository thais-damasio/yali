; ModuleID = 'Project_CodeNet_C++1400/p02363/s185979257.cpp'
source_filename = "Project_CodeNet_C++1400/p02363/s185979257.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl" }
%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl" = type { i64*, i64*, i64* }
%"class.std::vector.3" = type { %"struct.std::_Vector_base.4" }
%"struct.std::_Vector_base.4" = type { %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl" }
%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl" = type { double*, double*, double* }
%"class.std::vector.8" = type { %"struct.std::_Vector_base.9" }
%"struct.std::_Vector_base.9" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl" = type { %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* }
%class.Graph = type { %"class.std::vector.13" }
%"class.std::vector.13" = type { %"struct.std::_Vector_base.14" }
%"struct.std::_Vector_base.14" = type { %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl" }
%"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl" = type { %"struct.Graph::Node"*, %"struct.Graph::Node"*, %"struct.Graph::Node"* }
%"struct.Graph::Node" = type { i64, %"class.std::vector.18" }
%"class.std::vector.18" = type { %"struct.std::_Vector_base.19" }
%"struct.std::_Vector_base.19" = type { %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl" }
%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl" = type { %"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"* }
%"struct.Graph::Edge" = type { i64, i64 }
%"class.std::vector.23" = type { %"struct.std::_Vector_base.24" }
%"struct.std::_Vector_base.24" = type { %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl" = type { %"class.std::vector"*, %"class.std::vector"*, %"class.std::vector"* }
%"class.std::allocator.0" = type { i8 }
%"class.std::allocator.25" = type { i8 }
%"class.__gnu_cxx::new_allocator.1" = type { i8 }
%"class.__gnu_cxx::new_allocator.26" = type { i8 }
%"class.__gnu_cxx::__normal_iterator" = type { %"struct.Graph::Node"* }
%"class.__gnu_cxx::__normal_iterator.29" = type { %"struct.Graph::Edge"* }
%"class.std::allocator.15" = type { i8 }
%"class.__gnu_cxx::new_allocator.16" = type { i8 }
%"class.std::allocator.20" = type { i8 }
%"class.__gnu_cxx::new_allocator.21" = type { i8 }
%"class.std::move_iterator" = type { %"struct.Graph::Node"* }
%"class.std::move_iterator.28" = type { %"struct.Graph::Edge"* }
%"class.__gnu_cxx::__normal_iterator.30" = type { %"struct.Graph::Edge"* }
%"class.std::move_iterator.31" = type { i64* }
%"class.std::allocator.5" = type { i8 }
%"class.__gnu_cxx::new_allocator.6" = type { i8 }
%"class.std::move_iterator.32" = type { double* }
%"class.std::allocator.10" = type { i8 }
%"class.__gnu_cxx::new_allocator.11" = type { i8 }
%"class.std::move_iterator.33" = type { %"class.std::__cxx11::basic_string"* }
%"class.__gnu_cxx::__normal_iterator.34" = type { i64* }

$_ZNSt6vectorIxSaIxEE9push_backEOx = comdat any

$_ZNSt6vectorIdSaIdEE9push_backEOd = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_ = comdat any

$_ZN5GraphC2Ex = comdat any

$_ZN5Graph8makeEdgeExxxb = comdat any

$_ZNSaIxEC2Ev = comdat any

$_ZNSt6vectorIxSaIxEEC2EmRKxRKS0_ = comdat any

$_ZNSaISt6vectorIxSaIxEEEC2Ev = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EEC2EmRKS1_RKS2_ = comdat any

$_ZNSaISt6vectorIxSaIxEEED2Ev = comdat any

$_ZNSt6vectorIxSaIxEED2Ev = comdat any

$_ZNSaIxED2Ev = comdat any

$_ZN5Graph11bellmanFordExx = comdat any

$_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm = comdat any

$_ZNSt6vectorIxSaIxEEixEm = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev = comdat any

$_ZN5GraphD2Ev = comdat any

$_ZNSt6vectorIN5Graph4NodeESaIS1_EEC2Ev = comdat any

$_ZNSt6vectorIN5Graph4NodeESaIS1_EE9push_backEOS1_ = comdat any

$_ZN5Graph4NodeC2Ev = comdat any

$_ZN5Graph4NodeD2Ev = comdat any

$_ZNSt6vectorIN5Graph4NodeESaIS1_EED2Ev = comdat any

$_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EEC2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaIN5Graph4NodeEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEEC2Ev = comdat any

$_ZNSt6vectorIN5Graph4NodeESaIS1_EE12emplace_backIJS1_EEEvDpOT_ = comdat any

$_ZSt4moveIRN5Graph4NodeEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4NodeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_ = comdat any

$_ZSt7forwardIN5Graph4NodeEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt6vectorIN5Graph4NodeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE9constructIS2_JS2_EEEvPT_DpOT0_ = comdat any

$_ZN5Graph4NodeC2EOS0_ = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EEC2EOS3_ = comdat any

$_ZSt4moveIRSt6vectorIN5Graph4EdgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EEC2EOS3_ = comdat any

$_ZSt4moveIRSaIN5Graph4EdgeEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implC2EOS2_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_impl12_M_swap_dataERS4_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEEC2ERKS3_ = comdat any

$_ZSt4swapIPN5Graph4EdgeEEvRT_S4_ = comdat any

$_ZSt4moveIRPN5Graph4EdgeEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNKSt6vectorIN5Graph4NodeESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE11_M_allocateEm = comdat any

$_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPN5Graph4NodeES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4NodeEEE7destroyIS1_EEvRS2_PT_ = comdat any

$_ZSt8_DestroyIPN5Graph4NodeES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNKSt6vectorIN5Graph4NodeESaIS1_EE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4NodeEEE8max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIN5Graph4NodeEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4NodeEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph4NodeEES3_S2_ET0_T_S6_S5_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4NodeESt13move_iteratorIS2_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph4NodeEES3_ET0_T_S6_S5_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5Graph4NodeEES5_EET0_T_S8_S7_ = comdat any

$_ZStneIPN5Graph4NodeEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZSt10_ConstructIN5Graph4NodeEJS1_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofIN5Graph4NodeEEPT_RS2_ = comdat any

$_ZNKSt13move_iteratorIPN5Graph4NodeEEdeEv = comdat any

$_ZNSt13move_iteratorIPN5Graph4NodeEEppEv = comdat any

$_ZSt8_DestroyIPN5Graph4NodeEEvT_S3_ = comdat any

$_ZSteqIPN5Graph4NodeEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZNKSt13move_iteratorIPN5Graph4NodeEE4baseEv = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPN5Graph4NodeEEEvT_S5_ = comdat any

$_ZSt8_DestroyIN5Graph4NodeEEvPT_ = comdat any

$_ZNSt13move_iteratorIPN5Graph4NodeEEC2ES2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE7destroyIS2_EEvPT_ = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4NodeEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE10deallocateEPS2_m = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaIN5Graph4EdgeEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEEC2Ev = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPN5Graph4EdgeES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPN5Graph4EdgeEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPN5Graph4EdgeEEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE10deallocateEPS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEED2Ev = comdat any

$_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EED2Ev = comdat any

$_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSaIN5Graph4NodeEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEED2Ev = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EE9push_backEOS1_ = comdat any

$_ZN5Graph4EdgeC2Exx = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EE12emplace_backIJS1_EEEvDpOT_ = comdat any

$_ZSt4moveIRN5Graph4EdgeEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_ = comdat any

$_ZSt7forwardIN5Graph4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE9constructIS2_JS2_EEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE11_M_allocateEm = comdat any

$_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPN5Graph4EdgeES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE7destroyIS1_EEvRS2_PT_ = comdat any

$_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE8max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIN5Graph4EdgeEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph4EdgeEES3_S2_ET0_T_S6_S5_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4EdgeESt13move_iteratorIS2_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph4EdgeEES3_ET0_T_S6_S5_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5Graph4EdgeEES5_EET0_T_S8_S7_ = comdat any

$_ZStneIPN5Graph4EdgeEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZSt10_ConstructIN5Graph4EdgeEJS1_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofIN5Graph4EdgeEEPT_RS2_ = comdat any

$_ZNKSt13move_iteratorIPN5Graph4EdgeEEdeEv = comdat any

$_ZNSt13move_iteratorIPN5Graph4EdgeEEppEv = comdat any

$_ZSteqIPN5Graph4EdgeEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZNKSt13move_iteratorIPN5Graph4EdgeEE4baseEv = comdat any

$_ZNSt13move_iteratorIPN5Graph4EdgeEEC2ES2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE7destroyIS2_EEvPT_ = comdat any

$_ZNSt6vectorIN5Graph4NodeESaIS1_EE5beginEv = comdat any

$_ZNSt6vectorIN5Graph4NodeESaIS1_EE3endEv = comdat any

$_ZN9__gnu_cxxneIPN5Graph4NodeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4NodeESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZN5Graph4NodeC2ERKS0_ = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EE5beginEv = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EE3endEv = comdat any

$_ZN9__gnu_cxxneIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEppEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4NodeESt6vectorIS2_SaIS2_EEEppEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4NodeESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4NodeESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EEC2ERKS3_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN5Graph4EdgeEEE17_S_select_on_copyERKS3_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EEC2EmRKS2_ = comdat any

$_ZNSaIN5Graph4EdgeEED2Ev = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E = comdat any

$_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE5beginEv = comdat any

$_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE3endEv = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE37select_on_container_copy_constructionERKS2_ = comdat any

$_ZNSaIN5Graph4EdgeEEC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implC2ERKS2_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE17_M_create_storageEm = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_ = comdat any

$_ZN9__gnu_cxxneIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_ = comdat any

$_ZSt10_ConstructIN5Graph4EdgeEJRKS1_EEvPT_DpOT0_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEppEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZSt7forwardIRKN5Graph4EdgeEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS4_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZNSt6vectorIxSaIxEE12emplace_backIJxEEEvDpOT_ = comdat any

$_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNSt16allocator_traitsISaIxEE9constructIxJxEEEvRS0_PT_DpOT0_ = comdat any

$_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZNSt6vectorIxSaIxEE19_M_emplace_back_auxIJxEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE9constructIxJxEEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm = comdat any

$_ZNKSt6vectorIxSaIxEE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPxS0_SaIxEET0_T_S3_S2_RT1_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIxEE7destroyIxEEvRS0_PT_ = comdat any

$_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm = comdat any

$_ZNKSt6vectorIxSaIxEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIxEE8max_sizeERKS0_ = comdat any

$_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIxEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPxES1_xET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPxES1_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPxES3_EET0_T_S6_S5_ = comdat any

$_ZSt4copyISt13move_iteratorIPxES1_ET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb1EPxS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb1EPxS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPxELb1EE7_S_baseES2_ = comdat any

$_ZNKSt13move_iteratorIPxE4baseEv = comdat any

$_ZNSt13move_iteratorIPxEC2ES0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE7destroyIxEEvPT_ = comdat any

$_ZSt8_DestroyIPxEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_ = comdat any

$_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm = comdat any

$_ZNSt6vectorIdSaIdEE12emplace_backIJdEEEvDpOT_ = comdat any

$_ZSt4moveIRdEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_ = comdat any

$_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZNSt6vectorIdSaIdEE19_M_emplace_back_auxIJdEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm = comdat any

$_ZNKSt6vectorIdSaIdEE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_ = comdat any

$_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIdEE7destroyIdEEvRS0_PT_ = comdat any

$_ZSt8_DestroyIPddEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm = comdat any

$_ZNKSt6vectorIdSaIdEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_ = comdat any

$_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIdEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPdES1_dET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPdSt13move_iteratorIS0_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPdES1_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPdES3_EET0_T_S6_S5_ = comdat any

$_ZSt4copyISt13move_iteratorIPdES1_ET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb1EPdS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPdEENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb1EPdS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__niter_baseIPdENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseIPdLb0EE7_S_baseES0_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPdELb1EE7_S_baseES2_ = comdat any

$_ZNKSt13move_iteratorIPdE4baseEv = comdat any

$_ZNSt13move_iteratorIPdEC2ES0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIdE7destroyIdEEvPT_ = comdat any

$_ZSt8_DestroyIPdEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_ = comdat any

$_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm = comdat any

$_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_ = comdat any

$_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_ = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_ = comdat any

$_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIJS5_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JS6_EEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm = comdat any

$_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_ = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS5_EEvRS6_PT_ = comdat any

$_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m = comdat any

$_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_ = comdat any

$_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_S6_ET0_T_SA_S9_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt13move_iteratorIS6_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_ET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES9_EET0_T_SC_SB_ = comdat any

$_ZStneIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_ = comdat any

$_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_ = comdat any

$_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv = comdat any

$_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv = comdat any

$_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_ = comdat any

$_ZSteqIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_ = comdat any

$_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_ = comdat any

$_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_ = comdat any

$_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ES6_ = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7destroyIS6_EEvPT_ = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIxEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIxED2Ev = comdat any

$_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIxSaIxEE18_M_fill_initializeEmRKx = comdat any

$_ZNSt12_Vector_baseIxSaIxEED2Ev = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_ = comdat any

$_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZSt20uninitialized_fill_nIPxmxET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPxmxEET_S3_T0_RKT1_ = comdat any

$_ZSt6fill_nIPxmxET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EEC2EmRKS3_ = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EE18_M_fill_initializeEmRKS1_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZNSaISt6vectorIxSaIxEEEC2ERKS2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2ERKS4_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8max_sizeEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPSt6vectorIxSaIxEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt20uninitialized_fill_nIPSt6vectorIxSaIxEEmS2_ET_S4_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIxSaIxEEmS4_EET_S6_T0_RKT1_ = comdat any

$_ZSt10_ConstructISt6vectorIxSaIxEEJRKS2_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt6vectorIxSaIxEEEPT_RS3_ = comdat any

$_ZSt8_DestroyIPSt6vectorIxSaIxEEEvT_S4_ = comdat any

$_ZSt7forwardIRKSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS5_E4typeE = comdat any

$_ZNSt6vectorIxSaIxEEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIxEE17_S_select_on_copyERKS1_ = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxxET0_T_SA_S9_RSaIT1_E = comdat any

$_ZNKSt6vectorIxSaIxEE5beginEv = comdat any

$_ZNKSt6vectorIxSaIxEE3endEv = comdat any

$_ZNSt16allocator_traitsISaIxEE37select_on_container_copy_constructionERKS0_ = comdat any

$_ZNSaIxEC2ERKS_ = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxEET0_T_SC_SB_ = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET1_T0_SA_S9_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_ = comdat any

$_ZSt13__copy_move_aILb0EPKxPxET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb1EE7_S_baseES7_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb0EE7_S_baseES7_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIxSaIxEEEEvT_S6_ = comdat any

$_ZSt8_DestroyISt6vectorIxSaIxEEEvPT_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE10deallocateEPS3_m = comdat any

$_ZSt8_DestroyIPSt6vectorIxSaIxEES2_EvT_S4_RSaIT0_E = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@.str.2 = private unnamed_addr constant [28 x i8] c"vector::_M_emplace_back_aux\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s185979257.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0
@x.159 = common global i32 0
@y.160 = common global i32 0
@x.161 = common global i32 0
@y.162 = common global i32 0
@x.163 = common global i32 0
@y.164 = common global i32 0
@x.165 = common global i32 0
@y.166 = common global i32 0
@x.167 = common global i32 0
@y.168 = common global i32 0
@x.169 = common global i32 0
@y.170 = common global i32 0
@x.171 = common global i32 0
@y.172 = common global i32 0
@x.173 = common global i32 0
@y.174 = common global i32 0
@x.175 = common global i32 0
@y.176 = common global i32 0
@x.177 = common global i32 0
@y.178 = common global i32 0
@x.179 = common global i32 0
@y.180 = common global i32 0
@x.181 = common global i32 0
@y.182 = common global i32 0
@x.183 = common global i32 0
@y.184 = common global i32 0
@x.185 = common global i32 0
@y.186 = common global i32 0
@x.187 = common global i32 0
@y.188 = common global i32 0
@x.189 = common global i32 0
@y.190 = common global i32 0
@x.191 = common global i32 0
@y.192 = common global i32 0
@x.193 = common global i32 0
@y.194 = common global i32 0
@x.195 = common global i32 0
@y.196 = common global i32 0
@x.197 = common global i32 0
@y.198 = common global i32 0
@x.199 = common global i32 0
@y.200 = common global i32 0
@x.201 = common global i32 0
@y.202 = common global i32 0
@x.203 = common global i32 0
@y.204 = common global i32 0
@x.205 = common global i32 0
@y.206 = common global i32 0
@x.207 = common global i32 0
@y.208 = common global i32 0
@x.209 = common global i32 0
@y.210 = common global i32 0
@x.211 = common global i32 0
@y.212 = common global i32 0
@x.213 = common global i32 0
@y.214 = common global i32 0
@x.215 = common global i32 0
@y.216 = common global i32 0
@x.217 = common global i32 0
@y.218 = common global i32 0
@x.219 = common global i32 0
@y.220 = common global i32 0
@x.221 = common global i32 0
@y.222 = common global i32 0
@x.223 = common global i32 0
@y.224 = common global i32 0
@x.225 = common global i32 0
@y.226 = common global i32 0
@x.227 = common global i32 0
@y.228 = common global i32 0
@x.229 = common global i32 0
@y.230 = common global i32 0
@x.231 = common global i32 0
@y.232 = common global i32 0
@x.233 = common global i32 0
@y.234 = common global i32 0
@x.235 = common global i32 0
@y.236 = common global i32 0
@x.237 = common global i32 0
@y.238 = common global i32 0
@x.239 = common global i32 0
@y.240 = common global i32 0
@x.241 = common global i32 0
@y.242 = common global i32 0
@x.243 = common global i32 0
@y.244 = common global i32 0
@x.245 = common global i32 0
@y.246 = common global i32 0
@x.247 = common global i32 0
@y.248 = common global i32 0
@x.249 = common global i32 0
@y.250 = common global i32 0
@x.251 = common global i32 0
@y.252 = common global i32 0
@x.253 = common global i32 0
@y.254 = common global i32 0
@x.255 = common global i32 0
@y.256 = common global i32 0
@x.257 = common global i32 0
@y.258 = common global i32 0
@x.259 = common global i32 0
@y.260 = common global i32 0
@x.261 = common global i32 0
@y.262 = common global i32 0
@x.263 = common global i32 0
@y.264 = common global i32 0
@x.265 = common global i32 0
@y.266 = common global i32 0
@x.267 = common global i32 0
@y.268 = common global i32 0
@x.269 = common global i32 0
@y.270 = common global i32 0
@x.271 = common global i32 0
@y.272 = common global i32 0
@x.273 = common global i32 0
@y.274 = common global i32 0
@x.275 = common global i32 0
@y.276 = common global i32 0
@x.277 = common global i32 0
@y.278 = common global i32 0
@x.279 = common global i32 0
@y.280 = common global i32 0
@x.281 = common global i32 0
@y.282 = common global i32 0
@x.283 = common global i32 0
@y.284 = common global i32 0
@x.285 = common global i32 0
@y.286 = common global i32 0
@x.287 = common global i32 0
@y.288 = common global i32 0
@x.289 = common global i32 0
@y.290 = common global i32 0
@x.291 = common global i32 0
@y.292 = common global i32 0
@x.293 = common global i32 0
@y.294 = common global i32 0
@x.295 = common global i32 0
@y.296 = common global i32 0
@x.297 = common global i32 0
@y.298 = common global i32 0
@x.299 = common global i32 0
@y.300 = common global i32 0
@x.301 = common global i32 0
@y.302 = common global i32 0
@x.303 = common global i32 0
@y.304 = common global i32 0
@x.305 = common global i32 0
@y.306 = common global i32 0
@x.307 = common global i32 0
@y.308 = common global i32 0
@x.309 = common global i32 0
@y.310 = common global i32 0
@x.311 = common global i32 0
@y.312 = common global i32 0
@x.313 = common global i32 0
@y.314 = common global i32 0
@x.315 = common global i32 0
@y.316 = common global i32 0
@x.317 = common global i32 0
@y.318 = common global i32 0
@x.319 = common global i32 0
@y.320 = common global i32 0
@x.321 = common global i32 0
@y.322 = common global i32 0
@x.323 = common global i32 0
@y.324 = common global i32 0
@x.325 = common global i32 0
@y.326 = common global i32 0
@x.327 = common global i32 0
@y.328 = common global i32 0
@x.329 = common global i32 0
@y.330 = common global i32 0
@x.331 = common global i32 0
@y.332 = common global i32 0
@x.333 = common global i32 0
@y.334 = common global i32 0
@x.335 = common global i32 0
@y.336 = common global i32 0
@x.337 = common global i32 0
@y.338 = common global i32 0
@x.339 = common global i32 0
@y.340 = common global i32 0
@x.341 = common global i32 0
@y.342 = common global i32 0
@x.343 = common global i32 0
@y.344 = common global i32 0
@x.345 = common global i32 0
@y.346 = common global i32 0
@x.347 = common global i32 0
@y.348 = common global i32 0
@x.349 = common global i32 0
@y.350 = common global i32 0
@x.351 = common global i32 0
@y.352 = common global i32 0
@x.353 = common global i32 0
@y.354 = common global i32 0
@x.355 = common global i32 0
@y.356 = common global i32 0
@x.357 = common global i32 0
@y.358 = common global i32 0
@x.359 = common global i32 0
@y.360 = common global i32 0
@x.361 = common global i32 0
@y.362 = common global i32 0
@x.363 = common global i32 0
@y.364 = common global i32 0
@x.365 = common global i32 0
@y.366 = common global i32 0
@x.367 = common global i32 0
@y.368 = common global i32 0
@x.369 = common global i32 0
@y.370 = common global i32 0
@x.371 = common global i32 0
@y.372 = common global i32 0
@x.373 = common global i32 0
@y.374 = common global i32 0
@x.375 = common global i32 0
@y.376 = common global i32 0
@x.377 = common global i32 0
@y.378 = common global i32 0
@x.379 = common global i32 0
@y.380 = common global i32 0
@x.381 = common global i32 0
@y.382 = common global i32 0
@x.383 = common global i32 0
@y.384 = common global i32 0
@x.385 = common global i32 0
@y.386 = common global i32 0
@x.387 = common global i32 0
@y.388 = common global i32 0
@x.389 = common global i32 0
@y.390 = common global i32 0
@x.391 = common global i32 0
@y.392 = common global i32 0
@x.393 = common global i32 0
@y.394 = common global i32 0
@x.395 = common global i32 0
@y.396 = common global i32 0
@x.397 = common global i32 0
@y.398 = common global i32 0
@x.399 = common global i32 0
@y.400 = common global i32 0
@x.401 = common global i32 0
@y.402 = common global i32 0
@x.403 = common global i32 0
@y.404 = common global i32 0
@x.405 = common global i32 0
@y.406 = common global i32 0
@x.407 = common global i32 0
@y.408 = common global i32 0
@x.409 = common global i32 0
@y.410 = common global i32 0
@x.411 = common global i32 0
@y.412 = common global i32 0
@x.413 = common global i32 0
@y.414 = common global i32 0
@x.415 = common global i32 0
@y.416 = common global i32 0
@x.417 = common global i32 0
@y.418 = common global i32 0
@x.419 = common global i32 0
@y.420 = common global i32 0
@x.421 = common global i32 0
@y.422 = common global i32 0
@x.423 = common global i32 0
@y.424 = common global i32 0
@x.425 = common global i32 0
@y.426 = common global i32 0
@x.427 = common global i32 0
@y.428 = common global i32 0
@x.429 = common global i32 0
@y.430 = common global i32 0
@x.431 = common global i32 0
@y.432 = common global i32 0
@x.433 = common global i32 0
@y.434 = common global i32 0
@x.435 = common global i32 0
@y.436 = common global i32 0
@x.437 = common global i32 0
@y.438 = common global i32 0
@x.439 = common global i32 0
@y.440 = common global i32 0
@x.441 = common global i32 0
@y.442 = common global i32 0
@x.443 = common global i32 0
@y.444 = common global i32 0
@x.445 = common global i32 0
@y.446 = common global i32 0
@x.447 = common global i32 0
@y.448 = common global i32 0
@x.449 = common global i32 0
@y.450 = common global i32 0
@x.451 = common global i32 0
@y.452 = common global i32 0
@x.453 = common global i32 0
@y.454 = common global i32 0
@x.455 = common global i32 0
@y.456 = common global i32 0
@x.457 = common global i32 0
@y.458 = common global i32 0
@x.459 = common global i32 0
@y.460 = common global i32 0
@x.461 = common global i32 0
@y.462 = common global i32 0
@x.463 = common global i32 0
@y.464 = common global i32 0
@x.465 = common global i32 0
@y.466 = common global i32 0
@x.467 = common global i32 0
@y.468 = common global i32 0
@x.469 = common global i32 0
@y.470 = common global i32 0
@x.471 = common global i32 0
@y.472 = common global i32 0
@x.473 = common global i32 0
@y.474 = common global i32 0
@x.475 = common global i32 0
@y.476 = common global i32 0
@x.477 = common global i32 0
@y.478 = common global i32 0
@x.479 = common global i32 0
@y.480 = common global i32 0
@x.481 = common global i32 0
@y.482 = common global i32 0
@x.483 = common global i32 0
@y.484 = common global i32 0
@x.485 = common global i32 0
@y.486 = common global i32 0
@x.487 = common global i32 0
@y.488 = common global i32 0
@x.489 = common global i32 0
@y.490 = common global i32 0
@x.491 = common global i32 0
@y.492 = common global i32 0
@x.493 = common global i32 0
@y.494 = common global i32 0
@x.495 = common global i32 0
@y.496 = common global i32 0
@x.497 = common global i32 0
@y.498 = common global i32 0
@x.499 = common global i32 0
@y.500 = common global i32 0
@x.501 = common global i32 0
@y.502 = common global i32 0
@x.503 = common global i32 0
@y.504 = common global i32 0
@x.505 = common global i32 0
@y.506 = common global i32 0
@x.507 = common global i32 0
@y.508 = common global i32 0
@x.509 = common global i32 0
@y.510 = common global i32 0
@x.511 = common global i32 0
@y.512 = common global i32 0
@x.513 = common global i32 0
@y.514 = common global i32 0
@x.515 = common global i32 0
@y.516 = common global i32 0
@x.517 = common global i32 0
@y.518 = common global i32 0
@x.519 = common global i32 0
@y.520 = common global i32 0
@x.521 = common global i32 0
@y.522 = common global i32 0
@x.523 = common global i32 0
@y.524 = common global i32 0
@x.525 = common global i32 0
@y.526 = common global i32 0
@x.527 = common global i32 0
@y.528 = common global i32 0
@x.529 = common global i32 0
@y.530 = common global i32 0
@x.531 = common global i32 0
@y.532 = common global i32 0
@x.533 = common global i32 0
@y.534 = common global i32 0
@x.535 = common global i32 0
@y.536 = common global i32 0
@x.537 = common global i32 0
@y.538 = common global i32 0
@x.539 = common global i32 0
@y.540 = common global i32 0
@x.541 = common global i32 0
@y.542 = common global i32 0
@x.543 = common global i32 0
@y.544 = common global i32 0
@x.545 = common global i32 0
@y.546 = common global i32 0
@x.547 = common global i32 0
@y.548 = common global i32 0
@x.549 = common global i32 0
@y.550 = common global i32 0
@x.551 = common global i32 0
@y.552 = common global i32 0
@x.553 = common global i32 0
@y.554 = common global i32 0
@x.555 = common global i32 0
@y.556 = common global i32 0
@x.557 = common global i32 0
@y.558 = common global i32 0
@x.559 = common global i32 0
@y.560 = common global i32 0
@x.561 = common global i32 0
@y.562 = common global i32 0
@x.563 = common global i32 0
@y.564 = common global i32 0
@x.565 = common global i32 0
@y.566 = common global i32 0
@x.567 = common global i32 0
@y.568 = common global i32 0
@x.569 = common global i32 0
@y.570 = common global i32 0
@x.571 = common global i32 0
@y.572 = common global i32 0
@x.573 = common global i32 0
@y.574 = common global i32 0
@x.575 = common global i32 0
@y.576 = common global i32 0
@x.577 = common global i32 0
@y.578 = common global i32 0
@x.579 = common global i32 0
@y.580 = common global i32 0
@x.581 = common global i32 0
@y.582 = common global i32 0
@x.583 = common global i32 0
@y.584 = common global i32 0
@x.585 = common global i32 0
@y.586 = common global i32 0
@x.587 = common global i32 0
@y.588 = common global i32 0
@x.589 = common global i32 0
@y.590 = common global i32 0
@x.591 = common global i32 0
@y.592 = common global i32 0
@x.593 = common global i32 0
@y.594 = common global i32 0
@x.595 = common global i32 0
@y.596 = common global i32 0
@x.597 = common global i32 0
@y.598 = common global i32 0
@x.599 = common global i32 0
@y.600 = common global i32 0
@x.601 = common global i32 0
@y.602 = common global i32 0
@x.603 = common global i32 0
@y.604 = common global i32 0
@x.605 = common global i32 0
@y.606 = common global i32 0
@x.607 = common global i32 0
@y.608 = common global i32 0
@x.609 = common global i32 0
@y.610 = common global i32 0
@x.611 = common global i32 0
@y.612 = common global i32 0
@x.613 = common global i32 0
@y.614 = common global i32 0
@x.615 = common global i32 0
@y.616 = common global i32 0
@x.617 = common global i32 0
@y.618 = common global i32 0
@x.619 = common global i32 0
@y.620 = common global i32 0
@x.621 = common global i32 0
@y.622 = common global i32 0
@x.623 = common global i32 0
@y.624 = common global i32 0
@x.625 = common global i32 0
@y.626 = common global i32 0
@x.627 = common global i32 0
@y.628 = common global i32 0
@x.629 = common global i32 0
@y.630 = common global i32 0
@x.631 = common global i32 0
@y.632 = common global i32 0
@x.633 = common global i32 0
@y.634 = common global i32 0
@x.635 = common global i32 0
@y.636 = common global i32 0
@x.637 = common global i32 0
@y.638 = common global i32 0
@x.639 = common global i32 0
@y.640 = common global i32 0
@x.641 = common global i32 0
@y.642 = common global i32 0
@x.643 = common global i32 0
@y.644 = common global i32 0
@x.645 = common global i32 0
@y.646 = common global i32 0
@x.647 = common global i32 0
@y.648 = common global i32 0
@x.649 = common global i32 0
@y.650 = common global i32 0
@x.651 = common global i32 0
@y.652 = common global i32 0
@x.653 = common global i32 0
@y.654 = common global i32 0
@x.655 = common global i32 0
@y.656 = common global i32 0
@x.657 = common global i32 0
@y.658 = common global i32 0
@x.659 = common global i32 0
@y.660 = common global i32 0
@x.661 = common global i32 0
@y.662 = common global i32 0
@x.663 = common global i32 0
@y.664 = common global i32 0
@x.665 = common global i32 0
@y.666 = common global i32 0
@x.667 = common global i32 0
@y.668 = common global i32 0
@x.669 = common global i32 0
@y.670 = common global i32 0
@x.671 = common global i32 0
@y.672 = common global i32 0
@x.673 = common global i32 0
@y.674 = common global i32 0
@x.675 = common global i32 0
@y.676 = common global i32 0
@x.677 = common global i32 0
@y.678 = common global i32 0
@x.679 = common global i32 0
@y.680 = common global i32 0
@x.681 = common global i32 0
@y.682 = common global i32 0
@x.683 = common global i32 0
@y.684 = common global i32 0
@x.685 = common global i32 0
@y.686 = common global i32 0
@x.687 = common global i32 0
@y.688 = common global i32 0
@x.689 = common global i32 0
@y.690 = common global i32 0
@x.691 = common global i32 0
@y.692 = common global i32 0
@x.693 = common global i32 0
@y.694 = common global i32 0
@x.695 = common global i32 0
@y.696 = common global i32 0
@x.697 = common global i32 0
@y.698 = common global i32 0
@x.699 = common global i32 0
@y.700 = common global i32 0
@x.701 = common global i32 0
@y.702 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline uwtable
define i64 @_Z7nextIntv() #0 {
  %1 = alloca i64
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.3
  %5 = load i32, i32* @y.4
  %6 = sub i32 %4, -1877228193
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1877228193
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1684119590, i32* %14
  br label %15

; <label>:15:                                     ; preds = %0, %63
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1684119590, label %18
    i32 -919702394, label %38
    i32 1261194332, label %57
    i32 1318251053, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %63

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -919702394, i32 1318251053
  store i32 %37, i32* %14
  br label %63

; <label>:38:                                     ; preds = %15
  %39 = alloca i64, align 8
  %40 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %39)
  %41 = load i64, i64* %39, align 8
  store i64 %41, i64* %1
  %42 = load i32, i32* @x.3
  %43 = load i32, i32* @y.4
  %44 = sub i32 %42, 1722642393
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 1722642393
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 1261194332, i32 1318251053
  store i32 %56, i32* %14
  br label %63

; <label>:57:                                     ; preds = %15
  %58 = load volatile i64, i64* %1
  ret i64 %58

; <label>:59:                                     ; preds = %15
  %60 = alloca i64, align 8
  %61 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %60)
  %62 = load i64, i64* %60, align 8
  store i32 -919702394, i32* %14
  br label %63

; <label>:63:                                     ; preds = %59, %38, %18, %17
  br label %15
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) #1

; Function Attrs: noinline uwtable
define signext i8 @_Z8nextCharv() #0 {
  %1 = alloca i8, align 1
  %2 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280) @_ZSt3cin, i8* dereferenceable(1) %1)
  %3 = load i8, i8* %1, align 1
  ret i8 %3
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) #1

; Function Attrs: noinline uwtable
define double @_Z10nextDoublev() #0 {
  %1 = alloca double, align 8
  %2 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERd(%"class.std::basic_istream"* @_ZSt3cin, double* dereferenceable(8) %1)
  %3 = load double, double* %1, align 8
  ret double %3
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERd(%"class.std::basic_istream"*, double* dereferenceable(8)) #1

; Function Attrs: noinline uwtable
define void @_Z10nextStringB5cxx11v(%"class.std::__cxx11::basic_string"* noalias sret) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca i1, align 1
  %3 = alloca i8*
  %4 = alloca i32
  store i1 false, i1* %2, align 1
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"* %0) #3
  %5 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* dereferenceable(280) @_ZSt3cin, %"class.std::__cxx11::basic_string"* dereferenceable(32) %0)
          to label %6 unwind label %50

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @x.9
  %8 = load i32, i32* @y.10
  %9 = add i32 %7, 1019271474
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 1019271474
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %8, 10
  %17 = xor i1 %15, true
  %18 = xor i1 %16, true
  %19 = xor i1 false, true
  %20 = and i1 %17, false
  %21 = and i1 %15, %19
  %22 = and i1 %18, false
  %23 = and i1 %16, %19
  %24 = or i1 %20, %21
  %25 = or i1 %22, %23
  %26 = xor i1 %24, %25
  %27 = or i1 %17, %18
  %28 = xor i1 %27, true
  %29 = or i1 false, %19
  %30 = and i1 %28, %29
  %31 = or i1 %26, %30
  %32 = or i1 %15, %16
  br i1 %31, label %33, label %103

; <label>:33:                                     ; preds = %6, %103
  store i1 true, i1* %2, align 1
  %34 = load i1, i1* %2, align 1
  %35 = load i32, i32* @x.9
  %36 = load i32, i32* @y.10
  %37 = add i32 %35, -2049488945
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -2049488945
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  br i1 %47, label %49, label %103

; <label>:49:                                     ; preds = %33
  br i1 %34, label %97, label %54

; <label>:50:                                     ; preds = %1
  %51 = landingpad { i8*, i32 }
          cleanup
  %52 = extractvalue { i8*, i32 } %51, 0
  store i8* %52, i8** %3, align 8
  %53 = extractvalue { i8*, i32 } %51, 1
  store i32 %53, i32* %4, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %0) #3
  br label %98

; <label>:54:                                     ; preds = %49
  %55 = load i32, i32* @x.9
  %56 = load i32, i32* @y.10
  %57 = add i32 %55, -2077863414
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, -2077863414
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 false, true
  %68 = and i1 %65, false
  %69 = and i1 %63, %67
  %70 = and i1 %66, false
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 false, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  br i1 %79, label %81, label %105

; <label>:81:                                     ; preds = %54, %105
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %0) #3
  %82 = load i32, i32* @x.9
  %83 = load i32, i32* @y.10
  %84 = add i32 %82, 2041761661
  %85 = sub i32 %84, 1
  %86 = sub i32 %85, 2041761661
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  br i1 %94, label %96, label %105

; <label>:96:                                     ; preds = %81
  br label %97

; <label>:97:                                     ; preds = %96, %49
  ret void

; <label>:98:                                     ; preds = %50
  %99 = load i8*, i8** %3, align 8
  %100 = load i32, i32* %4, align 4
  %101 = insertvalue { i8*, i32 } undef, i8* %99, 0
  %102 = insertvalue { i8*, i32 } %101, i32 %100, 1
  resume { i8*, i32 } %102

; <label>:103:                                    ; preds = %33, %6
  store i1 true, i1* %2, align 1
  %104 = load i1, i1* %2, align 1
  br label %33

; <label>:105:                                    ; preds = %81, %54
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %0) #3
  br label %81
}

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* dereferenceable(280), %"class.std::__cxx11::basic_string"* dereferenceable(32)) #1

declare i32 @__gxx_personality_v0(...)

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

; Function Attrs: noinline uwtable
define void @_Z11inputVectorRSt6vectorIxSaIxEERx(%"class.std::vector"* dereferenceable(24), i64* dereferenceable(8)) #0 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 0, i64* %6, align 8
  %8 = alloca i32
  store i32 1275584478, i32* %8
  br label %9

; <label>:9:                                      ; preds = %2, %123
  %10 = load i32, i32* %8
  switch i32 %10, label %11 [
    i32 1275584478, label %12
    i32 1069708027, label %39
    i32 581571075, label %59
    i32 -77663240, label %62
    i32 -992101534, label %65
    i32 1048973308, label %72
    i32 -706810057, label %100
    i32 1983395628, label %116
    i32 -1303018212, label %117
    i32 -1630367033, label %122
  ]

; <label>:11:                                     ; preds = %9
  br label %123

; <label>:12:                                     ; preds = %9
  %13 = load i32, i32* @x.11
  %14 = load i32, i32* @y.12
  %15 = sub i32 0, 1
  %16 = add i32 %13, %15
  %17 = sub i32 %13, 1
  %18 = mul i32 %13, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %14, 10
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1069708027, i32 -1303018212
  store i32 %38, i32* %8
  br label %123

; <label>:39:                                     ; preds = %9
  %40 = load i64, i64* %6, align 8
  %41 = load i64*, i64** %5, align 8
  %42 = load i64, i64* %41, align 8
  %43 = icmp slt i64 %40, %42
  store i1 %43, i1* %3
  %44 = load i32, i32* @x.11
  %45 = load i32, i32* @y.12
  %46 = sub i32 %44, -1873104275
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -1873104275
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 581571075, i32 -1303018212
  store i32 %58, i32* %8
  br label %123

; <label>:59:                                     ; preds = %9
  %60 = load volatile i1, i1* %3
  %61 = select i1 %60, i32 -77663240, i32 1048973308
  store i32 %61, i32* %8
  br label %123

; <label>:62:                                     ; preds = %9
  %63 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %64 = call i64 @_Z7nextIntv()
  store i64 %64, i64* %7, align 8
  call void @_ZNSt6vectorIxSaIxEE9push_backEOx(%"class.std::vector"* %63, i64* dereferenceable(8) %7)
  store i32 -992101534, i32* %8
  br label %123

; <label>:65:                                     ; preds = %9
  %66 = load i64, i64* %6, align 8
  %67 = sub i64 0, %66
  %68 = sub i64 0, 1
  %69 = add i64 %67, %68
  %70 = sub i64 0, %69
  %71 = add nsw i64 %66, 1
  store i64 %70, i64* %6, align 8
  store i32 1275584478, i32* %8
  br label %123

; <label>:72:                                     ; preds = %9
  %73 = load i32, i32* @x.11
  %74 = load i32, i32* @y.12
  %75 = sub i32 %73, 46927874
  %76 = sub i32 %75, 1
  %77 = add i32 %76, 46927874
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = xor i1 %81, true
  %84 = xor i1 %82, true
  %85 = xor i1 false, true
  %86 = and i1 %83, false
  %87 = and i1 %81, %85
  %88 = and i1 %84, false
  %89 = and i1 %82, %85
  %90 = or i1 %86, %87
  %91 = or i1 %88, %89
  %92 = xor i1 %90, %91
  %93 = or i1 %83, %84
  %94 = xor i1 %93, true
  %95 = or i1 false, %85
  %96 = and i1 %94, %95
  %97 = or i1 %92, %96
  %98 = or i1 %81, %82
  %99 = select i1 %97, i32 -706810057, i32 -1630367033
  store i32 %99, i32* %8
  br label %123

; <label>:100:                                    ; preds = %9
  %101 = load i32, i32* @x.11
  %102 = load i32, i32* @y.12
  %103 = sub i32 %101, 424453822
  %104 = sub i32 %103, 1
  %105 = add i32 %104, 424453822
  %106 = sub i32 %101, 1
  %107 = mul i32 %101, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %102, 10
  %111 = and i1 %109, %110
  %112 = xor i1 %109, %110
  %113 = or i1 %111, %112
  %114 = or i1 %109, %110
  %115 = select i1 %113, i32 1983395628, i32 -1630367033
  store i32 %115, i32* %8
  br label %123

; <label>:116:                                    ; preds = %9
  ret void

; <label>:117:                                    ; preds = %9
  %118 = load i64, i64* %6, align 8
  %119 = load i64*, i64** %5, align 8
  %120 = load i64, i64* %119, align 8
  %121 = icmp slt i64 %118, %120
  store i32 1069708027, i32* %8
  br label %123

; <label>:122:                                    ; preds = %9
  store i32 -706810057, i32* %8
  br label %123

; <label>:123:                                    ; preds = %122, %117, %100, %72, %65, %62, %59, %39, %12, %11
  br label %9
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE9push_backEOx(%"class.std::vector"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = load i64*, i64** %4, align 8
  %7 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %6) #3
  call void @_ZNSt6vectorIxSaIxEE12emplace_backIJxEEEvDpOT_(%"class.std::vector"* %5, i64* dereferenceable(8) %7)
  ret void
}

; Function Attrs: noinline uwtable
define void @_Z11inputVectorRSt6vectorIdSaIdEERx(%"class.std::vector.3"* dereferenceable(24), i64* dereferenceable(8)) #0 {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca double, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store i64* %1, i64** %4, align 8
  store i64 0, i64* %5, align 8
  %7 = alloca i32
  store i32 2062798462, i32* %7
  br label %8

; <label>:8:                                      ; preds = %2, %186
  %9 = load i32, i32* %7
  switch i32 %9, label %10 [
    i32 2062798462, label %11
    i32 -472125265, label %17
    i32 -109679164, label %44
    i32 -1252697282, label %61
    i32 -1659805466, label %62
    i32 -671044500, label %77
    i32 -841469804, label %109
    i32 -586695942, label %110
    i32 -1339970412, label %125
    i32 433266980, label %153
    i32 -1460101154, label %154
    i32 -1881336535, label %157
    i32 -1705667959, label %185
  ]

; <label>:10:                                     ; preds = %8
  br label %186

; <label>:11:                                     ; preds = %8
  %12 = load i64, i64* %5, align 8
  %13 = load i64*, i64** %4, align 8
  %14 = load i64, i64* %13, align 8
  %15 = icmp slt i64 %12, %14
  %16 = select i1 %15, i32 -472125265, i32 -586695942
  store i32 %16, i32* %7
  br label %186

; <label>:17:                                     ; preds = %8
  %18 = load i32, i32* @x.15
  %19 = load i32, i32* @y.16
  %20 = sub i32 0, 1
  %21 = add i32 %18, %20
  %22 = sub i32 %18, 1
  %23 = mul i32 %18, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %19, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 -109679164, i32 -1460101154
  store i32 %43, i32* %7
  br label %186

; <label>:44:                                     ; preds = %8
  %45 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %46 = call double @_Z10nextDoublev()
  store double %46, double* %6, align 8
  call void @_ZNSt6vectorIdSaIdEE9push_backEOd(%"class.std::vector.3"* %45, double* dereferenceable(8) %6)
  %47 = load i32, i32* @x.15
  %48 = load i32, i32* @y.16
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -1252697282, i32 -1460101154
  store i32 %60, i32* %7
  br label %186

; <label>:61:                                     ; preds = %8
  store i32 -1659805466, i32* %7
  br label %186

; <label>:62:                                     ; preds = %8
  %63 = load i32, i32* @x.15
  %64 = load i32, i32* @y.16
  %65 = sub i32 0, 1
  %66 = add i32 %63, %65
  %67 = sub i32 %63, 1
  %68 = mul i32 %63, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %64, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  %76 = select i1 %74, i32 -671044500, i32 -1881336535
  store i32 %76, i32* %7
  br label %186

; <label>:77:                                     ; preds = %8
  %78 = load i64, i64* %5, align 8
  %79 = sub i64 %78, 385434270866502884
  %80 = add i64 %79, 1
  %81 = add i64 %80, 385434270866502884
  %82 = add nsw i64 %78, 1
  store i64 %81, i64* %5, align 8
  %83 = load i32, i32* @x.15
  %84 = load i32, i32* @y.16
  %85 = sub i32 0, 1
  %86 = add i32 %83, %85
  %87 = sub i32 %83, 1
  %88 = mul i32 %83, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %84, 10
  %92 = xor i1 %90, true
  %93 = xor i1 %91, true
  %94 = xor i1 true, true
  %95 = and i1 %92, true
  %96 = and i1 %90, %94
  %97 = and i1 %93, true
  %98 = and i1 %91, %94
  %99 = or i1 %95, %96
  %100 = or i1 %97, %98
  %101 = xor i1 %99, %100
  %102 = or i1 %92, %93
  %103 = xor i1 %102, true
  %104 = or i1 true, %94
  %105 = and i1 %103, %104
  %106 = or i1 %101, %105
  %107 = or i1 %90, %91
  %108 = select i1 %106, i32 -841469804, i32 -1881336535
  store i32 %108, i32* %7
  br label %186

; <label>:109:                                    ; preds = %8
  store i32 2062798462, i32* %7
  br label %186

; <label>:110:                                    ; preds = %8
  %111 = load i32, i32* @x.15
  %112 = load i32, i32* @y.16
  %113 = sub i32 0, 1
  %114 = add i32 %111, %113
  %115 = sub i32 %111, 1
  %116 = mul i32 %111, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %112, 10
  %120 = and i1 %118, %119
  %121 = xor i1 %118, %119
  %122 = or i1 %120, %121
  %123 = or i1 %118, %119
  %124 = select i1 %122, i32 -1339970412, i32 -1705667959
  store i32 %124, i32* %7
  br label %186

; <label>:125:                                    ; preds = %8
  %126 = load i32, i32* @x.15
  %127 = load i32, i32* @y.16
  %128 = add i32 %126, -185398100
  %129 = sub i32 %128, 1
  %130 = sub i32 %129, -185398100
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = xor i1 %134, true
  %137 = xor i1 %135, true
  %138 = xor i1 false, true
  %139 = and i1 %136, false
  %140 = and i1 %134, %138
  %141 = and i1 %137, false
  %142 = and i1 %135, %138
  %143 = or i1 %139, %140
  %144 = or i1 %141, %142
  %145 = xor i1 %143, %144
  %146 = or i1 %136, %137
  %147 = xor i1 %146, true
  %148 = or i1 false, %138
  %149 = and i1 %147, %148
  %150 = or i1 %145, %149
  %151 = or i1 %134, %135
  %152 = select i1 %150, i32 433266980, i32 -1705667959
  store i32 %152, i32* %7
  br label %186

; <label>:153:                                    ; preds = %8
  ret void

; <label>:154:                                    ; preds = %8
  %155 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %156 = call double @_Z10nextDoublev()
  store double %156, double* %6, align 8
  call void @_ZNSt6vectorIdSaIdEE9push_backEOd(%"class.std::vector.3"* %155, double* dereferenceable(8) %6)
  store i32 -109679164, i32* %7
  br label %186

; <label>:157:                                    ; preds = %8
  %158 = load i64, i64* %5, align 8
  %159 = sub i64 0, %158
  %160 = add i64 0, %159
  %161 = sub i64 0, %158
  %162 = add i64 %160, 8995775200302200131
  %163 = add i64 %162, 1
  %164 = sub i64 %163, 8995775200302200131
  %165 = add i64 %160, 1
  %166 = add i64 %158, 4325111549364735651
  %167 = sub i64 %166, 1
  %168 = sub i64 %167, 4325111549364735651
  %169 = sub i64 %158, 1
  %170 = mul i64 %168, 1
  %171 = sub i64 %158, -7207700554008704955
  %172 = sub i64 %171, 1
  %173 = add i64 %172, -7207700554008704955
  %174 = sub i64 %158, 1
  %175 = mul i64 %173, 1
  %176 = add i64 %158, 5908099182718559262
  %177 = sub i64 %176, 1
  %178 = sub i64 %177, 5908099182718559262
  %179 = sub i64 %158, 1
  %180 = mul i64 %178, 1
  %181 = add i64 %158, -4152967199783161854
  %182 = add i64 %181, 1
  %183 = sub i64 %182, -4152967199783161854
  %184 = add nsw i64 %158, 1
  store i64 %183, i64* %5, align 8
  store i32 -671044500, i32* %7
  br label %186

; <label>:185:                                    ; preds = %8
  store i32 -1339970412, i32* %7
  br label %186

; <label>:186:                                    ; preds = %185, %157, %154, %125, %110, %109, %77, %62, %61, %44, %17, %11, %10
  br label %8
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEE9push_backEOd(%"class.std::vector.3"*, double* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca double*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store double* %1, double** %4, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %6 = load double*, double** %4, align 8
  %7 = call dereferenceable(8) double* @_ZSt4moveIRdEONSt16remove_referenceIT_E4typeEOS2_(double* dereferenceable(8) %6) #3
  call void @_ZNSt6vectorIdSaIdEE12emplace_backIJdEEEvDpOT_(%"class.std::vector.3"* %5, double* dereferenceable(8) %7)
  ret void
}

; Function Attrs: noinline uwtable
define void @_Z11inputVectorRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EERx(%"class.std::vector.8"* dereferenceable(24), i64* dereferenceable(8)) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.19
  %4 = load i32, i32* @y.20
  %5 = sub i32 %3, -338279125
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -338279125
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %202

; <label>:29:                                     ; preds = %2, %202
  %30 = alloca %"class.std::vector.8"*, align 8
  %31 = alloca i64*, align 8
  %32 = alloca i64, align 8
  %33 = alloca %"class.std::__cxx11::basic_string", align 8
  %34 = alloca i8*
  %35 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %30, align 8
  store i64* %1, i64** %31, align 8
  store i64 0, i64* %32, align 8
  %36 = load i32, i32* @x.19
  %37 = load i32, i32* @y.20
  %38 = sub i32 %36, 1341154469
  %39 = sub i32 %38, 1
  %40 = add i32 %39, 1341154469
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  br i1 %48, label %50, label %202

; <label>:50:                                     ; preds = %29
  br label %51

; <label>:51:                                     ; preds = %131, %50
  %52 = load i64, i64* %32, align 8
  %53 = load i64*, i64** %31, align 8
  %54 = load i64, i64* %53, align 8
  %55 = icmp slt i64 %52, %54
  br i1 %55, label %56, label %196

; <label>:56:                                     ; preds = %51
  %57 = load i32, i32* @x.19
  %58 = load i32, i32* @y.20
  %59 = sub i32 %57, -118542872
  %60 = sub i32 %59, 1
  %61 = add i32 %60, -118542872
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  br i1 %69, label %71, label %209

; <label>:71:                                     ; preds = %56, %209
  %72 = load %"class.std::vector.8"*, %"class.std::vector.8"** %30, align 8
  call void @_Z10nextStringB5cxx11v(%"class.std::__cxx11::basic_string"* sret %33)
  %73 = load i32, i32* @x.19
  %74 = load i32, i32* @y.20
  %75 = add i32 %73, -2143176640
  %76 = sub i32 %75, 1
  %77 = sub i32 %76, -2143176640
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = xor i1 %81, true
  %84 = xor i1 %82, true
  %85 = xor i1 true, true
  %86 = and i1 %83, true
  %87 = and i1 %81, %85
  %88 = and i1 %84, true
  %89 = and i1 %82, %85
  %90 = or i1 %86, %87
  %91 = or i1 %88, %89
  %92 = xor i1 %90, %91
  %93 = or i1 %83, %84
  %94 = xor i1 %93, true
  %95 = or i1 true, %85
  %96 = and i1 %94, %95
  %97 = or i1 %92, %96
  %98 = or i1 %81, %82
  br i1 %97, label %99, label %209

; <label>:99:                                     ; preds = %71
  invoke void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_(%"class.std::vector.8"* %72, %"class.std::__cxx11::basic_string"* dereferenceable(32) %33)
          to label %100 unwind label %138

; <label>:100:                                    ; preds = %99
  %101 = load i32, i32* @x.19
  %102 = load i32, i32* @y.20
  %103 = sub i32 %101, -165284164
  %104 = sub i32 %103, 1
  %105 = add i32 %104, -165284164
  %106 = sub i32 %101, 1
  %107 = mul i32 %101, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %102, 10
  %111 = and i1 %109, %110
  %112 = xor i1 %109, %110
  %113 = or i1 %111, %112
  %114 = or i1 %109, %110
  br i1 %113, label %115, label %211

; <label>:115:                                    ; preds = %100, %211
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %33) #3
  %116 = load i32, i32* @x.19
  %117 = load i32, i32* @y.20
  %118 = add i32 %116, 526228562
  %119 = sub i32 %118, 1
  %120 = sub i32 %119, 526228562
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = and i1 %124, %125
  %127 = xor i1 %124, %125
  %128 = or i1 %126, %127
  %129 = or i1 %124, %125
  br i1 %128, label %130, label %211

; <label>:130:                                    ; preds = %115
  br label %131

; <label>:131:                                    ; preds = %130
  %132 = load i64, i64* %32, align 8
  %133 = sub i64 0, %132
  %134 = sub i64 0, 1
  %135 = add i64 %133, %134
  %136 = sub i64 0, %135
  %137 = add nsw i64 %132, 1
  store i64 %136, i64* %32, align 8
  br label %51

; <label>:138:                                    ; preds = %99
  %139 = load i32, i32* @x.19
  %140 = load i32, i32* @y.20
  %141 = add i32 %139, 623474865
  %142 = sub i32 %141, 1
  %143 = sub i32 %142, 623474865
  %144 = sub i32 %139, 1
  %145 = mul i32 %139, %143
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %140, 10
  %149 = xor i1 %147, true
  %150 = xor i1 %148, true
  %151 = xor i1 true, true
  %152 = and i1 %149, true
  %153 = and i1 %147, %151
  %154 = and i1 %150, true
  %155 = and i1 %148, %151
  %156 = or i1 %152, %153
  %157 = or i1 %154, %155
  %158 = xor i1 %156, %157
  %159 = or i1 %149, %150
  %160 = xor i1 %159, true
  %161 = or i1 true, %151
  %162 = and i1 %160, %161
  %163 = or i1 %158, %162
  %164 = or i1 %147, %148
  br i1 %163, label %165, label %212

; <label>:165:                                    ; preds = %138, %212
  %166 = landingpad { i8*, i32 }
          cleanup
  %167 = extractvalue { i8*, i32 } %166, 0
  store i8* %167, i8** %34, align 8
  %168 = extractvalue { i8*, i32 } %166, 1
  store i32 %168, i32* %35, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %33) #3
  %169 = load i32, i32* @x.19
  %170 = load i32, i32* @y.20
  %171 = add i32 %169, -992588272
  %172 = sub i32 %171, 1
  %173 = sub i32 %172, -992588272
  %174 = sub i32 %169, 1
  %175 = mul i32 %169, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %170, 10
  %179 = xor i1 %177, true
  %180 = xor i1 %178, true
  %181 = xor i1 true, true
  %182 = and i1 %179, true
  %183 = and i1 %177, %181
  %184 = and i1 %180, true
  %185 = and i1 %178, %181
  %186 = or i1 %182, %183
  %187 = or i1 %184, %185
  %188 = xor i1 %186, %187
  %189 = or i1 %179, %180
  %190 = xor i1 %189, true
  %191 = or i1 true, %181
  %192 = and i1 %190, %191
  %193 = or i1 %188, %192
  %194 = or i1 %177, %178
  br i1 %193, label %195, label %212

; <label>:195:                                    ; preds = %165
  br label %197

; <label>:196:                                    ; preds = %51
  ret void

; <label>:197:                                    ; preds = %195
  %198 = load i8*, i8** %34, align 8
  %199 = load i32, i32* %35, align 4
  %200 = insertvalue { i8*, i32 } undef, i8* %198, 0
  %201 = insertvalue { i8*, i32 } %200, i32 %199, 1
  resume { i8*, i32 } %201

; <label>:202:                                    ; preds = %29, %2
  %203 = alloca %"class.std::vector.8"*, align 8
  %204 = alloca i64*, align 8
  %205 = alloca i64, align 8
  %206 = alloca %"class.std::__cxx11::basic_string", align 8
  %207 = alloca i8*
  %208 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %203, align 8
  store i64* %1, i64** %204, align 8
  store i64 0, i64* %205, align 8
  br label %29

; <label>:209:                                    ; preds = %71, %56
  %210 = load %"class.std::vector.8"*, %"class.std::vector.8"** %30, align 8
  call void @_Z10nextStringB5cxx11v(%"class.std::__cxx11::basic_string"* sret %33)
  br label %71

; <label>:211:                                    ; preds = %115, %100
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %33) #3
  br label %115

; <label>:212:                                    ; preds = %165, %138
  %213 = landingpad { i8*, i32 }
          cleanup
  %214 = extractvalue { i8*, i32 } %213, 0
  store i8* %214, i8** %34, align 8
  %215 = extractvalue { i8*, i32 } %213, 1
  store i32 %215, i32* %35, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %33) #3
  br label %165
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_(%"class.std::vector.8"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %6 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %7 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::__cxx11::basic_string"* dereferenceable(32) %6) #3
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_(%"class.std::vector.8"* %5, %"class.std::__cxx11::basic_string"* dereferenceable(32) %7)
  ret void
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() #4 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = load i32, i32* @x.23
  %2 = load i32, i32* @y.24
  %3 = sub i32 0, 1
  %4 = add i32 %1, %3
  %5 = sub i32 %1, 1
  %6 = mul i32 %1, %4
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %2, 10
  %10 = xor i1 %8, true
  %11 = xor i1 %9, true
  %12 = xor i1 true, true
  %13 = and i1 %10, true
  %14 = and i1 %8, %12
  %15 = and i1 %11, true
  %16 = and i1 %9, %12
  %17 = or i1 %13, %14
  %18 = or i1 %15, %16
  %19 = xor i1 %17, %18
  %20 = or i1 %10, %11
  %21 = xor i1 %20, true
  %22 = or i1 true, %12
  %23 = and i1 %21, %22
  %24 = or i1 %19, %23
  %25 = or i1 %8, %9
  br i1 %24, label %26, label %926

; <label>:26:                                     ; preds = %0, %926
  %27 = alloca i32, align 4
  %28 = alloca i64, align 8
  %29 = alloca i64, align 8
  %30 = alloca %class.Graph, align 8
  %31 = alloca i64, align 8
  %32 = alloca i64, align 8
  %33 = alloca i64, align 8
  %34 = alloca i64, align 8
  %35 = alloca i8*
  %36 = alloca i32
  %37 = alloca %"class.std::vector.23", align 8
  %38 = alloca %"class.std::vector", align 8
  %39 = alloca i64, align 8
  %40 = alloca %"class.std::allocator.0", align 1
  %41 = alloca %"class.std::allocator.25", align 1
  %42 = alloca i64, align 8
  %43 = alloca i64, align 8
  %44 = alloca i32
  %45 = alloca i64, align 8
  %46 = alloca i64, align 8
  %47 = alloca i64, align 8
  store i32 0, i32* %27, align 4
  %48 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %28)
  %49 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %48, i64* dereferenceable(8) %29)
  %50 = load i64, i64* %28, align 8
  call void @_ZN5GraphC2Ex(%class.Graph* %30, i64 %50)
  store i64 0, i64* %31, align 8
  %51 = load i32, i32* @x.23
  %52 = load i32, i32* @y.24
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  br i1 %62, label %64, label %926

; <label>:64:                                     ; preds = %26
  br label %65

; <label>:65:                                     ; preds = %180, %64
  %66 = load i64, i64* %31, align 8
  %67 = load i64, i64* %29, align 8
  %68 = icmp slt i64 %66, %67
  br i1 %68, label %69, label %185

; <label>:69:                                     ; preds = %65
  %70 = load i32, i32* @x.23
  %71 = load i32, i32* @y.24
  %72 = sub i32 %70, -1515615106
  %73 = sub i32 %72, 1
  %74 = add i32 %73, -1515615106
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 false, true
  %83 = and i1 %80, false
  %84 = and i1 %78, %82
  %85 = and i1 %81, false
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 false, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  br i1 %94, label %96, label %951

; <label>:96:                                     ; preds = %69, %951
  %97 = load i32, i32* @x.23
  %98 = load i32, i32* @y.24
  %99 = sub i32 %97, -238560609
  %100 = sub i32 %99, 1
  %101 = add i32 %100, -238560609
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  br i1 %109, label %111, label %951

; <label>:111:                                    ; preds = %96
  %112 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %32)
          to label %113 unwind label %181

; <label>:113:                                    ; preds = %111
  %114 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %112, i64* dereferenceable(8) %33)
          to label %115 unwind label %181

; <label>:115:                                    ; preds = %113
  %116 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %114, i64* dereferenceable(8) %34)
          to label %117 unwind label %181

; <label>:117:                                    ; preds = %115
  %118 = load i64, i64* %32, align 8
  %119 = load i64, i64* %33, align 8
  %120 = load i64, i64* %34, align 8
  invoke void @_ZN5Graph8makeEdgeExxxb(%class.Graph* %30, i64 %118, i64 %119, i64 %120, i1 zeroext false)
          to label %121 unwind label %181

; <label>:121:                                    ; preds = %117
  br label %122

; <label>:122:                                    ; preds = %121
  %123 = load i32, i32* @x.23
  %124 = load i32, i32* @y.24
  %125 = sub i32 0, 1
  %126 = add i32 %123, %125
  %127 = sub i32 %123, 1
  %128 = mul i32 %123, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %124, 10
  %132 = xor i1 %130, true
  %133 = xor i1 %131, true
  %134 = xor i1 false, true
  %135 = and i1 %132, false
  %136 = and i1 %130, %134
  %137 = and i1 %133, false
  %138 = and i1 %131, %134
  %139 = or i1 %135, %136
  %140 = or i1 %137, %138
  %141 = xor i1 %139, %140
  %142 = or i1 %132, %133
  %143 = xor i1 %142, true
  %144 = or i1 false, %134
  %145 = and i1 %143, %144
  %146 = or i1 %141, %145
  %147 = or i1 %130, %131
  br i1 %146, label %148, label %952

; <label>:148:                                    ; preds = %122, %952
  %149 = load i64, i64* %31, align 8
  %150 = add i64 %149, -1150206075393000683
  %151 = add i64 %150, 1
  %152 = sub i64 %151, -1150206075393000683
  %153 = add nsw i64 %149, 1
  store i64 %152, i64* %31, align 8
  %154 = load i32, i32* @x.23
  %155 = load i32, i32* @y.24
  %156 = add i32 %154, -726037700
  %157 = sub i32 %156, 1
  %158 = sub i32 %157, -726037700
  %159 = sub i32 %154, 1
  %160 = mul i32 %154, %158
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %155, 10
  %164 = xor i1 %162, true
  %165 = xor i1 %163, true
  %166 = xor i1 false, true
  %167 = and i1 %164, false
  %168 = and i1 %162, %166
  %169 = and i1 %165, false
  %170 = and i1 %163, %166
  %171 = or i1 %167, %168
  %172 = or i1 %169, %170
  %173 = xor i1 %171, %172
  %174 = or i1 %164, %165
  %175 = xor i1 %174, true
  %176 = or i1 false, %166
  %177 = and i1 %175, %176
  %178 = or i1 %173, %177
  %179 = or i1 %162, %163
  br i1 %178, label %180, label %952

; <label>:180:                                    ; preds = %148
  br label %65

; <label>:181:                                    ; preds = %117, %115, %113, %111
  %182 = landingpad { i8*, i32 }
          cleanup
  %183 = extractvalue { i8*, i32 } %182, 0
  store i8* %183, i8** %35, align 8
  %184 = extractvalue { i8*, i32 } %182, 1
  store i32 %184, i32* %36, align 4
  br label %920

; <label>:185:                                    ; preds = %65
  %186 = load i64, i64* %28, align 8
  %187 = load i64, i64* %28, align 8
  store i64 0, i64* %39, align 8
  call void @_ZNSaIxEC2Ev(%"class.std::allocator.0"* %40) #3
  invoke void @_ZNSt6vectorIxSaIxEEC2EmRKxRKS0_(%"class.std::vector"* %38, i64 %187, i64* dereferenceable(8) %39, %"class.std::allocator.0"* dereferenceable(1) %40)
          to label %188 unwind label %412

; <label>:188:                                    ; preds = %185
  %189 = load i32, i32* @x.23
  %190 = load i32, i32* @y.24
  %191 = add i32 %189, -25148658
  %192 = sub i32 %191, 1
  %193 = sub i32 %192, -25148658
  %194 = sub i32 %189, 1
  %195 = mul i32 %189, %193
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %190, 10
  %199 = and i1 %197, %198
  %200 = xor i1 %197, %198
  %201 = or i1 %199, %200
  %202 = or i1 %197, %198
  br i1 %201, label %203, label %991

; <label>:203:                                    ; preds = %188, %991
  call void @_ZNSaISt6vectorIxSaIxEEEC2Ev(%"class.std::allocator.25"* %41) #3
  %204 = load i32, i32* @x.23
  %205 = load i32, i32* @y.24
  %206 = sub i32 %204, -1272898766
  %207 = sub i32 %206, 1
  %208 = add i32 %207, -1272898766
  %209 = sub i32 %204, 1
  %210 = mul i32 %204, %208
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %205, 10
  %214 = xor i1 %212, true
  %215 = xor i1 %213, true
  %216 = xor i1 true, true
  %217 = and i1 %214, true
  %218 = and i1 %212, %216
  %219 = and i1 %215, true
  %220 = and i1 %213, %216
  %221 = or i1 %217, %218
  %222 = or i1 %219, %220
  %223 = xor i1 %221, %222
  %224 = or i1 %214, %215
  %225 = xor i1 %224, true
  %226 = or i1 true, %216
  %227 = and i1 %225, %226
  %228 = or i1 %223, %227
  %229 = or i1 %212, %213
  br i1 %228, label %230, label %991

; <label>:230:                                    ; preds = %203
  invoke void @_ZNSt6vectorIS_IxSaIxEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.23"* %37, i64 %186, %"class.std::vector"* dereferenceable(24) %38, %"class.std::allocator.25"* dereferenceable(1) %41)
          to label %231 unwind label %416

; <label>:231:                                    ; preds = %230
  call void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator.25"* %41) #3
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector"* %38) #3
  call void @_ZNSaIxED2Ev(%"class.std::allocator.0"* %40) #3
  store i64 0, i64* %42, align 8
  br label %232

; <label>:232:                                    ; preds = %488, %231
  %233 = load i32, i32* @x.23
  %234 = load i32, i32* @y.24
  %235 = sub i32 %233, -1975143826
  %236 = sub i32 %235, 1
  %237 = add i32 %236, -1975143826
  %238 = sub i32 %233, 1
  %239 = mul i32 %233, %237
  %240 = urem i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %234, 10
  %243 = xor i1 %241, true
  %244 = xor i1 %242, true
  %245 = xor i1 true, true
  %246 = and i1 %243, true
  %247 = and i1 %241, %245
  %248 = and i1 %244, true
  %249 = and i1 %242, %245
  %250 = or i1 %246, %247
  %251 = or i1 %248, %249
  %252 = xor i1 %250, %251
  %253 = or i1 %243, %244
  %254 = xor i1 %253, true
  %255 = or i1 true, %245
  %256 = and i1 %254, %255
  %257 = or i1 %252, %256
  %258 = or i1 %241, %242
  br i1 %257, label %259, label %992

; <label>:259:                                    ; preds = %232, %992
  %260 = load i64, i64* %42, align 8
  %261 = load i64, i64* %28, align 8
  %262 = icmp slt i64 %260, %261
  %263 = load i32, i32* @x.23
  %264 = load i32, i32* @y.24
  %265 = add i32 %263, -2086455705
  %266 = sub i32 %265, 1
  %267 = sub i32 %266, -2086455705
  %268 = sub i32 %263, 1
  %269 = mul i32 %263, %267
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %264, 10
  %273 = xor i1 %271, true
  %274 = xor i1 %272, true
  %275 = xor i1 false, true
  %276 = and i1 %273, false
  %277 = and i1 %271, %275
  %278 = and i1 %274, false
  %279 = and i1 %272, %275
  %280 = or i1 %276, %277
  %281 = or i1 %278, %279
  %282 = xor i1 %280, %281
  %283 = or i1 %273, %274
  %284 = xor i1 %283, true
  %285 = or i1 false, %275
  %286 = and i1 %284, %285
  %287 = or i1 %282, %286
  %288 = or i1 %271, %272
  br i1 %287, label %289, label %992

; <label>:289:                                    ; preds = %259
  br i1 %262, label %290, label %493

; <label>:290:                                    ; preds = %289
  %291 = load i32, i32* @x.23
  %292 = load i32, i32* @y.24
  %293 = add i32 %291, 823341615
  %294 = sub i32 %293, 1
  %295 = sub i32 %294, 823341615
  %296 = sub i32 %291, 1
  %297 = mul i32 %291, %295
  %298 = urem i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %292, 10
  %301 = and i1 %299, %300
  %302 = xor i1 %299, %300
  %303 = or i1 %301, %302
  %304 = or i1 %299, %300
  br i1 %303, label %305, label %996

; <label>:305:                                    ; preds = %290, %996
  %306 = load i64, i64* %42, align 8
  %307 = load i32, i32* @x.23
  %308 = load i32, i32* @y.24
  %309 = sub i32 0, 1
  %310 = add i32 %307, %309
  %311 = sub i32 %307, 1
  %312 = mul i32 %307, %310
  %313 = urem i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %308, 10
  %316 = and i1 %314, %315
  %317 = xor i1 %314, %315
  %318 = or i1 %316, %317
  %319 = or i1 %314, %315
  br i1 %318, label %320, label %996

; <label>:320:                                    ; preds = %305
  %321 = invoke i64 @_ZN5Graph11bellmanFordExx(%class.Graph* %30, i64 %306, i64 0)
          to label %322 unwind label %421

; <label>:322:                                    ; preds = %320
  %323 = load i32, i32* @x.23
  %324 = load i32, i32* @y.24
  %325 = sub i32 %323, -2098797506
  %326 = sub i32 %325, 1
  %327 = add i32 %326, -2098797506
  %328 = sub i32 %323, 1
  %329 = mul i32 %323, %327
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %324, 10
  %333 = xor i1 %331, true
  %334 = xor i1 %332, true
  %335 = xor i1 false, true
  %336 = and i1 %333, false
  %337 = and i1 %331, %335
  %338 = and i1 %334, false
  %339 = and i1 %332, %335
  %340 = or i1 %336, %337
  %341 = or i1 %338, %339
  %342 = xor i1 %340, %341
  %343 = or i1 %333, %334
  %344 = xor i1 %343, true
  %345 = or i1 false, %335
  %346 = and i1 %344, %345
  %347 = or i1 %342, %346
  %348 = or i1 %331, %332
  br i1 %347, label %349, label %998

; <label>:349:                                    ; preds = %322, %998
  store i64 %321, i64* %43, align 8
  %350 = load i64, i64* %43, align 8
  %351 = icmp eq i64 %350, -9223372036854775808
  %352 = load i32, i32* @x.23
  %353 = load i32, i32* @y.24
  %354 = add i32 %352, -2100023500
  %355 = sub i32 %354, 1
  %356 = sub i32 %355, -2100023500
  %357 = sub i32 %352, 1
  %358 = mul i32 %352, %356
  %359 = urem i32 %358, 2
  %360 = icmp eq i32 %359, 0
  %361 = icmp slt i32 %353, 10
  %362 = xor i1 %360, true
  %363 = xor i1 %361, true
  %364 = xor i1 true, true
  %365 = and i1 %362, true
  %366 = and i1 %360, %364
  %367 = and i1 %363, true
  %368 = and i1 %361, %364
  %369 = or i1 %365, %366
  %370 = or i1 %367, %368
  %371 = xor i1 %369, %370
  %372 = or i1 %362, %363
  %373 = xor i1 %372, true
  %374 = or i1 true, %364
  %375 = and i1 %373, %374
  %376 = or i1 %371, %375
  %377 = or i1 %360, %361
  br i1 %376, label %378, label %998

; <label>:378:                                    ; preds = %349
  br i1 %351, label %379, label %425

; <label>:379:                                    ; preds = %378
  %380 = load i32, i32* @x.23
  %381 = load i32, i32* @y.24
  %382 = sub i32 0, 1
  %383 = add i32 %380, %382
  %384 = sub i32 %380, 1
  %385 = mul i32 %380, %383
  %386 = urem i32 %385, 2
  %387 = icmp eq i32 %386, 0
  %388 = icmp slt i32 %381, 10
  %389 = and i1 %387, %388
  %390 = xor i1 %387, %388
  %391 = or i1 %389, %390
  %392 = or i1 %387, %388
  br i1 %391, label %393, label %1001

; <label>:393:                                    ; preds = %379, %1001
  %394 = load i32, i32* @x.23
  %395 = load i32, i32* @y.24
  %396 = sub i32 0, 1
  %397 = add i32 %394, %396
  %398 = sub i32 %394, 1
  %399 = mul i32 %394, %397
  %400 = urem i32 %399, 2
  %401 = icmp eq i32 %400, 0
  %402 = icmp slt i32 %395, 10
  %403 = and i1 %401, %402
  %404 = xor i1 %401, %402
  %405 = or i1 %403, %404
  %406 = or i1 %401, %402
  br i1 %405, label %407, label %1001

; <label>:407:                                    ; preds = %393
  %408 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i32 0, i32 0))
          to label %409 unwind label %421

; <label>:409:                                    ; preds = %407
  %410 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %408, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %411 unwind label %421

; <label>:411:                                    ; preds = %409
  store i32 0, i32* %27, align 4
  store i32 1, i32* %44, align 4
  br label %889

; <label>:412:                                    ; preds = %185
  %413 = landingpad { i8*, i32 }
          cleanup
  %414 = extractvalue { i8*, i32 } %413, 0
  store i8* %414, i8** %35, align 8
  %415 = extractvalue { i8*, i32 } %413, 1
  store i32 %415, i32* %36, align 4
  br label %420

; <label>:416:                                    ; preds = %230
  %417 = landingpad { i8*, i32 }
          cleanup
  %418 = extractvalue { i8*, i32 } %417, 0
  store i8* %418, i8** %35, align 8
  %419 = extractvalue { i8*, i32 } %417, 1
  store i32 %419, i32* %36, align 4
  call void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator.25"* %41) #3
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector"* %38) #3
  br label %420

; <label>:420:                                    ; preds = %416, %412
  call void @_ZNSaIxED2Ev(%"class.std::allocator.0"* %40) #3
  br label %920

; <label>:421:                                    ; preds = %782, %732, %699, %645, %548, %545, %409, %407, %320
  %422 = landingpad { i8*, i32 }
          cleanup
  %423 = extractvalue { i8*, i32 } %422, 0
  store i8* %423, i8** %35, align 8
  %424 = extractvalue { i8*, i32 } %422, 1
  store i32 %424, i32* %36, align 4
  call void @_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev(%"class.std::vector.23"* %37) #3
  br label %920

; <label>:425:                                    ; preds = %378
  store i64 0, i64* %45, align 8
  br label %426

; <label>:426:                                    ; preds = %481, %425
  %427 = load i64, i64* %45, align 8
  %428 = load i64, i64* %28, align 8
  %429 = icmp slt i64 %427, %428
  br i1 %429, label %430, label %487

; <label>:430:                                    ; preds = %426
  %431 = load i32, i32* @x.23
  %432 = load i32, i32* @y.24
  %433 = add i32 %431, -1475250784
  %434 = sub i32 %433, 1
  %435 = sub i32 %434, -1475250784
  %436 = sub i32 %431, 1
  %437 = mul i32 %431, %435
  %438 = urem i32 %437, 2
  %439 = icmp eq i32 %438, 0
  %440 = icmp slt i32 %432, 10
  %441 = and i1 %439, %440
  %442 = xor i1 %439, %440
  %443 = or i1 %441, %442
  %444 = or i1 %439, %440
  br i1 %443, label %445, label %1002

; <label>:445:                                    ; preds = %430, %1002
  %446 = getelementptr inbounds %class.Graph, %class.Graph* %30, i32 0, i32 0
  %447 = load i64, i64* %45, align 8
  %448 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %446, i64 %447) #3
  %449 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %448, i32 0, i32 0
  %450 = load i64, i64* %449, align 8
  %451 = load i64, i64* %42, align 8
  %452 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.23"* %37, i64 %451) #3
  %453 = load i64, i64* %45, align 8
  %454 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %452, i64 %453) #3
  store i64 %450, i64* %454, align 8
  %455 = load i32, i32* @x.23
  %456 = load i32, i32* @y.24
  %457 = sub i32 0, 1
  %458 = add i32 %455, %457
  %459 = sub i32 %455, 1
  %460 = mul i32 %455, %458
  %461 = urem i32 %460, 2
  %462 = icmp eq i32 %461, 0
  %463 = icmp slt i32 %456, 10
  %464 = xor i1 %462, true
  %465 = xor i1 %463, true
  %466 = xor i1 true, true
  %467 = and i1 %464, true
  %468 = and i1 %462, %466
  %469 = and i1 %465, true
  %470 = and i1 %463, %466
  %471 = or i1 %467, %468
  %472 = or i1 %469, %470
  %473 = xor i1 %471, %472
  %474 = or i1 %464, %465
  %475 = xor i1 %474, true
  %476 = or i1 true, %466
  %477 = and i1 %475, %476
  %478 = or i1 %473, %477
  %479 = or i1 %462, %463
  br i1 %478, label %480, label %1002

; <label>:480:                                    ; preds = %445
  br label %481

; <label>:481:                                    ; preds = %480
  %482 = load i64, i64* %45, align 8
  %483 = sub i64 %482, -2083648711442473941
  %484 = add i64 %483, 1
  %485 = add i64 %484, -2083648711442473941
  %486 = add nsw i64 %482, 1
  store i64 %485, i64* %45, align 8
  br label %426

; <label>:487:                                    ; preds = %426
  br label %488

; <label>:488:                                    ; preds = %487
  %489 = load i64, i64* %42, align 8
  %490 = sub i64 0, 1
  %491 = sub i64 %489, %490
  %492 = add nsw i64 %489, 1
  store i64 %491, i64* %42, align 8
  br label %232

; <label>:493:                                    ; preds = %289
  %494 = load i32, i32* @x.23
  %495 = load i32, i32* @y.24
  %496 = sub i32 0, 1
  %497 = add i32 %494, %496
  %498 = sub i32 %494, 1
  %499 = mul i32 %494, %497
  %500 = urem i32 %499, 2
  %501 = icmp eq i32 %500, 0
  %502 = icmp slt i32 %495, 10
  %503 = xor i1 %501, true
  %504 = xor i1 %502, true
  %505 = xor i1 true, true
  %506 = and i1 %503, true
  %507 = and i1 %501, %505
  %508 = and i1 %504, true
  %509 = and i1 %502, %505
  %510 = or i1 %506, %507
  %511 = or i1 %508, %509
  %512 = xor i1 %510, %511
  %513 = or i1 %503, %504
  %514 = xor i1 %513, true
  %515 = or i1 true, %505
  %516 = and i1 %514, %515
  %517 = or i1 %512, %516
  %518 = or i1 %501, %502
  br i1 %517, label %519, label %1012

; <label>:519:                                    ; preds = %493, %1012
  store i64 0, i64* %46, align 8
  %520 = load i32, i32* @x.23
  %521 = load i32, i32* @y.24
  %522 = sub i32 %520, -1216177437
  %523 = sub i32 %522, 1
  %524 = add i32 %523, -1216177437
  %525 = sub i32 %520, 1
  %526 = mul i32 %520, %524
  %527 = urem i32 %526, 2
  %528 = icmp eq i32 %527, 0
  %529 = icmp slt i32 %521, 10
  %530 = and i1 %528, %529
  %531 = xor i1 %528, %529
  %532 = or i1 %530, %531
  %533 = or i1 %528, %529
  br i1 %532, label %534, label %1012

; <label>:534:                                    ; preds = %519
  br label %535

; <label>:535:                                    ; preds = %845, %534
  %536 = load i64, i64* %46, align 8
  %537 = load i64, i64* %28, align 8
  %538 = icmp slt i64 %536, %537
  br i1 %538, label %539, label %846

; <label>:539:                                    ; preds = %535
  %540 = load i64, i64* %46, align 8
  %541 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.23"* %37, i64 %540) #3
  %542 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %541, i64 0) #3
  %543 = load i64, i64* %542, align 8
  %544 = icmp eq i64 %543, 9223372036854775807
  br i1 %544, label %545, label %548

; <label>:545:                                    ; preds = %539
  %546 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0))
          to label %547 unwind label %421

; <label>:547:                                    ; preds = %545
  br label %555

; <label>:548:                                    ; preds = %539
  %549 = load i64, i64* %46, align 8
  %550 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.23"* %37, i64 %549) #3
  %551 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %550, i64 0) #3
  %552 = load i64, i64* %551, align 8
  %553 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %552)
          to label %554 unwind label %421

; <label>:554:                                    ; preds = %548
  br label %555

; <label>:555:                                    ; preds = %554, %547
  store i64 0, i64* %47, align 8
  br label %556

; <label>:556:                                    ; preds = %775, %555
  %557 = load i32, i32* @x.23
  %558 = load i32, i32* @y.24
  %559 = sub i32 0, 1
  %560 = add i32 %557, %559
  %561 = sub i32 %557, 1
  %562 = mul i32 %557, %560
  %563 = urem i32 %562, 2
  %564 = icmp eq i32 %563, 0
  %565 = icmp slt i32 %558, 10
  %566 = xor i1 %564, true
  %567 = xor i1 %565, true
  %568 = xor i1 true, true
  %569 = and i1 %566, true
  %570 = and i1 %564, %568
  %571 = and i1 %567, true
  %572 = and i1 %565, %568
  %573 = or i1 %569, %570
  %574 = or i1 %571, %572
  %575 = xor i1 %573, %574
  %576 = or i1 %566, %567
  %577 = xor i1 %576, true
  %578 = or i1 true, %568
  %579 = and i1 %577, %578
  %580 = or i1 %575, %579
  %581 = or i1 %564, %565
  br i1 %580, label %582, label %1013

; <label>:582:                                    ; preds = %556, %1013
  %583 = load i64, i64* %47, align 8
  %584 = load i64, i64* %28, align 8
  %585 = sub i64 %584, 4514868532420903893
  %586 = sub i64 %585, 1
  %587 = add i64 %586, 4514868532420903893
  %588 = sub nsw i64 %584, 1
  %589 = icmp slt i64 %583, %587
  %590 = load i32, i32* @x.23
  %591 = load i32, i32* @y.24
  %592 = add i32 %590, -1754515368
  %593 = sub i32 %592, 1
  %594 = sub i32 %593, -1754515368
  %595 = sub i32 %590, 1
  %596 = mul i32 %590, %594
  %597 = urem i32 %596, 2
  %598 = icmp eq i32 %597, 0
  %599 = icmp slt i32 %591, 10
  %600 = and i1 %598, %599
  %601 = xor i1 %598, %599
  %602 = or i1 %600, %601
  %603 = or i1 %598, %599
  br i1 %602, label %604, label %1013

; <label>:604:                                    ; preds = %582
  br i1 %589, label %605, label %782

; <label>:605:                                    ; preds = %604
  %606 = load i32, i32* @x.23
  %607 = load i32, i32* @y.24
  %608 = sub i32 0, 1
  %609 = add i32 %606, %608
  %610 = sub i32 %606, 1
  %611 = mul i32 %606, %609
  %612 = urem i32 %611, 2
  %613 = icmp eq i32 %612, 0
  %614 = icmp slt i32 %607, 10
  %615 = and i1 %613, %614
  %616 = xor i1 %613, %614
  %617 = or i1 %615, %616
  %618 = or i1 %613, %614
  br i1 %617, label %619, label %1055

; <label>:619:                                    ; preds = %605, %1055
  %620 = load i32, i32* @x.23
  %621 = load i32, i32* @y.24
  %622 = sub i32 0, 1
  %623 = add i32 %620, %622
  %624 = sub i32 %620, 1
  %625 = mul i32 %620, %623
  %626 = urem i32 %625, 2
  %627 = icmp eq i32 %626, 0
  %628 = icmp slt i32 %621, 10
  %629 = xor i1 %627, true
  %630 = xor i1 %628, true
  %631 = xor i1 true, true
  %632 = and i1 %629, true
  %633 = and i1 %627, %631
  %634 = and i1 %630, true
  %635 = and i1 %628, %631
  %636 = or i1 %632, %633
  %637 = or i1 %634, %635
  %638 = xor i1 %636, %637
  %639 = or i1 %629, %630
  %640 = xor i1 %639, true
  %641 = or i1 true, %631
  %642 = and i1 %640, %641
  %643 = or i1 %638, %642
  %644 = or i1 %627, %628
  br i1 %643, label %645, label %1055

; <label>:645:                                    ; preds = %619
  %646 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cout, i8 signext 32)
          to label %647 unwind label %421

; <label>:647:                                    ; preds = %645
  %648 = load i32, i32* @x.23
  %649 = load i32, i32* @y.24
  %650 = sub i32 %648, 692469060
  %651 = sub i32 %650, 1
  %652 = add i32 %651, 692469060
  %653 = sub i32 %648, 1
  %654 = mul i32 %648, %652
  %655 = urem i32 %654, 2
  %656 = icmp eq i32 %655, 0
  %657 = icmp slt i32 %649, 10
  %658 = and i1 %656, %657
  %659 = xor i1 %656, %657
  %660 = or i1 %658, %659
  %661 = or i1 %656, %657
  br i1 %660, label %662, label %1056

; <label>:662:                                    ; preds = %647, %1056
  %663 = load i64, i64* %46, align 8
  %664 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.23"* %37, i64 %663) #3
  %665 = load i64, i64* %47, align 8
  %666 = sub i64 %665, -1911593700680714903
  %667 = add i64 %666, 1
  %668 = add i64 %667, -1911593700680714903
  %669 = add nsw i64 %665, 1
  %670 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %664, i64 %668) #3
  %671 = load i64, i64* %670, align 8
  %672 = icmp eq i64 %671, 9223372036854775807
  %673 = load i32, i32* @x.23
  %674 = load i32, i32* @y.24
  %675 = sub i32 0, 1
  %676 = add i32 %673, %675
  %677 = sub i32 %673, 1
  %678 = mul i32 %673, %676
  %679 = urem i32 %678, 2
  %680 = icmp eq i32 %679, 0
  %681 = icmp slt i32 %674, 10
  %682 = xor i1 %680, true
  %683 = xor i1 %681, true
  %684 = xor i1 false, true
  %685 = and i1 %682, false
  %686 = and i1 %680, %684
  %687 = and i1 %683, false
  %688 = and i1 %681, %684
  %689 = or i1 %685, %686
  %690 = or i1 %687, %688
  %691 = xor i1 %689, %690
  %692 = or i1 %682, %683
  %693 = xor i1 %692, true
  %694 = or i1 false, %684
  %695 = and i1 %693, %694
  %696 = or i1 %691, %695
  %697 = or i1 %680, %681
  br i1 %696, label %698, label %1056

; <label>:698:                                    ; preds = %662
  br i1 %672, label %699, label %732

; <label>:699:                                    ; preds = %698
  %700 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0))
          to label %701 unwind label %421

; <label>:701:                                    ; preds = %699
  %702 = load i32, i32* @x.23
  %703 = load i32, i32* @y.24
  %704 = sub i32 %702, -479801178
  %705 = sub i32 %704, 1
  %706 = add i32 %705, -479801178
  %707 = sub i32 %702, 1
  %708 = mul i32 %702, %706
  %709 = urem i32 %708, 2
  %710 = icmp eq i32 %709, 0
  %711 = icmp slt i32 %703, 10
  %712 = and i1 %710, %711
  %713 = xor i1 %710, %711
  %714 = or i1 %712, %713
  %715 = or i1 %710, %711
  br i1 %714, label %716, label %1080

; <label>:716:                                    ; preds = %701, %1080
  %717 = load i32, i32* @x.23
  %718 = load i32, i32* @y.24
  %719 = sub i32 %717, -1069710454
  %720 = sub i32 %719, 1
  %721 = add i32 %720, -1069710454
  %722 = sub i32 %717, 1
  %723 = mul i32 %717, %721
  %724 = urem i32 %723, 2
  %725 = icmp eq i32 %724, 0
  %726 = icmp slt i32 %718, 10
  %727 = and i1 %725, %726
  %728 = xor i1 %725, %726
  %729 = or i1 %727, %728
  %730 = or i1 %725, %726
  br i1 %729, label %731, label %1080

; <label>:731:                                    ; preds = %716
  br label %744

; <label>:732:                                    ; preds = %698
  %733 = load i64, i64* %46, align 8
  %734 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.23"* %37, i64 %733) #3
  %735 = load i64, i64* %47, align 8
  %736 = add i64 %735, -4670979817477175176
  %737 = add i64 %736, 1
  %738 = sub i64 %737, -4670979817477175176
  %739 = add nsw i64 %735, 1
  %740 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %734, i64 %738) #3
  %741 = load i64, i64* %740, align 8
  %742 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %741)
          to label %743 unwind label %421

; <label>:743:                                    ; preds = %732
  br label %744

; <label>:744:                                    ; preds = %743, %731
  %745 = load i32, i32* @x.23
  %746 = load i32, i32* @y.24
  %747 = sub i32 %745, 2102686147
  %748 = sub i32 %747, 1
  %749 = add i32 %748, 2102686147
  %750 = sub i32 %745, 1
  %751 = mul i32 %745, %749
  %752 = urem i32 %751, 2
  %753 = icmp eq i32 %752, 0
  %754 = icmp slt i32 %746, 10
  %755 = and i1 %753, %754
  %756 = xor i1 %753, %754
  %757 = or i1 %755, %756
  %758 = or i1 %753, %754
  br i1 %757, label %759, label %1081

; <label>:759:                                    ; preds = %744, %1081
  %760 = load i32, i32* @x.23
  %761 = load i32, i32* @y.24
  %762 = sub i32 %760, 1022451570
  %763 = sub i32 %762, 1
  %764 = add i32 %763, 1022451570
  %765 = sub i32 %760, 1
  %766 = mul i32 %760, %764
  %767 = urem i32 %766, 2
  %768 = icmp eq i32 %767, 0
  %769 = icmp slt i32 %761, 10
  %770 = and i1 %768, %769
  %771 = xor i1 %768, %769
  %772 = or i1 %770, %771
  %773 = or i1 %768, %769
  br i1 %772, label %774, label %1081

; <label>:774:                                    ; preds = %759
  br label %775

; <label>:775:                                    ; preds = %774
  %776 = load i64, i64* %47, align 8
  %777 = sub i64 0, %776
  %778 = sub i64 0, 1
  %779 = add i64 %777, %778
  %780 = sub i64 0, %779
  %781 = add nsw i64 %776, 1
  store i64 %780, i64* %47, align 8
  br label %556

; <label>:782:                                    ; preds = %604
  %783 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %784 unwind label %421

; <label>:784:                                    ; preds = %782
  br label %785

; <label>:785:                                    ; preds = %784
  %786 = load i32, i32* @x.23
  %787 = load i32, i32* @y.24
  %788 = sub i32 %786, 415495975
  %789 = sub i32 %788, 1
  %790 = add i32 %789, 415495975
  %791 = sub i32 %786, 1
  %792 = mul i32 %786, %790
  %793 = urem i32 %792, 2
  %794 = icmp eq i32 %793, 0
  %795 = icmp slt i32 %787, 10
  %796 = xor i1 %794, true
  %797 = xor i1 %795, true
  %798 = xor i1 false, true
  %799 = and i1 %796, false
  %800 = and i1 %794, %798
  %801 = and i1 %797, false
  %802 = and i1 %795, %798
  %803 = or i1 %799, %800
  %804 = or i1 %801, %802
  %805 = xor i1 %803, %804
  %806 = or i1 %796, %797
  %807 = xor i1 %806, true
  %808 = or i1 false, %798
  %809 = and i1 %807, %808
  %810 = or i1 %805, %809
  %811 = or i1 %794, %795
  br i1 %810, label %812, label %1082

; <label>:812:                                    ; preds = %785, %1082
  %813 = load i64, i64* %46, align 8
  %814 = sub i64 0, %813
  %815 = sub i64 0, 1
  %816 = add i64 %814, %815
  %817 = sub i64 0, %816
  %818 = add nsw i64 %813, 1
  store i64 %817, i64* %46, align 8
  %819 = load i32, i32* @x.23
  %820 = load i32, i32* @y.24
  %821 = add i32 %819, 276153542
  %822 = sub i32 %821, 1
  %823 = sub i32 %822, 276153542
  %824 = sub i32 %819, 1
  %825 = mul i32 %819, %823
  %826 = urem i32 %825, 2
  %827 = icmp eq i32 %826, 0
  %828 = icmp slt i32 %820, 10
  %829 = xor i1 %827, true
  %830 = xor i1 %828, true
  %831 = xor i1 false, true
  %832 = and i1 %829, false
  %833 = and i1 %827, %831
  %834 = and i1 %830, false
  %835 = and i1 %828, %831
  %836 = or i1 %832, %833
  %837 = or i1 %834, %835
  %838 = xor i1 %836, %837
  %839 = or i1 %829, %830
  %840 = xor i1 %839, true
  %841 = or i1 false, %831
  %842 = and i1 %840, %841
  %843 = or i1 %838, %842
  %844 = or i1 %827, %828
  br i1 %843, label %845, label %1082

; <label>:845:                                    ; preds = %812
  br label %535

; <label>:846:                                    ; preds = %535
  %847 = load i32, i32* @x.23
  %848 = load i32, i32* @y.24
  %849 = add i32 %847, -1260179857
  %850 = sub i32 %849, 1
  %851 = sub i32 %850, -1260179857
  %852 = sub i32 %847, 1
  %853 = mul i32 %847, %851
  %854 = urem i32 %853, 2
  %855 = icmp eq i32 %854, 0
  %856 = icmp slt i32 %848, 10
  %857 = xor i1 %855, true
  %858 = xor i1 %856, true
  %859 = xor i1 false, true
  %860 = and i1 %857, false
  %861 = and i1 %855, %859
  %862 = and i1 %858, false
  %863 = and i1 %856, %859
  %864 = or i1 %860, %861
  %865 = or i1 %862, %863
  %866 = xor i1 %864, %865
  %867 = or i1 %857, %858
  %868 = xor i1 %867, true
  %869 = or i1 false, %859
  %870 = and i1 %868, %869
  %871 = or i1 %866, %870
  %872 = or i1 %855, %856
  br i1 %871, label %873, label %1126

; <label>:873:                                    ; preds = %846, %1126
  store i32 0, i32* %27, align 4
  store i32 1, i32* %44, align 4
  %874 = load i32, i32* @x.23
  %875 = load i32, i32* @y.24
  %876 = sub i32 %874, -1868997332
  %877 = sub i32 %876, 1
  %878 = add i32 %877, -1868997332
  %879 = sub i32 %874, 1
  %880 = mul i32 %874, %878
  %881 = urem i32 %880, 2
  %882 = icmp eq i32 %881, 0
  %883 = icmp slt i32 %875, 10
  %884 = and i1 %882, %883
  %885 = xor i1 %882, %883
  %886 = or i1 %884, %885
  %887 = or i1 %882, %883
  br i1 %886, label %888, label %1126

; <label>:888:                                    ; preds = %873
  br label %889

; <label>:889:                                    ; preds = %888, %411
  %890 = load i32, i32* @x.23
  %891 = load i32, i32* @y.24
  %892 = sub i32 0, 1
  %893 = add i32 %890, %892
  %894 = sub i32 %890, 1
  %895 = mul i32 %890, %893
  %896 = urem i32 %895, 2
  %897 = icmp eq i32 %896, 0
  %898 = icmp slt i32 %891, 10
  %899 = and i1 %897, %898
  %900 = xor i1 %897, %898
  %901 = or i1 %899, %900
  %902 = or i1 %897, %898
  br i1 %901, label %903, label %1127

; <label>:903:                                    ; preds = %889, %1127
  call void @_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev(%"class.std::vector.23"* %37) #3
  call void @_ZN5GraphD2Ev(%class.Graph* %30) #3
  %904 = load i32, i32* %27, align 4
  %905 = load i32, i32* @x.23
  %906 = load i32, i32* @y.24
  %907 = add i32 %905, -1770998770
  %908 = sub i32 %907, 1
  %909 = sub i32 %908, -1770998770
  %910 = sub i32 %905, 1
  %911 = mul i32 %905, %909
  %912 = urem i32 %911, 2
  %913 = icmp eq i32 %912, 0
  %914 = icmp slt i32 %906, 10
  %915 = and i1 %913, %914
  %916 = xor i1 %913, %914
  %917 = or i1 %915, %916
  %918 = or i1 %913, %914
  br i1 %917, label %919, label %1127

; <label>:919:                                    ; preds = %903
  ret i32 %904

; <label>:920:                                    ; preds = %421, %420, %181
  call void @_ZN5GraphD2Ev(%class.Graph* %30) #3
  br label %921

; <label>:921:                                    ; preds = %920
  %922 = load i8*, i8** %35, align 8
  %923 = load i32, i32* %36, align 4
  %924 = insertvalue { i8*, i32 } undef, i8* %922, 0
  %925 = insertvalue { i8*, i32 } %924, i32 %923, 1
  resume { i8*, i32 } %925

; <label>:926:                                    ; preds = %26, %0
  %927 = alloca i32, align 4
  %928 = alloca i64, align 8
  %929 = alloca i64, align 8
  %930 = alloca %class.Graph, align 8
  %931 = alloca i64, align 8
  %932 = alloca i64, align 8
  %933 = alloca i64, align 8
  %934 = alloca i64, align 8
  %935 = alloca i8*
  %936 = alloca i32
  %937 = alloca %"class.std::vector.23", align 8
  %938 = alloca %"class.std::vector", align 8
  %939 = alloca i64, align 8
  %940 = alloca %"class.std::allocator.0", align 1
  %941 = alloca %"class.std::allocator.25", align 1
  %942 = alloca i64, align 8
  %943 = alloca i64, align 8
  %944 = alloca i32
  %945 = alloca i64, align 8
  %946 = alloca i64, align 8
  %947 = alloca i64, align 8
  store i32 0, i32* %927, align 4
  %948 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %928)
  %949 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %948, i64* dereferenceable(8) %929)
  %950 = load i64, i64* %928, align 8
  call void @_ZN5GraphC2Ex(%class.Graph* %930, i64 %950)
  store i64 0, i64* %931, align 8
  br label %26

; <label>:951:                                    ; preds = %96, %69
  br label %96

; <label>:952:                                    ; preds = %148, %122
  %953 = load i64, i64* %31, align 8
  %954 = add i64 0, 9195065305368375984
  %955 = sub i64 %954, %953
  %956 = sub i64 %955, 9195065305368375984
  %957 = sub i64 0, %953
  %958 = sub i64 %956, -1749471175857180785
  %959 = add i64 %958, 1
  %960 = add i64 %959, -1749471175857180785
  %961 = add i64 %956, 1
  %962 = add i64 %953, -9199271655511046086
  %963 = sub i64 %962, 1
  %964 = sub i64 %963, -9199271655511046086
  %965 = sub i64 %953, 1
  %966 = mul i64 %964, 1
  %967 = shl i64 %953, 1
  %968 = sub i64 0, %953
  %969 = add i64 0, %968
  %970 = sub i64 0, %953
  %971 = sub i64 0, %969
  %972 = sub i64 0, 1
  %973 = add i64 %971, %972
  %974 = sub i64 0, %973
  %975 = add i64 %969, 1
  %976 = sub i64 0, %953
  %977 = add i64 0, %976
  %978 = sub i64 0, %953
  %979 = sub i64 0, 1
  %980 = sub i64 %977, %979
  %981 = add i64 %977, 1
  %982 = shl i64 %953, 1
  %983 = sub i64 0, 1
  %984 = add i64 %953, %983
  %985 = sub i64 %953, 1
  %986 = mul i64 %984, 1
  %987 = shl i64 %953, 1
  %988 = sub i64 0, 1
  %989 = sub i64 %953, %988
  %990 = add nsw i64 %953, 1
  store i64 %989, i64* %31, align 8
  br label %148

; <label>:991:                                    ; preds = %203, %188
  call void @_ZNSaISt6vectorIxSaIxEEEC2Ev(%"class.std::allocator.25"* %41) #3
  br label %203

; <label>:992:                                    ; preds = %259, %232
  %993 = load i64, i64* %42, align 8
  %994 = load i64, i64* %28, align 8
  %995 = icmp slt i64 %993, %994
  br label %259

; <label>:996:                                    ; preds = %305, %290
  %997 = load i64, i64* %42, align 8
  br label %305

; <label>:998:                                    ; preds = %349, %322
  store i64 %321, i64* %43, align 8
  %999 = load i64, i64* %43, align 8
  %1000 = icmp eq i64 %999, -9223372036854775808
  br label %349

; <label>:1001:                                   ; preds = %393, %379
  br label %393

; <label>:1002:                                   ; preds = %445, %430
  %1003 = getelementptr inbounds %class.Graph, %class.Graph* %30, i32 0, i32 0
  %1004 = load i64, i64* %45, align 8
  %1005 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %1003, i64 %1004) #3
  %1006 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %1005, i32 0, i32 0
  %1007 = load i64, i64* %1006, align 8
  %1008 = load i64, i64* %42, align 8
  %1009 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.23"* %37, i64 %1008) #3
  %1010 = load i64, i64* %45, align 8
  %1011 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %1009, i64 %1010) #3
  store i64 %1007, i64* %1011, align 8
  br label %445

; <label>:1012:                                   ; preds = %519, %493
  store i64 0, i64* %46, align 8
  br label %519

; <label>:1013:                                   ; preds = %582, %556
  %1014 = load i64, i64* %47, align 8
  %1015 = load i64, i64* %28, align 8
  %1016 = sub i64 0, 827443342668225751
  %1017 = sub i64 %1016, %1015
  %1018 = add i64 %1017, 827443342668225751
  %1019 = sub i64 0, %1015
  %1020 = sub i64 %1018, 5314978141955078625
  %1021 = add i64 %1020, 1
  %1022 = add i64 %1021, 5314978141955078625
  %1023 = add i64 %1018, 1
  %1024 = sub i64 0, %1015
  %1025 = add i64 0, %1024
  %1026 = sub i64 0, %1015
  %1027 = sub i64 %1025, 1894794707277851762
  %1028 = add i64 %1027, 1
  %1029 = add i64 %1028, 1894794707277851762
  %1030 = add i64 %1025, 1
  %1031 = shl i64 %1015, 1
  %1032 = sub i64 0, %1015
  %1033 = add i64 0, %1032
  %1034 = sub i64 0, %1015
  %1035 = sub i64 %1033, 8416409332915148120
  %1036 = add i64 %1035, 1
  %1037 = add i64 %1036, 8416409332915148120
  %1038 = add i64 %1033, 1
  %1039 = sub i64 %1015, 6741815572680260999
  %1040 = sub i64 %1039, 1
  %1041 = add i64 %1040, 6741815572680260999
  %1042 = sub i64 %1015, 1
  %1043 = mul i64 %1041, 1
  %1044 = sub i64 0, %1015
  %1045 = add i64 0, %1044
  %1046 = sub i64 0, %1015
  %1047 = sub i64 0, 1
  %1048 = sub i64 %1045, %1047
  %1049 = add i64 %1045, 1
  %1050 = sub i64 %1015, -3960955749065648651
  %1051 = sub i64 %1050, 1
  %1052 = add i64 %1051, -3960955749065648651
  %1053 = sub nsw i64 %1015, 1
  %1054 = icmp slt i64 %1014, %1052
  br label %582

; <label>:1055:                                   ; preds = %619, %605
  br label %619

; <label>:1056:                                   ; preds = %662, %647
  %1057 = load i64, i64* %46, align 8
  %1058 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.23"* %37, i64 %1057) #3
  %1059 = load i64, i64* %47, align 8
  %1060 = shl i64 %1059, 1
  %1061 = shl i64 %1059, 1
  %1062 = shl i64 %1059, 1
  %1063 = sub i64 %1059, -3541442851279130655
  %1064 = sub i64 %1063, 1
  %1065 = add i64 %1064, -3541442851279130655
  %1066 = sub i64 %1059, 1
  %1067 = mul i64 %1065, 1
  %1068 = add i64 %1059, -698836140646487122
  %1069 = sub i64 %1068, 1
  %1070 = sub i64 %1069, -698836140646487122
  %1071 = sub i64 %1059, 1
  %1072 = mul i64 %1070, 1
  %1073 = shl i64 %1059, 1
  %1074 = sub i64 0, 1
  %1075 = sub i64 %1059, %1074
  %1076 = add nsw i64 %1059, 1
  %1077 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %1058, i64 %1075) #3
  %1078 = load i64, i64* %1077, align 8
  %1079 = icmp eq i64 %1078, 9223372036854775807
  br label %662

; <label>:1080:                                   ; preds = %716, %701
  br label %716

; <label>:1081:                                   ; preds = %759, %744
  br label %759

; <label>:1082:                                   ; preds = %812, %785
  %1083 = load i64, i64* %46, align 8
  %1084 = sub i64 0, %1083
  %1085 = add i64 0, %1084
  %1086 = sub i64 0, %1083
  %1087 = sub i64 %1085, 1768615691201754602
  %1088 = add i64 %1087, 1
  %1089 = add i64 %1088, 1768615691201754602
  %1090 = add i64 %1085, 1
  %1091 = add i64 0, 5067188707997434912
  %1092 = sub i64 %1091, %1083
  %1093 = sub i64 %1092, 5067188707997434912
  %1094 = sub i64 0, %1083
  %1095 = add i64 %1093, -1062338973930147246
  %1096 = add i64 %1095, 1
  %1097 = sub i64 %1096, -1062338973930147246
  %1098 = add i64 %1093, 1
  %1099 = shl i64 %1083, 1
  %1100 = shl i64 %1083, 1
  %1101 = add i64 0, 2334698828579619772
  %1102 = sub i64 %1101, %1083
  %1103 = sub i64 %1102, 2334698828579619772
  %1104 = sub i64 0, %1083
  %1105 = add i64 %1103, -2191211947079455858
  %1106 = add i64 %1105, 1
  %1107 = sub i64 %1106, -2191211947079455858
  %1108 = add i64 %1103, 1
  %1109 = sub i64 0, -3180519792399440702
  %1110 = sub i64 %1109, %1083
  %1111 = add i64 %1110, -3180519792399440702
  %1112 = sub i64 0, %1083
  %1113 = add i64 %1111, 2373608365183066477
  %1114 = add i64 %1113, 1
  %1115 = sub i64 %1114, 2373608365183066477
  %1116 = add i64 %1111, 1
  %1117 = sub i64 %1083, -2330625148661111547
  %1118 = sub i64 %1117, 1
  %1119 = add i64 %1118, -2330625148661111547
  %1120 = sub i64 %1083, 1
  %1121 = mul i64 %1119, 1
  %1122 = sub i64 %1083, 7098335239737029819
  %1123 = add i64 %1122, 1
  %1124 = add i64 %1123, 7098335239737029819
  %1125 = add nsw i64 %1083, 1
  store i64 %1124, i64* %46, align 8
  br label %812

; <label>:1126:                                   ; preds = %873, %846
  store i32 0, i32* %27, align 4
  store i32 1, i32* %44, align 4
  br label %873

; <label>:1127:                                   ; preds = %903, %889
  call void @_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev(%"class.std::vector.23"* %37) #3
  call void @_ZN5GraphD2Ev(%class.Graph* %30) #3
  %1128 = load i32, i32* %27, align 4
  br label %903
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5GraphC2Ex(%class.Graph*, i64) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.Graph*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.Graph::Node", align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %class.Graph* %0, %class.Graph** %3, align 8
  store i64 %1, i64* %4, align 8
  %9 = load %class.Graph*, %class.Graph** %3, align 8
  %10 = getelementptr inbounds %class.Graph, %class.Graph* %9, i32 0, i32 0
  call void @_ZNSt6vectorIN5Graph4NodeESaIS1_EEC2Ev(%"class.std::vector.13"* %10) #3
  store i64 0, i64* %5, align 8
  br label %11

; <label>:11:                                     ; preds = %120, %2
  %12 = load i32, i32* @x.25
  %13 = load i32, i32* @y.26
  %14 = add i32 %12, -1172769383
  %15 = sub i32 %14, 1
  %16 = sub i32 %15, -1172769383
  %17 = sub i32 %12, 1
  %18 = mul i32 %12, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %13, 10
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  br i1 %36, label %38, label %185

; <label>:38:                                     ; preds = %11, %185
  %39 = load i64, i64* %5, align 8
  %40 = load i64, i64* %4, align 8
  %41 = icmp slt i64 %39, %40
  %42 = load i32, i32* @x.25
  %43 = load i32, i32* @y.26
  %44 = sub i32 %42, -224454717
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -224454717
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  br i1 %66, label %68, label %185

; <label>:68:                                     ; preds = %38
  br i1 %41, label %69, label %125

; <label>:69:                                     ; preds = %68
  %70 = getelementptr inbounds %class.Graph, %class.Graph* %9, i32 0, i32 0
  %71 = bitcast %"struct.Graph::Node"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* %71, i8 0, i64 32, i32 8, i1 false)
  call void @_ZN5Graph4NodeC2Ev(%"struct.Graph::Node"* %6) #3
  invoke void @_ZNSt6vectorIN5Graph4NodeESaIS1_EE9push_backEOS1_(%"class.std::vector.13"* %70, %"struct.Graph::Node"* dereferenceable(32) %6)
          to label %72 unwind label %121

; <label>:72:                                     ; preds = %69
  call void @_ZN5Graph4NodeD2Ev(%"struct.Graph::Node"* %6) #3
  br label %73

; <label>:73:                                     ; preds = %72
  %74 = load i32, i32* @x.25
  %75 = load i32, i32* @y.26
  %76 = sub i32 %74, 1498889316
  %77 = sub i32 %76, 1
  %78 = add i32 %77, 1498889316
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = and i1 %82, %83
  %85 = xor i1 %82, %83
  %86 = or i1 %84, %85
  %87 = or i1 %82, %83
  br i1 %86, label %88, label %189

; <label>:88:                                     ; preds = %73, %189
  %89 = load i64, i64* %5, align 8
  %90 = sub i64 0, %89
  %91 = sub i64 0, 1
  %92 = add i64 %90, %91
  %93 = sub i64 0, %92
  %94 = add nsw i64 %89, 1
  store i64 %93, i64* %5, align 8
  %95 = load i32, i32* @x.25
  %96 = load i32, i32* @y.26
  %97 = sub i32 0, 1
  %98 = add i32 %95, %97
  %99 = sub i32 %95, 1
  %100 = mul i32 %95, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %96, 10
  %104 = xor i1 %102, true
  %105 = xor i1 %103, true
  %106 = xor i1 false, true
  %107 = and i1 %104, false
  %108 = and i1 %102, %106
  %109 = and i1 %105, false
  %110 = and i1 %103, %106
  %111 = or i1 %107, %108
  %112 = or i1 %109, %110
  %113 = xor i1 %111, %112
  %114 = or i1 %104, %105
  %115 = xor i1 %114, true
  %116 = or i1 false, %106
  %117 = and i1 %115, %116
  %118 = or i1 %113, %117
  %119 = or i1 %102, %103
  br i1 %118, label %120, label %189

; <label>:120:                                    ; preds = %88
  br label %11

; <label>:121:                                    ; preds = %69
  %122 = landingpad { i8*, i32 }
          cleanup
  %123 = extractvalue { i8*, i32 } %122, 0
  store i8* %123, i8** %7, align 8
  %124 = extractvalue { i8*, i32 } %122, 1
  store i32 %124, i32* %8, align 4
  call void @_ZN5Graph4NodeD2Ev(%"struct.Graph::Node"* %6) #3
  call void @_ZNSt6vectorIN5Graph4NodeESaIS1_EED2Ev(%"class.std::vector.13"* %10) #3
  br label %126

; <label>:125:                                    ; preds = %68
  ret void

; <label>:126:                                    ; preds = %121
  %127 = load i32, i32* @x.25
  %128 = load i32, i32* @y.26
  %129 = add i32 %127, -1045279694
  %130 = sub i32 %129, 1
  %131 = sub i32 %130, -1045279694
  %132 = sub i32 %127, 1
  %133 = mul i32 %127, %131
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %128, 10
  %137 = xor i1 %135, true
  %138 = xor i1 %136, true
  %139 = xor i1 false, true
  %140 = and i1 %137, false
  %141 = and i1 %135, %139
  %142 = and i1 %138, false
  %143 = and i1 %136, %139
  %144 = or i1 %140, %141
  %145 = or i1 %142, %143
  %146 = xor i1 %144, %145
  %147 = or i1 %137, %138
  %148 = xor i1 %147, true
  %149 = or i1 false, %139
  %150 = and i1 %148, %149
  %151 = or i1 %146, %150
  %152 = or i1 %135, %136
  br i1 %151, label %153, label %195

; <label>:153:                                    ; preds = %126, %195
  %154 = load i8*, i8** %7, align 8
  %155 = load i32, i32* %8, align 4
  %156 = insertvalue { i8*, i32 } undef, i8* %154, 0
  %157 = insertvalue { i8*, i32 } %156, i32 %155, 1
  %158 = load i32, i32* @x.25
  %159 = load i32, i32* @y.26
  %160 = sub i32 %158, 353737466
  %161 = sub i32 %160, 1
  %162 = add i32 %161, 353737466
  %163 = sub i32 %158, 1
  %164 = mul i32 %158, %162
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %159, 10
  %168 = xor i1 %166, true
  %169 = xor i1 %167, true
  %170 = xor i1 true, true
  %171 = and i1 %168, true
  %172 = and i1 %166, %170
  %173 = and i1 %169, true
  %174 = and i1 %167, %170
  %175 = or i1 %171, %172
  %176 = or i1 %173, %174
  %177 = xor i1 %175, %176
  %178 = or i1 %168, %169
  %179 = xor i1 %178, true
  %180 = or i1 true, %170
  %181 = and i1 %179, %180
  %182 = or i1 %177, %181
  %183 = or i1 %166, %167
  br i1 %182, label %184, label %195

; <label>:184:                                    ; preds = %153
  resume { i8*, i32 } %157

; <label>:185:                                    ; preds = %38, %11
  %186 = load i64, i64* %5, align 8
  %187 = load i64, i64* %4, align 8
  %188 = icmp slt i64 %186, %187
  br label %38

; <label>:189:                                    ; preds = %88, %73
  %190 = load i64, i64* %5, align 8
  %191 = sub i64 %190, 1768392280940471373
  %192 = add i64 %191, 1
  %193 = add i64 %192, 1768392280940471373
  %194 = add nsw i64 %190, 1
  store i64 %193, i64* %5, align 8
  br label %88

; <label>:195:                                    ; preds = %153, %126
  %196 = load i8*, i8** %7, align 8
  %197 = load i32, i32* %8, align 4
  %198 = insertvalue { i8*, i32 } undef, i8* %196, 0
  %199 = insertvalue { i8*, i32 } %198, i32 %197, 1
  br label %153
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5Graph8makeEdgeExxxb(%class.Graph*, i64, i64, i64, i1 zeroext) #0 comdat align 2 {
  %6 = alloca i8
  %7 = alloca %class.Graph*
  %8 = alloca %class.Graph*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8, align 1
  %13 = alloca %"struct.Graph::Edge", align 8
  %14 = alloca %"struct.Graph::Edge", align 8
  store %class.Graph* %0, %class.Graph** %8, align 8
  store i64 %1, i64* %9, align 8
  store i64 %2, i64* %10, align 8
  store i64 %3, i64* %11, align 8
  %15 = zext i1 %4 to i8
  store i8 %15, i8* %12, align 1
  %16 = load %class.Graph*, %class.Graph** %8, align 8
  store %class.Graph* %16, %class.Graph** %7
  %17 = load volatile %class.Graph*, %class.Graph** %7
  %18 = getelementptr inbounds %class.Graph, %class.Graph* %17, i32 0, i32 0
  %19 = load i64, i64* %9, align 8
  %20 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %18, i64 %19) #3
  %21 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %20, i32 0, i32 1
  %22 = load i64, i64* %10, align 8
  %23 = load i64, i64* %11, align 8
  call void @_ZN5Graph4EdgeC2Exx(%"struct.Graph::Edge"* %13, i64 %22, i64 %23)
  call void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE9push_backEOS1_(%"class.std::vector.18"* %21, %"struct.Graph::Edge"* dereferenceable(16) %13)
  %24 = load i8, i8* %12, align 1
  store i8 %24, i8* %6
  %25 = alloca i32
  store i32 -1706910418, i32* %25
  br label %26

; <label>:26:                                     ; preds = %5, %42
  %27 = load i32, i32* %25
  switch i32 %27, label %28 [
    i32 -1706910418, label %29
    i32 1144309451, label %33
    i32 2029661646, label %41
  ]

; <label>:28:                                     ; preds = %26
  br label %42

; <label>:29:                                     ; preds = %26
  %30 = load volatile i8, i8* %6
  %31 = trunc i8 %30 to i1
  %32 = select i1 %31, i32 1144309451, i32 2029661646
  store i32 %32, i32* %25
  br label %42

; <label>:33:                                     ; preds = %26
  %34 = load volatile %class.Graph*, %class.Graph** %7
  %35 = getelementptr inbounds %class.Graph, %class.Graph* %34, i32 0, i32 0
  %36 = load i64, i64* %10, align 8
  %37 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %35, i64 %36) #3
  %38 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %37, i32 0, i32 1
  %39 = load i64, i64* %9, align 8
  %40 = load i64, i64* %11, align 8
  call void @_ZN5Graph4EdgeC2Exx(%"struct.Graph::Edge"* %14, i64 %39, i64 %40)
  call void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE9push_backEOS1_(%"class.std::vector.18"* %38, %"struct.Graph::Edge"* dereferenceable(16) %14)
  store i32 2029661646, i32* %25
  br label %42

; <label>:41:                                     ; preds = %26
  ret void

; <label>:42:                                     ; preds = %33, %29, %28
  br label %26
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxEC2Ev(%"class.std::allocator.0"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %2, align 8
  %3 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %2, align 8
  %4 = bitcast %"class.std::allocator.0"* %3 to %"class.__gnu_cxx::new_allocator.1"*
  call void @_ZN9__gnu_cxx13new_allocatorIxEC2Ev(%"class.__gnu_cxx::new_allocator.1"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEEC2EmRKxRKS0_(%"class.std::vector"*, i64, i64* dereferenceable(8), %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.0"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %5, align 8
  store i64 %1, i64* %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %8, align 8
  %11 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %12 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %8, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base"* %12, i64 %13, %"class.std::allocator.0"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load i64*, i64** %7, align 8
  invoke void @_ZNSt6vectorIxSaIxEE18_M_fill_initializeEmRKx(%"class.std::vector"* %11, i64 %15, i64* dereferenceable(8) %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %4
  ret void

; <label>:18:                                     ; preds = %4
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %9, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %10, align 4
  %22 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %9, align 8
  %25 = load i32, i32* %10, align 4
  %26 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIxSaIxEEEC2Ev(%"class.std::allocator.25"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %2, align 8
  %3 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %2, align 8
  %4 = bitcast %"class.std::allocator.25"* %3 to %"class.__gnu_cxx::new_allocator.26"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2Ev(%"class.__gnu_cxx::new_allocator.26"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IxSaIxEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.23"*, i64, %"class.std::vector"* dereferenceable(24), %"class.std::allocator.25"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.23"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector"*, align 8
  %8 = alloca %"class.std::allocator.25"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %7, align 8
  store %"class.std::allocator.25"* %3, %"class.std::allocator.25"** %8, align 8
  %11 = load %"class.std::vector.23"*, %"class.std::vector.23"** %5, align 8
  %12 = bitcast %"class.std::vector.23"* %11 to %"struct.std::_Vector_base.24"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %8, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.24"* %12, i64 %13, %"class.std::allocator.25"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  invoke void @_ZNSt6vectorIS_IxSaIxEESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.23"* %11, i64 %15, %"class.std::vector"* dereferenceable(24) %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %4
  ret void

; <label>:18:                                     ; preds = %4
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %9, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %10, align 4
  %22 = bitcast %"class.std::vector.23"* %11 to %"struct.std::_Vector_base.24"*
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev(%"struct.std::_Vector_base.24"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %9, align 8
  %25 = load i32, i32* %10, align 4
  %26 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator.25"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.37
  %5 = load i32, i32* @y.38
  %6 = sub i32 %4, -216686765
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -216686765
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 914675725, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 914675725, label %18
    i32 353888025, label %38
    i32 114790609, label %68
    i32 2005057357, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 353888025, i32 2005057357
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %39, align 8
  %40 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %39, align 8
  %41 = bitcast %"class.std::allocator.25"* %40 to %"class.__gnu_cxx::new_allocator.26"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEED2Ev(%"class.__gnu_cxx::new_allocator.26"* %41) #3
  %42 = load i32, i32* @x.37
  %43 = load i32, i32* @y.38
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 114790609, i32 2005057357
  store i32 %67, i32* %14
  br label %73

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %70, align 8
  %71 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %70, align 8
  %72 = bitcast %"class.std::allocator.25"* %71 to %"class.__gnu_cxx::new_allocator.26"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEED2Ev(%"class.__gnu_cxx::new_allocator.26"* %72) #3
  store i32 353888025, i32* %14
  br label %73

; <label>:73:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14) #3
  invoke void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %9, i64* %13, %"class.std::allocator.0"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #10
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxED2Ev(%"class.std::allocator.0"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %2, align 8
  %3 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %2, align 8
  %4 = bitcast %"class.std::allocator.0"* %3 to %"class.__gnu_cxx::new_allocator.1"*
  call void @_ZN9__gnu_cxx13new_allocatorIxED2Ev(%"class.__gnu_cxx::new_allocator.1"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN5Graph11bellmanFordExx(%class.Graph*, i64, i64) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i32
  %6 = alloca i1
  %7 = alloca i1
  %8 = alloca i1
  %9 = alloca i32
  %10 = alloca i1
  %11 = alloca i1
  %12 = alloca i1
  %13 = alloca %class.Graph*
  %14 = alloca i64, align 8
  %15 = alloca %class.Graph*, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca %"class.std::vector.13"*, align 8
  %21 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %22 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %23 = alloca %"struct.Graph::Node", align 8
  %24 = alloca i32
  %25 = alloca %"class.std::vector.18"*, align 8
  %26 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %28 = alloca %"struct.Graph::Edge", align 8
  %29 = alloca %"class.std::vector.13"*, align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %31 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %32 = alloca %"struct.Graph::Node", align 8
  %33 = alloca %"class.std::vector.18"*, align 8
  %34 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %35 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %36 = alloca %"struct.Graph::Edge", align 8
  store %class.Graph* %0, %class.Graph** %15, align 8
  store i64 %1, i64* %16, align 8
  store i64 %2, i64* %17, align 8
  %37 = load %class.Graph*, %class.Graph** %15, align 8
  store %class.Graph* %37, %class.Graph** %13
  store i64 0, i64* %18, align 8
  %38 = alloca i32
  store i32 513927553, i32* %38
  br label %39

; <label>:39:                                     ; preds = %3, %1129
  %40 = load i32, i32* %38
  switch i32 %40, label %41 [
    i32 513927553, label %42
    i32 80075900, label %70
    i32 -187584778, label %91
    i32 -1323024657, label %94
    i32 -1727477283, label %100
    i32 -1472697065, label %106
    i32 1754240210, label %134
    i32 -1832809809, label %167
    i32 2097887722, label %168
    i32 -944750871, label %183
    i32 -498352326, label %216
    i32 1416075859, label %219
    i32 -1367920234, label %228
    i32 -490073902, label %231
    i32 -107505226, label %237
    i32 396836788, label %252
    i32 -1992612188, label %279
    i32 -1737951799, label %280
    i32 -8179784, label %288
    i32 -646048621, label %291
    i32 -504852850, label %319
    i32 1169879294, label %365
    i32 -2027246281, label %368
    i32 1771107681, label %384
    i32 1774925432, label %427
    i32 -2062030546, label %428
    i32 -1836844738, label %456
    i32 -1766969705, label %472
    i32 1562134668, label %473
    i32 -390323385, label %501
    i32 1621141279, label %530
    i32 -2024469634, label %531
    i32 -774140422, label %532
    i32 -1093937039, label %534
    i32 -1683637628, label %538
    i32 1627282356, label %539
    i32 930514898, label %554
    i32 -1555625375, label %582
    i32 1314491732, label %583
    i32 873673838, label %585
    i32 1478724015, label %600
    i32 -1370521917, label %627
    i32 1094709073, label %628
    i32 999318566, label %633
    i32 -159499966, label %642
    i32 -2039822059, label %645
    i32 1857100291, label %673
    i32 -1655107995, label %693
    i32 -659272025, label %696
    i32 -411898994, label %697
    i32 -1848118393, label %705
    i32 793185626, label %733
    i32 65354066, label %762
    i32 -1926637366, label %765
    i32 -340244827, label %793
    i32 -1210846221, label %828
    i32 408676964, label %831
    i32 -1340735642, label %832
    i32 -1987914584, label %833
    i32 748702911, label %835
    i32 1732533946, label %863
    i32 -1880977508, label %879
    i32 65214389, label %880
    i32 541821455, label %882
    i32 -589650669, label %886
    i32 1018442679, label %890
    i32 -1043378747, label %891
    i32 129036723, label %892
    i32 861145901, label %894
    i32 1519221807, label %901
    i32 -135261750, label %929
    i32 -2122083020, label %958
    i32 2084726857, label %960
    i32 1955377231, label %966
    i32 1647755510, label %972
    i32 -1713995387, label %978
    i32 1573686737, label %979
    i32 2123106867, label %1024
    i32 1472548299, label %1059
    i32 92540416, label %1060
    i32 -630602067, label %1062
    i32 1651683091, label %1063
    i32 -133751970, label %1064
    i32 -2127346582, label %1069
    i32 -1445717244, label %1071
    i32 -741850636, label %1126
    i32 -1502859402, label %1127
  ]

; <label>:41:                                     ; preds = %39
  br label %1129

; <label>:42:                                     ; preds = %39
  %43 = load i32, i32* @x.43
  %44 = load i32, i32* @y.44
  %45 = add i32 %43, -400971632
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -400971632
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 80075900, i32 2084726857
  store i32 %69, i32* %38
  br label %1129

; <label>:70:                                     ; preds = %39
  %71 = load i64, i64* %18, align 8
  %72 = load volatile %class.Graph*, %class.Graph** %13
  %73 = getelementptr inbounds %class.Graph, %class.Graph* %72, i32 0, i32 0
  %74 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %73) #3
  %75 = icmp ult i64 %71, %74
  store i1 %75, i1* %12
  %76 = load i32, i32* @x.43
  %77 = load i32, i32* @y.44
  %78 = sub i32 %76, 943734453
  %79 = sub i32 %78, 1
  %80 = add i32 %79, 943734453
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = and i1 %84, %85
  %87 = xor i1 %84, %85
  %88 = or i1 %86, %87
  %89 = or i1 %84, %85
  %90 = select i1 %88, i32 -187584778, i32 2084726857
  store i32 %90, i32* %38
  br label %1129

; <label>:91:                                     ; preds = %39
  %92 = load volatile i1, i1* %12
  %93 = select i1 %92, i32 -1323024657, i32 -1472697065
  store i32 %93, i32* %38
  br label %1129

; <label>:94:                                     ; preds = %39
  %95 = load volatile %class.Graph*, %class.Graph** %13
  %96 = getelementptr inbounds %class.Graph, %class.Graph* %95, i32 0, i32 0
  %97 = load i64, i64* %18, align 8
  %98 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %96, i64 %97) #3
  %99 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %98, i32 0, i32 0
  store i64 9223372036854775807, i64* %99, align 8
  store i32 -1727477283, i32* %38
  br label %1129

; <label>:100:                                    ; preds = %39
  %101 = load i64, i64* %18, align 8
  %102 = add i64 %101, 5398424983545946763
  %103 = add i64 %102, 1
  %104 = sub i64 %103, 5398424983545946763
  %105 = add nsw i64 %101, 1
  store i64 %104, i64* %18, align 8
  store i32 513927553, i32* %38
  br label %1129

; <label>:106:                                    ; preds = %39
  %107 = load i32, i32* @x.43
  %108 = load i32, i32* @y.44
  %109 = add i32 %107, -1160429242
  %110 = sub i32 %109, 1
  %111 = sub i32 %110, -1160429242
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = xor i1 %115, true
  %118 = xor i1 %116, true
  %119 = xor i1 true, true
  %120 = and i1 %117, true
  %121 = and i1 %115, %119
  %122 = and i1 %118, true
  %123 = and i1 %116, %119
  %124 = or i1 %120, %121
  %125 = or i1 %122, %123
  %126 = xor i1 %124, %125
  %127 = or i1 %117, %118
  %128 = xor i1 %127, true
  %129 = or i1 true, %119
  %130 = and i1 %128, %129
  %131 = or i1 %126, %130
  %132 = or i1 %115, %116
  %133 = select i1 %131, i32 1754240210, i32 1955377231
  store i32 %133, i32* %38
  br label %1129

; <label>:134:                                    ; preds = %39
  %135 = load volatile %class.Graph*, %class.Graph** %13
  %136 = getelementptr inbounds %class.Graph, %class.Graph* %135, i32 0, i32 0
  %137 = load i64, i64* %16, align 8
  %138 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %136, i64 %137) #3
  %139 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %138, i32 0, i32 0
  store i64 0, i64* %139, align 8
  store i64 0, i64* %19, align 8
  %140 = load i32, i32* @x.43
  %141 = load i32, i32* @y.44
  %142 = add i32 %140, -1681239816
  %143 = sub i32 %142, 1
  %144 = sub i32 %143, -1681239816
  %145 = sub i32 %140, 1
  %146 = mul i32 %140, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %141, 10
  %150 = xor i1 %148, true
  %151 = xor i1 %149, true
  %152 = xor i1 false, true
  %153 = and i1 %150, false
  %154 = and i1 %148, %152
  %155 = and i1 %151, false
  %156 = and i1 %149, %152
  %157 = or i1 %153, %154
  %158 = or i1 %155, %156
  %159 = xor i1 %157, %158
  %160 = or i1 %150, %151
  %161 = xor i1 %160, true
  %162 = or i1 false, %152
  %163 = and i1 %161, %162
  %164 = or i1 %159, %163
  %165 = or i1 %148, %149
  %166 = select i1 %164, i32 -1832809809, i32 1955377231
  store i32 %166, i32* %38
  br label %1129

; <label>:167:                                    ; preds = %39
  store i32 2097887722, i32* %38
  br label %1129

; <label>:168:                                    ; preds = %39
  %169 = load i32, i32* @x.43
  %170 = load i32, i32* @y.44
  %171 = sub i32 0, 1
  %172 = add i32 %169, %171
  %173 = sub i32 %169, 1
  %174 = mul i32 %169, %172
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %170, 10
  %178 = and i1 %176, %177
  %179 = xor i1 %176, %177
  %180 = or i1 %178, %179
  %181 = or i1 %176, %177
  %182 = select i1 %180, i32 -944750871, i32 1647755510
  store i32 %182, i32* %38
  br label %1129

; <label>:183:                                    ; preds = %39
  %184 = load i64, i64* %19, align 8
  %185 = load volatile %class.Graph*, %class.Graph** %13
  %186 = getelementptr inbounds %class.Graph, %class.Graph* %185, i32 0, i32 0
  %187 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %186) #3
  %188 = icmp ult i64 %184, %187
  store i1 %188, i1* %11
  %189 = load i32, i32* @x.43
  %190 = load i32, i32* @y.44
  %191 = sub i32 %189, -1388922485
  %192 = sub i32 %191, 1
  %193 = add i32 %192, -1388922485
  %194 = sub i32 %189, 1
  %195 = mul i32 %189, %193
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %190, 10
  %199 = xor i1 %197, true
  %200 = xor i1 %198, true
  %201 = xor i1 true, true
  %202 = and i1 %199, true
  %203 = and i1 %197, %201
  %204 = and i1 %200, true
  %205 = and i1 %198, %201
  %206 = or i1 %202, %203
  %207 = or i1 %204, %205
  %208 = xor i1 %206, %207
  %209 = or i1 %199, %200
  %210 = xor i1 %209, true
  %211 = or i1 true, %201
  %212 = and i1 %210, %211
  %213 = or i1 %208, %212
  %214 = or i1 %197, %198
  %215 = select i1 %213, i32 -498352326, i32 1647755510
  store i32 %215, i32* %38
  br label %1129

; <label>:216:                                    ; preds = %39
  %217 = load volatile i1, i1* %11
  %218 = select i1 %217, i32 1416075859, i32 999318566
  store i32 %218, i32* %38
  br label %1129

; <label>:219:                                    ; preds = %39
  %220 = load volatile %class.Graph*, %class.Graph** %13
  %221 = getelementptr inbounds %class.Graph, %class.Graph* %220, i32 0, i32 0
  store %"class.std::vector.13"* %221, %"class.std::vector.13"** %20, align 8
  %222 = load %"class.std::vector.13"*, %"class.std::vector.13"** %20, align 8
  %223 = call %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EE5beginEv(%"class.std::vector.13"* %222) #3
  %224 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %21, i32 0, i32 0
  store %"struct.Graph::Node"* %223, %"struct.Graph::Node"** %224, align 8
  %225 = load %"class.std::vector.13"*, %"class.std::vector.13"** %20, align 8
  %226 = call %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EE3endEv(%"class.std::vector.13"* %225) #3
  %227 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %22, i32 0, i32 0
  store %"struct.Graph::Node"* %226, %"struct.Graph::Node"** %227, align 8
  store i32 -1367920234, i32* %38
  br label %1129

; <label>:228:                                    ; preds = %39
  %229 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Graph4NodeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %21, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %22) #3
  %230 = select i1 %229, i32 -490073902, i32 873673838
  store i32 %230, i32* %38
  br label %1129

; <label>:231:                                    ; preds = %39
  %232 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4NodeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %21) #3
  call void @_ZN5Graph4NodeC2ERKS0_(%"struct.Graph::Node"* %23, %"struct.Graph::Node"* dereferenceable(32) %232)
  %233 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %23, i32 0, i32 0
  %234 = load i64, i64* %233, align 8
  %235 = icmp eq i64 %234, 9223372036854775807
  %236 = select i1 %235, i32 -107505226, i32 -1737951799
  store i32 %236, i32* %38
  br label %1129

; <label>:237:                                    ; preds = %39
  %238 = load i32, i32* @x.43
  %239 = load i32, i32* @y.44
  %240 = sub i32 0, 1
  %241 = add i32 %238, %240
  %242 = sub i32 %238, 1
  %243 = mul i32 %238, %241
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %239, 10
  %247 = and i1 %245, %246
  %248 = xor i1 %245, %246
  %249 = or i1 %247, %248
  %250 = or i1 %245, %246
  %251 = select i1 %249, i32 396836788, i32 -1713995387
  store i32 %251, i32* %38
  br label %1129

; <label>:252:                                    ; preds = %39
  store i32 9, i32* %24, align 4
  %253 = load i32, i32* @x.43
  %254 = load i32, i32* @y.44
  %255 = sub i32 0, 1
  %256 = add i32 %253, %255
  %257 = sub i32 %253, 1
  %258 = mul i32 %253, %256
  %259 = urem i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %254, 10
  %262 = xor i1 %260, true
  %263 = xor i1 %261, true
  %264 = xor i1 false, true
  %265 = and i1 %262, false
  %266 = and i1 %260, %264
  %267 = and i1 %263, false
  %268 = and i1 %261, %264
  %269 = or i1 %265, %266
  %270 = or i1 %267, %268
  %271 = xor i1 %269, %270
  %272 = or i1 %262, %263
  %273 = xor i1 %272, true
  %274 = or i1 false, %264
  %275 = and i1 %273, %274
  %276 = or i1 %271, %275
  %277 = or i1 %260, %261
  %278 = select i1 %276, i32 -1992612188, i32 -1713995387
  store i32 %278, i32* %38
  br label %1129

; <label>:279:                                    ; preds = %39
  store i32 -774140422, i32* %38
  br label %1129

; <label>:280:                                    ; preds = %39
  %281 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %23, i32 0, i32 1
  store %"class.std::vector.18"* %281, %"class.std::vector.18"** %25, align 8
  %282 = load %"class.std::vector.18"*, %"class.std::vector.18"** %25, align 8
  %283 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE5beginEv(%"class.std::vector.18"* %282) #3
  %284 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %26, i32 0, i32 0
  store %"struct.Graph::Edge"* %283, %"struct.Graph::Edge"** %284, align 8
  %285 = load %"class.std::vector.18"*, %"class.std::vector.18"** %25, align 8
  %286 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE3endEv(%"class.std::vector.18"* %285) #3
  %287 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %27, i32 0, i32 0
  store %"struct.Graph::Edge"* %286, %"struct.Graph::Edge"** %287, align 8
  store i32 -8179784, i32* %38
  br label %1129

; <label>:288:                                    ; preds = %39
  %289 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator.29"* dereferenceable(8) %26, %"class.__gnu_cxx::__normal_iterator.29"* dereferenceable(8) %27) #3
  %290 = select i1 %289, i32 -646048621, i32 -2024469634
  store i32 %290, i32* %38
  br label %1129

; <label>:291:                                    ; preds = %39
  %292 = load i32, i32* @x.43
  %293 = load i32, i32* @y.44
  %294 = sub i32 %292, 1045192940
  %295 = sub i32 %294, 1
  %296 = add i32 %295, 1045192940
  %297 = sub i32 %292, 1
  %298 = mul i32 %292, %296
  %299 = urem i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %293, 10
  %302 = xor i1 %300, true
  %303 = xor i1 %301, true
  %304 = xor i1 false, true
  %305 = and i1 %302, false
  %306 = and i1 %300, %304
  %307 = and i1 %303, false
  %308 = and i1 %301, %304
  %309 = or i1 %305, %306
  %310 = or i1 %307, %308
  %311 = xor i1 %309, %310
  %312 = or i1 %302, %303
  %313 = xor i1 %312, true
  %314 = or i1 false, %304
  %315 = and i1 %313, %314
  %316 = or i1 %311, %315
  %317 = or i1 %300, %301
  %318 = select i1 %316, i32 -504852850, i32 1573686737
  store i32 %318, i32* %38
  br label %1129

; <label>:319:                                    ; preds = %39
  %320 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.29"* %26) #3
  %321 = bitcast %"struct.Graph::Edge"* %28 to i8*
  %322 = bitcast %"struct.Graph::Edge"* %320 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %321, i8* %322, i64 16, i32 8, i1 false)
  %323 = load volatile %class.Graph*, %class.Graph** %13
  %324 = getelementptr inbounds %class.Graph, %class.Graph* %323, i32 0, i32 0
  %325 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %28, i32 0, i32 0
  %326 = load i64, i64* %325, align 8
  %327 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %324, i64 %326) #3
  %328 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %327, i32 0, i32 0
  %329 = load i64, i64* %328, align 8
  %330 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %23, i32 0, i32 0
  %331 = load i64, i64* %330, align 8
  %332 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %28, i32 0, i32 1
  %333 = load i64, i64* %332, align 8
  %334 = sub i64 0, %333
  %335 = sub i64 %331, %334
  %336 = add nsw i64 %331, %333
  %337 = icmp sgt i64 %329, %335
  store i1 %337, i1* %10
  %338 = load i32, i32* @x.43
  %339 = load i32, i32* @y.44
  %340 = add i32 %338, 248135234
  %341 = sub i32 %340, 1
  %342 = sub i32 %341, 248135234
  %343 = sub i32 %338, 1
  %344 = mul i32 %338, %342
  %345 = urem i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %339, 10
  %348 = xor i1 %346, true
  %349 = xor i1 %347, true
  %350 = xor i1 true, true
  %351 = and i1 %348, true
  %352 = and i1 %346, %350
  %353 = and i1 %349, true
  %354 = and i1 %347, %350
  %355 = or i1 %351, %352
  %356 = or i1 %353, %354
  %357 = xor i1 %355, %356
  %358 = or i1 %348, %349
  %359 = xor i1 %358, true
  %360 = or i1 true, %350
  %361 = and i1 %359, %360
  %362 = or i1 %357, %361
  %363 = or i1 %346, %347
  %364 = select i1 %362, i32 1169879294, i32 1573686737
  store i32 %364, i32* %38
  br label %1129

; <label>:365:                                    ; preds = %39
  %366 = load volatile i1, i1* %10
  %367 = select i1 %366, i32 -2027246281, i32 -2062030546
  store i32 %367, i32* %38
  br label %1129

; <label>:368:                                    ; preds = %39
  %369 = load i32, i32* @x.43
  %370 = load i32, i32* @y.44
  %371 = add i32 %369, 32572065
  %372 = sub i32 %371, 1
  %373 = sub i32 %372, 32572065
  %374 = sub i32 %369, 1
  %375 = mul i32 %369, %373
  %376 = urem i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %370, 10
  %379 = and i1 %377, %378
  %380 = xor i1 %377, %378
  %381 = or i1 %379, %380
  %382 = or i1 %377, %378
  %383 = select i1 %381, i32 1771107681, i32 2123106867
  store i32 %383, i32* %38
  br label %1129

; <label>:384:                                    ; preds = %39
  %385 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %23, i32 0, i32 0
  %386 = load i64, i64* %385, align 8
  %387 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %28, i32 0, i32 1
  %388 = load i64, i64* %387, align 8
  %389 = sub i64 0, %386
  %390 = sub i64 0, %388
  %391 = add i64 %389, %390
  %392 = sub i64 0, %391
  %393 = add nsw i64 %386, %388
  %394 = load volatile %class.Graph*, %class.Graph** %13
  %395 = getelementptr inbounds %class.Graph, %class.Graph* %394, i32 0, i32 0
  %396 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %28, i32 0, i32 0
  %397 = load i64, i64* %396, align 8
  %398 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %395, i64 %397) #3
  %399 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %398, i32 0, i32 0
  store i64 %392, i64* %399, align 8
  %400 = load i32, i32* @x.43
  %401 = load i32, i32* @y.44
  %402 = sub i32 %400, -1639650689
  %403 = sub i32 %402, 1
  %404 = add i32 %403, -1639650689
  %405 = sub i32 %400, 1
  %406 = mul i32 %400, %404
  %407 = urem i32 %406, 2
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %401, 10
  %410 = xor i1 %408, true
  %411 = xor i1 %409, true
  %412 = xor i1 true, true
  %413 = and i1 %410, true
  %414 = and i1 %408, %412
  %415 = and i1 %411, true
  %416 = and i1 %409, %412
  %417 = or i1 %413, %414
  %418 = or i1 %415, %416
  %419 = xor i1 %417, %418
  %420 = or i1 %410, %411
  %421 = xor i1 %420, true
  %422 = or i1 true, %412
  %423 = and i1 %421, %422
  %424 = or i1 %419, %423
  %425 = or i1 %408, %409
  %426 = select i1 %424, i32 1774925432, i32 2123106867
  store i32 %426, i32* %38
  br label %1129

; <label>:427:                                    ; preds = %39
  store i32 -2062030546, i32* %38
  br label %1129

; <label>:428:                                    ; preds = %39
  %429 = load i32, i32* @x.43
  %430 = load i32, i32* @y.44
  %431 = sub i32 %429, -1669740160
  %432 = sub i32 %431, 1
  %433 = add i32 %432, -1669740160
  %434 = sub i32 %429, 1
  %435 = mul i32 %429, %433
  %436 = urem i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = icmp slt i32 %430, 10
  %439 = xor i1 %437, true
  %440 = xor i1 %438, true
  %441 = xor i1 false, true
  %442 = and i1 %439, false
  %443 = and i1 %437, %441
  %444 = and i1 %440, false
  %445 = and i1 %438, %441
  %446 = or i1 %442, %443
  %447 = or i1 %444, %445
  %448 = xor i1 %446, %447
  %449 = or i1 %439, %440
  %450 = xor i1 %449, true
  %451 = or i1 false, %441
  %452 = and i1 %450, %451
  %453 = or i1 %448, %452
  %454 = or i1 %437, %438
  %455 = select i1 %453, i32 -1836844738, i32 1472548299
  store i32 %455, i32* %38
  br label %1129

; <label>:456:                                    ; preds = %39
  %457 = load i32, i32* @x.43
  %458 = load i32, i32* @y.44
  %459 = add i32 %457, 1955843097
  %460 = sub i32 %459, 1
  %461 = sub i32 %460, 1955843097
  %462 = sub i32 %457, 1
  %463 = mul i32 %457, %461
  %464 = urem i32 %463, 2
  %465 = icmp eq i32 %464, 0
  %466 = icmp slt i32 %458, 10
  %467 = and i1 %465, %466
  %468 = xor i1 %465, %466
  %469 = or i1 %467, %468
  %470 = or i1 %465, %466
  %471 = select i1 %469, i32 -1766969705, i32 1472548299
  store i32 %471, i32* %38
  br label %1129

; <label>:472:                                    ; preds = %39
  store i32 1562134668, i32* %38
  br label %1129

; <label>:473:                                    ; preds = %39
  %474 = load i32, i32* @x.43
  %475 = load i32, i32* @y.44
  %476 = sub i32 %474, -866654187
  %477 = sub i32 %476, 1
  %478 = add i32 %477, -866654187
  %479 = sub i32 %474, 1
  %480 = mul i32 %474, %478
  %481 = urem i32 %480, 2
  %482 = icmp eq i32 %481, 0
  %483 = icmp slt i32 %475, 10
  %484 = xor i1 %482, true
  %485 = xor i1 %483, true
  %486 = xor i1 true, true
  %487 = and i1 %484, true
  %488 = and i1 %482, %486
  %489 = and i1 %485, true
  %490 = and i1 %483, %486
  %491 = or i1 %487, %488
  %492 = or i1 %489, %490
  %493 = xor i1 %491, %492
  %494 = or i1 %484, %485
  %495 = xor i1 %494, true
  %496 = or i1 true, %486
  %497 = and i1 %495, %496
  %498 = or i1 %493, %497
  %499 = or i1 %482, %483
  %500 = select i1 %498, i32 -390323385, i32 92540416
  store i32 %500, i32* %38
  br label %1129

; <label>:501:                                    ; preds = %39
  %502 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.29"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator.29"* %26) #3
  %503 = load i32, i32* @x.43
  %504 = load i32, i32* @y.44
  %505 = add i32 %503, -1431382384
  %506 = sub i32 %505, 1
  %507 = sub i32 %506, -1431382384
  %508 = sub i32 %503, 1
  %509 = mul i32 %503, %507
  %510 = urem i32 %509, 2
  %511 = icmp eq i32 %510, 0
  %512 = icmp slt i32 %504, 10
  %513 = xor i1 %511, true
  %514 = xor i1 %512, true
  %515 = xor i1 false, true
  %516 = and i1 %513, false
  %517 = and i1 %511, %515
  %518 = and i1 %514, false
  %519 = and i1 %512, %515
  %520 = or i1 %516, %517
  %521 = or i1 %518, %519
  %522 = xor i1 %520, %521
  %523 = or i1 %513, %514
  %524 = xor i1 %523, true
  %525 = or i1 false, %515
  %526 = and i1 %524, %525
  %527 = or i1 %522, %526
  %528 = or i1 %511, %512
  %529 = select i1 %527, i32 1621141279, i32 92540416
  store i32 %529, i32* %38
  br label %1129

; <label>:530:                                    ; preds = %39
  store i32 -8179784, i32* %38
  br label %1129

; <label>:531:                                    ; preds = %39
  store i32 0, i32* %24, align 4
  store i32 -774140422, i32* %38
  br label %1129

; <label>:532:                                    ; preds = %39
  call void @_ZN5Graph4NodeD2Ev(%"struct.Graph::Node"* %23) #3
  %533 = load i32, i32* %24, align 4
  store i32 %533, i32* %9
  store i32 -1093937039, i32* %38
  br label %1129

; <label>:534:                                    ; preds = %39
  %535 = load volatile i32, i32* %9
  %536 = icmp eq i32 %535, 9
  %537 = select i1 %536, i32 1314491732, i32 -1683637628
  store i32 %537, i32* %38
  br label %1129

; <label>:538:                                    ; preds = %39
  store i32 1627282356, i32* %38
  br label %1129

; <label>:539:                                    ; preds = %39
  %540 = load i32, i32* @x.43
  %541 = load i32, i32* @y.44
  %542 = sub i32 0, 1
  %543 = add i32 %540, %542
  %544 = sub i32 %540, 1
  %545 = mul i32 %540, %543
  %546 = urem i32 %545, 2
  %547 = icmp eq i32 %546, 0
  %548 = icmp slt i32 %541, 10
  %549 = and i1 %547, %548
  %550 = xor i1 %547, %548
  %551 = or i1 %549, %550
  %552 = or i1 %547, %548
  %553 = select i1 %551, i32 930514898, i32 -630602067
  store i32 %553, i32* %38
  br label %1129

; <label>:554:                                    ; preds = %39
  %555 = load i32, i32* @x.43
  %556 = load i32, i32* @y.44
  %557 = sub i32 %555, -1118798588
  %558 = sub i32 %557, 1
  %559 = add i32 %558, -1118798588
  %560 = sub i32 %555, 1
  %561 = mul i32 %555, %559
  %562 = urem i32 %561, 2
  %563 = icmp eq i32 %562, 0
  %564 = icmp slt i32 %556, 10
  %565 = xor i1 %563, true
  %566 = xor i1 %564, true
  %567 = xor i1 false, true
  %568 = and i1 %565, false
  %569 = and i1 %563, %567
  %570 = and i1 %566, false
  %571 = and i1 %564, %567
  %572 = or i1 %568, %569
  %573 = or i1 %570, %571
  %574 = xor i1 %572, %573
  %575 = or i1 %565, %566
  %576 = xor i1 %575, true
  %577 = or i1 false, %567
  %578 = and i1 %576, %577
  %579 = or i1 %574, %578
  %580 = or i1 %563, %564
  %581 = select i1 %579, i32 -1555625375, i32 -630602067
  store i32 %581, i32* %38
  br label %1129

; <label>:582:                                    ; preds = %39
  store i32 1314491732, i32* %38
  br label %1129

; <label>:583:                                    ; preds = %39
  %584 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4NodeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %21) #3
  store i32 -1367920234, i32* %38
  br label %1129

; <label>:585:                                    ; preds = %39
  %586 = load i32, i32* @x.43
  %587 = load i32, i32* @y.44
  %588 = sub i32 0, 1
  %589 = add i32 %586, %588
  %590 = sub i32 %586, 1
  %591 = mul i32 %586, %589
  %592 = urem i32 %591, 2
  %593 = icmp eq i32 %592, 0
  %594 = icmp slt i32 %587, 10
  %595 = and i1 %593, %594
  %596 = xor i1 %593, %594
  %597 = or i1 %595, %596
  %598 = or i1 %593, %594
  %599 = select i1 %597, i32 1478724015, i32 1651683091
  store i32 %599, i32* %38
  br label %1129

; <label>:600:                                    ; preds = %39
  %601 = load i32, i32* @x.43
  %602 = load i32, i32* @y.44
  %603 = sub i32 0, 1
  %604 = add i32 %601, %603
  %605 = sub i32 %601, 1
  %606 = mul i32 %601, %604
  %607 = urem i32 %606, 2
  %608 = icmp eq i32 %607, 0
  %609 = icmp slt i32 %602, 10
  %610 = xor i1 %608, true
  %611 = xor i1 %609, true
  %612 = xor i1 true, true
  %613 = and i1 %610, true
  %614 = and i1 %608, %612
  %615 = and i1 %611, true
  %616 = and i1 %609, %612
  %617 = or i1 %613, %614
  %618 = or i1 %615, %616
  %619 = xor i1 %617, %618
  %620 = or i1 %610, %611
  %621 = xor i1 %620, true
  %622 = or i1 true, %612
  %623 = and i1 %621, %622
  %624 = or i1 %619, %623
  %625 = or i1 %608, %609
  %626 = select i1 %624, i32 -1370521917, i32 1651683091
  store i32 %626, i32* %38
  br label %1129

; <label>:627:                                    ; preds = %39
  store i32 1094709073, i32* %38
  br label %1129

; <label>:628:                                    ; preds = %39
  %629 = load i64, i64* %19, align 8
  %630 = sub i64 0, 1
  %631 = sub i64 %629, %630
  %632 = add nsw i64 %629, 1
  store i64 %631, i64* %19, align 8
  store i32 2097887722, i32* %38
  br label %1129

; <label>:633:                                    ; preds = %39
  %634 = load volatile %class.Graph*, %class.Graph** %13
  %635 = getelementptr inbounds %class.Graph, %class.Graph* %634, i32 0, i32 0
  store %"class.std::vector.13"* %635, %"class.std::vector.13"** %29, align 8
  %636 = load %"class.std::vector.13"*, %"class.std::vector.13"** %29, align 8
  %637 = call %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EE5beginEv(%"class.std::vector.13"* %636) #3
  %638 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %30, i32 0, i32 0
  store %"struct.Graph::Node"* %637, %"struct.Graph::Node"** %638, align 8
  %639 = load %"class.std::vector.13"*, %"class.std::vector.13"** %29, align 8
  %640 = call %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EE3endEv(%"class.std::vector.13"* %639) #3
  %641 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %31, i32 0, i32 0
  store %"struct.Graph::Node"* %640, %"struct.Graph::Node"** %641, align 8
  store i32 -159499966, i32* %38
  br label %1129

; <label>:642:                                    ; preds = %39
  %643 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Graph4NodeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %30, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %31) #3
  %644 = select i1 %643, i32 -2039822059, i32 861145901
  store i32 %644, i32* %38
  br label %1129

; <label>:645:                                    ; preds = %39
  %646 = load i32, i32* @x.43
  %647 = load i32, i32* @y.44
  %648 = add i32 %646, -1658597034
  %649 = sub i32 %648, 1
  %650 = sub i32 %649, -1658597034
  %651 = sub i32 %646, 1
  %652 = mul i32 %646, %650
  %653 = urem i32 %652, 2
  %654 = icmp eq i32 %653, 0
  %655 = icmp slt i32 %647, 10
  %656 = xor i1 %654, true
  %657 = xor i1 %655, true
  %658 = xor i1 false, true
  %659 = and i1 %656, false
  %660 = and i1 %654, %658
  %661 = and i1 %657, false
  %662 = and i1 %655, %658
  %663 = or i1 %659, %660
  %664 = or i1 %661, %662
  %665 = xor i1 %663, %664
  %666 = or i1 %656, %657
  %667 = xor i1 %666, true
  %668 = or i1 false, %658
  %669 = and i1 %667, %668
  %670 = or i1 %665, %669
  %671 = or i1 %654, %655
  %672 = select i1 %670, i32 1857100291, i32 -133751970
  store i32 %672, i32* %38
  br label %1129

; <label>:673:                                    ; preds = %39
  %674 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4NodeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %30) #3
  call void @_ZN5Graph4NodeC2ERKS0_(%"struct.Graph::Node"* %32, %"struct.Graph::Node"* dereferenceable(32) %674)
  %675 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %32, i32 0, i32 0
  %676 = load i64, i64* %675, align 8
  %677 = icmp eq i64 %676, 9223372036854775807
  store i1 %677, i1* %8
  %678 = load i32, i32* @x.43
  %679 = load i32, i32* @y.44
  %680 = add i32 %678, -472471636
  %681 = sub i32 %680, 1
  %682 = sub i32 %681, -472471636
  %683 = sub i32 %678, 1
  %684 = mul i32 %678, %682
  %685 = urem i32 %684, 2
  %686 = icmp eq i32 %685, 0
  %687 = icmp slt i32 %679, 10
  %688 = and i1 %686, %687
  %689 = xor i1 %686, %687
  %690 = or i1 %688, %689
  %691 = or i1 %686, %687
  %692 = select i1 %690, i32 -1655107995, i32 -133751970
  store i32 %692, i32* %38
  br label %1129

; <label>:693:                                    ; preds = %39
  %694 = load volatile i1, i1* %8
  %695 = select i1 %694, i32 -659272025, i32 -411898994
  store i32 %695, i32* %38
  br label %1129

; <label>:696:                                    ; preds = %39
  store i32 13, i32* %24, align 4
  store i32 65214389, i32* %38
  br label %1129

; <label>:697:                                    ; preds = %39
  %698 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %32, i32 0, i32 1
  store %"class.std::vector.18"* %698, %"class.std::vector.18"** %33, align 8
  %699 = load %"class.std::vector.18"*, %"class.std::vector.18"** %33, align 8
  %700 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE5beginEv(%"class.std::vector.18"* %699) #3
  %701 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %34, i32 0, i32 0
  store %"struct.Graph::Edge"* %700, %"struct.Graph::Edge"** %701, align 8
  %702 = load %"class.std::vector.18"*, %"class.std::vector.18"** %33, align 8
  %703 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE3endEv(%"class.std::vector.18"* %702) #3
  %704 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %35, i32 0, i32 0
  store %"struct.Graph::Edge"* %703, %"struct.Graph::Edge"** %704, align 8
  store i32 -1848118393, i32* %38
  br label %1129

; <label>:705:                                    ; preds = %39
  %706 = load i32, i32* @x.43
  %707 = load i32, i32* @y.44
  %708 = sub i32 %706, 2102690254
  %709 = sub i32 %708, 1
  %710 = add i32 %709, 2102690254
  %711 = sub i32 %706, 1
  %712 = mul i32 %706, %710
  %713 = urem i32 %712, 2
  %714 = icmp eq i32 %713, 0
  %715 = icmp slt i32 %707, 10
  %716 = xor i1 %714, true
  %717 = xor i1 %715, true
  %718 = xor i1 true, true
  %719 = and i1 %716, true
  %720 = and i1 %714, %718
  %721 = and i1 %717, true
  %722 = and i1 %715, %718
  %723 = or i1 %719, %720
  %724 = or i1 %721, %722
  %725 = xor i1 %723, %724
  %726 = or i1 %716, %717
  %727 = xor i1 %726, true
  %728 = or i1 true, %718
  %729 = and i1 %727, %728
  %730 = or i1 %725, %729
  %731 = or i1 %714, %715
  %732 = select i1 %730, i32 793185626, i32 -2127346582
  store i32 %732, i32* %38
  br label %1129

; <label>:733:                                    ; preds = %39
  %734 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator.29"* dereferenceable(8) %34, %"class.__gnu_cxx::__normal_iterator.29"* dereferenceable(8) %35) #3
  store i1 %734, i1* %7
  %735 = load i32, i32* @x.43
  %736 = load i32, i32* @y.44
  %737 = add i32 %735, -1930056993
  %738 = sub i32 %737, 1
  %739 = sub i32 %738, -1930056993
  %740 = sub i32 %735, 1
  %741 = mul i32 %735, %739
  %742 = urem i32 %741, 2
  %743 = icmp eq i32 %742, 0
  %744 = icmp slt i32 %736, 10
  %745 = xor i1 %743, true
  %746 = xor i1 %744, true
  %747 = xor i1 false, true
  %748 = and i1 %745, false
  %749 = and i1 %743, %747
  %750 = and i1 %746, false
  %751 = and i1 %744, %747
  %752 = or i1 %748, %749
  %753 = or i1 %750, %751
  %754 = xor i1 %752, %753
  %755 = or i1 %745, %746
  %756 = xor i1 %755, true
  %757 = or i1 false, %747
  %758 = and i1 %756, %757
  %759 = or i1 %754, %758
  %760 = or i1 %743, %744
  %761 = select i1 %759, i32 65354066, i32 -2127346582
  store i32 %761, i32* %38
  br label %1129

; <label>:762:                                    ; preds = %39
  %763 = load volatile i1, i1* %7
  %764 = select i1 %763, i32 -1926637366, i32 748702911
  store i32 %764, i32* %38
  br label %1129

; <label>:765:                                    ; preds = %39
  %766 = load i32, i32* @x.43
  %767 = load i32, i32* @y.44
  %768 = add i32 %766, 1665394409
  %769 = sub i32 %768, 1
  %770 = sub i32 %769, 1665394409
  %771 = sub i32 %766, 1
  %772 = mul i32 %766, %770
  %773 = urem i32 %772, 2
  %774 = icmp eq i32 %773, 0
  %775 = icmp slt i32 %767, 10
  %776 = xor i1 %774, true
  %777 = xor i1 %775, true
  %778 = xor i1 true, true
  %779 = and i1 %776, true
  %780 = and i1 %774, %778
  %781 = and i1 %777, true
  %782 = and i1 %775, %778
  %783 = or i1 %779, %780
  %784 = or i1 %781, %782
  %785 = xor i1 %783, %784
  %786 = or i1 %776, %777
  %787 = xor i1 %786, true
  %788 = or i1 true, %778
  %789 = and i1 %787, %788
  %790 = or i1 %785, %789
  %791 = or i1 %774, %775
  %792 = select i1 %790, i32 -340244827, i32 -1445717244
  store i32 %792, i32* %38
  br label %1129

; <label>:793:                                    ; preds = %39
  %794 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.29"* %34) #3
  %795 = bitcast %"struct.Graph::Edge"* %36 to i8*
  %796 = bitcast %"struct.Graph::Edge"* %794 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %795, i8* %796, i64 16, i32 8, i1 false)
  %797 = load volatile %class.Graph*, %class.Graph** %13
  %798 = getelementptr inbounds %class.Graph, %class.Graph* %797, i32 0, i32 0
  %799 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %36, i32 0, i32 0
  %800 = load i64, i64* %799, align 8
  %801 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %798, i64 %800) #3
  %802 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %801, i32 0, i32 0
  %803 = load i64, i64* %802, align 8
  %804 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %32, i32 0, i32 0
  %805 = load i64, i64* %804, align 8
  %806 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %36, i32 0, i32 1
  %807 = load i64, i64* %806, align 8
  %808 = add i64 %805, -3227182341569979029
  %809 = add i64 %808, %807
  %810 = sub i64 %809, -3227182341569979029
  %811 = add nsw i64 %805, %807
  %812 = icmp sgt i64 %803, %810
  store i1 %812, i1* %6
  %813 = load i32, i32* @x.43
  %814 = load i32, i32* @y.44
  %815 = sub i32 %813, -2005591499
  %816 = sub i32 %815, 1
  %817 = add i32 %816, -2005591499
  %818 = sub i32 %813, 1
  %819 = mul i32 %813, %817
  %820 = urem i32 %819, 2
  %821 = icmp eq i32 %820, 0
  %822 = icmp slt i32 %814, 10
  %823 = and i1 %821, %822
  %824 = xor i1 %821, %822
  %825 = or i1 %823, %824
  %826 = or i1 %821, %822
  %827 = select i1 %825, i32 -1210846221, i32 -1445717244
  store i32 %827, i32* %38
  br label %1129

; <label>:828:                                    ; preds = %39
  %829 = load volatile i1, i1* %6
  %830 = select i1 %829, i32 408676964, i32 -1340735642
  store i32 %830, i32* %38
  br label %1129

; <label>:831:                                    ; preds = %39
  store i64 -9223372036854775808, i64* %14, align 8
  store i32 1, i32* %24, align 4
  store i32 65214389, i32* %38
  br label %1129

; <label>:832:                                    ; preds = %39
  store i32 -1987914584, i32* %38
  br label %1129

; <label>:833:                                    ; preds = %39
  %834 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.29"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator.29"* %34) #3
  store i32 -1848118393, i32* %38
  br label %1129

; <label>:835:                                    ; preds = %39
  %836 = load i32, i32* @x.43
  %837 = load i32, i32* @y.44
  %838 = add i32 %836, -758171374
  %839 = sub i32 %838, 1
  %840 = sub i32 %839, -758171374
  %841 = sub i32 %836, 1
  %842 = mul i32 %836, %840
  %843 = urem i32 %842, 2
  %844 = icmp eq i32 %843, 0
  %845 = icmp slt i32 %837, 10
  %846 = xor i1 %844, true
  %847 = xor i1 %845, true
  %848 = xor i1 false, true
  %849 = and i1 %846, false
  %850 = and i1 %844, %848
  %851 = and i1 %847, false
  %852 = and i1 %845, %848
  %853 = or i1 %849, %850
  %854 = or i1 %851, %852
  %855 = xor i1 %853, %854
  %856 = or i1 %846, %847
  %857 = xor i1 %856, true
  %858 = or i1 false, %848
  %859 = and i1 %857, %858
  %860 = or i1 %855, %859
  %861 = or i1 %844, %845
  %862 = select i1 %860, i32 1732533946, i32 -741850636
  store i32 %862, i32* %38
  br label %1129

; <label>:863:                                    ; preds = %39
  store i32 0, i32* %24, align 4
  %864 = load i32, i32* @x.43
  %865 = load i32, i32* @y.44
  %866 = add i32 %864, -1144757929
  %867 = sub i32 %866, 1
  %868 = sub i32 %867, -1144757929
  %869 = sub i32 %864, 1
  %870 = mul i32 %864, %868
  %871 = urem i32 %870, 2
  %872 = icmp eq i32 %871, 0
  %873 = icmp slt i32 %865, 10
  %874 = and i1 %872, %873
  %875 = xor i1 %872, %873
  %876 = or i1 %874, %875
  %877 = or i1 %872, %873
  %878 = select i1 %876, i32 -1880977508, i32 -741850636
  store i32 %878, i32* %38
  br label %1129

; <label>:879:                                    ; preds = %39
  store i32 65214389, i32* %38
  br label %1129

; <label>:880:                                    ; preds = %39
  call void @_ZN5Graph4NodeD2Ev(%"struct.Graph::Node"* %32) #3
  %881 = load i32, i32* %24, align 4
  store i32 %881, i32* %5
  store i32 541821455, i32* %38
  br label %1129

; <label>:882:                                    ; preds = %39
  %883 = load volatile i32, i32* %5
  %884 = icmp slt i32 %883, 13
  %885 = select i1 %884, i32 -589650669, i32 129036723
  store i32 %885, i32* %38
  br label %1129

; <label>:886:                                    ; preds = %39
  %887 = load volatile i32, i32* %5
  %888 = icmp eq i32 %887, 1
  %889 = select i1 %888, i32 1519221807, i32 1018442679
  store i32 %889, i32* %38
  br label %1129

; <label>:890:                                    ; preds = %39
  store i32 -1043378747, i32* %38
  br label %1129

; <label>:891:                                    ; preds = %39
  store i32 129036723, i32* %38
  br label %1129

; <label>:892:                                    ; preds = %39
  %893 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4NodeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %30) #3
  store i32 -159499966, i32* %38
  br label %1129

; <label>:894:                                    ; preds = %39
  %895 = load volatile %class.Graph*, %class.Graph** %13
  %896 = getelementptr inbounds %class.Graph, %class.Graph* %895, i32 0, i32 0
  %897 = load i64, i64* %17, align 8
  %898 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %896, i64 %897) #3
  %899 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %898, i32 0, i32 0
  %900 = load i64, i64* %899, align 8
  store i64 %900, i64* %14, align 8
  store i32 1519221807, i32* %38
  br label %1129

; <label>:901:                                    ; preds = %39
  %902 = load i32, i32* @x.43
  %903 = load i32, i32* @y.44
  %904 = sub i32 %902, -533803957
  %905 = sub i32 %904, 1
  %906 = add i32 %905, -533803957
  %907 = sub i32 %902, 1
  %908 = mul i32 %902, %906
  %909 = urem i32 %908, 2
  %910 = icmp eq i32 %909, 0
  %911 = icmp slt i32 %903, 10
  %912 = xor i1 %910, true
  %913 = xor i1 %911, true
  %914 = xor i1 false, true
  %915 = and i1 %912, false
  %916 = and i1 %910, %914
  %917 = and i1 %913, false
  %918 = and i1 %911, %914
  %919 = or i1 %915, %916
  %920 = or i1 %917, %918
  %921 = xor i1 %919, %920
  %922 = or i1 %912, %913
  %923 = xor i1 %922, true
  %924 = or i1 false, %914
  %925 = and i1 %923, %924
  %926 = or i1 %921, %925
  %927 = or i1 %910, %911
  %928 = select i1 %926, i32 -135261750, i32 -1502859402
  store i32 %928, i32* %38
  br label %1129

; <label>:929:                                    ; preds = %39
  %930 = load i64, i64* %14, align 8
  store i64 %930, i64* %4
  %931 = load i32, i32* @x.43
  %932 = load i32, i32* @y.44
  %933 = sub i32 %931, -1002050967
  %934 = sub i32 %933, 1
  %935 = add i32 %934, -1002050967
  %936 = sub i32 %931, 1
  %937 = mul i32 %931, %935
  %938 = urem i32 %937, 2
  %939 = icmp eq i32 %938, 0
  %940 = icmp slt i32 %932, 10
  %941 = xor i1 %939, true
  %942 = xor i1 %940, true
  %943 = xor i1 false, true
  %944 = and i1 %941, false
  %945 = and i1 %939, %943
  %946 = and i1 %942, false
  %947 = and i1 %940, %943
  %948 = or i1 %944, %945
  %949 = or i1 %946, %947
  %950 = xor i1 %948, %949
  %951 = or i1 %941, %942
  %952 = xor i1 %951, true
  %953 = or i1 false, %943
  %954 = and i1 %952, %953
  %955 = or i1 %950, %954
  %956 = or i1 %939, %940
  %957 = select i1 %955, i32 -2122083020, i32 -1502859402
  store i32 %957, i32* %38
  br label %1129

; <label>:958:                                    ; preds = %39
  %959 = load volatile i64, i64* %4
  ret i64 %959

; <label>:960:                                    ; preds = %39
  %961 = load i64, i64* %18, align 8
  %962 = load volatile %class.Graph*, %class.Graph** %13
  %963 = getelementptr inbounds %class.Graph, %class.Graph* %962, i32 0, i32 0
  %964 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %963) #3
  %965 = icmp ult i64 %961, %964
  store i32 80075900, i32* %38
  br label %1129

; <label>:966:                                    ; preds = %39
  %967 = load volatile %class.Graph*, %class.Graph** %13
  %968 = getelementptr inbounds %class.Graph, %class.Graph* %967, i32 0, i32 0
  %969 = load i64, i64* %16, align 8
  %970 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %968, i64 %969) #3
  %971 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %970, i32 0, i32 0
  store i64 0, i64* %971, align 8
  store i64 0, i64* %19, align 8
  store i32 1754240210, i32* %38
  br label %1129

; <label>:972:                                    ; preds = %39
  %973 = load i64, i64* %19, align 8
  %974 = load volatile %class.Graph*, %class.Graph** %13
  %975 = getelementptr inbounds %class.Graph, %class.Graph* %974, i32 0, i32 0
  %976 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %975) #3
  %977 = icmp ult i64 %973, %976
  store i32 -944750871, i32* %38
  br label %1129

; <label>:978:                                    ; preds = %39
  store i32 9, i32* %24, align 4
  store i32 396836788, i32* %38
  br label %1129

; <label>:979:                                    ; preds = %39
  %980 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.29"* %26) #3
  %981 = bitcast %"struct.Graph::Edge"* %28 to i8*
  %982 = bitcast %"struct.Graph::Edge"* %980 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %981, i8* %982, i64 16, i32 8, i1 false)
  %983 = load volatile %class.Graph*, %class.Graph** %13
  %984 = getelementptr inbounds %class.Graph, %class.Graph* %983, i32 0, i32 0
  %985 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %28, i32 0, i32 0
  %986 = load i64, i64* %985, align 8
  %987 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %984, i64 %986) #3
  %988 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %987, i32 0, i32 0
  %989 = load i64, i64* %988, align 8
  %990 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %23, i32 0, i32 0
  %991 = load i64, i64* %990, align 8
  %992 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %28, i32 0, i32 1
  %993 = load i64, i64* %992, align 8
  %994 = shl i64 %991, %993
  %995 = sub i64 0, 4628543663390658889
  %996 = sub i64 %995, %991
  %997 = add i64 %996, 4628543663390658889
  %998 = sub i64 0, %991
  %999 = sub i64 0, %997
  %1000 = sub i64 0, %993
  %1001 = add i64 %999, %1000
  %1002 = sub i64 0, %1001
  %1003 = add i64 %997, %993
  %1004 = add i64 0, 5005793457049167574
  %1005 = sub i64 %1004, %991
  %1006 = sub i64 %1005, 5005793457049167574
  %1007 = sub i64 0, %991
  %1008 = sub i64 0, %1006
  %1009 = sub i64 0, %993
  %1010 = add i64 %1008, %1009
  %1011 = sub i64 0, %1010
  %1012 = add i64 %1006, %993
  %1013 = sub i64 0, %991
  %1014 = add i64 0, %1013
  %1015 = sub i64 0, %991
  %1016 = add i64 %1014, -5230508283680438283
  %1017 = add i64 %1016, %993
  %1018 = sub i64 %1017, -5230508283680438283
  %1019 = add i64 %1014, %993
  %1020 = sub i64 0, %993
  %1021 = sub i64 %991, %1020
  %1022 = add nsw i64 %991, %993
  %1023 = icmp sgt i64 %989, %1021
  store i32 -504852850, i32* %38
  br label %1129

; <label>:1024:                                   ; preds = %39
  %1025 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %23, i32 0, i32 0
  %1026 = load i64, i64* %1025, align 8
  %1027 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %28, i32 0, i32 1
  %1028 = load i64, i64* %1027, align 8
  %1029 = sub i64 0, %1028
  %1030 = add i64 %1026, %1029
  %1031 = sub i64 %1026, %1028
  %1032 = mul i64 %1030, %1028
  %1033 = add i64 %1026, -8697614171748295933
  %1034 = sub i64 %1033, %1028
  %1035 = sub i64 %1034, -8697614171748295933
  %1036 = sub i64 %1026, %1028
  %1037 = mul i64 %1035, %1028
  %1038 = shl i64 %1026, %1028
  %1039 = sub i64 %1026, -8898501145479410697
  %1040 = sub i64 %1039, %1028
  %1041 = add i64 %1040, -8898501145479410697
  %1042 = sub i64 %1026, %1028
  %1043 = mul i64 %1041, %1028
  %1044 = shl i64 %1026, %1028
  %1045 = add i64 %1026, -7699192276963646747
  %1046 = sub i64 %1045, %1028
  %1047 = sub i64 %1046, -7699192276963646747
  %1048 = sub i64 %1026, %1028
  %1049 = mul i64 %1047, %1028
  %1050 = sub i64 0, %1028
  %1051 = sub i64 %1026, %1050
  %1052 = add nsw i64 %1026, %1028
  %1053 = load volatile %class.Graph*, %class.Graph** %13
  %1054 = getelementptr inbounds %class.Graph, %class.Graph* %1053, i32 0, i32 0
  %1055 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %28, i32 0, i32 0
  %1056 = load i64, i64* %1055, align 8
  %1057 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %1054, i64 %1056) #3
  %1058 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %1057, i32 0, i32 0
  store i64 %1051, i64* %1058, align 8
  store i32 1771107681, i32* %38
  br label %1129

; <label>:1059:                                   ; preds = %39
  store i32 -1836844738, i32* %38
  br label %1129

; <label>:1060:                                   ; preds = %39
  %1061 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.29"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator.29"* %26) #3
  store i32 -390323385, i32* %38
  br label %1129

; <label>:1062:                                   ; preds = %39
  store i32 930514898, i32* %38
  br label %1129

; <label>:1063:                                   ; preds = %39
  store i32 1478724015, i32* %38
  br label %1129

; <label>:1064:                                   ; preds = %39
  %1065 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4NodeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %30) #3
  call void @_ZN5Graph4NodeC2ERKS0_(%"struct.Graph::Node"* %32, %"struct.Graph::Node"* dereferenceable(32) %1065)
  %1066 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %32, i32 0, i32 0
  %1067 = load i64, i64* %1066, align 8
  %1068 = icmp eq i64 %1067, 9223372036854775807
  store i32 1857100291, i32* %38
  br label %1129

; <label>:1069:                                   ; preds = %39
  %1070 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator.29"* dereferenceable(8) %34, %"class.__gnu_cxx::__normal_iterator.29"* dereferenceable(8) %35) #3
  store i32 793185626, i32* %38
  br label %1129

; <label>:1071:                                   ; preds = %39
  %1072 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.29"* %34) #3
  %1073 = bitcast %"struct.Graph::Edge"* %36 to i8*
  %1074 = bitcast %"struct.Graph::Edge"* %1072 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1073, i8* %1074, i64 16, i32 8, i1 false)
  %1075 = load volatile %class.Graph*, %class.Graph** %13
  %1076 = getelementptr inbounds %class.Graph, %class.Graph* %1075, i32 0, i32 0
  %1077 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %36, i32 0, i32 0
  %1078 = load i64, i64* %1077, align 8
  %1079 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %1076, i64 %1078) #3
  %1080 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %1079, i32 0, i32 0
  %1081 = load i64, i64* %1080, align 8
  %1082 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %32, i32 0, i32 0
  %1083 = load i64, i64* %1082, align 8
  %1084 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %36, i32 0, i32 1
  %1085 = load i64, i64* %1084, align 8
  %1086 = sub i64 %1083, -4982800708866050957
  %1087 = sub i64 %1086, %1085
  %1088 = add i64 %1087, -4982800708866050957
  %1089 = sub i64 %1083, %1085
  %1090 = mul i64 %1088, %1085
  %1091 = sub i64 0, 7562201647537295583
  %1092 = sub i64 %1091, %1083
  %1093 = add i64 %1092, 7562201647537295583
  %1094 = sub i64 0, %1083
  %1095 = sub i64 0, %1093
  %1096 = sub i64 0, %1085
  %1097 = add i64 %1095, %1096
  %1098 = sub i64 0, %1097
  %1099 = add i64 %1093, %1085
  %1100 = sub i64 0, %1083
  %1101 = add i64 0, %1100
  %1102 = sub i64 0, %1083
  %1103 = sub i64 %1101, 4882607561020659338
  %1104 = add i64 %1103, %1085
  %1105 = add i64 %1104, 4882607561020659338
  %1106 = add i64 %1101, %1085
  %1107 = sub i64 %1083, 5298361608506821301
  %1108 = sub i64 %1107, %1085
  %1109 = add i64 %1108, 5298361608506821301
  %1110 = sub i64 %1083, %1085
  %1111 = mul i64 %1109, %1085
  %1112 = sub i64 %1083, -2514884271306606464
  %1113 = sub i64 %1112, %1085
  %1114 = add i64 %1113, -2514884271306606464
  %1115 = sub i64 %1083, %1085
  %1116 = mul i64 %1114, %1085
  %1117 = sub i64 0, %1085
  %1118 = add i64 %1083, %1117
  %1119 = sub i64 %1083, %1085
  %1120 = mul i64 %1118, %1085
  %1121 = sub i64 %1083, -2474482145704855282
  %1122 = add i64 %1121, %1085
  %1123 = add i64 %1122, -2474482145704855282
  %1124 = add nsw i64 %1083, %1085
  %1125 = icmp sgt i64 %1081, %1123
  store i32 -340244827, i32* %38
  br label %1129

; <label>:1126:                                   ; preds = %39
  store i32 0, i32* %24, align 4
  store i32 1732533946, i32* %38
  br label %1129

; <label>:1127:                                   ; preds = %39
  %1128 = load i64, i64* %14, align 8
  store i32 -135261750, i32* %38
  br label %1129

; <label>:1129:                                   ; preds = %1127, %1126, %1071, %1069, %1064, %1063, %1062, %1060, %1059, %1024, %979, %978, %972, %966, %960, %929, %901, %894, %892, %891, %890, %886, %882, %880, %879, %863, %835, %833, %832, %831, %828, %793, %765, %762, %733, %705, %697, %696, %693, %673, %645, %642, %633, %628, %627, %600, %585, %583, %582, %554, %539, %538, %534, %532, %531, %530, %501, %473, %472, %456, %428, %427, %384, %368, %365, %319, %291, %288, %280, %279, %252, %237, %231, %228, %219, %216, %183, %168, %167, %134, %106, %100, %94, %91, %70, %42, %41
  br label %39
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"*, i64) #5 comdat align 2 {
  %3 = alloca %"struct.Graph::Node"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.45
  %7 = load i32, i32* @y.46
  %8 = sub i32 %6, -1734378557
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1734378557
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -876710864, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %65
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -876710864, label %20
    i32 -222475274, label %28
    i32 -1783527936, label %53
    i32 -1772705538, label %55
  ]

; <label>:19:                                     ; preds = %17
  br label %65

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -222475274, i32 -1772705538
  store i32 %27, i32* %16
  br label %65

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.13"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.13"*, %"class.std::vector.13"** %29, align 8
  %32 = bitcast %"class.std::vector.13"* %31 to %"struct.std::_Vector_base.14"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %34, align 8
  %36 = load i64, i64* %30, align 8
  %37 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %35, i64 %36
  store %"struct.Graph::Node"* %37, %"struct.Graph::Node"** %3
  %38 = load i32, i32* @x.45
  %39 = load i32, i32* @y.46
  %40 = add i32 %38, -1368689176
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -1368689176
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -1783527936, i32 -1772705538
  store i32 %52, i32* %16
  br label %65

; <label>:53:                                     ; preds = %17
  %54 = load volatile %"struct.Graph::Node"*, %"struct.Graph::Node"** %3
  ret %"struct.Graph::Node"* %54

; <label>:55:                                     ; preds = %17
  %56 = alloca %"class.std::vector.13"*, align 8
  %57 = alloca i64, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %56, align 8
  store i64 %1, i64* %57, align 8
  %58 = load %"class.std::vector.13"*, %"class.std::vector.13"** %56, align 8
  %59 = bitcast %"class.std::vector.13"* %58 to %"struct.std::_Vector_base.14"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %60, i32 0, i32 0
  %62 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %61, align 8
  %63 = load i64, i64* %57, align 8
  %64 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %62, i64 %63
  store i32 -222475274, i32* %16
  br label %65

; <label>:65:                                     ; preds = %55, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.23"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.47
  %7 = load i32, i32* @y.48
  %8 = sub i32 %6, 600545584
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 600545584
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1242056896, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %77
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1242056896, label %20
    i32 620918278, label %40
    i32 1114163685, label %65
    i32 -779629367, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %77

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 620918278, i32 -779629367
  store i32 %39, i32* %16
  br label %77

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector.23"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %41, align 8
  store i64 %1, i64* %42, align 8
  %43 = load %"class.std::vector.23"*, %"class.std::vector.23"** %41, align 8
  %44 = bitcast %"class.std::vector.23"* %43 to %"struct.std::_Vector_base.24"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %45, i32 0, i32 0
  %47 = load %"class.std::vector"*, %"class.std::vector"** %46, align 8
  %48 = load i64, i64* %42, align 8
  %49 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %47, i64 %48
  store %"class.std::vector"* %49, %"class.std::vector"** %3
  %50 = load i32, i32* @x.47
  %51 = load i32, i32* @y.48
  %52 = sub i32 %50, -326487622
  %53 = sub i32 %52, 1
  %54 = add i32 %53, -326487622
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 1114163685, i32 -779629367
  store i32 %64, i32* %16
  br label %77

; <label>:65:                                     ; preds = %17
  %66 = load volatile %"class.std::vector"*, %"class.std::vector"** %3
  ret %"class.std::vector"* %66

; <label>:67:                                     ; preds = %17
  %68 = alloca %"class.std::vector.23"*, align 8
  %69 = alloca i64, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %68, align 8
  store i64 %1, i64* %69, align 8
  %70 = load %"class.std::vector.23"*, %"class.std::vector.23"** %68, align 8
  %71 = bitcast %"class.std::vector.23"* %70 to %"struct.std::_Vector_base.24"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %72, i32 0, i32 0
  %74 = load %"class.std::vector"*, %"class.std::vector"** %73, align 8
  %75 = load i64, i64* %69, align 8
  %76 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %74, i64 %75
  store i32 620918278, i32* %16
  br label %77

; <label>:77:                                     ; preds = %67, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"*, i64) #5 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.49
  %7 = load i32, i32* @y.50
  %8 = sub i32 %6, 2042396138
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 2042396138
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1860689025, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %65
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1860689025, label %20
    i32 -769294449, label %28
    i32 -1875300832, label %53
    i32 183601498, label %55
  ]

; <label>:19:                                     ; preds = %17
  br label %65

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -769294449, i32 183601498
  store i32 %27, i32* %16
  br label %65

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8
  %32 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = load i64, i64* %30, align 8
  %37 = getelementptr inbounds i64, i64* %35, i64 %36
  store i64* %37, i64** %3
  %38 = load i32, i32* @x.49
  %39 = load i32, i32* @y.50
  %40 = add i32 %38, -372247964
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -372247964
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -1875300832, i32 183601498
  store i32 %52, i32* %16
  br label %65

; <label>:53:                                     ; preds = %17
  %54 = load volatile i64*, i64** %3
  ret i64* %54

; <label>:55:                                     ; preds = %17
  %56 = alloca %"class.std::vector"*, align 8
  %57 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %56, align 8
  store i64 %1, i64* %57, align 8
  %58 = load %"class.std::vector"*, %"class.std::vector"** %56, align 8
  %59 = bitcast %"class.std::vector"* %58 to %"struct.std::_Vector_base"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %60, i32 0, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = load i64, i64* %57, align 8
  %64 = getelementptr inbounds i64, i64* %62, i64 %63
  store i32 -769294449, i32* %16
  br label %65

; <label>:65:                                     ; preds = %55, %28, %20, %19
  br label %17
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev(%"class.std::vector.23"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.23"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %2, align 8
  %5 = load %"class.std::vector.23"*, %"class.std::vector.23"** %2, align 8
  %6 = bitcast %"class.std::vector.23"* %5 to %"struct.std::_Vector_base.24"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector"*, %"class.std::vector"** %8, align 8
  %10 = bitcast %"class.std::vector.23"* %5 to %"struct.std::_Vector_base.24"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::vector"*, %"class.std::vector"** %12, align 8
  %14 = bitcast %"class.std::vector.23"* %5 to %"struct.std::_Vector_base.24"*
  %15 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %14) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIxSaIxEES2_EvT_S4_RSaIT0_E(%"class.std::vector"* %9, %"class.std::vector"* %13, %"class.std::allocator.25"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.23"* %5 to %"struct.std::_Vector_base.24"*
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev(%"struct.std::_Vector_base.24"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector.23"* %5 to %"struct.std::_Vector_base.24"*
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev(%"struct.std::_Vector_base.24"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i32, i32* @x.51
  %25 = load i32, i32* @y.52
  %26 = sub i32 0, 1
  %27 = add i32 %24, %26
  %28 = sub i32 %24, 1
  %29 = mul i32 %24, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %25, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 false, true
  %36 = and i1 %33, false
  %37 = and i1 %31, %35
  %38 = and i1 %34, false
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 false, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  br i1 %47, label %49, label %66

; <label>:49:                                     ; preds = %23, %66
  %50 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %50) #10
  %51 = load i32, i32* @x.51
  %52 = load i32, i32* @y.52
  %53 = sub i32 %51, 1541833786
  %54 = sub i32 %53, 1
  %55 = add i32 %54, 1541833786
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  br i1 %63, label %65, label %66

; <label>:65:                                     ; preds = %49
  unreachable

; <label>:66:                                     ; preds = %49, %23
  %67 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %67) #10
  br label %49
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5GraphD2Ev(%class.Graph*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.53
  %5 = load i32, i32* @y.54
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1045370256, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %60
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1045370256, label %17
    i32 1676259218, label %37
    i32 1357960558, label %55
    i32 -1681010104, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %60

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 1676259218, i32 -1681010104
  store i32 %36, i32* %13
  br label %60

; <label>:37:                                     ; preds = %14
  %38 = alloca %class.Graph*, align 8
  store %class.Graph* %0, %class.Graph** %38, align 8
  %39 = load %class.Graph*, %class.Graph** %38, align 8
  %40 = getelementptr inbounds %class.Graph, %class.Graph* %39, i32 0, i32 0
  call void @_ZNSt6vectorIN5Graph4NodeESaIS1_EED2Ev(%"class.std::vector.13"* %40) #3
  %41 = load i32, i32* @x.53
  %42 = load i32, i32* @y.54
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 1357960558, i32 -1681010104
  store i32 %54, i32* %13
  br label %60

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %class.Graph*, align 8
  store %class.Graph* %0, %class.Graph** %57, align 8
  %58 = load %class.Graph*, %class.Graph** %57, align 8
  %59 = getelementptr inbounds %class.Graph, %class.Graph* %58, i32 0, i32 0
  call void @_ZNSt6vectorIN5Graph4NodeESaIS1_EED2Ev(%"class.std::vector.13"* %59) #3
  store i32 1676259218, i32* %13
  br label %60

; <label>:60:                                     ; preds = %56, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4NodeESaIS1_EEC2Ev(%"class.std::vector.13"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %2, align 8
  %3 = load %"class.std::vector.13"*, %"class.std::vector.13"** %2, align 8
  %4 = bitcast %"class.std::vector.13"* %3 to %"struct.std::_Vector_base.14"*
  invoke void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EEC2Ev(%"struct.std::_Vector_base.14"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #10
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4NodeESaIS1_EE9push_backEOS1_(%"class.std::vector.13"*, %"struct.Graph::Node"* dereferenceable(32)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.13"*, align 8
  %4 = alloca %"struct.Graph::Node"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %3, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %4, align 8
  %5 = load %"class.std::vector.13"*, %"class.std::vector.13"** %3, align 8
  %6 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %7 = call dereferenceable(32) %"struct.Graph::Node"* @_ZSt4moveIRN5Graph4NodeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::Node"* dereferenceable(32) %6) #3
  call void @_ZNSt6vectorIN5Graph4NodeESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.13"* %5, %"struct.Graph::Node"* dereferenceable(32) %7)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #6

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5Graph4NodeC2Ev(%"struct.Graph::Node"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %2, align 8
  %3 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %2, align 8
  %4 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %3, i32 0, i32 1
  call void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EEC2Ev(%"class.std::vector.18"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5Graph4NodeD2Ev(%"struct.Graph::Node"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.61
  %5 = load i32, i32* @y.62
  %6 = sub i32 %4, -305363918
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -305363918
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 757827906, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 757827906, label %18
    i32 184243883, label %38
    i32 -1530089741, label %57
    i32 -1917003804, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 184243883, i32 -1917003804
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %39, align 8
  %40 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %39, align 8
  %41 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %40, i32 0, i32 1
  call void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EED2Ev(%"class.std::vector.18"* %41) #3
  %42 = load i32, i32* @x.61
  %43 = load i32, i32* @y.62
  %44 = add i32 %42, -94761441
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -94761441
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1530089741, i32 -1917003804
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %59, align 8
  %60 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %59, align 8
  %61 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %60, i32 0, i32 1
  call void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EED2Ev(%"class.std::vector.18"* %61) #3
  store i32 184243883, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4NodeESaIS1_EED2Ev(%"class.std::vector.13"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.63
  %3 = load i32, i32* @y.64
  %4 = sub i32 %2, 15346854
  %5 = sub i32 %4, 1
  %6 = add i32 %5, 15346854
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %109

; <label>:16:                                     ; preds = %1, %109
  %17 = alloca %"class.std::vector.13"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %17, align 8
  %20 = load %"class.std::vector.13"*, %"class.std::vector.13"** %17, align 8
  %21 = bitcast %"class.std::vector.13"* %20 to %"struct.std::_Vector_base.14"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %22, i32 0, i32 0
  %24 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %23, align 8
  %25 = bitcast %"class.std::vector.13"* %20 to %"struct.std::_Vector_base.14"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %26, i32 0, i32 1
  %28 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %27, align 8
  %29 = bitcast %"class.std::vector.13"* %20 to %"struct.std::_Vector_base.14"*
  %30 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %29) #3
  %31 = load i32, i32* @x.63
  %32 = load i32, i32* @y.64
  %33 = sub i32 %31, 218525499
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 218525499
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  br i1 %55, label %57, label %109

; <label>:57:                                     ; preds = %16
  invoke void @_ZSt8_DestroyIPN5Graph4NodeES1_EvT_S3_RSaIT0_E(%"struct.Graph::Node"* %24, %"struct.Graph::Node"* %28, %"class.std::allocator.15"* dereferenceable(1) %30)
          to label %58 unwind label %60

; <label>:58:                                     ; preds = %57
  %59 = bitcast %"class.std::vector.13"* %20 to %"struct.std::_Vector_base.14"*
  call void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EED2Ev(%"struct.std::_Vector_base.14"* %59) #3
  ret void

; <label>:60:                                     ; preds = %57
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %18, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %19, align 4
  %64 = bitcast %"class.std::vector.13"* %20 to %"struct.std::_Vector_base.14"*
  call void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EED2Ev(%"struct.std::_Vector_base.14"* %64) #3
  br label %65

; <label>:65:                                     ; preds = %60
  %66 = load i32, i32* @x.63
  %67 = load i32, i32* @y.64
  %68 = add i32 %66, 558791250
  %69 = sub i32 %68, 1
  %70 = sub i32 %69, 558791250
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  br i1 %78, label %80, label %124

; <label>:80:                                     ; preds = %65, %124
  %81 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %81) #10
  %82 = load i32, i32* @x.63
  %83 = load i32, i32* @y.64
  %84 = sub i32 %82, -1753912791
  %85 = sub i32 %84, 1
  %86 = add i32 %85, -1753912791
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = xor i1 %90, true
  %93 = xor i1 %91, true
  %94 = xor i1 false, true
  %95 = and i1 %92, false
  %96 = and i1 %90, %94
  %97 = and i1 %93, false
  %98 = and i1 %91, %94
  %99 = or i1 %95, %96
  %100 = or i1 %97, %98
  %101 = xor i1 %99, %100
  %102 = or i1 %92, %93
  %103 = xor i1 %102, true
  %104 = or i1 false, %94
  %105 = and i1 %103, %104
  %106 = or i1 %101, %105
  %107 = or i1 %90, %91
  br i1 %106, label %108, label %124

; <label>:108:                                    ; preds = %80
  unreachable

; <label>:109:                                    ; preds = %16, %1
  %110 = alloca %"class.std::vector.13"*, align 8
  %111 = alloca i8*
  %112 = alloca i32
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %110, align 8
  %113 = load %"class.std::vector.13"*, %"class.std::vector.13"** %110, align 8
  %114 = bitcast %"class.std::vector.13"* %113 to %"struct.std::_Vector_base.14"*
  %115 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %114, i32 0, i32 0
  %116 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %115, i32 0, i32 0
  %117 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %116, align 8
  %118 = bitcast %"class.std::vector.13"* %113 to %"struct.std::_Vector_base.14"*
  %119 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %118, i32 0, i32 0
  %120 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %119, i32 0, i32 1
  %121 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %120, align 8
  %122 = bitcast %"class.std::vector.13"* %113 to %"struct.std::_Vector_base.14"*
  %123 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %122) #3
  br label %16

; <label>:124:                                    ; preds = %80, %65
  %125 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %125) #10
  br label %80
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EEC2Ev(%"struct.std::_Vector_base.14"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.65
  %5 = load i32, i32* @y.66
  %6 = sub i32 %4, -966770665
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -966770665
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 966722403, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 966722403, label %18
    i32 388554961, label %26
    i32 -467577185, label %56
    i32 -405711046, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 388554961, i32 -405711046
  store i32 %25, i32* %14
  br label %61

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base.14"*, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %27, align 8
  %28 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %28, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %29)
  %30 = load i32, i32* @x.65
  %31 = load i32, i32* @y.66
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -467577185, i32 -405711046
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"struct.std::_Vector_base.14"*, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %58, align 8
  %59 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %58, align 8
  %60 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %59, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %60)
  store i32 388554961, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #7 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #10
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %3 to %"class.std::allocator.15"*
  call void @_ZNSaIN5Graph4NodeEEC2Ev(%"class.std::allocator.15"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %3, i32 0, i32 0
  store %"struct.Graph::Node"* null, %"struct.Graph::Node"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %3, i32 0, i32 1
  store %"struct.Graph::Node"* null, %"struct.Graph::Node"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %3, i32 0, i32 2
  store %"struct.Graph::Node"* null, %"struct.Graph::Node"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5Graph4NodeEEC2Ev(%"class.std::allocator.15"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %2, align 8
  %3 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %2, align 8
  %4 = bitcast %"class.std::allocator.15"* %3 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEEC2Ev(%"class.__gnu_cxx::new_allocator.16"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEEC2Ev(%"class.__gnu_cxx::new_allocator.16"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.73
  %5 = load i32, i32* @y.74
  %6 = add i32 %4, 326847713
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 326847713
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1828061302, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1828061302, label %18
    i32 977726356, label %38
    i32 1338257325, label %68
    i32 56320878, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 977726356, i32 56320878
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %39, align 8
  %41 = load i32, i32* @x.73
  %42 = load i32, i32* @y.74
  %43 = add i32 %41, 717798243
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 717798243
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1338257325, i32 56320878
  store i32 %67, i32* %14
  br label %72

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %70, align 8
  %71 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %70, align 8
  store i32 977726356, i32* %14
  br label %72

; <label>:72:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4NodeESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.13"*, %"struct.Graph::Node"* dereferenceable(32)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.13"*
  %5 = alloca %"struct.Graph::Node"**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.75
  %9 = load i32, i32* @y.76
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -613791464, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %149
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -613791464, label %21
    i32 -276686806, label %29
    i32 539012048, label %60
    i32 1089191650, label %63
    i32 -1489996729, label %82
    i32 1015383603, label %97
    i32 1633265226, label %129
    i32 -2011264968, label %130
    i32 1264768148, label %131
    i32 1517835076, label %144
  ]

; <label>:20:                                     ; preds = %18
  br label %149

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -276686806, i32 1264768148
  store i32 %28, i32* %17
  br label %149

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::vector.13"*, align 8
  %31 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"** %31, %"struct.Graph::Node"*** %5
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %30, align 8
  %32 = load volatile %"struct.Graph::Node"**, %"struct.Graph::Node"*** %5
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %32, align 8
  %33 = load %"class.std::vector.13"*, %"class.std::vector.13"** %30, align 8
  store %"class.std::vector.13"* %33, %"class.std::vector.13"** %4
  %34 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %35 = bitcast %"class.std::vector.13"* %34 to %"struct.std::_Vector_base.14"*
  %36 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %35, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %36, i32 0, i32 1
  %38 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %37, align 8
  %39 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %40 = bitcast %"class.std::vector.13"* %39 to %"struct.std::_Vector_base.14"*
  %41 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %40, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %41, i32 0, i32 2
  %43 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %42, align 8
  %44 = icmp ne %"struct.Graph::Node"* %38, %43
  store i1 %44, i1* %3
  %45 = load i32, i32* @x.75
  %46 = load i32, i32* @y.76
  %47 = sub i32 %45, 1762189733
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 1762189733
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 539012048, i32 1264768148
  store i32 %59, i32* %17
  br label %149

; <label>:60:                                     ; preds = %18
  %61 = load volatile i1, i1* %3
  %62 = select i1 %61, i32 1089191650, i32 -1489996729
  store i32 %62, i32* %17
  br label %149

; <label>:63:                                     ; preds = %18
  %64 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %65 = bitcast %"class.std::vector.13"* %64 to %"struct.std::_Vector_base.14"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %65, i32 0, i32 0
  %67 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %66 to %"class.std::allocator.15"*
  %68 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %69 = bitcast %"class.std::vector.13"* %68 to %"struct.std::_Vector_base.14"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %70, i32 0, i32 1
  %72 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %71, align 8
  %73 = load volatile %"struct.Graph::Node"**, %"struct.Graph::Node"*** %5
  %74 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %73, align 8
  %75 = call dereferenceable(32) %"struct.Graph::Node"* @_ZSt7forwardIN5Graph4NodeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Node"* dereferenceable(32) %74) #3
  call void @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.15"* dereferenceable(1) %67, %"struct.Graph::Node"* %72, %"struct.Graph::Node"* dereferenceable(32) %75)
  %76 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  %77 = bitcast %"class.std::vector.13"* %76 to %"struct.std::_Vector_base.14"*
  %78 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %77, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %78, i32 0, i32 1
  %80 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %79, align 8
  %81 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %80, i32 1
  store %"struct.Graph::Node"* %81, %"struct.Graph::Node"** %79, align 8
  store i32 -2011264968, i32* %17
  br label %149

; <label>:82:                                     ; preds = %18
  %83 = load i32, i32* @x.75
  %84 = load i32, i32* @y.76
  %85 = sub i32 0, 1
  %86 = add i32 %83, %85
  %87 = sub i32 %83, 1
  %88 = mul i32 %83, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %84, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  %96 = select i1 %94, i32 1015383603, i32 1517835076
  store i32 %96, i32* %17
  br label %149

; <label>:97:                                     ; preds = %18
  %98 = load volatile %"struct.Graph::Node"**, %"struct.Graph::Node"*** %5
  %99 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %98, align 8
  %100 = call dereferenceable(32) %"struct.Graph::Node"* @_ZSt7forwardIN5Graph4NodeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Node"* dereferenceable(32) %99) #3
  %101 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  call void @_ZNSt6vectorIN5Graph4NodeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.13"* %101, %"struct.Graph::Node"* dereferenceable(32) %100)
  %102 = load i32, i32* @x.75
  %103 = load i32, i32* @y.76
  %104 = sub i32 %102, -281385996
  %105 = sub i32 %104, 1
  %106 = add i32 %105, -281385996
  %107 = sub i32 %102, 1
  %108 = mul i32 %102, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %103, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 false, true
  %115 = and i1 %112, false
  %116 = and i1 %110, %114
  %117 = and i1 %113, false
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 false, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  %128 = select i1 %126, i32 1633265226, i32 1517835076
  store i32 %128, i32* %17
  br label %149

; <label>:129:                                    ; preds = %18
  store i32 -2011264968, i32* %17
  br label %149

; <label>:130:                                    ; preds = %18
  ret void

; <label>:131:                                    ; preds = %18
  %132 = alloca %"class.std::vector.13"*, align 8
  %133 = alloca %"struct.Graph::Node"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %132, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %133, align 8
  %134 = load %"class.std::vector.13"*, %"class.std::vector.13"** %132, align 8
  %135 = bitcast %"class.std::vector.13"* %134 to %"struct.std::_Vector_base.14"*
  %136 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %135, i32 0, i32 0
  %137 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %136, i32 0, i32 1
  %138 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %137, align 8
  %139 = bitcast %"class.std::vector.13"* %134 to %"struct.std::_Vector_base.14"*
  %140 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %139, i32 0, i32 0
  %141 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %140, i32 0, i32 2
  %142 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %141, align 8
  %143 = icmp ne %"struct.Graph::Node"* %138, %142
  store i32 -276686806, i32* %17
  br label %149

; <label>:144:                                    ; preds = %18
  %145 = load volatile %"struct.Graph::Node"**, %"struct.Graph::Node"*** %5
  %146 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %145, align 8
  %147 = call dereferenceable(32) %"struct.Graph::Node"* @_ZSt7forwardIN5Graph4NodeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Node"* dereferenceable(32) %146) #3
  %148 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %4
  call void @_ZNSt6vectorIN5Graph4NodeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.13"* %148, %"struct.Graph::Node"* dereferenceable(32) %147)
  store i32 1015383603, i32* %17
  br label %149

; <label>:149:                                    ; preds = %144, %131, %129, %97, %82, %63, %60, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.Graph::Node"* @_ZSt4moveIRN5Graph4NodeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::Node"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %2, align 8
  %3 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %2, align 8
  ret %"struct.Graph::Node"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.15"* dereferenceable(1), %"struct.Graph::Node"*, %"struct.Graph::Node"* dereferenceable(32)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.15"*, align 8
  %5 = alloca %"struct.Graph::Node"*, align 8
  %6 = alloca %"struct.Graph::Node"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %4, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %5, align 8
  store %"struct.Graph::Node"* %2, %"struct.Graph::Node"** %6, align 8
  %7 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %4, align 8
  %8 = bitcast %"class.std::allocator.15"* %7 to %"class.__gnu_cxx::new_allocator.16"*
  %9 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %5, align 8
  %10 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %11 = call dereferenceable(32) %"struct.Graph::Node"* @_ZSt7forwardIN5Graph4NodeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Node"* dereferenceable(32) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.16"* %8, %"struct.Graph::Node"* %9, %"struct.Graph::Node"* dereferenceable(32) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.Graph::Node"* @_ZSt7forwardIN5Graph4NodeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Node"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %2, align 8
  %3 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %2, align 8
  ret %"struct.Graph::Node"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4NodeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.13"*, %"struct.Graph::Node"* dereferenceable(32)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.13"*, align 8
  %4 = alloca %"struct.Graph::Node"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.Graph::Node"*, align 8
  %7 = alloca %"struct.Graph::Node"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %3, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %4, align 8
  %10 = load %"class.std::vector.13"*, %"class.std::vector.13"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.13"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %13 = load i64, i64* %5, align 8
  %14 = call %"struct.Graph::Node"* @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.14"* %12, i64 %13)
  store %"struct.Graph::Node"* %14, %"struct.Graph::Node"** %6, align 8
  %15 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  store %"struct.Graph::Node"* %15, %"struct.Graph::Node"** %7, align 8
  %16 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %17 to %"class.std::allocator.15"*
  %19 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %20 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %10) #3
  %21 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %19, i64 %20
  %22 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %23 = call dereferenceable(32) %"struct.Graph::Node"* @_ZSt7forwardIN5Graph4NodeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Node"* dereferenceable(32) %22) #3
  invoke void @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.15"* dereferenceable(1) %18, %"struct.Graph::Node"* %21, %"struct.Graph::Node"* dereferenceable(32) %23)
          to label %24 unwind label %94

; <label>:24:                                     ; preds = %2
  %25 = load i32, i32* @x.83
  %26 = load i32, i32* @y.84
  %27 = sub i32 %25, 663335654
  %28 = sub i32 %27, 1
  %29 = add i32 %28, 663335654
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 true, true
  %38 = and i1 %35, true
  %39 = and i1 %33, %37
  %40 = and i1 %36, true
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 true, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  br i1 %49, label %51, label %331

; <label>:51:                                     ; preds = %24, %331
  store %"struct.Graph::Node"* null, %"struct.Graph::Node"** %7, align 8
  %52 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %53 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %52, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %53, i32 0, i32 0
  %55 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %54, align 8
  %56 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %56, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %57, i32 0, i32 1
  %59 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %58, align 8
  %60 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %61 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %62 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %61) #3
  %63 = load i32, i32* @x.83
  %64 = load i32, i32* @y.84
  %65 = sub i32 %63, -1675780212
  %66 = sub i32 %65, 1
  %67 = add i32 %66, -1675780212
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = xor i1 %71, true
  %74 = xor i1 %72, true
  %75 = xor i1 true, true
  %76 = and i1 %73, true
  %77 = and i1 %71, %75
  %78 = and i1 %74, true
  %79 = and i1 %72, %75
  %80 = or i1 %76, %77
  %81 = or i1 %78, %79
  %82 = xor i1 %80, %81
  %83 = or i1 %73, %74
  %84 = xor i1 %83, true
  %85 = or i1 true, %75
  %86 = and i1 %84, %85
  %87 = or i1 %82, %86
  %88 = or i1 %71, %72
  br i1 %87, label %89, label %331

; <label>:89:                                     ; preds = %51
  %90 = invoke %"struct.Graph::Node"* @_ZSt34__uninitialized_move_if_noexcept_aIPN5Graph4NodeES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.Graph::Node"* %55, %"struct.Graph::Node"* %59, %"struct.Graph::Node"* %60, %"class.std::allocator.15"* dereferenceable(1) %62)
          to label %91 unwind label %94

; <label>:91:                                     ; preds = %89
  store %"struct.Graph::Node"* %90, %"struct.Graph::Node"** %7, align 8
  %92 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  %93 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %92, i32 1
  store %"struct.Graph::Node"* %93, %"struct.Graph::Node"** %7, align 8
  br label %277

; <label>:94:                                     ; preds = %89, %2
  %95 = load i32, i32* @x.83
  %96 = load i32, i32* @y.84
  %97 = add i32 %95, -2053322241
  %98 = sub i32 %97, 1
  %99 = sub i32 %98, -2053322241
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = xor i1 %103, true
  %106 = xor i1 %104, true
  %107 = xor i1 true, true
  %108 = and i1 %105, true
  %109 = and i1 %103, %107
  %110 = and i1 %106, true
  %111 = and i1 %104, %107
  %112 = or i1 %108, %109
  %113 = or i1 %110, %111
  %114 = xor i1 %112, %113
  %115 = or i1 %105, %106
  %116 = xor i1 %115, true
  %117 = or i1 true, %107
  %118 = and i1 %116, %117
  %119 = or i1 %114, %118
  %120 = or i1 %103, %104
  br i1 %119, label %121, label %343

; <label>:121:                                    ; preds = %94, %343
  %122 = landingpad { i8*, i32 }
          catch i8* null
  %123 = extractvalue { i8*, i32 } %122, 0
  store i8* %123, i8** %8, align 8
  %124 = extractvalue { i8*, i32 } %122, 1
  store i32 %124, i32* %9, align 4
  %125 = load i32, i32* @x.83
  %126 = load i32, i32* @y.84
  %127 = add i32 %125, -267939056
  %128 = sub i32 %127, 1
  %129 = sub i32 %128, -267939056
  %130 = sub i32 %125, 1
  %131 = mul i32 %125, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %126, 10
  %135 = xor i1 %133, true
  %136 = xor i1 %134, true
  %137 = xor i1 true, true
  %138 = and i1 %135, true
  %139 = and i1 %133, %137
  %140 = and i1 %136, true
  %141 = and i1 %134, %137
  %142 = or i1 %138, %139
  %143 = or i1 %140, %141
  %144 = xor i1 %142, %143
  %145 = or i1 %135, %136
  %146 = xor i1 %145, true
  %147 = or i1 true, %137
  %148 = and i1 %146, %147
  %149 = or i1 %144, %148
  %150 = or i1 %133, %134
  br i1 %149, label %151, label %343

; <label>:151:                                    ; preds = %121
  br label %152

; <label>:152:                                    ; preds = %151
  %153 = load i32, i32* @x.83
  %154 = load i32, i32* @y.84
  %155 = add i32 %153, -2136303633
  %156 = sub i32 %155, 1
  %157 = sub i32 %156, -2136303633
  %158 = sub i32 %153, 1
  %159 = mul i32 %153, %157
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %154, 10
  %163 = xor i1 %161, true
  %164 = xor i1 %162, true
  %165 = xor i1 false, true
  %166 = and i1 %163, false
  %167 = and i1 %161, %165
  %168 = and i1 %164, false
  %169 = and i1 %162, %165
  %170 = or i1 %166, %167
  %171 = or i1 %168, %169
  %172 = xor i1 %170, %171
  %173 = or i1 %163, %164
  %174 = xor i1 %173, true
  %175 = or i1 false, %165
  %176 = and i1 %174, %175
  %177 = or i1 %172, %176
  %178 = or i1 %161, %162
  br i1 %177, label %179, label %347

; <label>:179:                                    ; preds = %152, %347
  %180 = load i8*, i8** %8, align 8
  %181 = call i8* @__cxa_begin_catch(i8* %180) #3
  %182 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  %183 = icmp ne %"struct.Graph::Node"* %182, null
  %184 = load i32, i32* @x.83
  %185 = load i32, i32* @y.84
  %186 = add i32 %184, 282394046
  %187 = sub i32 %186, 1
  %188 = sub i32 %187, 282394046
  %189 = sub i32 %184, 1
  %190 = mul i32 %184, %188
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %185, 10
  %194 = and i1 %192, %193
  %195 = xor i1 %192, %193
  %196 = or i1 %194, %195
  %197 = or i1 %192, %193
  br i1 %196, label %198, label %347

; <label>:198:                                    ; preds = %179
  br i1 %183, label %265, label %199

; <label>:199:                                    ; preds = %198
  %200 = load i32, i32* @x.83
  %201 = load i32, i32* @y.84
  %202 = add i32 %200, 1615410842
  %203 = sub i32 %202, 1
  %204 = sub i32 %203, 1615410842
  %205 = sub i32 %200, 1
  %206 = mul i32 %200, %204
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %201, 10
  %210 = xor i1 %208, true
  %211 = xor i1 %209, true
  %212 = xor i1 true, true
  %213 = and i1 %210, true
  %214 = and i1 %208, %212
  %215 = and i1 %211, true
  %216 = and i1 %209, %212
  %217 = or i1 %213, %214
  %218 = or i1 %215, %216
  %219 = xor i1 %217, %218
  %220 = or i1 %210, %211
  %221 = xor i1 %220, true
  %222 = or i1 true, %212
  %223 = and i1 %221, %222
  %224 = or i1 %219, %223
  %225 = or i1 %208, %209
  br i1 %224, label %226, label %352

; <label>:226:                                    ; preds = %199, %352
  %227 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %228 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %227, i32 0, i32 0
  %229 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %228 to %"class.std::allocator.15"*
  %230 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %231 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %10) #3
  %232 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %230, i64 %231
  %233 = load i32, i32* @x.83
  %234 = load i32, i32* @y.84
  %235 = add i32 %233, -2119229052
  %236 = sub i32 %235, 1
  %237 = sub i32 %236, -2119229052
  %238 = sub i32 %233, 1
  %239 = mul i32 %233, %237
  %240 = urem i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %234, 10
  %243 = xor i1 %241, true
  %244 = xor i1 %242, true
  %245 = xor i1 false, true
  %246 = and i1 %243, false
  %247 = and i1 %241, %245
  %248 = and i1 %244, false
  %249 = and i1 %242, %245
  %250 = or i1 %246, %247
  %251 = or i1 %248, %249
  %252 = xor i1 %250, %251
  %253 = or i1 %243, %244
  %254 = xor i1 %253, true
  %255 = or i1 false, %245
  %256 = and i1 %254, %255
  %257 = or i1 %252, %256
  %258 = or i1 %241, %242
  br i1 %257, label %259, label %352

; <label>:259:                                    ; preds = %226
  invoke void @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.15"* dereferenceable(1) %229, %"struct.Graph::Node"* %232)
          to label %260 unwind label %261

; <label>:260:                                    ; preds = %259
  br label %271

; <label>:261:                                    ; preds = %275, %271, %265, %259
  %262 = landingpad { i8*, i32 }
          cleanup
  %263 = extractvalue { i8*, i32 } %262, 0
  store i8* %263, i8** %8, align 8
  %264 = extractvalue { i8*, i32 } %262, 1
  store i32 %264, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %276 unwind label %327

; <label>:265:                                    ; preds = %198
  %266 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %267 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  %268 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %269 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %268) #3
  invoke void @_ZSt8_DestroyIPN5Graph4NodeES1_EvT_S3_RSaIT0_E(%"struct.Graph::Node"* %266, %"struct.Graph::Node"* %267, %"class.std::allocator.15"* dereferenceable(1) %269)
          to label %270 unwind label %261

; <label>:270:                                    ; preds = %265
  br label %271

; <label>:271:                                    ; preds = %270, %260
  %272 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %273 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %274 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.14"* %272, %"struct.Graph::Node"* %273, i64 %274)
          to label %275 unwind label %261

; <label>:275:                                    ; preds = %271
  invoke void @__cxa_rethrow() #12
          to label %330 unwind label %261

; <label>:276:                                    ; preds = %261
  br label %322

; <label>:277:                                    ; preds = %91
  %278 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %279 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %278, i32 0, i32 0
  %280 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %279, i32 0, i32 0
  %281 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %280, align 8
  %282 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %283 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %282, i32 0, i32 0
  %284 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %283, i32 0, i32 1
  %285 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %284, align 8
  %286 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %287 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %286) #3
  call void @_ZSt8_DestroyIPN5Graph4NodeES1_EvT_S3_RSaIT0_E(%"struct.Graph::Node"* %281, %"struct.Graph::Node"* %285, %"class.std::allocator.15"* dereferenceable(1) %287)
  %288 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %289 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %290 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %289, i32 0, i32 0
  %291 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %290, i32 0, i32 0
  %292 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %291, align 8
  %293 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %294 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %293, i32 0, i32 0
  %295 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %294, i32 0, i32 2
  %296 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %295, align 8
  %297 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %298 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %297, i32 0, i32 0
  %299 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %298, i32 0, i32 0
  %300 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %299, align 8
  %301 = ptrtoint %"struct.Graph::Node"* %296 to i64
  %302 = ptrtoint %"struct.Graph::Node"* %300 to i64
  %303 = add i64 %301, 7583372117729655386
  %304 = sub i64 %303, %302
  %305 = sub i64 %304, 7583372117729655386
  %306 = sub i64 %301, %302
  %307 = sdiv exact i64 %305, 32
  call void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.14"* %288, %"struct.Graph::Node"* %292, i64 %307)
  %308 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %309 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %310 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %309, i32 0, i32 0
  %311 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %310, i32 0, i32 0
  store %"struct.Graph::Node"* %308, %"struct.Graph::Node"** %311, align 8
  %312 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  %313 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %314 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %313, i32 0, i32 0
  %315 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %314, i32 0, i32 1
  store %"struct.Graph::Node"* %312, %"struct.Graph::Node"** %315, align 8
  %316 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %317 = load i64, i64* %5, align 8
  %318 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %316, i64 %317
  %319 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %320 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %319, i32 0, i32 0
  %321 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %320, i32 0, i32 2
  store %"struct.Graph::Node"* %318, %"struct.Graph::Node"** %321, align 8
  ret void

; <label>:322:                                    ; preds = %276
  %323 = load i8*, i8** %8, align 8
  %324 = load i32, i32* %9, align 4
  %325 = insertvalue { i8*, i32 } undef, i8* %323, 0
  %326 = insertvalue { i8*, i32 } %325, i32 %324, 1
  resume { i8*, i32 } %326

; <label>:327:                                    ; preds = %261
  %328 = landingpad { i8*, i32 }
          catch i8* null
  %329 = extractvalue { i8*, i32 } %328, 0
  call void @__clang_call_terminate(i8* %329) #10
  unreachable

; <label>:330:                                    ; preds = %275
  unreachable

; <label>:331:                                    ; preds = %51, %24
  store %"struct.Graph::Node"* null, %"struct.Graph::Node"** %7, align 8
  %332 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %333 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %332, i32 0, i32 0
  %334 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %333, i32 0, i32 0
  %335 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %334, align 8
  %336 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %337 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %336, i32 0, i32 0
  %338 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %337, i32 0, i32 1
  %339 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %338, align 8
  %340 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %341 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %342 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %341) #3
  br label %51

; <label>:343:                                    ; preds = %121, %94
  %344 = landingpad { i8*, i32 }
          catch i8* null
  %345 = extractvalue { i8*, i32 } %344, 0
  store i8* %345, i8** %8, align 8
  %346 = extractvalue { i8*, i32 } %344, 1
  store i32 %346, i32* %9, align 4
  br label %121

; <label>:347:                                    ; preds = %179, %152
  %348 = load i8*, i8** %8, align 8
  %349 = call i8* @__cxa_begin_catch(i8* %348) #3
  %350 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  %351 = icmp ne %"struct.Graph::Node"* %350, null
  br label %179

; <label>:352:                                    ; preds = %226, %199
  %353 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %354 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %353, i32 0, i32 0
  %355 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %354 to %"class.std::allocator.15"*
  %356 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %357 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %10) #3
  %358 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %356, i64 %357
  br label %226
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.16"*, %"struct.Graph::Node"*, %"struct.Graph::Node"* dereferenceable(32)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %5 = alloca %"struct.Graph::Node"*, align 8
  %6 = alloca %"struct.Graph::Node"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %4, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %5, align 8
  store %"struct.Graph::Node"* %2, %"struct.Graph::Node"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %4, align 8
  %8 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %5, align 8
  %9 = bitcast %"struct.Graph::Node"* %8 to i8*
  %10 = bitcast i8* %9 to %"struct.Graph::Node"*
  %11 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %12 = call dereferenceable(32) %"struct.Graph::Node"* @_ZSt7forwardIN5Graph4NodeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Node"* dereferenceable(32) %11) #3
  call void @_ZN5Graph4NodeC2EOS0_(%"struct.Graph::Node"* %10, %"struct.Graph::Node"* dereferenceable(32) %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5Graph4NodeC2EOS0_(%"struct.Graph::Node"*, %"struct.Graph::Node"* dereferenceable(32)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.Graph::Node"*, align 8
  %4 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %3, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %4, align 8
  %5 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %3, align 8
  %6 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %5, i32 0, i32 0
  %7 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %8 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %7, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %6, align 8
  %10 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %5, i32 0, i32 1
  %11 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %12 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %11, i32 0, i32 1
  call void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EEC2EOS3_(%"class.std::vector.18"* %10, %"class.std::vector.18"* dereferenceable(24) %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EEC2EOS3_(%"class.std::vector.18"*, %"class.std::vector.18"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %4, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %6 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %7 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %8 = call dereferenceable(24) %"class.std::vector.18"* @_ZSt4moveIRSt6vectorIN5Graph4EdgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.18"* dereferenceable(24) %7) #3
  %9 = bitcast %"class.std::vector.18"* %8 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EEC2EOS3_(%"struct.std::_Vector_base.19"* %6, %"struct.std::_Vector_base.19"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.18"* @_ZSt4moveIRSt6vectorIN5Graph4EdgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.18"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  ret %"class.std::vector.18"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EEC2EOS3_(%"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.19"*, align 8
  %4 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %3, align 8
  store %"struct.std::_Vector_base.19"* %1, %"struct.std::_Vector_base.19"** %4, align 8
  %5 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %7) #3
  %9 = call dereferenceable(1) %"class.std::allocator.20"* @_ZSt4moveIRSaIN5Graph4EdgeEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.20"* dereferenceable(1) %8) #3
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implC2EOS2_(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %6, %"class.std::allocator.20"* dereferenceable(1) %9) #3
  %10 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %11 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %11, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %10, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* dereferenceable(24) %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.20"* @_ZSt4moveIRSaIN5Graph4EdgeEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.20"* dereferenceable(1)) #5 comdat {
  %2 = alloca %"class.std::allocator.20"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.95
  %6 = load i32, i32* @y.96
  %7 = sub i32 %5, -1634344755
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1634344755
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -449594967, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -449594967, label %19
    i32 982587985, label %39
    i32 761385476, label %57
    i32 1830342087, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 982587985, i32 1830342087
  store i32 %38, i32* %15
  br label %62

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %40, align 8
  %41 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %40, align 8
  store %"class.std::allocator.20"* %41, %"class.std::allocator.20"** %2
  %42 = load i32, i32* @x.95
  %43 = load i32, i32* @y.96
  %44 = add i32 %42, 964789288
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 964789288
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 761385476, i32 1830342087
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"class.std::allocator.20"*, %"class.std::allocator.20"** %2
  ret %"class.std::allocator.20"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %60, align 8
  %61 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %60, align 8
  store i32 982587985, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %2, align 8
  %3 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %4 to %"class.std::allocator.20"*
  ret %"class.std::allocator.20"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implC2EOS2_(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"class.std::allocator.20"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.20"*, align 8
  store %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %4, align 8
  %5 = load %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %5 to %"class.std::allocator.20"*
  %7 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.20"* @_ZSt4moveIRSaIN5Graph4EdgeEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.20"* dereferenceable(1) %7) #3
  call void @_ZNSaIN5Graph4EdgeEEC2ERKS1_(%"class.std::allocator.20"* %6, %"class.std::allocator.20"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %5, i32 0, i32 0
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %5, i32 0, i32 1
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %5, i32 0, i32 2
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %1, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPN5Graph4EdgeEEvRT_S4_(%"struct.Graph::Edge"** dereferenceable(8) %6, %"struct.Graph::Edge"** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPN5Graph4EdgeEEvRT_S4_(%"struct.Graph::Edge"** dereferenceable(8) %9, %"struct.Graph::Edge"** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPN5Graph4EdgeEEvRT_S4_(%"struct.Graph::Edge"** dereferenceable(8) %12, %"struct.Graph::Edge"** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %1, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPN5Graph4EdgeEEvRT_S4_(%"struct.Graph::Edge"** dereferenceable(8), %"struct.Graph::Edge"** dereferenceable(8)) #5 comdat {
  %3 = alloca %"struct.Graph::Edge"**, align 8
  %4 = alloca %"struct.Graph::Edge"**, align 8
  %5 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"** %0, %"struct.Graph::Edge"*** %3, align 8
  store %"struct.Graph::Edge"** %1, %"struct.Graph::Edge"*** %4, align 8
  %6 = load %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %3, align 8
  %7 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZSt4moveIRPN5Graph4EdgeEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::Edge"** dereferenceable(8) %6) #3
  %8 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  store %"struct.Graph::Edge"* %8, %"struct.Graph::Edge"** %5, align 8
  %9 = load %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %4, align 8
  %10 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZSt4moveIRPN5Graph4EdgeEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::Edge"** dereferenceable(8) %9) #3
  %11 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %10, align 8
  %12 = load %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %3, align 8
  store %"struct.Graph::Edge"* %11, %"struct.Graph::Edge"** %12, align 8
  %13 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZSt4moveIRPN5Graph4EdgeEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::Edge"** dereferenceable(8) %5) #3
  %14 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %13, align 8
  %15 = load %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %4, align 8
  store %"struct.Graph::Edge"* %14, %"struct.Graph::Edge"** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Graph::Edge"** @_ZSt4moveIRPN5Graph4EdgeEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::Edge"** dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.Graph::Edge"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.107
  %6 = load i32, i32* @y.108
  %7 = sub i32 %5, -1073513078
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1073513078
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1072751384, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1072751384, label %19
    i32 -1746914671, label %39
    i32 389390070, label %57
    i32 -792930912, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1746914671, i32 -792930912
  store i32 %38, i32* %15
  br label %62

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.Graph::Edge"**, align 8
  store %"struct.Graph::Edge"** %0, %"struct.Graph::Edge"*** %40, align 8
  %41 = load %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %40, align 8
  store %"struct.Graph::Edge"** %41, %"struct.Graph::Edge"*** %2
  %42 = load i32, i32* @x.107
  %43 = load i32, i32* @y.108
  %44 = add i32 %42, 1172052873
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 1172052873
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 389390070, i32 -792930912
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %2
  ret %"struct.Graph::Edge"** %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"struct.Graph::Edge"**, align 8
  store %"struct.Graph::Edge"** %0, %"struct.Graph::Edge"*** %60, align 8
  %61 = load %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %60, align 8
  store i32 -1746914671, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.13"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.std::vector.13"*
  %8 = alloca %"class.std::vector.13"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %8, align 8
  store i64 %1, i64* %9, align 8
  store i8* %2, i8** %10, align 8
  %13 = load %"class.std::vector.13"*, %"class.std::vector.13"** %8, align 8
  store %"class.std::vector.13"* %13, %"class.std::vector.13"** %7
  %14 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %7
  %15 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE8max_sizeEv(%"class.std::vector.13"* %14) #3
  %16 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %7
  %17 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %16) #3
  %18 = sub i64 0, %17
  %19 = add i64 %15, %18
  %20 = sub i64 %15, %17
  store i64 %19, i64* %6
  %21 = load i64, i64* %9, align 8
  store i64 %21, i64* %5
  %22 = alloca i32
  store i32 -2090682901, i32* %22
  %23 = alloca i64
  br label %24

; <label>:24:                                     ; preds = %3, %143
  %25 = load i32, i32* %22
  switch i32 %25, label %26 [
    i32 -2090682901, label %27
    i32 -1301929076, label %32
    i32 -664245120, label %34
    i32 1350156244, label %50
    i32 -731781040, label %93
    i32 2013321798, label %96
    i32 -475422397, label %102
    i32 55575411, label %105
    i32 1053491202, label %107
    i32 -2055327228, label %109
  ]

; <label>:26:                                     ; preds = %24
  br label %143

; <label>:27:                                     ; preds = %24
  %28 = load volatile i64, i64* %6
  %29 = load volatile i64, i64* %5
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i32 -1301929076, i32 -664245120
  store i32 %31, i32* %22
  br label %143

; <label>:32:                                     ; preds = %24
  %33 = load i8*, i8** %10, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %33) #12
  unreachable

; <label>:34:                                     ; preds = %24
  %35 = load i32, i32* @x.109
  %36 = load i32, i32* @y.110
  %37 = sub i32 %35, 1342921207
  %38 = sub i32 %37, 1
  %39 = add i32 %38, 1342921207
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 1350156244, i32 -2055327228
  store i32 %49, i32* %22
  br label %143

; <label>:50:                                     ; preds = %24
  %51 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %7
  %52 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %51) #3
  %53 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %7
  %54 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %53) #3
  store i64 %54, i64* %12, align 8
  %55 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %12, i64* dereferenceable(8) %9)
  %56 = load i64, i64* %55, align 8
  %57 = sub i64 0, %52
  %58 = sub i64 0, %56
  %59 = add i64 %57, %58
  %60 = sub i64 0, %59
  %61 = add i64 %52, %56
  store i64 %60, i64* %11, align 8
  %62 = load i64, i64* %11, align 8
  %63 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %7
  %64 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %63) #3
  %65 = icmp ult i64 %62, %64
  store i1 %65, i1* %4
  %66 = load i32, i32* @x.109
  %67 = load i32, i32* @y.110
  %68 = sub i32 %66, -1421877724
  %69 = sub i32 %68, 1
  %70 = add i32 %69, -1421877724
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 true, true
  %79 = and i1 %76, true
  %80 = and i1 %74, %78
  %81 = and i1 %77, true
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 true, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  %92 = select i1 %90, i32 -731781040, i32 -2055327228
  store i32 %92, i32* %22
  br label %143

; <label>:93:                                     ; preds = %24
  %94 = load volatile i1, i1* %4
  %95 = select i1 %94, i32 -475422397, i32 2013321798
  store i32 %95, i32* %22
  br label %143

; <label>:96:                                     ; preds = %24
  %97 = load i64, i64* %11, align 8
  %98 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %7
  %99 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE8max_sizeEv(%"class.std::vector.13"* %98) #3
  %100 = icmp ugt i64 %97, %99
  %101 = select i1 %100, i32 -475422397, i32 55575411
  store i32 %101, i32* %22
  br label %143

; <label>:102:                                    ; preds = %24
  %103 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %7
  %104 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE8max_sizeEv(%"class.std::vector.13"* %103) #3
  store i32 1053491202, i32* %22
  store i64 %104, i64* %23
  br label %143

; <label>:105:                                    ; preds = %24
  %106 = load i64, i64* %11, align 8
  store i32 1053491202, i32* %22
  store i64 %106, i64* %23
  br label %143

; <label>:107:                                    ; preds = %24
  %108 = load i64, i64* %23
  ret i64 %108

; <label>:109:                                    ; preds = %24
  %110 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %7
  %111 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %110) #3
  %112 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %7
  %113 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %112) #3
  store i64 %113, i64* %12, align 8
  %114 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %12, i64* dereferenceable(8) %9)
  %115 = load i64, i64* %114, align 8
  %116 = sub i64 0, 4848467513774456867
  %117 = sub i64 %116, %111
  %118 = add i64 %117, 4848467513774456867
  %119 = sub i64 0, %111
  %120 = sub i64 0, %115
  %121 = sub i64 %118, %120
  %122 = add i64 %118, %115
  %123 = sub i64 0, %111
  %124 = add i64 0, %123
  %125 = sub i64 0, %111
  %126 = add i64 %124, 1654317270087247908
  %127 = add i64 %126, %115
  %128 = sub i64 %127, 1654317270087247908
  %129 = add i64 %124, %115
  %130 = add i64 %111, 2262515358836256667
  %131 = sub i64 %130, %115
  %132 = sub i64 %131, 2262515358836256667
  %133 = sub i64 %111, %115
  %134 = mul i64 %132, %115
  %135 = add i64 %111, 2613049013652282670
  %136 = add i64 %135, %115
  %137 = sub i64 %136, 2613049013652282670
  %138 = add i64 %111, %115
  store i64 %137, i64* %11, align 8
  %139 = load i64, i64* %11, align 8
  %140 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %7
  %141 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %140) #3
  %142 = icmp ult i64 %139, %141
  store i32 1350156244, i32* %22
  br label %143

; <label>:143:                                    ; preds = %109, %105, %102, %96, %93, %50, %34, %27, %26
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.14"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.Graph::Node"*
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.14"*
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.111
  %10 = load i32, i32* @y.112
  %11 = sub i32 %9, 956974345
  %12 = sub i32 %11, 1
  %13 = add i32 %12, 956974345
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 -130895852, i32* %19
  %20 = alloca %"struct.Graph::Node"*
  br label %21

; <label>:21:                                     ; preds = %2, %119
  %22 = load i32, i32* %19
  switch i32 %22, label %23 [
    i32 -130895852, label %24
    i32 1741371487, label %32
    i32 -1257277508, label %67
    i32 -289397342, label %70
    i32 206118155, label %77
    i32 -1972566491, label %78
    i32 1694416265, label %94
    i32 1272791509, label %110
    i32 -758184012, label %112
    i32 -776611317, label %118
  ]

; <label>:23:                                     ; preds = %21
  br label %119

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %8
  %26 = load volatile i1, i1* %7
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 1741371487, i32 -758184012
  store i32 %31, i32* %19
  br label %119

; <label>:32:                                     ; preds = %21
  %33 = alloca %"struct.std::_Vector_base.14"*, align 8
  %34 = alloca i64, align 8
  store i64* %34, i64** %6
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %33, align 8
  %35 = load volatile i64*, i64** %6
  store i64 %1, i64* %35, align 8
  %36 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %33, align 8
  store %"struct.std::_Vector_base.14"* %36, %"struct.std::_Vector_base.14"** %5
  %37 = load volatile i64*, i64** %6
  %38 = load i64, i64* %37, align 8
  %39 = icmp ne i64 %38, 0
  store i1 %39, i1* %4
  %40 = load i32, i32* @x.111
  %41 = load i32, i32* @y.112
  %42 = add i32 %40, -1601658783
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -1601658783
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -1257277508, i32 -758184012
  store i32 %66, i32* %19
  br label %119

; <label>:67:                                     ; preds = %21
  %68 = load volatile i1, i1* %4
  %69 = select i1 %68, i32 -289397342, i32 206118155
  store i32 %69, i32* %19
  br label %119

; <label>:70:                                     ; preds = %21
  %71 = load volatile %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %5
  %72 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %71, i32 0, i32 0
  %73 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %72 to %"class.std::allocator.15"*
  %74 = load volatile i64*, i64** %6
  %75 = load i64, i64* %74, align 8
  %76 = call %"struct.Graph::Node"* @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE8allocateERS2_m(%"class.std::allocator.15"* dereferenceable(1) %73, i64 %75)
  store i32 -1972566491, i32* %19
  store %"struct.Graph::Node"* %76, %"struct.Graph::Node"** %20
  br label %119

; <label>:77:                                     ; preds = %21
  store i32 -1972566491, i32* %19
  store %"struct.Graph::Node"* null, %"struct.Graph::Node"** %20
  br label %119

; <label>:78:                                     ; preds = %21
  %79 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %20
  store %"struct.Graph::Node"* %79, %"struct.Graph::Node"** %3
  %80 = load i32, i32* @x.111
  %81 = load i32, i32* @y.112
  %82 = sub i32 0, 1
  %83 = add i32 %80, %82
  %84 = sub i32 %80, 1
  %85 = mul i32 %80, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %81, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  %93 = select i1 %91, i32 1694416265, i32 -776611317
  store i32 %93, i32* %19
  br label %119

; <label>:94:                                     ; preds = %21
  %95 = load i32, i32* @x.111
  %96 = load i32, i32* @y.112
  %97 = sub i32 %95, -2055846825
  %98 = sub i32 %97, 1
  %99 = add i32 %98, -2055846825
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = and i1 %103, %104
  %106 = xor i1 %103, %104
  %107 = or i1 %105, %106
  %108 = or i1 %103, %104
  %109 = select i1 %107, i32 1272791509, i32 -776611317
  store i32 %109, i32* %19
  br label %119

; <label>:110:                                    ; preds = %21
  %111 = load volatile %"struct.Graph::Node"*, %"struct.Graph::Node"** %3
  ret %"struct.Graph::Node"* %111

; <label>:112:                                    ; preds = %21
  %113 = alloca %"struct.std::_Vector_base.14"*, align 8
  %114 = alloca i64, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %113, align 8
  store i64 %1, i64* %114, align 8
  %115 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %113, align 8
  %116 = load i64, i64* %114, align 8
  %117 = icmp ne i64 %116, 0
  store i32 1741371487, i32* %19
  br label %119

; <label>:118:                                    ; preds = %21
  store i32 1694416265, i32* %19
  br label %119

; <label>:119:                                    ; preds = %118, %112, %94, %78, %77, %70, %67, %32, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %2, align 8
  %3 = load %"class.std::vector.13"*, %"class.std::vector.13"** %2, align 8
  %4 = bitcast %"class.std::vector.13"* %3 to %"struct.std::_Vector_base.14"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %8 = bitcast %"class.std::vector.13"* %3 to %"struct.std::_Vector_base.14"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %10, align 8
  %12 = ptrtoint %"struct.Graph::Node"* %7 to i64
  %13 = ptrtoint %"struct.Graph::Node"* %11 to i64
  %14 = add i64 %12, -5933884153199984543
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, -5933884153199984543
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 32
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZSt34__uninitialized_move_if_noexcept_aIPN5Graph4NodeES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.Graph::Node"*, %"struct.Graph::Node"*, %"struct.Graph::Node"*, %"class.std::allocator.15"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.Graph::Node"*, align 8
  %6 = alloca %"struct.Graph::Node"*, align 8
  %7 = alloca %"struct.Graph::Node"*, align 8
  %8 = alloca %"class.std::allocator.15"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %5, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %6, align 8
  store %"struct.Graph::Node"* %2, %"struct.Graph::Node"** %7, align 8
  store %"class.std::allocator.15"* %3, %"class.std::allocator.15"** %8, align 8
  %11 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %5, align 8
  %12 = call %"struct.Graph::Node"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4NodeESt13move_iteratorIS2_EET0_T_(%"struct.Graph::Node"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  store %"struct.Graph::Node"* %12, %"struct.Graph::Node"** %13, align 8
  %14 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %15 = call %"struct.Graph::Node"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4NodeESt13move_iteratorIS2_EET0_T_(%"struct.Graph::Node"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  store %"struct.Graph::Node"* %15, %"struct.Graph::Node"** %16, align 8
  %17 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  %18 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %22 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %21, align 8
  %23 = call %"struct.Graph::Node"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph4NodeEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Graph::Node"* %20, %"struct.Graph::Node"* %22, %"struct.Graph::Node"* %17, %"class.std::allocator.15"* dereferenceable(1) %18)
  ret %"struct.Graph::Node"* %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.14"*, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %2, align 8
  %3 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %4 to %"class.std::allocator.15"*
  ret %"class.std::allocator.15"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.15"* dereferenceable(1), %"struct.Graph::Node"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.119
  %6 = load i32, i32* @y.120
  %7 = sub i32 %5, -1038846207
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1038846207
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 593321497, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 593321497, label %19
    i32 -893767903, label %27
    i32 1987197646, label %60
    i32 143033778, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -893767903, i32 143033778
  store i32 %26, i32* %15
  br label %67

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.15"*, align 8
  %29 = alloca %"struct.Graph::Node"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %28, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %29, align 8
  %30 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %28, align 8
  %31 = bitcast %"class.std::allocator.15"* %30 to %"class.__gnu_cxx::new_allocator.16"*
  %32 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %29, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.16"* %31, %"struct.Graph::Node"* %32)
  %33 = load i32, i32* @x.119
  %34 = load i32, i32* @y.120
  %35 = sub i32 %33, 1961698574
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 1961698574
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 1987197646, i32 143033778
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::allocator.15"*, align 8
  %63 = alloca %"struct.Graph::Node"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %62, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %63, align 8
  %64 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %62, align 8
  %65 = bitcast %"class.std::allocator.15"* %64 to %"class.__gnu_cxx::new_allocator.16"*
  %66 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %63, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.16"* %65, %"struct.Graph::Node"* %66)
  store i32 -893767903, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN5Graph4NodeES1_EvT_S3_RSaIT0_E(%"struct.Graph::Node"*, %"struct.Graph::Node"*, %"class.std::allocator.15"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.121
  %7 = load i32, i32* @y.122
  %8 = add i32 %6, -1315417413
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1315417413
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1121475010, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %68
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1121475010, label %20
    i32 -1762558731, label %28
    i32 1805605181, label %61
    i32 -1362724709, label %62
  ]

; <label>:19:                                     ; preds = %17
  br label %68

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1762558731, i32 -1362724709
  store i32 %27, i32* %16
  br label %68

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.Graph::Node"*, align 8
  %30 = alloca %"struct.Graph::Node"*, align 8
  %31 = alloca %"class.std::allocator.15"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %29, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %30, align 8
  store %"class.std::allocator.15"* %2, %"class.std::allocator.15"** %31, align 8
  %32 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %29, align 8
  %33 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %30, align 8
  call void @_ZSt8_DestroyIPN5Graph4NodeEEvT_S3_(%"struct.Graph::Node"* %32, %"struct.Graph::Node"* %33)
  %34 = load i32, i32* @x.121
  %35 = load i32, i32* @y.122
  %36 = sub i32 %34, 741937056
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 741937056
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 1805605181, i32 -1362724709
  store i32 %60, i32* %16
  br label %68

; <label>:61:                                     ; preds = %17
  ret void

; <label>:62:                                     ; preds = %17
  %63 = alloca %"struct.Graph::Node"*, align 8
  %64 = alloca %"struct.Graph::Node"*, align 8
  %65 = alloca %"class.std::allocator.15"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %63, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %64, align 8
  store %"class.std::allocator.15"* %2, %"class.std::allocator.15"** %65, align 8
  %66 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %63, align 8
  %67 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %64, align 8
  call void @_ZSt8_DestroyIPN5Graph4NodeEEvT_S3_(%"struct.Graph::Node"* %66, %"struct.Graph::Node"* %67)
  store i32 -1762558731, i32* %16
  br label %68

; <label>:68:                                     ; preds = %62, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.14"*, %"struct.Graph::Node"*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.Graph::Node"*
  %5 = alloca %"struct.std::_Vector_base.14"*
  %6 = alloca %"struct.std::_Vector_base.14"*, align 8
  %7 = alloca %"struct.Graph::Node"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %6, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %6, align 8
  store %"struct.std::_Vector_base.14"* %9, %"struct.std::_Vector_base.14"** %5
  %10 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  store %"struct.Graph::Node"* %10, %"struct.Graph::Node"** %4
  %11 = alloca i32
  store i32 1447947908, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1447947908, label %15
    i32 1727186531, label %19
    i32 -1550863146, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"struct.Graph::Node"*, %"struct.Graph::Node"** %4
  %17 = icmp ne %"struct.Graph::Node"* %16, null
  %18 = select i1 %17, i32 1727186531, i32 -1550863146
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %21 to %"class.std::allocator.15"*
  %23 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE10deallocateERS2_PS1_m(%"class.std::allocator.15"* dereferenceable(1) %22, %"struct.Graph::Node"* %23, i64 %24)
  store i32 -1550863146, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE8max_sizeEv(%"class.std::vector.13"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.125
  %6 = load i32, i32* @y.126
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1896040037, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %55
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1896040037, label %18
    i32 1011646594, label %26
    i32 -545875278, label %47
    i32 -116500052, label %49
  ]

; <label>:17:                                     ; preds = %15
  br label %55

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1011646594, i32 -116500052
  store i32 %25, i32* %14
  br label %55

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %27, align 8
  %28 = load %"class.std::vector.13"*, %"class.std::vector.13"** %27, align 8
  %29 = bitcast %"class.std::vector.13"* %28 to %"struct.std::_Vector_base.14"*
  %30 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNKSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %29) #3
  %31 = call i64 @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE8max_sizeERKS2_(%"class.std::allocator.15"* dereferenceable(1) %30) #3
  store i64 %31, i64* %2
  %32 = load i32, i32* @x.125
  %33 = load i32, i32* @y.126
  %34 = add i32 %32, -1904576559
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -1904576559
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -545875278, i32 -116500052
  store i32 %46, i32* %14
  br label %55

; <label>:47:                                     ; preds = %15
  %48 = load volatile i64, i64* %2
  ret i64 %48

; <label>:49:                                     ; preds = %15
  %50 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %50, align 8
  %51 = load %"class.std::vector.13"*, %"class.std::vector.13"** %50, align 8
  %52 = bitcast %"class.std::vector.13"* %51 to %"struct.std::_Vector_base.14"*
  %53 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNKSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %52) #3
  %54 = call i64 @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE8max_sizeERKS2_(%"class.std::allocator.15"* dereferenceable(1) %53) #3
  store i32 1011646594, i32* %14
  br label %55

; <label>:55:                                     ; preds = %49, %26, %18, %17
  br label %15
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i64*
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  store i64* %0, i64** %7, align 8
  store i64* %1, i64** %8, align 8
  %9 = load i64*, i64** %7, align 8
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %5
  %11 = load i64*, i64** %8, align 8
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %4
  %13 = alloca i32
  store i32 -287037877, i32* %13
  br label %14

; <label>:14:                                     ; preds = %2, %75
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -287037877, label %17
    i32 1187100643, label %22
    i32 876856032, label %24
    i32 233295189, label %26
    i32 -1606413337, label %54
    i32 1164040080, label %71
    i32 -96222909, label %73
  ]

; <label>:16:                                     ; preds = %14
  br label %75

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %5
  %19 = load volatile i64, i64* %4
  %20 = icmp ult i64 %18, %19
  %21 = select i1 %20, i32 1187100643, i32 876856032
  store i32 %21, i32* %13
  br label %75

; <label>:22:                                     ; preds = %14
  %23 = load i64*, i64** %8, align 8
  store i64* %23, i64** %6, align 8
  store i32 233295189, i32* %13
  br label %75

; <label>:24:                                     ; preds = %14
  %25 = load i64*, i64** %7, align 8
  store i64* %25, i64** %6, align 8
  store i32 233295189, i32* %13
  br label %75

; <label>:26:                                     ; preds = %14
  %27 = load i32, i32* @x.127
  %28 = load i32, i32* @y.128
  %29 = add i32 %27, 915660680
  %30 = sub i32 %29, 1
  %31 = sub i32 %30, 915660680
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 true, true
  %40 = and i1 %37, true
  %41 = and i1 %35, %39
  %42 = and i1 %38, true
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 true, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  %53 = select i1 %51, i32 -1606413337, i32 -96222909
  store i32 %53, i32* %13
  br label %75

; <label>:54:                                     ; preds = %14
  %55 = load i64*, i64** %6, align 8
  store i64* %55, i64** %3
  %56 = load i32, i32* @x.127
  %57 = load i32, i32* @y.128
  %58 = sub i32 %56, -401803472
  %59 = sub i32 %58, 1
  %60 = add i32 %59, -401803472
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 1164040080, i32 -96222909
  store i32 %70, i32* %13
  br label %75

; <label>:71:                                     ; preds = %14
  %72 = load volatile i64*, i64** %3
  ret i64* %72

; <label>:73:                                     ; preds = %14
  %74 = load i64*, i64** %6, align 8
  store i32 -1606413337, i32* %13
  br label %75

; <label>:75:                                     ; preds = %73, %54, %26, %24, %22, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE8max_sizeERKS2_(%"class.std::allocator.15"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %2, align 8
  %3 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %2, align 8
  %4 = bitcast %"class.std::allocator.15"* %3 to %"class.__gnu_cxx::new_allocator.16"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4NodeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.15"* @_ZNKSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.14"*, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %2, align 8
  %3 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %4 to %"class.std::allocator.15"*
  ret %"class.std::allocator.15"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4NodeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  ret i64 576460752303423487
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE8allocateERS2_m(%"class.std::allocator.15"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.15"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %3, align 8
  %6 = bitcast %"class.std::allocator.15"* %5 to %"class.__gnu_cxx::new_allocator.16"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.Graph::Node"* @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"* %6, i64 %7, i8* null)
  ret %"struct.Graph::Node"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4NodeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -1339982362, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1339982362, label %16
    i32 1437273153, label %21
    i32 429419868, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 1437273153, i32 429419868
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 32
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"struct.Graph::Node"*
  ret %"struct.Graph::Node"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #8

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #9

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph4NodeEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Graph::Node"*, %"struct.Graph::Node"*, %"struct.Graph::Node"*, %"class.std::allocator.15"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::move_iterator", align 8
  %7 = alloca %"struct.Graph::Node"*, align 8
  %8 = alloca %"class.std::allocator.15"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %6, i32 0, i32 0
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %12, align 8
  store %"struct.Graph::Node"* %2, %"struct.Graph::Node"** %7, align 8
  store %"class.std::allocator.15"* %3, %"class.std::allocator.15"** %8, align 8
  %13 = bitcast %"class.std::move_iterator"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %19 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %21 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %20, align 8
  %22 = call %"struct.Graph::Node"* @_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph4NodeEES3_ET0_T_S6_S5_(%"struct.Graph::Node"* %19, %"struct.Graph::Node"* %21, %"struct.Graph::Node"* %17)
  ret %"struct.Graph::Node"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4NodeESt13move_iteratorIS2_EET0_T_(%"struct.Graph::Node"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %3, align 8
  %4 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %3, align 8
  call void @_ZNSt13move_iteratorIPN5Graph4NodeEEC2ES2_(%"class.std::move_iterator"* %2, %"struct.Graph::Node"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  %6 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %5, align 8
  ret %"struct.Graph::Node"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph4NodeEES3_ET0_T_S6_S5_(%"struct.Graph::Node"*, %"struct.Graph::Node"*, %"struct.Graph::Node"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"struct.Graph::Node"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %11, align 8
  store %"struct.Graph::Node"* %2, %"struct.Graph::Node"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %18 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %19, align 8
  %21 = call %"struct.Graph::Node"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5Graph4NodeEES5_EET0_T_S8_S7_(%"struct.Graph::Node"* %18, %"struct.Graph::Node"* %20, %"struct.Graph::Node"* %16)
  ret %"struct.Graph::Node"* %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #6

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5Graph4NodeEES5_EET0_T_S8_S7_(%"struct.Graph::Node"*, %"struct.Graph::Node"*, %"struct.Graph::Node"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.145
  %5 = load i32, i32* @y.146
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %5, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %341

; <label>:17:                                     ; preds = %3, %341
  %18 = alloca %"class.std::move_iterator", align 8
  %19 = alloca %"class.std::move_iterator", align 8
  %20 = alloca %"struct.Graph::Node"*, align 8
  %21 = alloca %"struct.Graph::Node"*, align 8
  %22 = alloca i8*
  %23 = alloca i32
  %24 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %18, i32 0, i32 0
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %24, align 8
  %25 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %19, i32 0, i32 0
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %25, align 8
  store %"struct.Graph::Node"* %2, %"struct.Graph::Node"** %20, align 8
  %26 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %20, align 8
  store %"struct.Graph::Node"* %26, %"struct.Graph::Node"** %21, align 8
  %27 = load i32, i32* @x.145
  %28 = load i32, i32* @y.146
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  br i1 %38, label %40, label %341

; <label>:40:                                     ; preds = %17
  br label %41

; <label>:41:                                     ; preds = %178, %40
  %42 = invoke zeroext i1 @_ZStneIPN5Graph4NodeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8) %18, %"class.std::move_iterator"* dereferenceable(8) %19)
          to label %43 unwind label %179

; <label>:43:                                     ; preds = %41
  br i1 %42, label %44, label %230

; <label>:44:                                     ; preds = %43
  %45 = load i32, i32* @x.145
  %46 = load i32, i32* @y.146
  %47 = sub i32 %45, -1490803007
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -1490803007
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  br i1 %69, label %71, label %351

; <label>:71:                                     ; preds = %44, %351
  %72 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %21, align 8
  %73 = call %"struct.Graph::Node"* @_ZSt11__addressofIN5Graph4NodeEEPT_RS2_(%"struct.Graph::Node"* dereferenceable(32) %72) #3
  %74 = load i32, i32* @x.145
  %75 = load i32, i32* @y.146
  %76 = sub i32 %74, 1918013612
  %77 = sub i32 %76, 1
  %78 = add i32 %77, 1918013612
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = xor i1 %82, true
  %85 = xor i1 %83, true
  %86 = xor i1 false, true
  %87 = and i1 %84, false
  %88 = and i1 %82, %86
  %89 = and i1 %85, false
  %90 = and i1 %83, %86
  %91 = or i1 %87, %88
  %92 = or i1 %89, %90
  %93 = xor i1 %91, %92
  %94 = or i1 %84, %85
  %95 = xor i1 %94, true
  %96 = or i1 false, %86
  %97 = and i1 %95, %96
  %98 = or i1 %93, %97
  %99 = or i1 %82, %83
  br i1 %98, label %100, label %351

; <label>:100:                                    ; preds = %71
  %101 = invoke dereferenceable(32) %"struct.Graph::Node"* @_ZNKSt13move_iteratorIPN5Graph4NodeEEdeEv(%"class.std::move_iterator"* %18)
          to label %102 unwind label %179

; <label>:102:                                    ; preds = %100
  %103 = load i32, i32* @x.145
  %104 = load i32, i32* @y.146
  %105 = sub i32 0, 1
  %106 = add i32 %103, %105
  %107 = sub i32 %103, 1
  %108 = mul i32 %103, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %104, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 false, true
  %115 = and i1 %112, false
  %116 = and i1 %110, %114
  %117 = and i1 %113, false
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 false, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  br i1 %126, label %128, label %354

; <label>:128:                                    ; preds = %102, %354
  %129 = load i32, i32* @x.145
  %130 = load i32, i32* @y.146
  %131 = sub i32 0, 1
  %132 = add i32 %129, %131
  %133 = sub i32 %129, 1
  %134 = mul i32 %129, %132
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %130, 10
  %138 = and i1 %136, %137
  %139 = xor i1 %136, %137
  %140 = or i1 %138, %139
  %141 = or i1 %136, %137
  br i1 %140, label %142, label %354

; <label>:142:                                    ; preds = %128
  invoke void @_ZSt10_ConstructIN5Graph4NodeEJS1_EEvPT_DpOT0_(%"struct.Graph::Node"* %73, %"struct.Graph::Node"* dereferenceable(32) %101)
          to label %143 unwind label %179

; <label>:143:                                    ; preds = %142
  br label %144

; <label>:144:                                    ; preds = %143
  %145 = invoke dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPN5Graph4NodeEEppEv(%"class.std::move_iterator"* %18)
          to label %146 unwind label %179

; <label>:146:                                    ; preds = %144
  %147 = load i32, i32* @x.145
  %148 = load i32, i32* @y.146
  %149 = add i32 %147, 2052700918
  %150 = sub i32 %149, 1
  %151 = sub i32 %150, 2052700918
  %152 = sub i32 %147, 1
  %153 = mul i32 %147, %151
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %148, 10
  %157 = and i1 %155, %156
  %158 = xor i1 %155, %156
  %159 = or i1 %157, %158
  %160 = or i1 %155, %156
  br i1 %159, label %161, label %355

; <label>:161:                                    ; preds = %146, %355
  %162 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %21, align 8
  %163 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %162, i32 1
  store %"struct.Graph::Node"* %163, %"struct.Graph::Node"** %21, align 8
  %164 = load i32, i32* @x.145
  %165 = load i32, i32* @y.146
  %166 = add i32 %164, -541207726
  %167 = sub i32 %166, 1
  %168 = sub i32 %167, -541207726
  %169 = sub i32 %164, 1
  %170 = mul i32 %164, %168
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %165, 10
  %174 = and i1 %172, %173
  %175 = xor i1 %172, %173
  %176 = or i1 %174, %175
  %177 = or i1 %172, %173
  br i1 %176, label %178, label %355

; <label>:178:                                    ; preds = %161
  br label %41

; <label>:179:                                    ; preds = %144, %142, %100, %41
  %180 = landingpad { i8*, i32 }
          catch i8* null
  %181 = extractvalue { i8*, i32 } %180, 0
  store i8* %181, i8** %22, align 8
  %182 = extractvalue { i8*, i32 } %180, 1
  store i32 %182, i32* %23, align 4
  br label %183

; <label>:183:                                    ; preds = %179
  %184 = load i32, i32* @x.145
  %185 = load i32, i32* @y.146
  %186 = add i32 %184, -120836851
  %187 = sub i32 %186, 1
  %188 = sub i32 %187, -120836851
  %189 = sub i32 %184, 1
  %190 = mul i32 %184, %188
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %185, 10
  %194 = xor i1 %192, true
  %195 = xor i1 %193, true
  %196 = xor i1 true, true
  %197 = and i1 %194, true
  %198 = and i1 %192, %196
  %199 = and i1 %195, true
  %200 = and i1 %193, %196
  %201 = or i1 %197, %198
  %202 = or i1 %199, %200
  %203 = xor i1 %201, %202
  %204 = or i1 %194, %195
  %205 = xor i1 %204, true
  %206 = or i1 true, %196
  %207 = and i1 %205, %206
  %208 = or i1 %203, %207
  %209 = or i1 %192, %193
  br i1 %208, label %210, label %358

; <label>:210:                                    ; preds = %183, %358
  %211 = load i8*, i8** %22, align 8
  %212 = call i8* @__cxa_begin_catch(i8* %211) #3
  %213 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %20, align 8
  %214 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %21, align 8
  %215 = load i32, i32* @x.145
  %216 = load i32, i32* @y.146
  %217 = sub i32 0, 1
  %218 = add i32 %215, %217
  %219 = sub i32 %215, 1
  %220 = mul i32 %215, %218
  %221 = urem i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %216, 10
  %224 = and i1 %222, %223
  %225 = xor i1 %222, %223
  %226 = or i1 %224, %225
  %227 = or i1 %222, %223
  br i1 %226, label %228, label %358

; <label>:228:                                    ; preds = %210
  invoke void @_ZSt8_DestroyIPN5Graph4NodeEEvT_S3_(%"struct.Graph::Node"* %213, %"struct.Graph::Node"* %214)
          to label %229 unwind label %286

; <label>:229:                                    ; preds = %228
  invoke void @__cxa_rethrow() #12
          to label %340 unwind label %286

; <label>:230:                                    ; preds = %43
  %231 = load i32, i32* @x.145
  %232 = load i32, i32* @y.146
  %233 = add i32 %231, 1520802198
  %234 = sub i32 %233, 1
  %235 = sub i32 %234, 1520802198
  %236 = sub i32 %231, 1
  %237 = mul i32 %231, %235
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %232, 10
  %241 = xor i1 %239, true
  %242 = xor i1 %240, true
  %243 = xor i1 true, true
  %244 = and i1 %241, true
  %245 = and i1 %239, %243
  %246 = and i1 %242, true
  %247 = and i1 %240, %243
  %248 = or i1 %244, %245
  %249 = or i1 %246, %247
  %250 = xor i1 %248, %249
  %251 = or i1 %241, %242
  %252 = xor i1 %251, true
  %253 = or i1 true, %243
  %254 = and i1 %252, %253
  %255 = or i1 %250, %254
  %256 = or i1 %239, %240
  br i1 %255, label %257, label %363

; <label>:257:                                    ; preds = %230, %363
  %258 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %21, align 8
  %259 = load i32, i32* @x.145
  %260 = load i32, i32* @y.146
  %261 = sub i32 %259, -874469116
  %262 = sub i32 %261, 1
  %263 = add i32 %262, -874469116
  %264 = sub i32 %259, 1
  %265 = mul i32 %259, %263
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %260, 10
  %269 = xor i1 %267, true
  %270 = xor i1 %268, true
  %271 = xor i1 false, true
  %272 = and i1 %269, false
  %273 = and i1 %267, %271
  %274 = and i1 %270, false
  %275 = and i1 %268, %271
  %276 = or i1 %272, %273
  %277 = or i1 %274, %275
  %278 = xor i1 %276, %277
  %279 = or i1 %269, %270
  %280 = xor i1 %279, true
  %281 = or i1 false, %271
  %282 = and i1 %280, %281
  %283 = or i1 %278, %282
  %284 = or i1 %267, %268
  br i1 %283, label %285, label %363

; <label>:285:                                    ; preds = %257
  ret %"struct.Graph::Node"* %258

; <label>:286:                                    ; preds = %229, %228
  %287 = landingpad { i8*, i32 }
          cleanup
  %288 = extractvalue { i8*, i32 } %287, 0
  store i8* %288, i8** %22, align 8
  %289 = extractvalue { i8*, i32 } %287, 1
  store i32 %289, i32* %23, align 4
  invoke void @__cxa_end_catch()
          to label %290 unwind label %337

; <label>:290:                                    ; preds = %286
  br label %292
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:292:                                    ; preds = %290
  %293 = load i32, i32* @x.145
  %294 = load i32, i32* @y.146
  %295 = sub i32 0, 1
  %296 = add i32 %293, %295
  %297 = sub i32 %293, 1
  %298 = mul i32 %293, %296
  %299 = urem i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %294, 10
  %302 = xor i1 %300, true
  %303 = xor i1 %301, true
  %304 = xor i1 false, true
  %305 = and i1 %302, false
  %306 = and i1 %300, %304
  %307 = and i1 %303, false
  %308 = and i1 %301, %304
  %309 = or i1 %305, %306
  %310 = or i1 %307, %308
  %311 = xor i1 %309, %310
  %312 = or i1 %302, %303
  %313 = xor i1 %312, true
  %314 = or i1 false, %304
  %315 = and i1 %313, %314
  %316 = or i1 %311, %315
  %317 = or i1 %300, %301
  br i1 %316, label %318, label %365

; <label>:318:                                    ; preds = %292, %365
  %319 = load i8*, i8** %22, align 8
  %320 = load i32, i32* %23, align 4
  %321 = insertvalue { i8*, i32 } undef, i8* %319, 0
  %322 = insertvalue { i8*, i32 } %321, i32 %320, 1
  %323 = load i32, i32* @x.145
  %324 = load i32, i32* @y.146
  %325 = sub i32 0, 1
  %326 = add i32 %323, %325
  %327 = sub i32 %323, 1
  %328 = mul i32 %323, %326
  %329 = urem i32 %328, 2
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %324, 10
  %332 = and i1 %330, %331
  %333 = xor i1 %330, %331
  %334 = or i1 %332, %333
  %335 = or i1 %330, %331
  br i1 %334, label %336, label %365

; <label>:336:                                    ; preds = %318
  resume { i8*, i32 } %322

; <label>:337:                                    ; preds = %286
  %338 = landingpad { i8*, i32 }
          catch i8* null
  %339 = extractvalue { i8*, i32 } %338, 0
  call void @__clang_call_terminate(i8* %339) #10
  unreachable

; <label>:340:                                    ; preds = %229
  unreachable

; <label>:341:                                    ; preds = %17, %3
  %342 = alloca %"class.std::move_iterator", align 8
  %343 = alloca %"class.std::move_iterator", align 8
  %344 = alloca %"struct.Graph::Node"*, align 8
  %345 = alloca %"struct.Graph::Node"*, align 8
  %346 = alloca i8*
  %347 = alloca i32
  %348 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %342, i32 0, i32 0
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %348, align 8
  %349 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %343, i32 0, i32 0
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %349, align 8
  store %"struct.Graph::Node"* %2, %"struct.Graph::Node"** %344, align 8
  %350 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %344, align 8
  store %"struct.Graph::Node"* %350, %"struct.Graph::Node"** %345, align 8
  br label %17

; <label>:351:                                    ; preds = %71, %44
  %352 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %21, align 8
  %353 = call %"struct.Graph::Node"* @_ZSt11__addressofIN5Graph4NodeEEPT_RS2_(%"struct.Graph::Node"* dereferenceable(32) %352) #3
  br label %71

; <label>:354:                                    ; preds = %128, %102
  br label %128

; <label>:355:                                    ; preds = %161, %146
  %356 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %21, align 8
  %357 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %356, i32 1
  store %"struct.Graph::Node"* %357, %"struct.Graph::Node"** %21, align 8
  br label %161

; <label>:358:                                    ; preds = %210, %183
  %359 = load i8*, i8** %22, align 8
  %360 = call i8* @__cxa_begin_catch(i8* %359) #3
  %361 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %20, align 8
  %362 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %21, align 8
  br label %210

; <label>:363:                                    ; preds = %257, %230
  %364 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %21, align 8
  br label %257

; <label>:365:                                    ; preds = %318, %292
  %366 = load i8*, i8** %22, align 8
  %367 = load i32, i32* %23, align 4
  %368 = insertvalue { i8*, i32 } undef, i8* %366, 0
  %369 = insertvalue { i8*, i32 } %368, i32 %367, 1
  br label %318
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPN5Graph4NodeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPN5Graph4NodeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8) %5, %"class.std::move_iterator"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = or i1 %9, %11
  %13 = xor i1 %7, true
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructIN5Graph4NodeEJS1_EEvPT_DpOT0_(%"struct.Graph::Node"*, %"struct.Graph::Node"* dereferenceable(32)) #5 comdat {
  %3 = alloca %"struct.Graph::Node"*, align 8
  %4 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %3, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %4, align 8
  %5 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %3, align 8
  %6 = bitcast %"struct.Graph::Node"* %5 to i8*
  %7 = bitcast i8* %6 to %"struct.Graph::Node"*
  %8 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %9 = call dereferenceable(32) %"struct.Graph::Node"* @_ZSt7forwardIN5Graph4NodeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Node"* dereferenceable(32) %8) #3
  call void @_ZN5Graph4NodeC2EOS0_(%"struct.Graph::Node"* %7, %"struct.Graph::Node"* dereferenceable(32) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZSt11__addressofIN5Graph4NodeEEPT_RS2_(%"struct.Graph::Node"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %2, align 8
  %3 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %2, align 8
  %4 = bitcast %"struct.Graph::Node"* %3 to i8*
  %5 = bitcast i8* %4 to %"struct.Graph::Node"*
  ret %"struct.Graph::Node"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.Graph::Node"* @_ZNKSt13move_iteratorIPN5Graph4NodeEEdeEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  ret %"struct.Graph::Node"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPN5Graph4NodeEEppEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %6 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %5, i32 1
  store %"struct.Graph::Node"* %6, %"struct.Graph::Node"** %4, align 8
  ret %"class.std::move_iterator"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN5Graph4NodeEEvT_S3_(%"struct.Graph::Node"*, %"struct.Graph::Node"*) #0 comdat {
  %3 = alloca %"struct.Graph::Node"*, align 8
  %4 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %3, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %4, align 8
  %5 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %3, align 8
  %6 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPN5Graph4NodeEEEvT_S5_(%"struct.Graph::Node"* %5, %"struct.Graph::Node"* %6)
  ret void
}

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPN5Graph4NodeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = call %"struct.Graph::Node"* @_ZNKSt13move_iteratorIPN5Graph4NodeEE4baseEv(%"class.std::move_iterator"* %5)
  %7 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %8 = call %"struct.Graph::Node"* @_ZNKSt13move_iteratorIPN5Graph4NodeEE4baseEv(%"class.std::move_iterator"* %7)
  %9 = icmp eq %"struct.Graph::Node"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZNKSt13move_iteratorIPN5Graph4NodeEE4baseEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"struct.Graph::Node"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.161
  %6 = load i32, i32* @y.162
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -2002648580, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %53
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2002648580, label %18
    i32 -852453076, label %26
    i32 1600541169, label %46
    i32 1537136502, label %48
  ]

; <label>:17:                                     ; preds = %15
  br label %53

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -852453076, i32 1537136502
  store i32 %25, i32* %14
  br label %53

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %27, align 8
  %28 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %27, align 8
  %29 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %28, i32 0, i32 0
  %30 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %29, align 8
  store %"struct.Graph::Node"* %30, %"struct.Graph::Node"** %2
  %31 = load i32, i32* @x.161
  %32 = load i32, i32* @y.162
  %33 = add i32 %31, 1806934254
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 1806934254
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 1600541169, i32 1537136502
  store i32 %45, i32* %14
  br label %53

; <label>:46:                                     ; preds = %15
  %47 = load volatile %"struct.Graph::Node"*, %"struct.Graph::Node"** %2
  ret %"struct.Graph::Node"* %47

; <label>:48:                                     ; preds = %15
  %49 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %49, align 8
  %50 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %49, align 8
  %51 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %50, i32 0, i32 0
  %52 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %51, align 8
  store i32 -852453076, i32* %14
  br label %53

; <label>:53:                                     ; preds = %48, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPN5Graph4NodeEEEvT_S5_(%"struct.Graph::Node"*, %"struct.Graph::Node"*) #0 comdat align 2 {
  %3 = alloca %"struct.Graph::Node"*, align 8
  %4 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %3, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %4, align 8
  %5 = alloca i32
  store i32 -1026945293, i32* %5
  br label %6

; <label>:6:                                      ; preds = %2, %100
  %7 = load i32, i32* %5
  switch i32 %7, label %8 [
    i32 -1026945293, label %9
    i32 1528804213, label %14
    i32 1929164250, label %17
    i32 -64754188, label %45
    i32 2127155485, label %63
    i32 852901293, label %64
    i32 1739367681, label %79
    i32 -1028571354, label %95
    i32 905212235, label %96
    i32 -701148083, label %99
  ]

; <label>:8:                                      ; preds = %6
  br label %100

; <label>:9:                                      ; preds = %6
  %10 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %3, align 8
  %11 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %12 = icmp ne %"struct.Graph::Node"* %10, %11
  %13 = select i1 %12, i32 1528804213, i32 852901293
  store i32 %13, i32* %5
  br label %100

; <label>:14:                                     ; preds = %6
  %15 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %3, align 8
  %16 = call %"struct.Graph::Node"* @_ZSt11__addressofIN5Graph4NodeEEPT_RS2_(%"struct.Graph::Node"* dereferenceable(32) %15) #3
  call void @_ZSt8_DestroyIN5Graph4NodeEEvPT_(%"struct.Graph::Node"* %16)
  store i32 1929164250, i32* %5
  br label %100

; <label>:17:                                     ; preds = %6
  %18 = load i32, i32* @x.163
  %19 = load i32, i32* @y.164
  %20 = add i32 %18, -1813888841
  %21 = sub i32 %20, 1
  %22 = sub i32 %21, -1813888841
  %23 = sub i32 %18, 1
  %24 = mul i32 %18, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %19, 10
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 true, true
  %31 = and i1 %28, true
  %32 = and i1 %26, %30
  %33 = and i1 %29, true
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 true, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  %44 = select i1 %42, i32 -64754188, i32 905212235
  store i32 %44, i32* %5
  br label %100

; <label>:45:                                     ; preds = %6
  %46 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %3, align 8
  %47 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %46, i32 1
  store %"struct.Graph::Node"* %47, %"struct.Graph::Node"** %3, align 8
  %48 = load i32, i32* @x.163
  %49 = load i32, i32* @y.164
  %50 = sub i32 %48, 663993978
  %51 = sub i32 %50, 1
  %52 = add i32 %51, 663993978
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 2127155485, i32 905212235
  store i32 %62, i32* %5
  br label %100

; <label>:63:                                     ; preds = %6
  store i32 -1026945293, i32* %5
  br label %100

; <label>:64:                                     ; preds = %6
  %65 = load i32, i32* @x.163
  %66 = load i32, i32* @y.164
  %67 = sub i32 0, 1
  %68 = add i32 %65, %67
  %69 = sub i32 %65, 1
  %70 = mul i32 %65, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %66, 10
  %74 = and i1 %72, %73
  %75 = xor i1 %72, %73
  %76 = or i1 %74, %75
  %77 = or i1 %72, %73
  %78 = select i1 %76, i32 1739367681, i32 -701148083
  store i32 %78, i32* %5
  br label %100

; <label>:79:                                     ; preds = %6
  %80 = load i32, i32* @x.163
  %81 = load i32, i32* @y.164
  %82 = add i32 %80, 1864734806
  %83 = sub i32 %82, 1
  %84 = sub i32 %83, 1864734806
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  %94 = select i1 %92, i32 -1028571354, i32 -701148083
  store i32 %94, i32* %5
  br label %100

; <label>:95:                                     ; preds = %6
  ret void

; <label>:96:                                     ; preds = %6
  %97 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %3, align 8
  %98 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %97, i32 1
  store %"struct.Graph::Node"* %98, %"struct.Graph::Node"** %3, align 8
  store i32 -64754188, i32* %5
  br label %100

; <label>:99:                                     ; preds = %6
  store i32 1739367681, i32* %5
  br label %100

; <label>:100:                                    ; preds = %99, %96, %79, %64, %63, %45, %17, %14, %9, %8
  br label %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyIN5Graph4NodeEEvPT_(%"struct.Graph::Node"*) #5 comdat {
  %2 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %2, align 8
  %3 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %2, align 8
  call void @_ZN5Graph4NodeD2Ev(%"struct.Graph::Node"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPN5Graph4NodeEEC2ES2_(%"class.std::move_iterator"*, %"struct.Graph::Node"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.167
  %6 = load i32, i32* @y.168
  %7 = sub i32 %5, -291194673
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -291194673
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1444153632, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %79
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1444153632, label %19
    i32 -1312434231, label %39
    i32 656679656, label %72
    i32 -147279694, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %79

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1312434231, i32 -147279694
  store i32 %38, i32* %15
  br label %79

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator"*, align 8
  %41 = alloca %"struct.Graph::Node"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %40, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %41, align 8
  %42 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %40, align 8
  %43 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %42, i32 0, i32 0
  %44 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %41, align 8
  store %"struct.Graph::Node"* %44, %"struct.Graph::Node"** %43, align 8
  %45 = load i32, i32* @x.167
  %46 = load i32, i32* @y.168
  %47 = sub i32 %45, -732861321
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -732861321
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 656679656, i32 -147279694
  store i32 %71, i32* %15
  br label %79

; <label>:72:                                     ; preds = %16
  ret void

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::move_iterator"*, align 8
  %75 = alloca %"struct.Graph::Node"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %74, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %75, align 8
  %76 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %74, align 8
  %77 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %76, i32 0, i32 0
  %78 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %75, align 8
  store %"struct.Graph::Node"* %78, %"struct.Graph::Node"** %77, align 8
  store i32 -1312434231, i32* %15
  br label %79

; <label>:79:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.16"*, %"struct.Graph::Node"*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.169
  %6 = load i32, i32* @y.170
  %7 = add i32 %5, 1907951382
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1907951382
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1099519223, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1099519223, label %19
    i32 924510525, label %27
    i32 361870036, label %59
    i32 -1683806971, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 924510525, i32 -1683806971
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %29 = alloca %"struct.Graph::Node"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %28, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %29, align 8
  %30 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %28, align 8
  %31 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %29, align 8
  call void @_ZN5Graph4NodeD2Ev(%"struct.Graph::Node"* %31) #3
  %32 = load i32, i32* @x.169
  %33 = load i32, i32* @y.170
  %34 = sub i32 %32, 1902153928
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 1902153928
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 361870036, i32 -1683806971
  store i32 %58, i32* %15
  br label %65

; <label>:59:                                     ; preds = %16
  ret void

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %62 = alloca %"struct.Graph::Node"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %61, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %62, align 8
  %63 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %61, align 8
  %64 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %62, align 8
  call void @_ZN5Graph4NodeD2Ev(%"struct.Graph::Node"* %64) #3
  store i32 924510525, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE10deallocateERS2_PS1_m(%"class.std::allocator.15"* dereferenceable(1), %"struct.Graph::Node"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.171
  %7 = load i32, i32* @y.172
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 583385639, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %83
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 583385639, label %19
    i32 2120112589, label %39
    i32 -1029186912, label %74
    i32 -824486503, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %83

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 2120112589, i32 -824486503
  store i32 %38, i32* %15
  br label %83

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.15"*, align 8
  %41 = alloca %"struct.Graph::Node"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %40, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %41, align 8
  store i64 %2, i64* %42, align 8
  %43 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %40, align 8
  %44 = bitcast %"class.std::allocator.15"* %43 to %"class.__gnu_cxx::new_allocator.16"*
  %45 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %41, align 8
  %46 = load i64, i64* %42, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.16"* %44, %"struct.Graph::Node"* %45, i64 %46)
  %47 = load i32, i32* @x.171
  %48 = load i32, i32* @y.172
  %49 = sub i32 %47, 1686389134
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 1686389134
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -1029186912, i32 -824486503
  store i32 %73, i32* %15
  br label %83

; <label>:74:                                     ; preds = %16
  ret void

; <label>:75:                                     ; preds = %16
  %76 = alloca %"class.std::allocator.15"*, align 8
  %77 = alloca %"struct.Graph::Node"*, align 8
  %78 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %76, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %77, align 8
  store i64 %2, i64* %78, align 8
  %79 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %76, align 8
  %80 = bitcast %"class.std::allocator.15"* %79 to %"class.__gnu_cxx::new_allocator.16"*
  %81 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %77, align 8
  %82 = load i64, i64* %78, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.16"* %80, %"struct.Graph::Node"* %81, i64 %82)
  store i32 2120112589, i32* %15
  br label %83

; <label>:83:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.16"*, %"struct.Graph::Node"*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.173
  %7 = load i32, i32* @y.174
  %8 = add i32 %6, -1355881387
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1355881387
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -842115974, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -842115974, label %20
    i32 -1361618762, label %28
    i32 -800016311, label %62
    i32 547512082, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1361618762, i32 547512082
  store i32 %27, i32* %16
  br label %70

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %30 = alloca %"struct.Graph::Node"*, align 8
  %31 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %29, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %29, align 8
  %33 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %30, align 8
  %34 = bitcast %"struct.Graph::Node"* %33 to i8*
  call void @_ZdlPv(i8* %34) #3
  %35 = load i32, i32* @x.173
  %36 = load i32, i32* @y.174
  %37 = add i32 %35, 82056303
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 82056303
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 -800016311, i32 547512082
  store i32 %61, i32* %16
  br label %70

; <label>:62:                                     ; preds = %17
  ret void

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %65 = alloca %"struct.Graph::Node"*, align 8
  %66 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %64, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %64, align 8
  %68 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %65, align 8
  %69 = bitcast %"struct.Graph::Node"* %68 to i8*
  call void @_ZdlPv(i8* %69) #3
  store i32 -1361618762, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %28, %20, %19
  br label %17
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #11

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EEC2Ev(%"class.std::vector.18"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  %4 = bitcast %"class.std::vector.18"* %3 to %"struct.std::_Vector_base.19"*
  invoke void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EEC2Ev(%"struct.std::_Vector_base.19"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #10
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EEC2Ev(%"struct.std::_Vector_base.19"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %2, align 8
  %3 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %3 to %"class.std::allocator.20"*
  call void @_ZNSaIN5Graph4EdgeEEC2Ev(%"class.std::allocator.20"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %3, i32 0, i32 0
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %3, i32 0, i32 1
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %3, i32 0, i32 2
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5Graph4EdgeEEC2Ev(%"class.std::allocator.20"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %2, align 8
  %3 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %2, align 8
  %4 = bitcast %"class.std::allocator.20"* %3 to %"class.__gnu_cxx::new_allocator.21"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEEC2Ev(%"class.__gnu_cxx::new_allocator.21"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEEC2Ev(%"class.__gnu_cxx::new_allocator.21"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EED2Ev(%"class.std::vector.18"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.18"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  %6 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %8, align 8
  %10 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %12, align 8
  %14 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %15 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %14) #3
  invoke void @_ZSt8_DestroyIPN5Graph4EdgeES1_EvT_S3_RSaIT0_E(%"struct.Graph::Edge"* %9, %"struct.Graph::Edge"* %13, %"class.std::allocator.20"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EED2Ev(%"struct.std::_Vector_base.19"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EED2Ev(%"struct.std::_Vector_base.19"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i32, i32* @x.185
  %25 = load i32, i32* @y.186
  %26 = add i32 %24, -1455421026
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, -1455421026
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  br i1 %36, label %38, label %66

; <label>:38:                                     ; preds = %23, %66
  %39 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %39) #10
  %40 = load i32, i32* @x.185
  %41 = load i32, i32* @y.186
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  br i1 %63, label %65, label %66

; <label>:65:                                     ; preds = %38
  unreachable

; <label>:66:                                     ; preds = %38, %23
  %67 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %67) #10
  br label %38
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN5Graph4EdgeES1_EvT_S3_RSaIT0_E(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.187
  %7 = load i32, i32* @y.188
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 605082780, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 605082780, label %19
    i32 -1622387099, label %39
    i32 -1511770450, label %60
    i32 -348394865, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1622387099, i32 -348394865
  store i32 %38, i32* %15
  br label %67

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.Graph::Edge"*, align 8
  %41 = alloca %"struct.Graph::Edge"*, align 8
  %42 = alloca %"class.std::allocator.20"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %40, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %41, align 8
  store %"class.std::allocator.20"* %2, %"class.std::allocator.20"** %42, align 8
  %43 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %40, align 8
  %44 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %41, align 8
  call void @_ZSt8_DestroyIPN5Graph4EdgeEEvT_S3_(%"struct.Graph::Edge"* %43, %"struct.Graph::Edge"* %44)
  %45 = load i32, i32* @x.187
  %46 = load i32, i32* @y.188
  %47 = add i32 %45, -742096245
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -742096245
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -1511770450, i32 -348394865
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.Graph::Edge"*, align 8
  %63 = alloca %"struct.Graph::Edge"*, align 8
  %64 = alloca %"class.std::allocator.20"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %62, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %63, align 8
  store %"class.std::allocator.20"* %2, %"class.std::allocator.20"** %64, align 8
  %65 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %62, align 8
  %66 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %63, align 8
  call void @_ZSt8_DestroyIPN5Graph4EdgeEEvT_S3_(%"struct.Graph::Edge"* %65, %"struct.Graph::Edge"* %66)
  store i32 -1622387099, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EED2Ev(%"struct.std::_Vector_base.19"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.19"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %2, align 8
  %5 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %13, align 8
  %15 = ptrtoint %"struct.Graph::Edge"* %11 to i64
  %16 = ptrtoint %"struct.Graph::Edge"* %14 to i64
  %17 = sub i64 %15, 4667600069501234620
  %18 = sub i64 %17, %16
  %19 = add i64 %18, 4667600069501234620
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 16
  invoke void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.19"* %5, %"struct.Graph::Edge"* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = load i32, i32* @x.189
  %26 = load i32, i32* @y.190
  %27 = sub i32 0, 1
  %28 = add i32 %25, %27
  %29 = sub i32 %25, 1
  %30 = mul i32 %25, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %26, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 true, true
  %37 = and i1 %34, true
  %38 = and i1 %32, %36
  %39 = and i1 %35, true
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 true, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  br i1 %48, label %50, label %72

; <label>:50:                                     ; preds = %24, %72
  %51 = landingpad { i8*, i32 }
          catch i8* null
  %52 = extractvalue { i8*, i32 } %51, 0
  store i8* %52, i8** %3, align 8
  %53 = extractvalue { i8*, i32 } %51, 1
  store i32 %53, i32* %4, align 4
  %54 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %54) #3
  %55 = load i32, i32* @x.189
  %56 = load i32, i32* @y.190
  %57 = sub i32 %55, 289890682
  %58 = sub i32 %57, 1
  %59 = add i32 %58, 289890682
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  br i1 %67, label %69, label %72

; <label>:69:                                     ; preds = %50
  br label %70

; <label>:70:                                     ; preds = %69
  %71 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %71) #10
  unreachable

; <label>:72:                                     ; preds = %50, %24
  %73 = landingpad { i8*, i32 }
          catch i8* null
  %74 = extractvalue { i8*, i32 } %73, 0
  store i8* %74, i8** %3, align 8
  %75 = extractvalue { i8*, i32 } %73, 1
  store i32 %75, i32* %4, align 4
  %76 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %76) #3
  br label %50
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN5Graph4EdgeEEvT_S3_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*) #0 comdat {
  %3 = alloca %"struct.Graph::Edge"*, align 8
  %4 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %3, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %4, align 8
  %5 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %3, align 8
  %6 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN5Graph4EdgeEEEvT_S5_(%"struct.Graph::Edge"* %5, %"struct.Graph::Edge"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN5Graph4EdgeEEEvT_S5_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*) #5 comdat align 2 {
  %3 = alloca %"struct.Graph::Edge"*, align 8
  %4 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %3, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.19"*, %"struct.Graph::Edge"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.19"*
  %6 = alloca i64*
  %7 = alloca %"struct.Graph::Edge"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.195
  %11 = load i32, i32* @y.196
  %12 = add i32 %10, -1358203603
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, -1358203603
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -2114244781, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %132
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -2114244781, label %24
    i32 -1859469464, label %44
    i32 810567642, label %81
    i32 -453289767, label %84
    i32 1759910062, label %92
    i32 445243567, label %107
    i32 -551233838, label %123
    i32 -1545936209, label %124
    i32 1583730841, label %131
  ]

; <label>:23:                                     ; preds = %21
  br label %132

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 -1859469464, i32 -1545936209
  store i32 %43, i32* %20
  br label %132

; <label>:44:                                     ; preds = %21
  %45 = alloca %"struct.std::_Vector_base.19"*, align 8
  %46 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"** %46, %"struct.Graph::Edge"*** %7
  %47 = alloca i64, align 8
  store i64* %47, i64** %6
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %45, align 8
  %48 = load volatile %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %7
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %48, align 8
  %49 = load volatile i64*, i64** %6
  store i64 %2, i64* %49, align 8
  %50 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %45, align 8
  store %"struct.std::_Vector_base.19"* %50, %"struct.std::_Vector_base.19"** %5
  %51 = load volatile %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %7
  %52 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %51, align 8
  %53 = icmp ne %"struct.Graph::Edge"* %52, null
  store i1 %53, i1* %4
  %54 = load i32, i32* @x.195
  %55 = load i32, i32* @y.196
  %56 = sub i32 %54, -843615990
  %57 = sub i32 %56, 1
  %58 = add i32 %57, -843615990
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 true, true
  %67 = and i1 %64, true
  %68 = and i1 %62, %66
  %69 = and i1 %65, true
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 true, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  %80 = select i1 %78, i32 810567642, i32 -1545936209
  store i32 %80, i32* %20
  br label %132

; <label>:81:                                     ; preds = %21
  %82 = load volatile i1, i1* %4
  %83 = select i1 %82, i32 -453289767, i32 1759910062
  store i32 %83, i32* %20
  br label %132

; <label>:84:                                     ; preds = %21
  %85 = load volatile %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %5
  %86 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %85, i32 0, i32 0
  %87 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %86 to %"class.std::allocator.20"*
  %88 = load volatile %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %7
  %89 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %88, align 8
  %90 = load volatile i64*, i64** %6
  %91 = load i64, i64* %90, align 8
  call void @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE10deallocateERS2_PS1_m(%"class.std::allocator.20"* dereferenceable(1) %87, %"struct.Graph::Edge"* %89, i64 %91)
  store i32 1759910062, i32* %20
  br label %132

; <label>:92:                                     ; preds = %21
  %93 = load i32, i32* @x.195
  %94 = load i32, i32* @y.196
  %95 = sub i32 0, 1
  %96 = add i32 %93, %95
  %97 = sub i32 %93, 1
  %98 = mul i32 %93, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %94, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  %106 = select i1 %104, i32 445243567, i32 1583730841
  store i32 %106, i32* %20
  br label %132

; <label>:107:                                    ; preds = %21
  %108 = load i32, i32* @x.195
  %109 = load i32, i32* @y.196
  %110 = add i32 %108, -385451818
  %111 = sub i32 %110, 1
  %112 = sub i32 %111, -385451818
  %113 = sub i32 %108, 1
  %114 = mul i32 %108, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %109, 10
  %118 = and i1 %116, %117
  %119 = xor i1 %116, %117
  %120 = or i1 %118, %119
  %121 = or i1 %116, %117
  %122 = select i1 %120, i32 -551233838, i32 1583730841
  store i32 %122, i32* %20
  br label %132

; <label>:123:                                    ; preds = %21
  ret void

; <label>:124:                                    ; preds = %21
  %125 = alloca %"struct.std::_Vector_base.19"*, align 8
  %126 = alloca %"struct.Graph::Edge"*, align 8
  %127 = alloca i64, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %125, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %126, align 8
  store i64 %2, i64* %127, align 8
  %128 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %125, align 8
  %129 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %126, align 8
  %130 = icmp ne %"struct.Graph::Edge"* %129, null
  store i32 -1859469464, i32* %20
  br label %132

; <label>:131:                                    ; preds = %21
  store i32 445243567, i32* %20
  br label %132

; <label>:132:                                    ; preds = %131, %124, %107, %92, %84, %81, %44, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.197
  %5 = load i32, i32* @y.198
  %6 = sub i32 %4, 1634182738
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1634182738
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 2035435072, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 2035435072, label %18
    i32 968940208, label %38
    i32 562366793, label %57
    i32 352200384, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 968940208, i32 352200384
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %39, align 8
  %40 = load %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %39, align 8
  %41 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %40 to %"class.std::allocator.20"*
  call void @_ZNSaIN5Graph4EdgeEED2Ev(%"class.std::allocator.20"* %41) #3
  %42 = load i32, i32* @x.197
  %43 = load i32, i32* @y.198
  %44 = sub i32 %42, 540006076
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 540006076
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 562366793, i32 352200384
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %59, align 8
  %60 = load %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %59, align 8
  %61 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %60 to %"class.std::allocator.20"*
  call void @_ZNSaIN5Graph4EdgeEED2Ev(%"class.std::allocator.20"* %61) #3
  store i32 968940208, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE10deallocateERS2_PS1_m(%"class.std::allocator.20"* dereferenceable(1), %"struct.Graph::Edge"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.20"*, align 8
  %5 = alloca %"struct.Graph::Edge"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %4, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %4, align 8
  %8 = bitcast %"class.std::allocator.20"* %7 to %"class.__gnu_cxx::new_allocator.21"*
  %9 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.21"* %8, %"struct.Graph::Edge"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.21"*, %"struct.Graph::Edge"*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.201
  %7 = load i32, i32* @y.202
  %8 = add i32 %6, 1731552595
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1731552595
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -331070183, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %69
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -331070183, label %20
    i32 -845770006, label %28
    i32 -1438945357, label %61
    i32 897065698, label %62
  ]

; <label>:19:                                     ; preds = %17
  br label %69

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -845770006, i32 897065698
  store i32 %27, i32* %16
  br label %69

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %30 = alloca %"struct.Graph::Edge"*, align 8
  %31 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %29, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %29, align 8
  %33 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %30, align 8
  %34 = bitcast %"struct.Graph::Edge"* %33 to i8*
  call void @_ZdlPv(i8* %34) #3
  %35 = load i32, i32* @x.201
  %36 = load i32, i32* @y.202
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -1438945357, i32 897065698
  store i32 %60, i32* %16
  br label %69

; <label>:61:                                     ; preds = %17
  ret void

; <label>:62:                                     ; preds = %17
  %63 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %64 = alloca %"struct.Graph::Edge"*, align 8
  %65 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %63, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %64, align 8
  store i64 %2, i64* %65, align 8
  %66 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %63, align 8
  %67 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %64, align 8
  %68 = bitcast %"struct.Graph::Edge"* %67 to i8*
  call void @_ZdlPv(i8* %68) #3
  store i32 -845770006, i32* %16
  br label %69

; <label>:69:                                     ; preds = %62, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEED2Ev(%"class.__gnu_cxx::new_allocator.21"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EED2Ev(%"struct.std::_Vector_base.14"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.14"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %2, align 8
  %5 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %13, align 8
  %15 = ptrtoint %"struct.Graph::Node"* %11 to i64
  %16 = ptrtoint %"struct.Graph::Node"* %14 to i64
  %17 = add i64 %15, -4509269879781749033
  %18 = sub i64 %17, %16
  %19 = sub i64 %18, -4509269879781749033
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 32
  invoke void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.14"* %5, %"struct.Graph::Node"* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %28) #3
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %30) #10
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %3 to %"class.std::allocator.15"*
  call void @_ZNSaIN5Graph4NodeEED2Ev(%"class.std::allocator.15"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5Graph4NodeEED2Ev(%"class.std::allocator.15"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %2, align 8
  %3 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %2, align 8
  %4 = bitcast %"class.std::allocator.15"* %3 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEED2Ev(%"class.__gnu_cxx::new_allocator.16"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEED2Ev(%"class.__gnu_cxx::new_allocator.16"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.211
  %5 = load i32, i32* @y.212
  %6 = sub i32 %4, -2100964267
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -2100964267
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1274298032, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1274298032, label %18
    i32 -1903126977, label %26
    i32 -2059514642, label %56
    i32 858881579, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1903126977, i32 858881579
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %27, align 8
  %29 = load i32, i32* @x.211
  %30 = load i32, i32* @y.212
  %31 = sub i32 %29, 1714295169
  %32 = sub i32 %31, 1
  %33 = add i32 %32, 1714295169
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -2059514642, i32 858881579
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %58, align 8
  store i32 -1903126977, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE9push_backEOS1_(%"class.std::vector.18"*, %"struct.Graph::Edge"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %4, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %6 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  %7 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt4moveIRN5Graph4EdgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::Edge"* dereferenceable(16) %6) #3
  call void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.18"* %5, %"struct.Graph::Edge"* dereferenceable(16) %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5Graph4EdgeC2Exx(%"struct.Graph::Edge"*, i64, i64) unnamed_addr #5 comdat align 2 {
  %4 = alloca %"struct.Graph::Edge"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %7, i32 0, i32 0
  store i64 %8, i64* %9, align 8
  %10 = load i64, i64* %6, align 8
  %11 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %7, i32 0, i32 1
  store i64 %10, i64* %11, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.18"*, %"struct.Graph::Edge"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"struct.Graph::Edge"*
  %4 = alloca %"struct.Graph::Edge"*
  %5 = alloca %"class.std::vector.18"*
  %6 = alloca %"class.std::vector.18"*, align 8
  %7 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %6, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %7, align 8
  %8 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  store %"class.std::vector.18"* %8, %"class.std::vector.18"** %5
  %9 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %5
  %10 = bitcast %"class.std::vector.18"* %9 to %"struct.std::_Vector_base.19"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %12, align 8
  store %"struct.Graph::Edge"* %13, %"struct.Graph::Edge"** %4
  %14 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %5
  %15 = bitcast %"class.std::vector.18"* %14 to %"struct.std::_Vector_base.19"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %17, align 8
  store %"struct.Graph::Edge"* %18, %"struct.Graph::Edge"** %3
  %19 = alloca i32
  store i32 -88136253, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %99
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -88136253, label %23
    i32 610853722, label %28
    i32 1230514628, label %46
    i32 -843917924, label %62
    i32 -1910044118, label %93
    i32 130514537, label %94
    i32 -939316153, label %95
  ]

; <label>:22:                                     ; preds = %20
  br label %99

; <label>:23:                                     ; preds = %20
  %24 = load volatile %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4
  %25 = load volatile %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %3
  %26 = icmp ne %"struct.Graph::Edge"* %24, %25
  %27 = select i1 %26, i32 610853722, i32 1230514628
  store i32 %27, i32* %19
  br label %99

; <label>:28:                                     ; preds = %20
  %29 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %5
  %30 = bitcast %"class.std::vector.18"* %29 to %"struct.std::_Vector_base.19"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %31 to %"class.std::allocator.20"*
  %33 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %5
  %34 = bitcast %"class.std::vector.18"* %33 to %"struct.std::_Vector_base.19"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %36, align 8
  %38 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %39 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIN5Graph4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Edge"* dereferenceable(16) %38) #3
  call void @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.20"* dereferenceable(1) %32, %"struct.Graph::Edge"* %37, %"struct.Graph::Edge"* dereferenceable(16) %39)
  %40 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %5
  %41 = bitcast %"class.std::vector.18"* %40 to %"struct.std::_Vector_base.19"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %42, i32 0, i32 1
  %44 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %43, align 8
  %45 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %44, i32 1
  store %"struct.Graph::Edge"* %45, %"struct.Graph::Edge"** %43, align 8
  store i32 130514537, i32* %19
  br label %99

; <label>:46:                                     ; preds = %20
  %47 = load i32, i32* @x.217
  %48 = load i32, i32* @y.218
  %49 = add i32 %47, -308996486
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -308996486
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -843917924, i32 -939316153
  store i32 %61, i32* %19
  br label %99

; <label>:62:                                     ; preds = %20
  %63 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %64 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIN5Graph4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Edge"* dereferenceable(16) %63) #3
  %65 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %5
  call void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.18"* %65, %"struct.Graph::Edge"* dereferenceable(16) %64)
  %66 = load i32, i32* @x.217
  %67 = load i32, i32* @y.218
  %68 = add i32 %66, -879886534
  %69 = sub i32 %68, 1
  %70 = sub i32 %69, -879886534
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 true, true
  %79 = and i1 %76, true
  %80 = and i1 %74, %78
  %81 = and i1 %77, true
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 true, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  %92 = select i1 %90, i32 -1910044118, i32 -939316153
  store i32 %92, i32* %19
  br label %99

; <label>:93:                                     ; preds = %20
  store i32 130514537, i32* %19
  br label %99

; <label>:94:                                     ; preds = %20
  ret void

; <label>:95:                                     ; preds = %20
  %96 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %97 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIN5Graph4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Edge"* dereferenceable(16) %96) #3
  %98 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %5
  call void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.18"* %98, %"struct.Graph::Edge"* dereferenceable(16) %97)
  store i32 -843917924, i32* %19
  br label %99

; <label>:99:                                     ; preds = %95, %93, %62, %46, %28, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::Edge"* @_ZSt4moveIRN5Graph4EdgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::Edge"* dereferenceable(16)) #5 comdat {
  %2 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %2, align 8
  %3 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %2, align 8
  ret %"struct.Graph::Edge"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.20"* dereferenceable(1), %"struct.Graph::Edge"*, %"struct.Graph::Edge"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.20"*, align 8
  %5 = alloca %"struct.Graph::Edge"*, align 8
  %6 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %4, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %5, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %6, align 8
  %7 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %4, align 8
  %8 = bitcast %"class.std::allocator.20"* %7 to %"class.__gnu_cxx::new_allocator.21"*
  %9 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %5, align 8
  %10 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %11 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIN5Graph4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Edge"* dereferenceable(16) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.21"* %8, %"struct.Graph::Edge"* %9, %"struct.Graph::Edge"* dereferenceable(16) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIN5Graph4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Edge"* dereferenceable(16)) #5 comdat {
  %2 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %2, align 8
  %3 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %2, align 8
  ret %"struct.Graph::Edge"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.18"*, %"struct.Graph::Edge"* dereferenceable(16)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca %"struct.Graph::Edge"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.Graph::Edge"*, align 8
  %7 = alloca %"struct.Graph::Edge"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %4, align 8
  %10 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.18"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %13 = load i64, i64* %5, align 8
  %14 = call %"struct.Graph::Edge"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.19"* %12, i64 %13)
  store %"struct.Graph::Edge"* %14, %"struct.Graph::Edge"** %6, align 8
  %15 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  store %"struct.Graph::Edge"* %15, %"struct.Graph::Edge"** %7, align 8
  %16 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %17 to %"class.std::allocator.20"*
  %19 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %20 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %10) #3
  %21 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %19, i64 %20
  %22 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  %23 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIN5Graph4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Edge"* dereferenceable(16) %22) #3
  invoke void @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.20"* dereferenceable(1) %18, %"struct.Graph::Edge"* %21, %"struct.Graph::Edge"* dereferenceable(16) %23)
          to label %24 unwind label %70

; <label>:24:                                     ; preds = %2
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %7, align 8
  %25 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %26, i32 0, i32 0
  %28 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %27, align 8
  %29 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %30, i32 0, i32 1
  %32 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %31, align 8
  %33 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %34 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %35 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %34) #3
  %36 = invoke %"struct.Graph::Edge"* @_ZSt34__uninitialized_move_if_noexcept_aIPN5Graph4EdgeES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.Graph::Edge"* %28, %"struct.Graph::Edge"* %32, %"struct.Graph::Edge"* %33, %"class.std::allocator.20"* dereferenceable(1) %35)
          to label %37 unwind label %70

; <label>:37:                                     ; preds = %24
  %38 = load i32, i32* @x.225
  %39 = load i32, i32* @y.226
  %40 = sub i32 %38, -1250564127
  %41 = sub i32 %40, 1
  %42 = add i32 %41, -1250564127
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %392

; <label>:52:                                     ; preds = %37, %392
  store %"struct.Graph::Edge"* %36, %"struct.Graph::Edge"** %7, align 8
  %53 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %54 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %53, i32 1
  store %"struct.Graph::Edge"* %54, %"struct.Graph::Edge"** %7, align 8
  %55 = load i32, i32* @x.225
  %56 = load i32, i32* @y.226
  %57 = add i32 %55, -806809809
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, -806809809
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  br i1 %67, label %69, label %392

; <label>:69:                                     ; preds = %52
  br label %309

; <label>:70:                                     ; preds = %24, %2
  %71 = landingpad { i8*, i32 }
          catch i8* null
  %72 = extractvalue { i8*, i32 } %71, 0
  store i8* %72, i8** %8, align 8
  %73 = extractvalue { i8*, i32 } %71, 1
  store i32 %73, i32* %9, align 4
  br label %74

; <label>:74:                                     ; preds = %70
  %75 = load i8*, i8** %8, align 8
  %76 = call i8* @__cxa_begin_catch(i8* %75) #3
  %77 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %78 = icmp ne %"struct.Graph::Edge"* %77, null
  br i1 %78, label %197, label %79

; <label>:79:                                     ; preds = %74
  %80 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %81 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %80, i32 0, i32 0
  %82 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %81 to %"class.std::allocator.20"*
  %83 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %84 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %10) #3
  %85 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %83, i64 %84
  invoke void @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.20"* dereferenceable(1) %82, %"struct.Graph::Edge"* %85)
          to label %86 unwind label %140

; <label>:86:                                     ; preds = %79
  %87 = load i32, i32* @x.225
  %88 = load i32, i32* @y.226
  %89 = sub i32 %87, -1742279448
  %90 = sub i32 %89, 1
  %91 = add i32 %90, -1742279448
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 false, true
  %100 = and i1 %97, false
  %101 = and i1 %95, %99
  %102 = and i1 %98, false
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 false, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  br i1 %111, label %113, label %395

; <label>:113:                                    ; preds = %86, %395
  %114 = load i32, i32* @x.225
  %115 = load i32, i32* @y.226
  %116 = sub i32 0, 1
  %117 = add i32 %114, %116
  %118 = sub i32 %114, 1
  %119 = mul i32 %114, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %115, 10
  %123 = xor i1 %121, true
  %124 = xor i1 %122, true
  %125 = xor i1 true, true
  %126 = and i1 %123, true
  %127 = and i1 %121, %125
  %128 = and i1 %124, true
  %129 = and i1 %122, %125
  %130 = or i1 %126, %127
  %131 = or i1 %128, %129
  %132 = xor i1 %130, %131
  %133 = or i1 %123, %124
  %134 = xor i1 %133, true
  %135 = or i1 true, %125
  %136 = and i1 %134, %135
  %137 = or i1 %132, %136
  %138 = or i1 %121, %122
  br i1 %137, label %139, label %395

; <label>:139:                                    ; preds = %113
  br label %232

; <label>:140:                                    ; preds = %278, %277, %197, %79
  %141 = load i32, i32* @x.225
  %142 = load i32, i32* @y.226
  %143 = add i32 %141, -1476327600
  %144 = sub i32 %143, 1
  %145 = sub i32 %144, -1476327600
  %146 = sub i32 %141, 1
  %147 = mul i32 %141, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %142, 10
  %151 = xor i1 %149, true
  %152 = xor i1 %150, true
  %153 = xor i1 false, true
  %154 = and i1 %151, false
  %155 = and i1 %149, %153
  %156 = and i1 %152, false
  %157 = and i1 %150, %153
  %158 = or i1 %154, %155
  %159 = or i1 %156, %157
  %160 = xor i1 %158, %159
  %161 = or i1 %151, %152
  %162 = xor i1 %161, true
  %163 = or i1 false, %153
  %164 = and i1 %162, %163
  %165 = or i1 %160, %164
  %166 = or i1 %149, %150
  br i1 %165, label %167, label %396

; <label>:167:                                    ; preds = %140, %396
  %168 = landingpad { i8*, i32 }
          cleanup
  %169 = extractvalue { i8*, i32 } %168, 0
  store i8* %169, i8** %8, align 8
  %170 = extractvalue { i8*, i32 } %168, 1
  store i32 %170, i32* %9, align 4
  %171 = load i32, i32* @x.225
  %172 = load i32, i32* @y.226
  %173 = sub i32 0, 1
  %174 = add i32 %171, %173
  %175 = sub i32 %171, 1
  %176 = mul i32 %171, %174
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %172, 10
  %180 = xor i1 %178, true
  %181 = xor i1 %179, true
  %182 = xor i1 false, true
  %183 = and i1 %180, false
  %184 = and i1 %178, %182
  %185 = and i1 %181, false
  %186 = and i1 %179, %182
  %187 = or i1 %183, %184
  %188 = or i1 %185, %186
  %189 = xor i1 %187, %188
  %190 = or i1 %180, %181
  %191 = xor i1 %190, true
  %192 = or i1 false, %182
  %193 = and i1 %191, %192
  %194 = or i1 %189, %193
  %195 = or i1 %178, %179
  br i1 %194, label %196, label %396

; <label>:196:                                    ; preds = %167
  invoke void @__cxa_end_catch()
          to label %279 unwind label %359

; <label>:197:                                    ; preds = %74
  %198 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %199 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %200 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %201 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %200) #3
  invoke void @_ZSt8_DestroyIPN5Graph4EdgeES1_EvT_S3_RSaIT0_E(%"struct.Graph::Edge"* %198, %"struct.Graph::Edge"* %199, %"class.std::allocator.20"* dereferenceable(1) %201)
          to label %202 unwind label %140

; <label>:202:                                    ; preds = %197
  %203 = load i32, i32* @x.225
  %204 = load i32, i32* @y.226
  %205 = sub i32 0, 1
  %206 = add i32 %203, %205
  %207 = sub i32 %203, 1
  %208 = mul i32 %203, %206
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %204, 10
  %212 = and i1 %210, %211
  %213 = xor i1 %210, %211
  %214 = or i1 %212, %213
  %215 = or i1 %210, %211
  br i1 %214, label %216, label %400

; <label>:216:                                    ; preds = %202, %400
  %217 = load i32, i32* @x.225
  %218 = load i32, i32* @y.226
  %219 = add i32 %217, 972056384
  %220 = sub i32 %219, 1
  %221 = sub i32 %220, 972056384
  %222 = sub i32 %217, 1
  %223 = mul i32 %217, %221
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %218, 10
  %227 = and i1 %225, %226
  %228 = xor i1 %225, %226
  %229 = or i1 %227, %228
  %230 = or i1 %225, %226
  br i1 %229, label %231, label %400

; <label>:231:                                    ; preds = %216
  br label %232

; <label>:232:                                    ; preds = %231, %139
  %233 = load i32, i32* @x.225
  %234 = load i32, i32* @y.226
  %235 = add i32 %233, -946323248
  %236 = sub i32 %235, 1
  %237 = sub i32 %236, -946323248
  %238 = sub i32 %233, 1
  %239 = mul i32 %233, %237
  %240 = urem i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %234, 10
  %243 = xor i1 %241, true
  %244 = xor i1 %242, true
  %245 = xor i1 true, true
  %246 = and i1 %243, true
  %247 = and i1 %241, %245
  %248 = and i1 %244, true
  %249 = and i1 %242, %245
  %250 = or i1 %246, %247
  %251 = or i1 %248, %249
  %252 = xor i1 %250, %251
  %253 = or i1 %243, %244
  %254 = xor i1 %253, true
  %255 = or i1 true, %245
  %256 = and i1 %254, %255
  %257 = or i1 %252, %256
  %258 = or i1 %241, %242
  br i1 %257, label %259, label %401

; <label>:259:                                    ; preds = %232, %401
  %260 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %261 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %262 = load i64, i64* %5, align 8
  %263 = load i32, i32* @x.225
  %264 = load i32, i32* @y.226
  %265 = add i32 %263, 1761432483
  %266 = sub i32 %265, 1
  %267 = sub i32 %266, 1761432483
  %268 = sub i32 %263, 1
  %269 = mul i32 %263, %267
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %264, 10
  %273 = and i1 %271, %272
  %274 = xor i1 %271, %272
  %275 = or i1 %273, %274
  %276 = or i1 %271, %272
  br i1 %275, label %277, label %401

; <label>:277:                                    ; preds = %259
  invoke void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.19"* %260, %"struct.Graph::Edge"* %261, i64 %262)
          to label %278 unwind label %140

; <label>:278:                                    ; preds = %277
  invoke void @__cxa_rethrow() #12
          to label %391 unwind label %140

; <label>:279:                                    ; preds = %196
  %280 = load i32, i32* @x.225
  %281 = load i32, i32* @y.226
  %282 = sub i32 0, 1
  %283 = add i32 %280, %282
  %284 = sub i32 %280, 1
  %285 = mul i32 %280, %283
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %281, 10
  %289 = and i1 %287, %288
  %290 = xor i1 %287, %288
  %291 = or i1 %289, %290
  %292 = or i1 %287, %288
  br i1 %291, label %293, label %405

; <label>:293:                                    ; preds = %279, %405
  %294 = load i32, i32* @x.225
  %295 = load i32, i32* @y.226
  %296 = sub i32 %294, 1680179563
  %297 = sub i32 %296, 1
  %298 = add i32 %297, 1680179563
  %299 = sub i32 %294, 1
  %300 = mul i32 %294, %298
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %295, 10
  %304 = and i1 %302, %303
  %305 = xor i1 %302, %303
  %306 = or i1 %304, %305
  %307 = or i1 %302, %303
  br i1 %306, label %308, label %405

; <label>:308:                                    ; preds = %293
  br label %354

; <label>:309:                                    ; preds = %69
  %310 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %311 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %310, i32 0, i32 0
  %312 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %311, i32 0, i32 0
  %313 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %312, align 8
  %314 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %315 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %314, i32 0, i32 0
  %316 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %315, i32 0, i32 1
  %317 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %316, align 8
  %318 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %319 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %318) #3
  call void @_ZSt8_DestroyIPN5Graph4EdgeES1_EvT_S3_RSaIT0_E(%"struct.Graph::Edge"* %313, %"struct.Graph::Edge"* %317, %"class.std::allocator.20"* dereferenceable(1) %319)
  %320 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %321 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %322 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %321, i32 0, i32 0
  %323 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %322, i32 0, i32 0
  %324 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %323, align 8
  %325 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %326 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %325, i32 0, i32 0
  %327 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %326, i32 0, i32 2
  %328 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %327, align 8
  %329 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %330 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %329, i32 0, i32 0
  %331 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %330, i32 0, i32 0
  %332 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %331, align 8
  %333 = ptrtoint %"struct.Graph::Edge"* %328 to i64
  %334 = ptrtoint %"struct.Graph::Edge"* %332 to i64
  %335 = add i64 %333, 5518225502097234374
  %336 = sub i64 %335, %334
  %337 = sub i64 %336, 5518225502097234374
  %338 = sub i64 %333, %334
  %339 = sdiv exact i64 %337, 16
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.19"* %320, %"struct.Graph::Edge"* %324, i64 %339)
  %340 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %341 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %342 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %341, i32 0, i32 0
  %343 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %342, i32 0, i32 0
  store %"struct.Graph::Edge"* %340, %"struct.Graph::Edge"** %343, align 8
  %344 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %345 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %346 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %345, i32 0, i32 0
  %347 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %346, i32 0, i32 1
  store %"struct.Graph::Edge"* %344, %"struct.Graph::Edge"** %347, align 8
  %348 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %349 = load i64, i64* %5, align 8
  %350 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %348, i64 %349
  %351 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %352 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %351, i32 0, i32 0
  %353 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %352, i32 0, i32 2
  store %"struct.Graph::Edge"* %350, %"struct.Graph::Edge"** %353, align 8
  ret void

; <label>:354:                                    ; preds = %308
  %355 = load i8*, i8** %8, align 8
  %356 = load i32, i32* %9, align 4
  %357 = insertvalue { i8*, i32 } undef, i8* %355, 0
  %358 = insertvalue { i8*, i32 } %357, i32 %356, 1
  resume { i8*, i32 } %358

; <label>:359:                                    ; preds = %196
  %360 = load i32, i32* @x.225
  %361 = load i32, i32* @y.226
  %362 = sub i32 %360, 1170787720
  %363 = sub i32 %362, 1
  %364 = add i32 %363, 1170787720
  %365 = sub i32 %360, 1
  %366 = mul i32 %360, %364
  %367 = urem i32 %366, 2
  %368 = icmp eq i32 %367, 0
  %369 = icmp slt i32 %361, 10
  %370 = and i1 %368, %369
  %371 = xor i1 %368, %369
  %372 = or i1 %370, %371
  %373 = or i1 %368, %369
  br i1 %372, label %374, label %406

; <label>:374:                                    ; preds = %359, %406
  %375 = landingpad { i8*, i32 }
          catch i8* null
  %376 = extractvalue { i8*, i32 } %375, 0
  call void @__clang_call_terminate(i8* %376) #10
  %377 = load i32, i32* @x.225
  %378 = load i32, i32* @y.226
  %379 = sub i32 0, 1
  %380 = add i32 %377, %379
  %381 = sub i32 %377, 1
  %382 = mul i32 %377, %380
  %383 = urem i32 %382, 2
  %384 = icmp eq i32 %383, 0
  %385 = icmp slt i32 %378, 10
  %386 = and i1 %384, %385
  %387 = xor i1 %384, %385
  %388 = or i1 %386, %387
  %389 = or i1 %384, %385
  br i1 %388, label %390, label %406

; <label>:390:                                    ; preds = %374
  unreachable

; <label>:391:                                    ; preds = %278
  unreachable

; <label>:392:                                    ; preds = %52, %37
  store %"struct.Graph::Edge"* %36, %"struct.Graph::Edge"** %7, align 8
  %393 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %394 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %393, i32 1
  store %"struct.Graph::Edge"* %394, %"struct.Graph::Edge"** %7, align 8
  br label %52

; <label>:395:                                    ; preds = %113, %86
  br label %113

; <label>:396:                                    ; preds = %167, %140
  %397 = landingpad { i8*, i32 }
          cleanup
  %398 = extractvalue { i8*, i32 } %397, 0
  store i8* %398, i8** %8, align 8
  %399 = extractvalue { i8*, i32 } %397, 1
  store i32 %399, i32* %9, align 4
  br label %167

; <label>:400:                                    ; preds = %216, %202
  br label %216

; <label>:401:                                    ; preds = %259, %232
  %402 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %403 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %404 = load i64, i64* %5, align 8
  br label %259

; <label>:405:                                    ; preds = %293, %279
  br label %293

; <label>:406:                                    ; preds = %374, %359
  %407 = landingpad { i8*, i32 }
          catch i8* null
  %408 = extractvalue { i8*, i32 } %407, 0
  call void @__clang_call_terminate(i8* %408) #10
  br label %374
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.21"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"* dereferenceable(16)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %5 = alloca %"struct.Graph::Edge"*, align 8
  %6 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %5, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  %8 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %5, align 8
  %9 = bitcast %"struct.Graph::Edge"* %8 to i8*
  %10 = bitcast i8* %9 to %"struct.Graph::Edge"*
  %11 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %12 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIN5Graph4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Edge"* dereferenceable(16) %11) #3
  %13 = bitcast %"struct.Graph::Edge"* %10 to i8*
  %14 = bitcast %"struct.Graph::Edge"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 16, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.18"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i1
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca %"class.std::vector.18"*
  %9 = alloca %"class.std::vector.18"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %9, align 8
  store i64 %1, i64* %10, align 8
  store i8* %2, i8** %11, align 8
  %14 = load %"class.std::vector.18"*, %"class.std::vector.18"** %9, align 8
  store %"class.std::vector.18"* %14, %"class.std::vector.18"** %8
  %15 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %8
  %16 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE8max_sizeEv(%"class.std::vector.18"* %15) #3
  %17 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %8
  %18 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %17) #3
  %19 = sub i64 0, %18
  %20 = add i64 %16, %19
  %21 = sub i64 %16, %18
  store i64 %20, i64* %7
  %22 = load i64, i64* %10, align 8
  store i64 %22, i64* %6
  %23 = alloca i32
  store i32 1184317872, i32* %23
  %24 = alloca i64
  br label %25

; <label>:25:                                     ; preds = %3, %176
  %26 = load i32, i32* %23
  switch i32 %26, label %27 [
    i32 1184317872, label %28
    i32 -1661363952, label %33
    i32 1603574853, label %35
    i32 1982488736, label %62
    i32 -641170727, label %93
    i32 354494388, label %96
    i32 -87645164, label %102
    i32 1359114092, label %105
    i32 746069102, label %133
    i32 -976879562, label %149
    i32 -1251768490, label %151
    i32 -110317684, label %153
    i32 805749481, label %174
  ]

; <label>:27:                                     ; preds = %25
  br label %176

; <label>:28:                                     ; preds = %25
  %29 = load volatile i64, i64* %7
  %30 = load volatile i64, i64* %6
  %31 = icmp ult i64 %29, %30
  %32 = select i1 %31, i32 -1661363952, i32 1603574853
  store i32 %32, i32* %23
  br label %176

; <label>:33:                                     ; preds = %25
  %34 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %34) #12
  unreachable

; <label>:35:                                     ; preds = %25
  %36 = load i32, i32* @x.229
  %37 = load i32, i32* @y.230
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 1982488736, i32 -110317684
  store i32 %61, i32* %23
  br label %176

; <label>:62:                                     ; preds = %25
  %63 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %8
  %64 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %63) #3
  %65 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %8
  %66 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %65) #3
  store i64 %66, i64* %13, align 8
  %67 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %68 = load i64, i64* %67, align 8
  %69 = sub i64 0, %64
  %70 = sub i64 0, %68
  %71 = add i64 %69, %70
  %72 = sub i64 0, %71
  %73 = add i64 %64, %68
  store i64 %72, i64* %12, align 8
  %74 = load i64, i64* %12, align 8
  %75 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %8
  %76 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %75) #3
  %77 = icmp ult i64 %74, %76
  store i1 %77, i1* %5
  %78 = load i32, i32* @x.229
  %79 = load i32, i32* @y.230
  %80 = add i32 %78, -1118453471
  %81 = sub i32 %80, 1
  %82 = sub i32 %81, -1118453471
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = and i1 %86, %87
  %89 = xor i1 %86, %87
  %90 = or i1 %88, %89
  %91 = or i1 %86, %87
  %92 = select i1 %90, i32 -641170727, i32 -110317684
  store i32 %92, i32* %23
  br label %176

; <label>:93:                                     ; preds = %25
  %94 = load volatile i1, i1* %5
  %95 = select i1 %94, i32 -87645164, i32 354494388
  store i32 %95, i32* %23
  br label %176

; <label>:96:                                     ; preds = %25
  %97 = load i64, i64* %12, align 8
  %98 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %8
  %99 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE8max_sizeEv(%"class.std::vector.18"* %98) #3
  %100 = icmp ugt i64 %97, %99
  %101 = select i1 %100, i32 -87645164, i32 1359114092
  store i32 %101, i32* %23
  br label %176

; <label>:102:                                    ; preds = %25
  %103 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %8
  %104 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE8max_sizeEv(%"class.std::vector.18"* %103) #3
  store i32 -1251768490, i32* %23
  store i64 %104, i64* %24
  br label %176

; <label>:105:                                    ; preds = %25
  %106 = load i32, i32* @x.229
  %107 = load i32, i32* @y.230
  %108 = sub i32 %106, 782045325
  %109 = sub i32 %108, 1
  %110 = add i32 %109, 782045325
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = xor i1 %114, true
  %117 = xor i1 %115, true
  %118 = xor i1 true, true
  %119 = and i1 %116, true
  %120 = and i1 %114, %118
  %121 = and i1 %117, true
  %122 = and i1 %115, %118
  %123 = or i1 %119, %120
  %124 = or i1 %121, %122
  %125 = xor i1 %123, %124
  %126 = or i1 %116, %117
  %127 = xor i1 %126, true
  %128 = or i1 true, %118
  %129 = and i1 %127, %128
  %130 = or i1 %125, %129
  %131 = or i1 %114, %115
  %132 = select i1 %130, i32 746069102, i32 805749481
  store i32 %132, i32* %23
  br label %176

; <label>:133:                                    ; preds = %25
  %134 = load i64, i64* %12, align 8
  store i64 %134, i64* %4
  %135 = load i32, i32* @x.229
  %136 = load i32, i32* @y.230
  %137 = sub i32 0, 1
  %138 = add i32 %135, %137
  %139 = sub i32 %135, 1
  %140 = mul i32 %135, %138
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %136, 10
  %144 = and i1 %142, %143
  %145 = xor i1 %142, %143
  %146 = or i1 %144, %145
  %147 = or i1 %142, %143
  %148 = select i1 %146, i32 -976879562, i32 805749481
  store i32 %148, i32* %23
  br label %176

; <label>:149:                                    ; preds = %25
  store i32 -1251768490, i32* %23
  %150 = load volatile i64, i64* %4
  store i64 %150, i64* %24
  br label %176

; <label>:151:                                    ; preds = %25
  %152 = load i64, i64* %24
  ret i64 %152

; <label>:153:                                    ; preds = %25
  %154 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %8
  %155 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %154) #3
  %156 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %8
  %157 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %156) #3
  store i64 %157, i64* %13, align 8
  %158 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %159 = load i64, i64* %158, align 8
  %160 = sub i64 0, %155
  %161 = add i64 0, %160
  %162 = sub i64 0, %155
  %163 = sub i64 0, %159
  %164 = sub i64 %161, %163
  %165 = add i64 %161, %159
  %166 = add i64 %155, 8046549601540838360
  %167 = add i64 %166, %159
  %168 = sub i64 %167, 8046549601540838360
  %169 = add i64 %155, %159
  store i64 %168, i64* %12, align 8
  %170 = load i64, i64* %12, align 8
  %171 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %8
  %172 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %171) #3
  %173 = icmp ult i64 %170, %172
  store i32 1982488736, i32* %23
  br label %176

; <label>:174:                                    ; preds = %25
  %175 = load i64, i64* %12, align 8
  store i32 746069102, i32* %23
  br label %176

; <label>:176:                                    ; preds = %174, %153, %149, %133, %105, %102, %96, %93, %62, %35, %28, %27
  br label %25
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.19"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.Graph::Edge"*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base.19"*
  %6 = alloca %"struct.std::_Vector_base.19"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %6, align 8
  store %"struct.std::_Vector_base.19"* %8, %"struct.std::_Vector_base.19"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 1226668158, i32* %10
  %11 = alloca %"struct.Graph::Edge"*
  br label %12

; <label>:12:                                     ; preds = %2, %73
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 1226668158, label %15
    i32 -1257782863, label %19
    i32 -1506765516, label %25
    i32 -712543380, label %26
    i32 -851698746, label %43
    i32 812833449, label %70
    i32 -809622586, label %72
  ]

; <label>:14:                                     ; preds = %12
  br label %73

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 -1257782863, i32 -1506765516
  store i32 %18, i32* %10
  br label %73

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %21 to %"class.std::allocator.20"*
  %23 = load i64, i64* %7, align 8
  %24 = call %"struct.Graph::Edge"* @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE8allocateERS2_m(%"class.std::allocator.20"* dereferenceable(1) %22, i64 %23)
  store i32 -712543380, i32* %10
  store %"struct.Graph::Edge"* %24, %"struct.Graph::Edge"** %11
  br label %73

; <label>:25:                                     ; preds = %12
  store i32 -712543380, i32* %10
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %11
  br label %73

; <label>:26:                                     ; preds = %12
  %27 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %11
  store %"struct.Graph::Edge"* %27, %"struct.Graph::Edge"** %3
  %28 = load i32, i32* @x.231
  %29 = load i32, i32* @y.232
  %30 = add i32 %28, -303894644
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, -303894644
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 -851698746, i32 -809622586
  store i32 %42, i32* %10
  br label %73

; <label>:43:                                     ; preds = %12
  %44 = load i32, i32* @x.231
  %45 = load i32, i32* @y.232
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 812833449, i32 -809622586
  store i32 %69, i32* %10
  br label %73

; <label>:70:                                     ; preds = %12
  %71 = load volatile %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %3
  ret %"struct.Graph::Edge"* %71

; <label>:72:                                     ; preds = %12
  store i32 -851698746, i32* %10
  br label %73

; <label>:73:                                     ; preds = %72, %43, %26, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  %4 = bitcast %"class.std::vector.18"* %3 to %"struct.std::_Vector_base.19"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %8 = bitcast %"class.std::vector.18"* %3 to %"struct.std::_Vector_base.19"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %10, align 8
  %12 = ptrtoint %"struct.Graph::Edge"* %7 to i64
  %13 = ptrtoint %"struct.Graph::Edge"* %11 to i64
  %14 = add i64 %12, -1779463437931503195
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, -1779463437931503195
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 16
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt34__uninitialized_move_if_noexcept_aIPN5Graph4EdgeES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.Graph::Edge"*, align 8
  %6 = alloca %"struct.Graph::Edge"*, align 8
  %7 = alloca %"struct.Graph::Edge"*, align 8
  %8 = alloca %"class.std::allocator.20"*, align 8
  %9 = alloca %"class.std::move_iterator.28", align 8
  %10 = alloca %"class.std::move_iterator.28", align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %5, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %6, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %7, align 8
  store %"class.std::allocator.20"* %3, %"class.std::allocator.20"** %8, align 8
  %11 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %5, align 8
  %12 = call %"struct.Graph::Edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4EdgeESt13move_iteratorIS2_EET0_T_(%"struct.Graph::Edge"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %9, i32 0, i32 0
  store %"struct.Graph::Edge"* %12, %"struct.Graph::Edge"** %13, align 8
  %14 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %15 = call %"struct.Graph::Edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4EdgeESt13move_iteratorIS2_EET0_T_(%"struct.Graph::Edge"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %10, i32 0, i32 0
  store %"struct.Graph::Edge"* %15, %"struct.Graph::Edge"** %16, align 8
  %17 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %18 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %9, i32 0, i32 0
  %20 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %10, i32 0, i32 0
  %22 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %21, align 8
  %23 = call %"struct.Graph::Edge"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph4EdgeEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Graph::Edge"* %20, %"struct.Graph::Edge"* %22, %"struct.Graph::Edge"* %17, %"class.std::allocator.20"* dereferenceable(1) %18)
  ret %"struct.Graph::Edge"* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.20"* dereferenceable(1), %"struct.Graph::Edge"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.237
  %6 = load i32, i32* @y.238
  %7 = add i32 %5, 1397620915
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1397620915
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 292565674, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 292565674, label %19
    i32 -951956387, label %27
    i32 -502552613, label %47
    i32 -1446618353, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -951956387, i32 -1446618353
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.20"*, align 8
  %29 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %28, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %29, align 8
  %30 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %28, align 8
  %31 = bitcast %"class.std::allocator.20"* %30 to %"class.__gnu_cxx::new_allocator.21"*
  %32 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %29, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.21"* %31, %"struct.Graph::Edge"* %32)
  %33 = load i32, i32* @x.237
  %34 = load i32, i32* @y.238
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -502552613, i32 -1446618353
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  ret void

; <label>:48:                                     ; preds = %16
  %49 = alloca %"class.std::allocator.20"*, align 8
  %50 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %49, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %50, align 8
  %51 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %49, align 8
  %52 = bitcast %"class.std::allocator.20"* %51 to %"class.__gnu_cxx::new_allocator.21"*
  %53 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %50, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.21"* %52, %"struct.Graph::Edge"* %53)
  store i32 -951956387, i32* %15
  br label %54

; <label>:54:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE8max_sizeEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  %4 = bitcast %"class.std::vector.18"* %3 to %"struct.std::_Vector_base.19"*
  %5 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNKSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE8max_sizeERKS2_(%"class.std::allocator.20"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE8max_sizeERKS2_(%"class.std::allocator.20"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.241
  %6 = load i32, i32* @y.242
  %7 = add i32 %5, 1875452552
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1875452552
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1285314379, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1285314379, label %19
    i32 -1952138045, label %39
    i32 1129720411, label %70
    i32 -354708161, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1952138045, i32 -354708161
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %40, align 8
  %41 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %40, align 8
  %42 = bitcast %"class.std::allocator.20"* %41 to %"class.__gnu_cxx::new_allocator.21"*
  %43 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4EdgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"* %42) #3
  store i64 %43, i64* %2
  %44 = load i32, i32* @x.241
  %45 = load i32, i32* @y.242
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 1129720411, i32 -354708161
  store i32 %69, i32* %15
  br label %77

; <label>:70:                                     ; preds = %16
  %71 = load volatile i64, i64* %2
  ret i64 %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %73, align 8
  %74 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %73, align 8
  %75 = bitcast %"class.std::allocator.20"* %74 to %"class.__gnu_cxx::new_allocator.21"*
  %76 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4EdgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"* %75) #3
  store i32 -1952138045, i32* %15
  br label %77

; <label>:77:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.20"* @_ZNKSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %2, align 8
  %3 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %4 to %"class.std::allocator.20"*
  ret %"class.std::allocator.20"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4EdgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  ret i64 1152921504606846975
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE8allocateERS2_m(%"class.std::allocator.20"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.20"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %3, align 8
  %6 = bitcast %"class.std::allocator.20"* %5 to %"class.__gnu_cxx::new_allocator.21"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.Graph::Edge"* @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.21"* %6, i64 %7, i8* null)
  ret %"struct.Graph::Edge"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.21"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.249
  %9 = load i32, i32* @y.250
  %10 = add i32 %8, 2101070033
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 2101070033
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -790962443, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %84
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -790962443, label %22
    i32 770803712, label %42
    i32 1077079378, label %66
    i32 -762653244, label %69
    i32 972361358, label %70
    i32 2036996993, label %76
  ]

; <label>:21:                                     ; preds = %19
  br label %84

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 770803712, i32 2036996993
  store i32 %41, i32* %18
  br label %84

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %44 = alloca i64, align 8
  store i64* %44, i64** %5
  %45 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %43, align 8
  %46 = load volatile i64*, i64** %5
  store i64 %1, i64* %46, align 8
  store i8* %2, i8** %45, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %43, align 8
  %48 = load volatile i64*, i64** %5
  %49 = load i64, i64* %48, align 8
  %50 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4EdgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"* %47) #3
  %51 = icmp ugt i64 %49, %50
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.249
  %53 = load i32, i32* @y.250
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 1077079378, i32 2036996993
  store i32 %65, i32* %18
  br label %84

; <label>:66:                                     ; preds = %19
  %67 = load volatile i1, i1* %4
  %68 = select i1 %67, i32 -762653244, i32 972361358
  store i32 %68, i32* %18
  br label %84

; <label>:69:                                     ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:70:                                     ; preds = %19
  %71 = load volatile i64*, i64** %5
  %72 = load i64, i64* %71, align 8
  %73 = mul i64 %72, 16
  %74 = call i8* @_Znwm(i64 %73)
  %75 = bitcast i8* %74 to %"struct.Graph::Edge"*
  ret %"struct.Graph::Edge"* %75

; <label>:76:                                     ; preds = %19
  %77 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %78 = alloca i64, align 8
  %79 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %77, align 8
  store i64 %1, i64* %78, align 8
  store i8* %2, i8** %79, align 8
  %80 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %77, align 8
  %81 = load i64, i64* %78, align 8
  %82 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4EdgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"* %80) #3
  %83 = icmp ugt i64 %81, %82
  store i32 770803712, i32* %18
  br label %84

; <label>:84:                                     ; preds = %76, %66, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph4EdgeEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.28", align 8
  %6 = alloca %"class.std::move_iterator.28", align 8
  %7 = alloca %"struct.Graph::Edge"*, align 8
  %8 = alloca %"class.std::allocator.20"*, align 8
  %9 = alloca %"class.std::move_iterator.28", align 8
  %10 = alloca %"class.std::move_iterator.28", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %5, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %6, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %12, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %7, align 8
  store %"class.std::allocator.20"* %3, %"class.std::allocator.20"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.28"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.28"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.28"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.28"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %9, i32 0, i32 0
  %19 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %10, i32 0, i32 0
  %21 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %20, align 8
  %22 = call %"struct.Graph::Edge"* @_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph4EdgeEES3_ET0_T_S6_S5_(%"struct.Graph::Edge"* %19, %"struct.Graph::Edge"* %21, %"struct.Graph::Edge"* %17)
  ret %"struct.Graph::Edge"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4EdgeESt13move_iteratorIS2_EET0_T_(%"struct.Graph::Edge"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.28", align 8
  %3 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %3, align 8
  %4 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %3, align 8
  call void @_ZNSt13move_iteratorIPN5Graph4EdgeEEC2ES2_(%"class.std::move_iterator.28"* %2, %"struct.Graph::Edge"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %2, i32 0, i32 0
  %6 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %5, align 8
  ret %"struct.Graph::Edge"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph4EdgeEES3_ET0_T_S6_S5_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"*) #0 comdat {
  %4 = alloca %"struct.Graph::Edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.255
  %8 = load i32, i32* @y.256
  %9 = add i32 %7, 1813336243
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 1813336243
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1458424953, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %83
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1458424953, label %21
    i32 405974165, label %29
    i32 1690829851, label %62
    i32 710635223, label %64
  ]

; <label>:20:                                     ; preds = %18
  br label %83

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 405974165, i32 710635223
  store i32 %28, i32* %17
  br label %83

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::move_iterator.28", align 8
  %31 = alloca %"class.std::move_iterator.28", align 8
  %32 = alloca %"struct.Graph::Edge"*, align 8
  %33 = alloca i8, align 1
  %34 = alloca %"class.std::move_iterator.28", align 8
  %35 = alloca %"class.std::move_iterator.28", align 8
  %36 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %30, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %36, align 8
  %37 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %31, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %37, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %32, align 8
  store i8 1, i8* %33, align 1
  %38 = bitcast %"class.std::move_iterator.28"* %34 to i8*
  %39 = bitcast %"class.std::move_iterator.28"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 8, i1 false)
  %40 = bitcast %"class.std::move_iterator.28"* %35 to i8*
  %41 = bitcast %"class.std::move_iterator.28"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 8, i32 8, i1 false)
  %42 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %32, align 8
  %43 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %34, i32 0, i32 0
  %44 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %43, align 8
  %45 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %35, i32 0, i32 0
  %46 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %45, align 8
  %47 = call %"struct.Graph::Edge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5Graph4EdgeEES5_EET0_T_S8_S7_(%"struct.Graph::Edge"* %44, %"struct.Graph::Edge"* %46, %"struct.Graph::Edge"* %42)
  store %"struct.Graph::Edge"* %47, %"struct.Graph::Edge"** %4
  %48 = load i32, i32* @x.255
  %49 = load i32, i32* @y.256
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 1690829851, i32 710635223
  store i32 %61, i32* %17
  br label %83

; <label>:62:                                     ; preds = %18
  %63 = load volatile %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4
  ret %"struct.Graph::Edge"* %63

; <label>:64:                                     ; preds = %18
  %65 = alloca %"class.std::move_iterator.28", align 8
  %66 = alloca %"class.std::move_iterator.28", align 8
  %67 = alloca %"struct.Graph::Edge"*, align 8
  %68 = alloca i8, align 1
  %69 = alloca %"class.std::move_iterator.28", align 8
  %70 = alloca %"class.std::move_iterator.28", align 8
  %71 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %65, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %71, align 8
  %72 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %66, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %72, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %67, align 8
  store i8 1, i8* %68, align 1
  %73 = bitcast %"class.std::move_iterator.28"* %69 to i8*
  %74 = bitcast %"class.std::move_iterator.28"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 8, i32 8, i1 false)
  %75 = bitcast %"class.std::move_iterator.28"* %70 to i8*
  %76 = bitcast %"class.std::move_iterator.28"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %75, i8* %76, i64 8, i32 8, i1 false)
  %77 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %67, align 8
  %78 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %69, i32 0, i32 0
  %79 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %78, align 8
  %80 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %70, i32 0, i32 0
  %81 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %80, align 8
  %82 = call %"struct.Graph::Edge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5Graph4EdgeEES5_EET0_T_S8_S7_(%"struct.Graph::Edge"* %79, %"struct.Graph::Edge"* %81, %"struct.Graph::Edge"* %77)
  store i32 405974165, i32* %17
  br label %83

; <label>:83:                                     ; preds = %64, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5Graph4EdgeEES5_EET0_T_S8_S7_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator.28", align 8
  %5 = alloca %"class.std::move_iterator.28", align 8
  %6 = alloca %"struct.Graph::Edge"*, align 8
  %7 = alloca %"struct.Graph::Edge"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %4, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %5, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %11, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %6, align 8
  %12 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  store %"struct.Graph::Edge"* %12, %"struct.Graph::Edge"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %54, %3
  %14 = invoke zeroext i1 @_ZStneIPN5Graph4EdgeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.28"* dereferenceable(8) %4, %"class.std::move_iterator.28"* dereferenceable(8) %5)
          to label %15 unwind label %57

; <label>:15:                                     ; preds = %13
  br i1 %14, label %16, label %161

; <label>:16:                                     ; preds = %15
  %17 = load i32, i32* @x.257
  %18 = load i32, i32* @y.258
  %19 = add i32 %17, -873519535
  %20 = sub i32 %19, 1
  %21 = sub i32 %20, -873519535
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  br i1 %29, label %31, label %260

; <label>:31:                                     ; preds = %16, %260
  %32 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %33 = call %"struct.Graph::Edge"* @_ZSt11__addressofIN5Graph4EdgeEEPT_RS2_(%"struct.Graph::Edge"* dereferenceable(16) %32) #3
  %34 = load i32, i32* @x.257
  %35 = load i32, i32* @y.258
  %36 = sub i32 %34, 1541655192
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 1541655192
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  br i1 %46, label %48, label %260

; <label>:48:                                     ; preds = %31
  %49 = invoke dereferenceable(16) %"struct.Graph::Edge"* @_ZNKSt13move_iteratorIPN5Graph4EdgeEEdeEv(%"class.std::move_iterator.28"* %4)
          to label %50 unwind label %57

; <label>:50:                                     ; preds = %48
  invoke void @_ZSt10_ConstructIN5Graph4EdgeEJS1_EEvPT_DpOT0_(%"struct.Graph::Edge"* %33, %"struct.Graph::Edge"* dereferenceable(16) %49)
          to label %51 unwind label %57

; <label>:51:                                     ; preds = %50
  br label %52

; <label>:52:                                     ; preds = %51
  %53 = invoke dereferenceable(8) %"class.std::move_iterator.28"* @_ZNSt13move_iteratorIPN5Graph4EdgeEEppEv(%"class.std::move_iterator.28"* %4)
          to label %54 unwind label %57

; <label>:54:                                     ; preds = %52
  %55 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %56 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %55, i32 1
  store %"struct.Graph::Edge"* %56, %"struct.Graph::Edge"** %7, align 8
  br label %13

; <label>:57:                                     ; preds = %52, %50, %48, %13
  %58 = load i32, i32* @x.257
  %59 = load i32, i32* @y.258
  %60 = sub i32 0, 1
  %61 = add i32 %58, %60
  %62 = sub i32 %58, 1
  %63 = mul i32 %58, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %59, 10
  %67 = xor i1 %65, true
  %68 = xor i1 %66, true
  %69 = xor i1 true, true
  %70 = and i1 %67, true
  %71 = and i1 %65, %69
  %72 = and i1 %68, true
  %73 = and i1 %66, %69
  %74 = or i1 %70, %71
  %75 = or i1 %72, %73
  %76 = xor i1 %74, %75
  %77 = or i1 %67, %68
  %78 = xor i1 %77, true
  %79 = or i1 true, %69
  %80 = and i1 %78, %79
  %81 = or i1 %76, %80
  %82 = or i1 %65, %66
  br i1 %81, label %83, label %263

; <label>:83:                                     ; preds = %57, %263
  %84 = landingpad { i8*, i32 }
          catch i8* null
  %85 = extractvalue { i8*, i32 } %84, 0
  store i8* %85, i8** %8, align 8
  %86 = extractvalue { i8*, i32 } %84, 1
  store i32 %86, i32* %9, align 4
  %87 = load i32, i32* @x.257
  %88 = load i32, i32* @y.258
  %89 = add i32 %87, -108032508
  %90 = sub i32 %89, 1
  %91 = sub i32 %90, -108032508
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 false, true
  %100 = and i1 %97, false
  %101 = and i1 %95, %99
  %102 = and i1 %98, false
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 false, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  br i1 %111, label %113, label %263

; <label>:113:                                    ; preds = %83
  br label %114

; <label>:114:                                    ; preds = %113
  %115 = load i32, i32* @x.257
  %116 = load i32, i32* @y.258
  %117 = add i32 %115, 1628752178
  %118 = sub i32 %117, 1
  %119 = sub i32 %118, 1628752178
  %120 = sub i32 %115, 1
  %121 = mul i32 %115, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %116, 10
  %125 = xor i1 %123, true
  %126 = xor i1 %124, true
  %127 = xor i1 false, true
  %128 = and i1 %125, false
  %129 = and i1 %123, %127
  %130 = and i1 %126, false
  %131 = and i1 %124, %127
  %132 = or i1 %128, %129
  %133 = or i1 %130, %131
  %134 = xor i1 %132, %133
  %135 = or i1 %125, %126
  %136 = xor i1 %135, true
  %137 = or i1 false, %127
  %138 = and i1 %136, %137
  %139 = or i1 %134, %138
  %140 = or i1 %123, %124
  br i1 %139, label %141, label %267

; <label>:141:                                    ; preds = %114, %267
  %142 = load i8*, i8** %8, align 8
  %143 = call i8* @__cxa_begin_catch(i8* %142) #3
  %144 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %145 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %146 = load i32, i32* @x.257
  %147 = load i32, i32* @y.258
  %148 = sub i32 0, 1
  %149 = add i32 %146, %148
  %150 = sub i32 %146, 1
  %151 = mul i32 %146, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %147, 10
  %155 = and i1 %153, %154
  %156 = xor i1 %153, %154
  %157 = or i1 %155, %156
  %158 = or i1 %153, %154
  br i1 %157, label %159, label %267

; <label>:159:                                    ; preds = %141
  invoke void @_ZSt8_DestroyIPN5Graph4EdgeEEvT_S3_(%"struct.Graph::Edge"* %144, %"struct.Graph::Edge"* %145)
          to label %160 unwind label %163

; <label>:160:                                    ; preds = %159
  invoke void @__cxa_rethrow() #12
          to label %259 unwind label %163

; <label>:161:                                    ; preds = %15
  %162 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  ret %"struct.Graph::Edge"* %162

; <label>:163:                                    ; preds = %160, %159
  %164 = landingpad { i8*, i32 }
          cleanup
  %165 = extractvalue { i8*, i32 } %164, 0
  store i8* %165, i8** %8, align 8
  %166 = extractvalue { i8*, i32 } %164, 1
  store i32 %166, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %167 unwind label %216

; <label>:167:                                    ; preds = %163
  br label %211
                                                  ; No predecessors!
  %169 = load i32, i32* @x.257
  %170 = load i32, i32* @y.258
  %171 = sub i32 %169, -557379257
  %172 = sub i32 %171, 1
  %173 = add i32 %172, -557379257
  %174 = sub i32 %169, 1
  %175 = mul i32 %169, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %170, 10
  %179 = xor i1 %177, true
  %180 = xor i1 %178, true
  %181 = xor i1 true, true
  %182 = and i1 %179, true
  %183 = and i1 %177, %181
  %184 = and i1 %180, true
  %185 = and i1 %178, %181
  %186 = or i1 %182, %183
  %187 = or i1 %184, %185
  %188 = xor i1 %186, %187
  %189 = or i1 %179, %180
  %190 = xor i1 %189, true
  %191 = or i1 true, %181
  %192 = and i1 %190, %191
  %193 = or i1 %188, %192
  %194 = or i1 %177, %178
  br i1 %193, label %195, label %272

; <label>:195:                                    ; preds = %168, %272
  call void @llvm.trap()
  %196 = load i32, i32* @x.257
  %197 = load i32, i32* @y.258
  %198 = sub i32 %196, -376025706
  %199 = sub i32 %198, 1
  %200 = add i32 %199, -376025706
  %201 = sub i32 %196, 1
  %202 = mul i32 %196, %200
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %197, 10
  %206 = and i1 %204, %205
  %207 = xor i1 %204, %205
  %208 = or i1 %206, %207
  %209 = or i1 %204, %205
  br i1 %208, label %210, label %272

; <label>:210:                                    ; preds = %195
  unreachable

; <label>:211:                                    ; preds = %167
  %212 = load i8*, i8** %8, align 8
  %213 = load i32, i32* %9, align 4
  %214 = insertvalue { i8*, i32 } undef, i8* %212, 0
  %215 = insertvalue { i8*, i32 } %214, i32 %213, 1
  resume { i8*, i32 } %215

; <label>:216:                                    ; preds = %163
  %217 = load i32, i32* @x.257
  %218 = load i32, i32* @y.258
  %219 = sub i32 0, 1
  %220 = add i32 %217, %219
  %221 = sub i32 %217, 1
  %222 = mul i32 %217, %220
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %218, 10
  %226 = xor i1 %224, true
  %227 = xor i1 %225, true
  %228 = xor i1 true, true
  %229 = and i1 %226, true
  %230 = and i1 %224, %228
  %231 = and i1 %227, true
  %232 = and i1 %225, %228
  %233 = or i1 %229, %230
  %234 = or i1 %231, %232
  %235 = xor i1 %233, %234
  %236 = or i1 %226, %227
  %237 = xor i1 %236, true
  %238 = or i1 true, %228
  %239 = and i1 %237, %238
  %240 = or i1 %235, %239
  %241 = or i1 %224, %225
  br i1 %240, label %242, label %273

; <label>:242:                                    ; preds = %216, %273
  %243 = landingpad { i8*, i32 }
          catch i8* null
  %244 = extractvalue { i8*, i32 } %243, 0
  call void @__clang_call_terminate(i8* %244) #10
  %245 = load i32, i32* @x.257
  %246 = load i32, i32* @y.258
  %247 = sub i32 0, 1
  %248 = add i32 %245, %247
  %249 = sub i32 %245, 1
  %250 = mul i32 %245, %248
  %251 = urem i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %246, 10
  %254 = and i1 %252, %253
  %255 = xor i1 %252, %253
  %256 = or i1 %254, %255
  %257 = or i1 %252, %253
  br i1 %256, label %258, label %273

; <label>:258:                                    ; preds = %242
  unreachable

; <label>:259:                                    ; preds = %160
  unreachable

; <label>:260:                                    ; preds = %31, %16
  %261 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %262 = call %"struct.Graph::Edge"* @_ZSt11__addressofIN5Graph4EdgeEEPT_RS2_(%"struct.Graph::Edge"* dereferenceable(16) %261) #3
  br label %31

; <label>:263:                                    ; preds = %83, %57
  %264 = landingpad { i8*, i32 }
          catch i8* null
  %265 = extractvalue { i8*, i32 } %264, 0
  store i8* %265, i8** %8, align 8
  %266 = extractvalue { i8*, i32 } %264, 1
  store i32 %266, i32* %9, align 4
  br label %83

; <label>:267:                                    ; preds = %141, %114
  %268 = load i8*, i8** %8, align 8
  %269 = call i8* @__cxa_begin_catch(i8* %268) #3
  %270 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %271 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  br label %141

; <label>:272:                                    ; preds = %195, %168
  call void @llvm.trap()
  br label %195

; <label>:273:                                    ; preds = %242, %216
  %274 = landingpad { i8*, i32 }
          catch i8* null
  %275 = extractvalue { i8*, i32 } %274, 0
  call void @__clang_call_terminate(i8* %275) #10
  br label %242
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPN5Graph4EdgeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.28"* dereferenceable(8), %"class.std::move_iterator.28"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.28"*, align 8
  %4 = alloca %"class.std::move_iterator.28"*, align 8
  store %"class.std::move_iterator.28"* %0, %"class.std::move_iterator.28"** %3, align 8
  store %"class.std::move_iterator.28"* %1, %"class.std::move_iterator.28"** %4, align 8
  %5 = load %"class.std::move_iterator.28"*, %"class.std::move_iterator.28"** %3, align 8
  %6 = load %"class.std::move_iterator.28"*, %"class.std::move_iterator.28"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPN5Graph4EdgeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.28"* dereferenceable(8) %5, %"class.std::move_iterator.28"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = or i1 %9, %11
  %13 = xor i1 %7, true
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructIN5Graph4EdgeEJS1_EEvPT_DpOT0_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"* dereferenceable(16)) #5 comdat {
  %3 = alloca %"struct.Graph::Edge"*, align 8
  %4 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %3, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %4, align 8
  %5 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %3, align 8
  %6 = bitcast %"struct.Graph::Edge"* %5 to i8*
  %7 = bitcast i8* %6 to %"struct.Graph::Edge"*
  %8 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  %9 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIN5Graph4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Edge"* dereferenceable(16) %8) #3
  %10 = bitcast %"struct.Graph::Edge"* %7 to i8*
  %11 = bitcast %"struct.Graph::Edge"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 16, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt11__addressofIN5Graph4EdgeEEPT_RS2_(%"struct.Graph::Edge"* dereferenceable(16)) #5 comdat {
  %2 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %2, align 8
  %3 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %2, align 8
  %4 = bitcast %"struct.Graph::Edge"* %3 to i8*
  %5 = bitcast i8* %4 to %"struct.Graph::Edge"*
  ret %"struct.Graph::Edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::Edge"* @_ZNKSt13move_iteratorIPN5Graph4EdgeEEdeEv(%"class.std::move_iterator.28"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.28"*, align 8
  store %"class.std::move_iterator.28"* %0, %"class.std::move_iterator.28"** %2, align 8
  %3 = load %"class.std::move_iterator.28"*, %"class.std::move_iterator.28"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  ret %"struct.Graph::Edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator.28"* @_ZNSt13move_iteratorIPN5Graph4EdgeEEppEv(%"class.std::move_iterator.28"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.28"*, align 8
  store %"class.std::move_iterator.28"* %0, %"class.std::move_iterator.28"** %2, align 8
  %3 = load %"class.std::move_iterator.28"*, %"class.std::move_iterator.28"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  %6 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %5, i32 1
  store %"struct.Graph::Edge"* %6, %"struct.Graph::Edge"** %4, align 8
  ret %"class.std::move_iterator.28"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPN5Graph4EdgeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.28"* dereferenceable(8), %"class.std::move_iterator.28"* dereferenceable(8)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.269
  %7 = load i32, i32* @y.270
  %8 = add i32 %6, 1425743025
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1425743025
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1634130608, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %72
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1634130608, label %20
    i32 -1057293570, label %28
    i32 -394873045, label %62
    i32 -1845370269, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %72

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1057293570, i32 -1845370269
  store i32 %27, i32* %16
  br label %72

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::move_iterator.28"*, align 8
  %30 = alloca %"class.std::move_iterator.28"*, align 8
  store %"class.std::move_iterator.28"* %0, %"class.std::move_iterator.28"** %29, align 8
  store %"class.std::move_iterator.28"* %1, %"class.std::move_iterator.28"** %30, align 8
  %31 = load %"class.std::move_iterator.28"*, %"class.std::move_iterator.28"** %29, align 8
  %32 = call %"struct.Graph::Edge"* @_ZNKSt13move_iteratorIPN5Graph4EdgeEE4baseEv(%"class.std::move_iterator.28"* %31)
  %33 = load %"class.std::move_iterator.28"*, %"class.std::move_iterator.28"** %30, align 8
  %34 = call %"struct.Graph::Edge"* @_ZNKSt13move_iteratorIPN5Graph4EdgeEE4baseEv(%"class.std::move_iterator.28"* %33)
  %35 = icmp eq %"struct.Graph::Edge"* %32, %34
  store i1 %35, i1* %3
  %36 = load i32, i32* @x.269
  %37 = load i32, i32* @y.270
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 -394873045, i32 -1845370269
  store i32 %61, i32* %16
  br label %72

; <label>:62:                                     ; preds = %17
  %63 = load volatile i1, i1* %3
  ret i1 %63

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::move_iterator.28"*, align 8
  %66 = alloca %"class.std::move_iterator.28"*, align 8
  store %"class.std::move_iterator.28"* %0, %"class.std::move_iterator.28"** %65, align 8
  store %"class.std::move_iterator.28"* %1, %"class.std::move_iterator.28"** %66, align 8
  %67 = load %"class.std::move_iterator.28"*, %"class.std::move_iterator.28"** %65, align 8
  %68 = call %"struct.Graph::Edge"* @_ZNKSt13move_iteratorIPN5Graph4EdgeEE4baseEv(%"class.std::move_iterator.28"* %67)
  %69 = load %"class.std::move_iterator.28"*, %"class.std::move_iterator.28"** %66, align 8
  %70 = call %"struct.Graph::Edge"* @_ZNKSt13move_iteratorIPN5Graph4EdgeEE4baseEv(%"class.std::move_iterator.28"* %69)
  %71 = icmp eq %"struct.Graph::Edge"* %68, %70
  store i32 -1057293570, i32* %16
  br label %72

; <label>:72:                                     ; preds = %64, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNKSt13move_iteratorIPN5Graph4EdgeEE4baseEv(%"class.std::move_iterator.28"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.28"*, align 8
  store %"class.std::move_iterator.28"* %0, %"class.std::move_iterator.28"** %2, align 8
  %3 = load %"class.std::move_iterator.28"*, %"class.std::move_iterator.28"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  ret %"struct.Graph::Edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPN5Graph4EdgeEEC2ES2_(%"class.std::move_iterator.28"*, %"struct.Graph::Edge"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.28"*, align 8
  %4 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.std::move_iterator.28"* %0, %"class.std::move_iterator.28"** %3, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %4, align 8
  %5 = load %"class.std::move_iterator.28"*, %"class.std::move_iterator.28"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %5, i32 0, i32 0
  %7 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  store %"struct.Graph::Edge"* %7, %"struct.Graph::Edge"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.21"*, %"struct.Graph::Edge"*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %4 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %3, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %3, align 8
  %6 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EE5beginEv(%"class.std::vector.13"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %3, align 8
  %4 = load %"class.std::vector.13"*, %"class.std::vector.13"** %3, align 8
  %5 = bitcast %"class.std::vector.13"* %4 to %"struct.std::_Vector_base.14"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4NodeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %2, %"struct.Graph::Node"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %8, align 8
  ret %"struct.Graph::Node"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EE3endEv(%"class.std::vector.13"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %3, align 8
  %4 = load %"class.std::vector.13"*, %"class.std::vector.13"** %3, align 8
  %5 = bitcast %"class.std::vector.13"* %4 to %"struct.std::_Vector_base.14"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4NodeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %2, %"struct.Graph::Node"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %8, align 8
  ret %"struct.Graph::Node"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPN5Graph4NodeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.281
  %7 = load i32, i32* @y.282
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1451678475, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %88
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1451678475, label %19
    i32 -219786783, label %39
    i32 -468058929, label %76
    i32 -250017611, label %78
  ]

; <label>:18:                                     ; preds = %16
  br label %88

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -219786783, i32 -250017611
  store i32 %38, i32* %15
  br label %88

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %40, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %41, align 8
  %42 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %40, align 8
  %43 = call dereferenceable(8) %"struct.Graph::Node"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4NodeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %42) #3
  %44 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %43, align 8
  %45 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %41, align 8
  %46 = call dereferenceable(8) %"struct.Graph::Node"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4NodeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %45) #3
  %47 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %46, align 8
  %48 = icmp ne %"struct.Graph::Node"* %44, %47
  store i1 %48, i1* %3
  %49 = load i32, i32* @x.281
  %50 = load i32, i32* @y.282
  %51 = sub i32 %49, 1291003988
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 1291003988
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -468058929, i32 -250017611
  store i32 %75, i32* %15
  br label %88

; <label>:76:                                     ; preds = %16
  %77 = load volatile i1, i1* %3
  ret i1 %77

; <label>:78:                                     ; preds = %16
  %79 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %80 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %79, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %80, align 8
  %81 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %79, align 8
  %82 = call dereferenceable(8) %"struct.Graph::Node"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4NodeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %81) #3
  %83 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %82, align 8
  %84 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %80, align 8
  %85 = call dereferenceable(8) %"struct.Graph::Node"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4NodeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %84) #3
  %86 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %85, align 8
  %87 = icmp ne %"struct.Graph::Node"* %83, %86
  store i32 -219786783, i32* %15
  br label %88

; <label>:88:                                     ; preds = %78, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.Graph::Node"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4NodeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  ret %"struct.Graph::Node"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5Graph4NodeC2ERKS0_(%"struct.Graph::Node"*, %"struct.Graph::Node"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.Graph::Node"*, align 8
  %4 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %3, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %4, align 8
  %5 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %3, align 8
  %6 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %5, i32 0, i32 0
  %7 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %8 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %7, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %6, align 8
  %10 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %5, i32 0, i32 1
  %11 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %12 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %11, i32 0, i32 1
  call void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EEC2ERKS3_(%"class.std::vector.18"* %10, %"class.std::vector.18"* dereferenceable(24) %12)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE5beginEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = alloca %"struct.Graph::Edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.287
  %6 = load i32, i32* @y.288
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1790871827, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %85
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1790871827, label %18
    i32 -1297408178, label %38
    i32 -9295396, label %74
    i32 194473624, label %76
  ]

; <label>:17:                                     ; preds = %15
  br label %85

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1297408178, i32 194473624
  store i32 %37, i32* %14
  br label %85

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %40 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %40, align 8
  %41 = load %"class.std::vector.18"*, %"class.std::vector.18"** %40, align 8
  %42 = bitcast %"class.std::vector.18"* %41 to %"struct.std::_Vector_base.19"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %43, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.29"* %39, %"struct.Graph::Edge"** dereferenceable(8) %44) #3
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %39, i32 0, i32 0
  %46 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %45, align 8
  store %"struct.Graph::Edge"* %46, %"struct.Graph::Edge"** %2
  %47 = load i32, i32* @x.287
  %48 = load i32, i32* @y.288
  %49 = sub i32 %47, -1157743944
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -1157743944
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -9295396, i32 194473624
  store i32 %73, i32* %14
  br label %85

; <label>:74:                                     ; preds = %15
  %75 = load volatile %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %2
  ret %"struct.Graph::Edge"* %75

; <label>:76:                                     ; preds = %15
  %77 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %78 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %78, align 8
  %79 = load %"class.std::vector.18"*, %"class.std::vector.18"** %78, align 8
  %80 = bitcast %"class.std::vector.18"* %79 to %"struct.std::_Vector_base.19"*
  %81 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %81, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.29"* %77, %"struct.Graph::Edge"** dereferenceable(8) %82) #3
  %83 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %77, i32 0, i32 0
  %84 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %83, align 8
  store i32 -1297408178, i32* %14
  br label %85

; <label>:85:                                     ; preds = %76, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE3endEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %3 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  %4 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %5 = bitcast %"class.std::vector.18"* %4 to %"struct.std::_Vector_base.19"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.29"* %2, %"struct.Graph::Edge"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %2, i32 0, i32 0
  %9 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %8, align 8
  ret %"struct.Graph::Edge"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator.29"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.29"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.29"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.29"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.29"* %0, %"class.__gnu_cxx::__normal_iterator.29"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.29"* %1, %"class.__gnu_cxx::__normal_iterator.29"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.29"*, %"class.__gnu_cxx::__normal_iterator.29"** %3, align 8
  %6 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.29"* %5) #3
  %7 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.29"*, %"class.__gnu_cxx::__normal_iterator.29"** %4, align 8
  %9 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.29"* %8) #3
  %10 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %9, align 8
  %11 = icmp ne %"struct.Graph::Edge"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.29"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.29"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.29"* %0, %"class.__gnu_cxx::__normal_iterator.29"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.29"*, %"class.__gnu_cxx::__normal_iterator.29"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  ret %"struct.Graph::Edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.29"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator.29"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.29"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.29"* %0, %"class.__gnu_cxx::__normal_iterator.29"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.29"*, %"class.__gnu_cxx::__normal_iterator.29"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  %6 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %5, i32 1
  store %"struct.Graph::Edge"* %6, %"struct.Graph::Edge"** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator.29"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4NodeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %6 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %5, i32 1
  store %"struct.Graph::Node"* %6, %"struct.Graph::Node"** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4NodeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"*, %"struct.Graph::Node"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"struct.Graph::Node"**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"struct.Graph::Node"** %1, %"struct.Graph::Node"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.Graph::Node"**, %"struct.Graph::Node"*** %4, align 8
  %8 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  store %"struct.Graph::Node"* %8, %"struct.Graph::Node"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Graph::Node"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4NodeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret %"struct.Graph::Node"** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EEC2ERKS3_(%"class.std::vector.18"*, %"class.std::vector.18"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.303
  %4 = load i32, i32* @y.304
  %5 = sub i32 %3, -262966066
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -262966066
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %220

; <label>:17:                                     ; preds = %2, %220
  %18 = alloca %"class.std::vector.18"*, align 8
  %19 = alloca %"class.std::vector.18"*, align 8
  %20 = alloca %"class.std::allocator.20", align 1
  %21 = alloca i8*
  %22 = alloca i32
  %23 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %24 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %18, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %19, align 8
  %25 = load %"class.std::vector.18"*, %"class.std::vector.18"** %18, align 8
  %26 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %27 = load %"class.std::vector.18"*, %"class.std::vector.18"** %19, align 8
  %28 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %27) #3
  %29 = load %"class.std::vector.18"*, %"class.std::vector.18"** %19, align 8
  %30 = bitcast %"class.std::vector.18"* %29 to %"struct.std::_Vector_base.19"*
  %31 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNKSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %30) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN5Graph4EdgeEEE17_S_select_on_copyERKS3_(%"class.std::allocator.20"* sret %20, %"class.std::allocator.20"* dereferenceable(1) %31)
  %32 = load i32, i32* @x.303
  %33 = load i32, i32* @y.304
  %34 = add i32 %32, -888235244
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -888235244
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %220

; <label>:46:                                     ; preds = %17
  invoke void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.19"* %26, i64 %28, %"class.std::allocator.20"* dereferenceable(1) %20)
          to label %47 unwind label %111

; <label>:47:                                     ; preds = %46
  call void @_ZNSaIN5Graph4EdgeEED2Ev(%"class.std::allocator.20"* %20) #3
  %48 = load %"class.std::vector.18"*, %"class.std::vector.18"** %19, align 8
  %49 = call %"struct.Graph::Edge"* @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE5beginEv(%"class.std::vector.18"* %48) #3
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %23, i32 0, i32 0
  store %"struct.Graph::Edge"* %49, %"struct.Graph::Edge"** %50, align 8
  %51 = load %"class.std::vector.18"*, %"class.std::vector.18"** %19, align 8
  %52 = call %"struct.Graph::Edge"* @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE3endEv(%"class.std::vector.18"* %51) #3
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %24, i32 0, i32 0
  store %"struct.Graph::Edge"* %52, %"struct.Graph::Edge"** %53, align 8
  %54 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %55 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %54, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %55, i32 0, i32 0
  %57 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %56, align 8
  %58 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %59 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %58) #3
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %23, i32 0, i32 0
  %61 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %60, align 8
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %24, i32 0, i32 0
  %63 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %62, align 8
  %64 = invoke %"struct.Graph::Edge"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E(%"struct.Graph::Edge"* %61, %"struct.Graph::Edge"* %63, %"struct.Graph::Edge"* %57, %"class.std::allocator.20"* dereferenceable(1) %59)
          to label %65 unwind label %115

; <label>:65:                                     ; preds = %47
  %66 = load i32, i32* @x.303
  %67 = load i32, i32* @y.304
  %68 = sub i32 %66, -713141964
  %69 = sub i32 %68, 1
  %70 = add i32 %69, -713141964
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 true, true
  %79 = and i1 %76, true
  %80 = and i1 %74, %78
  %81 = and i1 %77, true
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 true, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  br i1 %90, label %92, label %235

; <label>:92:                                     ; preds = %65, %235
  %93 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %94 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %93, i32 0, i32 0
  %95 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %94, i32 0, i32 1
  store %"struct.Graph::Edge"* %64, %"struct.Graph::Edge"** %95, align 8
  %96 = load i32, i32* @x.303
  %97 = load i32, i32* @y.304
  %98 = sub i32 %96, -1876192479
  %99 = sub i32 %98, 1
  %100 = add i32 %99, -1876192479
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = and i1 %104, %105
  %107 = xor i1 %104, %105
  %108 = or i1 %106, %107
  %109 = or i1 %104, %105
  br i1 %108, label %110, label %235

; <label>:110:                                    ; preds = %92
  ret void

; <label>:111:                                    ; preds = %46
  %112 = landingpad { i8*, i32 }
          cleanup
  %113 = extractvalue { i8*, i32 } %112, 0
  store i8* %113, i8** %21, align 8
  %114 = extractvalue { i8*, i32 } %112, 1
  store i32 %114, i32* %22, align 4
  call void @_ZNSaIN5Graph4EdgeEED2Ev(%"class.std::allocator.20"* %20) #3
  br label %173

; <label>:115:                                    ; preds = %47
  %116 = load i32, i32* @x.303
  %117 = load i32, i32* @y.304
  %118 = sub i32 0, 1
  %119 = add i32 %116, %118
  %120 = sub i32 %116, 1
  %121 = mul i32 %116, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %117, 10
  %125 = xor i1 %123, true
  %126 = xor i1 %124, true
  %127 = xor i1 true, true
  %128 = and i1 %125, true
  %129 = and i1 %123, %127
  %130 = and i1 %126, true
  %131 = and i1 %124, %127
  %132 = or i1 %128, %129
  %133 = or i1 %130, %131
  %134 = xor i1 %132, %133
  %135 = or i1 %125, %126
  %136 = xor i1 %135, true
  %137 = or i1 true, %127
  %138 = and i1 %136, %137
  %139 = or i1 %134, %138
  %140 = or i1 %123, %124
  br i1 %139, label %141, label %239

; <label>:141:                                    ; preds = %115, %239
  %142 = landingpad { i8*, i32 }
          cleanup
  %143 = extractvalue { i8*, i32 } %142, 0
  store i8* %143, i8** %21, align 8
  %144 = extractvalue { i8*, i32 } %142, 1
  store i32 %144, i32* %22, align 4
  %145 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EED2Ev(%"struct.std::_Vector_base.19"* %145) #3
  %146 = load i32, i32* @x.303
  %147 = load i32, i32* @y.304
  %148 = add i32 %146, 1375145993
  %149 = sub i32 %148, 1
  %150 = sub i32 %149, 1375145993
  %151 = sub i32 %146, 1
  %152 = mul i32 %146, %150
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %147, 10
  %156 = xor i1 %154, true
  %157 = xor i1 %155, true
  %158 = xor i1 true, true
  %159 = and i1 %156, true
  %160 = and i1 %154, %158
  %161 = and i1 %157, true
  %162 = and i1 %155, %158
  %163 = or i1 %159, %160
  %164 = or i1 %161, %162
  %165 = xor i1 %163, %164
  %166 = or i1 %156, %157
  %167 = xor i1 %166, true
  %168 = or i1 true, %158
  %169 = and i1 %167, %168
  %170 = or i1 %165, %169
  %171 = or i1 %154, %155
  br i1 %170, label %172, label %239

; <label>:172:                                    ; preds = %141
  br label %173

; <label>:173:                                    ; preds = %172, %111
  %174 = load i32, i32* @x.303
  %175 = load i32, i32* @y.304
  %176 = add i32 %174, -423211695
  %177 = sub i32 %176, 1
  %178 = sub i32 %177, -423211695
  %179 = sub i32 %174, 1
  %180 = mul i32 %174, %178
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %175, 10
  %184 = and i1 %182, %183
  %185 = xor i1 %182, %183
  %186 = or i1 %184, %185
  %187 = or i1 %182, %183
  br i1 %186, label %188, label %244

; <label>:188:                                    ; preds = %173, %244
  %189 = load i8*, i8** %21, align 8
  %190 = load i32, i32* %22, align 4
  %191 = insertvalue { i8*, i32 } undef, i8* %189, 0
  %192 = insertvalue { i8*, i32 } %191, i32 %190, 1
  %193 = load i32, i32* @x.303
  %194 = load i32, i32* @y.304
  %195 = sub i32 %193, 1106345681
  %196 = sub i32 %195, 1
  %197 = add i32 %196, 1106345681
  %198 = sub i32 %193, 1
  %199 = mul i32 %193, %197
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %194, 10
  %203 = xor i1 %201, true
  %204 = xor i1 %202, true
  %205 = xor i1 true, true
  %206 = and i1 %203, true
  %207 = and i1 %201, %205
  %208 = and i1 %204, true
  %209 = and i1 %202, %205
  %210 = or i1 %206, %207
  %211 = or i1 %208, %209
  %212 = xor i1 %210, %211
  %213 = or i1 %203, %204
  %214 = xor i1 %213, true
  %215 = or i1 true, %205
  %216 = and i1 %214, %215
  %217 = or i1 %212, %216
  %218 = or i1 %201, %202
  br i1 %217, label %219, label %244

; <label>:219:                                    ; preds = %188
  resume { i8*, i32 } %192

; <label>:220:                                    ; preds = %17, %2
  %221 = alloca %"class.std::vector.18"*, align 8
  %222 = alloca %"class.std::vector.18"*, align 8
  %223 = alloca %"class.std::allocator.20", align 1
  %224 = alloca i8*
  %225 = alloca i32
  %226 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %227 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %221, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %222, align 8
  %228 = load %"class.std::vector.18"*, %"class.std::vector.18"** %221, align 8
  %229 = bitcast %"class.std::vector.18"* %228 to %"struct.std::_Vector_base.19"*
  %230 = load %"class.std::vector.18"*, %"class.std::vector.18"** %222, align 8
  %231 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %230) #3
  %232 = load %"class.std::vector.18"*, %"class.std::vector.18"** %222, align 8
  %233 = bitcast %"class.std::vector.18"* %232 to %"struct.std::_Vector_base.19"*
  %234 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNKSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %233) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN5Graph4EdgeEEE17_S_select_on_copyERKS3_(%"class.std::allocator.20"* sret %223, %"class.std::allocator.20"* dereferenceable(1) %234)
  br label %17

; <label>:235:                                    ; preds = %92, %65
  %236 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %237 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %236, i32 0, i32 0
  %238 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %237, i32 0, i32 1
  store %"struct.Graph::Edge"* %64, %"struct.Graph::Edge"** %238, align 8
  br label %92

; <label>:239:                                    ; preds = %141, %115
  %240 = landingpad { i8*, i32 }
          cleanup
  %241 = extractvalue { i8*, i32 } %240, 0
  store i8* %241, i8** %21, align 8
  %242 = extractvalue { i8*, i32 } %240, 1
  store i32 %242, i32* %22, align 4
  %243 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EED2Ev(%"struct.std::_Vector_base.19"* %243) #3
  br label %141

; <label>:244:                                    ; preds = %188, %173
  %245 = load i8*, i8** %21, align 8
  %246 = load i32, i32* %22, align 4
  %247 = insertvalue { i8*, i32 } undef, i8* %245, 0
  %248 = insertvalue { i8*, i32 } %247, i32 %246, 1
  br label %188
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIN5Graph4EdgeEEE17_S_select_on_copyERKS3_(%"class.std::allocator.20"* noalias sret, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %3, align 8
  %4 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %3, align 8
  call void @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE37select_on_container_copy_constructionERKS2_(%"class.std::allocator.20"* sret %0, %"class.std::allocator.20"* dereferenceable(1) %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.19"*, i64, %"class.std::allocator.20"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.19"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.20"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.20"* %2, %"class.std::allocator.20"** %6, align 8
  %9 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %6, align 8
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %10, %"class.std::allocator.20"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base.19"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %10) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i32, i32* @x.307
  %20 = load i32, i32* @y.308
  %21 = add i32 %19, 1367209325
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, 1367209325
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 true, true
  %32 = and i1 %29, true
  %33 = and i1 %27, %31
  %34 = and i1 %30, true
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 true, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  br i1 %43, label %45, label %65

; <label>:45:                                     ; preds = %18, %65
  %46 = load i8*, i8** %7, align 8
  %47 = load i32, i32* %8, align 4
  %48 = insertvalue { i8*, i32 } undef, i8* %46, 0
  %49 = insertvalue { i8*, i32 } %48, i32 %47, 1
  %50 = load i32, i32* @x.307
  %51 = load i32, i32* @y.308
  %52 = sub i32 %50, -334226339
  %53 = sub i32 %52, 1
  %54 = add i32 %53, -334226339
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  br i1 %62, label %64, label %65

; <label>:64:                                     ; preds = %45
  resume { i8*, i32 } %49

; <label>:65:                                     ; preds = %45, %18
  %66 = load i8*, i8** %7, align 8
  %67 = load i32, i32* %8, align 4
  %68 = insertvalue { i8*, i32 } undef, i8* %66, 0
  %69 = insertvalue { i8*, i32 } %68, i32 %67, 1
  br label %45
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5Graph4EdgeEED2Ev(%"class.std::allocator.20"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %2, align 8
  %3 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %2, align 8
  %4 = bitcast %"class.std::allocator.20"* %3 to %"class.__gnu_cxx::new_allocator.21"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEED2Ev(%"class.__gnu_cxx::new_allocator.21"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %7 = alloca %"struct.Graph::Edge"*, align 8
  %8 = alloca %"class.std::allocator.20"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %5, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %6, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %12, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %7, align 8
  store %"class.std::allocator.20"* %3, %"class.std::allocator.20"** %8, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %9 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %10 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %9, i32 0, i32 0
  %19 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %18, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %10, i32 0, i32 0
  %21 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %20, align 8
  %22 = call %"struct.Graph::Edge"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.Graph::Edge"* %19, %"struct.Graph::Edge"* %21, %"struct.Graph::Edge"* %17)
  ret %"struct.Graph::Edge"* %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE5beginEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %6 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %8, align 8
  store %"struct.Graph::Edge"* %9, %"struct.Graph::Edge"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.30"* %2, %"struct.Graph::Edge"** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %2, i32 0, i32 0
  %11 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %10, align 8
  ret %"struct.Graph::Edge"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE3endEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %6 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %8, align 8
  store %"struct.Graph::Edge"* %9, %"struct.Graph::Edge"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.30"* %2, %"struct.Graph::Edge"** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %2, i32 0, i32 0
  %11 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %10, align 8
  ret %"struct.Graph::Edge"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE37select_on_container_copy_constructionERKS2_(%"class.std::allocator.20"* noalias sret, %"class.std::allocator.20"* dereferenceable(1)) #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %3, align 8
  %4 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %3, align 8
  call void @_ZNSaIN5Graph4EdgeEEC2ERKS1_(%"class.std::allocator.20"* %0, %"class.std::allocator.20"* dereferenceable(1) %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5Graph4EdgeEEC2ERKS1_(%"class.std::allocator.20"*, %"class.std::allocator.20"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.319
  %6 = load i32, i32* @y.320
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 2019520099, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %79
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 2019520099, label %18
    i32 -386488323, label %38
    i32 -99451542, label %71
    i32 -1562603082, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %79

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -386488323, i32 -1562603082
  store i32 %37, i32* %14
  br label %79

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.20"*, align 8
  %40 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %39, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %40, align 8
  %41 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %39, align 8
  %42 = bitcast %"class.std::allocator.20"* %41 to %"class.__gnu_cxx::new_allocator.21"*
  %43 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %40, align 8
  %44 = bitcast %"class.std::allocator.20"* %43 to %"class.__gnu_cxx::new_allocator.21"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.21"* %42, %"class.__gnu_cxx::new_allocator.21"* dereferenceable(1) %44) #3
  %45 = load i32, i32* @x.319
  %46 = load i32, i32* @y.320
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -99451542, i32 -1562603082
  store i32 %70, i32* %14
  br label %79

; <label>:71:                                     ; preds = %15
  ret void

; <label>:72:                                     ; preds = %15
  %73 = alloca %"class.std::allocator.20"*, align 8
  %74 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %73, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %74, align 8
  %75 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %73, align 8
  %76 = bitcast %"class.std::allocator.20"* %75 to %"class.__gnu_cxx::new_allocator.21"*
  %77 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %74, align 8
  %78 = bitcast %"class.std::allocator.20"* %77 to %"class.__gnu_cxx::new_allocator.21"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.21"* %76, %"class.__gnu_cxx::new_allocator.21"* dereferenceable(1) %78) #3
  store i32 -386488323, i32* %14
  br label %79

; <label>:79:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"class.std::allocator.20"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.321
  %6 = load i32, i32* @y.322
  %7 = add i32 %5, 633117084
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 633117084
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1558340904, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1558340904, label %19
    i32 2065359444, label %39
    i32 -1938434927, label %62
    i32 628470894, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 2065359444, i32 628470894
  store i32 %38, i32* %15
  br label %72

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, align 8
  %41 = alloca %"class.std::allocator.20"*, align 8
  store %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %40, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %41, align 8
  %42 = load %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %40, align 8
  %43 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %42 to %"class.std::allocator.20"*
  %44 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %41, align 8
  call void @_ZNSaIN5Graph4EdgeEEC2ERKS1_(%"class.std::allocator.20"* %43, %"class.std::allocator.20"* dereferenceable(1) %44) #3
  %45 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %42, i32 0, i32 0
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %45, align 8
  %46 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %42, i32 0, i32 1
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %46, align 8
  %47 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %42, i32 0, i32 2
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %47, align 8
  %48 = load i32, i32* @x.321
  %49 = load i32, i32* @y.322
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -1938434927, i32 628470894
  store i32 %61, i32* %15
  br label %72

; <label>:62:                                     ; preds = %16
  ret void

; <label>:63:                                     ; preds = %16
  %64 = alloca %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, align 8
  %65 = alloca %"class.std::allocator.20"*, align 8
  store %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %64, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %65, align 8
  %66 = load %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %64, align 8
  %67 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %66 to %"class.std::allocator.20"*
  %68 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %65, align 8
  call void @_ZNSaIN5Graph4EdgeEEC2ERKS1_(%"class.std::allocator.20"* %67, %"class.std::allocator.20"* dereferenceable(1) %68) #3
  %69 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %66, i32 0, i32 0
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %69, align 8
  %70 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %66, i32 0, i32 1
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %70, align 8
  %71 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %66, i32 0, i32 2
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %71, align 8
  store i32 2065359444, i32* %15
  br label %72

; <label>:72:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base.19"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.323
  %6 = load i32, i32* @y.324
  %7 = sub i32 %5, 668655052
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 668655052
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1412544499, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %94
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1412544499, label %19
    i32 2141691194, label %27
    i32 1736121447, label %73
    i32 -2135543288, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %94

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 2141691194, i32 -2135543288
  store i32 %26, i32* %15
  br label %94

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base.19"*, align 8
  %29 = alloca i64, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %28, align 8
  %31 = load i64, i64* %29, align 8
  %32 = call %"struct.Graph::Edge"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.19"* %30, i64 %31)
  %33 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %30, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %33, i32 0, i32 0
  store %"struct.Graph::Edge"* %32, %"struct.Graph::Edge"** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %30, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %35, i32 0, i32 0
  %37 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %36, align 8
  %38 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %30, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %38, i32 0, i32 1
  store %"struct.Graph::Edge"* %37, %"struct.Graph::Edge"** %39, align 8
  %40 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %30, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %40, i32 0, i32 0
  %42 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %41, align 8
  %43 = load i64, i64* %29, align 8
  %44 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %42, i64 %43
  %45 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %30, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %45, i32 0, i32 2
  store %"struct.Graph::Edge"* %44, %"struct.Graph::Edge"** %46, align 8
  %47 = load i32, i32* @x.323
  %48 = load i32, i32* @y.324
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 1736121447, i32 -2135543288
  store i32 %72, i32* %15
  br label %94

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"struct.std::_Vector_base.19"*, align 8
  %76 = alloca i64, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %75, align 8
  store i64 %1, i64* %76, align 8
  %77 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %75, align 8
  %78 = load i64, i64* %76, align 8
  %79 = call %"struct.Graph::Edge"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.19"* %77, i64 %78)
  %80 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %77, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %80, i32 0, i32 0
  store %"struct.Graph::Edge"* %79, %"struct.Graph::Edge"** %81, align 8
  %82 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %77, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %82, i32 0, i32 0
  %84 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %83, align 8
  %85 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %77, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %85, i32 0, i32 1
  store %"struct.Graph::Edge"* %84, %"struct.Graph::Edge"** %86, align 8
  %87 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %77, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %87, i32 0, i32 0
  %89 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %88, align 8
  %90 = load i64, i64* %76, align 8
  %91 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %89, i64 %90
  %92 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %77, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %92, i32 0, i32 2
  store %"struct.Graph::Edge"* %91, %"struct.Graph::Edge"** %93, align 8
  store i32 2141691194, i32* %15
  br label %94

; <label>:94:                                     ; preds = %74, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %6 = alloca %"struct.Graph::Edge"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %4, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %5, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %11, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %8 to i8*
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %9 to i8*
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %8, i32 0, i32 0
  %18 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %9, i32 0, i32 0
  %20 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %19, align 8
  %21 = call %"struct.Graph::Edge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_(%"struct.Graph::Edge"* %18, %"struct.Graph::Edge"* %20, %"struct.Graph::Edge"* %16)
  ret %"struct.Graph::Edge"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.327
  %5 = load i32, i32* @y.328
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %5, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %294

; <label>:29:                                     ; preds = %3, %294
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %32 = alloca %"struct.Graph::Edge"*, align 8
  %33 = alloca %"struct.Graph::Edge"*, align 8
  %34 = alloca i8*
  %35 = alloca i32
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %30, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %36, align 8
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %31, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %37, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %32, align 8
  %38 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %32, align 8
  store %"struct.Graph::Edge"* %38, %"struct.Graph::Edge"** %33, align 8
  %39 = load i32, i32* @x.327
  %40 = load i32, i32* @y.328
  %41 = sub i32 %39, -1405080456
  %42 = sub i32 %41, 1
  %43 = add i32 %42, -1405080456
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  br i1 %63, label %65, label %294

; <label>:65:                                     ; preds = %29
  br label %66

; <label>:66:                                     ; preds = %168, %65
  %67 = call zeroext i1 @_ZN9__gnu_cxxneIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.30"* dereferenceable(8) %30, %"class.__gnu_cxx::__normal_iterator.30"* dereferenceable(8) %31) #3
  br i1 %67, label %68, label %182

; <label>:68:                                     ; preds = %66
  %69 = load i32, i32* @x.327
  %70 = load i32, i32* @y.328
  %71 = add i32 %69, 1708329407
  %72 = sub i32 %71, 1
  %73 = sub i32 %72, 1708329407
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  br i1 %81, label %83, label %304

; <label>:83:                                     ; preds = %68, %304
  %84 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %33, align 8
  %85 = call %"struct.Graph::Edge"* @_ZSt11__addressofIN5Graph4EdgeEEPT_RS2_(%"struct.Graph::Edge"* dereferenceable(16) %84) #3
  %86 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.30"* %30) #3
  %87 = load i32, i32* @x.327
  %88 = load i32, i32* @y.328
  %89 = sub i32 %87, -607462881
  %90 = sub i32 %89, 1
  %91 = add i32 %90, -607462881
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 true, true
  %100 = and i1 %97, true
  %101 = and i1 %95, %99
  %102 = and i1 %98, true
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 true, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  br i1 %111, label %113, label %304

; <label>:113:                                    ; preds = %83
  invoke void @_ZSt10_ConstructIN5Graph4EdgeEJRKS1_EEvPT_DpOT0_(%"struct.Graph::Edge"* %85, %"struct.Graph::Edge"* dereferenceable(16) %86)
          to label %114 unwind label %172

; <label>:114:                                    ; preds = %113
  %115 = load i32, i32* @x.327
  %116 = load i32, i32* @y.328
  %117 = sub i32 0, 1
  %118 = add i32 %115, %117
  %119 = sub i32 %115, 1
  %120 = mul i32 %115, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %116, 10
  %124 = xor i1 %122, true
  %125 = xor i1 %123, true
  %126 = xor i1 true, true
  %127 = and i1 %124, true
  %128 = and i1 %122, %126
  %129 = and i1 %125, true
  %130 = and i1 %123, %126
  %131 = or i1 %127, %128
  %132 = or i1 %129, %130
  %133 = xor i1 %131, %132
  %134 = or i1 %124, %125
  %135 = xor i1 %134, true
  %136 = or i1 true, %126
  %137 = and i1 %135, %136
  %138 = or i1 %133, %137
  %139 = or i1 %122, %123
  br i1 %138, label %140, label %308

; <label>:140:                                    ; preds = %114, %308
  %141 = load i32, i32* @x.327
  %142 = load i32, i32* @y.328
  %143 = add i32 %141, 1456188606
  %144 = sub i32 %143, 1
  %145 = sub i32 %144, 1456188606
  %146 = sub i32 %141, 1
  %147 = mul i32 %141, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %142, 10
  %151 = xor i1 %149, true
  %152 = xor i1 %150, true
  %153 = xor i1 true, true
  %154 = and i1 %151, true
  %155 = and i1 %149, %153
  %156 = and i1 %152, true
  %157 = and i1 %150, %153
  %158 = or i1 %154, %155
  %159 = or i1 %156, %157
  %160 = xor i1 %158, %159
  %161 = or i1 %151, %152
  %162 = xor i1 %161, true
  %163 = or i1 true, %153
  %164 = and i1 %162, %163
  %165 = or i1 %160, %164
  %166 = or i1 %149, %150
  br i1 %165, label %167, label %308

; <label>:167:                                    ; preds = %140
  br label %168

; <label>:168:                                    ; preds = %167
  %169 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.30"* @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator.30"* %30) #3
  %170 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %33, align 8
  %171 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %170, i32 1
  store %"struct.Graph::Edge"* %171, %"struct.Graph::Edge"** %33, align 8
  br label %66

; <label>:172:                                    ; preds = %113
  %173 = landingpad { i8*, i32 }
          catch i8* null
  %174 = extractvalue { i8*, i32 } %173, 0
  store i8* %174, i8** %34, align 8
  %175 = extractvalue { i8*, i32 } %173, 1
  store i32 %175, i32* %35, align 4
  br label %176

; <label>:176:                                    ; preds = %172
  %177 = load i8*, i8** %34, align 8
  %178 = call i8* @__cxa_begin_catch(i8* %177) #3
  %179 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %32, align 8
  %180 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %33, align 8
  invoke void @_ZSt8_DestroyIPN5Graph4EdgeEEvT_S3_(%"struct.Graph::Edge"* %179, %"struct.Graph::Edge"* %180)
          to label %181 unwind label %237

; <label>:181:                                    ; preds = %176
  invoke void @__cxa_rethrow() #12
          to label %293 unwind label %237

; <label>:182:                                    ; preds = %66
  %183 = load i32, i32* @x.327
  %184 = load i32, i32* @y.328
  %185 = add i32 %183, 708194374
  %186 = sub i32 %185, 1
  %187 = sub i32 %186, 708194374
  %188 = sub i32 %183, 1
  %189 = mul i32 %183, %187
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %184, 10
  %193 = xor i1 %191, true
  %194 = xor i1 %192, true
  %195 = xor i1 true, true
  %196 = and i1 %193, true
  %197 = and i1 %191, %195
  %198 = and i1 %194, true
  %199 = and i1 %192, %195
  %200 = or i1 %196, %197
  %201 = or i1 %198, %199
  %202 = xor i1 %200, %201
  %203 = or i1 %193, %194
  %204 = xor i1 %203, true
  %205 = or i1 true, %195
  %206 = and i1 %204, %205
  %207 = or i1 %202, %206
  %208 = or i1 %191, %192
  br i1 %207, label %209, label %309

; <label>:209:                                    ; preds = %182, %309
  %210 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %33, align 8
  %211 = load i32, i32* @x.327
  %212 = load i32, i32* @y.328
  %213 = sub i32 0, 1
  %214 = add i32 %211, %213
  %215 = sub i32 %211, 1
  %216 = mul i32 %211, %214
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %212, 10
  %220 = xor i1 %218, true
  %221 = xor i1 %219, true
  %222 = xor i1 true, true
  %223 = and i1 %220, true
  %224 = and i1 %218, %222
  %225 = and i1 %221, true
  %226 = and i1 %219, %222
  %227 = or i1 %223, %224
  %228 = or i1 %225, %226
  %229 = xor i1 %227, %228
  %230 = or i1 %220, %221
  %231 = xor i1 %230, true
  %232 = or i1 true, %222
  %233 = and i1 %231, %232
  %234 = or i1 %229, %233
  %235 = or i1 %218, %219
  br i1 %234, label %236, label %309

; <label>:236:                                    ; preds = %209
  ret %"struct.Graph::Edge"* %210

; <label>:237:                                    ; preds = %181, %176
  %238 = landingpad { i8*, i32 }
          cleanup
  %239 = extractvalue { i8*, i32 } %238, 0
  store i8* %239, i8** %34, align 8
  %240 = extractvalue { i8*, i32 } %238, 1
  store i32 %240, i32* %35, align 4
  invoke void @__cxa_end_catch()
          to label %241 unwind label %248

; <label>:241:                                    ; preds = %237
  br label %243
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:243:                                    ; preds = %241
  %244 = load i8*, i8** %34, align 8
  %245 = load i32, i32* %35, align 4
  %246 = insertvalue { i8*, i32 } undef, i8* %244, 0
  %247 = insertvalue { i8*, i32 } %246, i32 %245, 1
  resume { i8*, i32 } %247

; <label>:248:                                    ; preds = %237
  %249 = load i32, i32* @x.327
  %250 = load i32, i32* @y.328
  %251 = add i32 %249, -1224989271
  %252 = sub i32 %251, 1
  %253 = sub i32 %252, -1224989271
  %254 = sub i32 %249, 1
  %255 = mul i32 %249, %253
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %250, 10
  %259 = xor i1 %257, true
  %260 = xor i1 %258, true
  %261 = xor i1 false, true
  %262 = and i1 %259, false
  %263 = and i1 %257, %261
  %264 = and i1 %260, false
  %265 = and i1 %258, %261
  %266 = or i1 %262, %263
  %267 = or i1 %264, %265
  %268 = xor i1 %266, %267
  %269 = or i1 %259, %260
  %270 = xor i1 %269, true
  %271 = or i1 false, %261
  %272 = and i1 %270, %271
  %273 = or i1 %268, %272
  %274 = or i1 %257, %258
  br i1 %273, label %275, label %311

; <label>:275:                                    ; preds = %248, %311
  %276 = landingpad { i8*, i32 }
          catch i8* null
  %277 = extractvalue { i8*, i32 } %276, 0
  call void @__clang_call_terminate(i8* %277) #10
  %278 = load i32, i32* @x.327
  %279 = load i32, i32* @y.328
  %280 = add i32 %278, 316650886
  %281 = sub i32 %280, 1
  %282 = sub i32 %281, 316650886
  %283 = sub i32 %278, 1
  %284 = mul i32 %278, %282
  %285 = urem i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %279, 10
  %288 = and i1 %286, %287
  %289 = xor i1 %286, %287
  %290 = or i1 %288, %289
  %291 = or i1 %286, %287
  br i1 %290, label %292, label %311

; <label>:292:                                    ; preds = %275
  unreachable

; <label>:293:                                    ; preds = %181
  unreachable

; <label>:294:                                    ; preds = %29, %3
  %295 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %296 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %297 = alloca %"struct.Graph::Edge"*, align 8
  %298 = alloca %"struct.Graph::Edge"*, align 8
  %299 = alloca i8*
  %300 = alloca i32
  %301 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %295, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %301, align 8
  %302 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %296, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %302, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %297, align 8
  %303 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %297, align 8
  store %"struct.Graph::Edge"* %303, %"struct.Graph::Edge"** %298, align 8
  br label %29

; <label>:304:                                    ; preds = %83, %68
  %305 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %33, align 8
  %306 = call %"struct.Graph::Edge"* @_ZSt11__addressofIN5Graph4EdgeEEPT_RS2_(%"struct.Graph::Edge"* dereferenceable(16) %305) #3
  %307 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.30"* %30) #3
  br label %83

; <label>:308:                                    ; preds = %140, %114
  br label %140

; <label>:309:                                    ; preds = %209, %182
  %310 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %33, align 8
  br label %209

; <label>:311:                                    ; preds = %275, %248
  %312 = landingpad { i8*, i32 }
          catch i8* null
  %313 = extractvalue { i8*, i32 } %312, 0
  call void @__clang_call_terminate(i8* %313) #10
  br label %275
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.30"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.30"* dereferenceable(8)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.329
  %7 = load i32, i32* @y.330
  %8 = add i32 %6, -633350573
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -633350573
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1407069750, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %76
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1407069750, label %20
    i32 -4685160, label %40
    i32 -658433516, label %64
    i32 -714865283, label %66
  ]

; <label>:19:                                     ; preds = %17
  br label %76

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -4685160, i32 -714865283
  store i32 %39, i32* %16
  br label %76

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %41, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %1, %"class.__gnu_cxx::__normal_iterator.30"** %42, align 8
  %43 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %41, align 8
  %44 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"* %43) #3
  %45 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %44, align 8
  %46 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %42, align 8
  %47 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"* %46) #3
  %48 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %47, align 8
  %49 = icmp ne %"struct.Graph::Edge"* %45, %48
  store i1 %49, i1* %3
  %50 = load i32, i32* @x.329
  %51 = load i32, i32* @y.330
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 -658433516, i32 -714865283
  store i32 %63, i32* %16
  br label %76

; <label>:64:                                     ; preds = %17
  %65 = load volatile i1, i1* %3
  ret i1 %65

; <label>:66:                                     ; preds = %17
  %67 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  %68 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %67, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %1, %"class.__gnu_cxx::__normal_iterator.30"** %68, align 8
  %69 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %67, align 8
  %70 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"* %69) #3
  %71 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %70, align 8
  %72 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %68, align 8
  %73 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"* %72) #3
  %74 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %73, align 8
  %75 = icmp ne %"struct.Graph::Edge"* %71, %74
  store i32 -4685160, i32* %16
  br label %76

; <label>:76:                                     ; preds = %66, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructIN5Graph4EdgeEJRKS1_EEvPT_DpOT0_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"* dereferenceable(16)) #5 comdat {
  %3 = alloca %"struct.Graph::Edge"*, align 8
  %4 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %3, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %4, align 8
  %5 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %3, align 8
  %6 = bitcast %"struct.Graph::Edge"* %5 to i8*
  %7 = bitcast i8* %6 to %"struct.Graph::Edge"*
  %8 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  %9 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIRKN5Graph4EdgeEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.Graph::Edge"* dereferenceable(16) %8) #3
  %10 = bitcast %"struct.Graph::Edge"* %7 to i8*
  %11 = bitcast %"struct.Graph::Edge"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 16, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.30"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  ret %"struct.Graph::Edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.30"* @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator.30"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.30"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.335
  %6 = load i32, i32* @y.336
  %7 = sub i32 %5, 459738140
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 459738140
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 821991570, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %57
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 821991570, label %19
    i32 774882306, label %27
    i32 1854628672, label %49
    i32 -1579151626, label %51
  ]

; <label>:18:                                     ; preds = %16
  br label %57

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 774882306, i32 -1579151626
  store i32 %26, i32* %15
  br label %57

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %28, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %29, %"class.__gnu_cxx::__normal_iterator.30"** %2
  %30 = load volatile %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %2
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %30, i32 0, i32 0
  %32 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %31, align 8
  %33 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %32, i32 1
  store %"struct.Graph::Edge"* %33, %"struct.Graph::Edge"** %31, align 8
  %34 = load i32, i32* @x.335
  %35 = load i32, i32* @y.336
  %36 = add i32 %34, -1799559488
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, -1799559488
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 1854628672, i32 -1579151626
  store i32 %48, i32* %15
  br label %57

; <label>:49:                                     ; preds = %16
  %50 = load volatile %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %2
  ret %"class.__gnu_cxx::__normal_iterator.30"* %50

; <label>:51:                                     ; preds = %16
  %52 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %52, align 8
  %53 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %52, align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %53, i32 0, i32 0
  %55 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %54, align 8
  %56 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %55, i32 1
  store %"struct.Graph::Edge"* %56, %"struct.Graph::Edge"** %54, align 8
  store i32 774882306, i32* %15
  br label %57

; <label>:57:                                     ; preds = %51, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %3, i32 0, i32 0
  ret %"struct.Graph::Edge"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIRKN5Graph4EdgeEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.Graph::Edge"* dereferenceable(16)) #5 comdat {
  %2 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %2, align 8
  %3 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %2, align 8
  ret %"struct.Graph::Edge"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.30"*, %"struct.Graph::Edge"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.341
  %6 = load i32, i32* @y.342
  %7 = add i32 %5, 172383865
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 172383865
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 110339375, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 110339375, label %19
    i32 -1670839319, label %27
    i32 1522789095, label %61
    i32 1222380156, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1670839319, i32 1222380156
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  %29 = alloca %"struct.Graph::Edge"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %28, align 8
  store %"struct.Graph::Edge"** %1, %"struct.Graph::Edge"*** %29, align 8
  %30 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %28, align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %30, i32 0, i32 0
  %32 = load %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %29, align 8
  %33 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %32, align 8
  store %"struct.Graph::Edge"* %33, %"struct.Graph::Edge"** %31, align 8
  %34 = load i32, i32* @x.341
  %35 = load i32, i32* @y.342
  %36 = sub i32 %34, 1448760910
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 1448760910
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 1522789095, i32 1222380156
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  %64 = alloca %"struct.Graph::Edge"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %63, align 8
  store %"struct.Graph::Edge"** %1, %"struct.Graph::Edge"*** %64, align 8
  %65 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %63, align 8
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %65, i32 0, i32 0
  %67 = load %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %64, align 8
  %68 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %67, align 8
  store %"struct.Graph::Edge"* %68, %"struct.Graph::Edge"** %66, align 8
  store i32 -1670839319, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.29"*, %"struct.Graph::Edge"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.29"*, align 8
  %4 = alloca %"struct.Graph::Edge"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.29"* %0, %"class.__gnu_cxx::__normal_iterator.29"** %3, align 8
  store %"struct.Graph::Edge"** %1, %"struct.Graph::Edge"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.29"*, %"class.__gnu_cxx::__normal_iterator.29"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %5, i32 0, i32 0
  %7 = load %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %4, align 8
  %8 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  store %"struct.Graph::Edge"* %8, %"struct.Graph::Edge"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.29"*) #5 comdat align 2 {
  %2 = alloca %"struct.Graph::Edge"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.345
  %6 = load i32, i32* @y.346
  %7 = sub i32 %5, -1252765744
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1252765744
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1596575519, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %75
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1596575519, label %19
    i32 -627792858, label %39
    i32 1274136787, label %69
    i32 823742421, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %75

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -627792858, i32 823742421
  store i32 %38, i32* %15
  br label %75

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.29"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.29"* %0, %"class.__gnu_cxx::__normal_iterator.29"** %40, align 8
  %41 = load %"class.__gnu_cxx::__normal_iterator.29"*, %"class.__gnu_cxx::__normal_iterator.29"** %40, align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %41, i32 0, i32 0
  store %"struct.Graph::Edge"** %42, %"struct.Graph::Edge"*** %2
  %43 = load i32, i32* @x.345
  %44 = load i32, i32* @y.346
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1274136787, i32 823742421
  store i32 %68, i32* %15
  br label %75

; <label>:69:                                     ; preds = %16
  %70 = load volatile %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %2
  ret %"struct.Graph::Edge"** %70

; <label>:71:                                     ; preds = %16
  %72 = alloca %"class.__gnu_cxx::__normal_iterator.29"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.29"* %0, %"class.__gnu_cxx::__normal_iterator.29"** %72, align 8
  %73 = load %"class.__gnu_cxx::__normal_iterator.29"*, %"class.__gnu_cxx::__normal_iterator.29"** %72, align 8
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %73, i32 0, i32 0
  store i32 -627792858, i32* %15
  br label %75

; <label>:75:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE12emplace_backIJxEEEvDpOT_(%"class.std::vector"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i64*
  %5 = alloca %"class.std::vector"*
  %6 = alloca %"class.std::vector"*, align 8
  %7 = alloca i64*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %6, align 8
  store i64* %1, i64** %7, align 8
  %8 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8
  store %"class.std::vector"* %8, %"class.std::vector"** %5
  %9 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %10 = bitcast %"class.std::vector"* %9 to %"struct.std::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  store i64* %13, i64** %4
  %14 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %15 = bitcast %"class.std::vector"* %14 to %"struct.std::_Vector_base"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load i64*, i64** %17, align 8
  store i64* %18, i64** %3
  %19 = alloca i32
  store i32 1407438415, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %111
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1407438415, label %23
    i32 -758314256, label %28
    i32 -147299887, label %55
    i32 1588526006, label %87
    i32 262151776, label %88
    i32 -1925674590, label %92
    i32 -264203065, label %93
  ]

; <label>:22:                                     ; preds = %20
  br label %111

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64*, i64** %4
  %25 = load volatile i64*, i64** %3
  %26 = icmp ne i64* %24, %25
  %27 = select i1 %26, i32 -758314256, i32 262151776
  store i32 %27, i32* %19
  br label %111

; <label>:28:                                     ; preds = %20
  %29 = load i32, i32* @x.347
  %30 = load i32, i32* @y.348
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 -147299887, i32 -264203065
  store i32 %54, i32* %19
  br label %111

; <label>:55:                                     ; preds = %20
  %56 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %57 = bitcast %"class.std::vector"* %56 to %"struct.std::_Vector_base"*
  %58 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %57, i32 0, i32 0
  %59 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %58 to %"class.std::allocator.0"*
  %60 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %61 = bitcast %"class.std::vector"* %60 to %"struct.std::_Vector_base"*
  %62 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %61, i32 0, i32 0
  %63 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %62, i32 0, i32 1
  %64 = load i64*, i64** %63, align 8
  %65 = load i64*, i64** %7, align 8
  %66 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %65) #3
  call void @_ZNSt16allocator_traitsISaIxEE9constructIxJxEEEvRS0_PT_DpOT0_(%"class.std::allocator.0"* dereferenceable(1) %59, i64* %64, i64* dereferenceable(8) %66)
  %67 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %68 = bitcast %"class.std::vector"* %67 to %"struct.std::_Vector_base"*
  %69 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %68, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %69, i32 0, i32 1
  %71 = load i64*, i64** %70, align 8
  %72 = getelementptr inbounds i64, i64* %71, i32 1
  store i64* %72, i64** %70, align 8
  %73 = load i32, i32* @x.347
  %74 = load i32, i32* @y.348
  %75 = sub i32 0, 1
  %76 = add i32 %73, %75
  %77 = sub i32 %73, 1
  %78 = mul i32 %73, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %74, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  %86 = select i1 %84, i32 1588526006, i32 -264203065
  store i32 %86, i32* %19
  br label %111

; <label>:87:                                     ; preds = %20
  store i32 -1925674590, i32* %19
  br label %111

; <label>:88:                                     ; preds = %20
  %89 = load i64*, i64** %7, align 8
  %90 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %89) #3
  %91 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  call void @_ZNSt6vectorIxSaIxEE19_M_emplace_back_auxIJxEEEvDpOT_(%"class.std::vector"* %91, i64* dereferenceable(8) %90)
  store i32 -1925674590, i32* %19
  br label %111

; <label>:92:                                     ; preds = %20
  ret void

; <label>:93:                                     ; preds = %20
  %94 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %95 = bitcast %"class.std::vector"* %94 to %"struct.std::_Vector_base"*
  %96 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %95, i32 0, i32 0
  %97 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %96 to %"class.std::allocator.0"*
  %98 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %99 = bitcast %"class.std::vector"* %98 to %"struct.std::_Vector_base"*
  %100 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %99, i32 0, i32 0
  %101 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %100, i32 0, i32 1
  %102 = load i64*, i64** %101, align 8
  %103 = load i64*, i64** %7, align 8
  %104 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %103) #3
  call void @_ZNSt16allocator_traitsISaIxEE9constructIxJxEEEvRS0_PT_DpOT0_(%"class.std::allocator.0"* dereferenceable(1) %97, i64* %102, i64* dereferenceable(8) %104)
  %105 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %106 = bitcast %"class.std::vector"* %105 to %"struct.std::_Vector_base"*
  %107 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %106, i32 0, i32 0
  %108 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %107, i32 0, i32 1
  %109 = load i64*, i64** %108, align 8
  %110 = getelementptr inbounds i64, i64* %109, i32 1
  store i64* %110, i64** %108, align 8
  store i32 -147299887, i32* %19
  br label %111

; <label>:111:                                    ; preds = %93, %88, %87, %55, %28, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8)) #5 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE9constructIxJxEEEvRS0_PT_DpOT0_(%"class.std::allocator.0"* dereferenceable(1), i64*, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.351
  %7 = load i32, i32* @y.352
  %8 = sub i32 %6, 1313223454
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1313223454
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 409088671, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %61
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 409088671, label %20
    i32 -1581891808, label %28
    i32 617520711, label %51
    i32 698522132, label %52
  ]

; <label>:19:                                     ; preds = %17
  br label %61

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1581891808, i32 698522132
  store i32 %27, i32* %16
  br label %61

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.0"*, align 8
  %30 = alloca i64*, align 8
  %31 = alloca i64*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %29, align 8
  store i64* %1, i64** %30, align 8
  store i64* %2, i64** %31, align 8
  %32 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %29, align 8
  %33 = bitcast %"class.std::allocator.0"* %32 to %"class.__gnu_cxx::new_allocator.1"*
  %34 = load i64*, i64** %30, align 8
  %35 = load i64*, i64** %31, align 8
  %36 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %35) #3
  call void @_ZN9__gnu_cxx13new_allocatorIxE9constructIxJxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.1"* %33, i64* %34, i64* dereferenceable(8) %36)
  %37 = load i32, i32* @x.351
  %38 = load i32, i32* @y.352
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 617520711, i32 698522132
  store i32 %50, i32* %16
  br label %61

; <label>:51:                                     ; preds = %17
  ret void

; <label>:52:                                     ; preds = %17
  %53 = alloca %"class.std::allocator.0"*, align 8
  %54 = alloca i64*, align 8
  %55 = alloca i64*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %53, align 8
  store i64* %1, i64** %54, align 8
  store i64* %2, i64** %55, align 8
  %56 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %53, align 8
  %57 = bitcast %"class.std::allocator.0"* %56 to %"class.__gnu_cxx::new_allocator.1"*
  %58 = load i64*, i64** %54, align 8
  %59 = load i64*, i64** %55, align 8
  %60 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %59) #3
  call void @_ZN9__gnu_cxx13new_allocatorIxE9constructIxJxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.1"* %57, i64* %58, i64* dereferenceable(8) %60)
  store i32 -1581891808, i32* %16
  br label %61

; <label>:61:                                     ; preds = %52, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8)) #5 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE19_M_emplace_back_auxIJxEEEvDpOT_(%"class.std::vector"*, i64* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.355
  %4 = load i32, i32* @y.356
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %361

; <label>:28:                                     ; preds = %2, %361
  %29 = alloca %"class.std::vector"*, align 8
  %30 = alloca i64*, align 8
  %31 = alloca i64, align 8
  %32 = alloca i64*, align 8
  %33 = alloca i64*, align 8
  %34 = alloca i8*
  %35 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %29, align 8
  store i64* %1, i64** %30, align 8
  %36 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8
  %37 = call i64 @_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc(%"class.std::vector"* %36, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i32 0, i32 0))
  store i64 %37, i64* %31, align 8
  %38 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %39 = load i64, i64* %31, align 8
  %40 = call i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base"* %38, i64 %39)
  store i64* %40, i64** %32, align 8
  %41 = load i64*, i64** %32, align 8
  store i64* %41, i64** %33, align 8
  %42 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %42, i32 0, i32 0
  %44 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %43 to %"class.std::allocator.0"*
  %45 = load i64*, i64** %32, align 8
  %46 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"* %36) #3
  %47 = getelementptr inbounds i64, i64* %45, i64 %46
  %48 = load i64*, i64** %30, align 8
  %49 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %48) #3
  %50 = load i32, i32* @x.355
  %51 = load i32, i32* @y.356
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  br i1 %73, label %75, label %361

; <label>:75:                                     ; preds = %28
  invoke void @_ZNSt16allocator_traitsISaIxEE9constructIxJxEEEvRS0_PT_DpOT0_(%"class.std::allocator.0"* dereferenceable(1) %44, i64* %47, i64* dereferenceable(8) %49)
          to label %76 unwind label %92

; <label>:76:                                     ; preds = %75
  store i64* null, i64** %33, align 8
  %77 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %78 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %77, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %78, i32 0, i32 0
  %80 = load i64*, i64** %79, align 8
  %81 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %82 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %81, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %82, i32 0, i32 1
  %84 = load i64*, i64** %83, align 8
  %85 = load i64*, i64** %32, align 8
  %86 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %87 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %86) #3
  %88 = invoke i64* @_ZSt34__uninitialized_move_if_noexcept_aIPxS0_SaIxEET0_T_S3_S2_RT1_(i64* %80, i64* %84, i64* %85, %"class.std::allocator.0"* dereferenceable(1) %87)
          to label %89 unwind label %92

; <label>:89:                                     ; preds = %76
  store i64* %88, i64** %33, align 8
  %90 = load i64*, i64** %33, align 8
  %91 = getelementptr inbounds i64, i64* %90, i32 1
  store i64* %91, i64** %33, align 8
  br label %195

; <label>:92:                                     ; preds = %76, %75
  %93 = landingpad { i8*, i32 }
          catch i8* null
  %94 = extractvalue { i8*, i32 } %93, 0
  store i8* %94, i8** %34, align 8
  %95 = extractvalue { i8*, i32 } %93, 1
  store i32 %95, i32* %35, align 4
  br label %96

; <label>:96:                                     ; preds = %92
  %97 = load i8*, i8** %34, align 8
  %98 = call i8* @__cxa_begin_catch(i8* %97) #3
  %99 = load i64*, i64** %33, align 8
  %100 = icmp ne i64* %99, null
  br i1 %100, label %142, label %101

; <label>:101:                                    ; preds = %96
  %102 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %103 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %102, i32 0, i32 0
  %104 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %103 to %"class.std::allocator.0"*
  %105 = load i64*, i64** %32, align 8
  %106 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"* %36) #3
  %107 = getelementptr inbounds i64, i64* %105, i64 %106
  invoke void @_ZNSt16allocator_traitsISaIxEE7destroyIxEEvRS0_PT_(%"class.std::allocator.0"* dereferenceable(1) %104, i64* %107)
          to label %108 unwind label %138

; <label>:108:                                    ; preds = %101
  %109 = load i32, i32* @x.355
  %110 = load i32, i32* @y.356
  %111 = sub i32 0, 1
  %112 = add i32 %109, %111
  %113 = sub i32 %109, 1
  %114 = mul i32 %109, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %110, 10
  %118 = and i1 %116, %117
  %119 = xor i1 %116, %117
  %120 = or i1 %118, %119
  %121 = or i1 %116, %117
  br i1 %120, label %122, label %383

; <label>:122:                                    ; preds = %108, %383
  %123 = load i32, i32* @x.355
  %124 = load i32, i32* @y.356
  %125 = sub i32 %123, -2019354604
  %126 = sub i32 %125, 1
  %127 = add i32 %126, -2019354604
  %128 = sub i32 %123, 1
  %129 = mul i32 %123, %127
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %124, 10
  %133 = and i1 %131, %132
  %134 = xor i1 %131, %132
  %135 = or i1 %133, %134
  %136 = or i1 %131, %132
  br i1 %135, label %137, label %383

; <label>:137:                                    ; preds = %122
  br label %189

; <label>:138:                                    ; preds = %193, %189, %187, %101
  %139 = landingpad { i8*, i32 }
          cleanup
  %140 = extractvalue { i8*, i32 } %139, 0
  store i8* %140, i8** %34, align 8
  %141 = extractvalue { i8*, i32 } %139, 1
  store i32 %141, i32* %35, align 4
  invoke void @__cxa_end_catch()
          to label %194 unwind label %316

; <label>:142:                                    ; preds = %96
  %143 = load i32, i32* @x.355
  %144 = load i32, i32* @y.356
  %145 = add i32 %143, 1063455606
  %146 = sub i32 %145, 1
  %147 = sub i32 %146, 1063455606
  %148 = sub i32 %143, 1
  %149 = mul i32 %143, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %144, 10
  %153 = and i1 %151, %152
  %154 = xor i1 %151, %152
  %155 = or i1 %153, %154
  %156 = or i1 %151, %152
  br i1 %155, label %157, label %384

; <label>:157:                                    ; preds = %142, %384
  %158 = load i64*, i64** %32, align 8
  %159 = load i64*, i64** %33, align 8
  %160 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %161 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %160) #3
  %162 = load i32, i32* @x.355
  %163 = load i32, i32* @y.356
  %164 = sub i32 0, 1
  %165 = add i32 %162, %164
  %166 = sub i32 %162, 1
  %167 = mul i32 %162, %165
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %163, 10
  %171 = xor i1 %169, true
  %172 = xor i1 %170, true
  %173 = xor i1 false, true
  %174 = and i1 %171, false
  %175 = and i1 %169, %173
  %176 = and i1 %172, false
  %177 = and i1 %170, %173
  %178 = or i1 %174, %175
  %179 = or i1 %176, %177
  %180 = xor i1 %178, %179
  %181 = or i1 %171, %172
  %182 = xor i1 %181, true
  %183 = or i1 false, %173
  %184 = and i1 %182, %183
  %185 = or i1 %180, %184
  %186 = or i1 %169, %170
  br i1 %185, label %187, label %384

; <label>:187:                                    ; preds = %157
  invoke void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %158, i64* %159, %"class.std::allocator.0"* dereferenceable(1) %161)
          to label %188 unwind label %138

; <label>:188:                                    ; preds = %187
  br label %189

; <label>:189:                                    ; preds = %188, %137
  %190 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %191 = load i64*, i64** %32, align 8
  %192 = load i64, i64* %31, align 8
  invoke void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base"* %190, i64* %191, i64 %192)
          to label %193 unwind label %138

; <label>:193:                                    ; preds = %189
  invoke void @__cxa_rethrow() #12
          to label %319 unwind label %138

; <label>:194:                                    ; preds = %138
  br label %282

; <label>:195:                                    ; preds = %89
  %196 = load i32, i32* @x.355
  %197 = load i32, i32* @y.356
  %198 = sub i32 %196, 1378046995
  %199 = sub i32 %198, 1
  %200 = add i32 %199, 1378046995
  %201 = sub i32 %196, 1
  %202 = mul i32 %196, %200
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %197, 10
  %206 = xor i1 %204, true
  %207 = xor i1 %205, true
  %208 = xor i1 true, true
  %209 = and i1 %206, true
  %210 = and i1 %204, %208
  %211 = and i1 %207, true
  %212 = and i1 %205, %208
  %213 = or i1 %209, %210
  %214 = or i1 %211, %212
  %215 = xor i1 %213, %214
  %216 = or i1 %206, %207
  %217 = xor i1 %216, true
  %218 = or i1 true, %208
  %219 = and i1 %217, %218
  %220 = or i1 %215, %219
  %221 = or i1 %204, %205
  br i1 %220, label %222, label %389

; <label>:222:                                    ; preds = %195, %389
  %223 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %224 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %223, i32 0, i32 0
  %225 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %224, i32 0, i32 0
  %226 = load i64*, i64** %225, align 8
  %227 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %228 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %227, i32 0, i32 0
  %229 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %228, i32 0, i32 1
  %230 = load i64*, i64** %229, align 8
  %231 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %232 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %231) #3
  call void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %226, i64* %230, %"class.std::allocator.0"* dereferenceable(1) %232)
  %233 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %234 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %235 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %234, i32 0, i32 0
  %236 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %235, i32 0, i32 0
  %237 = load i64*, i64** %236, align 8
  %238 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %239 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %238, i32 0, i32 0
  %240 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %239, i32 0, i32 2
  %241 = load i64*, i64** %240, align 8
  %242 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %243 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %242, i32 0, i32 0
  %244 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %243, i32 0, i32 0
  %245 = load i64*, i64** %244, align 8
  %246 = ptrtoint i64* %241 to i64
  %247 = ptrtoint i64* %245 to i64
  %248 = add i64 %246, -3241760983127402480
  %249 = sub i64 %248, %247
  %250 = sub i64 %249, -3241760983127402480
  %251 = sub i64 %246, %247
  %252 = sdiv exact i64 %250, 8
  call void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base"* %233, i64* %237, i64 %252)
  %253 = load i64*, i64** %32, align 8
  %254 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %255 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %254, i32 0, i32 0
  %256 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %255, i32 0, i32 0
  store i64* %253, i64** %256, align 8
  %257 = load i64*, i64** %33, align 8
  %258 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %259 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %258, i32 0, i32 0
  %260 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %259, i32 0, i32 1
  store i64* %257, i64** %260, align 8
  %261 = load i64*, i64** %32, align 8
  %262 = load i64, i64* %31, align 8
  %263 = getelementptr inbounds i64, i64* %261, i64 %262
  %264 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %265 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %264, i32 0, i32 0
  %266 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %265, i32 0, i32 2
  store i64* %263, i64** %266, align 8
  %267 = load i32, i32* @x.355
  %268 = load i32, i32* @y.356
  %269 = sub i32 %267, 362295578
  %270 = sub i32 %269, 1
  %271 = add i32 %270, 362295578
  %272 = sub i32 %267, 1
  %273 = mul i32 %267, %271
  %274 = urem i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %268, 10
  %277 = and i1 %275, %276
  %278 = xor i1 %275, %276
  %279 = or i1 %277, %278
  %280 = or i1 %275, %276
  br i1 %279, label %281, label %389

; <label>:281:                                    ; preds = %222
  ret void

; <label>:282:                                    ; preds = %194
  %283 = load i32, i32* @x.355
  %284 = load i32, i32* @y.356
  %285 = sub i32 0, 1
  %286 = add i32 %283, %285
  %287 = sub i32 %283, 1
  %288 = mul i32 %283, %286
  %289 = urem i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %284, 10
  %292 = and i1 %290, %291
  %293 = xor i1 %290, %291
  %294 = or i1 %292, %293
  %295 = or i1 %290, %291
  br i1 %294, label %296, label %479

; <label>:296:                                    ; preds = %282, %479
  %297 = load i8*, i8** %34, align 8
  %298 = load i32, i32* %35, align 4
  %299 = insertvalue { i8*, i32 } undef, i8* %297, 0
  %300 = insertvalue { i8*, i32 } %299, i32 %298, 1
  %301 = load i32, i32* @x.355
  %302 = load i32, i32* @y.356
  %303 = add i32 %301, -2124556066
  %304 = sub i32 %303, 1
  %305 = sub i32 %304, -2124556066
  %306 = sub i32 %301, 1
  %307 = mul i32 %301, %305
  %308 = urem i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %302, 10
  %311 = and i1 %309, %310
  %312 = xor i1 %309, %310
  %313 = or i1 %311, %312
  %314 = or i1 %309, %310
  br i1 %313, label %315, label %479

; <label>:315:                                    ; preds = %296
  resume { i8*, i32 } %300

; <label>:316:                                    ; preds = %138
  %317 = landingpad { i8*, i32 }
          catch i8* null
  %318 = extractvalue { i8*, i32 } %317, 0
  call void @__clang_call_terminate(i8* %318) #10
  unreachable

; <label>:319:                                    ; preds = %193
  %320 = load i32, i32* @x.355
  %321 = load i32, i32* @y.356
  %322 = add i32 %320, -934002597
  %323 = sub i32 %322, 1
  %324 = sub i32 %323, -934002597
  %325 = sub i32 %320, 1
  %326 = mul i32 %320, %324
  %327 = urem i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %321, 10
  %330 = and i1 %328, %329
  %331 = xor i1 %328, %329
  %332 = or i1 %330, %331
  %333 = or i1 %328, %329
  br i1 %332, label %334, label %484

; <label>:334:                                    ; preds = %319, %484
  %335 = load i32, i32* @x.355
  %336 = load i32, i32* @y.356
  %337 = sub i32 0, 1
  %338 = add i32 %335, %337
  %339 = sub i32 %335, 1
  %340 = mul i32 %335, %338
  %341 = urem i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %336, 10
  %344 = xor i1 %342, true
  %345 = xor i1 %343, true
  %346 = xor i1 false, true
  %347 = and i1 %344, false
  %348 = and i1 %342, %346
  %349 = and i1 %345, false
  %350 = and i1 %343, %346
  %351 = or i1 %347, %348
  %352 = or i1 %349, %350
  %353 = xor i1 %351, %352
  %354 = or i1 %344, %345
  %355 = xor i1 %354, true
  %356 = or i1 false, %346
  %357 = and i1 %355, %356
  %358 = or i1 %353, %357
  %359 = or i1 %342, %343
  br i1 %358, label %360, label %484

; <label>:360:                                    ; preds = %334
  unreachable

; <label>:361:                                    ; preds = %28, %2
  %362 = alloca %"class.std::vector"*, align 8
  %363 = alloca i64*, align 8
  %364 = alloca i64, align 8
  %365 = alloca i64*, align 8
  %366 = alloca i64*, align 8
  %367 = alloca i8*
  %368 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %362, align 8
  store i64* %1, i64** %363, align 8
  %369 = load %"class.std::vector"*, %"class.std::vector"** %362, align 8
  %370 = call i64 @_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc(%"class.std::vector"* %369, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i32 0, i32 0))
  store i64 %370, i64* %364, align 8
  %371 = bitcast %"class.std::vector"* %369 to %"struct.std::_Vector_base"*
  %372 = load i64, i64* %364, align 8
  %373 = call i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base"* %371, i64 %372)
  store i64* %373, i64** %365, align 8
  %374 = load i64*, i64** %365, align 8
  store i64* %374, i64** %366, align 8
  %375 = bitcast %"class.std::vector"* %369 to %"struct.std::_Vector_base"*
  %376 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %375, i32 0, i32 0
  %377 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %376 to %"class.std::allocator.0"*
  %378 = load i64*, i64** %365, align 8
  %379 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"* %369) #3
  %380 = getelementptr inbounds i64, i64* %378, i64 %379
  %381 = load i64*, i64** %363, align 8
  %382 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %381) #3
  br label %28

; <label>:383:                                    ; preds = %122, %108
  br label %122

; <label>:384:                                    ; preds = %157, %142
  %385 = load i64*, i64** %32, align 8
  %386 = load i64*, i64** %33, align 8
  %387 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %388 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %387) #3
  br label %157

; <label>:389:                                    ; preds = %222, %195
  %390 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %391 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %390, i32 0, i32 0
  %392 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %391, i32 0, i32 0
  %393 = load i64*, i64** %392, align 8
  %394 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %395 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %394, i32 0, i32 0
  %396 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %395, i32 0, i32 1
  %397 = load i64*, i64** %396, align 8
  %398 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %399 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %398) #3
  call void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %393, i64* %397, %"class.std::allocator.0"* dereferenceable(1) %399)
  %400 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %401 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %402 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %401, i32 0, i32 0
  %403 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %402, i32 0, i32 0
  %404 = load i64*, i64** %403, align 8
  %405 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %406 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %405, i32 0, i32 0
  %407 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %406, i32 0, i32 2
  %408 = load i64*, i64** %407, align 8
  %409 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %410 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %409, i32 0, i32 0
  %411 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %410, i32 0, i32 0
  %412 = load i64*, i64** %411, align 8
  %413 = ptrtoint i64* %408 to i64
  %414 = ptrtoint i64* %412 to i64
  %415 = shl i64 %413, %414
  %416 = shl i64 %413, %414
  %417 = sub i64 0, -5746257941194257081
  %418 = sub i64 %417, %413
  %419 = add i64 %418, -5746257941194257081
  %420 = sub i64 0, %413
  %421 = add i64 %419, -2514721400769521052
  %422 = add i64 %421, %414
  %423 = sub i64 %422, -2514721400769521052
  %424 = add i64 %419, %414
  %425 = add i64 0, 8795654044017538926
  %426 = sub i64 %425, %413
  %427 = sub i64 %426, 8795654044017538926
  %428 = sub i64 0, %413
  %429 = sub i64 %427, -404750676661879599
  %430 = add i64 %429, %414
  %431 = add i64 %430, -404750676661879599
  %432 = add i64 %427, %414
  %433 = shl i64 %413, %414
  %434 = shl i64 %413, %414
  %435 = sub i64 %413, 7903945855953684304
  %436 = sub i64 %435, %414
  %437 = add i64 %436, 7903945855953684304
  %438 = sub i64 %413, %414
  %439 = mul i64 %437, %414
  %440 = add i64 %413, -1204678717013472874
  %441 = sub i64 %440, %414
  %442 = sub i64 %441, -1204678717013472874
  %443 = sub i64 %413, %414
  %444 = shl i64 %442, 8
  %445 = sub i64 0, 8
  %446 = add i64 %442, %445
  %447 = sub i64 %442, 8
  %448 = mul i64 %446, 8
  %449 = sub i64 %442, -1710782925709135826
  %450 = sub i64 %449, 8
  %451 = add i64 %450, -1710782925709135826
  %452 = sub i64 %442, 8
  %453 = mul i64 %451, 8
  %454 = sub i64 0, 2026118994936531031
  %455 = sub i64 %454, %442
  %456 = add i64 %455, 2026118994936531031
  %457 = sub i64 0, %442
  %458 = sub i64 0, %456
  %459 = sub i64 0, 8
  %460 = add i64 %458, %459
  %461 = sub i64 0, %460
  %462 = add i64 %456, 8
  %463 = shl i64 %442, 8
  %464 = sdiv exact i64 %442, 8
  call void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base"* %400, i64* %404, i64 %464)
  %465 = load i64*, i64** %32, align 8
  %466 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %467 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %466, i32 0, i32 0
  %468 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %467, i32 0, i32 0
  store i64* %465, i64** %468, align 8
  %469 = load i64*, i64** %33, align 8
  %470 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %471 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %470, i32 0, i32 0
  %472 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %471, i32 0, i32 1
  store i64* %469, i64** %472, align 8
  %473 = load i64*, i64** %32, align 8
  %474 = load i64, i64* %31, align 8
  %475 = getelementptr inbounds i64, i64* %473, i64 %474
  %476 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %477 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %476, i32 0, i32 0
  %478 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %477, i32 0, i32 2
  store i64* %475, i64** %478, align 8
  br label %222

; <label>:479:                                    ; preds = %296, %282
  %480 = load i8*, i8** %34, align 8
  %481 = load i32, i32* %35, align 4
  %482 = insertvalue { i8*, i32 } undef, i8* %480, 0
  %483 = insertvalue { i8*, i32 } %482, i32 %481, 1
  br label %296

; <label>:484:                                    ; preds = %334, %319
  br label %334
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxE9constructIxJxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.1"*, i64*, i64* dereferenceable(8)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = bitcast i64* %8 to i8*
  %10 = bitcast i8* %9 to i64*
  %11 = load i64*, i64** %6, align 8
  %12 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %11) #3
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc(%"class.std::vector"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.std::vector"*
  %8 = alloca %"class.std::vector"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %8, align 8
  store i64 %1, i64* %9, align 8
  store i8* %2, i8** %10, align 8
  %13 = load %"class.std::vector"*, %"class.std::vector"** %8, align 8
  store %"class.std::vector"* %13, %"class.std::vector"** %7
  %14 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %15 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector"* %14) #3
  %16 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %17 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"* %16) #3
  %18 = sub i64 %15, 3330282133996733549
  %19 = sub i64 %18, %17
  %20 = add i64 %19, 3330282133996733549
  %21 = sub i64 %15, %17
  store i64 %20, i64* %6
  %22 = load i64, i64* %9, align 8
  store i64 %22, i64* %5
  %23 = alloca i32
  store i32 1417282641, i32* %23
  %24 = alloca i64
  br label %25

; <label>:25:                                     ; preds = %3, %156
  %26 = load i32, i32* %23
  switch i32 %26, label %27 [
    i32 1417282641, label %28
    i32 839244117, label %33
    i32 -886026232, label %49
    i32 -1246854630, label %77
    i32 -1635998453, label %78
    i32 2055511481, label %93
    i32 826816818, label %99
    i32 923594722, label %115
    i32 -1074568060, label %145
    i32 1804803681, label %147
    i32 -1157797900, label %149
    i32 957388109, label %151
    i32 -333749339, label %153
  ]

; <label>:27:                                     ; preds = %25
  br label %156

; <label>:28:                                     ; preds = %25
  %29 = load volatile i64, i64* %6
  %30 = load volatile i64, i64* %5
  %31 = icmp ult i64 %29, %30
  %32 = select i1 %31, i32 839244117, i32 -1635998453
  store i32 %32, i32* %23
  br label %156

; <label>:33:                                     ; preds = %25
  %34 = load i32, i32* @x.359
  %35 = load i32, i32* @y.360
  %36 = add i32 %34, -1600310047
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, -1600310047
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -886026232, i32 957388109
  store i32 %48, i32* %23
  br label %156

; <label>:49:                                     ; preds = %25
  %50 = load i8*, i8** %10, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %50) #12
  %51 = load i32, i32* @x.359
  %52 = load i32, i32* @y.360
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -1246854630, i32 957388109
  store i32 %76, i32* %23
  br label %156

; <label>:77:                                     ; preds = %25
  unreachable

; <label>:78:                                     ; preds = %25
  %79 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %80 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"* %79) #3
  %81 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %82 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"* %81) #3
  store i64 %82, i64* %12, align 8
  %83 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %12, i64* dereferenceable(8) %9)
  %84 = load i64, i64* %83, align 8
  %85 = sub i64 0, %84
  %86 = sub i64 %80, %85
  %87 = add i64 %80, %84
  store i64 %86, i64* %11, align 8
  %88 = load i64, i64* %11, align 8
  %89 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %90 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"* %89) #3
  %91 = icmp ult i64 %88, %90
  %92 = select i1 %91, i32 826816818, i32 2055511481
  store i32 %92, i32* %23
  br label %156

; <label>:93:                                     ; preds = %25
  %94 = load i64, i64* %11, align 8
  %95 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %96 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector"* %95) #3
  %97 = icmp ugt i64 %94, %96
  %98 = select i1 %97, i32 826816818, i32 1804803681
  store i32 %98, i32* %23
  br label %156

; <label>:99:                                     ; preds = %25
  %100 = load i32, i32* @x.359
  %101 = load i32, i32* @y.360
  %102 = sub i32 %100, 663957556
  %103 = sub i32 %102, 1
  %104 = add i32 %103, 663957556
  %105 = sub i32 %100, 1
  %106 = mul i32 %100, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %101, 10
  %110 = and i1 %108, %109
  %111 = xor i1 %108, %109
  %112 = or i1 %110, %111
  %113 = or i1 %108, %109
  %114 = select i1 %112, i32 923594722, i32 -333749339
  store i32 %114, i32* %23
  br label %156

; <label>:115:                                    ; preds = %25
  %116 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %117 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector"* %116) #3
  store i64 %117, i64* %4
  %118 = load i32, i32* @x.359
  %119 = load i32, i32* @y.360
  %120 = sub i32 %118, -449502931
  %121 = sub i32 %120, 1
  %122 = add i32 %121, -449502931
  %123 = sub i32 %118, 1
  %124 = mul i32 %118, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %119, 10
  %128 = xor i1 %126, true
  %129 = xor i1 %127, true
  %130 = xor i1 false, true
  %131 = and i1 %128, false
  %132 = and i1 %126, %130
  %133 = and i1 %129, false
  %134 = and i1 %127, %130
  %135 = or i1 %131, %132
  %136 = or i1 %133, %134
  %137 = xor i1 %135, %136
  %138 = or i1 %128, %129
  %139 = xor i1 %138, true
  %140 = or i1 false, %130
  %141 = and i1 %139, %140
  %142 = or i1 %137, %141
  %143 = or i1 %126, %127
  %144 = select i1 %142, i32 -1074568060, i32 -333749339
  store i32 %144, i32* %23
  br label %156

; <label>:145:                                    ; preds = %25
  store i32 -1157797900, i32* %23
  %146 = load volatile i64, i64* %4
  store i64 %146, i64* %24
  br label %156

; <label>:147:                                    ; preds = %25
  %148 = load i64, i64* %11, align 8
  store i32 -1157797900, i32* %23
  store i64 %148, i64* %24
  br label %156

; <label>:149:                                    ; preds = %25
  %150 = load i64, i64* %24
  ret i64 %150

; <label>:151:                                    ; preds = %25
  %152 = load i8*, i8** %10, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %152) #12
  store i32 -886026232, i32* %23
  br label %156

; <label>:153:                                    ; preds = %25
  %154 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %155 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector"* %154) #3
  store i32 923594722, i32* %23
  br label %156

; <label>:156:                                    ; preds = %153, %151, %147, %145, %115, %99, %93, %78, %49, %33, %28, %27
  br label %25
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i64*
  %5 = alloca i64
  %6 = alloca %"struct.std::_Vector_base"*
  %7 = alloca %"struct.std::_Vector_base"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %7, align 8
  store i64 %1, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %7, align 8
  store %"struct.std::_Vector_base"* %9, %"struct.std::_Vector_base"** %6
  %10 = load i64, i64* %8, align 8
  store i64 %10, i64* %5
  %11 = alloca i32
  store i32 -1364844909, i32* %11
  %12 = alloca i64*
  br label %13

; <label>:13:                                     ; preds = %2, %158
  %14 = load i32, i32* %11
  switch i32 %14, label %15 [
    i32 -1364844909, label %16
    i32 -306174081, label %20
    i32 1522207553, label %36
    i32 99130496, label %69
    i32 1590404123, label %71
    i32 460557100, label %87
    i32 398555126, label %115
    i32 -757829180, label %116
    i32 1930135296, label %132
    i32 -1740927038, label %148
    i32 1212790029, label %150
    i32 5810232, label %156
    i32 163680598, label %157
  ]

; <label>:15:                                     ; preds = %13
  br label %158

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = icmp ne i64 %17, 0
  %19 = select i1 %18, i32 -306174081, i32 1590404123
  store i32 %19, i32* %11
  br label %158

; <label>:20:                                     ; preds = %13
  %21 = load i32, i32* @x.361
  %22 = load i32, i32* @y.362
  %23 = add i32 %21, 823771744
  %24 = sub i32 %23, 1
  %25 = sub i32 %24, 823771744
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  %35 = select i1 %33, i32 1522207553, i32 1212790029
  store i32 %35, i32* %11
  br label %158

; <label>:36:                                     ; preds = %13
  %37 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6
  %38 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %37, i32 0, i32 0
  %39 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %38 to %"class.std::allocator.0"*
  %40 = load i64, i64* %8, align 8
  %41 = call i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator.0"* dereferenceable(1) %39, i64 %40)
  store i64* %41, i64** %4
  %42 = load i32, i32* @x.361
  %43 = load i32, i32* @y.362
  %44 = sub i32 %42, 1910011620
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 1910011620
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 99130496, i32 1212790029
  store i32 %68, i32* %11
  br label %158

; <label>:69:                                     ; preds = %13
  store i32 -757829180, i32* %11
  %70 = load volatile i64*, i64** %4
  store i64* %70, i64** %12
  br label %158

; <label>:71:                                     ; preds = %13
  %72 = load i32, i32* @x.361
  %73 = load i32, i32* @y.362
  %74 = sub i32 %72, 1479333061
  %75 = sub i32 %74, 1
  %76 = add i32 %75, 1479333061
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  %86 = select i1 %84, i32 460557100, i32 5810232
  store i32 %86, i32* %11
  br label %158

; <label>:87:                                     ; preds = %13
  %88 = load i32, i32* @x.361
  %89 = load i32, i32* @y.362
  %90 = sub i32 %88, 61469343
  %91 = sub i32 %90, 1
  %92 = add i32 %91, 61469343
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = xor i1 %96, true
  %99 = xor i1 %97, true
  %100 = xor i1 true, true
  %101 = and i1 %98, true
  %102 = and i1 %96, %100
  %103 = and i1 %99, true
  %104 = and i1 %97, %100
  %105 = or i1 %101, %102
  %106 = or i1 %103, %104
  %107 = xor i1 %105, %106
  %108 = or i1 %98, %99
  %109 = xor i1 %108, true
  %110 = or i1 true, %100
  %111 = and i1 %109, %110
  %112 = or i1 %107, %111
  %113 = or i1 %96, %97
  %114 = select i1 %112, i32 398555126, i32 5810232
  store i32 %114, i32* %11
  br label %158

; <label>:115:                                    ; preds = %13
  store i32 -757829180, i32* %11
  store i64* null, i64** %12
  br label %158

; <label>:116:                                    ; preds = %13
  %117 = load i64*, i64** %12
  store i64* %117, i64** %3
  %118 = load i32, i32* @x.361
  %119 = load i32, i32* @y.362
  %120 = sub i32 0, 1
  %121 = add i32 %118, %120
  %122 = sub i32 %118, 1
  %123 = mul i32 %118, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %119, 10
  %127 = and i1 %125, %126
  %128 = xor i1 %125, %126
  %129 = or i1 %127, %128
  %130 = or i1 %125, %126
  %131 = select i1 %129, i32 1930135296, i32 163680598
  store i32 %131, i32* %11
  br label %158

; <label>:132:                                    ; preds = %13
  %133 = load i32, i32* @x.361
  %134 = load i32, i32* @y.362
  %135 = sub i32 %133, -718325081
  %136 = sub i32 %135, 1
  %137 = add i32 %136, -718325081
  %138 = sub i32 %133, 1
  %139 = mul i32 %133, %137
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %134, 10
  %143 = and i1 %141, %142
  %144 = xor i1 %141, %142
  %145 = or i1 %143, %144
  %146 = or i1 %141, %142
  %147 = select i1 %145, i32 -1740927038, i32 163680598
  store i32 %147, i32* %11
  br label %158

; <label>:148:                                    ; preds = %13
  %149 = load volatile i64*, i64** %3
  ret i64* %149

; <label>:150:                                    ; preds = %13
  %151 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6
  %152 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %151, i32 0, i32 0
  %153 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %152 to %"class.std::allocator.0"*
  %154 = load i64, i64* %8, align 8
  %155 = call i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator.0"* dereferenceable(1) %153, i64 %154)
  store i32 1522207553, i32* %11
  br label %158

; <label>:156:                                    ; preds = %13
  store i32 460557100, i32* %11
  br label %158

; <label>:157:                                    ; preds = %13
  store i32 1930135296, i32* %11
  br label %158

; <label>:158:                                    ; preds = %157, %156, %150, %132, %116, %115, %87, %71, %69, %36, %20, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8
  %8 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = ptrtoint i64* %7 to i64
  %13 = ptrtoint i64* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 8
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt34__uninitialized_move_if_noexcept_aIPxS0_SaIxEET0_T_S3_S2_RT1_(i64*, i64*, i64*, %"class.std::allocator.0"* dereferenceable(1)) #0 comdat {
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.0"*, align 8
  %9 = alloca %"class.std::move_iterator.31", align 8
  %10 = alloca %"class.std::move_iterator.31", align 8
  store i64* %0, i64** %5, align 8
  store i64* %1, i64** %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %8, align 8
  %11 = load i64*, i64** %5, align 8
  %12 = call i64* @_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_(i64* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %9, i32 0, i32 0
  store i64* %12, i64** %13, align 8
  %14 = load i64*, i64** %6, align 8
  %15 = call i64* @_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_(i64* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %10, i32 0, i32 0
  store i64* %15, i64** %16, align 8
  %17 = load i64*, i64** %7, align 8
  %18 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %9, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %10, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = call i64* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPxES1_xET0_T_S4_S3_RSaIT1_E(i64* %20, i64* %22, i64* %17, %"class.std::allocator.0"* dereferenceable(1) %18)
  ret i64* %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %4 to %"class.std::allocator.0"*
  ret %"class.std::allocator.0"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE7destroyIxEEvRS0_PT_(%"class.std::allocator.0"* dereferenceable(1), i64*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.0"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %3, align 8
  %6 = bitcast %"class.std::allocator.0"* %5 to %"class.__gnu_cxx::new_allocator.1"*
  %7 = load i64*, i64** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIxE7destroyIxEEvPT_(%"class.__gnu_cxx::new_allocator.1"* %6, i64* %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64*, i64*, %"class.std::allocator.0"* dereferenceable(1)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca %"class.std::allocator.0"*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store %"class.std::allocator.0"* %2, %"class.std::allocator.0"** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = load i64*, i64** %5, align 8
  call void @_ZSt8_DestroyIPxEvT_S1_(i64* %7, i64* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base"*, i64*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca i64*
  %7 = alloca i64**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.373
  %11 = load i32, i32* @y.374
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 1674687722, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %86
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1674687722, label %23
    i32 -930202575, label %31
    i32 1024567008, label %67
    i32 181390990, label %70
    i32 -728883560, label %78
    i32 1195403991, label %79
  ]

; <label>:22:                                     ; preds = %20
  br label %86

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 -930202575, i32 1195403991
  store i32 %30, i32* %19
  br label %86

; <label>:31:                                     ; preds = %20
  %32 = alloca %"struct.std::_Vector_base"*, align 8
  %33 = alloca i64*, align 8
  store i64** %33, i64*** %7
  %34 = alloca i64, align 8
  store i64* %34, i64** %6
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %32, align 8
  %35 = load volatile i64**, i64*** %7
  store i64* %1, i64** %35, align 8
  %36 = load volatile i64*, i64** %6
  store i64 %2, i64* %36, align 8
  %37 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %32, align 8
  store %"struct.std::_Vector_base"* %37, %"struct.std::_Vector_base"** %5
  %38 = load volatile i64**, i64*** %7
  %39 = load i64*, i64** %38, align 8
  %40 = icmp ne i64* %39, null
  store i1 %40, i1* %4
  %41 = load i32, i32* @x.373
  %42 = load i32, i32* @y.374
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 1024567008, i32 1195403991
  store i32 %66, i32* %19
  br label %86

; <label>:67:                                     ; preds = %20
  %68 = load volatile i1, i1* %4
  %69 = select i1 %68, i32 181390990, i32 -728883560
  store i32 %69, i32* %19
  br label %86

; <label>:70:                                     ; preds = %20
  %71 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %72 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %71, i32 0, i32 0
  %73 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %72 to %"class.std::allocator.0"*
  %74 = load volatile i64**, i64*** %7
  %75 = load i64*, i64** %74, align 8
  %76 = load volatile i64*, i64** %6
  %77 = load i64, i64* %76, align 8
  call void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator.0"* dereferenceable(1) %73, i64* %75, i64 %77)
  store i32 -728883560, i32* %19
  br label %86

; <label>:78:                                     ; preds = %20
  ret void

; <label>:79:                                     ; preds = %20
  %80 = alloca %"struct.std::_Vector_base"*, align 8
  %81 = alloca i64*, align 8
  %82 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %80, align 8
  store i64* %1, i64** %81, align 8
  store i64 %2, i64* %82, align 8
  %83 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %80, align 8
  %84 = load i64*, i64** %81, align 8
  %85 = icmp ne i64* %84, null
  store i32 -930202575, i32* %19
  br label %86

; <label>:86:                                     ; preds = %79, %70, %67, %31, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIxEE8max_sizeERKS0_(%"class.std::allocator.0"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIxEE8max_sizeERKS0_(%"class.std::allocator.0"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.377
  %6 = load i32, i32* @y.378
  %7 = add i32 %5, -368033310
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -368033310
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -577139999, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -577139999, label %19
    i32 -1498225266, label %39
    i32 -231446635, label %59
    i32 -109956862, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1498225266, i32 -109956862
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %40, align 8
  %41 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %40, align 8
  %42 = bitcast %"class.std::allocator.0"* %41 to %"class.__gnu_cxx::new_allocator.1"*
  %43 = call i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.1"* %42) #3
  store i64 %43, i64* %2
  %44 = load i32, i32* @x.377
  %45 = load i32, i32* @y.378
  %46 = add i32 %44, 811623723
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 811623723
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -231446635, i32 -109956862
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i64, i64* %2
  ret i64 %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %62, align 8
  %63 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %62, align 8
  %64 = bitcast %"class.std::allocator.0"* %63 to %"class.__gnu_cxx::new_allocator.1"*
  %65 = call i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.1"* %64) #3
  store i32 -1498225266, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %4 to %"class.std::allocator.0"*
  ret %"class.std::allocator.0"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.1"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator.0"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.0"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %3, align 8
  %6 = bitcast %"class.std::allocator.0"* %5 to %"class.__gnu_cxx::new_allocator.1"*
  %7 = load i64, i64* %4, align 8
  %8 = call i64* @_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.1"* %6, i64 %7, i8* null)
  ret i64* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.1"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.385
  %9 = load i32, i32* @y.386
  %10 = add i32 %8, -773244104
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -773244104
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -1982365569, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %117
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1982365569, label %22
    i32 976438125, label %42
    i32 2048871625, label %67
    i32 -1494795326, label %70
    i32 -904955745, label %85
    i32 19357366, label %101
    i32 245053670, label %102
    i32 -1461140330, label %108
    i32 45838985, label %116
  ]

; <label>:21:                                     ; preds = %19
  br label %117

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 976438125, i32 -1461140330
  store i32 %41, i32* %18
  br label %117

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %44 = alloca i64, align 8
  store i64* %44, i64** %5
  %45 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %43, align 8
  %46 = load volatile i64*, i64** %5
  store i64 %1, i64* %46, align 8
  store i8* %2, i8** %45, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %43, align 8
  %48 = load volatile i64*, i64** %5
  %49 = load i64, i64* %48, align 8
  %50 = call i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.1"* %47) #3
  %51 = icmp ugt i64 %49, %50
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.385
  %53 = load i32, i32* @y.386
  %54 = sub i32 %52, -852524676
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -852524676
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 2048871625, i32 -1461140330
  store i32 %66, i32* %18
  br label %117

; <label>:67:                                     ; preds = %19
  %68 = load volatile i1, i1* %4
  %69 = select i1 %68, i32 -1494795326, i32 245053670
  store i32 %69, i32* %18
  br label %117

; <label>:70:                                     ; preds = %19
  %71 = load i32, i32* @x.385
  %72 = load i32, i32* @y.386
  %73 = sub i32 0, 1
  %74 = add i32 %71, %73
  %75 = sub i32 %71, 1
  %76 = mul i32 %71, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %72, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  %84 = select i1 %82, i32 -904955745, i32 45838985
  store i32 %84, i32* %18
  br label %117

; <label>:85:                                     ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #12
  %86 = load i32, i32* @x.385
  %87 = load i32, i32* @y.386
  %88 = add i32 %86, 300286332
  %89 = sub i32 %88, 1
  %90 = sub i32 %89, 300286332
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = and i1 %94, %95
  %97 = xor i1 %94, %95
  %98 = or i1 %96, %97
  %99 = or i1 %94, %95
  %100 = select i1 %98, i32 19357366, i32 45838985
  store i32 %100, i32* %18
  br label %117

; <label>:101:                                    ; preds = %19
  unreachable

; <label>:102:                                    ; preds = %19
  %103 = load volatile i64*, i64** %5
  %104 = load i64, i64* %103, align 8
  %105 = mul i64 %104, 8
  %106 = call i8* @_Znwm(i64 %105)
  %107 = bitcast i8* %106 to i64*
  ret i64* %107

; <label>:108:                                    ; preds = %19
  %109 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %110 = alloca i64, align 8
  %111 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %109, align 8
  store i64 %1, i64* %110, align 8
  store i8* %2, i8** %111, align 8
  %112 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %109, align 8
  %113 = load i64, i64* %110, align 8
  %114 = call i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.1"* %112) #3
  %115 = icmp ugt i64 %113, %114
  store i32 976438125, i32* %18
  br label %117

; <label>:116:                                    ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 -904955745, i32* %18
  br label %117

; <label>:117:                                    ; preds = %116, %108, %85, %70, %67, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPxES1_xET0_T_S4_S3_RSaIT1_E(i64*, i64*, i64*, %"class.std::allocator.0"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.31", align 8
  %6 = alloca %"class.std::move_iterator.31", align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.0"*, align 8
  %9 = alloca %"class.std::move_iterator.31", align 8
  %10 = alloca %"class.std::move_iterator.31", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %5, i32 0, i32 0
  store i64* %0, i64** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %6, i32 0, i32 0
  store i64* %1, i64** %12, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.31"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.31"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.31"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.31"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load i64*, i64** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %9, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %10, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = call i64* @_ZSt18uninitialized_copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64* %19, i64* %21, i64* %17)
  ret i64* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_(i64*) #0 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.389
  %6 = load i32, i32* @y.390
  %7 = sub i32 %5, 2059207558
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 2059207558
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -702770620, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -702770620, label %19
    i32 -1973264566, label %39
    i32 -1672644715, label %60
    i32 1227318752, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1973264566, i32 1227318752
  store i32 %38, i32* %15
  br label %68

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator.31", align 8
  %41 = alloca i64*, align 8
  store i64* %0, i64** %41, align 8
  %42 = load i64*, i64** %41, align 8
  call void @_ZNSt13move_iteratorIPxEC2ES0_(%"class.std::move_iterator.31"* %40, i64* %42)
  %43 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %40, i32 0, i32 0
  %44 = load i64*, i64** %43, align 8
  store i64* %44, i64** %2
  %45 = load i32, i32* @x.389
  %46 = load i32, i32* @y.390
  %47 = sub i32 %45, 1876467275
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 1876467275
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -1672644715, i32 1227318752
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile i64*, i64** %2
  ret i64* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::move_iterator.31", align 8
  %64 = alloca i64*, align 8
  store i64* %0, i64** %64, align 8
  %65 = load i64*, i64** %64, align 8
  call void @_ZNSt13move_iteratorIPxEC2ES0_(%"class.std::move_iterator.31"* %63, i64* %65)
  %66 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %63, i32 0, i32 0
  %67 = load i64*, i64** %66, align 8
  store i32 -1973264566, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt18uninitialized_copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.31", align 8
  %5 = alloca %"class.std::move_iterator.31", align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.31", align 8
  %9 = alloca %"class.std::move_iterator.31", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %4, i32 0, i32 0
  store i64* %0, i64** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %5, i32 0, i32 0
  store i64* %1, i64** %11, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.31"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.31"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.31"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.31"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load i64*, i64** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %8, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %9, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = call i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPxES3_EET0_T_S6_S5_(i64* %18, i64* %20, i64* %16)
  ret i64* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPxES3_EET0_T_S6_S5_(i64*, i64*, i64*) #0 comdat align 2 {
  %4 = alloca %"class.std::move_iterator.31", align 8
  %5 = alloca %"class.std::move_iterator.31", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.std::move_iterator.31", align 8
  %8 = alloca %"class.std::move_iterator.31", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %4, i32 0, i32 0
  store i64* %0, i64** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %5, i32 0, i32 0
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %6, align 8
  %11 = bitcast %"class.std::move_iterator.31"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.31"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.std::move_iterator.31"* %8 to i8*
  %14 = bitcast %"class.std::move_iterator.31"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load i64*, i64** %6, align 8
  %16 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %7, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = call i64* @_ZSt4copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64* %17, i64* %19, i64* %15)
  ret i64* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt4copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.31", align 8
  %5 = alloca %"class.std::move_iterator.31", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.std::move_iterator.31", align 8
  %8 = alloca %"class.std::move_iterator.31", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %4, i32 0, i32 0
  store i64* %0, i64** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %5, i32 0, i32 0
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %6, align 8
  %11 = bitcast %"class.std::move_iterator.31"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.31"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %7, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = call i64* @_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_(i64* %14)
  %16 = bitcast %"class.std::move_iterator.31"* %8 to i8*
  %17 = bitcast %"class.std::move_iterator.31"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = call i64* @_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_(i64* %19)
  %21 = load i64*, i64** %6, align 8
  %22 = call i64* @_ZSt14__copy_move_a2ILb1EPxS0_ET1_T0_S2_S1_(i64* %15, i64* %20, i64* %21)
  ret i64* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt14__copy_move_a2ILb1EPxS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %7)
  %9 = load i64*, i64** %5, align 8
  %10 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %9)
  %11 = load i64*, i64** %6, align 8
  %12 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %11)
  %13 = call i64* @_ZSt13__copy_move_aILb1EPxS0_ET1_T0_S2_S1_(i64* %8, i64* %10, i64* %12)
  ret i64* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_(i64*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.31", align 8
  %3 = alloca %"class.std::move_iterator.31", align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %2, i32 0, i32 0
  store i64* %0, i64** %4, align 8
  %5 = bitcast %"class.std::move_iterator.31"* %3 to i8*
  %6 = bitcast %"class.std::move_iterator.31"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %3, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = call i64* @_ZNSt10_Iter_baseISt13move_iteratorIPxELb1EE7_S_baseES2_(i64* %8)
  ret i64* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt13__copy_move_aILb1EPxS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.401
  %8 = load i32, i32* @y.402
  %9 = sub i32 %7, 256804101
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 256804101
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -539416262, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %63
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -539416262, label %21
    i32 1069412474, label %29
    i32 331388994, label %52
    i32 -2127497530, label %54
  ]

; <label>:20:                                     ; preds = %18
  br label %63

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 1069412474, i32 -2127497530
  store i32 %28, i32* %17
  br label %63

; <label>:29:                                     ; preds = %18
  %30 = alloca i64*, align 8
  %31 = alloca i64*, align 8
  %32 = alloca i64*, align 8
  %33 = alloca i8, align 1
  store i64* %0, i64** %30, align 8
  store i64* %1, i64** %31, align 8
  store i64* %2, i64** %32, align 8
  store i8 1, i8* %33, align 1
  %34 = load i64*, i64** %30, align 8
  %35 = load i64*, i64** %31, align 8
  %36 = load i64*, i64** %32, align 8
  %37 = call i64* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64* %34, i64* %35, i64* %36)
  store i64* %37, i64** %4
  %38 = load i32, i32* @x.401
  %39 = load i32, i32* @y.402
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 331388994, i32 -2127497530
  store i32 %51, i32* %17
  br label %63

; <label>:52:                                     ; preds = %18
  %53 = load volatile i64*, i64** %4
  ret i64* %53

; <label>:54:                                     ; preds = %18
  %55 = alloca i64*, align 8
  %56 = alloca i64*, align 8
  %57 = alloca i64*, align 8
  %58 = alloca i8, align 1
  store i64* %0, i64** %55, align 8
  store i64* %1, i64** %56, align 8
  store i64* %2, i64** %57, align 8
  store i8 1, i8* %58, align 1
  %59 = load i64*, i64** %55, align 8
  %60 = load i64*, i64** %56, align 8
  %61 = load i64*, i64** %57, align 8
  %62 = call i64* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64* %59, i64* %60, i64* %61)
  store i32 1069412474, i32* %17
  br label %63

; <label>:63:                                     ; preds = %54, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64*) #0 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  %4 = call i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64* %3)
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64*, i64*, i64*) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i64**
  %7 = alloca i64**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.405
  %11 = load i32, i32* @y.406
  %12 = sub i32 %10, 1641494991
  %13 = sub i32 %12, 1
  %14 = add i32 %13, 1641494991
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -22553694, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %216
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -22553694, label %24
    i32 -682115272, label %32
    i32 -975237002, label %80
    i32 1082515133, label %83
    i32 1815872067, label %111
    i32 1759360341, label %135
    i32 1188138959, label %136
    i32 830273203, label %142
    i32 -315315466, label %189
  ]

; <label>:23:                                     ; preds = %21
  br label %216

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 -682115272, i32 830273203
  store i32 %31, i32* %20
  br label %216

; <label>:32:                                     ; preds = %21
  %33 = alloca i64*, align 8
  store i64** %33, i64*** %7
  %34 = alloca i64*, align 8
  %35 = alloca i64*, align 8
  store i64** %35, i64*** %6
  %36 = alloca i64, align 8
  store i64* %36, i64** %5
  %37 = load volatile i64**, i64*** %7
  store i64* %0, i64** %37, align 8
  store i64* %1, i64** %34, align 8
  %38 = load volatile i64**, i64*** %6
  store i64* %2, i64** %38, align 8
  %39 = load i64*, i64** %34, align 8
  %40 = load volatile i64**, i64*** %7
  %41 = load i64*, i64** %40, align 8
  %42 = ptrtoint i64* %39 to i64
  %43 = ptrtoint i64* %41 to i64
  %44 = sub i64 %42, -2908044446297435181
  %45 = sub i64 %44, %43
  %46 = add i64 %45, -2908044446297435181
  %47 = sub i64 %42, %43
  %48 = sdiv exact i64 %46, 8
  %49 = load volatile i64*, i64** %5
  store i64 %48, i64* %49, align 8
  %50 = load volatile i64*, i64** %5
  %51 = load i64, i64* %50, align 8
  %52 = icmp ne i64 %51, 0
  store i1 %52, i1* %4
  %53 = load i32, i32* @x.405
  %54 = load i32, i32* @y.406
  %55 = sub i32 %53, 583011495
  %56 = sub i32 %55, 1
  %57 = add i32 %56, 583011495
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 false, true
  %66 = and i1 %63, false
  %67 = and i1 %61, %65
  %68 = and i1 %64, false
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 false, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 -975237002, i32 830273203
  store i32 %79, i32* %20
  br label %216

; <label>:80:                                     ; preds = %21
  %81 = load volatile i1, i1* %4
  %82 = select i1 %81, i32 1082515133, i32 1188138959
  store i32 %82, i32* %20
  br label %216

; <label>:83:                                     ; preds = %21
  %84 = load i32, i32* @x.405
  %85 = load i32, i32* @y.406
  %86 = add i32 %84, 1367694338
  %87 = sub i32 %86, 1
  %88 = sub i32 %87, 1367694338
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = xor i1 %92, true
  %95 = xor i1 %93, true
  %96 = xor i1 true, true
  %97 = and i1 %94, true
  %98 = and i1 %92, %96
  %99 = and i1 %95, true
  %100 = and i1 %93, %96
  %101 = or i1 %97, %98
  %102 = or i1 %99, %100
  %103 = xor i1 %101, %102
  %104 = or i1 %94, %95
  %105 = xor i1 %104, true
  %106 = or i1 true, %96
  %107 = and i1 %105, %106
  %108 = or i1 %103, %107
  %109 = or i1 %92, %93
  %110 = select i1 %108, i32 1815872067, i32 -315315466
  store i32 %110, i32* %20
  br label %216

; <label>:111:                                    ; preds = %21
  %112 = load volatile i64**, i64*** %6
  %113 = load i64*, i64** %112, align 8
  %114 = bitcast i64* %113 to i8*
  %115 = load volatile i64**, i64*** %7
  %116 = load i64*, i64** %115, align 8
  %117 = bitcast i64* %116 to i8*
  %118 = load volatile i64*, i64** %5
  %119 = load i64, i64* %118, align 8
  %120 = mul i64 8, %119
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %114, i8* %117, i64 %120, i32 8, i1 false)
  %121 = load i32, i32* @x.405
  %122 = load i32, i32* @y.406
  %123 = sub i32 0, 1
  %124 = add i32 %121, %123
  %125 = sub i32 %121, 1
  %126 = mul i32 %121, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %122, 10
  %130 = and i1 %128, %129
  %131 = xor i1 %128, %129
  %132 = or i1 %130, %131
  %133 = or i1 %128, %129
  %134 = select i1 %132, i32 1759360341, i32 -315315466
  store i32 %134, i32* %20
  br label %216

; <label>:135:                                    ; preds = %21
  store i32 1188138959, i32* %20
  br label %216

; <label>:136:                                    ; preds = %21
  %137 = load volatile i64**, i64*** %6
  %138 = load i64*, i64** %137, align 8
  %139 = load volatile i64*, i64** %5
  %140 = load i64, i64* %139, align 8
  %141 = getelementptr inbounds i64, i64* %138, i64 %140
  ret i64* %141

; <label>:142:                                    ; preds = %21
  %143 = alloca i64*, align 8
  %144 = alloca i64*, align 8
  %145 = alloca i64*, align 8
  %146 = alloca i64, align 8
  store i64* %0, i64** %143, align 8
  store i64* %1, i64** %144, align 8
  store i64* %2, i64** %145, align 8
  %147 = load i64*, i64** %144, align 8
  %148 = load i64*, i64** %143, align 8
  %149 = ptrtoint i64* %147 to i64
  %150 = ptrtoint i64* %148 to i64
  %151 = add i64 %149, -550873796381606198
  %152 = sub i64 %151, %150
  %153 = sub i64 %152, -550873796381606198
  %154 = sub i64 %149, %150
  %155 = mul i64 %153, %150
  %156 = sub i64 %149, -8405595597750845259
  %157 = sub i64 %156, %150
  %158 = add i64 %157, -8405595597750845259
  %159 = sub i64 %149, %150
  %160 = mul i64 %158, %150
  %161 = sub i64 0, -1483149037760009923
  %162 = sub i64 %161, %149
  %163 = add i64 %162, -1483149037760009923
  %164 = sub i64 0, %149
  %165 = sub i64 %163, -6070960153339195611
  %166 = add i64 %165, %150
  %167 = add i64 %166, -6070960153339195611
  %168 = add i64 %163, %150
  %169 = shl i64 %149, %150
  %170 = shl i64 %149, %150
  %171 = sub i64 %149, -7076126667408946534
  %172 = sub i64 %171, %150
  %173 = add i64 %172, -7076126667408946534
  %174 = sub i64 %149, %150
  %175 = add i64 %173, 8354738167365710610
  %176 = sub i64 %175, 8
  %177 = sub i64 %176, 8354738167365710610
  %178 = sub i64 %173, 8
  %179 = mul i64 %177, 8
  %180 = shl i64 %173, 8
  %181 = add i64 %173, 5233248597189849290
  %182 = sub i64 %181, 8
  %183 = sub i64 %182, 5233248597189849290
  %184 = sub i64 %173, 8
  %185 = mul i64 %183, 8
  %186 = sdiv exact i64 %173, 8
  store i64 %186, i64* %146, align 8
  %187 = load i64, i64* %146, align 8
  %188 = icmp ne i64 %187, 0
  store i32 -682115272, i32* %20
  br label %216

; <label>:189:                                    ; preds = %21
  %190 = load volatile i64**, i64*** %6
  %191 = load i64*, i64** %190, align 8
  %192 = bitcast i64* %191 to i8*
  %193 = load volatile i64**, i64*** %7
  %194 = load i64*, i64** %193, align 8
  %195 = bitcast i64* %194 to i8*
  %196 = load volatile i64*, i64** %5
  %197 = load i64, i64* %196, align 8
  %198 = sub i64 0, %197
  %199 = add i64 8, %198
  %200 = sub i64 8, %197
  %201 = mul i64 %199, %197
  %202 = sub i64 8, -8554046958586667336
  %203 = sub i64 %202, %197
  %204 = add i64 %203, -8554046958586667336
  %205 = sub i64 8, %197
  %206 = mul i64 %204, %197
  %207 = sub i64 0, 8
  %208 = add i64 0, %207
  %209 = sub i64 0, 8
  %210 = sub i64 0, %208
  %211 = sub i64 0, %197
  %212 = add i64 %210, %211
  %213 = sub i64 0, %212
  %214 = add i64 %208, %197
  %215 = mul i64 8, %197
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %192, i8* %195, i64 %215, i32 8, i1 false)
  store i32 1815872067, i32* %20
  br label %216

; <label>:216:                                    ; preds = %189, %142, %135, %111, %83, %80, %32, %24, %23
  br label %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #6

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64*) #5 comdat align 2 {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseISt13move_iteratorIPxELb1EE7_S_baseES2_(i64*) #0 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.31", align 8
  %3 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %2, i32 0, i32 0
  store i64* %0, i64** %3, align 8
  %4 = call i64* @_ZNKSt13move_iteratorIPxE4baseEv(%"class.std::move_iterator.31"* %2)
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt13move_iteratorIPxE4baseEv(%"class.std::move_iterator.31"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.31"*, align 8
  store %"class.std::move_iterator.31"* %0, %"class.std::move_iterator.31"** %2, align 8
  %3 = load %"class.std::move_iterator.31"*, %"class.std::move_iterator.31"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPxEC2ES0_(%"class.std::move_iterator.31"*, i64*) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.413
  %6 = load i32, i32* @y.414
  %7 = add i32 %5, -143488338
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -143488338
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -794816769, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %55
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -794816769, label %19
    i32 1929651076, label %27
    i32 719486176, label %48
    i32 1732201455, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %55

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1929651076, i32 1732201455
  store i32 %26, i32* %15
  br label %55

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.31"*, align 8
  %29 = alloca i64*, align 8
  store %"class.std::move_iterator.31"* %0, %"class.std::move_iterator.31"** %28, align 8
  store i64* %1, i64** %29, align 8
  %30 = load %"class.std::move_iterator.31"*, %"class.std::move_iterator.31"** %28, align 8
  %31 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %30, i32 0, i32 0
  %32 = load i64*, i64** %29, align 8
  store i64* %32, i64** %31, align 8
  %33 = load i32, i32* @x.413
  %34 = load i32, i32* @y.414
  %35 = sub i32 %33, -607681722
  %36 = sub i32 %35, 1
  %37 = add i32 %36, -607681722
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 719486176, i32 1732201455
  store i32 %47, i32* %15
  br label %55

; <label>:48:                                     ; preds = %16
  ret void

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::move_iterator.31"*, align 8
  %51 = alloca i64*, align 8
  store %"class.std::move_iterator.31"* %0, %"class.std::move_iterator.31"** %50, align 8
  store i64* %1, i64** %51, align 8
  %52 = load %"class.std::move_iterator.31"*, %"class.std::move_iterator.31"** %50, align 8
  %53 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %52, i32 0, i32 0
  %54 = load i64*, i64** %51, align 8
  store i64* %54, i64** %53, align 8
  store i32 1929651076, i32* %15
  br label %55

; <label>:55:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxE7destroyIxEEvPT_(%"class.__gnu_cxx::new_allocator.1"*, i64*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %4 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPxEvT_S1_(i64*, i64*) #0 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load i64*, i64** %3, align 8
  %6 = load i64*, i64** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i64* %5, i64* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i64*, i64*) #5 comdat align 2 {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator.0"* dereferenceable(1), i64*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.0"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %4, align 8
  %8 = bitcast %"class.std::allocator.0"* %7 to %"class.__gnu_cxx::new_allocator.1"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator.1"* %8, i64* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator.1"*, i64*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.423
  %7 = load i32, i32* @y.424
  %8 = add i32 %6, -2014033817
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -2014033817
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1187676075, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1187676075, label %20
    i32 -881528653, label %40
    i32 -1644228554, label %62
    i32 -197416349, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -881528653, i32 -197416349
  store i32 %39, i32* %16
  br label %70

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %42 = alloca i64*, align 8
  %43 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %41, align 8
  store i64* %1, i64** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %41, align 8
  %45 = load i64*, i64** %42, align 8
  %46 = bitcast i64* %45 to i8*
  call void @_ZdlPv(i8* %46) #3
  %47 = load i32, i32* @x.423
  %48 = load i32, i32* @y.424
  %49 = sub i32 %47, -945260266
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -945260266
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -1644228554, i32 -197416349
  store i32 %61, i32* %16
  br label %70

; <label>:62:                                     ; preds = %17
  ret void

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %65 = alloca i64*, align 8
  %66 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %64, align 8
  store i64* %1, i64** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %64, align 8
  %68 = load i64*, i64** %65, align 8
  %69 = bitcast i64* %68 to i8*
  call void @_ZdlPv(i8* %69) #3
  store i32 -881528653, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEE12emplace_backIJdEEEvDpOT_(%"class.std::vector.3"*, double* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca double*
  %4 = alloca double*
  %5 = alloca %"class.std::vector.3"*
  %6 = alloca %"class.std::vector.3"*, align 8
  %7 = alloca double*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %6, align 8
  store double* %1, double** %7, align 8
  %8 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  store %"class.std::vector.3"* %8, %"class.std::vector.3"** %5
  %9 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %10 = bitcast %"class.std::vector.3"* %9 to %"struct.std::_Vector_base.4"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load double*, double** %12, align 8
  store double* %13, double** %4
  %14 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %15 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load double*, double** %17, align 8
  store double* %18, double** %3
  %19 = alloca i32
  store i32 -1372741876, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %111
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1372741876, label %23
    i32 2058650190, label %28
    i32 800896830, label %46
    i32 -1732424849, label %74
    i32 -1470450713, label %105
    i32 1776940001, label %106
    i32 -1512001679, label %107
  ]

; <label>:22:                                     ; preds = %20
  br label %111

; <label>:23:                                     ; preds = %20
  %24 = load volatile double*, double** %4
  %25 = load volatile double*, double** %3
  %26 = icmp ne double* %24, %25
  %27 = select i1 %26, i32 2058650190, i32 800896830
  store i32 %27, i32* %19
  br label %111

; <label>:28:                                     ; preds = %20
  %29 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %30 = bitcast %"class.std::vector.3"* %29 to %"struct.std::_Vector_base.4"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %31 to %"class.std::allocator.5"*
  %33 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %34 = bitcast %"class.std::vector.3"* %33 to %"struct.std::_Vector_base.4"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load double*, double** %36, align 8
  %38 = load double*, double** %7, align 8
  %39 = call dereferenceable(8) double* @_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE(double* dereferenceable(8) %38) #3
  call void @_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1) %32, double* %37, double* dereferenceable(8) %39)
  %40 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %41 = bitcast %"class.std::vector.3"* %40 to %"struct.std::_Vector_base.4"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %42, i32 0, i32 1
  %44 = load double*, double** %43, align 8
  %45 = getelementptr inbounds double, double* %44, i32 1
  store double* %45, double** %43, align 8
  store i32 1776940001, i32* %19
  br label %111

; <label>:46:                                     ; preds = %20
  %47 = load i32, i32* @x.425
  %48 = load i32, i32* @y.426
  %49 = sub i32 %47, -845566414
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -845566414
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -1732424849, i32 -1512001679
  store i32 %73, i32* %19
  br label %111

; <label>:74:                                     ; preds = %20
  %75 = load double*, double** %7, align 8
  %76 = call dereferenceable(8) double* @_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE(double* dereferenceable(8) %75) #3
  %77 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  call void @_ZNSt6vectorIdSaIdEE19_M_emplace_back_auxIJdEEEvDpOT_(%"class.std::vector.3"* %77, double* dereferenceable(8) %76)
  %78 = load i32, i32* @x.425
  %79 = load i32, i32* @y.426
  %80 = add i32 %78, -807448359
  %81 = sub i32 %80, 1
  %82 = sub i32 %81, -807448359
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 false, true
  %91 = and i1 %88, false
  %92 = and i1 %86, %90
  %93 = and i1 %89, false
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 false, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  %104 = select i1 %102, i32 -1470450713, i32 -1512001679
  store i32 %104, i32* %19
  br label %111

; <label>:105:                                    ; preds = %20
  store i32 1776940001, i32* %19
  br label %111

; <label>:106:                                    ; preds = %20
  ret void

; <label>:107:                                    ; preds = %20
  %108 = load double*, double** %7, align 8
  %109 = call dereferenceable(8) double* @_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE(double* dereferenceable(8) %108) #3
  %110 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  call void @_ZNSt6vectorIdSaIdEE19_M_emplace_back_auxIJdEEEvDpOT_(%"class.std::vector.3"* %110, double* dereferenceable(8) %109)
  store i32 -1732424849, i32* %19
  br label %111

; <label>:111:                                    ; preds = %107, %105, %74, %46, %28, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double* @_ZSt4moveIRdEONSt16remove_referenceIT_E4typeEOS2_(double* dereferenceable(8)) #5 comdat {
  %2 = alloca double*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.427
  %6 = load i32, i32* @y.428
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1806768932, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1806768932, label %18
    i32 -923718802, label %38
    i32 991508926, label %56
    i32 396065066, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -923718802, i32 396065066
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca double*, align 8
  store double* %0, double** %39, align 8
  %40 = load double*, double** %39, align 8
  store double* %40, double** %2
  %41 = load i32, i32* @x.427
  %42 = load i32, i32* @y.428
  %43 = sub i32 %41, -1735251031
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -1735251031
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 991508926, i32 396065066
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  %57 = load volatile double*, double** %2
  ret double* %57

; <label>:58:                                     ; preds = %15
  %59 = alloca double*, align 8
  store double* %0, double** %59, align 8
  %60 = load double*, double** %59, align 8
  store i32 -923718802, i32* %14
  br label %61

; <label>:61:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1), double*, double* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.5"*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %4, align 8
  %8 = bitcast %"class.std::allocator.5"* %7 to %"class.__gnu_cxx::new_allocator.6"*
  %9 = load double*, double** %5, align 8
  %10 = load double*, double** %6, align 8
  %11 = call dereferenceable(8) double* @_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE(double* dereferenceable(8) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"* %8, double* %9, double* dereferenceable(8) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double* @_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE(double* dereferenceable(8)) #5 comdat {
  %2 = alloca double*, align 8
  store double* %0, double** %2, align 8
  %3 = load double*, double** %2, align 8
  ret double* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEE19_M_emplace_back_auxIJdEEEvDpOT_(%"class.std::vector.3"*, double* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca double*, align 8
  %5 = alloca i64, align 8
  %6 = alloca double*, align 8
  %7 = alloca double*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store double* %1, double** %4, align 8
  %10 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc(%"class.std::vector.3"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %13 = load i64, i64* %5, align 8
  %14 = call double* @_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm(%"struct.std::_Vector_base.4"* %12, i64 %13)
  store double* %14, double** %6, align 8
  %15 = load double*, double** %6, align 8
  store double* %15, double** %7, align 8
  %16 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %17 to %"class.std::allocator.5"*
  %19 = load double*, double** %6, align 8
  %20 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* %10) #3
  %21 = getelementptr inbounds double, double* %19, i64 %20
  %22 = load double*, double** %4, align 8
  %23 = call dereferenceable(8) double* @_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE(double* dereferenceable(8) %22) #3
  invoke void @_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1) %18, double* %21, double* dereferenceable(8) %23)
          to label %24 unwind label %123

; <label>:24:                                     ; preds = %2
  %25 = load i32, i32* @x.433
  %26 = load i32, i32* @y.434
  %27 = sub i32 0, 1
  %28 = add i32 %25, %27
  %29 = sub i32 %25, 1
  %30 = mul i32 %25, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %26, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  br i1 %36, label %38, label %467

; <label>:38:                                     ; preds = %24, %467
  store double* null, double** %7, align 8
  %39 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %40 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %39, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %40, i32 0, i32 0
  %42 = load double*, double** %41, align 8
  %43 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %44, i32 0, i32 1
  %46 = load double*, double** %45, align 8
  %47 = load double*, double** %6, align 8
  %48 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %49 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %48) #3
  %50 = load i32, i32* @x.433
  %51 = load i32, i32* @y.434
  %52 = sub i32 %50, 399847735
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 399847735
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  br i1 %74, label %76, label %467

; <label>:76:                                     ; preds = %38
  %77 = invoke double* @_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_(double* %42, double* %46, double* %47, %"class.std::allocator.5"* dereferenceable(1) %49)
          to label %78 unwind label %123

; <label>:78:                                     ; preds = %76
  %79 = load i32, i32* @x.433
  %80 = load i32, i32* @y.434
  %81 = sub i32 %79, 439130040
  %82 = sub i32 %81, 1
  %83 = add i32 %82, 439130040
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  br i1 %91, label %93, label %479

; <label>:93:                                     ; preds = %78, %479
  store double* %77, double** %7, align 8
  %94 = load double*, double** %7, align 8
  %95 = getelementptr inbounds double, double* %94, i32 1
  store double* %95, double** %7, align 8
  %96 = load i32, i32* @x.433
  %97 = load i32, i32* @y.434
  %98 = sub i32 %96, 327510774
  %99 = sub i32 %98, 1
  %100 = add i32 %99, 327510774
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = xor i1 %104, true
  %107 = xor i1 %105, true
  %108 = xor i1 true, true
  %109 = and i1 %106, true
  %110 = and i1 %104, %108
  %111 = and i1 %107, true
  %112 = and i1 %105, %108
  %113 = or i1 %109, %110
  %114 = or i1 %111, %112
  %115 = xor i1 %113, %114
  %116 = or i1 %106, %107
  %117 = xor i1 %116, true
  %118 = or i1 true, %108
  %119 = and i1 %117, %118
  %120 = or i1 %115, %119
  %121 = or i1 %104, %105
  br i1 %120, label %122, label %479

; <label>:122:                                    ; preds = %93
  br label %360

; <label>:123:                                    ; preds = %76, %2
  %124 = load i32, i32* @x.433
  %125 = load i32, i32* @y.434
  %126 = sub i32 0, 1
  %127 = add i32 %124, %126
  %128 = sub i32 %124, 1
  %129 = mul i32 %124, %127
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %125, 10
  %133 = and i1 %131, %132
  %134 = xor i1 %131, %132
  %135 = or i1 %133, %134
  %136 = or i1 %131, %132
  br i1 %135, label %137, label %482

; <label>:137:                                    ; preds = %123, %482
  %138 = landingpad { i8*, i32 }
          catch i8* null
  %139 = extractvalue { i8*, i32 } %138, 0
  store i8* %139, i8** %8, align 8
  %140 = extractvalue { i8*, i32 } %138, 1
  store i32 %140, i32* %9, align 4
  %141 = load i32, i32* @x.433
  %142 = load i32, i32* @y.434
  %143 = sub i32 0, 1
  %144 = add i32 %141, %143
  %145 = sub i32 %141, 1
  %146 = mul i32 %141, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %142, 10
  %150 = xor i1 %148, true
  %151 = xor i1 %149, true
  %152 = xor i1 true, true
  %153 = and i1 %150, true
  %154 = and i1 %148, %152
  %155 = and i1 %151, true
  %156 = and i1 %149, %152
  %157 = or i1 %153, %154
  %158 = or i1 %155, %156
  %159 = xor i1 %157, %158
  %160 = or i1 %150, %151
  %161 = xor i1 %160, true
  %162 = or i1 true, %152
  %163 = and i1 %161, %162
  %164 = or i1 %159, %163
  %165 = or i1 %148, %149
  br i1 %164, label %166, label %482

; <label>:166:                                    ; preds = %137
  br label %167

; <label>:167:                                    ; preds = %166
  %168 = load i8*, i8** %8, align 8
  %169 = call i8* @__cxa_begin_catch(i8* %168) #3
  %170 = load double*, double** %7, align 8
  %171 = icmp ne double* %170, null
  br i1 %171, label %237, label %172

; <label>:172:                                    ; preds = %167
  %173 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %174 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %173, i32 0, i32 0
  %175 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %174 to %"class.std::allocator.5"*
  %176 = load double*, double** %6, align 8
  %177 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* %10) #3
  %178 = getelementptr inbounds double, double* %176, i64 %177
  invoke void @_ZNSt16allocator_traitsISaIdEE7destroyIdEEvRS0_PT_(%"class.std::allocator.5"* dereferenceable(1) %175, double* %178)
          to label %179 unwind label %180

; <label>:179:                                    ; preds = %172
  br label %272

; <label>:180:                                    ; preds = %317, %272, %270, %172
  %181 = load i32, i32* @x.433
  %182 = load i32, i32* @y.434
  %183 = add i32 %181, 2037488182
  %184 = sub i32 %183, 1
  %185 = sub i32 %184, 2037488182
  %186 = sub i32 %181, 1
  %187 = mul i32 %181, %185
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %182, 10
  %191 = xor i1 %189, true
  %192 = xor i1 %190, true
  %193 = xor i1 false, true
  %194 = and i1 %191, false
  %195 = and i1 %189, %193
  %196 = and i1 %192, false
  %197 = and i1 %190, %193
  %198 = or i1 %194, %195
  %199 = or i1 %196, %197
  %200 = xor i1 %198, %199
  %201 = or i1 %191, %192
  %202 = xor i1 %201, true
  %203 = or i1 false, %193
  %204 = and i1 %202, %203
  %205 = or i1 %200, %204
  %206 = or i1 %189, %190
  br i1 %205, label %207, label %486

; <label>:207:                                    ; preds = %180, %486
  %208 = landingpad { i8*, i32 }
          cleanup
  %209 = extractvalue { i8*, i32 } %208, 0
  store i8* %209, i8** %8, align 8
  %210 = extractvalue { i8*, i32 } %208, 1
  store i32 %210, i32* %9, align 4
  %211 = load i32, i32* @x.433
  %212 = load i32, i32* @y.434
  %213 = sub i32 0, 1
  %214 = add i32 %211, %213
  %215 = sub i32 %211, 1
  %216 = mul i32 %211, %214
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %212, 10
  %220 = xor i1 %218, true
  %221 = xor i1 %219, true
  %222 = xor i1 true, true
  %223 = and i1 %220, true
  %224 = and i1 %218, %222
  %225 = and i1 %221, true
  %226 = and i1 %219, %222
  %227 = or i1 %223, %224
  %228 = or i1 %225, %226
  %229 = xor i1 %227, %228
  %230 = or i1 %220, %221
  %231 = xor i1 %230, true
  %232 = or i1 true, %222
  %233 = and i1 %231, %232
  %234 = or i1 %229, %233
  %235 = or i1 %218, %219
  br i1 %234, label %236, label %486

; <label>:236:                                    ; preds = %207
  invoke void @__cxa_end_catch()
          to label %318 unwind label %409

; <label>:237:                                    ; preds = %167
  %238 = load i32, i32* @x.433
  %239 = load i32, i32* @y.434
  %240 = sub i32 0, 1
  %241 = add i32 %238, %240
  %242 = sub i32 %238, 1
  %243 = mul i32 %238, %241
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %239, 10
  %247 = and i1 %245, %246
  %248 = xor i1 %245, %246
  %249 = or i1 %247, %248
  %250 = or i1 %245, %246
  br i1 %249, label %251, label %490

; <label>:251:                                    ; preds = %237, %490
  %252 = load double*, double** %6, align 8
  %253 = load double*, double** %7, align 8
  %254 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %255 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %254) #3
  %256 = load i32, i32* @x.433
  %257 = load i32, i32* @y.434
  %258 = add i32 %256, 243945609
  %259 = sub i32 %258, 1
  %260 = sub i32 %259, 243945609
  %261 = sub i32 %256, 1
  %262 = mul i32 %256, %260
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %257, 10
  %266 = and i1 %264, %265
  %267 = xor i1 %264, %265
  %268 = or i1 %266, %267
  %269 = or i1 %264, %265
  br i1 %268, label %270, label %490

; <label>:270:                                    ; preds = %251
  invoke void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double* %252, double* %253, %"class.std::allocator.5"* dereferenceable(1) %255)
          to label %271 unwind label %180

; <label>:271:                                    ; preds = %270
  br label %272

; <label>:272:                                    ; preds = %271, %179
  %273 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %274 = load double*, double** %6, align 8
  %275 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.4"* %273, double* %274, i64 %275)
          to label %276 unwind label %180

; <label>:276:                                    ; preds = %272
  %277 = load i32, i32* @x.433
  %278 = load i32, i32* @y.434
  %279 = sub i32 %277, 515033027
  %280 = sub i32 %279, 1
  %281 = add i32 %280, 515033027
  %282 = sub i32 %277, 1
  %283 = mul i32 %277, %281
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %278, 10
  %287 = xor i1 %285, true
  %288 = xor i1 %286, true
  %289 = xor i1 true, true
  %290 = and i1 %287, true
  %291 = and i1 %285, %289
  %292 = and i1 %288, true
  %293 = and i1 %286, %289
  %294 = or i1 %290, %291
  %295 = or i1 %292, %293
  %296 = xor i1 %294, %295
  %297 = or i1 %287, %288
  %298 = xor i1 %297, true
  %299 = or i1 true, %289
  %300 = and i1 %298, %299
  %301 = or i1 %296, %300
  %302 = or i1 %285, %286
  br i1 %301, label %303, label %495

; <label>:303:                                    ; preds = %276, %495
  %304 = load i32, i32* @x.433
  %305 = load i32, i32* @y.434
  %306 = sub i32 0, 1
  %307 = add i32 %304, %306
  %308 = sub i32 %304, 1
  %309 = mul i32 %304, %307
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %305, 10
  %313 = and i1 %311, %312
  %314 = xor i1 %311, %312
  %315 = or i1 %313, %314
  %316 = or i1 %311, %312
  br i1 %315, label %317, label %495

; <label>:317:                                    ; preds = %303
  invoke void @__cxa_rethrow() #12
          to label %412 unwind label %180

; <label>:318:                                    ; preds = %236
  %319 = load i32, i32* @x.433
  %320 = load i32, i32* @y.434
  %321 = sub i32 0, 1
  %322 = add i32 %319, %321
  %323 = sub i32 %319, 1
  %324 = mul i32 %319, %322
  %325 = urem i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %320, 10
  %328 = xor i1 %326, true
  %329 = xor i1 %327, true
  %330 = xor i1 true, true
  %331 = and i1 %328, true
  %332 = and i1 %326, %330
  %333 = and i1 %329, true
  %334 = and i1 %327, %330
  %335 = or i1 %331, %332
  %336 = or i1 %333, %334
  %337 = xor i1 %335, %336
  %338 = or i1 %328, %329
  %339 = xor i1 %338, true
  %340 = or i1 true, %330
  %341 = and i1 %339, %340
  %342 = or i1 %337, %341
  %343 = or i1 %326, %327
  br i1 %342, label %344, label %496

; <label>:344:                                    ; preds = %318, %496
  %345 = load i32, i32* @x.433
  %346 = load i32, i32* @y.434
  %347 = sub i32 %345, -416054817
  %348 = sub i32 %347, 1
  %349 = add i32 %348, -416054817
  %350 = sub i32 %345, 1
  %351 = mul i32 %345, %349
  %352 = urem i32 %351, 2
  %353 = icmp eq i32 %352, 0
  %354 = icmp slt i32 %346, 10
  %355 = and i1 %353, %354
  %356 = xor i1 %353, %354
  %357 = or i1 %355, %356
  %358 = or i1 %353, %354
  br i1 %357, label %359, label %496

; <label>:359:                                    ; preds = %344
  br label %404

; <label>:360:                                    ; preds = %122
  %361 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %362 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %361, i32 0, i32 0
  %363 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %362, i32 0, i32 0
  %364 = load double*, double** %363, align 8
  %365 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %366 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %365, i32 0, i32 0
  %367 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %366, i32 0, i32 1
  %368 = load double*, double** %367, align 8
  %369 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %370 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %369) #3
  call void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double* %364, double* %368, %"class.std::allocator.5"* dereferenceable(1) %370)
  %371 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %372 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %373 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %372, i32 0, i32 0
  %374 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %373, i32 0, i32 0
  %375 = load double*, double** %374, align 8
  %376 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %377 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %376, i32 0, i32 0
  %378 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %377, i32 0, i32 2
  %379 = load double*, double** %378, align 8
  %380 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %381 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %380, i32 0, i32 0
  %382 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %381, i32 0, i32 0
  %383 = load double*, double** %382, align 8
  %384 = ptrtoint double* %379 to i64
  %385 = ptrtoint double* %383 to i64
  %386 = sub i64 0, %385
  %387 = add i64 %384, %386
  %388 = sub i64 %384, %385
  %389 = sdiv exact i64 %387, 8
  call void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.4"* %371, double* %375, i64 %389)
  %390 = load double*, double** %6, align 8
  %391 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %392 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %391, i32 0, i32 0
  %393 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %392, i32 0, i32 0
  store double* %390, double** %393, align 8
  %394 = load double*, double** %7, align 8
  %395 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %396 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %395, i32 0, i32 0
  %397 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %396, i32 0, i32 1
  store double* %394, double** %397, align 8
  %398 = load double*, double** %6, align 8
  %399 = load i64, i64* %5, align 8
  %400 = getelementptr inbounds double, double* %398, i64 %399
  %401 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %402 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %401, i32 0, i32 0
  %403 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %402, i32 0, i32 2
  store double* %400, double** %403, align 8
  ret void

; <label>:404:                                    ; preds = %359
  %405 = load i8*, i8** %8, align 8
  %406 = load i32, i32* %9, align 4
  %407 = insertvalue { i8*, i32 } undef, i8* %405, 0
  %408 = insertvalue { i8*, i32 } %407, i32 %406, 1
  resume { i8*, i32 } %408

; <label>:409:                                    ; preds = %236
  %410 = landingpad { i8*, i32 }
          catch i8* null
  %411 = extractvalue { i8*, i32 } %410, 0
  call void @__clang_call_terminate(i8* %411) #10
  unreachable

; <label>:412:                                    ; preds = %317
  %413 = load i32, i32* @x.433
  %414 = load i32, i32* @y.434
  %415 = sub i32 %413, -2133357603
  %416 = sub i32 %415, 1
  %417 = add i32 %416, -2133357603
  %418 = sub i32 %413, 1
  %419 = mul i32 %413, %417
  %420 = urem i32 %419, 2
  %421 = icmp eq i32 %420, 0
  %422 = icmp slt i32 %414, 10
  %423 = xor i1 %421, true
  %424 = xor i1 %422, true
  %425 = xor i1 true, true
  %426 = and i1 %423, true
  %427 = and i1 %421, %425
  %428 = and i1 %424, true
  %429 = and i1 %422, %425
  %430 = or i1 %426, %427
  %431 = or i1 %428, %429
  %432 = xor i1 %430, %431
  %433 = or i1 %423, %424
  %434 = xor i1 %433, true
  %435 = or i1 true, %425
  %436 = and i1 %434, %435
  %437 = or i1 %432, %436
  %438 = or i1 %421, %422
  br i1 %437, label %439, label %497

; <label>:439:                                    ; preds = %412, %497
  %440 = load i32, i32* @x.433
  %441 = load i32, i32* @y.434
  %442 = sub i32 %440, 2011638792
  %443 = sub i32 %442, 1
  %444 = add i32 %443, 2011638792
  %445 = sub i32 %440, 1
  %446 = mul i32 %440, %444
  %447 = urem i32 %446, 2
  %448 = icmp eq i32 %447, 0
  %449 = icmp slt i32 %441, 10
  %450 = xor i1 %448, true
  %451 = xor i1 %449, true
  %452 = xor i1 true, true
  %453 = and i1 %450, true
  %454 = and i1 %448, %452
  %455 = and i1 %451, true
  %456 = and i1 %449, %452
  %457 = or i1 %453, %454
  %458 = or i1 %455, %456
  %459 = xor i1 %457, %458
  %460 = or i1 %450, %451
  %461 = xor i1 %460, true
  %462 = or i1 true, %452
  %463 = and i1 %461, %462
  %464 = or i1 %459, %463
  %465 = or i1 %448, %449
  br i1 %464, label %466, label %497

; <label>:466:                                    ; preds = %439
  unreachable

; <label>:467:                                    ; preds = %38, %24
  store double* null, double** %7, align 8
  %468 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %469 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %468, i32 0, i32 0
  %470 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %469, i32 0, i32 0
  %471 = load double*, double** %470, align 8
  %472 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %473 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %472, i32 0, i32 0
  %474 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %473, i32 0, i32 1
  %475 = load double*, double** %474, align 8
  %476 = load double*, double** %6, align 8
  %477 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %478 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %477) #3
  br label %38

; <label>:479:                                    ; preds = %93, %78
  store double* %77, double** %7, align 8
  %480 = load double*, double** %7, align 8
  %481 = getelementptr inbounds double, double* %480, i32 1
  store double* %481, double** %7, align 8
  br label %93

; <label>:482:                                    ; preds = %137, %123
  %483 = landingpad { i8*, i32 }
          catch i8* null
  %484 = extractvalue { i8*, i32 } %483, 0
  store i8* %484, i8** %8, align 8
  %485 = extractvalue { i8*, i32 } %483, 1
  store i32 %485, i32* %9, align 4
  br label %137

; <label>:486:                                    ; preds = %207, %180
  %487 = landingpad { i8*, i32 }
          cleanup
  %488 = extractvalue { i8*, i32 } %487, 0
  store i8* %488, i8** %8, align 8
  %489 = extractvalue { i8*, i32 } %487, 1
  store i32 %489, i32* %9, align 4
  br label %207

; <label>:490:                                    ; preds = %251, %237
  %491 = load double*, double** %6, align 8
  %492 = load double*, double** %7, align 8
  %493 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %494 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %493) #3
  br label %251

; <label>:495:                                    ; preds = %303, %276
  br label %303

; <label>:496:                                    ; preds = %344, %318
  br label %344

; <label>:497:                                    ; preds = %439, %412
  br label %439
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"*, double*, double* dereferenceable(8)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  %8 = load double*, double** %5, align 8
  %9 = bitcast double* %8 to i8*
  %10 = bitcast i8* %9 to double*
  %11 = load double*, double** %6, align 8
  %12 = call dereferenceable(8) double* @_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE(double* dereferenceable(8) %11) #3
  %13 = load double, double* %12, align 8
  store double %13, double* %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc(%"class.std::vector.3"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca %"class.std::vector.3"*
  %9 = alloca %"class.std::vector.3"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %9, align 8
  store i64 %1, i64* %10, align 8
  store i8* %2, i8** %11, align 8
  %14 = load %"class.std::vector.3"*, %"class.std::vector.3"** %9, align 8
  store %"class.std::vector.3"* %14, %"class.std::vector.3"** %8
  %15 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %8
  %16 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.3"* %15) #3
  %17 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %8
  %18 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* %17) #3
  %19 = sub i64 0, %18
  %20 = add i64 %16, %19
  %21 = sub i64 %16, %18
  store i64 %20, i64* %7
  %22 = load i64, i64* %10, align 8
  store i64 %22, i64* %6
  %23 = alloca i32
  store i32 -513221552, i32* %23
  %24 = alloca i64
  br label %25

; <label>:25:                                     ; preds = %3, %178
  %26 = load i32, i32* %23
  switch i32 %26, label %27 [
    i32 -513221552, label %28
    i32 2127744179, label %33
    i32 1670518160, label %49
    i32 -870577599, label %65
    i32 -1258601201, label %66
    i32 1644098261, label %82
    i32 -1317902360, label %88
    i32 -644902594, label %115
    i32 83569312, label %133
    i32 1215529006, label %135
    i32 1413771965, label %150
    i32 -2021769937, label %167
    i32 -1459112989, label %169
    i32 34728730, label %171
    i32 -1699094523, label %173
    i32 1161308062, label %176
  ]

; <label>:27:                                     ; preds = %25
  br label %178

; <label>:28:                                     ; preds = %25
  %29 = load volatile i64, i64* %7
  %30 = load volatile i64, i64* %6
  %31 = icmp ult i64 %29, %30
  %32 = select i1 %31, i32 2127744179, i32 -1258601201
  store i32 %32, i32* %23
  br label %178

; <label>:33:                                     ; preds = %25
  %34 = load i32, i32* @x.437
  %35 = load i32, i32* @y.438
  %36 = add i32 %34, -2054177335
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, -2054177335
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 1670518160, i32 34728730
  store i32 %48, i32* %23
  br label %178

; <label>:49:                                     ; preds = %25
  %50 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %50) #12
  %51 = load i32, i32* @x.437
  %52 = load i32, i32* @y.438
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -870577599, i32 34728730
  store i32 %64, i32* %23
  br label %178

; <label>:65:                                     ; preds = %25
  unreachable

; <label>:66:                                     ; preds = %25
  %67 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %8
  %68 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* %67) #3
  %69 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %8
  %70 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* %69) #3
  store i64 %70, i64* %13, align 8
  %71 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %68, -5602964885546466040
  %74 = add i64 %73, %72
  %75 = sub i64 %74, -5602964885546466040
  %76 = add i64 %68, %72
  store i64 %75, i64* %12, align 8
  %77 = load i64, i64* %12, align 8
  %78 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %8
  %79 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* %78) #3
  %80 = icmp ult i64 %77, %79
  %81 = select i1 %80, i32 -1317902360, i32 1644098261
  store i32 %81, i32* %23
  br label %178

; <label>:82:                                     ; preds = %25
  %83 = load i64, i64* %12, align 8
  %84 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %8
  %85 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.3"* %84) #3
  %86 = icmp ugt i64 %83, %85
  %87 = select i1 %86, i32 -1317902360, i32 1215529006
  store i32 %87, i32* %23
  br label %178

; <label>:88:                                     ; preds = %25
  %89 = load i32, i32* @x.437
  %90 = load i32, i32* @y.438
  %91 = sub i32 0, 1
  %92 = add i32 %89, %91
  %93 = sub i32 %89, 1
  %94 = mul i32 %89, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %90, 10
  %98 = xor i1 %96, true
  %99 = xor i1 %97, true
  %100 = xor i1 true, true
  %101 = and i1 %98, true
  %102 = and i1 %96, %100
  %103 = and i1 %99, true
  %104 = and i1 %97, %100
  %105 = or i1 %101, %102
  %106 = or i1 %103, %104
  %107 = xor i1 %105, %106
  %108 = or i1 %98, %99
  %109 = xor i1 %108, true
  %110 = or i1 true, %100
  %111 = and i1 %109, %110
  %112 = or i1 %107, %111
  %113 = or i1 %96, %97
  %114 = select i1 %112, i32 -644902594, i32 -1699094523
  store i32 %114, i32* %23
  br label %178

; <label>:115:                                    ; preds = %25
  %116 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %8
  %117 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.3"* %116) #3
  store i64 %117, i64* %5
  %118 = load i32, i32* @x.437
  %119 = load i32, i32* @y.438
  %120 = add i32 %118, -1540449657
  %121 = sub i32 %120, 1
  %122 = sub i32 %121, -1540449657
  %123 = sub i32 %118, 1
  %124 = mul i32 %118, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %119, 10
  %128 = and i1 %126, %127
  %129 = xor i1 %126, %127
  %130 = or i1 %128, %129
  %131 = or i1 %126, %127
  %132 = select i1 %130, i32 83569312, i32 -1699094523
  store i32 %132, i32* %23
  br label %178

; <label>:133:                                    ; preds = %25
  store i32 -1459112989, i32* %23
  %134 = load volatile i64, i64* %5
  store i64 %134, i64* %24
  br label %178

; <label>:135:                                    ; preds = %25
  %136 = load i32, i32* @x.437
  %137 = load i32, i32* @y.438
  %138 = sub i32 0, 1
  %139 = add i32 %136, %138
  %140 = sub i32 %136, 1
  %141 = mul i32 %136, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %137, 10
  %145 = and i1 %143, %144
  %146 = xor i1 %143, %144
  %147 = or i1 %145, %146
  %148 = or i1 %143, %144
  %149 = select i1 %147, i32 1413771965, i32 1161308062
  store i32 %149, i32* %23
  br label %178

; <label>:150:                                    ; preds = %25
  %151 = load i64, i64* %12, align 8
  store i64 %151, i64* %4
  %152 = load i32, i32* @x.437
  %153 = load i32, i32* @y.438
  %154 = sub i32 %152, 650043313
  %155 = sub i32 %154, 1
  %156 = add i32 %155, 650043313
  %157 = sub i32 %152, 1
  %158 = mul i32 %152, %156
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %153, 10
  %162 = and i1 %160, %161
  %163 = xor i1 %160, %161
  %164 = or i1 %162, %163
  %165 = or i1 %160, %161
  %166 = select i1 %164, i32 -2021769937, i32 1161308062
  store i32 %166, i32* %23
  br label %178

; <label>:167:                                    ; preds = %25
  store i32 -1459112989, i32* %23
  %168 = load volatile i64, i64* %4
  store i64 %168, i64* %24
  br label %178

; <label>:169:                                    ; preds = %25
  %170 = load i64, i64* %24
  ret i64 %170

; <label>:171:                                    ; preds = %25
  %172 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %172) #12
  store i32 1670518160, i32* %23
  br label %178

; <label>:173:                                    ; preds = %25
  %174 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %8
  %175 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.3"* %174) #3
  store i32 -644902594, i32* %23
  br label %178

; <label>:176:                                    ; preds = %25
  %177 = load i64, i64* %12, align 8
  store i32 1413771965, i32* %23
  br label %178

; <label>:178:                                    ; preds = %176, %173, %171, %167, %150, %135, %133, %115, %88, %82, %66, %49, %33, %28, %27
  br label %25
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm(%"struct.std::_Vector_base.4"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base.4"*
  %5 = alloca %"struct.std::_Vector_base.4"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %5, align 8
  store %"struct.std::_Vector_base.4"* %7, %"struct.std::_Vector_base.4"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 -1144020581, i32* %9
  %10 = alloca double*
  br label %11

; <label>:11:                                     ; preds = %2, %60
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 -1144020581, label %14
    i32 -1295380972, label %18
    i32 1758839633, label %24
    i32 1740268119, label %40
    i32 240462792, label %56
    i32 -1205142075, label %57
    i32 -187891665, label %59
  ]

; <label>:13:                                     ; preds = %11
  br label %60

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 -1295380972, i32 1758839633
  store i32 %17, i32* %9
  br label %60

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %20 to %"class.std::allocator.5"*
  %22 = load i64, i64* %6, align 8
  %23 = call double* @_ZNSt16allocator_traitsISaIdEE8allocateERS0_m(%"class.std::allocator.5"* dereferenceable(1) %21, i64 %22)
  store i32 -1205142075, i32* %9
  store double* %23, double** %10
  br label %60

; <label>:24:                                     ; preds = %11
  %25 = load i32, i32* @x.439
  %26 = load i32, i32* @y.440
  %27 = sub i32 %25, -1398032403
  %28 = sub i32 %27, 1
  %29 = add i32 %28, -1398032403
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  %39 = select i1 %37, i32 1740268119, i32 -187891665
  store i32 %39, i32* %9
  br label %60

; <label>:40:                                     ; preds = %11
  %41 = load i32, i32* @x.439
  %42 = load i32, i32* @y.440
  %43 = add i32 %41, 1297921211
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 1297921211
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 240462792, i32 -187891665
  store i32 %55, i32* %9
  br label %60

; <label>:56:                                     ; preds = %11
  store i32 -1205142075, i32* %9
  store double* null, double** %10
  br label %60

; <label>:57:                                     ; preds = %11
  %58 = load double*, double** %10
  ret double* %58

; <label>:59:                                     ; preds = %11
  store i32 1740268119, i32* %9
  br label %60

; <label>:60:                                     ; preds = %59, %56, %40, %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %4 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load double*, double** %6, align 8
  %8 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load double*, double** %10, align 8
  %12 = ptrtoint double* %7 to i64
  %13 = ptrtoint double* %11 to i64
  %14 = add i64 %12, 8242209058884709332
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, 8242209058884709332
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 8
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_(double*, double*, double*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca double*, align 8
  %8 = alloca %"class.std::allocator.5"*, align 8
  %9 = alloca %"class.std::move_iterator.32", align 8
  %10 = alloca %"class.std::move_iterator.32", align 8
  store double* %0, double** %5, align 8
  store double* %1, double** %6, align 8
  store double* %2, double** %7, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %8, align 8
  %11 = load double*, double** %5, align 8
  %12 = call double* @_ZSt32__make_move_if_noexcept_iteratorIPdSt13move_iteratorIS0_EET0_T_(double* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %9, i32 0, i32 0
  store double* %12, double** %13, align 8
  %14 = load double*, double** %6, align 8
  %15 = call double* @_ZSt32__make_move_if_noexcept_iteratorIPdSt13move_iteratorIS0_EET0_T_(double* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %10, i32 0, i32 0
  store double* %15, double** %16, align 8
  %17 = load double*, double** %7, align 8
  %18 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %9, i32 0, i32 0
  %20 = load double*, double** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %10, i32 0, i32 0
  %22 = load double*, double** %21, align 8
  %23 = call double* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPdES1_dET0_T_S4_S3_RSaIT1_E(double* %20, double* %22, double* %17, %"class.std::allocator.5"* dereferenceable(1) %18)
  ret double* %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.445
  %6 = load i32, i32* @y.446
  %7 = sub i32 %5, 1295717372
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1295717372
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 688336344, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 688336344, label %19
    i32 922292887, label %27
    i32 1252252448, label %47
    i32 -527576962, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 922292887, i32 -527576962
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %28, align 8
  %29 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %30 to %"class.std::allocator.5"*
  store %"class.std::allocator.5"* %31, %"class.std::allocator.5"** %2
  %32 = load i32, i32* @x.445
  %33 = load i32, i32* @y.446
  %34 = add i32 %32, -451938169
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -451938169
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 1252252448, i32 -527576962
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile %"class.std::allocator.5"*, %"class.std::allocator.5"** %2
  ret %"class.std::allocator.5"* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %50, align 8
  %51 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %50, align 8
  %52 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %51, i32 0, i32 0
  %53 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %52 to %"class.std::allocator.5"*
  store i32 922292887, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIdEE7destroyIdEEvRS0_PT_(%"class.std::allocator.5"* dereferenceable(1), double*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.5"*, align 8
  %4 = alloca double*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %3, align 8
  store double* %1, double** %4, align 8
  %5 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %3, align 8
  %6 = bitcast %"class.std::allocator.5"* %5 to %"class.__gnu_cxx::new_allocator.6"*
  %7 = load double*, double** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIdE7destroyIdEEvPT_(%"class.__gnu_cxx::new_allocator.6"* %6, double* %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double*, double*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca %"class.std::allocator.5"*, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = load double*, double** %5, align 8
  call void @_ZSt8_DestroyIPdEvT_S1_(double* %7, double* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.4"*, double*, i64) #0 comdat align 2 {
  %4 = alloca double*
  %5 = alloca %"struct.std::_Vector_base.4"*
  %6 = alloca %"struct.std::_Vector_base.4"*, align 8
  %7 = alloca double*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %6, align 8
  store double* %1, double** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %6, align 8
  store %"struct.std::_Vector_base.4"* %9, %"struct.std::_Vector_base.4"** %5
  %10 = load double*, double** %7, align 8
  store double* %10, double** %4
  %11 = alloca i32
  store i32 1099114139, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1099114139, label %15
    i32 1009815457, label %19
    i32 1886782806, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile double*, double** %4
  %17 = icmp ne double* %16, null
  %18 = select i1 %17, i32 1009815457, i32 1886782806
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %21 to %"class.std::allocator.5"*
  %23 = load double*, double** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm(%"class.std::allocator.5"* dereferenceable(1) %22, double* %23, i64 %24)
  store i32 1886782806, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %4 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  %5 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_(%"class.std::allocator.5"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_(%"class.std::allocator.5"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %2, align 8
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %2, align 8
  %4 = bitcast %"class.std::allocator.5"* %3 to %"class.__gnu_cxx::new_allocator.6"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %2, align 8
  %3 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %4 to %"class.std::allocator.5"*
  ret %"class.std::allocator.5"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt16allocator_traitsISaIdEE8allocateERS0_m(%"class.std::allocator.5"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.5"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %3, align 8
  %6 = bitcast %"class.std::allocator.5"* %5 to %"class.__gnu_cxx::new_allocator.6"*
  %7 = load i64, i64* %4, align 8
  %8 = call double* @_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"* %6, i64 %7, i8* null)
  ret double* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.463
  %9 = load i32, i32* @y.464
  %10 = add i32 %8, 1464624994
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 1464624994
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1223455136, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %153
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1223455136, label %22
    i32 -88202543, label %42
    i32 1257611755, label %78
    i32 1948715596, label %81
    i32 58669997, label %109
    i32 -1505690975, label %137
    i32 -297932774, label %138
    i32 1305495766, label %144
    i32 1798045173, label %152
  ]

; <label>:21:                                     ; preds = %19
  br label %153

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -88202543, i32 1305495766
  store i32 %41, i32* %18
  br label %153

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %44 = alloca i64, align 8
  store i64* %44, i64** %5
  %45 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %43, align 8
  %46 = load volatile i64*, i64** %5
  store i64 %1, i64* %46, align 8
  store i8* %2, i8** %45, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %43, align 8
  %48 = load volatile i64*, i64** %5
  %49 = load i64, i64* %48, align 8
  %50 = call i64 @_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* %47) #3
  %51 = icmp ugt i64 %49, %50
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.463
  %53 = load i32, i32* @y.464
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 1257611755, i32 1305495766
  store i32 %77, i32* %18
  br label %153

; <label>:78:                                     ; preds = %19
  %79 = load volatile i1, i1* %4
  %80 = select i1 %79, i32 1948715596, i32 -297932774
  store i32 %80, i32* %18
  br label %153

; <label>:81:                                     ; preds = %19
  %82 = load i32, i32* @x.463
  %83 = load i32, i32* @y.464
  %84 = sub i32 %82, -1019605729
  %85 = sub i32 %84, 1
  %86 = add i32 %85, -1019605729
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = xor i1 %90, true
  %93 = xor i1 %91, true
  %94 = xor i1 false, true
  %95 = and i1 %92, false
  %96 = and i1 %90, %94
  %97 = and i1 %93, false
  %98 = and i1 %91, %94
  %99 = or i1 %95, %96
  %100 = or i1 %97, %98
  %101 = xor i1 %99, %100
  %102 = or i1 %92, %93
  %103 = xor i1 %102, true
  %104 = or i1 false, %94
  %105 = and i1 %103, %104
  %106 = or i1 %101, %105
  %107 = or i1 %90, %91
  %108 = select i1 %106, i32 58669997, i32 1798045173
  store i32 %108, i32* %18
  br label %153

; <label>:109:                                    ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #12
  %110 = load i32, i32* @x.463
  %111 = load i32, i32* @y.464
  %112 = add i32 %110, -30260830
  %113 = sub i32 %112, 1
  %114 = sub i32 %113, -30260830
  %115 = sub i32 %110, 1
  %116 = mul i32 %110, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %111, 10
  %120 = xor i1 %118, true
  %121 = xor i1 %119, true
  %122 = xor i1 true, true
  %123 = and i1 %120, true
  %124 = and i1 %118, %122
  %125 = and i1 %121, true
  %126 = and i1 %119, %122
  %127 = or i1 %123, %124
  %128 = or i1 %125, %126
  %129 = xor i1 %127, %128
  %130 = or i1 %120, %121
  %131 = xor i1 %130, true
  %132 = or i1 true, %122
  %133 = and i1 %131, %132
  %134 = or i1 %129, %133
  %135 = or i1 %118, %119
  %136 = select i1 %134, i32 -1505690975, i32 1798045173
  store i32 %136, i32* %18
  br label %153

; <label>:137:                                    ; preds = %19
  unreachable

; <label>:138:                                    ; preds = %19
  %139 = load volatile i64*, i64** %5
  %140 = load i64, i64* %139, align 8
  %141 = mul i64 %140, 8
  %142 = call i8* @_Znwm(i64 %141)
  %143 = bitcast i8* %142 to double*
  ret double* %143

; <label>:144:                                    ; preds = %19
  %145 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %146 = alloca i64, align 8
  %147 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %145, align 8
  store i64 %1, i64* %146, align 8
  store i8* %2, i8** %147, align 8
  %148 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %145, align 8
  %149 = load i64, i64* %146, align 8
  %150 = call i64 @_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* %148) #3
  %151 = icmp ugt i64 %149, %150
  store i32 -88202543, i32* %18
  br label %153

; <label>:152:                                    ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 58669997, i32* %18
  br label %153

; <label>:153:                                    ; preds = %152, %144, %109, %81, %78, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPdES1_dET0_T_S4_S3_RSaIT1_E(double*, double*, double*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.32", align 8
  %6 = alloca %"class.std::move_iterator.32", align 8
  %7 = alloca double*, align 8
  %8 = alloca %"class.std::allocator.5"*, align 8
  %9 = alloca %"class.std::move_iterator.32", align 8
  %10 = alloca %"class.std::move_iterator.32", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %5, i32 0, i32 0
  store double* %0, double** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %6, i32 0, i32 0
  store double* %1, double** %12, align 8
  store double* %2, double** %7, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.32"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.32"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.32"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.32"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load double*, double** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %9, i32 0, i32 0
  %19 = load double*, double** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %10, i32 0, i32 0
  %21 = load double*, double** %20, align 8
  %22 = call double* @_ZSt18uninitialized_copyISt13move_iteratorIPdES1_ET0_T_S4_S3_(double* %19, double* %21, double* %17)
  ret double* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt32__make_move_if_noexcept_iteratorIPdSt13move_iteratorIS0_EET0_T_(double*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.32", align 8
  %3 = alloca double*, align 8
  store double* %0, double** %3, align 8
  %4 = load double*, double** %3, align 8
  call void @_ZNSt13move_iteratorIPdEC2ES0_(%"class.std::move_iterator.32"* %2, double* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %2, i32 0, i32 0
  %6 = load double*, double** %5, align 8
  ret double* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt18uninitialized_copyISt13move_iteratorIPdES1_ET0_T_S4_S3_(double*, double*, double*) #0 comdat {
  %4 = alloca double*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.469
  %8 = load i32, i32* @y.470
  %9 = sub i32 %7, -2100172350
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -2100172350
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 229755212, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %108
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 229755212, label %21
    i32 134861777, label %41
    i32 -2050581140, label %87
    i32 -1112902349, label %89
  ]

; <label>:20:                                     ; preds = %18
  br label %108

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 134861777, i32 -1112902349
  store i32 %40, i32* %17
  br label %108

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::move_iterator.32", align 8
  %43 = alloca %"class.std::move_iterator.32", align 8
  %44 = alloca double*, align 8
  %45 = alloca i8, align 1
  %46 = alloca %"class.std::move_iterator.32", align 8
  %47 = alloca %"class.std::move_iterator.32", align 8
  %48 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %42, i32 0, i32 0
  store double* %0, double** %48, align 8
  %49 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %43, i32 0, i32 0
  store double* %1, double** %49, align 8
  store double* %2, double** %44, align 8
  store i8 1, i8* %45, align 1
  %50 = bitcast %"class.std::move_iterator.32"* %46 to i8*
  %51 = bitcast %"class.std::move_iterator.32"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.std::move_iterator.32"* %47 to i8*
  %53 = bitcast %"class.std::move_iterator.32"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = load double*, double** %44, align 8
  %55 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %46, i32 0, i32 0
  %56 = load double*, double** %55, align 8
  %57 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %47, i32 0, i32 0
  %58 = load double*, double** %57, align 8
  %59 = call double* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPdES3_EET0_T_S6_S5_(double* %56, double* %58, double* %54)
  store double* %59, double** %4
  %60 = load i32, i32* @x.469
  %61 = load i32, i32* @y.470
  %62 = sub i32 %60, 342059409
  %63 = sub i32 %62, 1
  %64 = add i32 %63, 342059409
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 false, true
  %73 = and i1 %70, false
  %74 = and i1 %68, %72
  %75 = and i1 %71, false
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 false, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  %86 = select i1 %84, i32 -2050581140, i32 -1112902349
  store i32 %86, i32* %17
  br label %108

; <label>:87:                                     ; preds = %18
  %88 = load volatile double*, double** %4
  ret double* %88

; <label>:89:                                     ; preds = %18
  %90 = alloca %"class.std::move_iterator.32", align 8
  %91 = alloca %"class.std::move_iterator.32", align 8
  %92 = alloca double*, align 8
  %93 = alloca i8, align 1
  %94 = alloca %"class.std::move_iterator.32", align 8
  %95 = alloca %"class.std::move_iterator.32", align 8
  %96 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %90, i32 0, i32 0
  store double* %0, double** %96, align 8
  %97 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %91, i32 0, i32 0
  store double* %1, double** %97, align 8
  store double* %2, double** %92, align 8
  store i8 1, i8* %93, align 1
  %98 = bitcast %"class.std::move_iterator.32"* %94 to i8*
  %99 = bitcast %"class.std::move_iterator.32"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %98, i8* %99, i64 8, i32 8, i1 false)
  %100 = bitcast %"class.std::move_iterator.32"* %95 to i8*
  %101 = bitcast %"class.std::move_iterator.32"* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %100, i8* %101, i64 8, i32 8, i1 false)
  %102 = load double*, double** %92, align 8
  %103 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %94, i32 0, i32 0
  %104 = load double*, double** %103, align 8
  %105 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %95, i32 0, i32 0
  %106 = load double*, double** %105, align 8
  %107 = call double* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPdES3_EET0_T_S6_S5_(double* %104, double* %106, double* %102)
  store i32 134861777, i32* %17
  br label %108

; <label>:108:                                    ; preds = %89, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPdES3_EET0_T_S6_S5_(double*, double*, double*) #0 comdat align 2 {
  %4 = alloca %"class.std::move_iterator.32", align 8
  %5 = alloca %"class.std::move_iterator.32", align 8
  %6 = alloca double*, align 8
  %7 = alloca %"class.std::move_iterator.32", align 8
  %8 = alloca %"class.std::move_iterator.32", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %4, i32 0, i32 0
  store double* %0, double** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %5, i32 0, i32 0
  store double* %1, double** %10, align 8
  store double* %2, double** %6, align 8
  %11 = bitcast %"class.std::move_iterator.32"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.32"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.std::move_iterator.32"* %8 to i8*
  %14 = bitcast %"class.std::move_iterator.32"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load double*, double** %6, align 8
  %16 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %7, i32 0, i32 0
  %17 = load double*, double** %16, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %8, i32 0, i32 0
  %19 = load double*, double** %18, align 8
  %20 = call double* @_ZSt4copyISt13move_iteratorIPdES1_ET0_T_S4_S3_(double* %17, double* %19, double* %15)
  ret double* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt4copyISt13move_iteratorIPdES1_ET0_T_S4_S3_(double*, double*, double*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.32", align 8
  %5 = alloca %"class.std::move_iterator.32", align 8
  %6 = alloca double*, align 8
  %7 = alloca %"class.std::move_iterator.32", align 8
  %8 = alloca %"class.std::move_iterator.32", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %4, i32 0, i32 0
  store double* %0, double** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %5, i32 0, i32 0
  store double* %1, double** %10, align 8
  store double* %2, double** %6, align 8
  %11 = bitcast %"class.std::move_iterator.32"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.32"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %7, i32 0, i32 0
  %14 = load double*, double** %13, align 8
  %15 = call double* @_ZSt12__miter_baseISt13move_iteratorIPdEENSt11_Miter_baseIT_E13iterator_typeES4_(double* %14)
  %16 = bitcast %"class.std::move_iterator.32"* %8 to i8*
  %17 = bitcast %"class.std::move_iterator.32"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %8, i32 0, i32 0
  %19 = load double*, double** %18, align 8
  %20 = call double* @_ZSt12__miter_baseISt13move_iteratorIPdEENSt11_Miter_baseIT_E13iterator_typeES4_(double* %19)
  %21 = load double*, double** %6, align 8
  %22 = call double* @_ZSt14__copy_move_a2ILb1EPdS0_ET1_T0_S2_S1_(double* %15, double* %20, double* %21)
  ret double* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt14__copy_move_a2ILb1EPdS0_ET1_T0_S2_S1_(double*, double*, double*) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = call double* @_ZSt12__niter_baseIPdENSt11_Niter_baseIT_E13iterator_typeES2_(double* %7)
  %9 = load double*, double** %5, align 8
  %10 = call double* @_ZSt12__niter_baseIPdENSt11_Niter_baseIT_E13iterator_typeES2_(double* %9)
  %11 = load double*, double** %6, align 8
  %12 = call double* @_ZSt12__niter_baseIPdENSt11_Niter_baseIT_E13iterator_typeES2_(double* %11)
  %13 = call double* @_ZSt13__copy_move_aILb1EPdS0_ET1_T0_S2_S1_(double* %8, double* %10, double* %12)
  ret double* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt12__miter_baseISt13move_iteratorIPdEENSt11_Miter_baseIT_E13iterator_typeES4_(double*) #0 comdat {
  %2 = alloca double*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.477
  %6 = load i32, i32* @y.478
  %7 = sub i32 %5, -1656291358
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1656291358
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1158832033, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %85
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1158832033, label %19
    i32 2140365390, label %39
    i32 1835233412, label %74
    i32 -202332622, label %76
  ]

; <label>:18:                                     ; preds = %16
  br label %85

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 2140365390, i32 -202332622
  store i32 %38, i32* %15
  br label %85

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator.32", align 8
  %41 = alloca %"class.std::move_iterator.32", align 8
  %42 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %40, i32 0, i32 0
  store double* %0, double** %42, align 8
  %43 = bitcast %"class.std::move_iterator.32"* %41 to i8*
  %44 = bitcast %"class.std::move_iterator.32"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 8, i32 8, i1 false)
  %45 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %41, i32 0, i32 0
  %46 = load double*, double** %45, align 8
  %47 = call double* @_ZNSt10_Iter_baseISt13move_iteratorIPdELb1EE7_S_baseES2_(double* %46)
  store double* %47, double** %2
  %48 = load i32, i32* @x.477
  %49 = load i32, i32* @y.478
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 1835233412, i32 -202332622
  store i32 %73, i32* %15
  br label %85

; <label>:74:                                     ; preds = %16
  %75 = load volatile double*, double** %2
  ret double* %75

; <label>:76:                                     ; preds = %16
  %77 = alloca %"class.std::move_iterator.32", align 8
  %78 = alloca %"class.std::move_iterator.32", align 8
  %79 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %77, i32 0, i32 0
  store double* %0, double** %79, align 8
  %80 = bitcast %"class.std::move_iterator.32"* %78 to i8*
  %81 = bitcast %"class.std::move_iterator.32"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %80, i8* %81, i64 8, i32 8, i1 false)
  %82 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %78, i32 0, i32 0
  %83 = load double*, double** %82, align 8
  %84 = call double* @_ZNSt10_Iter_baseISt13move_iteratorIPdELb1EE7_S_baseES2_(double* %83)
  store i32 2140365390, i32* %15
  br label %85

; <label>:85:                                     ; preds = %76, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt13__copy_move_aILb1EPdS0_ET1_T0_S2_S1_(double*, double*, double*) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca i8, align 1
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load double*, double** %4, align 8
  %9 = load double*, double** %5, align 8
  %10 = load double*, double** %6, align 8
  %11 = call double* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_(double* %8, double* %9, double* %10)
  ret double* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt12__niter_baseIPdENSt11_Niter_baseIT_E13iterator_typeES2_(double*) #0 comdat {
  %2 = alloca double*, align 8
  store double* %0, double** %2, align 8
  %3 = load double*, double** %2, align 8
  %4 = call double* @_ZNSt10_Iter_baseIPdLb0EE7_S_baseES0_(double* %3)
  ret double* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_(double*, double*, double*) #5 comdat align 2 {
  %4 = alloca double*
  %5 = alloca i1
  %6 = alloca i64*
  %7 = alloca double**
  %8 = alloca double**
  %9 = alloca i1
  %10 = alloca i1
  %11 = load i32, i32* @x.483
  %12 = load i32, i32* @y.484
  %13 = sub i32 %11, 232546283
  %14 = sub i32 %13, 1
  %15 = add i32 %14, 232546283
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  store i1 %19, i1* %10
  %20 = icmp slt i32 %12, 10
  store i1 %20, i1* %9
  %21 = alloca i32
  store i32 628344142, i32* %21
  br label %22

; <label>:22:                                     ; preds = %3, %247
  %23 = load i32, i32* %21
  switch i32 %23, label %24 [
    i32 628344142, label %25
    i32 1093474289, label %33
    i32 -1556205150, label %80
    i32 -920514375, label %83
    i32 90787324, label %99
    i32 -391389914, label %135
    i32 -1983053943, label %136
    i32 1780907918, label %152
    i32 1779060331, label %184
    i32 -1429642174, label %186
    i32 -936237311, label %211
    i32 -659603984, label %241
  ]

; <label>:24:                                     ; preds = %22
  br label %247

; <label>:25:                                     ; preds = %22
  %26 = load volatile i1, i1* %10
  %27 = load volatile i1, i1* %9
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  %32 = select i1 %30, i32 1093474289, i32 -1429642174
  store i32 %32, i32* %21
  br label %247

; <label>:33:                                     ; preds = %22
  %34 = alloca double*, align 8
  store double** %34, double*** %8
  %35 = alloca double*, align 8
  %36 = alloca double*, align 8
  store double** %36, double*** %7
  %37 = alloca i64, align 8
  store i64* %37, i64** %6
  %38 = load volatile double**, double*** %8
  store double* %0, double** %38, align 8
  store double* %1, double** %35, align 8
  %39 = load volatile double**, double*** %7
  store double* %2, double** %39, align 8
  %40 = load double*, double** %35, align 8
  %41 = load volatile double**, double*** %8
  %42 = load double*, double** %41, align 8
  %43 = ptrtoint double* %40 to i64
  %44 = ptrtoint double* %42 to i64
  %45 = sub i64 0, %44
  %46 = add i64 %43, %45
  %47 = sub i64 %43, %44
  %48 = sdiv exact i64 %46, 8
  %49 = load volatile i64*, i64** %6
  store i64 %48, i64* %49, align 8
  %50 = load volatile i64*, i64** %6
  %51 = load i64, i64* %50, align 8
  %52 = icmp ne i64 %51, 0
  store i1 %52, i1* %5
  %53 = load i32, i32* @x.483
  %54 = load i32, i32* @y.484
  %55 = add i32 %53, -543878237
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, -543878237
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 -1556205150, i32 -1429642174
  store i32 %79, i32* %21
  br label %247

; <label>:80:                                     ; preds = %22
  %81 = load volatile i1, i1* %5
  %82 = select i1 %81, i32 -920514375, i32 -1983053943
  store i32 %82, i32* %21
  br label %247

; <label>:83:                                     ; preds = %22
  %84 = load i32, i32* @x.483
  %85 = load i32, i32* @y.484
  %86 = add i32 %84, 452543225
  %87 = sub i32 %86, 1
  %88 = sub i32 %87, 452543225
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = and i1 %92, %93
  %95 = xor i1 %92, %93
  %96 = or i1 %94, %95
  %97 = or i1 %92, %93
  %98 = select i1 %96, i32 90787324, i32 -936237311
  store i32 %98, i32* %21
  br label %247

; <label>:99:                                     ; preds = %22
  %100 = load volatile double**, double*** %7
  %101 = load double*, double** %100, align 8
  %102 = bitcast double* %101 to i8*
  %103 = load volatile double**, double*** %8
  %104 = load double*, double** %103, align 8
  %105 = bitcast double* %104 to i8*
  %106 = load volatile i64*, i64** %6
  %107 = load i64, i64* %106, align 8
  %108 = mul i64 8, %107
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %102, i8* %105, i64 %108, i32 8, i1 false)
  %109 = load i32, i32* @x.483
  %110 = load i32, i32* @y.484
  %111 = sub i32 0, 1
  %112 = add i32 %109, %111
  %113 = sub i32 %109, 1
  %114 = mul i32 %109, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %110, 10
  %118 = xor i1 %116, true
  %119 = xor i1 %117, true
  %120 = xor i1 true, true
  %121 = and i1 %118, true
  %122 = and i1 %116, %120
  %123 = and i1 %119, true
  %124 = and i1 %117, %120
  %125 = or i1 %121, %122
  %126 = or i1 %123, %124
  %127 = xor i1 %125, %126
  %128 = or i1 %118, %119
  %129 = xor i1 %128, true
  %130 = or i1 true, %120
  %131 = and i1 %129, %130
  %132 = or i1 %127, %131
  %133 = or i1 %116, %117
  %134 = select i1 %132, i32 -391389914, i32 -936237311
  store i32 %134, i32* %21
  br label %247

; <label>:135:                                    ; preds = %22
  store i32 -1983053943, i32* %21
  br label %247

; <label>:136:                                    ; preds = %22
  %137 = load i32, i32* @x.483
  %138 = load i32, i32* @y.484
  %139 = sub i32 %137, -1112444870
  %140 = sub i32 %139, 1
  %141 = add i32 %140, -1112444870
  %142 = sub i32 %137, 1
  %143 = mul i32 %137, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %138, 10
  %147 = and i1 %145, %146
  %148 = xor i1 %145, %146
  %149 = or i1 %147, %148
  %150 = or i1 %145, %146
  %151 = select i1 %149, i32 1780907918, i32 -659603984
  store i32 %151, i32* %21
  br label %247

; <label>:152:                                    ; preds = %22
  %153 = load volatile double**, double*** %7
  %154 = load double*, double** %153, align 8
  %155 = load volatile i64*, i64** %6
  %156 = load i64, i64* %155, align 8
  %157 = getelementptr inbounds double, double* %154, i64 %156
  store double* %157, double** %4
  %158 = load i32, i32* @x.483
  %159 = load i32, i32* @y.484
  %160 = sub i32 0, 1
  %161 = add i32 %158, %160
  %162 = sub i32 %158, 1
  %163 = mul i32 %158, %161
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %159, 10
  %167 = xor i1 %165, true
  %168 = xor i1 %166, true
  %169 = xor i1 true, true
  %170 = and i1 %167, true
  %171 = and i1 %165, %169
  %172 = and i1 %168, true
  %173 = and i1 %166, %169
  %174 = or i1 %170, %171
  %175 = or i1 %172, %173
  %176 = xor i1 %174, %175
  %177 = or i1 %167, %168
  %178 = xor i1 %177, true
  %179 = or i1 true, %169
  %180 = and i1 %178, %179
  %181 = or i1 %176, %180
  %182 = or i1 %165, %166
  %183 = select i1 %181, i32 1779060331, i32 -659603984
  store i32 %183, i32* %21
  br label %247

; <label>:184:                                    ; preds = %22
  %185 = load volatile double*, double** %4
  ret double* %185

; <label>:186:                                    ; preds = %22
  %187 = alloca double*, align 8
  %188 = alloca double*, align 8
  %189 = alloca double*, align 8
  %190 = alloca i64, align 8
  store double* %0, double** %187, align 8
  store double* %1, double** %188, align 8
  store double* %2, double** %189, align 8
  %191 = load double*, double** %188, align 8
  %192 = load double*, double** %187, align 8
  %193 = ptrtoint double* %191 to i64
  %194 = ptrtoint double* %192 to i64
  %195 = add i64 %193, -4218283761308559292
  %196 = sub i64 %195, %194
  %197 = sub i64 %196, -4218283761308559292
  %198 = sub i64 %193, %194
  %199 = mul i64 %197, %194
  %200 = sub i64 %193, 3242604833707791921
  %201 = sub i64 %200, %194
  %202 = add i64 %201, 3242604833707791921
  %203 = sub i64 %193, %194
  %204 = sub i64 0, 8
  %205 = add i64 %202, %204
  %206 = sub i64 %202, 8
  %207 = mul i64 %205, 8
  %208 = sdiv exact i64 %202, 8
  store i64 %208, i64* %190, align 8
  %209 = load i64, i64* %190, align 8
  %210 = icmp ne i64 %209, 0
  store i32 1093474289, i32* %21
  br label %247

; <label>:211:                                    ; preds = %22
  %212 = load volatile double**, double*** %7
  %213 = load double*, double** %212, align 8
  %214 = bitcast double* %213 to i8*
  %215 = load volatile double**, double*** %8
  %216 = load double*, double** %215, align 8
  %217 = bitcast double* %216 to i8*
  %218 = load volatile i64*, i64** %6
  %219 = load i64, i64* %218, align 8
  %220 = add i64 8, -7529869132156554123
  %221 = sub i64 %220, %219
  %222 = sub i64 %221, -7529869132156554123
  %223 = sub i64 8, %219
  %224 = mul i64 %222, %219
  %225 = sub i64 0, 8
  %226 = add i64 0, %225
  %227 = sub i64 0, 8
  %228 = sub i64 0, %219
  %229 = sub i64 %226, %228
  %230 = add i64 %226, %219
  %231 = add i64 0, 6589625408460734691
  %232 = sub i64 %231, 8
  %233 = sub i64 %232, 6589625408460734691
  %234 = sub i64 0, 8
  %235 = sub i64 0, %233
  %236 = sub i64 0, %219
  %237 = add i64 %235, %236
  %238 = sub i64 0, %237
  %239 = add i64 %233, %219
  %240 = mul i64 8, %219
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %214, i8* %217, i64 %240, i32 8, i1 false)
  store i32 90787324, i32* %21
  br label %247

; <label>:241:                                    ; preds = %22
  %242 = load volatile double**, double*** %7
  %243 = load double*, double** %242, align 8
  %244 = load volatile i64*, i64** %6
  %245 = load i64, i64* %244, align 8
  %246 = getelementptr inbounds double, double* %243, i64 %245
  store i32 1780907918, i32* %21
  br label %247

; <label>:247:                                    ; preds = %241, %211, %186, %152, %136, %135, %99, %83, %80, %33, %25, %24
  br label %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZNSt10_Iter_baseIPdLb0EE7_S_baseES0_(double*) #5 comdat align 2 {
  %2 = alloca double*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.485
  %6 = load i32, i32* @y.486
  %7 = sub i32 %5, 1694078162
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1694078162
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1657307343, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1657307343, label %19
    i32 723900097, label %27
    i32 -1724053459, label %57
    i32 524681164, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 723900097, i32 524681164
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca double*, align 8
  store double* %0, double** %28, align 8
  %29 = load double*, double** %28, align 8
  store double* %29, double** %2
  %30 = load i32, i32* @x.485
  %31 = load i32, i32* @y.486
  %32 = sub i32 %30, 806898477
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 806898477
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1724053459, i32 524681164
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile double*, double** %2
  ret double* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca double*, align 8
  store double* %0, double** %60, align 8
  %61 = load double*, double** %60, align 8
  store i32 723900097, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt10_Iter_baseISt13move_iteratorIPdELb1EE7_S_baseES2_(double*) #0 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.32", align 8
  %3 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %2, i32 0, i32 0
  store double* %0, double** %3, align 8
  %4 = call double* @_ZNKSt13move_iteratorIPdE4baseEv(%"class.std::move_iterator.32"* %2)
  ret double* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZNKSt13move_iteratorIPdE4baseEv(%"class.std::move_iterator.32"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.32"*, align 8
  store %"class.std::move_iterator.32"* %0, %"class.std::move_iterator.32"** %2, align 8
  %3 = load %"class.std::move_iterator.32"*, %"class.std::move_iterator.32"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %3, i32 0, i32 0
  %5 = load double*, double** %4, align 8
  ret double* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPdEC2ES0_(%"class.std::move_iterator.32"*, double*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.32"*, align 8
  %4 = alloca double*, align 8
  store %"class.std::move_iterator.32"* %0, %"class.std::move_iterator.32"** %3, align 8
  store double* %1, double** %4, align 8
  %5 = load %"class.std::move_iterator.32"*, %"class.std::move_iterator.32"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %5, i32 0, i32 0
  %7 = load double*, double** %4, align 8
  store double* %7, double** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIdE7destroyIdEEvPT_(%"class.__gnu_cxx::new_allocator.6"*, double*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %4 = alloca double*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %3, align 8
  store double* %1, double** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPdEvT_S1_(double*, double*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.495
  %6 = load i32, i32* @y.496
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 56739551, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %52
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 56739551, label %18
    i32 1887552324, label %26
    i32 -1619632109, label %46
    i32 44815375, label %47
  ]

; <label>:17:                                     ; preds = %15
  br label %52

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1887552324, i32 44815375
  store i32 %25, i32* %14
  br label %52

; <label>:26:                                     ; preds = %15
  %27 = alloca double*, align 8
  %28 = alloca double*, align 8
  store double* %0, double** %27, align 8
  store double* %1, double** %28, align 8
  %29 = load double*, double** %27, align 8
  %30 = load double*, double** %28, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_(double* %29, double* %30)
  %31 = load i32, i32* @x.495
  %32 = load i32, i32* @y.496
  %33 = sub i32 %31, 293834170
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 293834170
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -1619632109, i32 44815375
  store i32 %45, i32* %14
  br label %52

; <label>:46:                                     ; preds = %15
  ret void

; <label>:47:                                     ; preds = %15
  %48 = alloca double*, align 8
  %49 = alloca double*, align 8
  store double* %0, double** %48, align 8
  store double* %1, double** %49, align 8
  %50 = load double*, double** %48, align 8
  %51 = load double*, double** %49, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_(double* %50, double* %51)
  store i32 1887552324, i32* %14
  br label %52

; <label>:52:                                     ; preds = %47, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_(double*, double*) #5 comdat align 2 {
  %3 = alloca double*, align 8
  %4 = alloca double*, align 8
  store double* %0, double** %3, align 8
  store double* %1, double** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm(%"class.std::allocator.5"* dereferenceable(1), double*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.5"*, align 8
  %5 = alloca double*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %4, align 8
  store double* %1, double** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %4, align 8
  %8 = bitcast %"class.std::allocator.5"* %7 to %"class.__gnu_cxx::new_allocator.6"*
  %9 = load double*, double** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm(%"class.__gnu_cxx::new_allocator.6"* %8, double* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm(%"class.__gnu_cxx::new_allocator.6"*, double*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %5 = alloca double*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  store double* %1, double** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  %8 = load double*, double** %5, align 8
  %9 = bitcast double* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_(%"class.std::vector.8"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) #0 comdat align 2 {
  %3 = alloca %"class.std::__cxx11::basic_string"*
  %4 = alloca %"class.std::__cxx11::basic_string"*
  %5 = alloca %"class.std::vector.8"*
  %6 = alloca %"class.std::vector.8"*, align 8
  %7 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %6, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %7, align 8
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  store %"class.std::vector.8"* %8, %"class.std::vector.8"** %5
  %9 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %10 = bitcast %"class.std::vector.8"* %9 to %"struct.std::_Vector_base.9"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %12, align 8
  store %"class.std::__cxx11::basic_string"* %13, %"class.std::__cxx11::basic_string"** %4
  %14 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %15 = bitcast %"class.std::vector.8"* %14 to %"struct.std::_Vector_base.9"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %17, align 8
  store %"class.std::__cxx11::basic_string"* %18, %"class.std::__cxx11::basic_string"** %3
  %19 = alloca i32
  store i32 1789961875, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %156
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1789961875, label %23
    i32 1523053155, label %28
    i32 1174264349, label %46
    i32 794109559, label %74
    i32 1082695836, label %105
    i32 1353985956, label %106
    i32 -1470324683, label %134
    i32 -1161791770, label %150
    i32 104664215, label %151
    i32 -1646918346, label %155
  ]

; <label>:22:                                     ; preds = %20
  br label %156

; <label>:23:                                     ; preds = %20
  %24 = load volatile %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4
  %25 = load volatile %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3
  %26 = icmp ne %"class.std::__cxx11::basic_string"* %24, %25
  %27 = select i1 %26, i32 1523053155, i32 1174264349
  store i32 %27, i32* %19
  br label %156

; <label>:28:                                     ; preds = %20
  %29 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %30 = bitcast %"class.std::vector.8"* %29 to %"struct.std::_Vector_base.9"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %31 to %"class.std::allocator.10"*
  %33 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %34 = bitcast %"class.std::vector.8"* %33 to %"struct.std::_Vector_base.9"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %36, align 8
  %38 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %39 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32) %38) #3
  call void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_(%"class.std::allocator.10"* dereferenceable(1) %32, %"class.std::__cxx11::basic_string"* %37, %"class.std::__cxx11::basic_string"* dereferenceable(32) %39)
  %40 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %41 = bitcast %"class.std::vector.8"* %40 to %"struct.std::_Vector_base.9"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %42, i32 0, i32 1
  %44 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %43, align 8
  %45 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %44, i32 1
  store %"class.std::__cxx11::basic_string"* %45, %"class.std::__cxx11::basic_string"** %43, align 8
  store i32 1353985956, i32* %19
  br label %156

; <label>:46:                                     ; preds = %20
  %47 = load i32, i32* @x.503
  %48 = load i32, i32* @y.504
  %49 = add i32 %47, 1766112642
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, 1766112642
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 794109559, i32 104664215
  store i32 %73, i32* %19
  br label %156

; <label>:74:                                     ; preds = %20
  %75 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %76 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32) %75) #3
  %77 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIJS5_EEEvDpOT_(%"class.std::vector.8"* %77, %"class.std::__cxx11::basic_string"* dereferenceable(32) %76)
  %78 = load i32, i32* @x.503
  %79 = load i32, i32* @y.504
  %80 = add i32 %78, 194713740
  %81 = sub i32 %80, 1
  %82 = sub i32 %81, 194713740
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 true, true
  %91 = and i1 %88, true
  %92 = and i1 %86, %90
  %93 = and i1 %89, true
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 true, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  %104 = select i1 %102, i32 1082695836, i32 104664215
  store i32 %104, i32* %19
  br label %156

; <label>:105:                                    ; preds = %20
  store i32 1353985956, i32* %19
  br label %156

; <label>:106:                                    ; preds = %20
  %107 = load i32, i32* @x.503
  %108 = load i32, i32* @y.504
  %109 = add i32 %107, 1072838495
  %110 = sub i32 %109, 1
  %111 = sub i32 %110, 1072838495
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = xor i1 %115, true
  %118 = xor i1 %116, true
  %119 = xor i1 true, true
  %120 = and i1 %117, true
  %121 = and i1 %115, %119
  %122 = and i1 %118, true
  %123 = and i1 %116, %119
  %124 = or i1 %120, %121
  %125 = or i1 %122, %123
  %126 = xor i1 %124, %125
  %127 = or i1 %117, %118
  %128 = xor i1 %127, true
  %129 = or i1 true, %119
  %130 = and i1 %128, %129
  %131 = or i1 %126, %130
  %132 = or i1 %115, %116
  %133 = select i1 %131, i32 -1470324683, i32 -1646918346
  store i32 %133, i32* %19
  br label %156

; <label>:134:                                    ; preds = %20
  %135 = load i32, i32* @x.503
  %136 = load i32, i32* @y.504
  %137 = add i32 %135, 1894669540
  %138 = sub i32 %137, 1
  %139 = sub i32 %138, 1894669540
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = and i1 %143, %144
  %146 = xor i1 %143, %144
  %147 = or i1 %145, %146
  %148 = or i1 %143, %144
  %149 = select i1 %147, i32 -1161791770, i32 -1646918346
  store i32 %149, i32* %19
  br label %156

; <label>:150:                                    ; preds = %20
  ret void

; <label>:151:                                    ; preds = %20
  %152 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %153 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32) %152) #3
  %154 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIJS5_EEEvDpOT_(%"class.std::vector.8"* %154, %"class.std::__cxx11::basic_string"* dereferenceable(32) %153)
  store i32 794109559, i32* %19
  br label %156

; <label>:155:                                    ; preds = %20
  store i32 -1470324683, i32* %19
  br label %156

; <label>:156:                                    ; preds = %155, %151, %134, %106, %105, %74, %46, %28, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::__cxx11::basic_string"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %2, align 8
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2, align 8
  ret %"class.std::__cxx11::basic_string"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_(%"class.std::allocator.10"* dereferenceable(1), %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.507
  %7 = load i32, i32* @y.508
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 505244807, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %84
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 505244807, label %19
    i32 -559515010, label %39
    i32 189749173, label %74
    i32 -861480738, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %84

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -559515010, i32 -861480738
  store i32 %38, i32* %15
  br label %84

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.10"*, align 8
  %41 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %42 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %40, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %41, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %42, align 8
  %43 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %40, align 8
  %44 = bitcast %"class.std::allocator.10"* %43 to %"class.__gnu_cxx::new_allocator.11"*
  %45 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %41, align 8
  %46 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %42, align 8
  %47 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32) %46) #3
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JS6_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.11"* %44, %"class.std::__cxx11::basic_string"* %45, %"class.std::__cxx11::basic_string"* dereferenceable(32) %47)
  %48 = load i32, i32* @x.507
  %49 = load i32, i32* @y.508
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 189749173, i32 -861480738
  store i32 %73, i32* %15
  br label %84

; <label>:74:                                     ; preds = %16
  ret void

; <label>:75:                                     ; preds = %16
  %76 = alloca %"class.std::allocator.10"*, align 8
  %77 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %78 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %76, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %77, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %78, align 8
  %79 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %76, align 8
  %80 = bitcast %"class.std::allocator.10"* %79 to %"class.__gnu_cxx::new_allocator.11"*
  %81 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %77, align 8
  %82 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %78, align 8
  %83 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32) %82) #3
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JS6_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.11"* %80, %"class.std::__cxx11::basic_string"* %81, %"class.std::__cxx11::basic_string"* dereferenceable(32) %83)
  store i32 -559515010, i32* %15
  br label %84

; <label>:84:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"class.std::__cxx11::basic_string"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.509
  %6 = load i32, i32* @y.510
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -2066961322, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2066961322, label %18
    i32 429382247, label %26
    i32 861323213, label %56
    i32 822300341, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 429382247, i32 822300341
  store i32 %25, i32* %14
  br label %61

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %27, align 8
  %28 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %27, align 8
  store %"class.std::__cxx11::basic_string"* %28, %"class.std::__cxx11::basic_string"** %2
  %29 = load i32, i32* @x.509
  %30 = load i32, i32* @y.510
  %31 = sub i32 %29, -1301209155
  %32 = sub i32 %31, 1
  %33 = add i32 %32, -1301209155
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 861323213, i32 822300341
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  %57 = load volatile %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2
  ret %"class.std::__cxx11::basic_string"* %57

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %59, align 8
  %60 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %59, align 8
  store i32 429382247, i32* %14
  br label %61

; <label>:61:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIJS5_EEEvDpOT_(%"class.std::vector.8"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %7 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %10 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc(%"class.std::vector.8"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %13 = load i64, i64* %5, align 8
  %14 = call %"class.std::__cxx11::basic_string"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm(%"struct.std::_Vector_base.9"* %12, i64 %13)
  store %"class.std::__cxx11::basic_string"* %14, %"class.std::__cxx11::basic_string"** %6, align 8
  %15 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  store %"class.std::__cxx11::basic_string"* %15, %"class.std::__cxx11::basic_string"** %7, align 8
  %16 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %17 to %"class.std::allocator.10"*
  %19 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %20 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector.8"* %10) #3
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %19, i64 %20
  %22 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %23 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32) %22) #3
  invoke void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_(%"class.std::allocator.10"* dereferenceable(1) %18, %"class.std::__cxx11::basic_string"* %21, %"class.std::__cxx11::basic_string"* dereferenceable(32) %23)
          to label %24 unwind label %40

; <label>:24:                                     ; preds = %2
  store %"class.std::__cxx11::basic_string"* null, %"class.std::__cxx11::basic_string"** %7, align 8
  %25 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %26, i32 0, i32 0
  %28 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %27, align 8
  %29 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %30, i32 0, i32 1
  %32 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %31, align 8
  %33 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %34 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %35 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %34) #3
  %36 = invoke %"class.std::__cxx11::basic_string"* @_ZSt34__uninitialized_move_if_noexcept_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_(%"class.std::__cxx11::basic_string"* %28, %"class.std::__cxx11::basic_string"* %32, %"class.std::__cxx11::basic_string"* %33, %"class.std::allocator.10"* dereferenceable(1) %35)
          to label %37 unwind label %40

; <label>:37:                                     ; preds = %24
  store %"class.std::__cxx11::basic_string"* %36, %"class.std::__cxx11::basic_string"** %7, align 8
  %38 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %39 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %38, i32 1
  store %"class.std::__cxx11::basic_string"* %39, %"class.std::__cxx11::basic_string"** %7, align 8
  br label %292

; <label>:40:                                     ; preds = %24, %2
  %41 = load i32, i32* @x.511
  %42 = load i32, i32* @y.512
  %43 = sub i32 %41, -412647612
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -412647612
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  br i1 %65, label %67, label %429

; <label>:67:                                     ; preds = %40, %429
  %68 = landingpad { i8*, i32 }
          catch i8* null
  %69 = extractvalue { i8*, i32 } %68, 0
  store i8* %69, i8** %8, align 8
  %70 = extractvalue { i8*, i32 } %68, 1
  store i32 %70, i32* %9, align 4
  %71 = load i32, i32* @x.511
  %72 = load i32, i32* @y.512
  %73 = sub i32 %71, 292138370
  %74 = sub i32 %73, 1
  %75 = add i32 %74, 292138370
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  br i1 %83, label %85, label %429

; <label>:85:                                     ; preds = %67
  br label %86

; <label>:86:                                     ; preds = %85
  %87 = load i8*, i8** %8, align 8
  %88 = call i8* @__cxa_begin_catch(i8* %87) #3
  %89 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %90 = icmp ne %"class.std::__cxx11::basic_string"* %89, null
  br i1 %90, label %144, label %91

; <label>:91:                                     ; preds = %86
  %92 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %93 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %92, i32 0, i32 0
  %94 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %93 to %"class.std::allocator.10"*
  %95 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %96 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector.8"* %10) #3
  %97 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %95, i64 %96
  invoke void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS5_EEvRS6_PT_(%"class.std::allocator.10"* dereferenceable(1) %94, %"class.std::__cxx11::basic_string"* %97)
          to label %98 unwind label %99

; <label>:98:                                     ; preds = %91
  br label %150

; <label>:99:                                     ; preds = %248, %206, %144, %91
  %100 = load i32, i32* @x.511
  %101 = load i32, i32* @y.512
  %102 = sub i32 0, 1
  %103 = add i32 %100, %102
  %104 = sub i32 %100, 1
  %105 = mul i32 %100, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %101, 10
  %109 = and i1 %107, %108
  %110 = xor i1 %107, %108
  %111 = or i1 %109, %110
  %112 = or i1 %107, %108
  br i1 %111, label %113, label %433

; <label>:113:                                    ; preds = %99, %433
  %114 = landingpad { i8*, i32 }
          cleanup
  %115 = extractvalue { i8*, i32 } %114, 0
  store i8* %115, i8** %8, align 8
  %116 = extractvalue { i8*, i32 } %114, 1
  store i32 %116, i32* %9, align 4
  %117 = load i32, i32* @x.511
  %118 = load i32, i32* @y.512
  %119 = sub i32 %117, -783770166
  %120 = sub i32 %119, 1
  %121 = add i32 %120, -783770166
  %122 = sub i32 %117, 1
  %123 = mul i32 %117, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %118, 10
  %127 = xor i1 %125, true
  %128 = xor i1 %126, true
  %129 = xor i1 false, true
  %130 = and i1 %127, false
  %131 = and i1 %125, %129
  %132 = and i1 %128, false
  %133 = and i1 %126, %129
  %134 = or i1 %130, %131
  %135 = or i1 %132, %133
  %136 = xor i1 %134, %135
  %137 = or i1 %127, %128
  %138 = xor i1 %137, true
  %139 = or i1 false, %129
  %140 = and i1 %138, %139
  %141 = or i1 %136, %140
  %142 = or i1 %125, %126
  br i1 %141, label %143, label %433

; <label>:143:                                    ; preds = %113
  invoke void @__cxa_end_catch()
          to label %249 unwind label %383

; <label>:144:                                    ; preds = %86
  %145 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %146 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %147 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %148 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %147) #3
  invoke void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E(%"class.std::__cxx11::basic_string"* %145, %"class.std::__cxx11::basic_string"* %146, %"class.std::allocator.10"* dereferenceable(1) %148)
          to label %149 unwind label %99

; <label>:149:                                    ; preds = %144
  br label %150

; <label>:150:                                    ; preds = %149, %98
  %151 = load i32, i32* @x.511
  %152 = load i32, i32* @y.512
  %153 = add i32 %151, -703384674
  %154 = sub i32 %153, 1
  %155 = sub i32 %154, -703384674
  %156 = sub i32 %151, 1
  %157 = mul i32 %151, %155
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %152, 10
  %161 = xor i1 %159, true
  %162 = xor i1 %160, true
  %163 = xor i1 true, true
  %164 = and i1 %161, true
  %165 = and i1 %159, %163
  %166 = and i1 %162, true
  %167 = and i1 %160, %163
  %168 = or i1 %164, %165
  %169 = or i1 %166, %167
  %170 = xor i1 %168, %169
  %171 = or i1 %161, %162
  %172 = xor i1 %171, true
  %173 = or i1 true, %163
  %174 = and i1 %172, %173
  %175 = or i1 %170, %174
  %176 = or i1 %159, %160
  br i1 %175, label %177, label %437

; <label>:177:                                    ; preds = %150, %437
  %178 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %179 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %180 = load i64, i64* %5, align 8
  %181 = load i32, i32* @x.511
  %182 = load i32, i32* @y.512
  %183 = sub i32 0, 1
  %184 = add i32 %181, %183
  %185 = sub i32 %181, 1
  %186 = mul i32 %181, %184
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %182, 10
  %190 = xor i1 %188, true
  %191 = xor i1 %189, true
  %192 = xor i1 true, true
  %193 = and i1 %190, true
  %194 = and i1 %188, %192
  %195 = and i1 %191, true
  %196 = and i1 %189, %192
  %197 = or i1 %193, %194
  %198 = or i1 %195, %196
  %199 = xor i1 %197, %198
  %200 = or i1 %190, %191
  %201 = xor i1 %200, true
  %202 = or i1 true, %192
  %203 = and i1 %201, %202
  %204 = or i1 %199, %203
  %205 = or i1 %188, %189
  br i1 %204, label %206, label %437

; <label>:206:                                    ; preds = %177
  invoke void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base.9"* %178, %"class.std::__cxx11::basic_string"* %179, i64 %180)
          to label %207 unwind label %99

; <label>:207:                                    ; preds = %206
  %208 = load i32, i32* @x.511
  %209 = load i32, i32* @y.512
  %210 = sub i32 %208, 2085468949
  %211 = sub i32 %210, 1
  %212 = add i32 %211, 2085468949
  %213 = sub i32 %208, 1
  %214 = mul i32 %208, %212
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %209, 10
  %218 = xor i1 %216, true
  %219 = xor i1 %217, true
  %220 = xor i1 false, true
  %221 = and i1 %218, false
  %222 = and i1 %216, %220
  %223 = and i1 %219, false
  %224 = and i1 %217, %220
  %225 = or i1 %221, %222
  %226 = or i1 %223, %224
  %227 = xor i1 %225, %226
  %228 = or i1 %218, %219
  %229 = xor i1 %228, true
  %230 = or i1 false, %220
  %231 = and i1 %229, %230
  %232 = or i1 %227, %231
  %233 = or i1 %216, %217
  br i1 %232, label %234, label %441

; <label>:234:                                    ; preds = %207, %441
  %235 = load i32, i32* @x.511
  %236 = load i32, i32* @y.512
  %237 = sub i32 0, 1
  %238 = add i32 %235, %237
  %239 = sub i32 %235, 1
  %240 = mul i32 %235, %238
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %236, 10
  %244 = and i1 %242, %243
  %245 = xor i1 %242, %243
  %246 = or i1 %244, %245
  %247 = or i1 %242, %243
  br i1 %246, label %248, label %441

; <label>:248:                                    ; preds = %234
  invoke void @__cxa_rethrow() #12
          to label %386 unwind label %99

; <label>:249:                                    ; preds = %143
  %250 = load i32, i32* @x.511
  %251 = load i32, i32* @y.512
  %252 = add i32 %250, 251173287
  %253 = sub i32 %252, 1
  %254 = sub i32 %253, 251173287
  %255 = sub i32 %250, 1
  %256 = mul i32 %250, %254
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %251, 10
  %260 = and i1 %258, %259
  %261 = xor i1 %258, %259
  %262 = or i1 %260, %261
  %263 = or i1 %258, %259
  br i1 %262, label %264, label %442

; <label>:264:                                    ; preds = %249, %442
  %265 = load i32, i32* @x.511
  %266 = load i32, i32* @y.512
  %267 = sub i32 %265, -1876472251
  %268 = sub i32 %267, 1
  %269 = add i32 %268, -1876472251
  %270 = sub i32 %265, 1
  %271 = mul i32 %265, %269
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %266, 10
  %275 = xor i1 %273, true
  %276 = xor i1 %274, true
  %277 = xor i1 true, true
  %278 = and i1 %275, true
  %279 = and i1 %273, %277
  %280 = and i1 %276, true
  %281 = and i1 %274, %277
  %282 = or i1 %278, %279
  %283 = or i1 %280, %281
  %284 = xor i1 %282, %283
  %285 = or i1 %275, %276
  %286 = xor i1 %285, true
  %287 = or i1 true, %277
  %288 = and i1 %286, %287
  %289 = or i1 %284, %288
  %290 = or i1 %273, %274
  br i1 %289, label %291, label %442

; <label>:291:                                    ; preds = %264
  br label %337

; <label>:292:                                    ; preds = %37
  %293 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %294 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %293, i32 0, i32 0
  %295 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %294, i32 0, i32 0
  %296 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %295, align 8
  %297 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %298 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %297, i32 0, i32 0
  %299 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %298, i32 0, i32 1
  %300 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %299, align 8
  %301 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %302 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %301) #3
  call void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E(%"class.std::__cxx11::basic_string"* %296, %"class.std::__cxx11::basic_string"* %300, %"class.std::allocator.10"* dereferenceable(1) %302)
  %303 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %304 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %305 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %304, i32 0, i32 0
  %306 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %305, i32 0, i32 0
  %307 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %306, align 8
  %308 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %309 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %308, i32 0, i32 0
  %310 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %309, i32 0, i32 2
  %311 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %310, align 8
  %312 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %313 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %312, i32 0, i32 0
  %314 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %313, i32 0, i32 0
  %315 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %314, align 8
  %316 = ptrtoint %"class.std::__cxx11::basic_string"* %311 to i64
  %317 = ptrtoint %"class.std::__cxx11::basic_string"* %315 to i64
  %318 = add i64 %316, 4275345981319890283
  %319 = sub i64 %318, %317
  %320 = sub i64 %319, 4275345981319890283
  %321 = sub i64 %316, %317
  %322 = sdiv exact i64 %320, 32
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base.9"* %303, %"class.std::__cxx11::basic_string"* %307, i64 %322)
  %323 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %324 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %325 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %324, i32 0, i32 0
  %326 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %325, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %323, %"class.std::__cxx11::basic_string"** %326, align 8
  %327 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %328 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %329 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %328, i32 0, i32 0
  %330 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %329, i32 0, i32 1
  store %"class.std::__cxx11::basic_string"* %327, %"class.std::__cxx11::basic_string"** %330, align 8
  %331 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %332 = load i64, i64* %5, align 8
  %333 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %331, i64 %332
  %334 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %335 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %334, i32 0, i32 0
  %336 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %335, i32 0, i32 2
  store %"class.std::__cxx11::basic_string"* %333, %"class.std::__cxx11::basic_string"** %336, align 8
  ret void

; <label>:337:                                    ; preds = %291
  %338 = load i32, i32* @x.511
  %339 = load i32, i32* @y.512
  %340 = sub i32 %338, 1803814354
  %341 = sub i32 %340, 1
  %342 = add i32 %341, 1803814354
  %343 = sub i32 %338, 1
  %344 = mul i32 %338, %342
  %345 = urem i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %339, 10
  %348 = xor i1 %346, true
  %349 = xor i1 %347, true
  %350 = xor i1 true, true
  %351 = and i1 %348, true
  %352 = and i1 %346, %350
  %353 = and i1 %349, true
  %354 = and i1 %347, %350
  %355 = or i1 %351, %352
  %356 = or i1 %353, %354
  %357 = xor i1 %355, %356
  %358 = or i1 %348, %349
  %359 = xor i1 %358, true
  %360 = or i1 true, %350
  %361 = and i1 %359, %360
  %362 = or i1 %357, %361
  %363 = or i1 %346, %347
  br i1 %362, label %364, label %443

; <label>:364:                                    ; preds = %337, %443
  %365 = load i8*, i8** %8, align 8
  %366 = load i32, i32* %9, align 4
  %367 = insertvalue { i8*, i32 } undef, i8* %365, 0
  %368 = insertvalue { i8*, i32 } %367, i32 %366, 1
  %369 = load i32, i32* @x.511
  %370 = load i32, i32* @y.512
  %371 = sub i32 0, 1
  %372 = add i32 %369, %371
  %373 = sub i32 %369, 1
  %374 = mul i32 %369, %372
  %375 = urem i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = icmp slt i32 %370, 10
  %378 = and i1 %376, %377
  %379 = xor i1 %376, %377
  %380 = or i1 %378, %379
  %381 = or i1 %376, %377
  br i1 %380, label %382, label %443

; <label>:382:                                    ; preds = %364
  resume { i8*, i32 } %368

; <label>:383:                                    ; preds = %143
  %384 = landingpad { i8*, i32 }
          catch i8* null
  %385 = extractvalue { i8*, i32 } %384, 0
  call void @__clang_call_terminate(i8* %385) #10
  unreachable

; <label>:386:                                    ; preds = %248
  %387 = load i32, i32* @x.511
  %388 = load i32, i32* @y.512
  %389 = add i32 %387, 1156078476
  %390 = sub i32 %389, 1
  %391 = sub i32 %390, 1156078476
  %392 = sub i32 %387, 1
  %393 = mul i32 %387, %391
  %394 = urem i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = icmp slt i32 %388, 10
  %397 = xor i1 %395, true
  %398 = xor i1 %396, true
  %399 = xor i1 false, true
  %400 = and i1 %397, false
  %401 = and i1 %395, %399
  %402 = and i1 %398, false
  %403 = and i1 %396, %399
  %404 = or i1 %400, %401
  %405 = or i1 %402, %403
  %406 = xor i1 %404, %405
  %407 = or i1 %397, %398
  %408 = xor i1 %407, true
  %409 = or i1 false, %399
  %410 = and i1 %408, %409
  %411 = or i1 %406, %410
  %412 = or i1 %395, %396
  br i1 %411, label %413, label %448

; <label>:413:                                    ; preds = %386, %448
  %414 = load i32, i32* @x.511
  %415 = load i32, i32* @y.512
  %416 = add i32 %414, 971063675
  %417 = sub i32 %416, 1
  %418 = sub i32 %417, 971063675
  %419 = sub i32 %414, 1
  %420 = mul i32 %414, %418
  %421 = urem i32 %420, 2
  %422 = icmp eq i32 %421, 0
  %423 = icmp slt i32 %415, 10
  %424 = and i1 %422, %423
  %425 = xor i1 %422, %423
  %426 = or i1 %424, %425
  %427 = or i1 %422, %423
  br i1 %426, label %428, label %448

; <label>:428:                                    ; preds = %413
  unreachable

; <label>:429:                                    ; preds = %67, %40
  %430 = landingpad { i8*, i32 }
          catch i8* null
  %431 = extractvalue { i8*, i32 } %430, 0
  store i8* %431, i8** %8, align 8
  %432 = extractvalue { i8*, i32 } %430, 1
  store i32 %432, i32* %9, align 4
  br label %67

; <label>:433:                                    ; preds = %113, %99
  %434 = landingpad { i8*, i32 }
          cleanup
  %435 = extractvalue { i8*, i32 } %434, 0
  store i8* %435, i8** %8, align 8
  %436 = extractvalue { i8*, i32 } %434, 1
  store i32 %436, i32* %9, align 4
  br label %113

; <label>:437:                                    ; preds = %177, %150
  %438 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %439 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %440 = load i64, i64* %5, align 8
  br label %177

; <label>:441:                                    ; preds = %234, %207
  br label %234

; <label>:442:                                    ; preds = %264, %249
  br label %264

; <label>:443:                                    ; preds = %364, %337
  %444 = load i8*, i8** %8, align 8
  %445 = load i32, i32* %9, align 4
  %446 = insertvalue { i8*, i32 } undef, i8* %444, 0
  %447 = insertvalue { i8*, i32 } %446, i32 %445, 1
  br label %364

; <label>:448:                                    ; preds = %413, %386
  br label %413
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JS6_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.11"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %4, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %5, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %4, align 8
  %8 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %9 = bitcast %"class.std::__cxx11::basic_string"* %8 to i8*
  %10 = bitcast i8* %9 to %"class.std::__cxx11::basic_string"*
  %11 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %12 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32) %11) #3
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_(%"class.std::__cxx11::basic_string"* %10, %"class.std::__cxx11::basic_string"* dereferenceable(32) %12) #3
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc(%"class.std::vector.8"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.std::vector.8"*
  %8 = alloca %"class.std::vector.8"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %8, align 8
  store i64 %1, i64* %9, align 8
  store i8* %2, i8** %10, align 8
  %13 = load %"class.std::vector.8"*, %"class.std::vector.8"** %8, align 8
  store %"class.std::vector.8"* %13, %"class.std::vector.8"** %7
  %14 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %7
  %15 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv(%"class.std::vector.8"* %14) #3
  %16 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %7
  %17 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector.8"* %16) #3
  %18 = sub i64 %15, -6267817060043908854
  %19 = sub i64 %18, %17
  %20 = add i64 %19, -6267817060043908854
  %21 = sub i64 %15, %17
  store i64 %20, i64* %6
  %22 = load i64, i64* %9, align 8
  store i64 %22, i64* %5
  %23 = alloca i32
  store i32 -842634302, i32* %23
  %24 = alloca i64
  br label %25

; <label>:25:                                     ; preds = %3, %156
  %26 = load i32, i32* %23
  switch i32 %26, label %27 [
    i32 -842634302, label %28
    i32 -1405733592, label %33
    i32 -1549261914, label %60
    i32 -1527495943, label %76
    i32 1238632609, label %77
    i32 -1744939602, label %94
    i32 1926615657, label %100
    i32 -1285437998, label %103
    i32 1153315870, label %119
    i32 1704019738, label %148
    i32 -274877521, label %150
    i32 -94957495, label %152
    i32 -16423414, label %154
  ]

; <label>:27:                                     ; preds = %25
  br label %156

; <label>:28:                                     ; preds = %25
  %29 = load volatile i64, i64* %6
  %30 = load volatile i64, i64* %5
  %31 = icmp ult i64 %29, %30
  %32 = select i1 %31, i32 -1405733592, i32 1238632609
  store i32 %32, i32* %23
  br label %156

; <label>:33:                                     ; preds = %25
  %34 = load i32, i32* @x.515
  %35 = load i32, i32* @y.516
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -1549261914, i32 -94957495
  store i32 %59, i32* %23
  br label %156

; <label>:60:                                     ; preds = %25
  %61 = load i8*, i8** %10, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %61) #12
  %62 = load i32, i32* @x.515
  %63 = load i32, i32* @y.516
  %64 = sub i32 0, 1
  %65 = add i32 %62, %64
  %66 = sub i32 %62, 1
  %67 = mul i32 %62, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %63, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  %75 = select i1 %73, i32 -1527495943, i32 -94957495
  store i32 %75, i32* %23
  br label %156

; <label>:76:                                     ; preds = %25
  unreachable

; <label>:77:                                     ; preds = %25
  %78 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %7
  %79 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector.8"* %78) #3
  %80 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %7
  %81 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector.8"* %80) #3
  store i64 %81, i64* %12, align 8
  %82 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %12, i64* dereferenceable(8) %9)
  %83 = load i64, i64* %82, align 8
  %84 = sub i64 0, %79
  %85 = sub i64 0, %83
  %86 = add i64 %84, %85
  %87 = sub i64 0, %86
  %88 = add i64 %79, %83
  store i64 %87, i64* %11, align 8
  %89 = load i64, i64* %11, align 8
  %90 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %7
  %91 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector.8"* %90) #3
  %92 = icmp ult i64 %89, %91
  %93 = select i1 %92, i32 1926615657, i32 -1744939602
  store i32 %93, i32* %23
  br label %156

; <label>:94:                                     ; preds = %25
  %95 = load i64, i64* %11, align 8
  %96 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %7
  %97 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv(%"class.std::vector.8"* %96) #3
  %98 = icmp ugt i64 %95, %97
  %99 = select i1 %98, i32 1926615657, i32 -1285437998
  store i32 %99, i32* %23
  br label %156

; <label>:100:                                    ; preds = %25
  %101 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %7
  %102 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv(%"class.std::vector.8"* %101) #3
  store i32 -274877521, i32* %23
  store i64 %102, i64* %24
  br label %156

; <label>:103:                                    ; preds = %25
  %104 = load i32, i32* @x.515
  %105 = load i32, i32* @y.516
  %106 = sub i32 %104, -1405344590
  %107 = sub i32 %106, 1
  %108 = add i32 %107, -1405344590
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = and i1 %112, %113
  %115 = xor i1 %112, %113
  %116 = or i1 %114, %115
  %117 = or i1 %112, %113
  %118 = select i1 %116, i32 1153315870, i32 -16423414
  store i32 %118, i32* %23
  br label %156

; <label>:119:                                    ; preds = %25
  %120 = load i64, i64* %11, align 8
  store i64 %120, i64* %4
  %121 = load i32, i32* @x.515
  %122 = load i32, i32* @y.516
  %123 = add i32 %121, -847786158
  %124 = sub i32 %123, 1
  %125 = sub i32 %124, -847786158
  %126 = sub i32 %121, 1
  %127 = mul i32 %121, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %122, 10
  %131 = xor i1 %129, true
  %132 = xor i1 %130, true
  %133 = xor i1 true, true
  %134 = and i1 %131, true
  %135 = and i1 %129, %133
  %136 = and i1 %132, true
  %137 = and i1 %130, %133
  %138 = or i1 %134, %135
  %139 = or i1 %136, %137
  %140 = xor i1 %138, %139
  %141 = or i1 %131, %132
  %142 = xor i1 %141, true
  %143 = or i1 true, %133
  %144 = and i1 %142, %143
  %145 = or i1 %140, %144
  %146 = or i1 %129, %130
  %147 = select i1 %145, i32 1704019738, i32 -16423414
  store i32 %147, i32* %23
  br label %156

; <label>:148:                                    ; preds = %25
  store i32 -274877521, i32* %23
  %149 = load volatile i64, i64* %4
  store i64 %149, i64* %24
  br label %156

; <label>:150:                                    ; preds = %25
  %151 = load i64, i64* %24
  ret i64 %151

; <label>:152:                                    ; preds = %25
  %153 = load i8*, i8** %10, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %153) #12
  store i32 -1549261914, i32* %23
  br label %156

; <label>:154:                                    ; preds = %25
  %155 = load i64, i64* %11, align 8
  store i32 1153315870, i32* %23
  br label %156

; <label>:156:                                    ; preds = %154, %152, %148, %119, %103, %100, %94, %77, %60, %33, %28, %27
  br label %25
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm(%"struct.std::_Vector_base.9"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"struct.std::_Vector_base.9"*
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.517
  %9 = load i32, i32* @y.518
  %10 = sub i32 %8, 854905858
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 854905858
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -1794674063, i32* %18
  %19 = alloca %"class.std::__cxx11::basic_string"*
  br label %20

; <label>:20:                                     ; preds = %2, %141
  %21 = load i32, i32* %18
  switch i32 %21, label %22 [
    i32 -1794674063, label %23
    i32 1842648859, label %43
    i32 1869049202, label %78
    i32 -538865536, label %81
    i32 1029096099, label %88
    i32 1366678662, label %116
    i32 901151600, label %131
    i32 -1281869043, label %132
    i32 1779889727, label %134
    i32 -1438854205, label %140
  ]

; <label>:22:                                     ; preds = %20
  br label %141

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %7
  %25 = load volatile i1, i1* %6
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 1842648859, i32 1779889727
  store i32 %42, i32* %18
  br label %141

; <label>:43:                                     ; preds = %20
  %44 = alloca %"struct.std::_Vector_base.9"*, align 8
  %45 = alloca i64, align 8
  store i64* %45, i64** %5
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %44, align 8
  %46 = load volatile i64*, i64** %5
  store i64 %1, i64* %46, align 8
  %47 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %44, align 8
  store %"struct.std::_Vector_base.9"* %47, %"struct.std::_Vector_base.9"** %4
  %48 = load volatile i64*, i64** %5
  %49 = load i64, i64* %48, align 8
  %50 = icmp ne i64 %49, 0
  store i1 %50, i1* %3
  %51 = load i32, i32* @x.517
  %52 = load i32, i32* @y.518
  %53 = add i32 %51, -2137471594
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, -2137471594
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 1869049202, i32 1779889727
  store i32 %77, i32* %18
  br label %141

; <label>:78:                                     ; preds = %20
  %79 = load volatile i1, i1* %3
  %80 = select i1 %79, i32 -538865536, i32 1029096099
  store i32 %80, i32* %18
  br label %141

; <label>:81:                                     ; preds = %20
  %82 = load volatile %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %4
  %83 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %82, i32 0, i32 0
  %84 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %83 to %"class.std::allocator.10"*
  %85 = load volatile i64*, i64** %5
  %86 = load i64, i64* %85, align 8
  %87 = call %"class.std::__cxx11::basic_string"* @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m(%"class.std::allocator.10"* dereferenceable(1) %84, i64 %86)
  store i32 -1281869043, i32* %18
  store %"class.std::__cxx11::basic_string"* %87, %"class.std::__cxx11::basic_string"** %19
  br label %141

; <label>:88:                                     ; preds = %20
  %89 = load i32, i32* @x.517
  %90 = load i32, i32* @y.518
  %91 = add i32 %89, -1552653777
  %92 = sub i32 %91, 1
  %93 = sub i32 %92, -1552653777
  %94 = sub i32 %89, 1
  %95 = mul i32 %89, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %90, 10
  %99 = xor i1 %97, true
  %100 = xor i1 %98, true
  %101 = xor i1 false, true
  %102 = and i1 %99, false
  %103 = and i1 %97, %101
  %104 = and i1 %100, false
  %105 = and i1 %98, %101
  %106 = or i1 %102, %103
  %107 = or i1 %104, %105
  %108 = xor i1 %106, %107
  %109 = or i1 %99, %100
  %110 = xor i1 %109, true
  %111 = or i1 false, %101
  %112 = and i1 %110, %111
  %113 = or i1 %108, %112
  %114 = or i1 %97, %98
  %115 = select i1 %113, i32 1366678662, i32 -1438854205
  store i32 %115, i32* %18
  br label %141

; <label>:116:                                    ; preds = %20
  %117 = load i32, i32* @x.517
  %118 = load i32, i32* @y.518
  %119 = sub i32 0, 1
  %120 = add i32 %117, %119
  %121 = sub i32 %117, 1
  %122 = mul i32 %117, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %118, 10
  %126 = and i1 %124, %125
  %127 = xor i1 %124, %125
  %128 = or i1 %126, %127
  %129 = or i1 %124, %125
  %130 = select i1 %128, i32 901151600, i32 -1438854205
  store i32 %130, i32* %18
  br label %141

; <label>:131:                                    ; preds = %20
  store i32 -1281869043, i32* %18
  store %"class.std::__cxx11::basic_string"* null, %"class.std::__cxx11::basic_string"** %19
  br label %141

; <label>:132:                                    ; preds = %20
  %133 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %19
  ret %"class.std::__cxx11::basic_string"* %133

; <label>:134:                                    ; preds = %20
  %135 = alloca %"struct.std::_Vector_base.9"*, align 8
  %136 = alloca i64, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %135, align 8
  store i64 %1, i64* %136, align 8
  %137 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %135, align 8
  %138 = load i64, i64* %136, align 8
  %139 = icmp ne i64 %138, 0
  store i32 1842648859, i32* %18
  br label %141

; <label>:140:                                    ; preds = %20
  store i32 1366678662, i32* %18
  br label %141

; <label>:141:                                    ; preds = %140, %134, %131, %116, %88, %81, %78, %43, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %4 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %8 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %10, align 8
  %12 = ptrtoint %"class.std::__cxx11::basic_string"* %7 to i64
  %13 = ptrtoint %"class.std::__cxx11::basic_string"* %11 to i64
  %14 = add i64 %12, -5287279220741967745
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, -5287279220741967745
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 32
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZSt34__uninitialized_move_if_noexcept_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %7 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %8 = alloca %"class.std::allocator.10"*, align 8
  %9 = alloca %"class.std::move_iterator.33", align 8
  %10 = alloca %"class.std::move_iterator.33", align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %5, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %6, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %7, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %8, align 8
  %11 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %12 = call %"class.std::__cxx11::basic_string"* @_ZSt32__make_move_if_noexcept_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt13move_iteratorIS6_EET0_T_(%"class.std::__cxx11::basic_string"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %9, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %12, %"class.std::__cxx11::basic_string"** %13, align 8
  %14 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %15 = call %"class.std::__cxx11::basic_string"* @_ZSt32__make_move_if_noexcept_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt13move_iteratorIS6_EET0_T_(%"class.std::__cxx11::basic_string"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %10, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %15, %"class.std::__cxx11::basic_string"** %16, align 8
  %17 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %18 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %9, i32 0, i32 0
  %20 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %10, i32 0, i32 0
  %22 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %21, align 8
  %23 = call %"class.std::__cxx11::basic_string"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_S6_ET0_T_SA_S9_RSaIT1_E(%"class.std::__cxx11::basic_string"* %20, %"class.std::__cxx11::basic_string"* %22, %"class.std::__cxx11::basic_string"* %17, %"class.std::allocator.10"* dereferenceable(1) %18)
  ret %"class.std::__cxx11::basic_string"* %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %2, align 8
  %3 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %4 to %"class.std::allocator.10"*
  ret %"class.std::allocator.10"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS5_EEvRS6_PT_(%"class.std::allocator.10"* dereferenceable(1), %"class.std::__cxx11::basic_string"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.10"*, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %5 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %3, align 8
  %6 = bitcast %"class.std::allocator.10"* %5 to %"class.__gnu_cxx::new_allocator.11"*
  %7 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7destroyIS6_EEvPT_(%"class.__gnu_cxx::new_allocator.11"* %6, %"class.std::__cxx11::basic_string"* %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %4, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %5, align 8
  store %"class.std::allocator.10"* %2, %"class.std::allocator.10"** %6, align 8
  %7 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %8 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  call void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_(%"class.std::__cxx11::basic_string"* %7, %"class.std::__cxx11::basic_string"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base.9"*, %"class.std::__cxx11::basic_string"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::__cxx11::basic_string"*
  %5 = alloca %"struct.std::_Vector_base.9"*
  %6 = alloca %"struct.std::_Vector_base.9"*, align 8
  %7 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %6, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %6, align 8
  store %"struct.std::_Vector_base.9"* %9, %"struct.std::_Vector_base.9"** %5
  %10 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  store %"class.std::__cxx11::basic_string"* %10, %"class.std::__cxx11::basic_string"** %4
  %11 = alloca i32
  store i32 -372118948, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -372118948, label %15
    i32 -1112688662, label %19
    i32 -824896059, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4
  %17 = icmp ne %"class.std::__cxx11::basic_string"* %16, null
  %18 = select i1 %17, i32 -1112688662, i32 -824896059
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %21 to %"class.std::allocator.10"*
  %23 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m(%"class.std::allocator.10"* dereferenceable(1) %22, %"class.std::__cxx11::basic_string"* %23, i64 %24)
  store i32 -824896059, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %4 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  %5 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_(%"class.std::allocator.10"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_(%"class.std::allocator.10"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %2, align 8
  %3 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %2, align 8
  %4 = bitcast %"class.std::allocator.10"* %3 to %"class.__gnu_cxx::new_allocator.11"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.10"* @_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.10"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.535
  %6 = load i32, i32* @y.536
  %7 = sub i32 %5, 1458272730
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1458272730
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 245827645, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 245827645, label %19
    i32 1988795511, label %27
    i32 -564993829, label %47
    i32 318960149, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1988795511, i32 318960149
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %28, align 8
  %29 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %30 to %"class.std::allocator.10"*
  store %"class.std::allocator.10"* %31, %"class.std::allocator.10"** %2
  %32 = load i32, i32* @x.535
  %33 = load i32, i32* @y.536
  %34 = add i32 %32, -586344768
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -586344768
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -564993829, i32 318960149
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile %"class.std::allocator.10"*, %"class.std::allocator.10"** %2
  ret %"class.std::allocator.10"* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %50, align 8
  %51 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %50, align 8
  %52 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %51, i32 0, i32 0
  %53 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %52 to %"class.std::allocator.10"*
  store i32 1988795511, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.537
  %5 = load i32, i32* @y.538
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -2137740641, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %46
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -2137740641, label %17
    i32 -15305261, label %25
    i32 -59831344, label %42
    i32 2121449575, label %43
  ]

; <label>:16:                                     ; preds = %14
  br label %46

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -15305261, i32 2121449575
  store i32 %24, i32* %13
  br label %46

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %26, align 8
  %28 = load i32, i32* @x.537
  %29 = load i32, i32* @y.538
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  %41 = select i1 %39, i32 -59831344, i32 2121449575
  store i32 %41, i32* %13
  br label %46

; <label>:42:                                     ; preds = %14
  ret i64 576460752303423487

; <label>:43:                                     ; preds = %14
  %44 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %44, align 8
  %45 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %44, align 8
  store i32 -15305261, i32* %13
  br label %46

; <label>:46:                                     ; preds = %43, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m(%"class.std::allocator.10"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.10"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %3, align 8
  %6 = bitcast %"class.std::allocator.10"* %5 to %"class.__gnu_cxx::new_allocator.11"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::__cxx11::basic_string"* @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.11"* %6, i64 %7, i8* null)
  ret %"class.std::__cxx11::basic_string"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.11"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::__cxx11::basic_string"*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 -790323942, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %120
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -790323942, label %17
    i32 -1015979972, label %22
    i32 1676619835, label %23
    i32 -177606867, label %51
    i32 -235336640, label %82
    i32 -1185024565, label %84
  ]

; <label>:16:                                     ; preds = %14
  br label %120

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 -1015979972, i32 1676619835
  store i32 %21, i32* %13
  br label %120

; <label>:22:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* @x.541
  %25 = load i32, i32* @y.542
  %26 = add i32 %24, 733091535
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, 733091535
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 false, true
  %37 = and i1 %34, false
  %38 = and i1 %32, %36
  %39 = and i1 %35, false
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 false, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  %50 = select i1 %48, i32 -177606867, i32 -1185024565
  store i32 %50, i32* %13
  br label %120

; <label>:51:                                     ; preds = %14
  %52 = load i64, i64* %8, align 8
  %53 = mul i64 %52, 32
  %54 = call i8* @_Znwm(i64 %53)
  %55 = bitcast i8* %54 to %"class.std::__cxx11::basic_string"*
  store %"class.std::__cxx11::basic_string"* %55, %"class.std::__cxx11::basic_string"** %4
  %56 = load i32, i32* @x.541
  %57 = load i32, i32* @y.542
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 false, true
  %68 = and i1 %65, false
  %69 = and i1 %63, %67
  %70 = and i1 %66, false
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 false, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  %81 = select i1 %79, i32 -235336640, i32 -1185024565
  store i32 %81, i32* %13
  br label %120

; <label>:82:                                     ; preds = %14
  %83 = load volatile %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4
  ret %"class.std::__cxx11::basic_string"* %83

; <label>:84:                                     ; preds = %14
  %85 = load i64, i64* %8, align 8
  %86 = sub i64 0, %85
  %87 = add i64 0, %86
  %88 = sub i64 0, %85
  %89 = sub i64 0, 32
  %90 = sub i64 %87, %89
  %91 = add i64 %87, 32
  %92 = sub i64 0, %85
  %93 = add i64 0, %92
  %94 = sub i64 0, %85
  %95 = sub i64 0, 32
  %96 = sub i64 %93, %95
  %97 = add i64 %93, 32
  %98 = sub i64 0, 6218216461763694376
  %99 = sub i64 %98, %85
  %100 = add i64 %99, 6218216461763694376
  %101 = sub i64 0, %85
  %102 = sub i64 %100, -3814144183993912568
  %103 = add i64 %102, 32
  %104 = add i64 %103, -3814144183993912568
  %105 = add i64 %100, 32
  %106 = sub i64 %85, -7549884180016766803
  %107 = sub i64 %106, 32
  %108 = add i64 %107, -7549884180016766803
  %109 = sub i64 %85, 32
  %110 = mul i64 %108, 32
  %111 = shl i64 %85, 32
  %112 = add i64 %85, 8206569881278524877
  %113 = sub i64 %112, 32
  %114 = sub i64 %113, 8206569881278524877
  %115 = sub i64 %85, 32
  %116 = mul i64 %114, 32
  %117 = mul i64 %85, 32
  %118 = call i8* @_Znwm(i64 %117)
  %119 = bitcast i8* %118 to %"class.std::__cxx11::basic_string"*
  store i32 -177606867, i32* %13
  br label %120

; <label>:120:                                    ; preds = %84, %51, %23, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_S6_ET0_T_SA_S9_RSaIT1_E(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.33", align 8
  %6 = alloca %"class.std::move_iterator.33", align 8
  %7 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %8 = alloca %"class.std::allocator.10"*, align 8
  %9 = alloca %"class.std::move_iterator.33", align 8
  %10 = alloca %"class.std::move_iterator.33", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %5, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %6, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %12, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %7, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.33"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.33"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.33"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.33"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %9, i32 0, i32 0
  %19 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %10, i32 0, i32 0
  %21 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %20, align 8
  %22 = call %"class.std::__cxx11::basic_string"* @_ZSt18uninitialized_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_ET0_T_SA_S9_(%"class.std::__cxx11::basic_string"* %19, %"class.std::__cxx11::basic_string"* %21, %"class.std::__cxx11::basic_string"* %17)
  ret %"class.std::__cxx11::basic_string"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZSt32__make_move_if_noexcept_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt13move_iteratorIS6_EET0_T_(%"class.std::__cxx11::basic_string"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.33", align 8
  %3 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %3, align 8
  %4 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3, align 8
  call void @_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ES6_(%"class.std::move_iterator.33"* %2, %"class.std::__cxx11::basic_string"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %2, i32 0, i32 0
  %6 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  ret %"class.std::__cxx11::basic_string"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZSt18uninitialized_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_ET0_T_SA_S9_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.33", align 8
  %5 = alloca %"class.std::move_iterator.33", align 8
  %6 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.33", align 8
  %9 = alloca %"class.std::move_iterator.33", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %4, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %5, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %11, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.33"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.33"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.33"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.33"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %8, i32 0, i32 0
  %18 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %9, i32 0, i32 0
  %20 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %19, align 8
  %21 = call %"class.std::__cxx11::basic_string"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES9_EET0_T_SC_SB_(%"class.std::__cxx11::basic_string"* %18, %"class.std::__cxx11::basic_string"* %20, %"class.std::__cxx11::basic_string"* %16)
  ret %"class.std::__cxx11::basic_string"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES9_EET0_T_SC_SB_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator.33", align 8
  %5 = alloca %"class.std::move_iterator.33", align 8
  %6 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %7 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %4, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %5, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %11, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %6, align 8
  %12 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  store %"class.std::__cxx11::basic_string"* %12, %"class.std::__cxx11::basic_string"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %138, %3
  %14 = load i32, i32* @x.549
  %15 = load i32, i32* @y.550
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %15, 10
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  br i1 %37, label %39, label %315

; <label>:39:                                     ; preds = %13, %315
  %40 = load i32, i32* @x.549
  %41 = load i32, i32* @y.550
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  br i1 %63, label %65, label %315

; <label>:65:                                     ; preds = %39
  %66 = invoke zeroext i1 @_ZStneIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator.33"* dereferenceable(8) %4, %"class.std::move_iterator.33"* dereferenceable(8) %5)
          to label %67 unwind label %139

; <label>:67:                                     ; preds = %65
  br i1 %66, label %68, label %202

; <label>:68:                                     ; preds = %67
  %69 = load i32, i32* @x.549
  %70 = load i32, i32* @y.550
  %71 = add i32 %69, 1761355148
  %72 = sub i32 %71, 1
  %73 = sub i32 %72, 1761355148
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  br i1 %81, label %83, label %316

; <label>:83:                                     ; preds = %68, %316
  %84 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %85 = call %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* dereferenceable(32) %84) #3
  %86 = load i32, i32* @x.549
  %87 = load i32, i32* @y.550
  %88 = add i32 %86, 911090605
  %89 = sub i32 %88, 1
  %90 = sub i32 %89, 911090605
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = and i1 %94, %95
  %97 = xor i1 %94, %95
  %98 = or i1 %96, %97
  %99 = or i1 %94, %95
  br i1 %98, label %100, label %316

; <label>:100:                                    ; preds = %83
  %101 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv(%"class.std::move_iterator.33"* %4)
          to label %102 unwind label %139

; <label>:102:                                    ; preds = %100
  invoke void @_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_(%"class.std::__cxx11::basic_string"* %85, %"class.std::__cxx11::basic_string"* dereferenceable(32) %101)
          to label %103 unwind label %139

; <label>:103:                                    ; preds = %102
  br label %104

; <label>:104:                                    ; preds = %103
  %105 = invoke dereferenceable(8) %"class.std::move_iterator.33"* @_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv(%"class.std::move_iterator.33"* %4)
          to label %106 unwind label %139

; <label>:106:                                    ; preds = %104
  %107 = load i32, i32* @x.549
  %108 = load i32, i32* @y.550
  %109 = add i32 %107, 1117625253
  %110 = sub i32 %109, 1
  %111 = sub i32 %110, 1117625253
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = and i1 %115, %116
  %118 = xor i1 %115, %116
  %119 = or i1 %117, %118
  %120 = or i1 %115, %116
  br i1 %119, label %121, label %319

; <label>:121:                                    ; preds = %106, %319
  %122 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %123 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %122, i32 1
  store %"class.std::__cxx11::basic_string"* %123, %"class.std::__cxx11::basic_string"** %7, align 8
  %124 = load i32, i32* @x.549
  %125 = load i32, i32* @y.550
  %126 = sub i32 %124, -2067843984
  %127 = sub i32 %126, 1
  %128 = add i32 %127, -2067843984
  %129 = sub i32 %124, 1
  %130 = mul i32 %124, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %125, 10
  %134 = and i1 %132, %133
  %135 = xor i1 %132, %133
  %136 = or i1 %134, %135
  %137 = or i1 %132, %133
  br i1 %136, label %138, label %319

; <label>:138:                                    ; preds = %121
  br label %13

; <label>:139:                                    ; preds = %104, %102, %100, %65
  %140 = landingpad { i8*, i32 }
          catch i8* null
  %141 = extractvalue { i8*, i32 } %140, 0
  store i8* %141, i8** %8, align 8
  %142 = extractvalue { i8*, i32 } %140, 1
  store i32 %142, i32* %9, align 4
  br label %143

; <label>:143:                                    ; preds = %139
  %144 = load i8*, i8** %8, align 8
  %145 = call i8* @__cxa_begin_catch(i8* %144) #3
  %146 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %147 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  invoke void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_(%"class.std::__cxx11::basic_string"* %146, %"class.std::__cxx11::basic_string"* %147)
          to label %148 unwind label %258

; <label>:148:                                    ; preds = %143
  %149 = load i32, i32* @x.549
  %150 = load i32, i32* @y.550
  %151 = sub i32 0, 1
  %152 = add i32 %149, %151
  %153 = sub i32 %149, 1
  %154 = mul i32 %149, %152
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %150, 10
  %158 = xor i1 %156, true
  %159 = xor i1 %157, true
  %160 = xor i1 true, true
  %161 = and i1 %158, true
  %162 = and i1 %156, %160
  %163 = and i1 %159, true
  %164 = and i1 %157, %160
  %165 = or i1 %161, %162
  %166 = or i1 %163, %164
  %167 = xor i1 %165, %166
  %168 = or i1 %158, %159
  %169 = xor i1 %168, true
  %170 = or i1 true, %160
  %171 = and i1 %169, %170
  %172 = or i1 %167, %171
  %173 = or i1 %156, %157
  br i1 %172, label %174, label %322

; <label>:174:                                    ; preds = %148, %322
  %175 = load i32, i32* @x.549
  %176 = load i32, i32* @y.550
  %177 = add i32 %175, 112925421
  %178 = sub i32 %177, 1
  %179 = sub i32 %178, 112925421
  %180 = sub i32 %175, 1
  %181 = mul i32 %175, %179
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %176, 10
  %185 = xor i1 %183, true
  %186 = xor i1 %184, true
  %187 = xor i1 true, true
  %188 = and i1 %185, true
  %189 = and i1 %183, %187
  %190 = and i1 %186, true
  %191 = and i1 %184, %187
  %192 = or i1 %188, %189
  %193 = or i1 %190, %191
  %194 = xor i1 %192, %193
  %195 = or i1 %185, %186
  %196 = xor i1 %195, true
  %197 = or i1 true, %187
  %198 = and i1 %196, %197
  %199 = or i1 %194, %198
  %200 = or i1 %183, %184
  br i1 %199, label %201, label %322

; <label>:201:                                    ; preds = %174
  invoke void @__cxa_rethrow() #12
          to label %314 unwind label %258

; <label>:202:                                    ; preds = %67
  %203 = load i32, i32* @x.549
  %204 = load i32, i32* @y.550
  %205 = sub i32 %203, 1240933972
  %206 = sub i32 %205, 1
  %207 = add i32 %206, 1240933972
  %208 = sub i32 %203, 1
  %209 = mul i32 %203, %207
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %204, 10
  %213 = xor i1 %211, true
  %214 = xor i1 %212, true
  %215 = xor i1 true, true
  %216 = and i1 %213, true
  %217 = and i1 %211, %215
  %218 = and i1 %214, true
  %219 = and i1 %212, %215
  %220 = or i1 %216, %217
  %221 = or i1 %218, %219
  %222 = xor i1 %220, %221
  %223 = or i1 %213, %214
  %224 = xor i1 %223, true
  %225 = or i1 true, %215
  %226 = and i1 %224, %225
  %227 = or i1 %222, %226
  %228 = or i1 %211, %212
  br i1 %227, label %229, label %323

; <label>:229:                                    ; preds = %202, %323
  %230 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %231 = load i32, i32* @x.549
  %232 = load i32, i32* @y.550
  %233 = add i32 %231, -1907182261
  %234 = sub i32 %233, 1
  %235 = sub i32 %234, -1907182261
  %236 = sub i32 %231, 1
  %237 = mul i32 %231, %235
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %232, 10
  %241 = xor i1 %239, true
  %242 = xor i1 %240, true
  %243 = xor i1 false, true
  %244 = and i1 %241, false
  %245 = and i1 %239, %243
  %246 = and i1 %242, false
  %247 = and i1 %240, %243
  %248 = or i1 %244, %245
  %249 = or i1 %246, %247
  %250 = xor i1 %248, %249
  %251 = or i1 %241, %242
  %252 = xor i1 %251, true
  %253 = or i1 false, %243
  %254 = and i1 %252, %253
  %255 = or i1 %250, %254
  %256 = or i1 %239, %240
  br i1 %255, label %257, label %323

; <label>:257:                                    ; preds = %229
  ret %"class.std::__cxx11::basic_string"* %230

; <label>:258:                                    ; preds = %201, %143
  %259 = landingpad { i8*, i32 }
          cleanup
  %260 = extractvalue { i8*, i32 } %259, 0
  store i8* %260, i8** %8, align 8
  %261 = extractvalue { i8*, i32 } %259, 1
  store i32 %261, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %262 unwind label %311

; <label>:262:                                    ; preds = %258
  %263 = load i32, i32* @x.549
  %264 = load i32, i32* @y.550
  %265 = sub i32 %263, 1347661780
  %266 = sub i32 %265, 1
  %267 = add i32 %266, 1347661780
  %268 = sub i32 %263, 1
  %269 = mul i32 %263, %267
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %264, 10
  %273 = xor i1 %271, true
  %274 = xor i1 %272, true
  %275 = xor i1 false, true
  %276 = and i1 %273, false
  %277 = and i1 %271, %275
  %278 = and i1 %274, false
  %279 = and i1 %272, %275
  %280 = or i1 %276, %277
  %281 = or i1 %278, %279
  %282 = xor i1 %280, %281
  %283 = or i1 %273, %274
  %284 = xor i1 %283, true
  %285 = or i1 false, %275
  %286 = and i1 %284, %285
  %287 = or i1 %282, %286
  %288 = or i1 %271, %272
  br i1 %287, label %289, label %325

; <label>:289:                                    ; preds = %262, %325
  %290 = load i32, i32* @x.549
  %291 = load i32, i32* @y.550
  %292 = add i32 %290, 1258045553
  %293 = sub i32 %292, 1
  %294 = sub i32 %293, 1258045553
  %295 = sub i32 %290, 1
  %296 = mul i32 %290, %294
  %297 = urem i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %291, 10
  %300 = and i1 %298, %299
  %301 = xor i1 %298, %299
  %302 = or i1 %300, %301
  %303 = or i1 %298, %299
  br i1 %302, label %304, label %325

; <label>:304:                                    ; preds = %289
  br label %306
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:306:                                    ; preds = %304
  %307 = load i8*, i8** %8, align 8
  %308 = load i32, i32* %9, align 4
  %309 = insertvalue { i8*, i32 } undef, i8* %307, 0
  %310 = insertvalue { i8*, i32 } %309, i32 %308, 1
  resume { i8*, i32 } %310

; <label>:311:                                    ; preds = %258
  %312 = landingpad { i8*, i32 }
          catch i8* null
  %313 = extractvalue { i8*, i32 } %312, 0
  call void @__clang_call_terminate(i8* %313) #10
  unreachable

; <label>:314:                                    ; preds = %201
  unreachable

; <label>:315:                                    ; preds = %39, %13
  br label %39

; <label>:316:                                    ; preds = %83, %68
  %317 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %318 = call %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* dereferenceable(32) %317) #3
  br label %83

; <label>:319:                                    ; preds = %121, %106
  %320 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %321 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %320, i32 1
  store %"class.std::__cxx11::basic_string"* %321, %"class.std::__cxx11::basic_string"** %7, align 8
  br label %121

; <label>:322:                                    ; preds = %174, %148
  br label %174

; <label>:323:                                    ; preds = %229, %202
  %324 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  br label %229

; <label>:325:                                    ; preds = %289, %262
  br label %289
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator.33"* dereferenceable(8), %"class.std::move_iterator.33"* dereferenceable(8)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.551
  %7 = load i32, i32* @y.552
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 998298354, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %111
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 998298354, label %19
    i32 -502867306, label %27
    i32 1135492012, label %66
    i32 1189541213, label %68
  ]

; <label>:18:                                     ; preds = %16
  br label %111

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -502867306, i32 1189541213
  store i32 %26, i32* %15
  br label %111

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.33"*, align 8
  %29 = alloca %"class.std::move_iterator.33"*, align 8
  store %"class.std::move_iterator.33"* %0, %"class.std::move_iterator.33"** %28, align 8
  store %"class.std::move_iterator.33"* %1, %"class.std::move_iterator.33"** %29, align 8
  %30 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %28, align 8
  %31 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %29, align 8
  %32 = call zeroext i1 @_ZSteqIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator.33"* dereferenceable(8) %30, %"class.std::move_iterator.33"* dereferenceable(8) %31)
  %33 = xor i1 %32, true
  %34 = and i1 true, %33
  %35 = xor i1 true, true
  %36 = and i1 %32, %35
  %37 = or i1 %34, %36
  %38 = xor i1 %32, true
  store i1 %37, i1* %3
  %39 = load i32, i32* @x.551
  %40 = load i32, i32* @y.552
  %41 = sub i32 %39, 123838870
  %42 = sub i32 %41, 1
  %43 = add i32 %42, 123838870
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 1135492012, i32 1189541213
  store i32 %65, i32* %15
  br label %111

; <label>:66:                                     ; preds = %16
  %67 = load volatile i1, i1* %3
  ret i1 %67

; <label>:68:                                     ; preds = %16
  %69 = alloca %"class.std::move_iterator.33"*, align 8
  %70 = alloca %"class.std::move_iterator.33"*, align 8
  store %"class.std::move_iterator.33"* %0, %"class.std::move_iterator.33"** %69, align 8
  store %"class.std::move_iterator.33"* %1, %"class.std::move_iterator.33"** %70, align 8
  %71 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %69, align 8
  %72 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %70, align 8
  %73 = call zeroext i1 @_ZSteqIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator.33"* dereferenceable(8) %71, %"class.std::move_iterator.33"* dereferenceable(8) %72)
  %74 = sub i1 %73, true
  %75 = sub i1 %74, true
  %76 = add i1 %75, true
  %77 = sub i1 %73, true
  %78 = mul i1 %76, true
  %79 = sub i1 false, true
  %80 = add i1 %73, %79
  %81 = sub i1 %73, true
  %82 = mul i1 %80, true
  %83 = shl i1 %73, true
  %84 = sub i1 false, true
  %85 = add i1 %73, %84
  %86 = sub i1 %73, true
  %87 = mul i1 %85, true
  %88 = sub i1 false, true
  %89 = sub i1 %88, %73
  %90 = add i1 %89, true
  %91 = sub i1 false, %73
  %92 = add i1 %90, false
  %93 = add i1 %92, true
  %94 = sub i1 %93, false
  %95 = add i1 %90, true
  %96 = sub i1 false, true
  %97 = add i1 %73, %96
  %98 = sub i1 %73, true
  %99 = mul i1 %97, true
  %100 = sub i1 %73, false
  %101 = sub i1 %100, true
  %102 = add i1 %101, false
  %103 = sub i1 %73, true
  %104 = mul i1 %102, true
  %105 = xor i1 %73, true
  %106 = and i1 true, %105
  %107 = xor i1 true, true
  %108 = and i1 %73, %107
  %109 = or i1 %106, %108
  %110 = xor i1 %73, true
  store i32 -502867306, i32* %15
  br label %111

; <label>:111:                                    ; preds = %68, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) #5 comdat {
  %3 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3, align 8
  %6 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::__cxx11::basic_string"*
  %8 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %9 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32) %8) #3
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_(%"class.std::__cxx11::basic_string"* %7, %"class.std::__cxx11::basic_string"* dereferenceable(32) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %2, align 8
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2, align 8
  %4 = bitcast %"class.std::__cxx11::basic_string"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::__cxx11::basic_string"*
  ret %"class.std::__cxx11::basic_string"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv(%"class.std::move_iterator.33"*) #5 comdat align 2 {
  %2 = alloca %"class.std::__cxx11::basic_string"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.557
  %6 = load i32, i32* @y.558
  %7 = sub i32 %5, -1392290220
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1392290220
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1140416810, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1140416810, label %19
    i32 706699974, label %27
    i32 625875746, label %47
    i32 324229478, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 706699974, i32 324229478
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.33"*, align 8
  store %"class.std::move_iterator.33"* %0, %"class.std::move_iterator.33"** %28, align 8
  %29 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %28, align 8
  %30 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %29, i32 0, i32 0
  %31 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %30, align 8
  store %"class.std::__cxx11::basic_string"* %31, %"class.std::__cxx11::basic_string"** %2
  %32 = load i32, i32* @x.557
  %33 = load i32, i32* @y.558
  %34 = sub i32 %32, -1754043409
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -1754043409
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 625875746, i32 324229478
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2
  ret %"class.std::__cxx11::basic_string"* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::move_iterator.33"*, align 8
  store %"class.std::move_iterator.33"* %0, %"class.std::move_iterator.33"** %50, align 8
  %51 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %50, align 8
  %52 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %51, i32 0, i32 0
  %53 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %52, align 8
  store i32 706699974, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator.33"* @_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv(%"class.std::move_iterator.33"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.33"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.559
  %6 = load i32, i32* @y.560
  %7 = sub i32 %5, 350604684
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 350604684
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1115775149, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1115775149, label %19
    i32 -1012448894, label %27
    i32 1759294706, label %61
    i32 1430193188, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1012448894, i32 1430193188
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.33"*, align 8
  store %"class.std::move_iterator.33"* %0, %"class.std::move_iterator.33"** %28, align 8
  %29 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %28, align 8
  store %"class.std::move_iterator.33"* %29, %"class.std::move_iterator.33"** %2
  %30 = load volatile %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %2
  %31 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %30, i32 0, i32 0
  %32 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %31, align 8
  %33 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %32, i32 1
  store %"class.std::__cxx11::basic_string"* %33, %"class.std::__cxx11::basic_string"** %31, align 8
  %34 = load i32, i32* @x.559
  %35 = load i32, i32* @y.560
  %36 = sub i32 %34, 1606942533
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 1606942533
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 1759294706, i32 1430193188
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  %62 = load volatile %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %2
  ret %"class.std::move_iterator.33"* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::move_iterator.33"*, align 8
  store %"class.std::move_iterator.33"* %0, %"class.std::move_iterator.33"** %64, align 8
  %65 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %64, align 8
  %66 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %65, i32 0, i32 0
  %67 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %67, i32 1
  store %"class.std::__cxx11::basic_string"* %68, %"class.std::__cxx11::basic_string"** %66, align 8
  store i32 -1012448894, i32* %15
  br label %69

; <label>:69:                                     ; preds = %63, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.561
  %6 = load i32, i32* @y.562
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 841447470, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 841447470, label %18
    i32 -596495847, label %26
    i32 -798965528, label %58
    i32 470908412, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -596495847, i32 470908412
  store i32 %25, i32* %14
  br label %64

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %28 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %27, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %28, align 8
  %29 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %27, align 8
  %30 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %28, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_(%"class.std::__cxx11::basic_string"* %29, %"class.std::__cxx11::basic_string"* %30)
  %31 = load i32, i32* @x.561
  %32 = load i32, i32* @y.562
  %33 = sub i32 %31, -432385855
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -432385855
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -798965528, i32 470908412
  store i32 %57, i32* %14
  br label %64

; <label>:58:                                     ; preds = %15
  ret void

; <label>:59:                                     ; preds = %15
  %60 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %61 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %60, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %61, align 8
  %62 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %60, align 8
  %63 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %61, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_(%"class.std::__cxx11::basic_string"* %62, %"class.std::__cxx11::basic_string"* %63)
  store i32 -596495847, i32* %14
  br label %64

; <label>:64:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator.33"* dereferenceable(8), %"class.std::move_iterator.33"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.33"*, align 8
  %4 = alloca %"class.std::move_iterator.33"*, align 8
  store %"class.std::move_iterator.33"* %0, %"class.std::move_iterator.33"** %3, align 8
  store %"class.std::move_iterator.33"* %1, %"class.std::move_iterator.33"** %4, align 8
  %5 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %3, align 8
  %6 = call %"class.std::__cxx11::basic_string"* @_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv(%"class.std::move_iterator.33"* %5)
  %7 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %4, align 8
  %8 = call %"class.std::__cxx11::basic_string"* @_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv(%"class.std::move_iterator.33"* %7)
  %9 = icmp eq %"class.std::__cxx11::basic_string"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv(%"class.std::move_iterator.33"*) #5 comdat align 2 {
  %2 = alloca %"class.std::__cxx11::basic_string"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.565
  %6 = load i32, i32* @y.566
  %7 = sub i32 %5, 438254212
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 438254212
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 490834124, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 490834124, label %19
    i32 188017236, label %27
    i32 669319255, label %59
    i32 -1316133876, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 188017236, i32 -1316133876
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.33"*, align 8
  store %"class.std::move_iterator.33"* %0, %"class.std::move_iterator.33"** %28, align 8
  %29 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %28, align 8
  %30 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %29, i32 0, i32 0
  %31 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %30, align 8
  store %"class.std::__cxx11::basic_string"* %31, %"class.std::__cxx11::basic_string"** %2
  %32 = load i32, i32* @x.565
  %33 = load i32, i32* @y.566
  %34 = add i32 %32, -1144920018
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -1144920018
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 669319255, i32 -1316133876
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2
  ret %"class.std::__cxx11::basic_string"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::move_iterator.33"*, align 8
  store %"class.std::move_iterator.33"* %0, %"class.std::move_iterator.33"** %62, align 8
  %63 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %62, align 8
  %64 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %63, i32 0, i32 0
  %65 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %64, align 8
  store i32 188017236, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*) #0 comdat align 2 {
  %3 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %5 = alloca i32
  store i32 -1081465342, i32* %5
  br label %6

; <label>:6:                                      ; preds = %2, %66
  %7 = load i32, i32* %5
  switch i32 %7, label %8 [
    i32 -1081465342, label %9
    i32 545463365, label %14
    i32 -14894739, label %17
    i32 -1825279543, label %20
    i32 -621232113, label %48
    i32 -938891875, label %64
    i32 36416814, label %65
  ]

; <label>:8:                                      ; preds = %6
  br label %66

; <label>:9:                                      ; preds = %6
  %10 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3, align 8
  %11 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %12 = icmp ne %"class.std::__cxx11::basic_string"* %10, %11
  %13 = select i1 %12, i32 545463365, i32 -1825279543
  store i32 %13, i32* %5
  br label %66

; <label>:14:                                     ; preds = %6
  %15 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3, align 8
  %16 = call %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* dereferenceable(32) %15) #3
  call void @_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_(%"class.std::__cxx11::basic_string"* %16)
  store i32 -14894739, i32* %5
  br label %66

; <label>:17:                                     ; preds = %6
  %18 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3, align 8
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %18, i32 1
  store %"class.std::__cxx11::basic_string"* %19, %"class.std::__cxx11::basic_string"** %3, align 8
  store i32 -1081465342, i32* %5
  br label %66

; <label>:20:                                     ; preds = %6
  %21 = load i32, i32* @x.567
  %22 = load i32, i32* @y.568
  %23 = add i32 %21, -2090862311
  %24 = sub i32 %23, 1
  %25 = sub i32 %24, -2090862311
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 true, true
  %34 = and i1 %31, true
  %35 = and i1 %29, %33
  %36 = and i1 %32, true
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 true, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  %47 = select i1 %45, i32 -621232113, i32 36416814
  store i32 %47, i32* %5
  br label %66

; <label>:48:                                     ; preds = %6
  %49 = load i32, i32* @x.567
  %50 = load i32, i32* @y.568
  %51 = sub i32 %49, -1315946202
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -1315946202
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 -938891875, i32 36416814
  store i32 %63, i32* %5
  br label %66

; <label>:64:                                     ; preds = %6
  ret void

; <label>:65:                                     ; preds = %6
  store i32 -621232113, i32* %5
  br label %66

; <label>:66:                                     ; preds = %65, %48, %20, %17, %14, %9, %8
  br label %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_(%"class.std::__cxx11::basic_string"*) #5 comdat {
  %2 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %2, align 8
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ES6_(%"class.std::move_iterator.33"*, %"class.std::__cxx11::basic_string"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.33"*, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::move_iterator.33"* %0, %"class.std::move_iterator.33"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %5 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %5, i32 0, i32 0
  %7 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  store %"class.std::__cxx11::basic_string"* %7, %"class.std::__cxx11::basic_string"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7destroyIS6_EEvPT_(%"class.__gnu_cxx::new_allocator.11"*, %"class.std::__cxx11::basic_string"*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.573
  %6 = load i32, i32* @y.574
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1781118759, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %52
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1781118759, label %18
    i32 -1237975744, label %26
    i32 1549758066, label %46
    i32 -1592470850, label %47
  ]

; <label>:17:                                     ; preds = %15
  br label %52

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1237975744, i32 -1592470850
  store i32 %25, i32* %14
  br label %52

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %28 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %27, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %28, align 8
  %29 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %27, align 8
  %30 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %28, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %30) #3
  %31 = load i32, i32* @x.573
  %32 = load i32, i32* @y.574
  %33 = add i32 %31, -680739588
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -680739588
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 1549758066, i32 -1592470850
  store i32 %45, i32* %14
  br label %52

; <label>:46:                                     ; preds = %15
  ret void

; <label>:47:                                     ; preds = %15
  %48 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %49 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %48, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %49, align 8
  %50 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %48, align 8
  %51 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %49, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %51) #3
  store i32 -1237975744, i32* %14
  br label %52

; <label>:52:                                     ; preds = %47, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m(%"class.std::allocator.10"* dereferenceable(1), %"class.std::__cxx11::basic_string"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.10"*, align 8
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %4, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  %8 = bitcast %"class.std::allocator.10"* %7 to %"class.__gnu_cxx::new_allocator.11"*
  %9 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator.11"* %8, %"class.std::__cxx11::basic_string"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator.11"*, %"class.std::__cxx11::basic_string"*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.577
  %7 = load i32, i32* @y.578
  %8 = add i32 %6, -1560425178
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1560425178
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1054290691, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1054290691, label %20
    i32 -76567399, label %40
    i32 1670355623, label %62
    i32 962176530, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -76567399, i32 962176530
  store i32 %39, i32* %16
  br label %70

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %42 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %43 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %41, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %41, align 8
  %45 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %42, align 8
  %46 = bitcast %"class.std::__cxx11::basic_string"* %45 to i8*
  call void @_ZdlPv(i8* %46) #3
  %47 = load i32, i32* @x.577
  %48 = load i32, i32* @y.578
  %49 = add i32 %47, 2147221276
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, 2147221276
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 1670355623, i32 962176530
  store i32 %61, i32* %16
  br label %70

; <label>:62:                                     ; preds = %17
  ret void

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %65 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %66 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %64, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %64, align 8
  %68 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %65, align 8
  %69 = bitcast %"class.std::__cxx11::basic_string"* %68 to i8*
  call void @_ZdlPv(i8* %69) #3
  store i32 -76567399, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxEC2Ev(%"class.__gnu_cxx::new_allocator.1"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxED2Ev(%"class.__gnu_cxx::new_allocator.1"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base"*, i64, %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.0"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.0"* %2, %"class.std::allocator.0"** %6, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %6, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %10, %"class.std::allocator.0"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm(%"struct.std::_Vector_base"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %10) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i8*, i8** %7, align 8
  %20 = load i32, i32* %8, align 4
  %21 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE18_M_fill_initializeEmRKx(%"class.std::vector"*, i64, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %8 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load i64*, i64** %6, align 8
  %14 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14) #3
  %16 = call i64* @_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E(i64* %11, i64 %12, i64* dereferenceable(8) %13, %"class.std::allocator.0"* dereferenceable(1) %15)
  %17 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %18, i32 0, i32 1
  store i64* %16, i64** %19, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = ptrtoint i64* %11 to i64
  %16 = ptrtoint i64* %14 to i64
  %17 = add i64 %15, 1413164908836882821
  %18 = sub i64 %17, %16
  %19 = sub i64 %18, 1413164908836882821
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 8
  invoke void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base"* %5, i64* %8, i64 %21)
          to label %22 unwind label %52

; <label>:22:                                     ; preds = %1
  %23 = load i32, i32* @x.587
  %24 = load i32, i32* @y.588
  %25 = sub i32 0, 1
  %26 = add i32 %23, %25
  %27 = sub i32 %23, 1
  %28 = mul i32 %23, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %24, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  br i1 %34, label %36, label %101

; <label>:36:                                     ; preds = %22, %101
  %37 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %37) #3
  %38 = load i32, i32* @x.587
  %39 = load i32, i32* @y.588
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  br i1 %49, label %51, label %101

; <label>:51:                                     ; preds = %36
  ret void

; <label>:52:                                     ; preds = %1
  %53 = landingpad { i8*, i32 }
          catch i8* null
  %54 = extractvalue { i8*, i32 } %53, 0
  store i8* %54, i8** %3, align 8
  %55 = extractvalue { i8*, i32 } %53, 1
  store i32 %55, i32* %4, align 4
  %56 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %56) #3
  br label %57

; <label>:57:                                     ; preds = %52
  %58 = load i32, i32* @x.587
  %59 = load i32, i32* @y.588
  %60 = add i32 %58, -2080693994
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, -2080693994
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  br i1 %70, label %72, label %103

; <label>:72:                                     ; preds = %57, %103
  %73 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %73) #10
  %74 = load i32, i32* @x.587
  %75 = load i32, i32* @y.588
  %76 = add i32 %74, -1017642817
  %77 = sub i32 %76, 1
  %78 = sub i32 %77, -1017642817
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = xor i1 %82, true
  %85 = xor i1 %83, true
  %86 = xor i1 true, true
  %87 = and i1 %84, true
  %88 = and i1 %82, %86
  %89 = and i1 %85, true
  %90 = and i1 %83, %86
  %91 = or i1 %87, %88
  %92 = or i1 %89, %90
  %93 = xor i1 %91, %92
  %94 = or i1 %84, %85
  %95 = xor i1 %94, true
  %96 = or i1 true, %86
  %97 = and i1 %95, %96
  %98 = or i1 %93, %97
  %99 = or i1 %82, %83
  br i1 %98, label %100, label %103

; <label>:100:                                    ; preds = %72
  unreachable

; <label>:101:                                    ; preds = %36, %22
  %102 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %102) #3
  br label %36

; <label>:103:                                    ; preds = %72, %57
  %104 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %104) #10
  br label %72
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.589
  %6 = load i32, i32* @y.590
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1852579507, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %71
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1852579507, label %18
    i32 2065182448, label %26
    i32 -232970805, label %61
    i32 -645589128, label %62
  ]

; <label>:17:                                     ; preds = %15
  br label %71

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 2065182448, i32 -645589128
  store i32 %25, i32* %14
  br label %71

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  %28 = alloca %"class.std::allocator.0"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %27, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %28, align 8
  %29 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %27, align 8
  %30 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %29 to %"class.std::allocator.0"*
  %31 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %28, align 8
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator.0"* %30, %"class.std::allocator.0"* dereferenceable(1) %31) #3
  %32 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %29, i32 0, i32 0
  store i64* null, i64** %32, align 8
  %33 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %29, i32 0, i32 1
  store i64* null, i64** %33, align 8
  %34 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %29, i32 0, i32 2
  store i64* null, i64** %34, align 8
  %35 = load i32, i32* @x.589
  %36 = load i32, i32* @y.590
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -232970805, i32 -645589128
  store i32 %60, i32* %14
  br label %71

; <label>:61:                                     ; preds = %15
  ret void

; <label>:62:                                     ; preds = %15
  %63 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  %64 = alloca %"class.std::allocator.0"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %63, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %64, align 8
  %65 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %63, align 8
  %66 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %65 to %"class.std::allocator.0"*
  %67 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %64, align 8
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator.0"* %66, %"class.std::allocator.0"* dereferenceable(1) %67) #3
  %68 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %65, i32 0, i32 0
  store i64* null, i64** %68, align 8
  %69 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %65, i32 0, i32 1
  store i64* null, i64** %69, align 8
  %70 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %65, i32 0, i32 2
  store i64* null, i64** %70, align 8
  store i32 2065182448, i32* %14
  br label %71

; <label>:71:                                     ; preds = %62, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %8, i32 0, i32 0
  store i64* %7, i64** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %13, i32 0, i32 1
  store i64* %12, i64** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds i64, i64* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %20, i32 0, i32 2
  store i64* %19, i64** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %3 to %"class.std::allocator.0"*
  call void @_ZNSaIxED2Ev(%"class.std::allocator.0"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_(%"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %1, %"class.__gnu_cxx::new_allocator.1"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E(i64*, i64, i64* dereferenceable(8), %"class.std::allocator.0"* dereferenceable(1)) #0 comdat {
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.0"*, align 8
  store i64* %0, i64** %5, align 8
  store i64 %1, i64* %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %8, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load i64*, i64** %7, align 8
  %12 = call i64* @_ZSt20uninitialized_fill_nIPxmxET_S1_T0_RKT1_(i64* %9, i64 %10, i64* dereferenceable(8) %11)
  ret i64* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt20uninitialized_fill_nIPxmxET_S1_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i64*, i64** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPxmxEET_S3_T0_RKT1_(i64* %8, i64 %9, i64* dereferenceable(8) %10)
  ret i64* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPxmxEET_S3_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = call i64* @_ZSt6fill_nIPxmxET_S1_T0_RKT1_(i64* %7, i64 %8, i64* dereferenceable(8) %9)
  ret i64* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt6fill_nIPxmxET_S1_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #0 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.603
  %8 = load i32, i32* @y.604
  %9 = sub i32 %7, 107176468
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 107176468
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 441870689, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %87
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 441870689, label %21
    i32 2090705744, label %41
    i32 1096044517, label %76
    i32 -1747776001, label %78
  ]

; <label>:20:                                     ; preds = %18
  br label %87

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 2090705744, i32 -1747776001
  store i32 %40, i32* %17
  br label %87

; <label>:41:                                     ; preds = %18
  %42 = alloca i64*, align 8
  %43 = alloca i64, align 8
  %44 = alloca i64*, align 8
  store i64* %0, i64** %42, align 8
  store i64 %1, i64* %43, align 8
  store i64* %2, i64** %44, align 8
  %45 = load i64*, i64** %42, align 8
  %46 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %45)
  %47 = load i64, i64* %43, align 8
  %48 = load i64*, i64** %44, align 8
  %49 = call i64* @_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64* %46, i64 %47, i64* dereferenceable(8) %48)
  store i64* %49, i64** %4
  %50 = load i32, i32* @x.603
  %51 = load i32, i32* @y.604
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 1096044517, i32 -1747776001
  store i32 %75, i32* %17
  br label %87

; <label>:76:                                     ; preds = %18
  %77 = load volatile i64*, i64** %4
  ret i64* %77

; <label>:78:                                     ; preds = %18
  %79 = alloca i64*, align 8
  %80 = alloca i64, align 8
  %81 = alloca i64*, align 8
  store i64* %0, i64** %79, align 8
  store i64 %1, i64* %80, align 8
  store i64* %2, i64** %81, align 8
  %82 = load i64*, i64** %79, align 8
  %83 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %82)
  %84 = load i64, i64* %80, align 8
  %85 = load i64*, i64** %81, align 8
  %86 = call i64* @_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64* %83, i64 %84, i64* dereferenceable(8) %85)
  store i32 2090705744, i32* %17
  br label %87

; <label>:87:                                     ; preds = %78, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64*, i64, i64* dereferenceable(8)) #5 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %7, align 8
  %11 = load i64, i64* %5, align 8
  store i64 %11, i64* %8, align 8
  %12 = alloca i32
  store i32 2045128935, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %78
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 2045128935, label %16
    i32 -1910960127, label %20
    i32 1609844760, label %35
    i32 943299575, label %65
    i32 -1955437276, label %66
    i32 622048140, label %73
    i32 913451631, label %75
  ]

; <label>:15:                                     ; preds = %13
  br label %78

; <label>:16:                                     ; preds = %13
  %17 = load i64, i64* %8, align 8
  %18 = icmp ugt i64 %17, 0
  %19 = select i1 %18, i32 -1910960127, i32 622048140
  store i32 %19, i32* %12
  br label %78

; <label>:20:                                     ; preds = %13
  %21 = load i32, i32* @x.605
  %22 = load i32, i32* @y.606
  %23 = sub i32 0, 1
  %24 = add i32 %21, %23
  %25 = sub i32 %21, 1
  %26 = mul i32 %21, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %22, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  %34 = select i1 %32, i32 1609844760, i32 913451631
  store i32 %34, i32* %12
  br label %78

; <label>:35:                                     ; preds = %13
  %36 = load i64, i64* %7, align 8
  %37 = load i64*, i64** %4, align 8
  store i64 %36, i64* %37, align 8
  %38 = load i32, i32* @x.605
  %39 = load i32, i32* @y.606
  %40 = add i32 %38, -1802481634
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -1802481634
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 943299575, i32 913451631
  store i32 %64, i32* %12
  br label %78

; <label>:65:                                     ; preds = %13
  store i32 -1955437276, i32* %12
  br label %78

; <label>:66:                                     ; preds = %13
  %67 = load i64, i64* %8, align 8
  %68 = sub i64 0, -1
  %69 = sub i64 %67, %68
  %70 = add i64 %67, -1
  store i64 %69, i64* %8, align 8
  %71 = load i64*, i64** %4, align 8
  %72 = getelementptr inbounds i64, i64* %71, i32 1
  store i64* %72, i64** %4, align 8
  store i32 2045128935, i32* %12
  br label %78

; <label>:73:                                     ; preds = %13
  %74 = load i64*, i64** %4, align 8
  ret i64* %74

; <label>:75:                                     ; preds = %13
  %76 = load i64, i64* %7, align 8
  %77 = load i64*, i64** %4, align 8
  store i64 %76, i64* %77, align 8
  store i32 1609844760, i32* %12
  br label %78

; <label>:78:                                     ; preds = %75, %66, %65, %35, %20, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2Ev(%"class.__gnu_cxx::new_allocator.26"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.607
  %5 = load i32, i32* @y.608
  %6 = add i32 %4, 345043676
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 345043676
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1304200678, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1304200678, label %18
    i32 -225424110, label %38
    i32 -115388518, label %55
    i32 1443569989, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -225424110, i32 1443569989
  store i32 %37, i32* %14
  br label %59

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %39, align 8
  %41 = load i32, i32* @x.607
  %42 = load i32, i32* @y.608
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -115388518, i32 1443569989
  store i32 %54, i32* %14
  br label %59

; <label>:55:                                     ; preds = %15
  ret void

; <label>:56:                                     ; preds = %15
  %57 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %57, align 8
  store i32 -225424110, i32* %14
  br label %59

; <label>:59:                                     ; preds = %56, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEED2Ev(%"class.__gnu_cxx::new_allocator.26"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.24"*, i64, %"class.std::allocator.25"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.24"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.25"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.25"* %2, %"class.std::allocator.25"** %6, align 8
  %9 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %6, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %10, %"class.std::allocator.25"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.24"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = load i32, i32* @x.611
  %16 = load i32, i32* @y.612
  %17 = sub i32 %15, 1004203905
  %18 = sub i32 %17, 1
  %19 = add i32 %18, 1004203905
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %16, 10
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  br i1 %39, label %41, label %77

; <label>:41:                                     ; preds = %14, %77
  %42 = landingpad { i8*, i32 }
          cleanup
  %43 = extractvalue { i8*, i32 } %42, 0
  store i8* %43, i8** %7, align 8
  %44 = extractvalue { i8*, i32 } %42, 1
  store i32 %44, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %10) #3
  %45 = load i32, i32* @x.611
  %46 = load i32, i32* @y.612
  %47 = add i32 %45, -568614231
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -568614231
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  br i1 %69, label %71, label %77

; <label>:71:                                     ; preds = %41
  br label %72

; <label>:72:                                     ; preds = %71
  %73 = load i8*, i8** %7, align 8
  %74 = load i32, i32* %8, align 4
  %75 = insertvalue { i8*, i32 } undef, i8* %73, 0
  %76 = insertvalue { i8*, i32 } %75, i32 %74, 1
  resume { i8*, i32 } %76

; <label>:77:                                     ; preds = %41, %14
  %78 = landingpad { i8*, i32 }
          cleanup
  %79 = extractvalue { i8*, i32 } %78, 0
  store i8* %79, i8** %7, align 8
  %80 = extractvalue { i8*, i32 } %78, 1
  store i32 %80, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %10) #3
  br label %41
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IxSaIxEESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.23"*, i64, %"class.std::vector"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.23"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %6, align 8
  %7 = load %"class.std::vector.23"*, %"class.std::vector.23"** %4, align 8
  %8 = bitcast %"class.std::vector.23"* %7 to %"struct.std::_Vector_base.24"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::vector"*, %"class.std::vector"** %10, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8
  %14 = bitcast %"class.std::vector.23"* %7 to %"struct.std::_Vector_base.24"*
  %15 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %14) #3
  %16 = call %"class.std::vector"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIxSaIxEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector"* %11, i64 %12, %"class.std::vector"* dereferenceable(24) %13, %"class.std::allocator.25"* dereferenceable(1) %15)
  %17 = bitcast %"class.std::vector.23"* %7 to %"struct.std::_Vector_base.24"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %18, i32 0, i32 1
  store %"class.std::vector"* %16, %"class.std::vector"** %19, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev(%"struct.std::_Vector_base.24"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.615
  %3 = load i32, i32* @y.616
  %4 = sub i32 %2, -527640436
  %5 = sub i32 %4, 1
  %6 = add i32 %5, -527640436
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %126

; <label>:28:                                     ; preds = %1, %126
  %29 = alloca %"struct.std::_Vector_base.24"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %29, align 8
  %32 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %29, align 8
  %33 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load %"class.std::vector"*, %"class.std::vector"** %34, align 8
  %36 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %32, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %36, i32 0, i32 2
  %38 = load %"class.std::vector"*, %"class.std::vector"** %37, align 8
  %39 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %32, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %39, i32 0, i32 0
  %41 = load %"class.std::vector"*, %"class.std::vector"** %40, align 8
  %42 = ptrtoint %"class.std::vector"* %38 to i64
  %43 = ptrtoint %"class.std::vector"* %41 to i64
  %44 = sub i64 %42, 5775598546638696929
  %45 = sub i64 %44, %43
  %46 = add i64 %45, 5775598546638696929
  %47 = sub i64 %42, %43
  %48 = sdiv exact i64 %46, 24
  %49 = load i32, i32* @x.615
  %50 = load i32, i32* @y.616
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  br i1 %72, label %74, label %126

; <label>:74:                                     ; preds = %28
  invoke void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.24"* %32, %"class.std::vector"* %35, i64 %48)
          to label %75 unwind label %119

; <label>:75:                                     ; preds = %74
  %76 = load i32, i32* @x.615
  %77 = load i32, i32* @y.616
  %78 = add i32 %76, 1220520124
  %79 = sub i32 %78, 1
  %80 = sub i32 %79, 1220520124
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = and i1 %84, %85
  %87 = xor i1 %84, %85
  %88 = or i1 %86, %87
  %89 = or i1 %84, %85
  br i1 %88, label %90, label %169

; <label>:90:                                     ; preds = %75, %169
  %91 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %91) #3
  %92 = load i32, i32* @x.615
  %93 = load i32, i32* @y.616
  %94 = add i32 %92, 530325582
  %95 = sub i32 %94, 1
  %96 = sub i32 %95, 530325582
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 true, true
  %105 = and i1 %102, true
  %106 = and i1 %100, %104
  %107 = and i1 %103, true
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 true, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  br i1 %116, label %118, label %169

; <label>:118:                                    ; preds = %90
  ret void

; <label>:119:                                    ; preds = %74
  %120 = landingpad { i8*, i32 }
          catch i8* null
  %121 = extractvalue { i8*, i32 } %120, 0
  store i8* %121, i8** %30, align 8
  %122 = extractvalue { i8*, i32 } %120, 1
  store i32 %122, i32* %31, align 4
  %123 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %123) #3
  br label %124

; <label>:124:                                    ; preds = %119
  %125 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %125) #10
  unreachable

; <label>:126:                                    ; preds = %28, %1
  %127 = alloca %"struct.std::_Vector_base.24"*, align 8
  %128 = alloca i8*
  %129 = alloca i32
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %127, align 8
  %130 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %127, align 8
  %131 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %130, i32 0, i32 0
  %132 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %131, i32 0, i32 0
  %133 = load %"class.std::vector"*, %"class.std::vector"** %132, align 8
  %134 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %130, i32 0, i32 0
  %135 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %134, i32 0, i32 2
  %136 = load %"class.std::vector"*, %"class.std::vector"** %135, align 8
  %137 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %130, i32 0, i32 0
  %138 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %137, i32 0, i32 0
  %139 = load %"class.std::vector"*, %"class.std::vector"** %138, align 8
  %140 = ptrtoint %"class.std::vector"* %136 to i64
  %141 = ptrtoint %"class.std::vector"* %139 to i64
  %142 = sub i64 0, 8253772968004848052
  %143 = sub i64 %142, %140
  %144 = add i64 %143, 8253772968004848052
  %145 = sub i64 0, %140
  %146 = sub i64 0, %144
  %147 = sub i64 0, %141
  %148 = add i64 %146, %147
  %149 = sub i64 0, %148
  %150 = add i64 %144, %141
  %151 = add i64 %140, 5310240622413738613
  %152 = sub i64 %151, %141
  %153 = sub i64 %152, 5310240622413738613
  %154 = sub i64 %140, %141
  %155 = mul i64 %153, %141
  %156 = sub i64 %140, 1283516945272802543
  %157 = sub i64 %156, %141
  %158 = add i64 %157, 1283516945272802543
  %159 = sub i64 %140, %141
  %160 = sub i64 0, 3394075032777508979
  %161 = sub i64 %160, %158
  %162 = add i64 %161, 3394075032777508979
  %163 = sub i64 0, %158
  %164 = sub i64 0, 24
  %165 = sub i64 %162, %164
  %166 = add i64 %162, 24
  %167 = shl i64 %158, 24
  %168 = sdiv exact i64 %158, 24
  br label %28

; <label>:169:                                    ; preds = %90, %75
  %170 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %170) #3
  br label %90
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, %"class.std::allocator.25"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.617
  %6 = load i32, i32* @y.618
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1057631604, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1057631604, label %18
    i32 840696975, label %26
    i32 -1362634375, label %62
    i32 -1302001677, label %63
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 840696975, i32 -1302001677
  store i32 %25, i32* %14
  br label %72

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, align 8
  %28 = alloca %"class.std::allocator.25"*, align 8
  store %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %27, align 8
  store %"class.std::allocator.25"* %1, %"class.std::allocator.25"** %28, align 8
  %29 = load %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %27, align 8
  %30 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %29 to %"class.std::allocator.25"*
  %31 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %28, align 8
  call void @_ZNSaISt6vectorIxSaIxEEEC2ERKS2_(%"class.std::allocator.25"* %30, %"class.std::allocator.25"* dereferenceable(1) %31) #3
  %32 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %29, i32 0, i32 0
  store %"class.std::vector"* null, %"class.std::vector"** %32, align 8
  %33 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %29, i32 0, i32 1
  store %"class.std::vector"* null, %"class.std::vector"** %33, align 8
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %29, i32 0, i32 2
  store %"class.std::vector"* null, %"class.std::vector"** %34, align 8
  %35 = load i32, i32* @x.617
  %36 = load i32, i32* @y.618
  %37 = sub i32 %35, 1585273913
  %38 = sub i32 %37, 1
  %39 = add i32 %38, 1585273913
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 -1362634375, i32 -1302001677
  store i32 %61, i32* %14
  br label %72

; <label>:62:                                     ; preds = %15
  ret void

; <label>:63:                                     ; preds = %15
  %64 = alloca %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, align 8
  %65 = alloca %"class.std::allocator.25"*, align 8
  store %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %64, align 8
  store %"class.std::allocator.25"* %1, %"class.std::allocator.25"** %65, align 8
  %66 = load %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %64, align 8
  %67 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %66 to %"class.std::allocator.25"*
  %68 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %65, align 8
  call void @_ZNSaISt6vectorIxSaIxEEEC2ERKS2_(%"class.std::allocator.25"* %67, %"class.std::allocator.25"* dereferenceable(1) %68) #3
  %69 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %66, i32 0, i32 0
  store %"class.std::vector"* null, %"class.std::vector"** %69, align 8
  %70 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %66, i32 0, i32 1
  store %"class.std::vector"* null, %"class.std::vector"** %70, align 8
  %71 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %66, i32 0, i32 2
  store %"class.std::vector"* null, %"class.std::vector"** %71, align 8
  store i32 840696975, i32* %14
  br label %72

; <label>:72:                                     ; preds = %63, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.24"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.24"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"class.std::vector"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.24"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %8, i32 0, i32 0
  store %"class.std::vector"* %7, %"class.std::vector"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"class.std::vector"*, %"class.std::vector"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %13, i32 0, i32 1
  store %"class.std::vector"* %12, %"class.std::vector"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"class.std::vector"*, %"class.std::vector"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %20, i32 0, i32 2
  store %"class.std::vector"* %19, %"class.std::vector"** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.621
  %5 = load i32, i32* @y.622
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1163336334, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %61
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1163336334, label %17
    i32 947614073, label %37
    i32 210540890, label %56
    i32 -26590381, label %57
  ]

; <label>:16:                                     ; preds = %14
  br label %61

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 947614073, i32 -26590381
  store i32 %36, i32* %13
  br label %61

; <label>:37:                                     ; preds = %14
  %38 = alloca %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %38, align 8
  %39 = load %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %38, align 8
  %40 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %39 to %"class.std::allocator.25"*
  call void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator.25"* %40) #3
  %41 = load i32, i32* @x.621
  %42 = load i32, i32* @y.622
  %43 = sub i32 %41, -2048241599
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -2048241599
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 210540890, i32 -26590381
  store i32 %55, i32* %13
  br label %61

; <label>:56:                                     ; preds = %14
  ret void

; <label>:57:                                     ; preds = %14
  %58 = alloca %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %58, align 8
  %59 = load %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %58, align 8
  %60 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %59 to %"class.std::allocator.25"*
  call void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator.25"* %60) #3
  store i32 947614073, i32* %13
  br label %61

; <label>:61:                                     ; preds = %57, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIxSaIxEEEC2ERKS2_(%"class.std::allocator.25"*, %"class.std::allocator.25"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.623
  %6 = load i32, i32* @y.624
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1829808863, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %56
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1829808863, label %18
    i32 1581096510, label %26
    i32 1974022209, label %48
    i32 -405504749, label %49
  ]

; <label>:17:                                     ; preds = %15
  br label %56

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1581096510, i32 -405504749
  store i32 %25, i32* %14
  br label %56

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.25"*, align 8
  %28 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %27, align 8
  store %"class.std::allocator.25"* %1, %"class.std::allocator.25"** %28, align 8
  %29 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %27, align 8
  %30 = bitcast %"class.std::allocator.25"* %29 to %"class.__gnu_cxx::new_allocator.26"*
  %31 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %28, align 8
  %32 = bitcast %"class.std::allocator.25"* %31 to %"class.__gnu_cxx::new_allocator.26"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.26"* %30, %"class.__gnu_cxx::new_allocator.26"* dereferenceable(1) %32) #3
  %33 = load i32, i32* @x.623
  %34 = load i32, i32* @y.624
  %35 = add i32 %33, 1618965867
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 1618965867
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 1974022209, i32 -405504749
  store i32 %47, i32* %14
  br label %56

; <label>:48:                                     ; preds = %15
  ret void

; <label>:49:                                     ; preds = %15
  %50 = alloca %"class.std::allocator.25"*, align 8
  %51 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %50, align 8
  store %"class.std::allocator.25"* %1, %"class.std::allocator.25"** %51, align 8
  %52 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %50, align 8
  %53 = bitcast %"class.std::allocator.25"* %52 to %"class.__gnu_cxx::new_allocator.26"*
  %54 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %51, align 8
  %55 = bitcast %"class.std::allocator.25"* %54 to %"class.__gnu_cxx::new_allocator.26"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.26"* %53, %"class.__gnu_cxx::new_allocator.26"* dereferenceable(1) %55) #3
  store i32 1581096510, i32* %14
  br label %56

; <label>:56:                                     ; preds = %49, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %1, %"class.__gnu_cxx::new_allocator.26"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.24"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector"*
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.24"*
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.627
  %10 = load i32, i32* @y.628
  %11 = add i32 %9, 312693904
  %12 = sub i32 %11, 1
  %13 = sub i32 %12, 312693904
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 -212896024, i32* %19
  %20 = alloca %"class.std::vector"*
  br label %21

; <label>:21:                                     ; preds = %2, %183
  %22 = load i32, i32* %19
  switch i32 %22, label %23 [
    i32 -212896024, label %24
    i32 -708699517, label %32
    i32 956808976, label %67
    i32 -558432712, label %70
    i32 -1504725030, label %98
    i32 -242063273, label %132
    i32 -1439990556, label %134
    i32 -1046532379, label %150
    i32 -999754531, label %166
    i32 -1860571788, label %167
    i32 229817051, label %169
    i32 1865753854, label %175
    i32 647357689, label %182
  ]

; <label>:23:                                     ; preds = %21
  br label %183

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %8
  %26 = load volatile i1, i1* %7
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 -708699517, i32 229817051
  store i32 %31, i32* %19
  br label %183

; <label>:32:                                     ; preds = %21
  %33 = alloca %"struct.std::_Vector_base.24"*, align 8
  %34 = alloca i64, align 8
  store i64* %34, i64** %6
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %33, align 8
  %35 = load volatile i64*, i64** %6
  store i64 %1, i64* %35, align 8
  %36 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %33, align 8
  store %"struct.std::_Vector_base.24"* %36, %"struct.std::_Vector_base.24"** %5
  %37 = load volatile i64*, i64** %6
  %38 = load i64, i64* %37, align 8
  %39 = icmp ne i64 %38, 0
  store i1 %39, i1* %4
  %40 = load i32, i32* @x.627
  %41 = load i32, i32* @y.628
  %42 = sub i32 %40, -1523581227
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -1523581227
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 956808976, i32 229817051
  store i32 %66, i32* %19
  br label %183

; <label>:67:                                     ; preds = %21
  %68 = load volatile i1, i1* %4
  %69 = select i1 %68, i32 -558432712, i32 -1439990556
  store i32 %69, i32* %19
  br label %183

; <label>:70:                                     ; preds = %21
  %71 = load i32, i32* @x.627
  %72 = load i32, i32* @y.628
  %73 = add i32 %71, -1508818799
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, -1508818799
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 true, true
  %84 = and i1 %81, true
  %85 = and i1 %79, %83
  %86 = and i1 %82, true
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 true, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  %97 = select i1 %95, i32 -1504725030, i32 1865753854
  store i32 %97, i32* %19
  br label %183

; <label>:98:                                     ; preds = %21
  %99 = load volatile %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %5
  %100 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %99, i32 0, i32 0
  %101 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %100 to %"class.std::allocator.25"*
  %102 = load volatile i64*, i64** %6
  %103 = load i64, i64* %102, align 8
  %104 = call %"class.std::vector"* @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE8allocateERS3_m(%"class.std::allocator.25"* dereferenceable(1) %101, i64 %103)
  store %"class.std::vector"* %104, %"class.std::vector"** %3
  %105 = load i32, i32* @x.627
  %106 = load i32, i32* @y.628
  %107 = add i32 %105, -1721073096
  %108 = sub i32 %107, 1
  %109 = sub i32 %108, -1721073096
  %110 = sub i32 %105, 1
  %111 = mul i32 %105, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %106, 10
  %115 = xor i1 %113, true
  %116 = xor i1 %114, true
  %117 = xor i1 false, true
  %118 = and i1 %115, false
  %119 = and i1 %113, %117
  %120 = and i1 %116, false
  %121 = and i1 %114, %117
  %122 = or i1 %118, %119
  %123 = or i1 %120, %121
  %124 = xor i1 %122, %123
  %125 = or i1 %115, %116
  %126 = xor i1 %125, true
  %127 = or i1 false, %117
  %128 = and i1 %126, %127
  %129 = or i1 %124, %128
  %130 = or i1 %113, %114
  %131 = select i1 %129, i32 -242063273, i32 1865753854
  store i32 %131, i32* %19
  br label %183

; <label>:132:                                    ; preds = %21
  store i32 -1860571788, i32* %19
  %133 = load volatile %"class.std::vector"*, %"class.std::vector"** %3
  store %"class.std::vector"* %133, %"class.std::vector"** %20
  br label %183

; <label>:134:                                    ; preds = %21
  %135 = load i32, i32* @x.627
  %136 = load i32, i32* @y.628
  %137 = sub i32 %135, 1229909374
  %138 = sub i32 %137, 1
  %139 = add i32 %138, 1229909374
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = and i1 %143, %144
  %146 = xor i1 %143, %144
  %147 = or i1 %145, %146
  %148 = or i1 %143, %144
  %149 = select i1 %147, i32 -1046532379, i32 647357689
  store i32 %149, i32* %19
  br label %183

; <label>:150:                                    ; preds = %21
  %151 = load i32, i32* @x.627
  %152 = load i32, i32* @y.628
  %153 = add i32 %151, -1533760400
  %154 = sub i32 %153, 1
  %155 = sub i32 %154, -1533760400
  %156 = sub i32 %151, 1
  %157 = mul i32 %151, %155
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %152, 10
  %161 = and i1 %159, %160
  %162 = xor i1 %159, %160
  %163 = or i1 %161, %162
  %164 = or i1 %159, %160
  %165 = select i1 %163, i32 -999754531, i32 647357689
  store i32 %165, i32* %19
  br label %183

; <label>:166:                                    ; preds = %21
  store i32 -1860571788, i32* %19
  store %"class.std::vector"* null, %"class.std::vector"** %20
  br label %183

; <label>:167:                                    ; preds = %21
  %168 = load %"class.std::vector"*, %"class.std::vector"** %20
  ret %"class.std::vector"* %168

; <label>:169:                                    ; preds = %21
  %170 = alloca %"struct.std::_Vector_base.24"*, align 8
  %171 = alloca i64, align 8
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %170, align 8
  store i64 %1, i64* %171, align 8
  %172 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %170, align 8
  %173 = load i64, i64* %171, align 8
  %174 = icmp ne i64 %173, 0
  store i32 -708699517, i32* %19
  br label %183

; <label>:175:                                    ; preds = %21
  %176 = load volatile %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %5
  %177 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %176, i32 0, i32 0
  %178 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %177 to %"class.std::allocator.25"*
  %179 = load volatile i64*, i64** %6
  %180 = load i64, i64* %179, align 8
  %181 = call %"class.std::vector"* @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE8allocateERS3_m(%"class.std::allocator.25"* dereferenceable(1) %178, i64 %180)
  store i32 -1504725030, i32* %19
  br label %183

; <label>:182:                                    ; preds = %21
  store i32 -1046532379, i32* %19
  br label %183

; <label>:183:                                    ; preds = %182, %175, %169, %166, %150, %134, %132, %98, %70, %67, %32, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector"* @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE8allocateERS3_m(%"class.std::allocator.25"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.25"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %3, align 8
  %6 = bitcast %"class.std::allocator.25"* %5 to %"class.__gnu_cxx::new_allocator.26"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.26"* %6, i64 %7, i8* null)
  ret %"class.std::vector"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.26"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.26"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -1196747852, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1196747852, label %16
    i32 -481767476, label %21
    i32 463512323, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -481767476, i32 463512323
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 24
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"class.std::vector"*
  ret %"class.std::vector"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.26"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIxSaIxEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector"*, i64, %"class.std::vector"* dereferenceable(24), %"class.std::allocator.25"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.635
  %9 = load i32, i32* @y.636
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -1353846390, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %76
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1353846390, label %21
    i32 -470505421, label %41
    i32 -1517218142, label %65
    i32 -1791822788, label %67
  ]

; <label>:20:                                     ; preds = %18
  br label %76

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -470505421, i32 -1791822788
  store i32 %40, i32* %17
  br label %76

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::vector"*, align 8
  %43 = alloca i64, align 8
  %44 = alloca %"class.std::vector"*, align 8
  %45 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %42, align 8
  store i64 %1, i64* %43, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %44, align 8
  store %"class.std::allocator.25"* %3, %"class.std::allocator.25"** %45, align 8
  %46 = load %"class.std::vector"*, %"class.std::vector"** %42, align 8
  %47 = load i64, i64* %43, align 8
  %48 = load %"class.std::vector"*, %"class.std::vector"** %44, align 8
  %49 = call %"class.std::vector"* @_ZSt20uninitialized_fill_nIPSt6vectorIxSaIxEEmS2_ET_S4_T0_RKT1_(%"class.std::vector"* %46, i64 %47, %"class.std::vector"* dereferenceable(24) %48)
  store %"class.std::vector"* %49, %"class.std::vector"** %5
  %50 = load i32, i32* @x.635
  %51 = load i32, i32* @y.636
  %52 = sub i32 %50, 1616874564
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 1616874564
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -1517218142, i32 -1791822788
  store i32 %64, i32* %17
  br label %76

; <label>:65:                                     ; preds = %18
  %66 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  ret %"class.std::vector"* %66

; <label>:67:                                     ; preds = %18
  %68 = alloca %"class.std::vector"*, align 8
  %69 = alloca i64, align 8
  %70 = alloca %"class.std::vector"*, align 8
  %71 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %68, align 8
  store i64 %1, i64* %69, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %70, align 8
  store %"class.std::allocator.25"* %3, %"class.std::allocator.25"** %71, align 8
  %72 = load %"class.std::vector"*, %"class.std::vector"** %68, align 8
  %73 = load i64, i64* %69, align 8
  %74 = load %"class.std::vector"*, %"class.std::vector"** %70, align 8
  %75 = call %"class.std::vector"* @_ZSt20uninitialized_fill_nIPSt6vectorIxSaIxEEmS2_ET_S4_T0_RKT1_(%"class.std::vector"* %72, i64 %73, %"class.std::vector"* dereferenceable(24) %74)
  store i32 -470505421, i32* %17
  br label %76

; <label>:76:                                     ; preds = %67, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.24"*, align 8
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %2, align 8
  %3 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %4 to %"class.std::allocator.25"*
  ret %"class.std::allocator.25"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector"* @_ZSt20uninitialized_fill_nIPSt6vectorIxSaIxEEmS2_ET_S4_T0_RKT1_(%"class.std::vector"*, i64, %"class.std::vector"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8
  %11 = call %"class.std::vector"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIxSaIxEEmS4_EET_S6_T0_RKT1_(%"class.std::vector"* %8, i64 %9, %"class.std::vector"* dereferenceable(24) %10)
  ret %"class.std::vector"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIxSaIxEEmS4_EET_S6_T0_RKT1_(%"class.std::vector"*, i64, %"class.std::vector"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.641
  %5 = load i32, i32* @y.642
  %6 = add i32 %4, 993129161
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 993129161
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 true, true
  %17 = and i1 %14, true
  %18 = and i1 %12, %16
  %19 = and i1 %15, true
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 true, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %221

; <label>:30:                                     ; preds = %3, %221
  %31 = alloca %"class.std::vector"*, align 8
  %32 = alloca i64, align 8
  %33 = alloca %"class.std::vector"*, align 8
  %34 = alloca %"class.std::vector"*, align 8
  %35 = alloca i8*
  %36 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %31, align 8
  store i64 %1, i64* %32, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %33, align 8
  %37 = load %"class.std::vector"*, %"class.std::vector"** %31, align 8
  store %"class.std::vector"* %37, %"class.std::vector"** %34, align 8
  %38 = load i32, i32* @x.641
  %39 = load i32, i32* @y.642
  %40 = sub i32 %38, 1432135114
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 1432135114
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  br i1 %62, label %64, label %221

; <label>:64:                                     ; preds = %30
  br label %65

; <label>:65:                                     ; preds = %73, %64
  %66 = load i64, i64* %32, align 8
  %67 = icmp ugt i64 %66, 0
  br i1 %67, label %68, label %133

; <label>:68:                                     ; preds = %65
  %69 = load %"class.std::vector"*, %"class.std::vector"** %34, align 8
  %70 = call %"class.std::vector"* @_ZSt11__addressofISt6vectorIxSaIxEEEPT_RS3_(%"class.std::vector"* dereferenceable(24) %69) #3
  %71 = load %"class.std::vector"*, %"class.std::vector"** %33, align 8
  invoke void @_ZSt10_ConstructISt6vectorIxSaIxEEJRKS2_EEvPT_DpOT0_(%"class.std::vector"* %70, %"class.std::vector"* dereferenceable(24) %71)
          to label %72 unwind label %81

; <label>:72:                                     ; preds = %68
  br label %73

; <label>:73:                                     ; preds = %72
  %74 = load i64, i64* %32, align 8
  %75 = sub i64 %74, 5099645375386258820
  %76 = add i64 %75, -1
  %77 = add i64 %76, 5099645375386258820
  %78 = add i64 %74, -1
  store i64 %77, i64* %32, align 8
  %79 = load %"class.std::vector"*, %"class.std::vector"** %34, align 8
  %80 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %79, i32 1
  store %"class.std::vector"* %80, %"class.std::vector"** %34, align 8
  br label %65

; <label>:81:                                     ; preds = %68
  %82 = landingpad { i8*, i32 }
          catch i8* null
  %83 = extractvalue { i8*, i32 } %82, 0
  store i8* %83, i8** %35, align 8
  %84 = extractvalue { i8*, i32 } %82, 1
  store i32 %84, i32* %36, align 4
  br label %85

; <label>:85:                                     ; preds = %81
  %86 = load i32, i32* @x.641
  %87 = load i32, i32* @y.642
  %88 = sub i32 %86, 212657092
  %89 = sub i32 %88, 1
  %90 = add i32 %89, 212657092
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = xor i1 %94, true
  %97 = xor i1 %95, true
  %98 = xor i1 false, true
  %99 = and i1 %96, false
  %100 = and i1 %94, %98
  %101 = and i1 %97, false
  %102 = and i1 %95, %98
  %103 = or i1 %99, %100
  %104 = or i1 %101, %102
  %105 = xor i1 %103, %104
  %106 = or i1 %96, %97
  %107 = xor i1 %106, true
  %108 = or i1 false, %98
  %109 = and i1 %107, %108
  %110 = or i1 %105, %109
  %111 = or i1 %94, %95
  br i1 %110, label %112, label %229

; <label>:112:                                    ; preds = %85, %229
  %113 = load i8*, i8** %35, align 8
  %114 = call i8* @__cxa_begin_catch(i8* %113) #3
  %115 = load %"class.std::vector"*, %"class.std::vector"** %31, align 8
  %116 = load %"class.std::vector"*, %"class.std::vector"** %34, align 8
  %117 = load i32, i32* @x.641
  %118 = load i32, i32* @y.642
  %119 = add i32 %117, -1373299150
  %120 = sub i32 %119, 1
  %121 = sub i32 %120, -1373299150
  %122 = sub i32 %117, 1
  %123 = mul i32 %117, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %118, 10
  %127 = and i1 %125, %126
  %128 = xor i1 %125, %126
  %129 = or i1 %127, %128
  %130 = or i1 %125, %126
  br i1 %129, label %131, label %229

; <label>:131:                                    ; preds = %112
  invoke void @_ZSt8_DestroyIPSt6vectorIxSaIxEEEvT_S4_(%"class.std::vector"* %115, %"class.std::vector"* %116)
          to label %132 unwind label %135

; <label>:132:                                    ; preds = %131
  invoke void @__cxa_rethrow() #12
          to label %220 unwind label %135

; <label>:133:                                    ; preds = %65
  %134 = load %"class.std::vector"*, %"class.std::vector"** %34, align 8
  ret %"class.std::vector"* %134

; <label>:135:                                    ; preds = %132, %131
  %136 = landingpad { i8*, i32 }
          cleanup
  %137 = extractvalue { i8*, i32 } %136, 0
  store i8* %137, i8** %35, align 8
  %138 = extractvalue { i8*, i32 } %136, 1
  store i32 %138, i32* %36, align 4
  invoke void @__cxa_end_catch()
          to label %139 unwind label %217

; <label>:139:                                    ; preds = %135
  %140 = load i32, i32* @x.641
  %141 = load i32, i32* @y.642
  %142 = add i32 %140, 802072779
  %143 = sub i32 %142, 1
  %144 = sub i32 %143, 802072779
  %145 = sub i32 %140, 1
  %146 = mul i32 %140, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %141, 10
  %150 = and i1 %148, %149
  %151 = xor i1 %148, %149
  %152 = or i1 %150, %151
  %153 = or i1 %148, %149
  br i1 %152, label %154, label %234

; <label>:154:                                    ; preds = %139, %234
  %155 = load i32, i32* @x.641
  %156 = load i32, i32* @y.642
  %157 = sub i32 %155, -1234755995
  %158 = sub i32 %157, 1
  %159 = add i32 %158, -1234755995
  %160 = sub i32 %155, 1
  %161 = mul i32 %155, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %156, 10
  %165 = and i1 %163, %164
  %166 = xor i1 %163, %164
  %167 = or i1 %165, %166
  %168 = or i1 %163, %164
  br i1 %167, label %169, label %234

; <label>:169:                                    ; preds = %154
  br label %212
                                                  ; No predecessors!
  %171 = load i32, i32* @x.641
  %172 = load i32, i32* @y.642
  %173 = sub i32 %171, 112671650
  %174 = sub i32 %173, 1
  %175 = add i32 %174, 112671650
  %176 = sub i32 %171, 1
  %177 = mul i32 %171, %175
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %172, 10
  %181 = and i1 %179, %180
  %182 = xor i1 %179, %180
  %183 = or i1 %181, %182
  %184 = or i1 %179, %180
  br i1 %183, label %185, label %235

; <label>:185:                                    ; preds = %170, %235
  call void @llvm.trap()
  %186 = load i32, i32* @x.641
  %187 = load i32, i32* @y.642
  %188 = sub i32 0, 1
  %189 = add i32 %186, %188
  %190 = sub i32 %186, 1
  %191 = mul i32 %186, %189
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %187, 10
  %195 = xor i1 %193, true
  %196 = xor i1 %194, true
  %197 = xor i1 false, true
  %198 = and i1 %195, false
  %199 = and i1 %193, %197
  %200 = and i1 %196, false
  %201 = and i1 %194, %197
  %202 = or i1 %198, %199
  %203 = or i1 %200, %201
  %204 = xor i1 %202, %203
  %205 = or i1 %195, %196
  %206 = xor i1 %205, true
  %207 = or i1 false, %197
  %208 = and i1 %206, %207
  %209 = or i1 %204, %208
  %210 = or i1 %193, %194
  br i1 %209, label %211, label %235

; <label>:211:                                    ; preds = %185
  unreachable

; <label>:212:                                    ; preds = %169
  %213 = load i8*, i8** %35, align 8
  %214 = load i32, i32* %36, align 4
  %215 = insertvalue { i8*, i32 } undef, i8* %213, 0
  %216 = insertvalue { i8*, i32 } %215, i32 %214, 1
  resume { i8*, i32 } %216

; <label>:217:                                    ; preds = %135
  %218 = landingpad { i8*, i32 }
          catch i8* null
  %219 = extractvalue { i8*, i32 } %218, 0
  call void @__clang_call_terminate(i8* %219) #10
  unreachable

; <label>:220:                                    ; preds = %132
  unreachable

; <label>:221:                                    ; preds = %30, %3
  %222 = alloca %"class.std::vector"*, align 8
  %223 = alloca i64, align 8
  %224 = alloca %"class.std::vector"*, align 8
  %225 = alloca %"class.std::vector"*, align 8
  %226 = alloca i8*
  %227 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %222, align 8
  store i64 %1, i64* %223, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %224, align 8
  %228 = load %"class.std::vector"*, %"class.std::vector"** %222, align 8
  store %"class.std::vector"* %228, %"class.std::vector"** %225, align 8
  br label %30

; <label>:229:                                    ; preds = %112, %85
  %230 = load i8*, i8** %35, align 8
  %231 = call i8* @__cxa_begin_catch(i8* %230) #3
  %232 = load %"class.std::vector"*, %"class.std::vector"** %31, align 8
  %233 = load %"class.std::vector"*, %"class.std::vector"** %34, align 8
  br label %112

; <label>:234:                                    ; preds = %154, %139
  br label %154

; <label>:235:                                    ; preds = %185, %170
  call void @llvm.trap()
  br label %185
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIxSaIxEEJRKS2_EEvPT_DpOT0_(%"class.std::vector"*, %"class.std::vector"* dereferenceable(24)) #0 comdat {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector"*
  %8 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector"* @_ZSt7forwardIRKSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIxSaIxEEC2ERKS1_(%"class.std::vector"* %7, %"class.std::vector"* dereferenceable(24) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector"* @_ZSt11__addressofISt6vectorIxSaIxEEEPT_RS3_(%"class.std::vector"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector"*
  ret %"class.std::vector"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIxSaIxEEEvT_S4_(%"class.std::vector"*, %"class.std::vector"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.647
  %6 = load i32, i32* @y.648
  %7 = sub i32 %5, -288077378
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -288077378
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 403863868, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %76
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 403863868, label %19
    i32 966485573, label %39
    i32 -806872367, label %70
    i32 -215932401, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %76

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 966485573, i32 -215932401
  store i32 %38, i32* %15
  br label %76

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector"*, align 8
  %41 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %40, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %41, align 8
  %42 = load %"class.std::vector"*, %"class.std::vector"** %40, align 8
  %43 = load %"class.std::vector"*, %"class.std::vector"** %41, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIxSaIxEEEEvT_S6_(%"class.std::vector"* %42, %"class.std::vector"* %43)
  %44 = load i32, i32* @x.647
  %45 = load i32, i32* @y.648
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -806872367, i32 -215932401
  store i32 %69, i32* %15
  br label %76

; <label>:70:                                     ; preds = %16
  ret void

; <label>:71:                                     ; preds = %16
  %72 = alloca %"class.std::vector"*, align 8
  %73 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %72, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %73, align 8
  %74 = load %"class.std::vector"*, %"class.std::vector"** %72, align 8
  %75 = load %"class.std::vector"*, %"class.std::vector"** %73, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIxSaIxEEEEvT_S6_(%"class.std::vector"* %74, %"class.std::vector"* %75)
  store i32 966485573, i32* %15
  br label %76

; <label>:76:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector"* @_ZSt7forwardIRKSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  ret %"class.std::vector"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEEC2ERKS1_(%"class.std::vector"*, %"class.std::vector"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.651
  %4 = load i32, i32* @y.652
  %5 = sub i32 %3, -1677293399
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -1677293399
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %231

; <label>:29:                                     ; preds = %2, %231
  %30 = alloca %"class.std::vector"*, align 8
  %31 = alloca %"class.std::vector"*, align 8
  %32 = alloca %"class.std::allocator.0", align 1
  %33 = alloca i8*
  %34 = alloca i32
  %35 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %36 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %30, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %31, align 8
  %37 = load %"class.std::vector"*, %"class.std::vector"** %30, align 8
  %38 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %39 = load %"class.std::vector"*, %"class.std::vector"** %31, align 8
  %40 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"* %39) #3
  %41 = load %"class.std::vector"*, %"class.std::vector"** %31, align 8
  %42 = bitcast %"class.std::vector"* %41 to %"struct.std::_Vector_base"*
  %43 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %42) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIxEE17_S_select_on_copyERKS1_(%"class.std::allocator.0"* sret %32, %"class.std::allocator.0"* dereferenceable(1) %43)
  %44 = load i32, i32* @x.651
  %45 = load i32, i32* @y.652
  %46 = sub i32 %44, -1458354868
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -1458354868
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  br i1 %56, label %58, label %231

; <label>:58:                                     ; preds = %29
  invoke void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base"* %38, i64 %40, %"class.std::allocator.0"* dereferenceable(1) %32)
          to label %59 unwind label %134

; <label>:59:                                     ; preds = %58
  %60 = load i32, i32* @x.651
  %61 = load i32, i32* @y.652
  %62 = sub i32 0, 1
  %63 = add i32 %60, %62
  %64 = sub i32 %60, 1
  %65 = mul i32 %60, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %61, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 true, true
  %72 = and i1 %69, true
  %73 = and i1 %67, %71
  %74 = and i1 %70, true
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 true, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  br i1 %83, label %85, label %246

; <label>:85:                                     ; preds = %59, %246
  call void @_ZNSaIxED2Ev(%"class.std::allocator.0"* %32) #3
  %86 = load %"class.std::vector"*, %"class.std::vector"** %31, align 8
  %87 = call i64* @_ZNKSt6vectorIxSaIxEE5beginEv(%"class.std::vector"* %86) #3
  %88 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %35, i32 0, i32 0
  store i64* %87, i64** %88, align 8
  %89 = load %"class.std::vector"*, %"class.std::vector"** %31, align 8
  %90 = call i64* @_ZNKSt6vectorIxSaIxEE3endEv(%"class.std::vector"* %89) #3
  %91 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %36, i32 0, i32 0
  store i64* %90, i64** %91, align 8
  %92 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %93 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %92, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %93, i32 0, i32 0
  %95 = load i64*, i64** %94, align 8
  %96 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %97 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %96) #3
  %98 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %35, i32 0, i32 0
  %99 = load i64*, i64** %98, align 8
  %100 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %36, i32 0, i32 0
  %101 = load i64*, i64** %100, align 8
  %102 = load i32, i32* @x.651
  %103 = load i32, i32* @y.652
  %104 = add i32 %102, 1867454853
  %105 = sub i32 %104, 1
  %106 = sub i32 %105, 1867454853
  %107 = sub i32 %102, 1
  %108 = mul i32 %102, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %103, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 true, true
  %115 = and i1 %112, true
  %116 = and i1 %110, %114
  %117 = and i1 %113, true
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 true, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  br i1 %126, label %128, label %246

; <label>:128:                                    ; preds = %85
  %129 = invoke i64* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxxET0_T_SA_S9_RSaIT1_E(i64* %99, i64* %101, i64* %95, %"class.std::allocator.0"* dereferenceable(1) %97)
          to label %130 unwind label %192

; <label>:130:                                    ; preds = %128
  %131 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %132 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %131, i32 0, i32 0
  %133 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %132, i32 0, i32 1
  store i64* %129, i64** %133, align 8
  ret void

; <label>:134:                                    ; preds = %58
  %135 = load i32, i32* @x.651
  %136 = load i32, i32* @y.652
  %137 = sub i32 %135, -971810836
  %138 = sub i32 %137, 1
  %139 = add i32 %138, -971810836
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = xor i1 %143, true
  %146 = xor i1 %144, true
  %147 = xor i1 true, true
  %148 = and i1 %145, true
  %149 = and i1 %143, %147
  %150 = and i1 %146, true
  %151 = and i1 %144, %147
  %152 = or i1 %148, %149
  %153 = or i1 %150, %151
  %154 = xor i1 %152, %153
  %155 = or i1 %145, %146
  %156 = xor i1 %155, true
  %157 = or i1 true, %147
  %158 = and i1 %156, %157
  %159 = or i1 %154, %158
  %160 = or i1 %143, %144
  br i1 %159, label %161, label %263

; <label>:161:                                    ; preds = %134, %263
  %162 = landingpad { i8*, i32 }
          cleanup
  %163 = extractvalue { i8*, i32 } %162, 0
  store i8* %163, i8** %33, align 8
  %164 = extractvalue { i8*, i32 } %162, 1
  store i32 %164, i32* %34, align 4
  call void @_ZNSaIxED2Ev(%"class.std::allocator.0"* %32) #3
  %165 = load i32, i32* @x.651
  %166 = load i32, i32* @y.652
  %167 = sub i32 %165, 2141054099
  %168 = sub i32 %167, 1
  %169 = add i32 %168, 2141054099
  %170 = sub i32 %165, 1
  %171 = mul i32 %165, %169
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %166, 10
  %175 = xor i1 %173, true
  %176 = xor i1 %174, true
  %177 = xor i1 false, true
  %178 = and i1 %175, false
  %179 = and i1 %173, %177
  %180 = and i1 %176, false
  %181 = and i1 %174, %177
  %182 = or i1 %178, %179
  %183 = or i1 %180, %181
  %184 = xor i1 %182, %183
  %185 = or i1 %175, %176
  %186 = xor i1 %185, true
  %187 = or i1 false, %177
  %188 = and i1 %186, %187
  %189 = or i1 %184, %188
  %190 = or i1 %173, %174
  br i1 %189, label %191, label %263

; <label>:191:                                    ; preds = %161
  br label %197

; <label>:192:                                    ; preds = %128
  %193 = landingpad { i8*, i32 }
          cleanup
  %194 = extractvalue { i8*, i32 } %193, 0
  store i8* %194, i8** %33, align 8
  %195 = extractvalue { i8*, i32 } %193, 1
  store i32 %195, i32* %34, align 4
  %196 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base"* %196) #3
  br label %197

; <label>:197:                                    ; preds = %192, %191
  %198 = load i32, i32* @x.651
  %199 = load i32, i32* @y.652
  %200 = sub i32 0, 1
  %201 = add i32 %198, %200
  %202 = sub i32 %198, 1
  %203 = mul i32 %198, %201
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %199, 10
  %207 = and i1 %205, %206
  %208 = xor i1 %205, %206
  %209 = or i1 %207, %208
  %210 = or i1 %205, %206
  br i1 %209, label %211, label %267

; <label>:211:                                    ; preds = %197, %267
  %212 = load i8*, i8** %33, align 8
  %213 = load i32, i32* %34, align 4
  %214 = insertvalue { i8*, i32 } undef, i8* %212, 0
  %215 = insertvalue { i8*, i32 } %214, i32 %213, 1
  %216 = load i32, i32* @x.651
  %217 = load i32, i32* @y.652
  %218 = add i32 %216, -1998576025
  %219 = sub i32 %218, 1
  %220 = sub i32 %219, -1998576025
  %221 = sub i32 %216, 1
  %222 = mul i32 %216, %220
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %217, 10
  %226 = and i1 %224, %225
  %227 = xor i1 %224, %225
  %228 = or i1 %226, %227
  %229 = or i1 %224, %225
  br i1 %228, label %230, label %267

; <label>:230:                                    ; preds = %211
  resume { i8*, i32 } %215

; <label>:231:                                    ; preds = %29, %2
  %232 = alloca %"class.std::vector"*, align 8
  %233 = alloca %"class.std::vector"*, align 8
  %234 = alloca %"class.std::allocator.0", align 1
  %235 = alloca i8*
  %236 = alloca i32
  %237 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %238 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %232, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %233, align 8
  %239 = load %"class.std::vector"*, %"class.std::vector"** %232, align 8
  %240 = bitcast %"class.std::vector"* %239 to %"struct.std::_Vector_base"*
  %241 = load %"class.std::vector"*, %"class.std::vector"** %233, align 8
  %242 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"* %241) #3
  %243 = load %"class.std::vector"*, %"class.std::vector"** %233, align 8
  %244 = bitcast %"class.std::vector"* %243 to %"struct.std::_Vector_base"*
  %245 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %244) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIxEE17_S_select_on_copyERKS1_(%"class.std::allocator.0"* sret %234, %"class.std::allocator.0"* dereferenceable(1) %245)
  br label %29

; <label>:246:                                    ; preds = %85, %59
  call void @_ZNSaIxED2Ev(%"class.std::allocator.0"* %32) #3
  %247 = load %"class.std::vector"*, %"class.std::vector"** %31, align 8
  %248 = call i64* @_ZNKSt6vectorIxSaIxEE5beginEv(%"class.std::vector"* %247) #3
  %249 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %35, i32 0, i32 0
  store i64* %248, i64** %249, align 8
  %250 = load %"class.std::vector"*, %"class.std::vector"** %31, align 8
  %251 = call i64* @_ZNKSt6vectorIxSaIxEE3endEv(%"class.std::vector"* %250) #3
  %252 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %36, i32 0, i32 0
  store i64* %251, i64** %252, align 8
  %253 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %254 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %253, i32 0, i32 0
  %255 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %254, i32 0, i32 0
  %256 = load i64*, i64** %255, align 8
  %257 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %258 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %257) #3
  %259 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %35, i32 0, i32 0
  %260 = load i64*, i64** %259, align 8
  %261 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %36, i32 0, i32 0
  %262 = load i64*, i64** %261, align 8
  br label %85

; <label>:263:                                    ; preds = %161, %134
  %264 = landingpad { i8*, i32 }
          cleanup
  %265 = extractvalue { i8*, i32 } %264, 0
  store i8* %265, i8** %33, align 8
  %266 = extractvalue { i8*, i32 } %264, 1
  store i32 %266, i32* %34, align 4
  call void @_ZNSaIxED2Ev(%"class.std::allocator.0"* %32) #3
  br label %161

; <label>:267:                                    ; preds = %211, %197
  %268 = load i8*, i8** %33, align 8
  %269 = load i32, i32* %34, align 4
  %270 = insertvalue { i8*, i32 } undef, i8* %268, 0
  %271 = insertvalue { i8*, i32 } %270, i32 %269, 1
  br label %211
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIxEE17_S_select_on_copyERKS1_(%"class.std::allocator.0"* noalias sret, %"class.std::allocator.0"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %3, align 8
  %4 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %3, align 8
  call void @_ZNSt16allocator_traitsISaIxEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.0"* sret %0, %"class.std::allocator.0"* dereferenceable(1) %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxxET0_T_SA_S9_RSaIT1_E(i64*, i64*, i64*, %"class.std::allocator.0"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.0"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %5, i32 0, i32 0
  store i64* %0, i64** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %6, i32 0, i32 0
  store i64* %1, i64** %12, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %8, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %9 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %10 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load i64*, i64** %7, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %9, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %10, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = call i64* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64* %19, i64* %21, i64* %17)
  ret i64* %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt6vectorIxSaIxEE5beginEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.657
  %6 = load i32, i32* @y.658
  %7 = sub i32 %5, 125869475
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 125869475
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -945402760, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -945402760, label %19
    i32 -1435977005, label %39
    i32 -1113730125, label %64
    i32 -789112358, label %66
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1435977005, i32 -789112358
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %41 = alloca %"class.std::vector"*, align 8
  %42 = alloca i64*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %41, align 8
  %43 = load %"class.std::vector"*, %"class.std::vector"** %41, align 8
  %44 = bitcast %"class.std::vector"* %43 to %"struct.std::_Vector_base"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %45, i32 0, i32 0
  %47 = load i64*, i64** %46, align 8
  store i64* %47, i64** %42, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.34"* %40, i64** dereferenceable(8) %42) #3
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %40, i32 0, i32 0
  %49 = load i64*, i64** %48, align 8
  store i64* %49, i64** %2
  %50 = load i32, i32* @x.657
  %51 = load i32, i32* @y.658
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 -1113730125, i32 -789112358
  store i32 %63, i32* %15
  br label %77

; <label>:64:                                     ; preds = %16
  %65 = load volatile i64*, i64** %2
  ret i64* %65

; <label>:66:                                     ; preds = %16
  %67 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %68 = alloca %"class.std::vector"*, align 8
  %69 = alloca i64*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %68, align 8
  %70 = load %"class.std::vector"*, %"class.std::vector"** %68, align 8
  %71 = bitcast %"class.std::vector"* %70 to %"struct.std::_Vector_base"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %72, i32 0, i32 0
  %74 = load i64*, i64** %73, align 8
  store i64* %74, i64** %69, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.34"* %67, i64** dereferenceable(8) %69) #3
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %67, i32 0, i32 0
  %76 = load i64*, i64** %75, align 8
  store i32 -1435977005, i32* %15
  br label %77

; <label>:77:                                     ; preds = %66, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt6vectorIxSaIxEE3endEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.659
  %6 = load i32, i32* @y.660
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1508534122, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %77
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1508534122, label %18
    i32 -552164843, label %38
    i32 1922424965, label %64
    i32 -1312087745, label %66
  ]

; <label>:17:                                     ; preds = %15
  br label %77

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -552164843, i32 -1312087745
  store i32 %37, i32* %14
  br label %77

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %40 = alloca %"class.std::vector"*, align 8
  %41 = alloca i64*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %40, align 8
  %42 = load %"class.std::vector"*, %"class.std::vector"** %40, align 8
  %43 = bitcast %"class.std::vector"* %42 to %"struct.std::_Vector_base"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %44, i32 0, i32 1
  %46 = load i64*, i64** %45, align 8
  store i64* %46, i64** %41, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.34"* %39, i64** dereferenceable(8) %41) #3
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %39, i32 0, i32 0
  %48 = load i64*, i64** %47, align 8
  store i64* %48, i64** %2
  %49 = load i32, i32* @x.659
  %50 = load i32, i32* @y.660
  %51 = sub i32 %49, 388940389
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 388940389
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 1922424965, i32 -1312087745
  store i32 %63, i32* %14
  br label %77

; <label>:64:                                     ; preds = %15
  %65 = load volatile i64*, i64** %2
  ret i64* %65

; <label>:66:                                     ; preds = %15
  %67 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %68 = alloca %"class.std::vector"*, align 8
  %69 = alloca i64*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %68, align 8
  %70 = load %"class.std::vector"*, %"class.std::vector"** %68, align 8
  %71 = bitcast %"class.std::vector"* %70 to %"struct.std::_Vector_base"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %72, i32 0, i32 1
  %74 = load i64*, i64** %73, align 8
  store i64* %74, i64** %69, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.34"* %67, i64** dereferenceable(8) %69) #3
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %67, i32 0, i32 0
  %76 = load i64*, i64** %75, align 8
  store i32 -552164843, i32* %14
  br label %77

; <label>:77:                                     ; preds = %66, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.0"* noalias sret, %"class.std::allocator.0"* dereferenceable(1)) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.661
  %6 = load i32, i32* @y.662
  %7 = sub i32 %5, 1655317775
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1655317775
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1764093824, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %48
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1764093824, label %19
    i32 1942092261, label %27
    i32 -840498598, label %44
    i32 441090778, label %45
  ]

; <label>:18:                                     ; preds = %16
  br label %48

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1942092261, i32 441090778
  store i32 %26, i32* %15
  br label %48

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %28, align 8
  %29 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %28, align 8
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator.0"* %0, %"class.std::allocator.0"* dereferenceable(1) %29) #3
  %30 = load i32, i32* @x.661
  %31 = load i32, i32* @y.662
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -840498598, i32 441090778
  store i32 %43, i32* %15
  br label %48

; <label>:44:                                     ; preds = %16
  ret void

; <label>:45:                                     ; preds = %16
  %46 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %46, align 8
  %47 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %46, align 8
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator.0"* %0, %"class.std::allocator.0"* dereferenceable(1) %47) #3
  store i32 1942092261, i32* %15
  br label %48

; <label>:48:                                     ; preds = %45, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxEC2ERKS_(%"class.std::allocator.0"*, %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.0"*, align 8
  %4 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %3, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %4, align 8
  %5 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %3, align 8
  %6 = bitcast %"class.std::allocator.0"* %5 to %"class.__gnu_cxx::new_allocator.1"*
  %7 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %4, align 8
  %8 = bitcast %"class.std::allocator.0"* %7 to %"class.__gnu_cxx::new_allocator.1"*
  call void @_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_(%"class.__gnu_cxx::new_allocator.1"* %6, %"class.__gnu_cxx::new_allocator.1"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.665
  %8 = load i32, i32* @y.666
  %9 = sub i32 %7, 425870754
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 425870754
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 439618704, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %96
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 439618704, label %21
    i32 -1290714240, label %41
    i32 -361804844, label %75
    i32 -1634550348, label %77
  ]

; <label>:20:                                     ; preds = %18
  br label %96

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1290714240, i32 -1634550348
  store i32 %40, i32* %17
  br label %96

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %44 = alloca i64*, align 8
  %45 = alloca i8, align 1
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %42, i32 0, i32 0
  store i64* %0, i64** %48, align 8
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %43, i32 0, i32 0
  store i64* %1, i64** %49, align 8
  store i64* %2, i64** %44, align 8
  store i8 1, i8* %45, align 1
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %46 to i8*
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %47 to i8*
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = load i64*, i64** %44, align 8
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %46, i32 0, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %47, i32 0, i32 0
  %58 = load i64*, i64** %57, align 8
  %59 = call i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxEET0_T_SC_SB_(i64* %56, i64* %58, i64* %54)
  store i64* %59, i64** %4
  %60 = load i32, i32* @x.665
  %61 = load i32, i32* @y.666
  %62 = sub i32 %60, 1462248471
  %63 = sub i32 %62, 1
  %64 = add i32 %63, 1462248471
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  %74 = select i1 %72, i32 -361804844, i32 -1634550348
  store i32 %74, i32* %17
  br label %96

; <label>:75:                                     ; preds = %18
  %76 = load volatile i64*, i64** %4
  ret i64* %76

; <label>:77:                                     ; preds = %18
  %78 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %79 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %80 = alloca i64*, align 8
  %81 = alloca i8, align 1
  %82 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %83 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %84 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %78, i32 0, i32 0
  store i64* %0, i64** %84, align 8
  %85 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %79, i32 0, i32 0
  store i64* %1, i64** %85, align 8
  store i64* %2, i64** %80, align 8
  store i8 1, i8* %81, align 1
  %86 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %82 to i8*
  %87 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 8, i1 false)
  %88 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %83 to i8*
  %89 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %89, i64 8, i32 8, i1 false)
  %90 = load i64*, i64** %80, align 8
  %91 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %82, i32 0, i32 0
  %92 = load i64*, i64** %91, align 8
  %93 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %83, i32 0, i32 0
  %94 = load i64*, i64** %93, align 8
  %95 = call i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxEET0_T_SC_SB_(i64* %92, i64* %94, i64* %90)
  store i32 -1290714240, i32* %17
  br label %96

; <label>:96:                                     ; preds = %77, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxEET0_T_SC_SB_(i64*, i64*, i64*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %4, i32 0, i32 0
  store i64* %0, i64** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %5, i32 0, i32 0
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load i64*, i64** %6, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %7, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = call i64* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64* %17, i64* %19, i64* %15)
  ret i64* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.669
  %8 = load i32, i32* @y.670
  %9 = add i32 %7, 181618752
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 181618752
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1855174621, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %113
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1855174621, label %21
    i32 1742154015, label %41
    i32 -1543257005, label %83
    i32 -84575390, label %85
  ]

; <label>:20:                                     ; preds = %18
  br label %113

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1742154015, i32 -84575390
  store i32 %40, i32* %17
  br label %113

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %44 = alloca i64*, align 8
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %48 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %42, i32 0, i32 0
  store i64* %0, i64** %49, align 8
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %43, i32 0, i32 0
  store i64* %1, i64** %50, align 8
  store i64* %2, i64** %44, align 8
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %46 to i8*
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %46, i32 0, i32 0
  %54 = load i64*, i64** %53, align 8
  %55 = call i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64* %54)
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %45, i32 0, i32 0
  store i64* %55, i64** %56, align 8
  %57 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %48 to i8*
  %58 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %58, i64 8, i32 8, i1 false)
  %59 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %48, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = call i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64* %60)
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %47, i32 0, i32 0
  store i64* %61, i64** %62, align 8
  %63 = load i64*, i64** %44, align 8
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %45, i32 0, i32 0
  %65 = load i64*, i64** %64, align 8
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %47, i32 0, i32 0
  %67 = load i64*, i64** %66, align 8
  %68 = call i64* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET1_T0_SA_S9_(i64* %65, i64* %67, i64* %63)
  store i64* %68, i64** %4
  %69 = load i32, i32* @x.669
  %70 = load i32, i32* @y.670
  %71 = sub i32 0, 1
  %72 = add i32 %69, %71
  %73 = sub i32 %69, 1
  %74 = mul i32 %69, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %70, 10
  %78 = and i1 %76, %77
  %79 = xor i1 %76, %77
  %80 = or i1 %78, %79
  %81 = or i1 %76, %77
  %82 = select i1 %80, i32 -1543257005, i32 -84575390
  store i32 %82, i32* %17
  br label %113

; <label>:83:                                     ; preds = %18
  %84 = load volatile i64*, i64** %4
  ret i64* %84

; <label>:85:                                     ; preds = %18
  %86 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %87 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %88 = alloca i64*, align 8
  %89 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %90 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %91 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %92 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %93 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %86, i32 0, i32 0
  store i64* %0, i64** %93, align 8
  %94 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %87, i32 0, i32 0
  store i64* %1, i64** %94, align 8
  store i64* %2, i64** %88, align 8
  %95 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %90 to i8*
  %96 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %96, i64 8, i32 8, i1 false)
  %97 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %90, i32 0, i32 0
  %98 = load i64*, i64** %97, align 8
  %99 = call i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64* %98)
  %100 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %89, i32 0, i32 0
  store i64* %99, i64** %100, align 8
  %101 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %92 to i8*
  %102 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %101, i8* %102, i64 8, i32 8, i1 false)
  %103 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %92, i32 0, i32 0
  %104 = load i64*, i64** %103, align 8
  %105 = call i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64* %104)
  %106 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %91, i32 0, i32 0
  store i64* %105, i64** %106, align 8
  %107 = load i64*, i64** %88, align 8
  %108 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %89, i32 0, i32 0
  %109 = load i64*, i64** %108, align 8
  %110 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %91, i32 0, i32 0
  %111 = load i64*, i64** %110, align 8
  %112 = call i64* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET1_T0_SA_S9_(i64* %109, i64* %111, i64* %107)
  store i32 1742154015, i32* %17
  br label %113

; <label>:113:                                    ; preds = %85, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET1_T0_SA_S9_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %4, i32 0, i32 0
  store i64* %0, i64** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %5, i32 0, i32 0
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %7, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64* %19)
  %21 = load i64*, i64** %6, align 8
  %22 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %21)
  %23 = call i64* @_ZSt13__copy_move_aILb0EPKxPxET1_T0_S4_S3_(i64* %15, i64* %20, i64* %22)
  ret i64* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64*) #0 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.673
  %6 = load i32, i32* @y.674
  %7 = sub i32 %5, 1078282000
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1078282000
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1650904227, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %82
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1650904227, label %19
    i32 -82526106, label %27
    i32 1755227298, label %67
    i32 2032838436, label %69
  ]

; <label>:18:                                     ; preds = %16
  br label %82

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -82526106, i32 2032838436
  store i32 %26, i32* %15
  br label %82

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %29, i32 0, i32 0
  store i64* %0, i64** %31, align 8
  %32 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %30 to i8*
  %33 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 8, i32 8, i1 false)
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %30, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = call i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb0EE7_S_baseES7_(i64* %35)
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %28, i32 0, i32 0
  store i64* %36, i64** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %28, i32 0, i32 0
  %39 = load i64*, i64** %38, align 8
  store i64* %39, i64** %2
  %40 = load i32, i32* @x.673
  %41 = load i32, i32* @y.674
  %42 = add i32 %40, 553575657
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 553575657
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 1755227298, i32 2032838436
  store i32 %66, i32* %15
  br label %82

; <label>:67:                                     ; preds = %16
  %68 = load volatile i64*, i64** %2
  ret i64* %68

; <label>:69:                                     ; preds = %16
  %70 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %71 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %72 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %73 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %71, i32 0, i32 0
  store i64* %0, i64** %73, align 8
  %74 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %72 to i8*
  %75 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %74, i8* %75, i64 8, i32 8, i1 false)
  %76 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %72, i32 0, i32 0
  %77 = load i64*, i64** %76, align 8
  %78 = call i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb0EE7_S_baseES7_(i64* %77)
  %79 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %70, i32 0, i32 0
  store i64* %78, i64** %79, align 8
  %80 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %70, i32 0, i32 0
  %81 = load i64*, i64** %80, align 8
  store i32 -82526106, i32* %15
  br label %82

; <label>:82:                                     ; preds = %69, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt13__copy_move_aILb0EPKxPxET1_T0_S4_S3_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i64*, i64** %4, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64* %8, i64* %9, i64* %10)
  ret i64* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %2, i32 0, i32 0
  store i64* %0, i64** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %3, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = call i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb1EE7_S_baseES7_(i64* %8)
  ret i64* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64*, i64*, i64*) #5 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64, align 8
  store i64* %0, i64** %5, align 8
  store i64* %1, i64** %6, align 8
  store i64* %2, i64** %7, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = load i64*, i64** %5, align 8
  %11 = ptrtoint i64* %9 to i64
  %12 = ptrtoint i64* %10 to i64
  %13 = add i64 %11, -6384720008739121692
  %14 = sub i64 %13, %12
  %15 = sub i64 %14, -6384720008739121692
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 8
  store i64 %17, i64* %8, align 8
  %18 = load i64, i64* %8, align 8
  store i64 %18, i64* %4
  %19 = alloca i32
  store i32 1262065338, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %38
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1262065338, label %23
    i32 1189656159, label %27
    i32 -222593104, label %34
  ]

; <label>:22:                                     ; preds = %20
  br label %38

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %4
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 1189656159, i32 -222593104
  store i32 %26, i32* %19
  br label %38

; <label>:27:                                     ; preds = %20
  %28 = load i64*, i64** %7, align 8
  %29 = bitcast i64* %28 to i8*
  %30 = load i64*, i64** %5, align 8
  %31 = bitcast i64* %30 to i8*
  %32 = load i64, i64* %8, align 8
  %33 = mul i64 8, %32
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %29, i8* %31, i64 %33, i32 8, i1 false)
  store i32 -222593104, i32* %19
  br label %38

; <label>:34:                                     ; preds = %20
  %35 = load i64*, i64** %7, align 8
  %36 = load i64, i64* %8, align 8
  %37 = getelementptr inbounds i64, i64* %35, i64 %36
  ret i64* %37

; <label>:38:                                     ; preds = %27, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb1EE7_S_baseES7_(i64*) #5 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.681
  %6 = load i32, i32* @y.682
  %7 = add i32 %5, 314825316
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 314825316
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1176152203, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1176152203, label %19
    i32 -1780099515, label %39
    i32 299506031, label %70
    i32 1811180354, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1780099515, i32 1811180354
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %40, i32 0, i32 0
  store i64* %0, i64** %41, align 8
  %42 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.34"* %40) #3
  %43 = load i64*, i64** %42, align 8
  store i64* %43, i64** %2
  %44 = load i32, i32* @x.681
  %45 = load i32, i32* @y.682
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 299506031, i32 1811180354
  store i32 %69, i32* %15
  br label %77

; <label>:70:                                     ; preds = %16
  %71 = load volatile i64*, i64** %2
  ret i64* %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %73, i32 0, i32 0
  store i64* %0, i64** %74, align 8
  %75 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.34"* %73) #3
  %76 = load i64*, i64** %75, align 8
  store i32 -1780099515, i32* %15
  br label %77

; <label>:77:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.34"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.34"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.34"* %0, %"class.__gnu_cxx::__normal_iterator.34"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.34"*, %"class.__gnu_cxx::__normal_iterator.34"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %3, i32 0, i32 0
  ret i64** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb0EE7_S_baseES7_(i64*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %3, i32 0, i32 0
  store i64* %0, i64** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %2 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %2, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  ret i64* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.34"*, i64** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.34"*, align 8
  %4 = alloca i64**, align 8
  store %"class.__gnu_cxx::__normal_iterator.34"* %0, %"class.__gnu_cxx::__normal_iterator.34"** %3, align 8
  store i64** %1, i64*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.34"*, %"class.__gnu_cxx::__normal_iterator.34"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %5, i32 0, i32 0
  %7 = load i64**, i64*** %4, align 8
  %8 = load i64*, i64** %7, align 8
  store i64* %8, i64** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIxSaIxEEEEvT_S6_(%"class.std::vector"*, %"class.std::vector"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %5, align 8
  %6 = alloca i32
  store i32 -231703083, i32* %6
  br label %7

; <label>:7:                                      ; preds = %2, %115
  %8 = load i32, i32* %6
  switch i32 %8, label %9 [
    i32 -231703083, label %10
    i32 -1908396004, label %26
    i32 1747752702, label %57
    i32 -1801334293, label %60
    i32 -461469102, label %63
    i32 1812650260, label %66
    i32 322514508, label %93
    i32 -30400349, label %109
    i32 -1017422796, label %110
    i32 -497961102, label %114
  ]

; <label>:9:                                      ; preds = %7
  br label %115

; <label>:10:                                     ; preds = %7
  %11 = load i32, i32* @x.689
  %12 = load i32, i32* @y.690
  %13 = sub i32 %11, 842563673
  %14 = sub i32 %13, 1
  %15 = add i32 %14, 842563673
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %12, 10
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1908396004, i32 -1017422796
  store i32 %25, i32* %6
  br label %115

; <label>:26:                                     ; preds = %7
  %27 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %28 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %29 = icmp ne %"class.std::vector"* %27, %28
  store i1 %29, i1* %3
  %30 = load i32, i32* @x.689
  %31 = load i32, i32* @y.690
  %32 = add i32 %30, -1792147942
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -1792147942
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 1747752702, i32 -1017422796
  store i32 %56, i32* %6
  br label %115

; <label>:57:                                     ; preds = %7
  %58 = load volatile i1, i1* %3
  %59 = select i1 %58, i32 -1801334293, i32 1812650260
  store i32 %59, i32* %6
  br label %115

; <label>:60:                                     ; preds = %7
  %61 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %62 = call %"class.std::vector"* @_ZSt11__addressofISt6vectorIxSaIxEEEPT_RS3_(%"class.std::vector"* dereferenceable(24) %61) #3
  call void @_ZSt8_DestroyISt6vectorIxSaIxEEEvPT_(%"class.std::vector"* %62)
  store i32 -461469102, i32* %6
  br label %115

; <label>:63:                                     ; preds = %7
  %64 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %65 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %64, i32 1
  store %"class.std::vector"* %65, %"class.std::vector"** %4, align 8
  store i32 -231703083, i32* %6
  br label %115

; <label>:66:                                     ; preds = %7
  %67 = load i32, i32* @x.689
  %68 = load i32, i32* @y.690
  %69 = sub i32 0, 1
  %70 = add i32 %67, %69
  %71 = sub i32 %67, 1
  %72 = mul i32 %67, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %68, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 true, true
  %79 = and i1 %76, true
  %80 = and i1 %74, %78
  %81 = and i1 %77, true
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 true, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  %92 = select i1 %90, i32 322514508, i32 -497961102
  store i32 %92, i32* %6
  br label %115

; <label>:93:                                     ; preds = %7
  %94 = load i32, i32* @x.689
  %95 = load i32, i32* @y.690
  %96 = sub i32 %94, -387906266
  %97 = sub i32 %96, 1
  %98 = add i32 %97, -387906266
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = and i1 %102, %103
  %105 = xor i1 %102, %103
  %106 = or i1 %104, %105
  %107 = or i1 %102, %103
  %108 = select i1 %106, i32 -30400349, i32 -497961102
  store i32 %108, i32* %6
  br label %115

; <label>:109:                                    ; preds = %7
  ret void

; <label>:110:                                    ; preds = %7
  %111 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %112 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %113 = icmp ne %"class.std::vector"* %111, %112
  store i32 -1908396004, i32* %6
  br label %115

; <label>:114:                                    ; preds = %7
  store i32 322514508, i32* %6
  br label %115

; <label>:115:                                    ; preds = %114, %110, %93, %66, %63, %60, %57, %26, %10, %9
  br label %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIxSaIxEEEvPT_(%"class.std::vector"*) #5 comdat {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector"* %3) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.24"*, %"class.std::vector"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::vector"*
  %5 = alloca %"struct.std::_Vector_base.24"*
  %6 = alloca %"struct.std::_Vector_base.24"*, align 8
  %7 = alloca %"class.std::vector"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %6, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %6, align 8
  store %"struct.std::_Vector_base.24"* %9, %"struct.std::_Vector_base.24"** %5
  %10 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  store %"class.std::vector"* %10, %"class.std::vector"** %4
  %11 = alloca i32
  store i32 801934155, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %120
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 801934155, label %15
    i32 -160702872, label %19
    i32 -1626907196, label %47
    i32 -1898245336, label %68
    i32 1843115233, label %69
    i32 1555800875, label %96
    i32 1209103958, label %112
    i32 747911163, label %113
    i32 480761422, label %119
  ]

; <label>:14:                                     ; preds = %12
  br label %120

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  %17 = icmp ne %"class.std::vector"* %16, null
  %18 = select i1 %17, i32 -160702872, i32 1843115233
  store i32 %18, i32* %11
  br label %120

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.693
  %21 = load i32, i32* @y.694
  %22 = sub i32 %20, 981213213
  %23 = sub i32 %22, 1
  %24 = add i32 %23, 981213213
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 true, true
  %33 = and i1 %30, true
  %34 = and i1 %28, %32
  %35 = and i1 %31, true
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 true, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 -1626907196, i32 747911163
  store i32 %46, i32* %11
  br label %120

; <label>:47:                                     ; preds = %12
  %48 = load volatile %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %5
  %49 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %48, i32 0, i32 0
  %50 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %49 to %"class.std::allocator.25"*
  %51 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %52 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE10deallocateERS3_PS2_m(%"class.std::allocator.25"* dereferenceable(1) %50, %"class.std::vector"* %51, i64 %52)
  %53 = load i32, i32* @x.693
  %54 = load i32, i32* @y.694
  %55 = add i32 %53, 1800448211
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, 1800448211
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 -1898245336, i32 747911163
  store i32 %67, i32* %11
  br label %120

; <label>:68:                                     ; preds = %12
  store i32 1843115233, i32* %11
  br label %120

; <label>:69:                                     ; preds = %12
  %70 = load i32, i32* @x.693
  %71 = load i32, i32* @y.694
  %72 = sub i32 0, 1
  %73 = add i32 %70, %72
  %74 = sub i32 %70, 1
  %75 = mul i32 %70, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %71, 10
  %79 = xor i1 %77, true
  %80 = xor i1 %78, true
  %81 = xor i1 false, true
  %82 = and i1 %79, false
  %83 = and i1 %77, %81
  %84 = and i1 %80, false
  %85 = and i1 %78, %81
  %86 = or i1 %82, %83
  %87 = or i1 %84, %85
  %88 = xor i1 %86, %87
  %89 = or i1 %79, %80
  %90 = xor i1 %89, true
  %91 = or i1 false, %81
  %92 = and i1 %90, %91
  %93 = or i1 %88, %92
  %94 = or i1 %77, %78
  %95 = select i1 %93, i32 1555800875, i32 480761422
  store i32 %95, i32* %11
  br label %120

; <label>:96:                                     ; preds = %12
  %97 = load i32, i32* @x.693
  %98 = load i32, i32* @y.694
  %99 = sub i32 %97, -818975063
  %100 = sub i32 %99, 1
  %101 = add i32 %100, -818975063
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  %111 = select i1 %109, i32 1209103958, i32 480761422
  store i32 %111, i32* %11
  br label %120

; <label>:112:                                    ; preds = %12
  ret void

; <label>:113:                                    ; preds = %12
  %114 = load volatile %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %5
  %115 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %114, i32 0, i32 0
  %116 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %115 to %"class.std::allocator.25"*
  %117 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %118 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE10deallocateERS3_PS2_m(%"class.std::allocator.25"* dereferenceable(1) %116, %"class.std::vector"* %117, i64 %118)
  store i32 -1626907196, i32* %11
  br label %120

; <label>:119:                                    ; preds = %12
  store i32 1555800875, i32* %11
  br label %120

; <label>:120:                                    ; preds = %119, %113, %96, %69, %68, %47, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE10deallocateERS3_PS2_m(%"class.std::allocator.25"* dereferenceable(1), %"class.std::vector"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.25"*, align 8
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %4, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %4, align 8
  %8 = bitcast %"class.std::allocator.25"* %7 to %"class.__gnu_cxx::new_allocator.26"*
  %9 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.26"* %8, %"class.std::vector"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.26"*, %"class.std::vector"*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %4, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %4, align 8
  %8 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %9 = bitcast %"class.std::vector"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIxSaIxEES2_EvT_S4_RSaIT0_E(%"class.std::vector"*, %"class.std::vector"*, %"class.std::allocator.25"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.699
  %7 = load i32, i32* @y.700
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -102794939, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -102794939, label %19
    i32 1054325143, label %39
    i32 276447673, label %60
    i32 1351073964, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1054325143, i32 1351073964
  store i32 %38, i32* %15
  br label %67

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector"*, align 8
  %41 = alloca %"class.std::vector"*, align 8
  %42 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %40, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %41, align 8
  store %"class.std::allocator.25"* %2, %"class.std::allocator.25"** %42, align 8
  %43 = load %"class.std::vector"*, %"class.std::vector"** %40, align 8
  %44 = load %"class.std::vector"*, %"class.std::vector"** %41, align 8
  call void @_ZSt8_DestroyIPSt6vectorIxSaIxEEEvT_S4_(%"class.std::vector"* %43, %"class.std::vector"* %44)
  %45 = load i32, i32* @x.699
  %46 = load i32, i32* @y.700
  %47 = add i32 %45, -79039735
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -79039735
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 276447673, i32 1351073964
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::vector"*, align 8
  %63 = alloca %"class.std::vector"*, align 8
  %64 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %62, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %63, align 8
  store %"class.std::allocator.25"* %2, %"class.std::allocator.25"** %64, align 8
  %65 = load %"class.std::vector"*, %"class.std::vector"** %62, align 8
  %66 = load %"class.std::vector"*, %"class.std::vector"** %63, align 8
  call void @_ZSt8_DestroyIPSt6vectorIxSaIxEEEvT_S4_(%"class.std::vector"* %65, %"class.std::vector"* %66)
  store i32 1054325143, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s185979257.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { noinline noreturn nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
