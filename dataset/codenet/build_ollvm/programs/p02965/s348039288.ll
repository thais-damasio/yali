; ModuleID = 'Project_CodeNet_C++1400/p02965/s348039288.cpp'
source_filename = "Project_CodeNet_C++1400/p02965/s348039288.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

$_Z5pre_Cv = comdat any

$_Z1Cii = comdat any

$_Z5powerii = comdat any

@fac = global [5000000 x i32] zeroinitializer, align 16
@inv = global [5000000 x i32] zeroinitializer, align 16
@i = global i32 0, align 4
@m = global i32 0, align 4
@n = global i32 0, align 4
@s = global i32 0, align 4
@.str = private unnamed_addr constant [5 x i8] c"%d%d\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@x = common global i32 0
@y = common global i32 0
@x.2 = common global i32 0
@y.3 = common global i32 0
@x.4 = common global i32 0
@y.5 = common global i32 0
@x.6 = common global i32 0
@y.7 = common global i32 0

; Function Attrs: noinline norecurse uwtable
define i32 @main() #0 {
  %1 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  call void @_Z5pre_Cv()
  %2 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i32* @n, i32* @m)
  %3 = load i32, i32* @m, align 4
  store i32 %3, i32* @i, align 4
  %4 = alloca i32
  store i32 579163116, i32* %4
  br label %5

; <label>:5:                                      ; preds = %0, %1058
  %6 = load i32, i32* %4
  switch i32 %6, label %7 [
    i32 579163116, label %8
    i32 425273703, label %20
    i32 1409776339, label %60
    i32 -1283061941, label %66
    i32 321726186, label %72
    i32 -2063208958, label %84
    i32 -1002578704, label %112
    i32 2027182328, label %192
    i32 622929121, label %193
    i32 -1067236975, label %199
    i32 1617454427, label %215
    i32 -342415743, label %232
    i32 1648134131, label %233
    i32 -783101751, label %245
    i32 2063417503, label %273
    i32 1488342973, label %360
    i32 -631392263, label %361
    i32 -2146899952, label %376
    i32 -483763254, label %398
    i32 -1467939160, label %399
    i32 2077689758, label %402
    i32 -1920497753, label %676
    i32 1012793832, label %678
    i32 -2084571556, label %1034
  ]

; <label>:7:                                      ; preds = %5
  br label %1058

; <label>:8:                                      ; preds = %5
  %9 = load i32, i32* @i, align 4
  %10 = load i32, i32* @m, align 4
  %11 = load i32, i32* @m, align 4
  %12 = sdiv i32 %11, 2
  %13 = sub i32 0, %10
  %14 = sub i32 0, %12
  %15 = add i32 %13, %14
  %16 = sub i32 0, %15
  %17 = add nsw i32 %10, %12
  %18 = icmp sle i32 %9, %16
  %19 = select i1 %18, i32 425273703, i32 -1283061941
  store i32 %19, i32* %4
  br label %1058

; <label>:20:                                     ; preds = %5
  %21 = load i32, i32* @s, align 4
  %22 = sext i32 %21 to i64
  %23 = load i32, i32* @i, align 4
  %24 = load i32, i32* @n, align 4
  %25 = add i32 %23, 2048061031
  %26 = add i32 %25, %24
  %27 = sub i32 %26, 2048061031
  %28 = add nsw i32 %23, %24
  %29 = sub i32 %27, 1035616072
  %30 = sub i32 %29, 1
  %31 = add i32 %30, 1035616072
  %32 = sub nsw i32 %27, 1
  %33 = load i32, i32* @n, align 4
  %34 = sub i32 %33, -228544478
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -228544478
  %37 = sub nsw i32 %33, 1
  %38 = call i32 @_Z1Cii(i32 %31, i32 %36)
  %39 = sext i32 %38 to i64
  %40 = mul nsw i64 1, %39
  %41 = load i32, i32* @n, align 4
  %42 = load i32, i32* @m, align 4
  %43 = mul nsw i32 3, %42
  %44 = load i32, i32* @i, align 4
  %45 = mul nsw i32 2, %44
  %46 = sub i32 %43, -2074806505
  %47 = sub i32 %46, %45
  %48 = add i32 %47, -2074806505
  %49 = sub nsw i32 %43, %45
  %50 = call i32 @_Z1Cii(i32 %41, i32 %48)
  %51 = sext i32 %50 to i64
  %52 = mul nsw i64 %40, %51
  %53 = sub i64 0, %22
  %54 = sub i64 0, %52
  %55 = add i64 %53, %54
  %56 = sub i64 0, %55
  %57 = add nsw i64 %22, %52
  %58 = srem i64 %56, 998244353
  %59 = trunc i64 %58 to i32
  store i32 %59, i32* @s, align 4
  store i32 1409776339, i32* %4
  br label %1058

; <label>:60:                                     ; preds = %5
  %61 = load i32, i32* @i, align 4
  %62 = sub i32 %61, 593125909
  %63 = add i32 %62, 1
  %64 = add i32 %63, 593125909
  %65 = add nsw i32 %61, 1
  store i32 %64, i32* @i, align 4
  store i32 579163116, i32* %4
  br label %1058

; <label>:66:                                     ; preds = %5
  %67 = load i32, i32* @m, align 4
  %68 = add i32 %67, 1315525947
  %69 = add i32 %68, 1
  %70 = sub i32 %69, 1315525947
  %71 = add nsw i32 %67, 1
  store i32 %70, i32* @i, align 4
  store i32 321726186, i32* %4
  br label %1058

; <label>:72:                                     ; preds = %5
  %73 = load i32, i32* @i, align 4
  %74 = load i32, i32* @m, align 4
  %75 = load i32, i32* @m, align 4
  %76 = sdiv i32 %75, 2
  %77 = sub i32 0, %74
  %78 = sub i32 0, %76
  %79 = add i32 %77, %78
  %80 = sub i32 0, %79
  %81 = add nsw i32 %74, %76
  %82 = icmp sle i32 %73, %80
  %83 = select i1 %82, i32 -2063208958, i32 -1067236975
  store i32 %83, i32* %4
  br label %1058

; <label>:84:                                     ; preds = %5
  %85 = load i32, i32* @x
  %86 = load i32, i32* @y
  %87 = add i32 %85, 1259125387
  %88 = sub i32 %87, 1
  %89 = sub i32 %88, 1259125387
  %90 = sub i32 %85, 1
  %91 = mul i32 %85, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %86, 10
  %95 = xor i1 %93, true
  %96 = xor i1 %94, true
  %97 = xor i1 true, true
  %98 = and i1 %95, true
  %99 = and i1 %93, %97
  %100 = and i1 %96, true
  %101 = and i1 %94, %97
  %102 = or i1 %98, %99
  %103 = or i1 %100, %101
  %104 = xor i1 %102, %103
  %105 = or i1 %95, %96
  %106 = xor i1 %105, true
  %107 = or i1 true, %97
  %108 = and i1 %106, %107
  %109 = or i1 %104, %108
  %110 = or i1 %93, %94
  %111 = select i1 %109, i32 -1002578704, i32 2077689758
  store i32 %111, i32* %4
  br label %1058

; <label>:112:                                    ; preds = %5
  %113 = load i32, i32* @s, align 4
  %114 = sext i32 %113 to i64
  %115 = load i32, i32* @i, align 4
  %116 = load i32, i32* @m, align 4
  %117 = sub i32 %115, -1884973985
  %118 = sub i32 %117, %116
  %119 = add i32 %118, -1884973985
  %120 = sub nsw i32 %115, %116
  %121 = load i32, i32* @n, align 4
  %122 = sub i32 0, %119
  %123 = sub i32 0, %121
  %124 = add i32 %122, %123
  %125 = sub i32 0, %124
  %126 = add nsw i32 %119, %121
  %127 = add i32 %125, 715660493
  %128 = sub i32 %127, 2
  %129 = sub i32 %128, 715660493
  %130 = sub nsw i32 %125, 2
  %131 = load i32, i32* @n, align 4
  %132 = add i32 %131, -747735429
  %133 = sub i32 %132, 1
  %134 = sub i32 %133, -747735429
  %135 = sub nsw i32 %131, 1
  %136 = call i32 @_Z1Cii(i32 %129, i32 %134)
  %137 = sext i32 %136 to i64
  %138 = mul nsw i64 1, %137
  %139 = load i32, i32* @n, align 4
  %140 = load i32, i32* @m, align 4
  %141 = mul nsw i32 3, %140
  %142 = load i32, i32* @i, align 4
  %143 = mul nsw i32 2, %142
  %144 = sub i32 %141, -1475385950
  %145 = sub i32 %144, %143
  %146 = add i32 %145, -1475385950
  %147 = sub nsw i32 %141, %143
  %148 = call i32 @_Z1Cii(i32 %139, i32 %146)
  %149 = sext i32 %148 to i64
  %150 = mul nsw i64 %138, %149
  %151 = srem i64 %150, 998244353
  %152 = load i32, i32* @n, align 4
  %153 = sext i32 %152 to i64
  %154 = mul nsw i64 %151, %153
  %155 = srem i64 %154, 998244353
  %156 = sub i64 0, %155
  %157 = add i64 %114, %156
  %158 = sub nsw i64 %114, %155
  %159 = sub i64 %157, 1532917795186133384
  %160 = add i64 %159, 998244353
  %161 = add i64 %160, 1532917795186133384
  %162 = add nsw i64 %157, 998244353
  %163 = srem i64 %161, 998244353
  %164 = trunc i64 %163 to i32
  store i32 %164, i32* @s, align 4
  %165 = load i32, i32* @x
  %166 = load i32, i32* @y
  %167 = sub i32 %165, -1176497875
  %168 = sub i32 %167, 1
  %169 = add i32 %168, -1176497875
  %170 = sub i32 %165, 1
  %171 = mul i32 %165, %169
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %166, 10
  %175 = xor i1 %173, true
  %176 = xor i1 %174, true
  %177 = xor i1 false, true
  %178 = and i1 %175, false
  %179 = and i1 %173, %177
  %180 = and i1 %176, false
  %181 = and i1 %174, %177
  %182 = or i1 %178, %179
  %183 = or i1 %180, %181
  %184 = xor i1 %182, %183
  %185 = or i1 %175, %176
  %186 = xor i1 %185, true
  %187 = or i1 false, %177
  %188 = and i1 %186, %187
  %189 = or i1 %184, %188
  %190 = or i1 %173, %174
  %191 = select i1 %189, i32 2027182328, i32 2077689758
  store i32 %191, i32* %4
  br label %1058

; <label>:192:                                    ; preds = %5
  store i32 622929121, i32* %4
  br label %1058

; <label>:193:                                    ; preds = %5
  %194 = load i32, i32* @i, align 4
  %195 = sub i32 %194, 1658235144
  %196 = add i32 %195, 1
  %197 = add i32 %196, 1658235144
  %198 = add nsw i32 %194, 1
  store i32 %197, i32* @i, align 4
  store i32 321726186, i32* %4
  br label %1058

; <label>:199:                                    ; preds = %5
  %200 = load i32, i32* @x
  %201 = load i32, i32* @y
  %202 = sub i32 %200, 869074137
  %203 = sub i32 %202, 1
  %204 = add i32 %203, 869074137
  %205 = sub i32 %200, 1
  %206 = mul i32 %200, %204
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %201, 10
  %210 = and i1 %208, %209
  %211 = xor i1 %208, %209
  %212 = or i1 %210, %211
  %213 = or i1 %208, %209
  %214 = select i1 %212, i32 1617454427, i32 -1920497753
  store i32 %214, i32* %4
  br label %1058

; <label>:215:                                    ; preds = %5
  %216 = load i32, i32* @m, align 4
  store i32 %216, i32* @i, align 4
  %217 = load i32, i32* @x
  %218 = load i32, i32* @y
  %219 = sub i32 %217, 561766940
  %220 = sub i32 %219, 1
  %221 = add i32 %220, 561766940
  %222 = sub i32 %217, 1
  %223 = mul i32 %217, %221
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %218, 10
  %227 = and i1 %225, %226
  %228 = xor i1 %225, %226
  %229 = or i1 %227, %228
  %230 = or i1 %225, %226
  %231 = select i1 %229, i32 -342415743, i32 -1920497753
  store i32 %231, i32* %4
  br label %1058

; <label>:232:                                    ; preds = %5
  store i32 1648134131, i32* %4
  br label %1058

; <label>:233:                                    ; preds = %5
  %234 = load i32, i32* @i, align 4
  %235 = load i32, i32* @m, align 4
  %236 = load i32, i32* @m, align 4
  %237 = sdiv i32 %236, 2
  %238 = sub i32 0, %235
  %239 = sub i32 0, %237
  %240 = add i32 %238, %239
  %241 = sub i32 0, %240
  %242 = add nsw i32 %235, %237
  %243 = icmp sle i32 %234, %241
  %244 = select i1 %243, i32 -783101751, i32 -1467939160
  store i32 %244, i32* %4
  br label %1058

; <label>:245:                                    ; preds = %5
  %246 = load i32, i32* @x
  %247 = load i32, i32* @y
  %248 = sub i32 %246, 189228735
  %249 = sub i32 %248, 1
  %250 = add i32 %249, 189228735
  %251 = sub i32 %246, 1
  %252 = mul i32 %246, %250
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %247, 10
  %256 = xor i1 %254, true
  %257 = xor i1 %255, true
  %258 = xor i1 false, true
  %259 = and i1 %256, false
  %260 = and i1 %254, %258
  %261 = and i1 %257, false
  %262 = and i1 %255, %258
  %263 = or i1 %259, %260
  %264 = or i1 %261, %262
  %265 = xor i1 %263, %264
  %266 = or i1 %256, %257
  %267 = xor i1 %266, true
  %268 = or i1 false, %258
  %269 = and i1 %267, %268
  %270 = or i1 %265, %269
  %271 = or i1 %254, %255
  %272 = select i1 %270, i32 2063417503, i32 1012793832
  store i32 %272, i32* %4
  br label %1058

; <label>:273:                                    ; preds = %5
  %274 = load i32, i32* @s, align 4
  %275 = sext i32 %274 to i64
  %276 = load i32, i32* @i, align 4
  %277 = load i32, i32* @m, align 4
  %278 = sub i32 0, %277
  %279 = add i32 %276, %278
  %280 = sub nsw i32 %276, %277
  %281 = load i32, i32* @n, align 4
  %282 = sub i32 0, %279
  %283 = sub i32 0, %281
  %284 = add i32 %282, %283
  %285 = sub i32 0, %284
  %286 = add nsw i32 %279, %281
  %287 = sub i32 %285, 1934076322
  %288 = sub i32 %287, 2
  %289 = add i32 %288, 1934076322
  %290 = sub nsw i32 %285, 2
  %291 = load i32, i32* @n, align 4
  %292 = sub i32 %291, 199147831
  %293 = sub i32 %292, 2
  %294 = add i32 %293, 199147831
  %295 = sub nsw i32 %291, 2
  %296 = call i32 @_Z1Cii(i32 %289, i32 %294)
  %297 = sext i32 %296 to i64
  %298 = mul nsw i64 1, %297
  %299 = load i32, i32* @n, align 4
  %300 = add i32 %299, -58045685
  %301 = sub i32 %300, 1
  %302 = sub i32 %301, -58045685
  %303 = sub nsw i32 %299, 1
  %304 = load i32, i32* @m, align 4
  %305 = mul nsw i32 3, %304
  %306 = load i32, i32* @i, align 4
  %307 = mul nsw i32 2, %306
  %308 = sub i32 0, %307
  %309 = add i32 %305, %308
  %310 = sub nsw i32 %305, %307
  %311 = sub i32 %309, 437939096
  %312 = sub i32 %311, 1
  %313 = add i32 %312, 437939096
  %314 = sub nsw i32 %309, 1
  %315 = call i32 @_Z1Cii(i32 %302, i32 %313)
  %316 = sext i32 %315 to i64
  %317 = mul nsw i64 %298, %316
  %318 = srem i64 %317, 998244353
  %319 = load i32, i32* @n, align 4
  %320 = sext i32 %319 to i64
  %321 = mul nsw i64 %318, %320
  %322 = srem i64 %321, 998244353
  %323 = sub i64 0, %322
  %324 = add i64 %275, %323
  %325 = sub nsw i64 %275, %322
  %326 = sub i64 0, %324
  %327 = sub i64 0, 998244353
  %328 = add i64 %326, %327
  %329 = sub i64 0, %328
  %330 = add nsw i64 %324, 998244353
  %331 = srem i64 %329, 998244353
  %332 = trunc i64 %331 to i32
  store i32 %332, i32* @s, align 4
  %333 = load i32, i32* @x
  %334 = load i32, i32* @y
  %335 = sub i32 %333, -1143509812
  %336 = sub i32 %335, 1
  %337 = add i32 %336, -1143509812
  %338 = sub i32 %333, 1
  %339 = mul i32 %333, %337
  %340 = urem i32 %339, 2
  %341 = icmp eq i32 %340, 0
  %342 = icmp slt i32 %334, 10
  %343 = xor i1 %341, true
  %344 = xor i1 %342, true
  %345 = xor i1 false, true
  %346 = and i1 %343, false
  %347 = and i1 %341, %345
  %348 = and i1 %344, false
  %349 = and i1 %342, %345
  %350 = or i1 %346, %347
  %351 = or i1 %348, %349
  %352 = xor i1 %350, %351
  %353 = or i1 %343, %344
  %354 = xor i1 %353, true
  %355 = or i1 false, %345
  %356 = and i1 %354, %355
  %357 = or i1 %352, %356
  %358 = or i1 %341, %342
  %359 = select i1 %357, i32 1488342973, i32 1012793832
  store i32 %359, i32* %4
  br label %1058

; <label>:360:                                    ; preds = %5
  store i32 -631392263, i32* %4
  br label %1058

; <label>:361:                                    ; preds = %5
  %362 = load i32, i32* @x
  %363 = load i32, i32* @y
  %364 = sub i32 0, 1
  %365 = add i32 %362, %364
  %366 = sub i32 %362, 1
  %367 = mul i32 %362, %365
  %368 = urem i32 %367, 2
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %363, 10
  %371 = and i1 %369, %370
  %372 = xor i1 %369, %370
  %373 = or i1 %371, %372
  %374 = or i1 %369, %370
  %375 = select i1 %373, i32 -2146899952, i32 -2084571556
  store i32 %375, i32* %4
  br label %1058

; <label>:376:                                    ; preds = %5
  %377 = load i32, i32* @i, align 4
  %378 = sub i32 0, %377
  %379 = sub i32 0, 1
  %380 = add i32 %378, %379
  %381 = sub i32 0, %380
  %382 = add nsw i32 %377, 1
  store i32 %381, i32* @i, align 4
  %383 = load i32, i32* @x
  %384 = load i32, i32* @y
  %385 = add i32 %383, -1240593979
  %386 = sub i32 %385, 1
  %387 = sub i32 %386, -1240593979
  %388 = sub i32 %383, 1
  %389 = mul i32 %383, %387
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %384, 10
  %393 = and i1 %391, %392
  %394 = xor i1 %391, %392
  %395 = or i1 %393, %394
  %396 = or i1 %391, %392
  %397 = select i1 %395, i32 -483763254, i32 -2084571556
  store i32 %397, i32* %4
  br label %1058

; <label>:398:                                    ; preds = %5
  store i32 1648134131, i32* %4
  br label %1058

; <label>:399:                                    ; preds = %5
  %400 = load i32, i32* @s, align 4
  %401 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %400)
  ret i32 0

; <label>:402:                                    ; preds = %5
  %403 = load i32, i32* @s, align 4
  %404 = sext i32 %403 to i64
  %405 = load i32, i32* @i, align 4
  %406 = load i32, i32* @m, align 4
  %407 = add i32 0, -56124795
  %408 = sub i32 %407, %405
  %409 = sub i32 %408, -56124795
  %410 = sub i32 0, %405
  %411 = sub i32 %409, -452128237
  %412 = add i32 %411, %406
  %413 = add i32 %412, -452128237
  %414 = add i32 %409, %406
  %415 = add i32 %405, 1532317388
  %416 = sub i32 %415, %406
  %417 = sub i32 %416, 1532317388
  %418 = sub i32 %405, %406
  %419 = mul i32 %417, %406
  %420 = shl i32 %405, %406
  %421 = sub i32 %405, 1017622974
  %422 = sub i32 %421, %406
  %423 = add i32 %422, 1017622974
  %424 = sub i32 %405, %406
  %425 = mul i32 %423, %406
  %426 = add i32 %405, 16636998
  %427 = sub i32 %426, %406
  %428 = sub i32 %427, 16636998
  %429 = sub i32 %405, %406
  %430 = mul i32 %428, %406
  %431 = shl i32 %405, %406
  %432 = add i32 %405, -655648746
  %433 = sub i32 %432, %406
  %434 = sub i32 %433, -655648746
  %435 = sub i32 %405, %406
  %436 = mul i32 %434, %406
  %437 = shl i32 %405, %406
  %438 = sub i32 0, %406
  %439 = add i32 %405, %438
  %440 = sub nsw i32 %405, %406
  %441 = load i32, i32* @n, align 4
  %442 = sub i32 0, %441
  %443 = add i32 %439, %442
  %444 = sub i32 %439, %441
  %445 = mul i32 %443, %441
  %446 = sub i32 0, %439
  %447 = sub i32 0, %441
  %448 = add i32 %446, %447
  %449 = sub i32 0, %448
  %450 = add nsw i32 %439, %441
  %451 = sub i32 0, 1329515145
  %452 = sub i32 %451, %449
  %453 = add i32 %452, 1329515145
  %454 = sub i32 0, %449
  %455 = sub i32 %453, 1427970195
  %456 = add i32 %455, 2
  %457 = add i32 %456, 1427970195
  %458 = add i32 %453, 2
  %459 = shl i32 %449, 2
  %460 = shl i32 %449, 2
  %461 = shl i32 %449, 2
  %462 = sub i32 0, 592136670
  %463 = sub i32 %462, %449
  %464 = add i32 %463, 592136670
  %465 = sub i32 0, %449
  %466 = add i32 %464, 1115485923
  %467 = add i32 %466, 2
  %468 = sub i32 %467, 1115485923
  %469 = add i32 %464, 2
  %470 = sub i32 %449, -187848610
  %471 = sub i32 %470, 2
  %472 = add i32 %471, -187848610
  %473 = sub nsw i32 %449, 2
  %474 = load i32, i32* @n, align 4
  %475 = add i32 %474, 2047613929
  %476 = sub i32 %475, 1
  %477 = sub i32 %476, 2047613929
  %478 = sub i32 %474, 1
  %479 = mul i32 %477, 1
  %480 = shl i32 %474, 1
  %481 = add i32 0, -166213387
  %482 = sub i32 %481, %474
  %483 = sub i32 %482, -166213387
  %484 = sub i32 0, %474
  %485 = sub i32 %483, -498069789
  %486 = add i32 %485, 1
  %487 = add i32 %486, -498069789
  %488 = add i32 %483, 1
  %489 = sub i32 %474, -400403611
  %490 = sub i32 %489, 1
  %491 = add i32 %490, -400403611
  %492 = sub nsw i32 %474, 1
  %493 = call i32 @_Z1Cii(i32 %472, i32 %491)
  %494 = sext i32 %493 to i64
  %495 = sub i64 0, 1
  %496 = add i64 0, %495
  %497 = sub i64 0, 1
  %498 = add i64 %496, -6835070214453956436
  %499 = add i64 %498, %494
  %500 = sub i64 %499, -6835070214453956436
  %501 = add i64 %496, %494
  %502 = shl i64 1, %494
  %503 = mul nsw i64 1, %494
  %504 = load i32, i32* @n, align 4
  %505 = load i32, i32* @m, align 4
  %506 = add i32 3, -1092835164
  %507 = sub i32 %506, %505
  %508 = sub i32 %507, -1092835164
  %509 = sub i32 3, %505
  %510 = mul i32 %508, %505
  %511 = shl i32 3, %505
  %512 = shl i32 3, %505
  %513 = mul nsw i32 3, %505
  %514 = load i32, i32* @i, align 4
  %515 = add i32 2, 738118681
  %516 = sub i32 %515, %514
  %517 = sub i32 %516, 738118681
  %518 = sub i32 2, %514
  %519 = mul i32 %517, %514
  %520 = shl i32 2, %514
  %521 = shl i32 2, %514
  %522 = sub i32 0, %514
  %523 = add i32 2, %522
  %524 = sub i32 2, %514
  %525 = mul i32 %523, %514
  %526 = shl i32 2, %514
  %527 = shl i32 2, %514
  %528 = mul nsw i32 2, %514
  %529 = sub i32 0, -1073040857
  %530 = sub i32 %529, %513
  %531 = add i32 %530, -1073040857
  %532 = sub i32 0, %513
  %533 = add i32 %531, 1265995813
  %534 = add i32 %533, %528
  %535 = sub i32 %534, 1265995813
  %536 = add i32 %531, %528
  %537 = shl i32 %513, %528
  %538 = sub i32 %513, -176002129
  %539 = sub i32 %538, %528
  %540 = add i32 %539, -176002129
  %541 = sub i32 %513, %528
  %542 = mul i32 %540, %528
  %543 = sub i32 0, 452361736
  %544 = sub i32 %543, %513
  %545 = add i32 %544, 452361736
  %546 = sub i32 0, %513
  %547 = sub i32 %545, -1921352733
  %548 = add i32 %547, %528
  %549 = add i32 %548, -1921352733
  %550 = add i32 %545, %528
  %551 = sub i32 0, %513
  %552 = add i32 0, %551
  %553 = sub i32 0, %513
  %554 = sub i32 0, %528
  %555 = sub i32 %552, %554
  %556 = add i32 %552, %528
  %557 = sub i32 %513, 1296152346
  %558 = sub i32 %557, %528
  %559 = add i32 %558, 1296152346
  %560 = sub i32 %513, %528
  %561 = mul i32 %559, %528
  %562 = sub i32 %513, 967849365
  %563 = sub i32 %562, %528
  %564 = add i32 %563, 967849365
  %565 = sub nsw i32 %513, %528
  %566 = call i32 @_Z1Cii(i32 %504, i32 %564)
  %567 = sext i32 %566 to i64
  %568 = add i64 %503, -3569869798422065569
  %569 = sub i64 %568, %567
  %570 = sub i64 %569, -3569869798422065569
  %571 = sub i64 %503, %567
  %572 = mul i64 %570, %567
  %573 = sub i64 0, %567
  %574 = add i64 %503, %573
  %575 = sub i64 %503, %567
  %576 = mul i64 %574, %567
  %577 = mul nsw i64 %503, %567
  %578 = sub i64 0, 998244353
  %579 = add i64 %577, %578
  %580 = sub i64 %577, 998244353
  %581 = mul i64 %579, 998244353
  %582 = srem i64 %577, 998244353
  %583 = load i32, i32* @n, align 4
  %584 = sext i32 %583 to i64
  %585 = shl i64 %582, %584
  %586 = shl i64 %582, %584
  %587 = sub i64 %582, -2336854615554906007
  %588 = sub i64 %587, %584
  %589 = add i64 %588, -2336854615554906007
  %590 = sub i64 %582, %584
  %591 = mul i64 %589, %584
  %592 = shl i64 %582, %584
  %593 = sub i64 0, -7948479789776961976
  %594 = sub i64 %593, %582
  %595 = add i64 %594, -7948479789776961976
  %596 = sub i64 0, %582
  %597 = sub i64 0, %584
  %598 = sub i64 %595, %597
  %599 = add i64 %595, %584
  %600 = mul nsw i64 %582, %584
  %601 = sub i64 0, 998244353
  %602 = add i64 %600, %601
  %603 = sub i64 %600, 998244353
  %604 = mul i64 %602, 998244353
  %605 = sub i64 0, %600
  %606 = add i64 0, %605
  %607 = sub i64 0, %600
  %608 = sub i64 %606, -2519650938447135217
  %609 = add i64 %608, 998244353
  %610 = add i64 %609, -2519650938447135217
  %611 = add i64 %606, 998244353
  %612 = add i64 0, 7828694237599745225
  %613 = sub i64 %612, %600
  %614 = sub i64 %613, 7828694237599745225
  %615 = sub i64 0, %600
  %616 = sub i64 0, 998244353
  %617 = sub i64 %614, %616
  %618 = add i64 %614, 998244353
  %619 = shl i64 %600, 998244353
  %620 = sub i64 0, 2068832628227538494
  %621 = sub i64 %620, %600
  %622 = add i64 %621, 2068832628227538494
  %623 = sub i64 0, %600
  %624 = sub i64 %622, 2826419100594532040
  %625 = add i64 %624, 998244353
  %626 = add i64 %625, 2826419100594532040
  %627 = add i64 %622, 998244353
  %628 = add i64 %600, -7110728381084027710
  %629 = sub i64 %628, 998244353
  %630 = sub i64 %629, -7110728381084027710
  %631 = sub i64 %600, 998244353
  %632 = mul i64 %630, 998244353
  %633 = sub i64 0, 998244353
  %634 = add i64 %600, %633
  %635 = sub i64 %600, 998244353
  %636 = mul i64 %634, 998244353
  %637 = srem i64 %600, 998244353
  %638 = shl i64 %404, %637
  %639 = shl i64 %404, %637
  %640 = shl i64 %404, %637
  %641 = add i64 0, -2378634299763249413
  %642 = sub i64 %641, %404
  %643 = sub i64 %642, -2378634299763249413
  %644 = sub i64 0, %404
  %645 = sub i64 0, %643
  %646 = sub i64 0, %637
  %647 = add i64 %645, %646
  %648 = sub i64 0, %647
  %649 = add i64 %643, %637
  %650 = shl i64 %404, %637
  %651 = add i64 0, 3642832172872070460
  %652 = sub i64 %651, %404
  %653 = sub i64 %652, 3642832172872070460
  %654 = sub i64 0, %404
  %655 = add i64 %653, 2923844244100808298
  %656 = add i64 %655, %637
  %657 = sub i64 %656, 2923844244100808298
  %658 = add i64 %653, %637
  %659 = sub i64 0, %637
  %660 = add i64 %404, %659
  %661 = sub nsw i64 %404, %637
  %662 = shl i64 %660, 998244353
  %663 = sub i64 0, 998244353
  %664 = sub i64 %660, %663
  %665 = add nsw i64 %660, 998244353
  %666 = sub i64 0, %664
  %667 = add i64 0, %666
  %668 = sub i64 0, %664
  %669 = sub i64 0, %667
  %670 = sub i64 0, 998244353
  %671 = add i64 %669, %670
  %672 = sub i64 0, %671
  %673 = add i64 %667, 998244353
  %674 = srem i64 %664, 998244353
  %675 = trunc i64 %674 to i32
  store i32 %675, i32* @s, align 4
  store i32 -1002578704, i32* %4
  br label %1058

; <label>:676:                                    ; preds = %5
  %677 = load i32, i32* @m, align 4
  store i32 %677, i32* @i, align 4
  store i32 1617454427, i32* %4
  br label %1058

; <label>:678:                                    ; preds = %5
  %679 = load i32, i32* @s, align 4
  %680 = sext i32 %679 to i64
  %681 = load i32, i32* @i, align 4
  %682 = load i32, i32* @m, align 4
  %683 = shl i32 %681, %682
  %684 = sub i32 %681, 1791408222
  %685 = sub i32 %684, %682
  %686 = add i32 %685, 1791408222
  %687 = sub i32 %681, %682
  %688 = mul i32 %686, %682
  %689 = shl i32 %681, %682
  %690 = sub i32 0, %681
  %691 = add i32 0, %690
  %692 = sub i32 0, %681
  %693 = sub i32 0, %682
  %694 = sub i32 %691, %693
  %695 = add i32 %691, %682
  %696 = sub i32 %681, -218621478
  %697 = sub i32 %696, %682
  %698 = add i32 %697, -218621478
  %699 = sub i32 %681, %682
  %700 = mul i32 %698, %682
  %701 = sub i32 0, %682
  %702 = add i32 %681, %701
  %703 = sub i32 %681, %682
  %704 = mul i32 %702, %682
  %705 = sub i32 0, %682
  %706 = add i32 %681, %705
  %707 = sub i32 %681, %682
  %708 = mul i32 %706, %682
  %709 = sub i32 0, %682
  %710 = add i32 %681, %709
  %711 = sub nsw i32 %681, %682
  %712 = load i32, i32* @n, align 4
  %713 = sub i32 0, %710
  %714 = add i32 0, %713
  %715 = sub i32 0, %710
  %716 = add i32 %714, -374616575
  %717 = add i32 %716, %712
  %718 = sub i32 %717, -374616575
  %719 = add i32 %714, %712
  %720 = sub i32 0, %710
  %721 = add i32 0, %720
  %722 = sub i32 0, %710
  %723 = sub i32 %721, -841328920
  %724 = add i32 %723, %712
  %725 = add i32 %724, -841328920
  %726 = add i32 %721, %712
  %727 = add i32 %710, 455257325
  %728 = add i32 %727, %712
  %729 = sub i32 %728, 455257325
  %730 = add nsw i32 %710, %712
  %731 = sub i32 0, 2
  %732 = add i32 %729, %731
  %733 = sub i32 %729, 2
  %734 = mul i32 %732, 2
  %735 = shl i32 %729, 2
  %736 = sub i32 0, 2
  %737 = add i32 %729, %736
  %738 = sub i32 %729, 2
  %739 = mul i32 %737, 2
  %740 = add i32 %729, -2008423017
  %741 = sub i32 %740, 2
  %742 = sub i32 %741, -2008423017
  %743 = sub i32 %729, 2
  %744 = mul i32 %742, 2
  %745 = add i32 %729, -282100214
  %746 = sub i32 %745, 2
  %747 = sub i32 %746, -282100214
  %748 = sub nsw i32 %729, 2
  %749 = load i32, i32* @n, align 4
  %750 = sub i32 0, 2
  %751 = add i32 %749, %750
  %752 = sub nsw i32 %749, 2
  %753 = call i32 @_Z1Cii(i32 %747, i32 %751)
  %754 = sext i32 %753 to i64
  %755 = sub i64 1, 5376546781004630170
  %756 = sub i64 %755, %754
  %757 = add i64 %756, 5376546781004630170
  %758 = sub i64 1, %754
  %759 = mul i64 %757, %754
  %760 = add i64 1, 1427969148560002695
  %761 = sub i64 %760, %754
  %762 = sub i64 %761, 1427969148560002695
  %763 = sub i64 1, %754
  %764 = mul i64 %762, %754
  %765 = shl i64 1, %754
  %766 = sub i64 1, -6589602794375352501
  %767 = sub i64 %766, %754
  %768 = add i64 %767, -6589602794375352501
  %769 = sub i64 1, %754
  %770 = mul i64 %768, %754
  %771 = shl i64 1, %754
  %772 = shl i64 1, %754
  %773 = mul nsw i64 1, %754
  %774 = load i32, i32* @n, align 4
  %775 = add i32 %774, 1843061752
  %776 = sub i32 %775, 1
  %777 = sub i32 %776, 1843061752
  %778 = sub i32 %774, 1
  %779 = mul i32 %777, 1
  %780 = sub i32 0, 1
  %781 = add i32 %774, %780
  %782 = sub nsw i32 %774, 1
  %783 = load i32, i32* @m, align 4
  %784 = shl i32 3, %783
  %785 = add i32 3, 1714945671
  %786 = sub i32 %785, %783
  %787 = sub i32 %786, 1714945671
  %788 = sub i32 3, %783
  %789 = mul i32 %787, %783
  %790 = sub i32 3, -2107303713
  %791 = sub i32 %790, %783
  %792 = add i32 %791, -2107303713
  %793 = sub i32 3, %783
  %794 = mul i32 %792, %783
  %795 = mul nsw i32 3, %783
  %796 = load i32, i32* @i, align 4
  %797 = add i32 0, -122803349
  %798 = sub i32 %797, 2
  %799 = sub i32 %798, -122803349
  %800 = sub i32 0, 2
  %801 = sub i32 0, %796
  %802 = sub i32 %799, %801
  %803 = add i32 %799, %796
  %804 = sub i32 0, %796
  %805 = add i32 2, %804
  %806 = sub i32 2, %796
  %807 = mul i32 %805, %796
  %808 = sub i32 0, 2
  %809 = add i32 0, %808
  %810 = sub i32 0, 2
  %811 = sub i32 0, %796
  %812 = sub i32 %809, %811
  %813 = add i32 %809, %796
  %814 = shl i32 2, %796
  %815 = sub i32 0, 2
  %816 = add i32 0, %815
  %817 = sub i32 0, 2
  %818 = sub i32 %816, 677083144
  %819 = add i32 %818, %796
  %820 = add i32 %819, 677083144
  %821 = add i32 %816, %796
  %822 = shl i32 2, %796
  %823 = mul nsw i32 2, %796
  %824 = sub i32 0, %823
  %825 = add i32 %795, %824
  %826 = sub i32 %795, %823
  %827 = mul i32 %825, %823
  %828 = shl i32 %795, %823
  %829 = add i32 %795, 2009110164
  %830 = sub i32 %829, %823
  %831 = sub i32 %830, 2009110164
  %832 = sub i32 %795, %823
  %833 = mul i32 %831, %823
  %834 = sub i32 0, %795
  %835 = add i32 0, %834
  %836 = sub i32 0, %795
  %837 = sub i32 0, %835
  %838 = sub i32 0, %823
  %839 = add i32 %837, %838
  %840 = sub i32 0, %839
  %841 = add i32 %835, %823
  %842 = add i32 %795, 213510870
  %843 = sub i32 %842, %823
  %844 = sub i32 %843, 213510870
  %845 = sub nsw i32 %795, %823
  %846 = shl i32 %844, 1
  %847 = shl i32 %844, 1
  %848 = sub i32 0, %844
  %849 = add i32 0, %848
  %850 = sub i32 0, %844
  %851 = sub i32 0, 1
  %852 = sub i32 %849, %851
  %853 = add i32 %849, 1
  %854 = sub i32 0, 1
  %855 = add i32 %844, %854
  %856 = sub i32 %844, 1
  %857 = mul i32 %855, 1
  %858 = sub i32 0, 1
  %859 = add i32 %844, %858
  %860 = sub i32 %844, 1
  %861 = mul i32 %859, 1
  %862 = sub i32 %844, -1863536522
  %863 = sub i32 %862, 1
  %864 = add i32 %863, -1863536522
  %865 = sub i32 %844, 1
  %866 = mul i32 %864, 1
  %867 = add i32 %844, 24676321
  %868 = sub i32 %867, 1
  %869 = sub i32 %868, 24676321
  %870 = sub i32 %844, 1
  %871 = mul i32 %869, 1
  %872 = add i32 %844, -630223191
  %873 = sub i32 %872, 1
  %874 = sub i32 %873, -630223191
  %875 = sub nsw i32 %844, 1
  %876 = call i32 @_Z1Cii(i32 %781, i32 %874)
  %877 = sext i32 %876 to i64
  %878 = sub i64 0, %877
  %879 = add i64 %773, %878
  %880 = sub i64 %773, %877
  %881 = mul i64 %879, %877
  %882 = sub i64 0, 935436037887527430
  %883 = sub i64 %882, %773
  %884 = add i64 %883, 935436037887527430
  %885 = sub i64 0, %773
  %886 = add i64 %884, 7162923569620008482
  %887 = add i64 %886, %877
  %888 = sub i64 %887, 7162923569620008482
  %889 = add i64 %884, %877
  %890 = mul nsw i64 %773, %877
  %891 = sub i64 %890, -8329512017853194583
  %892 = sub i64 %891, 998244353
  %893 = add i64 %892, -8329512017853194583
  %894 = sub i64 %890, 998244353
  %895 = mul i64 %893, 998244353
  %896 = sub i64 0, %890
  %897 = add i64 0, %896
  %898 = sub i64 0, %890
  %899 = sub i64 0, 998244353
  %900 = sub i64 %897, %899
  %901 = add i64 %897, 998244353
  %902 = shl i64 %890, 998244353
  %903 = srem i64 %890, 998244353
  %904 = load i32, i32* @n, align 4
  %905 = sext i32 %904 to i64
  %906 = mul nsw i64 %903, %905
  %907 = sub i64 0, -3367347191214538731
  %908 = sub i64 %907, %906
  %909 = add i64 %908, -3367347191214538731
  %910 = sub i64 0, %906
  %911 = sub i64 %909, 1977188179164176920
  %912 = add i64 %911, 998244353
  %913 = add i64 %912, 1977188179164176920
  %914 = add i64 %909, 998244353
  %915 = shl i64 %906, 998244353
  %916 = add i64 %906, -6525731948648245120
  %917 = sub i64 %916, 998244353
  %918 = sub i64 %917, -6525731948648245120
  %919 = sub i64 %906, 998244353
  %920 = mul i64 %918, 998244353
  %921 = sub i64 0, 998244353
  %922 = add i64 %906, %921
  %923 = sub i64 %906, 998244353
  %924 = mul i64 %922, 998244353
  %925 = add i64 %906, 7046426961231046811
  %926 = sub i64 %925, 998244353
  %927 = sub i64 %926, 7046426961231046811
  %928 = sub i64 %906, 998244353
  %929 = mul i64 %927, 998244353
  %930 = sub i64 0, %906
  %931 = add i64 0, %930
  %932 = sub i64 0, %906
  %933 = add i64 %931, -2485803654654315346
  %934 = add i64 %933, 998244353
  %935 = sub i64 %934, -2485803654654315346
  %936 = add i64 %931, 998244353
  %937 = add i64 %906, 7521380269004116809
  %938 = sub i64 %937, 998244353
  %939 = sub i64 %938, 7521380269004116809
  %940 = sub i64 %906, 998244353
  %941 = mul i64 %939, 998244353
  %942 = sub i64 0, %906
  %943 = add i64 0, %942
  %944 = sub i64 0, %906
  %945 = sub i64 0, 998244353
  %946 = sub i64 %943, %945
  %947 = add i64 %943, 998244353
  %948 = srem i64 %906, 998244353
  %949 = shl i64 %680, %948
  %950 = shl i64 %680, %948
  %951 = add i64 0, -4881073782713068604
  %952 = sub i64 %951, %680
  %953 = sub i64 %952, -4881073782713068604
  %954 = sub i64 0, %680
  %955 = add i64 %953, -5816564308459153474
  %956 = add i64 %955, %948
  %957 = sub i64 %956, -5816564308459153474
  %958 = add i64 %953, %948
  %959 = sub i64 %680, -7138786273265294227
  %960 = sub i64 %959, %948
  %961 = add i64 %960, -7138786273265294227
  %962 = sub i64 %680, %948
  %963 = mul i64 %961, %948
  %964 = sub i64 0, %680
  %965 = add i64 0, %964
  %966 = sub i64 0, %680
  %967 = sub i64 0, %965
  %968 = sub i64 0, %948
  %969 = add i64 %967, %968
  %970 = sub i64 0, %969
  %971 = add i64 %965, %948
  %972 = sub i64 0, -7905060035548565751
  %973 = sub i64 %972, %680
  %974 = add i64 %973, -7905060035548565751
  %975 = sub i64 0, %680
  %976 = sub i64 %974, 7698212841025507558
  %977 = add i64 %976, %948
  %978 = add i64 %977, 7698212841025507558
  %979 = add i64 %974, %948
  %980 = sub i64 0, %948
  %981 = add i64 %680, %980
  %982 = sub nsw i64 %680, %948
  %983 = sub i64 0, %981
  %984 = add i64 0, %983
  %985 = sub i64 0, %981
  %986 = sub i64 %984, 5198272456245956989
  %987 = add i64 %986, 998244353
  %988 = add i64 %987, 5198272456245956989
  %989 = add i64 %984, 998244353
  %990 = shl i64 %981, 998244353
  %991 = sub i64 0, 998244353
  %992 = add i64 %981, %991
  %993 = sub i64 %981, 998244353
  %994 = mul i64 %992, 998244353
  %995 = sub i64 0, 998244353
  %996 = add i64 %981, %995
  %997 = sub i64 %981, 998244353
  %998 = mul i64 %996, 998244353
  %999 = shl i64 %981, 998244353
  %1000 = shl i64 %981, 998244353
  %1001 = add i64 %981, -282257169353427124
  %1002 = sub i64 %1001, 998244353
  %1003 = sub i64 %1002, -282257169353427124
  %1004 = sub i64 %981, 998244353
  %1005 = mul i64 %1003, 998244353
  %1006 = add i64 %981, -5105266998411394888
  %1007 = add i64 %1006, 998244353
  %1008 = sub i64 %1007, -5105266998411394888
  %1009 = add nsw i64 %981, 998244353
  %1010 = shl i64 %1008, 998244353
  %1011 = shl i64 %1008, 998244353
  %1012 = sub i64 0, 998244353
  %1013 = add i64 %1008, %1012
  %1014 = sub i64 %1008, 998244353
  %1015 = mul i64 %1013, 998244353
  %1016 = add i64 0, -2509613886549156291
  %1017 = sub i64 %1016, %1008
  %1018 = sub i64 %1017, -2509613886549156291
  %1019 = sub i64 0, %1008
  %1020 = sub i64 0, 998244353
  %1021 = sub i64 %1018, %1020
  %1022 = add i64 %1018, 998244353
  %1023 = sub i64 0, 1313921478371069792
  %1024 = sub i64 %1023, %1008
  %1025 = add i64 %1024, 1313921478371069792
  %1026 = sub i64 0, %1008
  %1027 = sub i64 0, %1025
  %1028 = sub i64 0, 998244353
  %1029 = add i64 %1027, %1028
  %1030 = sub i64 0, %1029
  %1031 = add i64 %1025, 998244353
  %1032 = srem i64 %1008, 998244353
  %1033 = trunc i64 %1032 to i32
  store i32 %1033, i32* @s, align 4
  store i32 2063417503, i32* %4
  br label %1058

; <label>:1034:                                   ; preds = %5
  %1035 = load i32, i32* @i, align 4
  %1036 = add i32 0, 1021787197
  %1037 = sub i32 %1036, %1035
  %1038 = sub i32 %1037, 1021787197
  %1039 = sub i32 0, %1035
  %1040 = sub i32 0, %1038
  %1041 = sub i32 0, 1
  %1042 = add i32 %1040, %1041
  %1043 = sub i32 0, %1042
  %1044 = add i32 %1038, 1
  %1045 = sub i32 0, 1224264195
  %1046 = sub i32 %1045, %1035
  %1047 = add i32 %1046, 1224264195
  %1048 = sub i32 0, %1035
  %1049 = sub i32 0, 1
  %1050 = sub i32 %1047, %1049
  %1051 = add i32 %1047, 1
  %1052 = shl i32 %1035, 1
  %1053 = shl i32 %1035, 1
  %1054 = shl i32 %1035, 1
  %1055 = sub i32 0, 1
  %1056 = sub i32 %1035, %1055
  %1057 = add nsw i32 %1035, 1
  store i32 %1056, i32* @i, align 4
  store i32 -2146899952, i32* %4
  br label %1058

; <label>:1058:                                   ; preds = %1034, %678, %676, %402, %398, %376, %361, %360, %273, %245, %233, %232, %215, %199, %193, %192, %112, %84, %72, %66, %60, %20, %8, %7
  br label %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z5pre_Cv() #1 comdat {
  %1 = alloca i1
  %2 = alloca i32*
  %3 = alloca i32*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.2
  %7 = load i32, i32* @y.3
  %8 = sub i32 %6, -586103964
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -586103964
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1203870023, i32* %16
  br label %17

; <label>:17:                                     ; preds = %0, %506
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1203870023, label %20
    i32 1111645959, label %40
    i32 -629694132, label %58
    i32 -225753103, label %59
    i32 1243162810, label %64
    i32 1276263697, label %92
    i32 1202710423, label %128
    i32 -1945219127, label %129
    i32 -187054141, label %157
    i32 1023101456, label %192
    i32 -782707172, label %193
    i32 952040602, label %197
    i32 980981785, label %212
    i32 -993390721, label %230
    i32 973529679, label %233
    i32 -1567564447, label %257
    i32 2021293469, label %285
    i32 1544632239, label %307
    i32 -995857030, label %308
    i32 -1446806097, label %309
    i32 -1275355923, label %312
    i32 461809739, label %442
    i32 712325007, label %484
    i32 -697702437, label %488
  ]

; <label>:19:                                     ; preds = %17
  br label %506

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1111645959, i32 -1446806097
  store i32 %39, i32* %16
  br label %506

; <label>:40:                                     ; preds = %17
  %41 = alloca i32, align 4
  store i32* %41, i32** %3
  %42 = alloca i32, align 4
  store i32* %42, i32** %2
  store i32 1, i32* getelementptr inbounds ([5000000 x i32], [5000000 x i32]* @fac, i64 0, i64 0), align 16
  %43 = load volatile i32*, i32** %3
  store i32 1, i32* %43, align 4
  %44 = load i32, i32* @x.2
  %45 = load i32, i32* @y.3
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -629694132, i32 -1446806097
  store i32 %57, i32* %16
  br label %506

; <label>:58:                                     ; preds = %17
  store i32 -225753103, i32* %16
  br label %506

; <label>:59:                                     ; preds = %17
  %60 = load volatile i32*, i32** %3
  %61 = load i32, i32* %60, align 4
  %62 = icmp sle i32 %61, 3000000
  %63 = select i1 %62, i32 1243162810, i32 -782707172
  store i32 %63, i32* %16
  br label %506

; <label>:64:                                     ; preds = %17
  %65 = load i32, i32* @x.2
  %66 = load i32, i32* @y.3
  %67 = sub i32 %65, -1543816060
  %68 = sub i32 %67, 1
  %69 = add i32 %68, -1543816060
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = xor i1 %73, true
  %76 = xor i1 %74, true
  %77 = xor i1 true, true
  %78 = and i1 %75, true
  %79 = and i1 %73, %77
  %80 = and i1 %76, true
  %81 = and i1 %74, %77
  %82 = or i1 %78, %79
  %83 = or i1 %80, %81
  %84 = xor i1 %82, %83
  %85 = or i1 %75, %76
  %86 = xor i1 %85, true
  %87 = or i1 true, %77
  %88 = and i1 %86, %87
  %89 = or i1 %84, %88
  %90 = or i1 %73, %74
  %91 = select i1 %89, i32 1276263697, i32 -1275355923
  store i32 %91, i32* %16
  br label %506

; <label>:92:                                     ; preds = %17
  %93 = load volatile i32*, i32** %3
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %94, 1278939881
  %96 = sub i32 %95, 1
  %97 = sub i32 %96, 1278939881
  %98 = sub nsw i32 %94, 1
  %99 = sext i32 %97 to i64
  %100 = getelementptr inbounds [5000000 x i32], [5000000 x i32]* @fac, i64 0, i64 %99
  %101 = load i32, i32* %100, align 4
  %102 = sext i32 %101 to i64
  %103 = mul nsw i64 1, %102
  %104 = load volatile i32*, i32** %3
  %105 = load i32, i32* %104, align 4
  %106 = sext i32 %105 to i64
  %107 = mul nsw i64 %103, %106
  %108 = srem i64 %107, 998244353
  %109 = trunc i64 %108 to i32
  %110 = load volatile i32*, i32** %3
  %111 = load i32, i32* %110, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds [5000000 x i32], [5000000 x i32]* @fac, i64 0, i64 %112
  store i32 %109, i32* %113, align 4
  %114 = load i32, i32* @x.2
  %115 = load i32, i32* @y.3
  %116 = sub i32 0, 1
  %117 = add i32 %114, %116
  %118 = sub i32 %114, 1
  %119 = mul i32 %114, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %115, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  %127 = select i1 %125, i32 1202710423, i32 -1275355923
  store i32 %127, i32* %16
  br label %506

; <label>:128:                                    ; preds = %17
  store i32 -1945219127, i32* %16
  br label %506

; <label>:129:                                    ; preds = %17
  %130 = load i32, i32* @x.2
  %131 = load i32, i32* @y.3
  %132 = add i32 %130, 517118312
  %133 = sub i32 %132, 1
  %134 = sub i32 %133, 517118312
  %135 = sub i32 %130, 1
  %136 = mul i32 %130, %134
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %131, 10
  %140 = xor i1 %138, true
  %141 = xor i1 %139, true
  %142 = xor i1 true, true
  %143 = and i1 %140, true
  %144 = and i1 %138, %142
  %145 = and i1 %141, true
  %146 = and i1 %139, %142
  %147 = or i1 %143, %144
  %148 = or i1 %145, %146
  %149 = xor i1 %147, %148
  %150 = or i1 %140, %141
  %151 = xor i1 %150, true
  %152 = or i1 true, %142
  %153 = and i1 %151, %152
  %154 = or i1 %149, %153
  %155 = or i1 %138, %139
  %156 = select i1 %154, i32 -187054141, i32 461809739
  store i32 %156, i32* %16
  br label %506

; <label>:157:                                    ; preds = %17
  %158 = load volatile i32*, i32** %3
  %159 = load i32, i32* %158, align 4
  %160 = sub i32 %159, 1965792277
  %161 = add i32 %160, 1
  %162 = add i32 %161, 1965792277
  %163 = add nsw i32 %159, 1
  %164 = load volatile i32*, i32** %3
  store i32 %162, i32* %164, align 4
  %165 = load i32, i32* @x.2
  %166 = load i32, i32* @y.3
  %167 = add i32 %165, 620589278
  %168 = sub i32 %167, 1
  %169 = sub i32 %168, 620589278
  %170 = sub i32 %165, 1
  %171 = mul i32 %165, %169
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %166, 10
  %175 = xor i1 %173, true
  %176 = xor i1 %174, true
  %177 = xor i1 true, true
  %178 = and i1 %175, true
  %179 = and i1 %173, %177
  %180 = and i1 %176, true
  %181 = and i1 %174, %177
  %182 = or i1 %178, %179
  %183 = or i1 %180, %181
  %184 = xor i1 %182, %183
  %185 = or i1 %175, %176
  %186 = xor i1 %185, true
  %187 = or i1 true, %177
  %188 = and i1 %186, %187
  %189 = or i1 %184, %188
  %190 = or i1 %173, %174
  %191 = select i1 %189, i32 1023101456, i32 461809739
  store i32 %191, i32* %16
  br label %506

; <label>:192:                                    ; preds = %17
  store i32 -225753103, i32* %16
  br label %506

; <label>:193:                                    ; preds = %17
  %194 = load i32, i32* getelementptr inbounds ([5000000 x i32], [5000000 x i32]* @fac, i64 0, i64 3000000), align 16
  %195 = call i32 @_Z5powerii(i32 %194, i32 998244351)
  store i32 %195, i32* getelementptr inbounds ([5000000 x i32], [5000000 x i32]* @inv, i64 0, i64 3000000), align 16
  %196 = load volatile i32*, i32** %2
  store i32 2999999, i32* %196, align 4
  store i32 952040602, i32* %16
  br label %506

; <label>:197:                                    ; preds = %17
  %198 = load i32, i32* @x.2
  %199 = load i32, i32* @y.3
  %200 = sub i32 0, 1
  %201 = add i32 %198, %200
  %202 = sub i32 %198, 1
  %203 = mul i32 %198, %201
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %199, 10
  %207 = and i1 %205, %206
  %208 = xor i1 %205, %206
  %209 = or i1 %207, %208
  %210 = or i1 %205, %206
  %211 = select i1 %209, i32 980981785, i32 712325007
  store i32 %211, i32* %16
  br label %506

; <label>:212:                                    ; preds = %17
  %213 = load volatile i32*, i32** %2
  %214 = load i32, i32* %213, align 4
  %215 = icmp sge i32 %214, 0
  store i1 %215, i1* %1
  %216 = load i32, i32* @x.2
  %217 = load i32, i32* @y.3
  %218 = sub i32 0, 1
  %219 = add i32 %216, %218
  %220 = sub i32 %216, 1
  %221 = mul i32 %216, %219
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %217, 10
  %225 = and i1 %223, %224
  %226 = xor i1 %223, %224
  %227 = or i1 %225, %226
  %228 = or i1 %223, %224
  %229 = select i1 %227, i32 -993390721, i32 712325007
  store i32 %229, i32* %16
  br label %506

; <label>:230:                                    ; preds = %17
  %231 = load volatile i1, i1* %1
  %232 = select i1 %231, i32 973529679, i32 -995857030
  store i32 %232, i32* %16
  br label %506

; <label>:233:                                    ; preds = %17
  %234 = load volatile i32*, i32** %2
  %235 = load i32, i32* %234, align 4
  %236 = sub i32 0, 1
  %237 = sub i32 %235, %236
  %238 = add nsw i32 %235, 1
  %239 = sext i32 %237 to i64
  %240 = getelementptr inbounds [5000000 x i32], [5000000 x i32]* @inv, i64 0, i64 %239
  %241 = load i32, i32* %240, align 4
  %242 = sext i32 %241 to i64
  %243 = mul nsw i64 1, %242
  %244 = load volatile i32*, i32** %2
  %245 = load i32, i32* %244, align 4
  %246 = sub i32 0, 1
  %247 = sub i32 %245, %246
  %248 = add nsw i32 %245, 1
  %249 = sext i32 %247 to i64
  %250 = mul nsw i64 %243, %249
  %251 = srem i64 %250, 998244353
  %252 = trunc i64 %251 to i32
  %253 = load volatile i32*, i32** %2
  %254 = load i32, i32* %253, align 4
  %255 = sext i32 %254 to i64
  %256 = getelementptr inbounds [5000000 x i32], [5000000 x i32]* @inv, i64 0, i64 %255
  store i32 %252, i32* %256, align 4
  store i32 -1567564447, i32* %16
  br label %506

; <label>:257:                                    ; preds = %17
  %258 = load i32, i32* @x.2
  %259 = load i32, i32* @y.3
  %260 = sub i32 %258, 95426019
  %261 = sub i32 %260, 1
  %262 = add i32 %261, 95426019
  %263 = sub i32 %258, 1
  %264 = mul i32 %258, %262
  %265 = urem i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %259, 10
  %268 = xor i1 %266, true
  %269 = xor i1 %267, true
  %270 = xor i1 false, true
  %271 = and i1 %268, false
  %272 = and i1 %266, %270
  %273 = and i1 %269, false
  %274 = and i1 %267, %270
  %275 = or i1 %271, %272
  %276 = or i1 %273, %274
  %277 = xor i1 %275, %276
  %278 = or i1 %268, %269
  %279 = xor i1 %278, true
  %280 = or i1 false, %270
  %281 = and i1 %279, %280
  %282 = or i1 %277, %281
  %283 = or i1 %266, %267
  %284 = select i1 %282, i32 2021293469, i32 -697702437
  store i32 %284, i32* %16
  br label %506

; <label>:285:                                    ; preds = %17
  %286 = load volatile i32*, i32** %2
  %287 = load i32, i32* %286, align 4
  %288 = sub i32 %287, -897543773
  %289 = add i32 %288, -1
  %290 = add i32 %289, -897543773
  %291 = add nsw i32 %287, -1
  %292 = load volatile i32*, i32** %2
  store i32 %290, i32* %292, align 4
  %293 = load i32, i32* @x.2
  %294 = load i32, i32* @y.3
  %295 = sub i32 0, 1
  %296 = add i32 %293, %295
  %297 = sub i32 %293, 1
  %298 = mul i32 %293, %296
  %299 = urem i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %294, 10
  %302 = and i1 %300, %301
  %303 = xor i1 %300, %301
  %304 = or i1 %302, %303
  %305 = or i1 %300, %301
  %306 = select i1 %304, i32 1544632239, i32 -697702437
  store i32 %306, i32* %16
  br label %506

; <label>:307:                                    ; preds = %17
  store i32 952040602, i32* %16
  br label %506

; <label>:308:                                    ; preds = %17
  ret void

; <label>:309:                                    ; preds = %17
  %310 = alloca i32, align 4
  %311 = alloca i32, align 4
  store i32 1, i32* getelementptr inbounds ([5000000 x i32], [5000000 x i32]* @fac, i64 0, i64 0), align 16
  store i32 1, i32* %310, align 4
  store i32 1111645959, i32* %16
  br label %506

; <label>:312:                                    ; preds = %17
  %313 = load volatile i32*, i32** %3
  %314 = load i32, i32* %313, align 4
  %315 = shl i32 %314, 1
  %316 = add i32 %314, 840406962
  %317 = sub i32 %316, 1
  %318 = sub i32 %317, 840406962
  %319 = sub i32 %314, 1
  %320 = mul i32 %318, 1
  %321 = shl i32 %314, 1
  %322 = sub i32 0, 1
  %323 = add i32 %314, %322
  %324 = sub i32 %314, 1
  %325 = mul i32 %323, 1
  %326 = sub i32 0, 1
  %327 = add i32 %314, %326
  %328 = sub i32 %314, 1
  %329 = mul i32 %327, 1
  %330 = add i32 %314, 2102256301
  %331 = sub i32 %330, 1
  %332 = sub i32 %331, 2102256301
  %333 = sub i32 %314, 1
  %334 = mul i32 %332, 1
  %335 = sub i32 0, %314
  %336 = add i32 0, %335
  %337 = sub i32 0, %314
  %338 = sub i32 0, %336
  %339 = sub i32 0, 1
  %340 = add i32 %338, %339
  %341 = sub i32 0, %340
  %342 = add i32 %336, 1
  %343 = sub i32 %314, 1612166761
  %344 = sub i32 %343, 1
  %345 = add i32 %344, 1612166761
  %346 = sub nsw i32 %314, 1
  %347 = sext i32 %345 to i64
  %348 = getelementptr inbounds [5000000 x i32], [5000000 x i32]* @fac, i64 0, i64 %347
  %349 = load i32, i32* %348, align 4
  %350 = sext i32 %349 to i64
  %351 = shl i64 1, %350
  %352 = sub i64 0, 1
  %353 = add i64 0, %352
  %354 = sub i64 0, 1
  %355 = sub i64 0, %350
  %356 = sub i64 %353, %355
  %357 = add i64 %353, %350
  %358 = sub i64 0, %350
  %359 = add i64 1, %358
  %360 = sub i64 1, %350
  %361 = mul i64 %359, %350
  %362 = sub i64 0, 250832111740481582
  %363 = sub i64 %362, 1
  %364 = add i64 %363, 250832111740481582
  %365 = sub i64 0, 1
  %366 = sub i64 0, %364
  %367 = sub i64 0, %350
  %368 = add i64 %366, %367
  %369 = sub i64 0, %368
  %370 = add i64 %364, %350
  %371 = add i64 0, 8186897104398348404
  %372 = sub i64 %371, 1
  %373 = sub i64 %372, 8186897104398348404
  %374 = sub i64 0, 1
  %375 = add i64 %373, -4530069049406555496
  %376 = add i64 %375, %350
  %377 = sub i64 %376, -4530069049406555496
  %378 = add i64 %373, %350
  %379 = add i64 0, -7807161280725715463
  %380 = sub i64 %379, 1
  %381 = sub i64 %380, -7807161280725715463
  %382 = sub i64 0, 1
  %383 = add i64 %381, 3090170120113182712
  %384 = add i64 %383, %350
  %385 = sub i64 %384, 3090170120113182712
  %386 = add i64 %381, %350
  %387 = shl i64 1, %350
  %388 = shl i64 1, %350
  %389 = mul nsw i64 1, %350
  %390 = load volatile i32*, i32** %3
  %391 = load i32, i32* %390, align 4
  %392 = sext i32 %391 to i64
  %393 = sub i64 0, -4428711210065642539
  %394 = sub i64 %393, %389
  %395 = add i64 %394, -4428711210065642539
  %396 = sub i64 0, %389
  %397 = sub i64 %395, -6487113093446317642
  %398 = add i64 %397, %392
  %399 = add i64 %398, -6487113093446317642
  %400 = add i64 %395, %392
  %401 = shl i64 %389, %392
  %402 = sub i64 0, -9203101900963857614
  %403 = sub i64 %402, %389
  %404 = add i64 %403, -9203101900963857614
  %405 = sub i64 0, %389
  %406 = sub i64 0, %404
  %407 = sub i64 0, %392
  %408 = add i64 %406, %407
  %409 = sub i64 0, %408
  %410 = add i64 %404, %392
  %411 = mul nsw i64 %389, %392
  %412 = shl i64 %411, 998244353
  %413 = shl i64 %411, 998244353
  %414 = shl i64 %411, 998244353
  %415 = sub i64 0, %411
  %416 = add i64 0, %415
  %417 = sub i64 0, %411
  %418 = sub i64 0, 998244353
  %419 = sub i64 %416, %418
  %420 = add i64 %416, 998244353
  %421 = sub i64 0, 8807752084333745818
  %422 = sub i64 %421, %411
  %423 = add i64 %422, 8807752084333745818
  %424 = sub i64 0, %411
  %425 = add i64 %423, -523021777439801590
  %426 = add i64 %425, 998244353
  %427 = sub i64 %426, -523021777439801590
  %428 = add i64 %423, 998244353
  %429 = sub i64 0, %411
  %430 = add i64 0, %429
  %431 = sub i64 0, %411
  %432 = add i64 %430, -1684357013719917156
  %433 = add i64 %432, 998244353
  %434 = sub i64 %433, -1684357013719917156
  %435 = add i64 %430, 998244353
  %436 = srem i64 %411, 998244353
  %437 = trunc i64 %436 to i32
  %438 = load volatile i32*, i32** %3
  %439 = load i32, i32* %438, align 4
  %440 = sext i32 %439 to i64
  %441 = getelementptr inbounds [5000000 x i32], [5000000 x i32]* @fac, i64 0, i64 %440
  store i32 %437, i32* %441, align 4
  store i32 1276263697, i32* %16
  br label %506

; <label>:442:                                    ; preds = %17
  %443 = load volatile i32*, i32** %3
  %444 = load i32, i32* %443, align 4
  %445 = sub i32 0, 1
  %446 = add i32 %444, %445
  %447 = sub i32 %444, 1
  %448 = mul i32 %446, 1
  %449 = add i32 %444, -1946714491
  %450 = sub i32 %449, 1
  %451 = sub i32 %450, -1946714491
  %452 = sub i32 %444, 1
  %453 = mul i32 %451, 1
  %454 = sub i32 %444, 230365366
  %455 = sub i32 %454, 1
  %456 = add i32 %455, 230365366
  %457 = sub i32 %444, 1
  %458 = mul i32 %456, 1
  %459 = add i32 %444, 1234569899
  %460 = sub i32 %459, 1
  %461 = sub i32 %460, 1234569899
  %462 = sub i32 %444, 1
  %463 = mul i32 %461, 1
  %464 = sub i32 0, %444
  %465 = add i32 0, %464
  %466 = sub i32 0, %444
  %467 = sub i32 0, 1
  %468 = sub i32 %465, %467
  %469 = add i32 %465, 1
  %470 = sub i32 0, %444
  %471 = add i32 0, %470
  %472 = sub i32 0, %444
  %473 = sub i32 0, %471
  %474 = sub i32 0, 1
  %475 = add i32 %473, %474
  %476 = sub i32 0, %475
  %477 = add i32 %471, 1
  %478 = shl i32 %444, 1
  %479 = add i32 %444, -1700567407
  %480 = add i32 %479, 1
  %481 = sub i32 %480, -1700567407
  %482 = add nsw i32 %444, 1
  %483 = load volatile i32*, i32** %3
  store i32 %481, i32* %483, align 4
  store i32 -187054141, i32* %16
  br label %506

; <label>:484:                                    ; preds = %17
  %485 = load volatile i32*, i32** %2
  %486 = load i32, i32* %485, align 4
  %487 = icmp sge i32 %486, 0
  store i32 980981785, i32* %16
  br label %506

; <label>:488:                                    ; preds = %17
  %489 = load volatile i32*, i32** %2
  %490 = load i32, i32* %489, align 4
  %491 = sub i32 %490, -680131536
  %492 = sub i32 %491, -1
  %493 = add i32 %492, -680131536
  %494 = sub i32 %490, -1
  %495 = mul i32 %493, -1
  %496 = add i32 %490, -1946635267
  %497 = sub i32 %496, -1
  %498 = sub i32 %497, -1946635267
  %499 = sub i32 %490, -1
  %500 = mul i32 %498, -1
  %501 = sub i32 %490, 133109331
  %502 = add i32 %501, -1
  %503 = add i32 %502, 133109331
  %504 = add nsw i32 %490, -1
  %505 = load volatile i32*, i32** %2
  store i32 %503, i32* %505, align 4
  store i32 2021293469, i32* %16
  br label %506

; <label>:506:                                    ; preds = %488, %484, %442, %312, %309, %307, %285, %257, %233, %230, %212, %197, %193, %192, %157, %129, %128, %92, %64, %59, %58, %40, %20, %19
  br label %17
}

declare i32 @scanf(i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_Z1Cii(i32, i32) #3 comdat {
  %3 = alloca i32
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  store i32 %1, i32* %6, align 4
  %7 = load i32, i32* %6, align 4
  store i32 %7, i32* %3
  %8 = alloca i32
  store i32 -194910252, i32* %8
  br label %9

; <label>:9:                                      ; preds = %2, %82
  %10 = load i32, i32* %8
  switch i32 %10, label %11 [
    i32 -194910252, label %12
    i32 -292964586, label %16
    i32 -1230908769, label %21
    i32 667741143, label %36
    i32 143120872, label %51
    i32 548385984, label %52
    i32 -2102180015, label %79
    i32 -267102934, label %81
  ]

; <label>:11:                                     ; preds = %9
  br label %82

; <label>:12:                                     ; preds = %9
  %13 = load volatile i32, i32* %3
  %14 = icmp slt i32 %13, 0
  %15 = select i1 %14, i32 -1230908769, i32 -292964586
  store i32 %15, i32* %8
  br label %82

; <label>:16:                                     ; preds = %9
  %17 = load i32, i32* %6, align 4
  %18 = load i32, i32* %5, align 4
  %19 = icmp sgt i32 %17, %18
  %20 = select i1 %19, i32 -1230908769, i32 548385984
  store i32 %20, i32* %8
  br label %82

; <label>:21:                                     ; preds = %9
  %22 = load i32, i32* @x.4
  %23 = load i32, i32* @y.5
  %24 = sub i32 0, 1
  %25 = add i32 %22, %24
  %26 = sub i32 %22, 1
  %27 = mul i32 %22, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %23, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  %35 = select i1 %33, i32 667741143, i32 -267102934
  store i32 %35, i32* %8
  br label %82

; <label>:36:                                     ; preds = %9
  store i32 0, i32* %4, align 4
  %37 = load i32, i32* @x.4
  %38 = load i32, i32* @y.5
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 143120872, i32 -267102934
  store i32 %50, i32* %8
  br label %82

; <label>:51:                                     ; preds = %9
  store i32 -2102180015, i32* %8
  br label %82

; <label>:52:                                     ; preds = %9
  %53 = load i32, i32* %5, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [5000000 x i32], [5000000 x i32]* @fac, i64 0, i64 %54
  %56 = load i32, i32* %55, align 4
  %57 = sext i32 %56 to i64
  %58 = mul nsw i64 1, %57
  %59 = load i32, i32* %6, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [5000000 x i32], [5000000 x i32]* @inv, i64 0, i64 %60
  %62 = load i32, i32* %61, align 4
  %63 = sext i32 %62 to i64
  %64 = mul nsw i64 %58, %63
  %65 = srem i64 %64, 998244353
  %66 = load i32, i32* %5, align 4
  %67 = load i32, i32* %6, align 4
  %68 = add i32 %66, 41687984
  %69 = sub i32 %68, %67
  %70 = sub i32 %69, 41687984
  %71 = sub nsw i32 %66, %67
  %72 = sext i32 %70 to i64
  %73 = getelementptr inbounds [5000000 x i32], [5000000 x i32]* @inv, i64 0, i64 %72
  %74 = load i32, i32* %73, align 4
  %75 = sext i32 %74 to i64
  %76 = mul nsw i64 %65, %75
  %77 = srem i64 %76, 998244353
  %78 = trunc i64 %77 to i32
  store i32 %78, i32* %4, align 4
  store i32 -2102180015, i32* %8
  br label %82

; <label>:79:                                     ; preds = %9
  %80 = load i32, i32* %4, align 4
  ret i32 %80

; <label>:81:                                     ; preds = %9
  store i32 0, i32* %4, align 4
  store i32 667741143, i32* %8
  br label %82

; <label>:82:                                     ; preds = %81, %52, %51, %36, %21, %16, %12, %11
  br label %9
}

declare i32 @printf(i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_Z5powerii(i32, i32) #3 comdat {
  %3 = alloca i32
  %4 = alloca i32*
  %5 = alloca i32*
  %6 = alloca i32*
  %7 = alloca i32*
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.6
  %11 = load i32, i32* @y.7
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 -1635476475, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %352
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1635476475, label %23
    i32 -1225867785, label %31
    i32 -1995088575, label %55
    i32 -137445247, label %56
    i32 -1742964589, label %61
    i32 -1976392455, label %88
    i32 1951900244, label %103
    i32 295127378, label %129
    i32 634883584, label %130
    i32 -57984060, label %157
    i32 -846887242, label %172
    i32 846793309, label %173
    i32 -403062989, label %201
    i32 -1441710789, label %234
    i32 -2079102506, label %235
    i32 -1365125300, label %250
    i32 11817477, label %280
    i32 -491100976, label %282
    i32 -233837135, label %287
    i32 -686971743, label %325
    i32 1756058382, label %326
    i32 120667139, label %349
  ]

; <label>:22:                                     ; preds = %20
  br label %352

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 -1225867785, i32 -491100976
  store i32 %30, i32* %19
  br label %352

; <label>:31:                                     ; preds = %20
  %32 = alloca i32, align 4
  store i32* %32, i32** %7
  %33 = alloca i32, align 4
  store i32* %33, i32** %6
  %34 = alloca i32, align 4
  store i32* %34, i32** %5
  %35 = alloca i32, align 4
  store i32* %35, i32** %4
  %36 = load volatile i32*, i32** %7
  store i32 %0, i32* %36, align 4
  %37 = load volatile i32*, i32** %6
  store i32 %1, i32* %37, align 4
  %38 = load volatile i32*, i32** %5
  store i32 1, i32* %38, align 4
  %39 = load volatile i32*, i32** %4
  store i32 30, i32* %39, align 4
  %40 = load i32, i32* @x.6
  %41 = load i32, i32* @y.7
  %42 = sub i32 %40, -1911638629
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -1911638629
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -1995088575, i32 -491100976
  store i32 %54, i32* %19
  br label %352

; <label>:55:                                     ; preds = %20
  store i32 -137445247, i32* %19
  br label %352

; <label>:56:                                     ; preds = %20
  %57 = load volatile i32*, i32** %4
  %58 = load i32, i32* %57, align 4
  %59 = icmp sge i32 %58, 0
  %60 = select i1 %59, i32 -1742964589, i32 -2079102506
  store i32 %60, i32* %19
  br label %352

; <label>:61:                                     ; preds = %20
  %62 = load volatile i32*, i32** %5
  %63 = load i32, i32* %62, align 4
  %64 = sext i32 %63 to i64
  %65 = mul nsw i64 1, %64
  %66 = load volatile i32*, i32** %5
  %67 = load i32, i32* %66, align 4
  %68 = sext i32 %67 to i64
  %69 = mul nsw i64 %65, %68
  %70 = srem i64 %69, 998244353
  %71 = trunc i64 %70 to i32
  %72 = load volatile i32*, i32** %5
  store i32 %71, i32* %72, align 4
  %73 = load volatile i32*, i32** %4
  %74 = load i32, i32* %73, align 4
  %75 = shl i32 1, %74
  %76 = load volatile i32*, i32** %6
  %77 = load i32, i32* %76, align 4
  %78 = xor i32 %75, -1
  %79 = xor i32 %77, -1
  %80 = xor i32 1213659093, -1
  %81 = or i32 %78, %79
  %82 = or i32 1213659093, %80
  %83 = xor i32 %81, -1
  %84 = and i32 %83, %82
  %85 = and i32 %75, %77
  %86 = icmp ne i32 %84, 0
  %87 = select i1 %86, i32 -1976392455, i32 634883584
  store i32 %87, i32* %19
  br label %352

; <label>:88:                                     ; preds = %20
  %89 = load i32, i32* @x.6
  %90 = load i32, i32* @y.7
  %91 = sub i32 0, 1
  %92 = add i32 %89, %91
  %93 = sub i32 %89, 1
  %94 = mul i32 %89, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %90, 10
  %98 = and i1 %96, %97
  %99 = xor i1 %96, %97
  %100 = or i1 %98, %99
  %101 = or i1 %96, %97
  %102 = select i1 %100, i32 1951900244, i32 -233837135
  store i32 %102, i32* %19
  br label %352

; <label>:103:                                    ; preds = %20
  %104 = load volatile i32*, i32** %5
  %105 = load i32, i32* %104, align 4
  %106 = sext i32 %105 to i64
  %107 = mul nsw i64 1, %106
  %108 = load volatile i32*, i32** %7
  %109 = load i32, i32* %108, align 4
  %110 = sext i32 %109 to i64
  %111 = mul nsw i64 %107, %110
  %112 = srem i64 %111, 998244353
  %113 = trunc i64 %112 to i32
  %114 = load volatile i32*, i32** %5
  store i32 %113, i32* %114, align 4
  %115 = load i32, i32* @x.6
  %116 = load i32, i32* @y.7
  %117 = sub i32 0, 1
  %118 = add i32 %115, %117
  %119 = sub i32 %115, 1
  %120 = mul i32 %115, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %116, 10
  %124 = and i1 %122, %123
  %125 = xor i1 %122, %123
  %126 = or i1 %124, %125
  %127 = or i1 %122, %123
  %128 = select i1 %126, i32 295127378, i32 -233837135
  store i32 %128, i32* %19
  br label %352

; <label>:129:                                    ; preds = %20
  store i32 634883584, i32* %19
  br label %352

; <label>:130:                                    ; preds = %20
  %131 = load i32, i32* @x.6
  %132 = load i32, i32* @y.7
  %133 = sub i32 0, 1
  %134 = add i32 %131, %133
  %135 = sub i32 %131, 1
  %136 = mul i32 %131, %134
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %132, 10
  %140 = xor i1 %138, true
  %141 = xor i1 %139, true
  %142 = xor i1 false, true
  %143 = and i1 %140, false
  %144 = and i1 %138, %142
  %145 = and i1 %141, false
  %146 = and i1 %139, %142
  %147 = or i1 %143, %144
  %148 = or i1 %145, %146
  %149 = xor i1 %147, %148
  %150 = or i1 %140, %141
  %151 = xor i1 %150, true
  %152 = or i1 false, %142
  %153 = and i1 %151, %152
  %154 = or i1 %149, %153
  %155 = or i1 %138, %139
  %156 = select i1 %154, i32 -57984060, i32 -686971743
  store i32 %156, i32* %19
  br label %352

; <label>:157:                                    ; preds = %20
  %158 = load i32, i32* @x.6
  %159 = load i32, i32* @y.7
  %160 = sub i32 0, 1
  %161 = add i32 %158, %160
  %162 = sub i32 %158, 1
  %163 = mul i32 %158, %161
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %159, 10
  %167 = and i1 %165, %166
  %168 = xor i1 %165, %166
  %169 = or i1 %167, %168
  %170 = or i1 %165, %166
  %171 = select i1 %169, i32 -846887242, i32 -686971743
  store i32 %171, i32* %19
  br label %352

; <label>:172:                                    ; preds = %20
  store i32 846793309, i32* %19
  br label %352

; <label>:173:                                    ; preds = %20
  %174 = load i32, i32* @x.6
  %175 = load i32, i32* @y.7
  %176 = sub i32 %174, -1354349941
  %177 = sub i32 %176, 1
  %178 = add i32 %177, -1354349941
  %179 = sub i32 %174, 1
  %180 = mul i32 %174, %178
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %175, 10
  %184 = xor i1 %182, true
  %185 = xor i1 %183, true
  %186 = xor i1 true, true
  %187 = and i1 %184, true
  %188 = and i1 %182, %186
  %189 = and i1 %185, true
  %190 = and i1 %183, %186
  %191 = or i1 %187, %188
  %192 = or i1 %189, %190
  %193 = xor i1 %191, %192
  %194 = or i1 %184, %185
  %195 = xor i1 %194, true
  %196 = or i1 true, %186
  %197 = and i1 %195, %196
  %198 = or i1 %193, %197
  %199 = or i1 %182, %183
  %200 = select i1 %198, i32 -403062989, i32 1756058382
  store i32 %200, i32* %19
  br label %352

; <label>:201:                                    ; preds = %20
  %202 = load volatile i32*, i32** %4
  %203 = load i32, i32* %202, align 4
  %204 = sub i32 0, -1
  %205 = sub i32 %203, %204
  %206 = add nsw i32 %203, -1
  %207 = load volatile i32*, i32** %4
  store i32 %205, i32* %207, align 4
  %208 = load i32, i32* @x.6
  %209 = load i32, i32* @y.7
  %210 = sub i32 0, 1
  %211 = add i32 %208, %210
  %212 = sub i32 %208, 1
  %213 = mul i32 %208, %211
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %209, 10
  %217 = xor i1 %215, true
  %218 = xor i1 %216, true
  %219 = xor i1 false, true
  %220 = and i1 %217, false
  %221 = and i1 %215, %219
  %222 = and i1 %218, false
  %223 = and i1 %216, %219
  %224 = or i1 %220, %221
  %225 = or i1 %222, %223
  %226 = xor i1 %224, %225
  %227 = or i1 %217, %218
  %228 = xor i1 %227, true
  %229 = or i1 false, %219
  %230 = and i1 %228, %229
  %231 = or i1 %226, %230
  %232 = or i1 %215, %216
  %233 = select i1 %231, i32 -1441710789, i32 1756058382
  store i32 %233, i32* %19
  br label %352

; <label>:234:                                    ; preds = %20
  store i32 -137445247, i32* %19
  br label %352

; <label>:235:                                    ; preds = %20
  %236 = load i32, i32* @x.6
  %237 = load i32, i32* @y.7
  %238 = sub i32 0, 1
  %239 = add i32 %236, %238
  %240 = sub i32 %236, 1
  %241 = mul i32 %236, %239
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %237, 10
  %245 = and i1 %243, %244
  %246 = xor i1 %243, %244
  %247 = or i1 %245, %246
  %248 = or i1 %243, %244
  %249 = select i1 %247, i32 -1365125300, i32 120667139
  store i32 %249, i32* %19
  br label %352

; <label>:250:                                    ; preds = %20
  %251 = load volatile i32*, i32** %5
  %252 = load i32, i32* %251, align 4
  store i32 %252, i32* %3
  %253 = load i32, i32* @x.6
  %254 = load i32, i32* @y.7
  %255 = add i32 %253, -2038324803
  %256 = sub i32 %255, 1
  %257 = sub i32 %256, -2038324803
  %258 = sub i32 %253, 1
  %259 = mul i32 %253, %257
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %254, 10
  %263 = xor i1 %261, true
  %264 = xor i1 %262, true
  %265 = xor i1 false, true
  %266 = and i1 %263, false
  %267 = and i1 %261, %265
  %268 = and i1 %264, false
  %269 = and i1 %262, %265
  %270 = or i1 %266, %267
  %271 = or i1 %268, %269
  %272 = xor i1 %270, %271
  %273 = or i1 %263, %264
  %274 = xor i1 %273, true
  %275 = or i1 false, %265
  %276 = and i1 %274, %275
  %277 = or i1 %272, %276
  %278 = or i1 %261, %262
  %279 = select i1 %277, i32 11817477, i32 120667139
  store i32 %279, i32* %19
  br label %352

; <label>:280:                                    ; preds = %20
  %281 = load volatile i32, i32* %3
  ret i32 %281

; <label>:282:                                    ; preds = %20
  %283 = alloca i32, align 4
  %284 = alloca i32, align 4
  %285 = alloca i32, align 4
  %286 = alloca i32, align 4
  store i32 %0, i32* %283, align 4
  store i32 %1, i32* %284, align 4
  store i32 1, i32* %285, align 4
  store i32 30, i32* %286, align 4
  store i32 -1225867785, i32* %19
  br label %352

; <label>:287:                                    ; preds = %20
  %288 = load volatile i32*, i32** %5
  %289 = load i32, i32* %288, align 4
  %290 = sext i32 %289 to i64
  %291 = sub i64 1, 5551283258860129392
  %292 = sub i64 %291, %290
  %293 = add i64 %292, 5551283258860129392
  %294 = sub i64 1, %290
  %295 = mul i64 %293, %290
  %296 = mul nsw i64 1, %290
  %297 = load volatile i32*, i32** %7
  %298 = load i32, i32* %297, align 4
  %299 = sext i32 %298 to i64
  %300 = add i64 0, -1517527993413821099
  %301 = sub i64 %300, %296
  %302 = sub i64 %301, -1517527993413821099
  %303 = sub i64 0, %296
  %304 = add i64 %302, 2637495620637915062
  %305 = add i64 %304, %299
  %306 = sub i64 %305, 2637495620637915062
  %307 = add i64 %302, %299
  %308 = shl i64 %296, %299
  %309 = sub i64 0, %296
  %310 = add i64 0, %309
  %311 = sub i64 0, %296
  %312 = sub i64 %310, -1107713289350221295
  %313 = add i64 %312, %299
  %314 = add i64 %313, -1107713289350221295
  %315 = add i64 %310, %299
  %316 = mul nsw i64 %296, %299
  %317 = sub i64 %316, 624768381506759050
  %318 = sub i64 %317, 998244353
  %319 = add i64 %318, 624768381506759050
  %320 = sub i64 %316, 998244353
  %321 = mul i64 %319, 998244353
  %322 = srem i64 %316, 998244353
  %323 = trunc i64 %322 to i32
  %324 = load volatile i32*, i32** %5
  store i32 %323, i32* %324, align 4
  store i32 1951900244, i32* %19
  br label %352

; <label>:325:                                    ; preds = %20
  store i32 -57984060, i32* %19
  br label %352

; <label>:326:                                    ; preds = %20
  %327 = load volatile i32*, i32** %4
  %328 = load i32, i32* %327, align 4
  %329 = shl i32 %328, -1
  %330 = add i32 %328, 1674955052
  %331 = sub i32 %330, -1
  %332 = sub i32 %331, 1674955052
  %333 = sub i32 %328, -1
  %334 = mul i32 %332, -1
  %335 = add i32 0, 1042310713
  %336 = sub i32 %335, %328
  %337 = sub i32 %336, 1042310713
  %338 = sub i32 0, %328
  %339 = sub i32 0, %337
  %340 = sub i32 0, -1
  %341 = add i32 %339, %340
  %342 = sub i32 0, %341
  %343 = add i32 %337, -1
  %344 = sub i32 %328, 1053016930
  %345 = add i32 %344, -1
  %346 = add i32 %345, 1053016930
  %347 = add nsw i32 %328, -1
  %348 = load volatile i32*, i32** %4
  store i32 %346, i32* %348, align 4
  store i32 -403062989, i32* %19
  br label %352

; <label>:349:                                    ; preds = %20
  %350 = load volatile i32*, i32** %5
  %351 = load i32, i32* %350, align 4
  store i32 -1365125300, i32* %19
  br label %352

; <label>:352:                                    ; preds = %349, %326, %325, %287, %282, %250, %235, %234, %201, %173, %172, %157, %130, %129, %103, %88, %61, %56, %55, %31, %23, %22
  br label %20
}

attributes #0 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
