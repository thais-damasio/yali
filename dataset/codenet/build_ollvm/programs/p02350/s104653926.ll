; ModuleID = 'Project_CodeNet_C++1400/p02350/s104653926.cpp'
source_filename = "Project_CodeNet_C++1400/p02350/s104653926.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"struct.std::array" = type { [3 x i64] }
%struct.ST = type { i32, %"class.std::vector", %"class.std::vector.0", %"class.std::vector.6" }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl" = type { %"struct.std::array"*, %"struct.std::array"*, %"struct.std::array"* }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl" = type { %"struct.std::array.5"*, %"struct.std::array.5"*, %"struct.std::array.5"* }
%"struct.std::array.5" = type { [2 x i64] }
%"class.std::vector.6" = type { %"struct.std::_Vector_base.7" }
%"struct.std::_Vector_base.7" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" = type { i32*, i32*, i32* }
%"class.__gnu_cxx::__normal_iterator.12" = type { i32* }
%"class.std::back_insert_iterator" = type { %"class.std::vector.6"* }
%"struct.std::greater" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.13" = type { i32* }
%"class.std::allocator.8" = type { i8 }
%"class.std::allocator.2" = type { i8 }
%"class.std::allocator" = type { i8 }
%"class.__gnu_cxx::new_allocator.9" = type { i8 }
%"class.__gnu_cxx::new_allocator.3" = type { i8 }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.__gnu_cxx::__normal_iterator" = type { %"struct.std::array"* }
%"class.__gnu_cxx::__normal_iterator.11" = type { %"struct.std::array.5"* }
%"struct.__gnu_cxx::__ops::_Iter_comp_iter" = type { %"struct.std::greater" }
%"struct.__gnu_cxx::__ops::_Iter_equal_to_iter" = type { i8 }
%"struct.std::random_access_iterator_tag" = type { i8 }
%"class.std::move_iterator" = type { i32* }
%"struct.std::iterator" = type { i8 }

$_ZN2STI1MEC2Ei = comdat any

$_ZNSt6vectorISt5arrayIxLm3EESaIS1_EEixEm = comdat any

$_ZNSt5arrayIxLm3EE4fillERKx = comdat any

$_ZNSt14numeric_limitsIiE3maxEv = comdat any

$_ZN2STI1ME5buildEv = comdat any

$_ZN2STI1ME3getEii = comdat any

$_ZNSt5arrayIxLm3EEixEm = comdat any

$_ZN2STI1ME3setEiiRKSt5arrayIxLm2EE = comdat any

$_ZN2STI1MED2Ev = comdat any

$_ZNSt6vectorIiSaIiEED2Ev = comdat any

$_ZNSt6vectorISt5arrayIxLm2EESaIS1_EED2Ev = comdat any

$_ZNSt6vectorISt5arrayIxLm3EESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIiSaIiEED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZSt8_DestroyIPiEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim = comdat any

$_ZNSaIiED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiED2Ev = comdat any

$_ZSt8_DestroyIPSt5arrayIxLm2EES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPSt5arrayIxLm2EEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPSt5arrayIxLm2EEEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaISt5arrayIxLm2EEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm2EEE10deallocateEPS2_m = comdat any

$_ZNSaISt5arrayIxLm2EEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm2EEED2Ev = comdat any

$_ZSt8_DestroyIPSt5arrayIxLm3EES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPSt5arrayIxLm3EEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPSt5arrayIxLm3EEEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaISt5arrayIxLm3EEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm3EEE10deallocateEPS2_m = comdat any

$_ZNSaISt5arrayIxLm3EEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm3EEED2Ev = comdat any

$_ZNSt14__array_traitsIxLm3EE6_S_refERA3_Kxm = comdat any

$_ZNSt6vectorISt5arrayIxLm3EESaIS1_EEC2Ev = comdat any

$_ZNSt6vectorISt5arrayIxLm2EESaIS1_EEC2Ev = comdat any

$_ZNSt6vectorIiSaIiEEC2Ev = comdat any

$_ZNSt6vectorISt5arrayIxLm3EESaIS1_EE6assignEmRKS1_ = comdat any

$_ZN1M1eEv = comdat any

$_ZNSt6vectorISt5arrayIxLm2EESaIS1_EE6assignEmRKS1_ = comdat any

$_ZN1M2idEv = comdat any

$_ZNSt6vectorIiSaIiEE6assignEmRKi = comdat any

$_ZNSt6vectorIiSaIiEEixEm = comdat any

$_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt5arrayIxLm3EEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm3EEEC2Ev = comdat any

$_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt5arrayIxLm2EEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm2EEEC2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev = comdat any

$_ZNSaIiEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2Ev = comdat any

$_ZNSt6vectorISt5arrayIxLm3EESaIS1_EE14_M_fill_assignEmRKS1_ = comdat any

$_ZNKSt6vectorISt5arrayIxLm3EESaIS1_EE8capacityEv = comdat any

$_ZNSt6vectorISt5arrayIxLm3EESaIS1_EEC2EmRKS1_RKS2_ = comdat any

$_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE12_Vector_impl12_M_swap_dataERS4_ = comdat any

$_ZNKSt6vectorISt5arrayIxLm3EESaIS1_EE4sizeEv = comdat any

$_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm3EESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RKT0_ = comdat any

$_ZNSt6vectorISt5arrayIxLm3EESaIS1_EE5beginEv = comdat any

$_ZNSt6vectorISt5arrayIxLm3EESaIS1_EE3endEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPSt5arrayIxLm3EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt6vectorISt5arrayIxLm3EESaIS1_EE15_M_erase_at_endEPS1_ = comdat any

$_ZSt6fill_nIPSt5arrayIxLm3EEmS1_ET_S3_T0_RKT1_ = comdat any

$_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EEC2EmRKS2_ = comdat any

$_ZNSt6vectorISt5arrayIxLm3EESaIS1_EE18_M_fill_initializeEmRKS1_ = comdat any

$_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE12_Vector_implC2ERKS2_ = comdat any

$_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE17_M_create_storageEm = comdat any

$_ZNSaISt5arrayIxLm3EEEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm3EEEC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt5arrayIxLm3EEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm3EEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt5arrayIxLm3EEE8max_sizeEv = comdat any

$_ZSt4swapIPSt5arrayIxLm3EEEvRT_S4_ = comdat any

$_ZSt4moveIRPSt5arrayIxLm3EEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZSt8__fill_aIPSt5arrayIxLm3EES1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S8_RKS5_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm3EESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm3EESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES8_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm3EESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm3EESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZSt20uninitialized_fill_nIPSt5arrayIxLm3EEmS1_ET_S3_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPSt5arrayIxLm3EEmS3_EET_S5_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPSt5arrayIxLm3EEmS1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES6_T0_RKS5_ = comdat any

$_ZSt12__niter_baseIPSt5arrayIxLm3EEENSt11_Niter_baseIT_E13iterator_typeES4_ = comdat any

$_ZNSt10_Iter_baseIPSt5arrayIxLm3EELb0EE7_S_baseES2_ = comdat any

$_ZNSt14numeric_limitsIxE3maxEv = comdat any

$_ZNSt14numeric_limitsIxE3minEv = comdat any

$_ZNSt6vectorISt5arrayIxLm2EESaIS1_EE14_M_fill_assignEmRKS1_ = comdat any

$_ZNKSt6vectorISt5arrayIxLm2EESaIS1_EE8capacityEv = comdat any

$_ZNSt6vectorISt5arrayIxLm2EESaIS1_EEC2EmRKS1_RKS2_ = comdat any

$_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE12_Vector_impl12_M_swap_dataERS4_ = comdat any

$_ZNKSt6vectorISt5arrayIxLm2EESaIS1_EE4sizeEv = comdat any

$_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm2EESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RKT0_ = comdat any

$_ZNSt6vectorISt5arrayIxLm2EESaIS1_EE5beginEv = comdat any

$_ZNSt6vectorISt5arrayIxLm2EESaIS1_EE3endEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPSt5arrayIxLm2EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt6vectorISt5arrayIxLm2EESaIS1_EE15_M_erase_at_endEPS1_ = comdat any

$_ZSt6fill_nIPSt5arrayIxLm2EEmS1_ET_S3_T0_RKT1_ = comdat any

$_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EEC2EmRKS2_ = comdat any

$_ZNSt6vectorISt5arrayIxLm2EESaIS1_EE18_M_fill_initializeEmRKS1_ = comdat any

$_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE12_Vector_implC2ERKS2_ = comdat any

$_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE17_M_create_storageEm = comdat any

$_ZNSaISt5arrayIxLm2EEEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm2EEEC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt5arrayIxLm2EEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm2EEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt5arrayIxLm2EEE8max_sizeEv = comdat any

$_ZSt4swapIPSt5arrayIxLm2EEEvRT_S4_ = comdat any

$_ZSt4moveIRPSt5arrayIxLm2EEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZSt8__fill_aIPSt5arrayIxLm2EES1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S8_RKS5_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm2EESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm2EESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES8_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm2EESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm2EESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZSt20uninitialized_fill_nIPSt5arrayIxLm2EEmS1_ET_S3_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPSt5arrayIxLm2EEmS3_EET_S5_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPSt5arrayIxLm2EEmS1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES6_T0_RKS5_ = comdat any

$_ZSt12__niter_baseIPSt5arrayIxLm2EEENSt11_Niter_baseIT_E13iterator_typeES4_ = comdat any

$_ZNSt10_Iter_baseIPSt5arrayIxLm2EELb0EE7_S_baseES2_ = comdat any

$_ZNSt6vectorIiSaIiEE14_M_fill_assignEmRKi = comdat any

$_ZNKSt6vectorIiSaIiEE8capacityEv = comdat any

$_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_ = comdat any

$_ZNKSt6vectorIiSaIiEE4sizeEv = comdat any

$_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RKT0_ = comdat any

$_ZNSt6vectorIiSaIiEE5beginEv = comdat any

$_ZNSt6vectorIiSaIiEE3endEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi = comdat any

$_ZSt6fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm = comdat any

$_ZNSaIiEC2ERKS_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaIiEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv = comdat any

$_ZSt4swapIPiEvRT_S2_ = comdat any

$_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZSt8__fill_aIPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb1EE7_S_baseES6_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_ = comdat any

$_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_ = comdat any

$_ZSt6fill_nIPxmxET_S1_T0_RKT1_ = comdat any

$_ZNSt5arrayIxLm3EE5beginEv = comdat any

$_ZNKSt5arrayIxLm3EE4sizeEv = comdat any

$_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_ = comdat any

$_ZNSt5arrayIxLm3EE4dataEv = comdat any

$_ZNSt14__array_traitsIxLm3EE6_S_ptrERA3_Kx = comdat any

$_ZN1M2opERKSt5arrayIxLm3EES3_ = comdat any

$_ZSt3minIxERKT_S2_S2_ = comdat any

$_ZNKSt5arrayIxLm3EEixEm = comdat any

$_ZSt3maxIxERKT_S2_S2_ = comdat any

$_ZNSt6vectorIiSaIiEE9push_backERKi = comdat any

$_ZSt5mergeIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_St20back_insert_iteratorIS5_ESt7greaterIiEET1_T_SC_T0_SD_SB_T2_ = comdat any

$_ZSt13back_inserterISt6vectorIiSaIiEEESt20back_insert_iteratorIT_ERS4_ = comdat any

$_ZNSt6vectorIiSaIiEE5eraseEN9__gnu_cxx17__normal_iteratorIPKiS1_EES6_ = comdat any

$_ZSt6uniqueIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEET_S7_S7_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2IPiEERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameIS9_S8_EE7__valueES5_E6__typeEEE = comdat any

$_ZSt7reverseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_ = comdat any

$_ZN9__gnu_cxxneIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv = comdat any

$_ZN2STI1ME3_apEiRKSt5arrayIxLm2EE = comdat any

$_ZNSt6vectorISt5arrayIxLm2EESaIS1_EEixEm = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv = comdat any

$_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_ = comdat any

$_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_ = comdat any

$_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_ = comdat any

$_ZNKSt6vectorIiSaIiEE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_ = comdat any

$_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_ = comdat any

$_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_ = comdat any

$_ZNKSt13move_iteratorIPiE4baseEv = comdat any

$_ZNSt13move_iteratorIPiEC2ES0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_ = comdat any

$_ZSt7__mergeIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_St20back_insert_iteratorIS5_ENS0_5__ops15_Iter_comp_iterISt7greaterIiEEEET1_T_SF_T0_SG_SE_T2_ = comdat any

$_ZN9__gnu_cxx5__ops16__iter_comp_iterISt7greaterIiEEENS0_15_Iter_comp_iterIT_EES5_ = comdat any

$_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt7greaterIiEEclINS_17__normal_iteratorIPiSt6vectorIiSaIiEEEESB_EEbT_T0_ = comdat any

$_ZNSt20back_insert_iteratorISt6vectorIiSaIiEEEdeEv = comdat any

$_ZNSt20back_insert_iteratorISt6vectorIiSaIiEEEaSERKi = comdat any

$_ZNSt20back_insert_iteratorISt6vectorIiSaIiEEEppEv = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEESt20back_insert_iteratorIS5_EET0_T_SA_S9_ = comdat any

$_ZNKSt7greaterIiEclERKiS2_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEESt20back_insert_iteratorIS5_EET1_T0_SA_S9_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES8_ = comdat any

$_ZSt13__copy_move_aILb0EPiSt20back_insert_iteratorISt6vectorIiSaIiEEEET1_T0_S7_S6_ = comdat any

$_ZSt12__niter_baseISt20back_insert_iteratorISt6vectorIiSaIiEEEENSt11_Niter_baseIT_E13iterator_typeES6_ = comdat any

$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPiSt20back_insert_iteratorISt6vectorIiSaIiEEEEET0_T_SA_S9_ = comdat any

$_ZNSt10_Iter_baseISt20back_insert_iteratorISt6vectorIiSaIiEEELb0EE7_S_baseES4_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb0EE7_S_baseES6_ = comdat any

$_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt7greaterIiEEC2ES3_ = comdat any

$_ZNSt20back_insert_iteratorISt6vectorIiSaIiEEEC2ERS2_ = comdat any

$_ZNKSt6vectorIiSaIiEE6cbeginEv = comdat any

$_ZNSt6vectorIiSaIiEE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPiS1_EES5_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl = comdat any

$_ZN9__gnu_cxxmiIPKiSt6vectorIiSaIiEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_ = comdat any

$_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_ET0_T_S8_S7_ = comdat any

$_ZN9__gnu_cxxmiIPiSt6vectorIiSaIiEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_ = comdat any

$_ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_ET1_T0_S8_S7_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv = comdat any

$_ZSt8__uniqueIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops19_Iter_equal_to_iterEET_S9_S9_T0_ = comdat any

$_ZN9__gnu_cxx5__ops20__iter_equal_to_iterEv = comdat any

$_ZSt15__adjacent_findIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops19_Iter_equal_to_iterEET_S9_S9_T0_ = comdat any

$_ZN9__gnu_cxxeqIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_ = comdat any

$_ZNK9__gnu_cxx5__ops19_Iter_equal_to_iterclINS_17__normal_iteratorIPiSt6vectorIiSaIiEEEES8_EEbT_T0_ = comdat any

$_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZSt9__reverseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_St26random_access_iterator_tag = comdat any

$_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt15iterator_traitsIT_E17iterator_categoryERKS8_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEmmEv = comdat any

$_ZN9__gnu_cxxltIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_ = comdat any

$_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_EvT_T0_ = comdat any

$_ZSt4swapIiEvRT_S1_ = comdat any

$_ZN1M2apERSt5arrayIxLm3EERKS0_IxLm2EEi = comdat any

$_ZN1M2apERSt5arrayIxLm2EERKS1_ = comdat any

$_ZNKSt5arrayIxLm2EEixEm = comdat any

$_ZSt4swapIxEvRT_S1_ = comdat any

$_ZNSt14__array_traitsIxLm2EE6_S_refERA2_Kxm = comdat any

$_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNSt5arrayIxLm2EEixEm = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@_ZZN2STI1ME3getEiiE4resl = private unnamed_addr constant %"struct.std::array" { [3 x i64] [i64 9223372036854775807, i64 -9223372036854775808, i64 0] }, align 8
@_ZZN2STI1ME3getEiiE4resr = private unnamed_addr constant %"struct.std::array" { [3 x i64] [i64 9223372036854775807, i64 -9223372036854775808, i64 0] }, align 8
@.str = private unnamed_addr constant [28 x i8] c"vector::_M_emplace_back_aux\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s104653926.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0
@x.159 = common global i32 0
@y.160 = common global i32 0
@x.161 = common global i32 0
@y.162 = common global i32 0
@x.163 = common global i32 0
@y.164 = common global i32 0
@x.165 = common global i32 0
@y.166 = common global i32 0
@x.167 = common global i32 0
@y.168 = common global i32 0
@x.169 = common global i32 0
@y.170 = common global i32 0
@x.171 = common global i32 0
@y.172 = common global i32 0
@x.173 = common global i32 0
@y.174 = common global i32 0
@x.175 = common global i32 0
@y.176 = common global i32 0
@x.177 = common global i32 0
@y.178 = common global i32 0
@x.179 = common global i32 0
@y.180 = common global i32 0
@x.181 = common global i32 0
@y.182 = common global i32 0
@x.183 = common global i32 0
@y.184 = common global i32 0
@x.185 = common global i32 0
@y.186 = common global i32 0
@x.187 = common global i32 0
@y.188 = common global i32 0
@x.189 = common global i32 0
@y.190 = common global i32 0
@x.191 = common global i32 0
@y.192 = common global i32 0
@x.193 = common global i32 0
@y.194 = common global i32 0
@x.195 = common global i32 0
@y.196 = common global i32 0
@x.197 = common global i32 0
@y.198 = common global i32 0
@x.199 = common global i32 0
@y.200 = common global i32 0
@x.201 = common global i32 0
@y.202 = common global i32 0
@x.203 = common global i32 0
@y.204 = common global i32 0
@x.205 = common global i32 0
@y.206 = common global i32 0
@x.207 = common global i32 0
@y.208 = common global i32 0
@x.209 = common global i32 0
@y.210 = common global i32 0
@x.211 = common global i32 0
@y.212 = common global i32 0
@x.213 = common global i32 0
@y.214 = common global i32 0
@x.215 = common global i32 0
@y.216 = common global i32 0
@x.217 = common global i32 0
@y.218 = common global i32 0
@x.219 = common global i32 0
@y.220 = common global i32 0
@x.221 = common global i32 0
@y.222 = common global i32 0
@x.223 = common global i32 0
@y.224 = common global i32 0
@x.225 = common global i32 0
@y.226 = common global i32 0
@x.227 = common global i32 0
@y.228 = common global i32 0
@x.229 = common global i32 0
@y.230 = common global i32 0
@x.231 = common global i32 0
@y.232 = common global i32 0
@x.233 = common global i32 0
@y.234 = common global i32 0
@x.235 = common global i32 0
@y.236 = common global i32 0
@x.237 = common global i32 0
@y.238 = common global i32 0
@x.239 = common global i32 0
@y.240 = common global i32 0
@x.241 = common global i32 0
@y.242 = common global i32 0
@x.243 = common global i32 0
@y.244 = common global i32 0
@x.245 = common global i32 0
@y.246 = common global i32 0
@x.247 = common global i32 0
@y.248 = common global i32 0
@x.249 = common global i32 0
@y.250 = common global i32 0
@x.251 = common global i32 0
@y.252 = common global i32 0
@x.253 = common global i32 0
@y.254 = common global i32 0
@x.255 = common global i32 0
@y.256 = common global i32 0
@x.257 = common global i32 0
@y.258 = common global i32 0
@x.259 = common global i32 0
@y.260 = common global i32 0
@x.261 = common global i32 0
@y.262 = common global i32 0
@x.263 = common global i32 0
@y.264 = common global i32 0
@x.265 = common global i32 0
@y.266 = common global i32 0
@x.267 = common global i32 0
@y.268 = common global i32 0
@x.269 = common global i32 0
@y.270 = common global i32 0
@x.271 = common global i32 0
@y.272 = common global i32 0
@x.273 = common global i32 0
@y.274 = common global i32 0
@x.275 = common global i32 0
@y.276 = common global i32 0
@x.277 = common global i32 0
@y.278 = common global i32 0
@x.279 = common global i32 0
@y.280 = common global i32 0
@x.281 = common global i32 0
@y.282 = common global i32 0
@x.283 = common global i32 0
@y.284 = common global i32 0
@x.285 = common global i32 0
@y.286 = common global i32 0
@x.287 = common global i32 0
@y.288 = common global i32 0
@x.289 = common global i32 0
@y.290 = common global i32 0
@x.291 = common global i32 0
@y.292 = common global i32 0
@x.293 = common global i32 0
@y.294 = common global i32 0
@x.295 = common global i32 0
@y.296 = common global i32 0
@x.297 = common global i32 0
@y.298 = common global i32 0
@x.299 = common global i32 0
@y.300 = common global i32 0
@x.301 = common global i32 0
@y.302 = common global i32 0
@x.303 = common global i32 0
@y.304 = common global i32 0
@x.305 = common global i32 0
@y.306 = common global i32 0
@x.307 = common global i32 0
@y.308 = common global i32 0
@x.309 = common global i32 0
@y.310 = common global i32 0
@x.311 = common global i32 0
@y.312 = common global i32 0
@x.313 = common global i32 0
@y.314 = common global i32 0
@x.315 = common global i32 0
@y.316 = common global i32 0
@x.317 = common global i32 0
@y.318 = common global i32 0
@x.319 = common global i32 0
@y.320 = common global i32 0
@x.321 = common global i32 0
@y.322 = common global i32 0
@x.323 = common global i32 0
@y.324 = common global i32 0
@x.325 = common global i32 0
@y.326 = common global i32 0
@x.327 = common global i32 0
@y.328 = common global i32 0
@x.329 = common global i32 0
@y.330 = common global i32 0
@x.331 = common global i32 0
@y.332 = common global i32 0
@x.333 = common global i32 0
@y.334 = common global i32 0
@x.335 = common global i32 0
@y.336 = common global i32 0
@x.337 = common global i32 0
@y.338 = common global i32 0
@x.339 = common global i32 0
@y.340 = common global i32 0
@x.341 = common global i32 0
@y.342 = common global i32 0
@x.343 = common global i32 0
@y.344 = common global i32 0
@x.345 = common global i32 0
@y.346 = common global i32 0
@x.347 = common global i32 0
@y.348 = common global i32 0
@x.349 = common global i32 0
@y.350 = common global i32 0
@x.351 = common global i32 0
@y.352 = common global i32 0
@x.353 = common global i32 0
@y.354 = common global i32 0
@x.355 = common global i32 0
@y.356 = common global i32 0
@x.357 = common global i32 0
@y.358 = common global i32 0
@x.359 = common global i32 0
@y.360 = common global i32 0
@x.361 = common global i32 0
@y.362 = common global i32 0
@x.363 = common global i32 0
@y.364 = common global i32 0
@x.365 = common global i32 0
@y.366 = common global i32 0
@x.367 = common global i32 0
@y.368 = common global i32 0
@x.369 = common global i32 0
@y.370 = common global i32 0
@x.371 = common global i32 0
@y.372 = common global i32 0
@x.373 = common global i32 0
@y.374 = common global i32 0
@x.375 = common global i32 0
@y.376 = common global i32 0
@x.377 = common global i32 0
@y.378 = common global i32 0
@x.379 = common global i32 0
@y.380 = common global i32 0
@x.381 = common global i32 0
@y.382 = common global i32 0
@x.383 = common global i32 0
@y.384 = common global i32 0
@x.385 = common global i32 0
@y.386 = common global i32 0
@x.387 = common global i32 0
@y.388 = common global i32 0
@x.389 = common global i32 0
@y.390 = common global i32 0
@x.391 = common global i32 0
@y.392 = common global i32 0
@x.393 = common global i32 0
@y.394 = common global i32 0
@x.395 = common global i32 0
@y.396 = common global i32 0
@x.397 = common global i32 0
@y.398 = common global i32 0
@x.399 = common global i32 0
@y.400 = common global i32 0
@x.401 = common global i32 0
@y.402 = common global i32 0
@x.403 = common global i32 0
@y.404 = common global i32 0
@x.405 = common global i32 0
@y.406 = common global i32 0
@x.407 = common global i32 0
@y.408 = common global i32 0
@x.409 = common global i32 0
@y.410 = common global i32 0
@x.411 = common global i32 0
@y.412 = common global i32 0
@x.413 = common global i32 0
@y.414 = common global i32 0
@x.415 = common global i32 0
@y.416 = common global i32 0
@x.417 = common global i32 0
@y.418 = common global i32 0
@x.419 = common global i32 0
@y.420 = common global i32 0
@x.421 = common global i32 0
@y.422 = common global i32 0
@x.423 = common global i32 0
@y.424 = common global i32 0
@x.425 = common global i32 0
@y.426 = common global i32 0
@x.427 = common global i32 0
@y.428 = common global i32 0
@x.429 = common global i32 0
@y.430 = common global i32 0
@x.431 = common global i32 0
@y.432 = common global i32 0
@x.433 = common global i32 0
@y.434 = common global i32 0
@x.435 = common global i32 0
@y.436 = common global i32 0
@x.437 = common global i32 0
@y.438 = common global i32 0
@x.439 = common global i32 0
@y.440 = common global i32 0
@x.441 = common global i32 0
@y.442 = common global i32 0
@x.443 = common global i32 0
@y.444 = common global i32 0
@x.445 = common global i32 0
@y.446 = common global i32 0
@x.447 = common global i32 0
@y.448 = common global i32 0
@x.449 = common global i32 0
@y.450 = common global i32 0
@x.451 = common global i32 0
@y.452 = common global i32 0
@x.453 = common global i32 0
@y.454 = common global i32 0
@x.455 = common global i32 0
@y.456 = common global i32 0
@x.457 = common global i32 0
@y.458 = common global i32 0
@x.459 = common global i32 0
@y.460 = common global i32 0
@x.461 = common global i32 0
@y.462 = common global i32 0
@x.463 = common global i32 0
@y.464 = common global i32 0
@x.465 = common global i32 0
@y.466 = common global i32 0
@x.467 = common global i32 0
@y.468 = common global i32 0
@x.469 = common global i32 0
@y.470 = common global i32 0
@x.471 = common global i32 0
@y.472 = common global i32 0
@x.473 = common global i32 0
@y.474 = common global i32 0
@x.475 = common global i32 0
@y.476 = common global i32 0
@x.477 = common global i32 0
@y.478 = common global i32 0
@x.479 = common global i32 0
@y.480 = common global i32 0
@x.481 = common global i32 0
@y.482 = common global i32 0
@x.483 = common global i32 0
@y.484 = common global i32 0
@x.485 = common global i32 0
@y.486 = common global i32 0
@x.487 = common global i32 0
@y.488 = common global i32 0
@x.489 = common global i32 0
@y.490 = common global i32 0
@x.491 = common global i32 0
@y.492 = common global i32 0
@x.493 = common global i32 0
@y.494 = common global i32 0
@x.495 = common global i32 0
@y.496 = common global i32 0
@x.497 = common global i32 0
@y.498 = common global i32 0
@x.499 = common global i32 0
@y.500 = common global i32 0
@x.501 = common global i32 0
@y.502 = common global i32 0
@x.503 = common global i32 0
@y.504 = common global i32 0
@x.505 = common global i32 0
@y.506 = common global i32 0
@x.507 = common global i32 0
@y.508 = common global i32 0
@x.509 = common global i32 0
@y.510 = common global i32 0
@x.511 = common global i32 0
@y.512 = common global i32 0
@x.513 = common global i32 0
@y.514 = common global i32 0
@x.515 = common global i32 0
@y.516 = common global i32 0
@x.517 = common global i32 0
@y.518 = common global i32 0
@x.519 = common global i32 0
@y.520 = common global i32 0
@x.521 = common global i32 0
@y.522 = common global i32 0
@x.523 = common global i32 0
@y.524 = common global i32 0
@x.525 = common global i32 0
@y.526 = common global i32 0
@x.527 = common global i32 0
@y.528 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() #4 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.ST, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i8*
  %8 = alloca i32
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %"struct.std::array", align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %"struct.std::array.5", align 8
  store i32 0, i32* %1, align 4
  %18 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %19 = getelementptr i8, i8* %18, i64 -24
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %21
  %23 = bitcast i8* %22 to %"class.std::basic_ios"*
  %24 = call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %23, %"class.std::basic_ostream"* null)
  %25 = call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %26 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %2)
  %27 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %26, i32* dereferenceable(4) %3)
  %28 = load i32, i32* %2, align 4
  call void @_ZN2STI1MEC2Ei(%struct.ST* %4, i32 %28)
  store i32 0, i32* %5, align 4
  br label %29

; <label>:29:                                     ; preds = %130, %0
  %30 = load i32, i32* %5, align 4
  %31 = load i32, i32* %2, align 4
  %32 = icmp slt i32 %30, %31
  br i1 %32, label %33, label %139

; <label>:33:                                     ; preds = %29
  %34 = load i32, i32* @x.1
  %35 = load i32, i32* @y.2
  %36 = sub i32 %34, -1577118352
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -1577118352
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  br i1 %46, label %48, label %486

; <label>:48:                                     ; preds = %33, %486
  %49 = getelementptr inbounds %struct.ST, %struct.ST* %4, i32 0, i32 1
  %50 = load i32, i32* %5, align 4
  %51 = load i32, i32* %2, align 4
  %52 = sub i32 0, %50
  %53 = sub i32 0, %51
  %54 = add i32 %52, %53
  %55 = sub i32 0, %54
  %56 = add nsw i32 %50, %51
  %57 = sext i32 %55 to i64
  %58 = call dereferenceable(24) %"struct.std::array"* @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EEixEm(%"class.std::vector"* %49, i64 %57) #3
  %59 = call i32 @_ZNSt14numeric_limitsIiE3maxEv() #3
  %60 = sext i32 %59 to i64
  store i64 %60, i64* %6, align 8
  %61 = load i32, i32* @x.1
  %62 = load i32, i32* @y.2
  %63 = sub i32 0, 1
  %64 = add i32 %61, %63
  %65 = sub i32 %61, 1
  %66 = mul i32 %61, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %62, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 false, true
  %73 = and i1 %70, false
  %74 = and i1 %68, %72
  %75 = and i1 %71, false
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 false, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  br i1 %84, label %86, label %486

; <label>:86:                                     ; preds = %48
  invoke void @_ZNSt5arrayIxLm3EE4fillERKx(%"struct.std::array"* %58, i64* dereferenceable(8) %6)
          to label %87 unwind label %135

; <label>:87:                                     ; preds = %86
  %88 = load i32, i32* @x.1
  %89 = load i32, i32* @y.2
  %90 = add i32 %88, -664044249
  %91 = sub i32 %90, 1
  %92 = sub i32 %91, -664044249
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = xor i1 %96, true
  %99 = xor i1 %97, true
  %100 = xor i1 true, true
  %101 = and i1 %98, true
  %102 = and i1 %96, %100
  %103 = and i1 %99, true
  %104 = and i1 %97, %100
  %105 = or i1 %101, %102
  %106 = or i1 %103, %104
  %107 = xor i1 %105, %106
  %108 = or i1 %98, %99
  %109 = xor i1 %108, true
  %110 = or i1 true, %100
  %111 = and i1 %109, %110
  %112 = or i1 %107, %111
  %113 = or i1 %96, %97
  br i1 %112, label %114, label %505

; <label>:114:                                    ; preds = %87, %505
  %115 = load i32, i32* @x.1
  %116 = load i32, i32* @y.2
  %117 = sub i32 %115, -1904113648
  %118 = sub i32 %117, 1
  %119 = add i32 %118, -1904113648
  %120 = sub i32 %115, 1
  %121 = mul i32 %115, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %116, 10
  %125 = and i1 %123, %124
  %126 = xor i1 %123, %124
  %127 = or i1 %125, %126
  %128 = or i1 %123, %124
  br i1 %127, label %129, label %505

; <label>:129:                                    ; preds = %114
  br label %130

; <label>:130:                                    ; preds = %129
  %131 = load i32, i32* %5, align 4
  %132 = sub i32 0, 1
  %133 = sub i32 %131, %132
  %134 = add nsw i32 %131, 1
  store i32 %133, i32* %5, align 4
  br label %29

; <label>:135:                                    ; preds = %369, %326, %283, %281, %278, %232, %224, %222, %190, %185, %139, %86
  %136 = landingpad { i8*, i32 }
          cleanup
  %137 = extractvalue { i8*, i32 } %136, 0
  store i8* %137, i8** %7, align 8
  %138 = extractvalue { i8*, i32 } %136, 1
  store i32 %138, i32* %8, align 4
  call void @_ZN2STI1MED2Ev(%struct.ST* %4) #3
  br label %440

; <label>:139:                                    ; preds = %29
  invoke void @_ZN2STI1ME5buildEv(%struct.ST* %4)
          to label %140 unwind label %135

; <label>:140:                                    ; preds = %139
  store i32 0, i32* %9, align 4
  br label %141

; <label>:141:                                    ; preds = %402, %140
  %142 = load i32, i32* @x.1
  %143 = load i32, i32* @y.2
  %144 = sub i32 0, 1
  %145 = add i32 %142, %144
  %146 = sub i32 %142, 1
  %147 = mul i32 %142, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %143, 10
  %151 = xor i1 %149, true
  %152 = xor i1 %150, true
  %153 = xor i1 false, true
  %154 = and i1 %151, false
  %155 = and i1 %149, %153
  %156 = and i1 %152, false
  %157 = and i1 %150, %153
  %158 = or i1 %154, %155
  %159 = or i1 %156, %157
  %160 = xor i1 %158, %159
  %161 = or i1 %151, %152
  %162 = xor i1 %161, true
  %163 = or i1 false, %153
  %164 = and i1 %162, %163
  %165 = or i1 %160, %164
  %166 = or i1 %149, %150
  br i1 %165, label %167, label %506

; <label>:167:                                    ; preds = %141, %506
  %168 = load i32, i32* %9, align 4
  %169 = load i32, i32* %3, align 4
  %170 = icmp slt i32 %168, %169
  %171 = load i32, i32* @x.1
  %172 = load i32, i32* @y.2
  %173 = sub i32 0, 1
  %174 = add i32 %171, %173
  %175 = sub i32 %171, 1
  %176 = mul i32 %171, %174
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %172, 10
  %180 = and i1 %178, %179
  %181 = xor i1 %178, %179
  %182 = or i1 %180, %181
  %183 = or i1 %178, %179
  br i1 %182, label %184, label %506

; <label>:184:                                    ; preds = %167
  br i1 %170, label %185, label %408

; <label>:185:                                    ; preds = %184
  %186 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %10)
          to label %187 unwind label %135

; <label>:187:                                    ; preds = %185
  %188 = load i32, i32* %10, align 4
  %189 = icmp ne i32 %188, 0
  br i1 %189, label %190, label %281

; <label>:190:                                    ; preds = %187
  %191 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %11)
          to label %192 unwind label %135

; <label>:192:                                    ; preds = %190
  %193 = load i32, i32* @x.1
  %194 = load i32, i32* @y.2
  %195 = sub i32 %193, -1455991621
  %196 = sub i32 %195, 1
  %197 = add i32 %196, -1455991621
  %198 = sub i32 %193, 1
  %199 = mul i32 %193, %197
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %194, 10
  %203 = and i1 %201, %202
  %204 = xor i1 %201, %202
  %205 = or i1 %203, %204
  %206 = or i1 %201, %202
  br i1 %205, label %207, label %510

; <label>:207:                                    ; preds = %192, %510
  %208 = load i32, i32* @x.1
  %209 = load i32, i32* @y.2
  %210 = sub i32 %208, -1860985805
  %211 = sub i32 %210, 1
  %212 = add i32 %211, -1860985805
  %213 = sub i32 %208, 1
  %214 = mul i32 %208, %212
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %209, 10
  %218 = and i1 %216, %217
  %219 = xor i1 %216, %217
  %220 = or i1 %218, %219
  %221 = or i1 %216, %217
  br i1 %220, label %222, label %510

; <label>:222:                                    ; preds = %207
  %223 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %191, i32* dereferenceable(4) %12)
          to label %224 unwind label %135

; <label>:224:                                    ; preds = %222
  %225 = load i32, i32* %12, align 4
  %226 = add i32 %225, 1522996589
  %227 = add i32 %226, 1
  %228 = sub i32 %227, 1522996589
  %229 = add nsw i32 %225, 1
  store i32 %228, i32* %12, align 4
  %230 = load i32, i32* %11, align 4
  %231 = load i32, i32* %12, align 4
  invoke void @_ZN2STI1ME3getEii(%"struct.std::array"* sret %13, %struct.ST* %4, i32 %230, i32 %231)
          to label %232 unwind label %135

; <label>:232:                                    ; preds = %224
  %233 = call dereferenceable(8) i64* @_ZNSt5arrayIxLm3EEixEm(%"struct.std::array"* %13, i64 0) #3
  %234 = load i64, i64* %233, align 8
  %235 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %234)
          to label %236 unwind label %135

; <label>:236:                                    ; preds = %232
  %237 = load i32, i32* @x.1
  %238 = load i32, i32* @y.2
  %239 = add i32 %237, -1658913360
  %240 = sub i32 %239, 1
  %241 = sub i32 %240, -1658913360
  %242 = sub i32 %237, 1
  %243 = mul i32 %237, %241
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %238, 10
  %247 = xor i1 %245, true
  %248 = xor i1 %246, true
  %249 = xor i1 false, true
  %250 = and i1 %247, false
  %251 = and i1 %245, %249
  %252 = and i1 %248, false
  %253 = and i1 %246, %249
  %254 = or i1 %250, %251
  %255 = or i1 %252, %253
  %256 = xor i1 %254, %255
  %257 = or i1 %247, %248
  %258 = xor i1 %257, true
  %259 = or i1 false, %249
  %260 = and i1 %258, %259
  %261 = or i1 %256, %260
  %262 = or i1 %245, %246
  br i1 %261, label %263, label %511

; <label>:263:                                    ; preds = %236, %511
  %264 = load i32, i32* @x.1
  %265 = load i32, i32* @y.2
  %266 = sub i32 %264, -1383668763
  %267 = sub i32 %266, 1
  %268 = add i32 %267, -1383668763
  %269 = sub i32 %264, 1
  %270 = mul i32 %264, %268
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %265, 10
  %274 = and i1 %272, %273
  %275 = xor i1 %272, %273
  %276 = or i1 %274, %275
  %277 = or i1 %272, %273
  br i1 %276, label %278, label %511

; <label>:278:                                    ; preds = %263
  %279 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272) %235, i8 signext 10)
          to label %280 unwind label %135

; <label>:280:                                    ; preds = %278
  br label %371

; <label>:281:                                    ; preds = %187
  %282 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %14)
          to label %283 unwind label %135

; <label>:283:                                    ; preds = %281
  %284 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %282, i32* dereferenceable(4) %15)
          to label %285 unwind label %135

; <label>:285:                                    ; preds = %283
  %286 = load i32, i32* @x.1
  %287 = load i32, i32* @y.2
  %288 = sub i32 0, 1
  %289 = add i32 %286, %288
  %290 = sub i32 %286, 1
  %291 = mul i32 %286, %289
  %292 = urem i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %287, 10
  %295 = xor i1 %293, true
  %296 = xor i1 %294, true
  %297 = xor i1 false, true
  %298 = and i1 %295, false
  %299 = and i1 %293, %297
  %300 = and i1 %296, false
  %301 = and i1 %294, %297
  %302 = or i1 %298, %299
  %303 = or i1 %300, %301
  %304 = xor i1 %302, %303
  %305 = or i1 %295, %296
  %306 = xor i1 %305, true
  %307 = or i1 false, %297
  %308 = and i1 %306, %307
  %309 = or i1 %304, %308
  %310 = or i1 %293, %294
  br i1 %309, label %311, label %512

; <label>:311:                                    ; preds = %285, %512
  %312 = load i32, i32* @x.1
  %313 = load i32, i32* @y.2
  %314 = add i32 %312, 1383561028
  %315 = sub i32 %314, 1
  %316 = sub i32 %315, 1383561028
  %317 = sub i32 %312, 1
  %318 = mul i32 %312, %316
  %319 = urem i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %313, 10
  %322 = and i1 %320, %321
  %323 = xor i1 %320, %321
  %324 = or i1 %322, %323
  %325 = or i1 %320, %321
  br i1 %324, label %326, label %512

; <label>:326:                                    ; preds = %311
  %327 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %284, i32* dereferenceable(4) %16)
          to label %328 unwind label %135

; <label>:328:                                    ; preds = %326
  %329 = load i32, i32* @x.1
  %330 = load i32, i32* @y.2
  %331 = sub i32 0, 1
  %332 = add i32 %329, %331
  %333 = sub i32 %329, 1
  %334 = mul i32 %329, %332
  %335 = urem i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %330, 10
  %338 = and i1 %336, %337
  %339 = xor i1 %336, %337
  %340 = or i1 %338, %339
  %341 = or i1 %336, %337
  br i1 %340, label %342, label %513

; <label>:342:                                    ; preds = %328, %513
  %343 = load i32, i32* %15, align 4
  %344 = sub i32 %343, 613317607
  %345 = add i32 %344, 1
  %346 = add i32 %345, 613317607
  %347 = add nsw i32 %343, 1
  store i32 %346, i32* %15, align 4
  %348 = load i32, i32* %14, align 4
  %349 = load i32, i32* %15, align 4
  %350 = getelementptr inbounds %"struct.std::array.5", %"struct.std::array.5"* %17, i32 0, i32 0
  %351 = getelementptr inbounds [2 x i64], [2 x i64]* %350, i64 0, i64 0
  store i64 0, i64* %351, align 8
  %352 = getelementptr inbounds i64, i64* %351, i64 1
  %353 = load i32, i32* %16, align 4
  %354 = sext i32 %353 to i64
  store i64 %354, i64* %352, align 8
  %355 = load i32, i32* @x.1
  %356 = load i32, i32* @y.2
  %357 = add i32 %355, 272207418
  %358 = sub i32 %357, 1
  %359 = sub i32 %358, 272207418
  %360 = sub i32 %355, 1
  %361 = mul i32 %355, %359
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %356, 10
  %365 = and i1 %363, %364
  %366 = xor i1 %363, %364
  %367 = or i1 %365, %366
  %368 = or i1 %363, %364
  br i1 %367, label %369, label %513

; <label>:369:                                    ; preds = %342
  invoke void @_ZN2STI1ME3setEiiRKSt5arrayIxLm2EE(%struct.ST* %4, i32 %348, i32 %349, %"struct.std::array.5"* dereferenceable(16) %17)
          to label %370 unwind label %135

; <label>:370:                                    ; preds = %369
  br label %371

; <label>:371:                                    ; preds = %370, %280
  %372 = load i32, i32* @x.1
  %373 = load i32, i32* @y.2
  %374 = add i32 %372, -989595674
  %375 = sub i32 %374, 1
  %376 = sub i32 %375, -989595674
  %377 = sub i32 %372, 1
  %378 = mul i32 %372, %376
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %373, 10
  %382 = and i1 %380, %381
  %383 = xor i1 %380, %381
  %384 = or i1 %382, %383
  %385 = or i1 %380, %381
  br i1 %384, label %386, label %544

; <label>:386:                                    ; preds = %371, %544
  %387 = load i32, i32* @x.1
  %388 = load i32, i32* @y.2
  %389 = sub i32 %387, -54077408
  %390 = sub i32 %389, 1
  %391 = add i32 %390, -54077408
  %392 = sub i32 %387, 1
  %393 = mul i32 %387, %391
  %394 = urem i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = icmp slt i32 %388, 10
  %397 = and i1 %395, %396
  %398 = xor i1 %395, %396
  %399 = or i1 %397, %398
  %400 = or i1 %395, %396
  br i1 %399, label %401, label %544

; <label>:401:                                    ; preds = %386
  br label %402

; <label>:402:                                    ; preds = %401
  %403 = load i32, i32* %9, align 4
  %404 = sub i32 %403, -782813539
  %405 = add i32 %404, 1
  %406 = add i32 %405, -782813539
  %407 = add nsw i32 %403, 1
  store i32 %406, i32* %9, align 4
  br label %141

; <label>:408:                                    ; preds = %184
  %409 = load i32, i32* @x.1
  %410 = load i32, i32* @y.2
  %411 = sub i32 %409, -1322096342
  %412 = sub i32 %411, 1
  %413 = add i32 %412, -1322096342
  %414 = sub i32 %409, 1
  %415 = mul i32 %409, %413
  %416 = urem i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = icmp slt i32 %410, 10
  %419 = and i1 %417, %418
  %420 = xor i1 %417, %418
  %421 = or i1 %419, %420
  %422 = or i1 %417, %418
  br i1 %421, label %423, label %545

; <label>:423:                                    ; preds = %408, %545
  call void @_ZN2STI1MED2Ev(%struct.ST* %4) #3
  %424 = load i32, i32* %1, align 4
  %425 = load i32, i32* @x.1
  %426 = load i32, i32* @y.2
  %427 = add i32 %425, -1342534212
  %428 = sub i32 %427, 1
  %429 = sub i32 %428, -1342534212
  %430 = sub i32 %425, 1
  %431 = mul i32 %425, %429
  %432 = urem i32 %431, 2
  %433 = icmp eq i32 %432, 0
  %434 = icmp slt i32 %426, 10
  %435 = and i1 %433, %434
  %436 = xor i1 %433, %434
  %437 = or i1 %435, %436
  %438 = or i1 %433, %434
  br i1 %437, label %439, label %545

; <label>:439:                                    ; preds = %423
  ret i32 %424

; <label>:440:                                    ; preds = %135
  %441 = load i32, i32* @x.1
  %442 = load i32, i32* @y.2
  %443 = sub i32 %441, 387637348
  %444 = sub i32 %443, 1
  %445 = add i32 %444, 387637348
  %446 = sub i32 %441, 1
  %447 = mul i32 %441, %445
  %448 = urem i32 %447, 2
  %449 = icmp eq i32 %448, 0
  %450 = icmp slt i32 %442, 10
  %451 = and i1 %449, %450
  %452 = xor i1 %449, %450
  %453 = or i1 %451, %452
  %454 = or i1 %449, %450
  br i1 %453, label %455, label %547

; <label>:455:                                    ; preds = %440, %547
  %456 = load i8*, i8** %7, align 8
  %457 = load i32, i32* %8, align 4
  %458 = insertvalue { i8*, i32 } undef, i8* %456, 0
  %459 = insertvalue { i8*, i32 } %458, i32 %457, 1
  %460 = load i32, i32* @x.1
  %461 = load i32, i32* @y.2
  %462 = sub i32 0, 1
  %463 = add i32 %460, %462
  %464 = sub i32 %460, 1
  %465 = mul i32 %460, %463
  %466 = urem i32 %465, 2
  %467 = icmp eq i32 %466, 0
  %468 = icmp slt i32 %461, 10
  %469 = xor i1 %467, true
  %470 = xor i1 %468, true
  %471 = xor i1 true, true
  %472 = and i1 %469, true
  %473 = and i1 %467, %471
  %474 = and i1 %470, true
  %475 = and i1 %468, %471
  %476 = or i1 %472, %473
  %477 = or i1 %474, %475
  %478 = xor i1 %476, %477
  %479 = or i1 %469, %470
  %480 = xor i1 %479, true
  %481 = or i1 true, %471
  %482 = and i1 %480, %481
  %483 = or i1 %478, %482
  %484 = or i1 %467, %468
  br i1 %483, label %485, label %547

; <label>:485:                                    ; preds = %455
  resume { i8*, i32 } %459

; <label>:486:                                    ; preds = %48, %33
  %487 = getelementptr inbounds %struct.ST, %struct.ST* %4, i32 0, i32 1
  %488 = load i32, i32* %5, align 4
  %489 = load i32, i32* %2, align 4
  %490 = add i32 %488, 98657475
  %491 = sub i32 %490, %489
  %492 = sub i32 %491, 98657475
  %493 = sub i32 %488, %489
  %494 = mul i32 %492, %489
  %495 = shl i32 %488, %489
  %496 = sub i32 0, %488
  %497 = sub i32 0, %489
  %498 = add i32 %496, %497
  %499 = sub i32 0, %498
  %500 = add nsw i32 %488, %489
  %501 = sext i32 %499 to i64
  %502 = call dereferenceable(24) %"struct.std::array"* @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EEixEm(%"class.std::vector"* %487, i64 %501) #3
  %503 = call i32 @_ZNSt14numeric_limitsIiE3maxEv() #3
  %504 = sext i32 %503 to i64
  store i64 %504, i64* %6, align 8
  br label %48

; <label>:505:                                    ; preds = %114, %87
  br label %114

; <label>:506:                                    ; preds = %167, %141
  %507 = load i32, i32* %9, align 4
  %508 = load i32, i32* %3, align 4
  %509 = icmp slt i32 %507, %508
  br label %167

; <label>:510:                                    ; preds = %207, %192
  br label %207

; <label>:511:                                    ; preds = %263, %236
  br label %263

; <label>:512:                                    ; preds = %311, %285
  br label %311

; <label>:513:                                    ; preds = %342, %328
  %514 = load i32, i32* %15, align 4
  %515 = add i32 0, -4234714
  %516 = sub i32 %515, %514
  %517 = sub i32 %516, -4234714
  %518 = sub i32 0, %514
  %519 = sub i32 %517, 2032136305
  %520 = add i32 %519, 1
  %521 = add i32 %520, 2032136305
  %522 = add i32 %517, 1
  %523 = sub i32 0, 1
  %524 = add i32 %514, %523
  %525 = sub i32 %514, 1
  %526 = mul i32 %524, 1
  %527 = add i32 0, -801474173
  %528 = sub i32 %527, %514
  %529 = sub i32 %528, -801474173
  %530 = sub i32 0, %514
  %531 = sub i32 0, 1
  %532 = sub i32 %529, %531
  %533 = add i32 %529, 1
  %534 = sub i32 0, 1
  %535 = sub i32 %514, %534
  %536 = add nsw i32 %514, 1
  store i32 %535, i32* %15, align 4
  %537 = load i32, i32* %14, align 4
  %538 = load i32, i32* %15, align 4
  %539 = getelementptr inbounds %"struct.std::array.5", %"struct.std::array.5"* %17, i32 0, i32 0
  %540 = getelementptr inbounds [2 x i64], [2 x i64]* %539, i64 0, i64 0
  store i64 0, i64* %540, align 8
  %541 = getelementptr inbounds i64, i64* %540, i64 1
  %542 = load i32, i32* %16, align 4
  %543 = sext i32 %542 to i64
  store i64 %543, i64* %541, align 8
  br label %342

; <label>:544:                                    ; preds = %386, %371
  br label %386

; <label>:545:                                    ; preds = %423, %408
  call void @_ZN2STI1MED2Ev(%struct.ST* %4) #3
  %546 = load i32, i32* %1, align 4
  br label %423

; <label>:547:                                    ; preds = %455, %440
  %548 = load i8*, i8** %7, align 8
  %549 = load i32, i32* %8, align 4
  %550 = insertvalue { i8*, i32 } undef, i8* %548, 0
  %551 = insertvalue { i8*, i32 } %550, i32 %549, 1
  br label %455
}

declare %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"*, %"class.std::basic_ostream"*) #1

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN2STI1MEC2Ei(%struct.ST*, i32) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.3
  %4 = load i32, i32* @y.4
  %5 = sub i32 %3, -673862640
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -673862640
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %325

; <label>:29:                                     ; preds = %2, %325
  %30 = alloca %struct.ST*, align 8
  %31 = alloca i32, align 4
  %32 = alloca %"struct.std::array", align 8
  %33 = alloca i8*
  %34 = alloca i32
  %35 = alloca %"struct.std::array.5", align 8
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  store %struct.ST* %0, %struct.ST** %30, align 8
  store i32 %1, i32* %31, align 4
  %38 = load %struct.ST*, %struct.ST** %30, align 8
  %39 = getelementptr inbounds %struct.ST, %struct.ST* %38, i32 0, i32 0
  %40 = load i32, i32* %31, align 4
  store i32 %40, i32* %39, align 8
  %41 = getelementptr inbounds %struct.ST, %struct.ST* %38, i32 0, i32 1
  call void @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EEC2Ev(%"class.std::vector"* %41) #3
  %42 = getelementptr inbounds %struct.ST, %struct.ST* %38, i32 0, i32 2
  call void @_ZNSt6vectorISt5arrayIxLm2EESaIS1_EEC2Ev(%"class.std::vector.0"* %42) #3
  %43 = getelementptr inbounds %struct.ST, %struct.ST* %38, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.6"* %43) #3
  %44 = getelementptr inbounds %struct.ST, %struct.ST* %38, i32 0, i32 1
  %45 = load i32, i32* %31, align 4
  %46 = mul nsw i32 2, %45
  %47 = sext i32 %46 to i64
  %48 = load i32, i32* @x.3
  %49 = load i32, i32* @y.4
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  br i1 %59, label %61, label %325

; <label>:61:                                     ; preds = %29
  invoke void @_ZN1M1eEv(%"struct.std::array"* sret %32)
          to label %62 unwind label %244

; <label>:62:                                     ; preds = %61
  invoke void @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EE6assignEmRKS1_(%"class.std::vector"* %44, i64 %47, %"struct.std::array"* dereferenceable(24) %32)
          to label %63 unwind label %244

; <label>:63:                                     ; preds = %62
  %64 = load i32, i32* @x.3
  %65 = load i32, i32* @y.4
  %66 = sub i32 %64, 145234613
  %67 = sub i32 %66, 1
  %68 = add i32 %67, 145234613
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 true, true
  %77 = and i1 %74, true
  %78 = and i1 %72, %76
  %79 = and i1 %75, true
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 true, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  br i1 %88, label %90, label %366

; <label>:90:                                     ; preds = %63, %366
  %91 = getelementptr inbounds %struct.ST, %struct.ST* %38, i32 0, i32 2
  %92 = load i32, i32* %31, align 4
  %93 = sext i32 %92 to i64
  %94 = load i32, i32* @x.3
  %95 = load i32, i32* @y.4
  %96 = add i32 %94, 1134521962
  %97 = sub i32 %96, 1
  %98 = sub i32 %97, 1134521962
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = xor i1 %102, true
  %105 = xor i1 %103, true
  %106 = xor i1 false, true
  %107 = and i1 %104, false
  %108 = and i1 %102, %106
  %109 = and i1 %105, false
  %110 = and i1 %103, %106
  %111 = or i1 %107, %108
  %112 = or i1 %109, %110
  %113 = xor i1 %111, %112
  %114 = or i1 %104, %105
  %115 = xor i1 %114, true
  %116 = or i1 false, %106
  %117 = and i1 %115, %116
  %118 = or i1 %113, %117
  %119 = or i1 %102, %103
  br i1 %118, label %120, label %366

; <label>:120:                                    ; preds = %90
  %121 = invoke { i64, i64 } @_ZN1M2idEv()
          to label %122 unwind label %244

; <label>:122:                                    ; preds = %120
  %123 = load i32, i32* @x.3
  %124 = load i32, i32* @y.4
  %125 = sub i32 0, 1
  %126 = add i32 %123, %125
  %127 = sub i32 %123, 1
  %128 = mul i32 %123, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %124, 10
  %132 = and i1 %130, %131
  %133 = xor i1 %130, %131
  %134 = or i1 %132, %133
  %135 = or i1 %130, %131
  br i1 %134, label %136, label %370

; <label>:136:                                    ; preds = %122, %370
  %137 = getelementptr inbounds %"struct.std::array.5", %"struct.std::array.5"* %35, i32 0, i32 0
  %138 = bitcast [2 x i64]* %137 to { i64, i64 }*
  %139 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %138, i32 0, i32 0
  %140 = extractvalue { i64, i64 } %121, 0
  store i64 %140, i64* %139, align 8
  %141 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %138, i32 0, i32 1
  %142 = extractvalue { i64, i64 } %121, 1
  store i64 %142, i64* %141, align 8
  %143 = load i32, i32* @x.3
  %144 = load i32, i32* @y.4
  %145 = add i32 %143, 2016604474
  %146 = sub i32 %145, 1
  %147 = sub i32 %146, 2016604474
  %148 = sub i32 %143, 1
  %149 = mul i32 %143, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %144, 10
  %153 = and i1 %151, %152
  %154 = xor i1 %151, %152
  %155 = or i1 %153, %154
  %156 = or i1 %151, %152
  br i1 %155, label %157, label %370

; <label>:157:                                    ; preds = %136
  invoke void @_ZNSt6vectorISt5arrayIxLm2EESaIS1_EE6assignEmRKS1_(%"class.std::vector.0"* %91, i64 %93, %"struct.std::array.5"* dereferenceable(16) %35)
          to label %158 unwind label %244

; <label>:158:                                    ; preds = %157
  %159 = getelementptr inbounds %struct.ST, %struct.ST* %38, i32 0, i32 3
  %160 = load i32, i32* %31, align 4
  %161 = mul nsw i32 2, %160
  %162 = sext i32 %161 to i64
  store i32 1, i32* %36, align 4
  invoke void @_ZNSt6vectorIiSaIiEE6assignEmRKi(%"class.std::vector.6"* %159, i64 %162, i32* dereferenceable(4) %36)
          to label %163 unwind label %244

; <label>:163:                                    ; preds = %158
  %164 = load i32, i32* %31, align 4
  %165 = add i32 %164, 584463517
  %166 = sub i32 %165, 1
  %167 = sub i32 %166, 584463517
  %168 = sub nsw i32 %164, 1
  store i32 %167, i32* %37, align 4
  br label %169

; <label>:169:                                    ; preds = %243, %163
  %170 = load i32, i32* %37, align 4
  %171 = icmp ne i32 %170, 0
  br i1 %171, label %172, label %248

; <label>:172:                                    ; preds = %169
  %173 = getelementptr inbounds %struct.ST, %struct.ST* %38, i32 0, i32 3
  %174 = load i32, i32* %37, align 4
  %175 = mul nsw i32 2, %174
  %176 = sext i32 %175 to i64
  %177 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.6"* %173, i64 %176) #3
  %178 = load i32, i32* %177, align 4
  %179 = getelementptr inbounds %struct.ST, %struct.ST* %38, i32 0, i32 3
  %180 = load i32, i32* %37, align 4
  %181 = mul nsw i32 2, %180
  %182 = sub i32 0, 1
  %183 = sub i32 %181, %182
  %184 = add nsw i32 %181, 1
  %185 = sext i32 %183 to i64
  %186 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.6"* %179, i64 %185) #3
  %187 = load i32, i32* %186, align 4
  %188 = sub i32 0, %187
  %189 = sub i32 %178, %188
  %190 = add nsw i32 %178, %187
  %191 = getelementptr inbounds %struct.ST, %struct.ST* %38, i32 0, i32 3
  %192 = load i32, i32* %37, align 4
  %193 = sext i32 %192 to i64
  %194 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.6"* %191, i64 %193) #3
  store i32 %189, i32* %194, align 4
  br label %195

; <label>:195:                                    ; preds = %172
  %196 = load i32, i32* @x.3
  %197 = load i32, i32* @y.4
  %198 = add i32 %196, 1098614263
  %199 = sub i32 %198, 1
  %200 = sub i32 %199, 1098614263
  %201 = sub i32 %196, 1
  %202 = mul i32 %196, %200
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %197, 10
  %206 = and i1 %204, %205
  %207 = xor i1 %204, %205
  %208 = or i1 %206, %207
  %209 = or i1 %204, %205
  br i1 %208, label %210, label %377

; <label>:210:                                    ; preds = %195, %377
  %211 = load i32, i32* %37, align 4
  %212 = sub i32 0, %211
  %213 = sub i32 0, -1
  %214 = add i32 %212, %213
  %215 = sub i32 0, %214
  %216 = add nsw i32 %211, -1
  store i32 %215, i32* %37, align 4
  %217 = load i32, i32* @x.3
  %218 = load i32, i32* @y.4
  %219 = add i32 %217, -232718078
  %220 = sub i32 %219, 1
  %221 = sub i32 %220, -232718078
  %222 = sub i32 %217, 1
  %223 = mul i32 %217, %221
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %218, 10
  %227 = xor i1 %225, true
  %228 = xor i1 %226, true
  %229 = xor i1 false, true
  %230 = and i1 %227, false
  %231 = and i1 %225, %229
  %232 = and i1 %228, false
  %233 = and i1 %226, %229
  %234 = or i1 %230, %231
  %235 = or i1 %232, %233
  %236 = xor i1 %234, %235
  %237 = or i1 %227, %228
  %238 = xor i1 %237, true
  %239 = or i1 false, %229
  %240 = and i1 %238, %239
  %241 = or i1 %236, %240
  %242 = or i1 %225, %226
  br i1 %241, label %243, label %377

; <label>:243:                                    ; preds = %210
  br label %169

; <label>:244:                                    ; preds = %158, %157, %120, %62, %61
  %245 = landingpad { i8*, i32 }
          cleanup
  %246 = extractvalue { i8*, i32 } %245, 0
  store i8* %246, i8** %33, align 8
  %247 = extractvalue { i8*, i32 } %245, 1
  store i32 %247, i32* %34, align 4
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.6"* %43) #3
  call void @_ZNSt6vectorISt5arrayIxLm2EESaIS1_EED2Ev(%"class.std::vector.0"* %42) #3
  call void @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EED2Ev(%"class.std::vector"* %41) #3
  br label %278

; <label>:248:                                    ; preds = %169
  %249 = load i32, i32* @x.3
  %250 = load i32, i32* @y.4
  %251 = add i32 %249, 1366798618
  %252 = sub i32 %251, 1
  %253 = sub i32 %252, 1366798618
  %254 = sub i32 %249, 1
  %255 = mul i32 %249, %253
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %250, 10
  %259 = and i1 %257, %258
  %260 = xor i1 %257, %258
  %261 = or i1 %259, %260
  %262 = or i1 %257, %258
  br i1 %261, label %263, label %387

; <label>:263:                                    ; preds = %248, %387
  %264 = load i32, i32* @x.3
  %265 = load i32, i32* @y.4
  %266 = sub i32 0, 1
  %267 = add i32 %264, %266
  %268 = sub i32 %264, 1
  %269 = mul i32 %264, %267
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %265, 10
  %273 = and i1 %271, %272
  %274 = xor i1 %271, %272
  %275 = or i1 %273, %274
  %276 = or i1 %271, %272
  br i1 %275, label %277, label %387

; <label>:277:                                    ; preds = %263
  ret void

; <label>:278:                                    ; preds = %244
  %279 = load i32, i32* @x.3
  %280 = load i32, i32* @y.4
  %281 = add i32 %279, 932683028
  %282 = sub i32 %281, 1
  %283 = sub i32 %282, 932683028
  %284 = sub i32 %279, 1
  %285 = mul i32 %279, %283
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %280, 10
  %289 = xor i1 %287, true
  %290 = xor i1 %288, true
  %291 = xor i1 true, true
  %292 = and i1 %289, true
  %293 = and i1 %287, %291
  %294 = and i1 %290, true
  %295 = and i1 %288, %291
  %296 = or i1 %292, %293
  %297 = or i1 %294, %295
  %298 = xor i1 %296, %297
  %299 = or i1 %289, %290
  %300 = xor i1 %299, true
  %301 = or i1 true, %291
  %302 = and i1 %300, %301
  %303 = or i1 %298, %302
  %304 = or i1 %287, %288
  br i1 %303, label %305, label %388

; <label>:305:                                    ; preds = %278, %388
  %306 = load i8*, i8** %33, align 8
  %307 = load i32, i32* %34, align 4
  %308 = insertvalue { i8*, i32 } undef, i8* %306, 0
  %309 = insertvalue { i8*, i32 } %308, i32 %307, 1
  %310 = load i32, i32* @x.3
  %311 = load i32, i32* @y.4
  %312 = add i32 %310, -939570480
  %313 = sub i32 %312, 1
  %314 = sub i32 %313, -939570480
  %315 = sub i32 %310, 1
  %316 = mul i32 %310, %314
  %317 = urem i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %311, 10
  %320 = and i1 %318, %319
  %321 = xor i1 %318, %319
  %322 = or i1 %320, %321
  %323 = or i1 %318, %319
  br i1 %322, label %324, label %388

; <label>:324:                                    ; preds = %305
  resume { i8*, i32 } %309

; <label>:325:                                    ; preds = %29, %2
  %326 = alloca %struct.ST*, align 8
  %327 = alloca i32, align 4
  %328 = alloca %"struct.std::array", align 8
  %329 = alloca i8*
  %330 = alloca i32
  %331 = alloca %"struct.std::array.5", align 8
  %332 = alloca i32, align 4
  %333 = alloca i32, align 4
  store %struct.ST* %0, %struct.ST** %326, align 8
  store i32 %1, i32* %327, align 4
  %334 = load %struct.ST*, %struct.ST** %326, align 8
  %335 = getelementptr inbounds %struct.ST, %struct.ST* %334, i32 0, i32 0
  %336 = load i32, i32* %327, align 4
  store i32 %336, i32* %335, align 8
  %337 = getelementptr inbounds %struct.ST, %struct.ST* %334, i32 0, i32 1
  call void @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EEC2Ev(%"class.std::vector"* %337) #3
  %338 = getelementptr inbounds %struct.ST, %struct.ST* %334, i32 0, i32 2
  call void @_ZNSt6vectorISt5arrayIxLm2EESaIS1_EEC2Ev(%"class.std::vector.0"* %338) #3
  %339 = getelementptr inbounds %struct.ST, %struct.ST* %334, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.6"* %339) #3
  %340 = getelementptr inbounds %struct.ST, %struct.ST* %334, i32 0, i32 1
  %341 = load i32, i32* %327, align 4
  %342 = shl i32 2, %341
  %343 = add i32 0, -1770261660
  %344 = sub i32 %343, 2
  %345 = sub i32 %344, -1770261660
  %346 = sub i32 0, 2
  %347 = sub i32 %345, -70688320
  %348 = add i32 %347, %341
  %349 = add i32 %348, -70688320
  %350 = add i32 %345, %341
  %351 = add i32 2, 1243637918
  %352 = sub i32 %351, %341
  %353 = sub i32 %352, 1243637918
  %354 = sub i32 2, %341
  %355 = mul i32 %353, %341
  %356 = add i32 0, -244453033
  %357 = sub i32 %356, 2
  %358 = sub i32 %357, -244453033
  %359 = sub i32 0, 2
  %360 = add i32 %358, 741532017
  %361 = add i32 %360, %341
  %362 = sub i32 %361, 741532017
  %363 = add i32 %358, %341
  %364 = mul nsw i32 2, %341
  %365 = sext i32 %364 to i64
  br label %29

; <label>:366:                                    ; preds = %90, %63
  %367 = getelementptr inbounds %struct.ST, %struct.ST* %38, i32 0, i32 2
  %368 = load i32, i32* %31, align 4
  %369 = sext i32 %368 to i64
  br label %90

; <label>:370:                                    ; preds = %136, %122
  %371 = getelementptr inbounds %"struct.std::array.5", %"struct.std::array.5"* %35, i32 0, i32 0
  %372 = bitcast [2 x i64]* %371 to { i64, i64 }*
  %373 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %372, i32 0, i32 0
  %374 = extractvalue { i64, i64 } %121, 0
  store i64 %374, i64* %373, align 8
  %375 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %372, i32 0, i32 1
  %376 = extractvalue { i64, i64 } %121, 1
  store i64 %376, i64* %375, align 8
  br label %136

; <label>:377:                                    ; preds = %210, %195
  %378 = load i32, i32* %37, align 4
  %379 = sub i32 0, -1
  %380 = add i32 %378, %379
  %381 = sub i32 %378, -1
  %382 = mul i32 %380, -1
  %383 = add i32 %378, 280910636
  %384 = add i32 %383, -1
  %385 = sub i32 %384, 280910636
  %386 = add nsw i32 %378, -1
  store i32 %385, i32* %37, align 4
  br label %210

; <label>:387:                                    ; preds = %263, %248
  br label %263

; <label>:388:                                    ; preds = %305, %278
  %389 = load i8*, i8** %33, align 8
  %390 = load i32, i32* %34, align 4
  %391 = insertvalue { i8*, i32 } undef, i8* %389, 0
  %392 = insertvalue { i8*, i32 } %391, i32 %390, 1
  br label %305
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"struct.std::array"* @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EEixEm(%"class.std::vector"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.std::array"*, %"struct.std::array"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %9, i64 %10
  ret %"struct.std::array"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5arrayIxLm3EE4fillERKx(%"struct.std::array"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::array"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::array"* %0, %"struct.std::array"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::array"*, %"struct.std::array"** %3, align 8
  %6 = call i64* @_ZNSt5arrayIxLm3EE5beginEv(%"struct.std::array"* %5) #3
  %7 = call i64 @_ZNKSt5arrayIxLm3EE4sizeEv(%"struct.std::array"* %5) #3
  %8 = load i64*, i64** %4, align 8
  %9 = call i64* @_ZSt6fill_nIPxmxET_S1_T0_RKT1_(i64* %6, i64 %7, i64* dereferenceable(8) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNSt14numeric_limitsIiE3maxEv() #5 comdat align 2 {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.9
  %4 = load i32, i32* @y.10
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %2
  %11 = icmp slt i32 %4, 10
  store i1 %11, i1* %1
  %12 = alloca i32
  store i32 -916726132, i32* %12
  br label %13

; <label>:13:                                     ; preds = %0, %54
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -916726132, label %16
    i32 -1816122327, label %24
    i32 748304175, label %52
    i32 -280687296, label %53
  ]

; <label>:15:                                     ; preds = %13
  br label %54

; <label>:16:                                     ; preds = %13
  %17 = load volatile i1, i1* %2
  %18 = load volatile i1, i1* %1
  %19 = and i1 %17, %18
  %20 = xor i1 %17, %18
  %21 = or i1 %19, %20
  %22 = or i1 %17, %18
  %23 = select i1 %21, i32 -1816122327, i32 -280687296
  store i32 %23, i32* %12
  br label %54

; <label>:24:                                     ; preds = %13
  %25 = load i32, i32* @x.9
  %26 = load i32, i32* @y.10
  %27 = sub i32 %25, 1689183814
  %28 = sub i32 %27, 1
  %29 = add i32 %28, 1689183814
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 false, true
  %38 = and i1 %35, false
  %39 = and i1 %33, %37
  %40 = and i1 %36, false
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 false, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  %51 = select i1 %49, i32 748304175, i32 -280687296
  store i32 %51, i32* %12
  br label %54

; <label>:52:                                     ; preds = %13
  ret i32 2147483647

; <label>:53:                                     ; preds = %13
  store i32 -1816122327, i32* %12
  br label %54

; <label>:54:                                     ; preds = %53, %24, %16, %15
  br label %13
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN2STI1ME5buildEv(%struct.ST*) #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca %struct.ST*
  %4 = alloca %struct.ST*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %"struct.std::array", align 8
  store %struct.ST* %0, %struct.ST** %4, align 8
  %7 = load %struct.ST*, %struct.ST** %4, align 8
  store %struct.ST* %7, %struct.ST** %3
  %8 = load volatile %struct.ST*, %struct.ST** %3
  %9 = getelementptr inbounds %struct.ST, %struct.ST* %8, i32 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, 1241577597
  %12 = sub i32 %11, 1
  %13 = sub i32 %12, 1241577597
  %14 = sub nsw i32 %10, 1
  store i32 %13, i32* %5, align 4
  %15 = alloca i32
  store i32 510535487, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %114
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 510535487, label %19
    i32 -1319920668, label %47
    i32 -182119978, label %76
    i32 -209007312, label %79
    i32 -1303001117, label %103
    i32 -908900252, label %110
    i32 1556690517, label %111
  ]

; <label>:18:                                     ; preds = %16
  br label %114

; <label>:19:                                     ; preds = %16
  %20 = load i32, i32* @x.11
  %21 = load i32, i32* @y.12
  %22 = add i32 %20, 1659768868
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, 1659768868
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 true, true
  %33 = and i1 %30, true
  %34 = and i1 %28, %32
  %35 = and i1 %31, true
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 true, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 -1319920668, i32 1556690517
  store i32 %46, i32* %15
  br label %114

; <label>:47:                                     ; preds = %16
  %48 = load i32, i32* %5, align 4
  %49 = icmp ne i32 %48, 0
  store i1 %49, i1* %2
  %50 = load i32, i32* @x.11
  %51 = load i32, i32* @y.12
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -182119978, i32 1556690517
  store i32 %75, i32* %15
  br label %114

; <label>:76:                                     ; preds = %16
  %77 = load volatile i1, i1* %2
  %78 = select i1 %77, i32 -209007312, i32 -908900252
  store i32 %78, i32* %15
  br label %114

; <label>:79:                                     ; preds = %16
  %80 = load volatile %struct.ST*, %struct.ST** %3
  %81 = getelementptr inbounds %struct.ST, %struct.ST* %80, i32 0, i32 1
  %82 = load i32, i32* %5, align 4
  %83 = mul nsw i32 2, %82
  %84 = sext i32 %83 to i64
  %85 = call dereferenceable(24) %"struct.std::array"* @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EEixEm(%"class.std::vector"* %81, i64 %84) #3
  %86 = load volatile %struct.ST*, %struct.ST** %3
  %87 = getelementptr inbounds %struct.ST, %struct.ST* %86, i32 0, i32 1
  %88 = load i32, i32* %5, align 4
  %89 = mul nsw i32 2, %88
  %90 = sub i32 %89, 1997893940
  %91 = add i32 %90, 1
  %92 = add i32 %91, 1997893940
  %93 = add nsw i32 %89, 1
  %94 = sext i32 %92 to i64
  %95 = call dereferenceable(24) %"struct.std::array"* @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EEixEm(%"class.std::vector"* %87, i64 %94) #3
  call void @_ZN1M2opERKSt5arrayIxLm3EES3_(%"struct.std::array"* sret %6, %"struct.std::array"* dereferenceable(24) %85, %"struct.std::array"* dereferenceable(24) %95)
  %96 = load volatile %struct.ST*, %struct.ST** %3
  %97 = getelementptr inbounds %struct.ST, %struct.ST* %96, i32 0, i32 1
  %98 = load i32, i32* %5, align 4
  %99 = sext i32 %98 to i64
  %100 = call dereferenceable(24) %"struct.std::array"* @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EEixEm(%"class.std::vector"* %97, i64 %99) #3
  %101 = bitcast %"struct.std::array"* %100 to i8*
  %102 = bitcast %"struct.std::array"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %101, i8* %102, i64 24, i32 8, i1 false)
  store i32 -1303001117, i32* %15
  br label %114

; <label>:103:                                    ; preds = %16
  %104 = load i32, i32* %5, align 4
  %105 = sub i32 0, %104
  %106 = sub i32 0, -1
  %107 = add i32 %105, %106
  %108 = sub i32 0, %107
  %109 = add nsw i32 %104, -1
  store i32 %108, i32* %5, align 4
  store i32 510535487, i32* %15
  br label %114

; <label>:110:                                    ; preds = %16
  ret void

; <label>:111:                                    ; preds = %16
  %112 = load i32, i32* %5, align 4
  %113 = icmp ne i32 %112, 0
  store i32 -1319920668, i32* %15
  br label %114

; <label>:114:                                    ; preds = %111, %103, %79, %76, %47, %19, %18
  br label %16
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN2STI1ME3getEii(%"struct.std::array"* noalias sret, %struct.ST*, i32, i32) #0 comdat align 2 {
  %5 = alloca %struct.ST*
  %6 = alloca %struct.ST*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"struct.std::array.5", align 8
  %10 = alloca %"struct.std::array", align 8
  %11 = alloca %"struct.std::array", align 8
  %12 = alloca %"struct.std::array", align 8
  %13 = alloca %"struct.std::array", align 8
  store %struct.ST* %1, %struct.ST** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %14 = load %struct.ST*, %struct.ST** %6, align 8
  store %struct.ST* %14, %struct.ST** %5
  %15 = load i32, i32* %7, align 4
  %16 = load i32, i32* %8, align 4
  %17 = call { i64, i64 } @_ZN1M2idEv()
  %18 = getelementptr inbounds %"struct.std::array.5", %"struct.std::array.5"* %9, i32 0, i32 0
  %19 = bitcast [2 x i64]* %18 to { i64, i64 }*
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 0
  %21 = extractvalue { i64, i64 } %17, 0
  store i64 %21, i64* %20, align 8
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1
  %23 = extractvalue { i64, i64 } %17, 1
  store i64 %23, i64* %22, align 8
  %24 = load volatile %struct.ST*, %struct.ST** %5
  call void @_ZN2STI1ME3setEiiRKSt5arrayIxLm2EE(%struct.ST* %24, i32 %15, i32 %16, %"struct.std::array.5"* dereferenceable(16) %9)
  %25 = bitcast %"struct.std::array"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* bitcast (%"struct.std::array"* @_ZZN2STI1ME3getEiiE4resl to i8*), i64 24, i32 8, i1 false)
  %26 = bitcast %"struct.std::array"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* bitcast (%"struct.std::array"* @_ZZN2STI1ME3getEiiE4resr to i8*), i64 24, i32 8, i1 false)
  %27 = load volatile %struct.ST*, %struct.ST** %5
  %28 = getelementptr inbounds %struct.ST, %struct.ST* %27, i32 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = load i32, i32* %7, align 4
  %31 = sub i32 0, %29
  %32 = sub i32 %30, %31
  %33 = add nsw i32 %30, %29
  store i32 %32, i32* %7, align 4
  %34 = load volatile %struct.ST*, %struct.ST** %5
  %35 = getelementptr inbounds %struct.ST, %struct.ST* %34, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = load i32, i32* %8, align 4
  %38 = sub i32 %37, 1704740845
  %39 = add i32 %38, %36
  %40 = add i32 %39, 1704740845
  %41 = add nsw i32 %37, %36
  store i32 %40, i32* %8, align 4
  %42 = alloca i32
  store i32 1909303337, i32* %42
  br label %43

; <label>:43:                                     ; preds = %4, %188
  %44 = load i32, i32* %42
  switch i32 %44, label %45 [
    i32 1909303337, label %46
    i32 -1005639740, label %51
    i32 582571761, label %59
    i32 -1035150178, label %86
    i32 -1445296500, label %125
    i32 -413254120, label %126
    i32 -702598876, label %138
    i32 1376084925, label %151
    i32 265915331, label %152
    i32 -2021117759, label %157
    i32 -1402374005, label %158
  ]

; <label>:45:                                     ; preds = %43
  br label %188

; <label>:46:                                     ; preds = %43
  %47 = load i32, i32* %7, align 4
  %48 = load i32, i32* %8, align 4
  %49 = icmp slt i32 %47, %48
  %50 = select i1 %49, i32 -1005639740, i32 -2021117759
  store i32 %50, i32* %42
  br label %188

; <label>:51:                                     ; preds = %43
  %52 = load i32, i32* %7, align 4
  %53 = xor i32 1, -1
  %54 = xor i32 %52, %53
  %55 = and i32 %54, %52
  %56 = and i32 %52, 1
  %57 = icmp ne i32 %55, 0
  %58 = select i1 %57, i32 582571761, i32 -413254120
  store i32 %58, i32* %42
  br label %188

; <label>:59:                                     ; preds = %43
  %60 = load i32, i32* @x.13
  %61 = load i32, i32* @y.14
  %62 = sub i32 0, 1
  %63 = add i32 %60, %62
  %64 = sub i32 %60, 1
  %65 = mul i32 %60, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %61, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 true, true
  %72 = and i1 %69, true
  %73 = and i1 %67, %71
  %74 = and i1 %70, true
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 true, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  %85 = select i1 %83, i32 -1035150178, i32 -1402374005
  store i32 %85, i32* %42
  br label %188

; <label>:86:                                     ; preds = %43
  %87 = load volatile %struct.ST*, %struct.ST** %5
  %88 = getelementptr inbounds %struct.ST, %struct.ST* %87, i32 0, i32 1
  %89 = load i32, i32* %7, align 4
  %90 = add i32 %89, 1807850272
  %91 = add i32 %90, 1
  %92 = sub i32 %91, 1807850272
  %93 = add nsw i32 %89, 1
  store i32 %92, i32* %7, align 4
  %94 = sext i32 %89 to i64
  %95 = call dereferenceable(24) %"struct.std::array"* @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EEixEm(%"class.std::vector"* %88, i64 %94) #3
  call void @_ZN1M2opERKSt5arrayIxLm3EES3_(%"struct.std::array"* sret %12, %"struct.std::array"* dereferenceable(24) %10, %"struct.std::array"* dereferenceable(24) %95)
  %96 = bitcast %"struct.std::array"* %10 to i8*
  %97 = bitcast %"struct.std::array"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %96, i8* %97, i64 24, i32 8, i1 false)
  %98 = load i32, i32* @x.13
  %99 = load i32, i32* @y.14
  %100 = sub i32 %98, -143626354
  %101 = sub i32 %100, 1
  %102 = add i32 %101, -143626354
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = xor i1 %106, true
  %109 = xor i1 %107, true
  %110 = xor i1 false, true
  %111 = and i1 %108, false
  %112 = and i1 %106, %110
  %113 = and i1 %109, false
  %114 = and i1 %107, %110
  %115 = or i1 %111, %112
  %116 = or i1 %113, %114
  %117 = xor i1 %115, %116
  %118 = or i1 %108, %109
  %119 = xor i1 %118, true
  %120 = or i1 false, %110
  %121 = and i1 %119, %120
  %122 = or i1 %117, %121
  %123 = or i1 %106, %107
  %124 = select i1 %122, i32 -1445296500, i32 -1402374005
  store i32 %124, i32* %42
  br label %188

; <label>:125:                                    ; preds = %43
  store i32 -413254120, i32* %42
  br label %188

; <label>:126:                                    ; preds = %43
  %127 = load i32, i32* %8, align 4
  %128 = xor i32 %127, -1
  %129 = xor i32 1, -1
  %130 = xor i32 -1821932252, -1
  %131 = or i32 %128, %129
  %132 = or i32 -1821932252, %130
  %133 = xor i32 %131, -1
  %134 = and i32 %133, %132
  %135 = and i32 %127, 1
  %136 = icmp ne i32 %134, 0
  %137 = select i1 %136, i32 -702598876, i32 1376084925
  store i32 %137, i32* %42
  br label %188

; <label>:138:                                    ; preds = %43
  %139 = load volatile %struct.ST*, %struct.ST** %5
  %140 = getelementptr inbounds %struct.ST, %struct.ST* %139, i32 0, i32 1
  %141 = load i32, i32* %8, align 4
  %142 = sub i32 0, %141
  %143 = sub i32 0, -1
  %144 = add i32 %142, %143
  %145 = sub i32 0, %144
  %146 = add nsw i32 %141, -1
  store i32 %145, i32* %8, align 4
  %147 = sext i32 %145 to i64
  %148 = call dereferenceable(24) %"struct.std::array"* @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EEixEm(%"class.std::vector"* %140, i64 %147) #3
  call void @_ZN1M2opERKSt5arrayIxLm3EES3_(%"struct.std::array"* sret %13, %"struct.std::array"* dereferenceable(24) %148, %"struct.std::array"* dereferenceable(24) %11)
  %149 = bitcast %"struct.std::array"* %11 to i8*
  %150 = bitcast %"struct.std::array"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %149, i8* %150, i64 24, i32 8, i1 false)
  store i32 1376084925, i32* %42
  br label %188

; <label>:151:                                    ; preds = %43
  store i32 265915331, i32* %42
  br label %188

; <label>:152:                                    ; preds = %43
  %153 = load i32, i32* %7, align 4
  %154 = ashr i32 %153, 1
  store i32 %154, i32* %7, align 4
  %155 = load i32, i32* %8, align 4
  %156 = ashr i32 %155, 1
  store i32 %156, i32* %8, align 4
  store i32 1909303337, i32* %42
  br label %188

; <label>:157:                                    ; preds = %43
  call void @_ZN1M2opERKSt5arrayIxLm3EES3_(%"struct.std::array"* sret %0, %"struct.std::array"* dereferenceable(24) %10, %"struct.std::array"* dereferenceable(24) %11)
  ret void

; <label>:158:                                    ; preds = %43
  %159 = load volatile %struct.ST*, %struct.ST** %5
  %160 = getelementptr inbounds %struct.ST, %struct.ST* %159, i32 0, i32 1
  %161 = load i32, i32* %7, align 4
  %162 = shl i32 %161, 1
  %163 = shl i32 %161, 1
  %164 = add i32 %161, 1138761085
  %165 = sub i32 %164, 1
  %166 = sub i32 %165, 1138761085
  %167 = sub i32 %161, 1
  %168 = mul i32 %166, 1
  %169 = add i32 0, -767123303
  %170 = sub i32 %169, %161
  %171 = sub i32 %170, -767123303
  %172 = sub i32 0, %161
  %173 = sub i32 0, 1
  %174 = sub i32 %171, %173
  %175 = add i32 %171, 1
  %176 = sub i32 %161, -1374708530
  %177 = sub i32 %176, 1
  %178 = add i32 %177, -1374708530
  %179 = sub i32 %161, 1
  %180 = mul i32 %178, 1
  %181 = sub i32 0, 1
  %182 = sub i32 %161, %181
  %183 = add nsw i32 %161, 1
  store i32 %182, i32* %7, align 4
  %184 = sext i32 %161 to i64
  %185 = call dereferenceable(24) %"struct.std::array"* @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EEixEm(%"class.std::vector"* %160, i64 %184) #3
  call void @_ZN1M2opERKSt5arrayIxLm3EES3_(%"struct.std::array"* sret %12, %"struct.std::array"* dereferenceable(24) %10, %"struct.std::array"* dereferenceable(24) %185)
  %186 = bitcast %"struct.std::array"* %10 to i8*
  %187 = bitcast %"struct.std::array"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %186, i8* %187, i64 24, i32 8, i1 false)
  store i32 -1035150178, i32* %42
  br label %188

; <label>:188:                                    ; preds = %158, %152, %151, %138, %126, %125, %86, %59, %51, %46, %45
  br label %43
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt5arrayIxLm3EEixEm(%"struct.std::array"*, i64) #5 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.15
  %7 = load i32, i32* @y.16
  %8 = add i32 %6, 848096871
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 848096871
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 51692875, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 51692875, label %20
    i32 -1671349521, label %28
    i32 1470065020, label %61
    i32 1463246251, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1671349521, i32 1463246251
  store i32 %27, i32* %16
  br label %70

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::array"*, align 8
  %30 = alloca i64, align 8
  store %"struct.std::array"* %0, %"struct.std::array"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"struct.std::array"*, %"struct.std::array"** %29, align 8
  %32 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %31, i32 0, i32 0
  %33 = load i64, i64* %30, align 8
  %34 = call dereferenceable(8) i64* @_ZNSt14__array_traitsIxLm3EE6_S_refERA3_Kxm([3 x i64]* dereferenceable(24) %32, i64 %33) #3
  store i64* %34, i64** %3
  %35 = load i32, i32* @x.15
  %36 = load i32, i32* @y.16
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 1470065020, i32 1463246251
  store i32 %60, i32* %16
  br label %70

; <label>:61:                                     ; preds = %17
  %62 = load volatile i64*, i64** %3
  ret i64* %62

; <label>:63:                                     ; preds = %17
  %64 = alloca %"struct.std::array"*, align 8
  %65 = alloca i64, align 8
  store %"struct.std::array"* %0, %"struct.std::array"** %64, align 8
  store i64 %1, i64* %65, align 8
  %66 = load %"struct.std::array"*, %"struct.std::array"** %64, align 8
  %67 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %66, i32 0, i32 0
  %68 = load i64, i64* %65, align 8
  %69 = call dereferenceable(8) i64* @_ZNSt14__array_traitsIxLm3EE6_S_refERA3_Kxm([3 x i64]* dereferenceable(24) %67, i64 %68) #3
  store i32 -1671349521, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN2STI1ME3setEiiRKSt5arrayIxLm2EE(%struct.ST*, i32, i32, %"struct.std::array.5"* dereferenceable(16)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.17
  %6 = load i32, i32* @y.18
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %6, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %1052

; <label>:18:                                     ; preds = %4, %1052
  %19 = alloca %struct.ST*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %"struct.std::array.5"*, align 8
  %23 = alloca %"class.std::vector.6", align 8
  %24 = alloca %"class.std::vector.6", align 8
  %25 = alloca %"class.std::vector.6", align 8
  %26 = alloca i32, align 4
  %27 = alloca i8*
  %28 = alloca i32
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %33 = alloca %"class.std::back_insert_iterator", align 8
  %34 = alloca %"struct.std::greater", align 1
  %35 = alloca %"class.std::back_insert_iterator", align 8
  %36 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %37 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %38 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %45 = alloca %"class.std::vector.6"*, align 8
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %48 = alloca i32, align 4
  %49 = alloca %"struct.std::array.5", align 8
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca %"struct.std::array", align 8
  %53 = alloca %"struct.std::array", align 8
  store %struct.ST* %0, %struct.ST** %19, align 8
  store i32 %1, i32* %20, align 4
  store i32 %2, i32* %21, align 4
  store %"struct.std::array.5"* %3, %"struct.std::array.5"** %22, align 8
  %54 = load %struct.ST*, %struct.ST** %19, align 8
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.6"* %23) #3
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.6"* %24) #3
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.6"* %25) #3
  %55 = load i32, i32* %20, align 4
  %56 = getelementptr inbounds %struct.ST, %struct.ST* %54, i32 0, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = sub i32 0, %55
  %59 = sub i32 0, %57
  %60 = add i32 %58, %59
  %61 = sub i32 0, %60
  %62 = add nsw i32 %55, %57
  store i32 %61, i32* %26, align 4
  %63 = load i32, i32* @x.17
  %64 = load i32, i32* @y.18
  %65 = add i32 %63, -1302794688
  %66 = sub i32 %65, 1
  %67 = sub i32 %66, -1302794688
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = xor i1 %71, true
  %74 = xor i1 %72, true
  %75 = xor i1 false, true
  %76 = and i1 %73, false
  %77 = and i1 %71, %75
  %78 = and i1 %74, false
  %79 = and i1 %72, %75
  %80 = or i1 %76, %77
  %81 = or i1 %78, %79
  %82 = xor i1 %80, %81
  %83 = or i1 %73, %74
  %84 = xor i1 %83, true
  %85 = or i1 false, %75
  %86 = and i1 %84, %85
  %87 = or i1 %82, %86
  %88 = or i1 %71, %72
  br i1 %87, label %89, label %1052

; <label>:89:                                     ; preds = %18
  br label %90

; <label>:90:                                     ; preds = %151, %89
  %91 = load i32, i32* %26, align 4
  %92 = xor i32 %91, -1
  %93 = xor i32 1, -1
  %94 = xor i32 1427955276, -1
  %95 = or i32 %92, %93
  %96 = or i32 1427955276, %94
  %97 = xor i32 %95, -1
  %98 = and i32 %97, %96
  %99 = and i32 %91, 1
  %100 = icmp ne i32 %98, 0
  %101 = xor i1 %100, true
  %102 = and i1 true, %101
  %103 = xor i1 true, true
  %104 = and i1 %100, %103
  %105 = or i1 %102, %104
  %106 = xor i1 %100, true
  br i1 %105, label %107, label %152

; <label>:107:                                    ; preds = %90
  %108 = load i32, i32* @x.17
  %109 = load i32, i32* @y.18
  %110 = sub i32 %108, 1374438251
  %111 = sub i32 %110, 1
  %112 = add i32 %111, 1374438251
  %113 = sub i32 %108, 1
  %114 = mul i32 %108, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %109, 10
  %118 = and i1 %116, %117
  %119 = xor i1 %116, %117
  %120 = or i1 %118, %119
  %121 = or i1 %116, %117
  br i1 %120, label %122, label %1105

; <label>:122:                                    ; preds = %107, %1105
  %123 = load i32, i32* %26, align 4
  %124 = ashr i32 %123, 1
  store i32 %124, i32* %26, align 4
  %125 = load i32, i32* @x.17
  %126 = load i32, i32* @y.18
  %127 = sub i32 %125, 445379818
  %128 = sub i32 %127, 1
  %129 = add i32 %128, 445379818
  %130 = sub i32 %125, 1
  %131 = mul i32 %125, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %126, 10
  %135 = xor i1 %133, true
  %136 = xor i1 %134, true
  %137 = xor i1 true, true
  %138 = and i1 %135, true
  %139 = and i1 %133, %137
  %140 = and i1 %136, true
  %141 = and i1 %134, %137
  %142 = or i1 %138, %139
  %143 = or i1 %140, %141
  %144 = xor i1 %142, %143
  %145 = or i1 %135, %136
  %146 = xor i1 %145, true
  %147 = or i1 true, %137
  %148 = and i1 %146, %147
  %149 = or i1 %144, %148
  %150 = or i1 %133, %134
  br i1 %149, label %151, label %1105

; <label>:151:                                    ; preds = %122
  br label %90

; <label>:152:                                    ; preds = %90
  %153 = load i32, i32* @x.17
  %154 = load i32, i32* @y.18
  %155 = add i32 %153, -2096503996
  %156 = sub i32 %155, 1
  %157 = sub i32 %156, -2096503996
  %158 = sub i32 %153, 1
  %159 = mul i32 %153, %157
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %154, 10
  %163 = xor i1 %161, true
  %164 = xor i1 %162, true
  %165 = xor i1 false, true
  %166 = and i1 %163, false
  %167 = and i1 %161, %165
  %168 = and i1 %164, false
  %169 = and i1 %162, %165
  %170 = or i1 %166, %167
  %171 = or i1 %168, %169
  %172 = xor i1 %170, %171
  %173 = or i1 %163, %164
  %174 = xor i1 %173, true
  %175 = or i1 false, %165
  %176 = and i1 %174, %175
  %177 = or i1 %172, %176
  %178 = or i1 %161, %162
  br i1 %177, label %179, label %1139

; <label>:179:                                    ; preds = %152, %1139
  %180 = load i32, i32* @x.17
  %181 = load i32, i32* @y.18
  %182 = sub i32 0, 1
  %183 = add i32 %180, %182
  %184 = sub i32 %180, 1
  %185 = mul i32 %180, %183
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %181, 10
  %189 = xor i1 %187, true
  %190 = xor i1 %188, true
  %191 = xor i1 false, true
  %192 = and i1 %189, false
  %193 = and i1 %187, %191
  %194 = and i1 %190, false
  %195 = and i1 %188, %191
  %196 = or i1 %192, %193
  %197 = or i1 %194, %195
  %198 = xor i1 %196, %197
  %199 = or i1 %189, %190
  %200 = xor i1 %199, true
  %201 = or i1 false, %191
  %202 = and i1 %200, %201
  %203 = or i1 %198, %202
  %204 = or i1 %187, %188
  br i1 %203, label %205, label %1139

; <label>:205:                                    ; preds = %179
  br label %206

; <label>:206:                                    ; preds = %211, %205
  %207 = load i32, i32* %26, align 4
  %208 = ashr i32 %207, 1
  store i32 %208, i32* %26, align 4
  %209 = icmp ne i32 %208, 0
  br i1 %209, label %210, label %244

; <label>:210:                                    ; preds = %206
  invoke void @_ZNSt6vectorIiSaIiEE9push_backERKi(%"class.std::vector.6"* %24, i32* dereferenceable(4) %26)
          to label %211 unwind label %212

; <label>:211:                                    ; preds = %210
  br label %206

; <label>:212:                                    ; preds = %1024, %900, %790, %718, %530, %490, %481, %432, %423, %412, %410, %360, %358, %210
  %213 = load i32, i32* @x.17
  %214 = load i32, i32* @y.18
  %215 = sub i32 0, 1
  %216 = add i32 %213, %215
  %217 = sub i32 %213, 1
  %218 = mul i32 %213, %216
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %214, 10
  %222 = and i1 %220, %221
  %223 = xor i1 %220, %221
  %224 = or i1 %222, %223
  %225 = or i1 %220, %221
  br i1 %224, label %226, label %1140

; <label>:226:                                    ; preds = %212, %1140
  %227 = landingpad { i8*, i32 }
          cleanup
  %228 = extractvalue { i8*, i32 } %227, 0
  store i8* %228, i8** %27, align 8
  %229 = extractvalue { i8*, i32 } %227, 1
  store i32 %229, i32* %28, align 4
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.6"* %25) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.6"* %24) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.6"* %23) #3
  %230 = load i32, i32* @x.17
  %231 = load i32, i32* @y.18
  %232 = sub i32 0, 1
  %233 = add i32 %230, %232
  %234 = sub i32 %230, 1
  %235 = mul i32 %230, %233
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %231, 10
  %239 = and i1 %237, %238
  %240 = xor i1 %237, %238
  %241 = or i1 %239, %240
  %242 = or i1 %237, %238
  br i1 %241, label %243, label %1140

; <label>:243:                                    ; preds = %226
  br label %1047

; <label>:244:                                    ; preds = %206
  %245 = load i32, i32* %21, align 4
  %246 = getelementptr inbounds %struct.ST, %struct.ST* %54, i32 0, i32 0
  %247 = load i32, i32* %246, align 8
  %248 = sub i32 0, %245
  %249 = sub i32 0, %247
  %250 = add i32 %248, %249
  %251 = sub i32 0, %250
  %252 = add nsw i32 %245, %247
  store i32 %251, i32* %26, align 4
  br label %253

; <label>:253:                                    ; preds = %308, %244
  %254 = load i32, i32* @x.17
  %255 = load i32, i32* @y.18
  %256 = sub i32 %254, -1502614221
  %257 = sub i32 %256, 1
  %258 = add i32 %257, -1502614221
  %259 = sub i32 %254, 1
  %260 = mul i32 %254, %258
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %255, 10
  %264 = xor i1 %262, true
  %265 = xor i1 %263, true
  %266 = xor i1 true, true
  %267 = and i1 %264, true
  %268 = and i1 %262, %266
  %269 = and i1 %265, true
  %270 = and i1 %263, %266
  %271 = or i1 %267, %268
  %272 = or i1 %269, %270
  %273 = xor i1 %271, %272
  %274 = or i1 %264, %265
  %275 = xor i1 %274, true
  %276 = or i1 true, %266
  %277 = and i1 %275, %276
  %278 = or i1 %273, %277
  %279 = or i1 %262, %263
  br i1 %278, label %280, label %1144

; <label>:280:                                    ; preds = %253, %1144
  %281 = load i32, i32* %26, align 4
  %282 = xor i32 1, -1
  %283 = xor i32 %281, %282
  %284 = and i32 %283, %281
  %285 = and i32 %281, 1
  %286 = icmp ne i32 %284, 0
  %287 = xor i1 %286, true
  %288 = and i1 true, %287
  %289 = xor i1 true, true
  %290 = and i1 %286, %289
  %291 = or i1 %288, %290
  %292 = xor i1 %286, true
  %293 = load i32, i32* @x.17
  %294 = load i32, i32* @y.18
  %295 = add i32 %293, 1855441737
  %296 = sub i32 %295, 1
  %297 = sub i32 %296, 1855441737
  %298 = sub i32 %293, 1
  %299 = mul i32 %293, %297
  %300 = urem i32 %299, 2
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %294, 10
  %303 = and i1 %301, %302
  %304 = xor i1 %301, %302
  %305 = or i1 %303, %304
  %306 = or i1 %301, %302
  br i1 %305, label %307, label %1144

; <label>:307:                                    ; preds = %280
  br i1 %291, label %308, label %311

; <label>:308:                                    ; preds = %307
  %309 = load i32, i32* %26, align 4
  %310 = ashr i32 %309, 1
  store i32 %310, i32* %26, align 4
  br label %253

; <label>:311:                                    ; preds = %307
  %312 = load i32, i32* @x.17
  %313 = load i32, i32* @y.18
  %314 = sub i32 %312, 1013427794
  %315 = sub i32 %314, 1
  %316 = add i32 %315, 1013427794
  %317 = sub i32 %312, 1
  %318 = mul i32 %312, %316
  %319 = urem i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %313, 10
  %322 = xor i1 %320, true
  %323 = xor i1 %321, true
  %324 = xor i1 true, true
  %325 = and i1 %322, true
  %326 = and i1 %320, %324
  %327 = and i1 %323, true
  %328 = and i1 %321, %324
  %329 = or i1 %325, %326
  %330 = or i1 %327, %328
  %331 = xor i1 %329, %330
  %332 = or i1 %322, %323
  %333 = xor i1 %332, true
  %334 = or i1 true, %324
  %335 = and i1 %333, %334
  %336 = or i1 %331, %335
  %337 = or i1 %320, %321
  br i1 %336, label %338, label %1200

; <label>:338:                                    ; preds = %311, %1200
  %339 = load i32, i32* @x.17
  %340 = load i32, i32* @y.18
  %341 = sub i32 %339, -1345311139
  %342 = sub i32 %341, 1
  %343 = add i32 %342, -1345311139
  %344 = sub i32 %339, 1
  %345 = mul i32 %339, %343
  %346 = urem i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %340, 10
  %349 = and i1 %347, %348
  %350 = xor i1 %347, %348
  %351 = or i1 %349, %350
  %352 = or i1 %347, %348
  br i1 %351, label %353, label %1200

; <label>:353:                                    ; preds = %338
  br label %354

; <label>:354:                                    ; preds = %359, %353
  %355 = load i32, i32* %26, align 4
  %356 = ashr i32 %355, 1
  store i32 %356, i32* %26, align 4
  %357 = icmp ne i32 %356, 0
  br i1 %357, label %358, label %360

; <label>:358:                                    ; preds = %354
  invoke void @_ZNSt6vectorIiSaIiEE9push_backERKi(%"class.std::vector.6"* %25, i32* dereferenceable(4) %26)
          to label %359 unwind label %212

; <label>:359:                                    ; preds = %358
  br label %354

; <label>:360:                                    ; preds = %354
  %361 = call i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector.6"* %24) #3
  %362 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %29, i32 0, i32 0
  store i32* %361, i32** %362, align 8
  %363 = call i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.6"* %24) #3
  %364 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %30, i32 0, i32 0
  store i32* %363, i32** %364, align 8
  %365 = call i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector.6"* %25) #3
  %366 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %31, i32 0, i32 0
  store i32* %365, i32** %366, align 8
  %367 = call i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.6"* %25) #3
  %368 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %32, i32 0, i32 0
  store i32* %367, i32** %368, align 8
  %369 = invoke %"class.std::vector.6"* @_ZSt13back_inserterISt6vectorIiSaIiEEESt20back_insert_iteratorIT_ERS4_(%"class.std::vector.6"* dereferenceable(24) %23)
          to label %370 unwind label %212

; <label>:370:                                    ; preds = %360
  %371 = load i32, i32* @x.17
  %372 = load i32, i32* @y.18
  %373 = add i32 %371, 111556193
  %374 = sub i32 %373, 1
  %375 = sub i32 %374, 111556193
  %376 = sub i32 %371, 1
  %377 = mul i32 %371, %375
  %378 = urem i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = icmp slt i32 %372, 10
  %381 = and i1 %379, %380
  %382 = xor i1 %379, %380
  %383 = or i1 %381, %382
  %384 = or i1 %379, %380
  br i1 %383, label %385, label %1201

; <label>:385:                                    ; preds = %370, %1201
  %386 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %33, i32 0, i32 0
  store %"class.std::vector.6"* %369, %"class.std::vector.6"** %386, align 8
  %387 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %29, i32 0, i32 0
  %388 = load i32*, i32** %387, align 8
  %389 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %30, i32 0, i32 0
  %390 = load i32*, i32** %389, align 8
  %391 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %31, i32 0, i32 0
  %392 = load i32*, i32** %391, align 8
  %393 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %32, i32 0, i32 0
  %394 = load i32*, i32** %393, align 8
  %395 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %33, i32 0, i32 0
  %396 = load %"class.std::vector.6"*, %"class.std::vector.6"** %395, align 8
  %397 = load i32, i32* @x.17
  %398 = load i32, i32* @y.18
  %399 = sub i32 0, 1
  %400 = add i32 %397, %399
  %401 = sub i32 %397, 1
  %402 = mul i32 %397, %400
  %403 = urem i32 %402, 2
  %404 = icmp eq i32 %403, 0
  %405 = icmp slt i32 %398, 10
  %406 = and i1 %404, %405
  %407 = xor i1 %404, %405
  %408 = or i1 %406, %407
  %409 = or i1 %404, %405
  br i1 %408, label %410, label %1201

; <label>:410:                                    ; preds = %385
  %411 = invoke %"class.std::vector.6"* @_ZSt5mergeIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_St20back_insert_iteratorIS5_ESt7greaterIiEET1_T_SC_T0_SD_SB_T2_(i32* %388, i32* %390, i32* %392, i32* %394, %"class.std::vector.6"* %396)
          to label %412 unwind label %212

; <label>:412:                                    ; preds = %410
  %413 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %35, i32 0, i32 0
  store %"class.std::vector.6"* %411, %"class.std::vector.6"** %413, align 8
  %414 = call i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector.6"* %23) #3
  %415 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %38, i32 0, i32 0
  store i32* %414, i32** %415, align 8
  %416 = call i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.6"* %23) #3
  %417 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %39, i32 0, i32 0
  store i32* %416, i32** %417, align 8
  %418 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %38, i32 0, i32 0
  %419 = load i32*, i32** %418, align 8
  %420 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %39, i32 0, i32 0
  %421 = load i32*, i32** %420, align 8
  %422 = invoke i32* @_ZSt6uniqueIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEET_S7_S7_(i32* %419, i32* %421)
          to label %423 unwind label %212

; <label>:423:                                    ; preds = %412
  %424 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %37, i32 0, i32 0
  store i32* %422, i32** %424, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2IPiEERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameIS9_S8_EE7__valueES5_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.13"* %36, %"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %37) #3
  %425 = call i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.6"* %23) #3
  %426 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %41, i32 0, i32 0
  store i32* %425, i32** %426, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2IPiEERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameIS9_S8_EE7__valueES5_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.13"* %40, %"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %41) #3
  %427 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %36, i32 0, i32 0
  %428 = load i32*, i32** %427, align 8
  %429 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %40, i32 0, i32 0
  %430 = load i32*, i32** %429, align 8
  %431 = invoke i32* @_ZNSt6vectorIiSaIiEE5eraseEN9__gnu_cxx17__normal_iteratorIPKiS1_EES6_(%"class.std::vector.6"* %23, i32* %428, i32* %430)
          to label %432 unwind label %212

; <label>:432:                                    ; preds = %423
  %433 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %42, i32 0, i32 0
  store i32* %431, i32** %433, align 8
  %434 = call i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector.6"* %23) #3
  %435 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %43, i32 0, i32 0
  store i32* %434, i32** %435, align 8
  %436 = call i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.6"* %23) #3
  %437 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %44, i32 0, i32 0
  store i32* %436, i32** %437, align 8
  %438 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %43, i32 0, i32 0
  %439 = load i32*, i32** %438, align 8
  %440 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %44, i32 0, i32 0
  %441 = load i32*, i32** %440, align 8
  invoke void @_ZSt7reverseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_(i32* %439, i32* %441)
          to label %442 unwind label %212

; <label>:442:                                    ; preds = %432
  store %"class.std::vector.6"* %23, %"class.std::vector.6"** %45, align 8
  %443 = load %"class.std::vector.6"*, %"class.std::vector.6"** %45, align 8
  %444 = call i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector.6"* %443) #3
  %445 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %46, i32 0, i32 0
  store i32* %444, i32** %445, align 8
  %446 = load %"class.std::vector.6"*, %"class.std::vector.6"** %45, align 8
  %447 = call i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.6"* %446) #3
  %448 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %47, i32 0, i32 0
  store i32* %447, i32** %448, align 8
  br label %449

; <label>:449:                                    ; preds = %586, %442
  %450 = load i32, i32* @x.17
  %451 = load i32, i32* @y.18
  %452 = add i32 %450, 1632343530
  %453 = sub i32 %452, 1
  %454 = sub i32 %453, 1632343530
  %455 = sub i32 %450, 1
  %456 = mul i32 %450, %454
  %457 = urem i32 %456, 2
  %458 = icmp eq i32 %457, 0
  %459 = icmp slt i32 %451, 10
  %460 = and i1 %458, %459
  %461 = xor i1 %458, %459
  %462 = or i1 %460, %461
  %463 = or i1 %458, %459
  br i1 %462, label %464, label %1213

; <label>:464:                                    ; preds = %449, %1213
  %465 = call zeroext i1 @_ZN9__gnu_cxxneIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %46, %"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %47) #3
  %466 = load i32, i32* @x.17
  %467 = load i32, i32* @y.18
  %468 = sub i32 %466, -837558113
  %469 = sub i32 %468, 1
  %470 = add i32 %469, -837558113
  %471 = sub i32 %466, 1
  %472 = mul i32 %466, %470
  %473 = urem i32 %472, 2
  %474 = icmp eq i32 %473, 0
  %475 = icmp slt i32 %467, 10
  %476 = and i1 %474, %475
  %477 = xor i1 %474, %475
  %478 = or i1 %476, %477
  %479 = or i1 %474, %475
  br i1 %478, label %480, label %1213

; <label>:480:                                    ; preds = %464
  br i1 %465, label %481, label %588

; <label>:481:                                    ; preds = %480
  %482 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.12"* %46) #3
  %483 = load i32, i32* %482, align 4
  store i32 %483, i32* %48, align 4
  %484 = load i32, i32* %48, align 4
  %485 = mul nsw i32 2, %484
  %486 = getelementptr inbounds %struct.ST, %struct.ST* %54, i32 0, i32 2
  %487 = load i32, i32* %48, align 4
  %488 = sext i32 %487 to i64
  %489 = call dereferenceable(16) %"struct.std::array.5"* @_ZNSt6vectorISt5arrayIxLm2EESaIS1_EEixEm(%"class.std::vector.0"* %486, i64 %488) #3
  invoke void @_ZN2STI1ME3_apEiRKSt5arrayIxLm2EE(%struct.ST* %54, i32 %485, %"struct.std::array.5"* dereferenceable(16) %489)
          to label %490 unwind label %212

; <label>:490:                                    ; preds = %481
  %491 = load i32, i32* %48, align 4
  %492 = mul nsw i32 2, %491
  %493 = sub i32 0, 1
  %494 = sub i32 %492, %493
  %495 = add nsw i32 %492, 1
  %496 = getelementptr inbounds %struct.ST, %struct.ST* %54, i32 0, i32 2
  %497 = load i32, i32* %48, align 4
  %498 = sext i32 %497 to i64
  %499 = call dereferenceable(16) %"struct.std::array.5"* @_ZNSt6vectorISt5arrayIxLm2EESaIS1_EEixEm(%"class.std::vector.0"* %496, i64 %498) #3
  invoke void @_ZN2STI1ME3_apEiRKSt5arrayIxLm2EE(%struct.ST* %54, i32 %494, %"struct.std::array.5"* dereferenceable(16) %499)
          to label %500 unwind label %212

; <label>:500:                                    ; preds = %490
  %501 = load i32, i32* @x.17
  %502 = load i32, i32* @y.18
  %503 = add i32 %501, 1336267211
  %504 = sub i32 %503, 1
  %505 = sub i32 %504, 1336267211
  %506 = sub i32 %501, 1
  %507 = mul i32 %501, %505
  %508 = urem i32 %507, 2
  %509 = icmp eq i32 %508, 0
  %510 = icmp slt i32 %502, 10
  %511 = and i1 %509, %510
  %512 = xor i1 %509, %510
  %513 = or i1 %511, %512
  %514 = or i1 %509, %510
  br i1 %513, label %515, label %1215

; <label>:515:                                    ; preds = %500, %1215
  %516 = load i32, i32* @x.17
  %517 = load i32, i32* @y.18
  %518 = sub i32 %516, 1021546348
  %519 = sub i32 %518, 1
  %520 = add i32 %519, 1021546348
  %521 = sub i32 %516, 1
  %522 = mul i32 %516, %520
  %523 = urem i32 %522, 2
  %524 = icmp eq i32 %523, 0
  %525 = icmp slt i32 %517, 10
  %526 = and i1 %524, %525
  %527 = xor i1 %524, %525
  %528 = or i1 %526, %527
  %529 = or i1 %524, %525
  br i1 %528, label %530, label %1215

; <label>:530:                                    ; preds = %515
  %531 = invoke { i64, i64 } @_ZN1M2idEv()
          to label %532 unwind label %212

; <label>:532:                                    ; preds = %530
  %533 = load i32, i32* @x.17
  %534 = load i32, i32* @y.18
  %535 = sub i32 %533, 620127757
  %536 = sub i32 %535, 1
  %537 = add i32 %536, 620127757
  %538 = sub i32 %533, 1
  %539 = mul i32 %533, %537
  %540 = urem i32 %539, 2
  %541 = icmp eq i32 %540, 0
  %542 = icmp slt i32 %534, 10
  %543 = xor i1 %541, true
  %544 = xor i1 %542, true
  %545 = xor i1 true, true
  %546 = and i1 %543, true
  %547 = and i1 %541, %545
  %548 = and i1 %544, true
  %549 = and i1 %542, %545
  %550 = or i1 %546, %547
  %551 = or i1 %548, %549
  %552 = xor i1 %550, %551
  %553 = or i1 %543, %544
  %554 = xor i1 %553, true
  %555 = or i1 true, %545
  %556 = and i1 %554, %555
  %557 = or i1 %552, %556
  %558 = or i1 %541, %542
  br i1 %557, label %559, label %1216

; <label>:559:                                    ; preds = %532, %1216
  %560 = getelementptr inbounds %"struct.std::array.5", %"struct.std::array.5"* %49, i32 0, i32 0
  %561 = bitcast [2 x i64]* %560 to { i64, i64 }*
  %562 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %561, i32 0, i32 0
  %563 = extractvalue { i64, i64 } %531, 0
  store i64 %563, i64* %562, align 8
  %564 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %561, i32 0, i32 1
  %565 = extractvalue { i64, i64 } %531, 1
  store i64 %565, i64* %564, align 8
  %566 = getelementptr inbounds %struct.ST, %struct.ST* %54, i32 0, i32 2
  %567 = load i32, i32* %48, align 4
  %568 = sext i32 %567 to i64
  %569 = call dereferenceable(16) %"struct.std::array.5"* @_ZNSt6vectorISt5arrayIxLm2EESaIS1_EEixEm(%"class.std::vector.0"* %566, i64 %568) #3
  %570 = bitcast %"struct.std::array.5"* %569 to i8*
  %571 = bitcast %"struct.std::array.5"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %570, i8* %571, i64 16, i32 8, i1 false)
  %572 = load i32, i32* @x.17
  %573 = load i32, i32* @y.18
  %574 = sub i32 0, 1
  %575 = add i32 %572, %574
  %576 = sub i32 %572, 1
  %577 = mul i32 %572, %575
  %578 = urem i32 %577, 2
  %579 = icmp eq i32 %578, 0
  %580 = icmp slt i32 %573, 10
  %581 = and i1 %579, %580
  %582 = xor i1 %579, %580
  %583 = or i1 %581, %582
  %584 = or i1 %579, %580
  br i1 %583, label %585, label %1216

; <label>:585:                                    ; preds = %559
  br label %586

; <label>:586:                                    ; preds = %585
  %587 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.12"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv(%"class.__gnu_cxx::__normal_iterator.12"* %46) #3
  br label %449

; <label>:588:                                    ; preds = %480
  %589 = load i32, i32* %20, align 4
  %590 = getelementptr inbounds %struct.ST, %struct.ST* %54, i32 0, i32 0
  %591 = load i32, i32* %590, align 8
  %592 = add i32 %589, -1858034090
  %593 = add i32 %592, %591
  %594 = sub i32 %593, -1858034090
  %595 = add nsw i32 %589, %591
  store i32 %594, i32* %50, align 4
  %596 = load i32, i32* %21, align 4
  %597 = getelementptr inbounds %struct.ST, %struct.ST* %54, i32 0, i32 0
  %598 = load i32, i32* %597, align 8
  %599 = sub i32 0, %598
  %600 = sub i32 %596, %599
  %601 = add nsw i32 %596, %598
  store i32 %600, i32* %51, align 4
  br label %602

; <label>:602:                                    ; preds = %793, %588
  %603 = load i32, i32* %50, align 4
  %604 = load i32, i32* %51, align 4
  %605 = icmp slt i32 %603, %604
  br i1 %605, label %606, label %798

; <label>:606:                                    ; preds = %602
  %607 = load i32, i32* @x.17
  %608 = load i32, i32* @y.18
  %609 = sub i32 0, 1
  %610 = add i32 %607, %609
  %611 = sub i32 %607, 1
  %612 = mul i32 %607, %610
  %613 = urem i32 %612, 2
  %614 = icmp eq i32 %613, 0
  %615 = icmp slt i32 %608, 10
  %616 = xor i1 %614, true
  %617 = xor i1 %615, true
  %618 = xor i1 false, true
  %619 = and i1 %616, false
  %620 = and i1 %614, %618
  %621 = and i1 %617, false
  %622 = and i1 %615, %618
  %623 = or i1 %619, %620
  %624 = or i1 %621, %622
  %625 = xor i1 %623, %624
  %626 = or i1 %616, %617
  %627 = xor i1 %626, true
  %628 = or i1 false, %618
  %629 = and i1 %627, %628
  %630 = or i1 %625, %629
  %631 = or i1 %614, %615
  br i1 %630, label %632, label %1229

; <label>:632:                                    ; preds = %606, %1229
  %633 = load i32, i32* %50, align 4
  %634 = xor i32 %633, -1
  %635 = xor i32 1, -1
  %636 = xor i32 -805850140, -1
  %637 = or i32 %634, %635
  %638 = or i32 -805850140, %636
  %639 = xor i32 %637, -1
  %640 = and i32 %639, %638
  %641 = and i32 %633, 1
  %642 = icmp ne i32 %640, 0
  %643 = load i32, i32* @x.17
  %644 = load i32, i32* @y.18
  %645 = add i32 %643, 783082152
  %646 = sub i32 %645, 1
  %647 = sub i32 %646, 783082152
  %648 = sub i32 %643, 1
  %649 = mul i32 %643, %647
  %650 = urem i32 %649, 2
  %651 = icmp eq i32 %650, 0
  %652 = icmp slt i32 %644, 10
  %653 = and i1 %651, %652
  %654 = xor i1 %651, %652
  %655 = or i1 %653, %654
  %656 = or i1 %651, %652
  br i1 %655, label %657, label %1229

; <label>:657:                                    ; preds = %632
  br i1 %642, label %658, label %720

; <label>:658:                                    ; preds = %657
  %659 = load i32, i32* @x.17
  %660 = load i32, i32* @y.18
  %661 = add i32 %659, 637829298
  %662 = sub i32 %661, 1
  %663 = sub i32 %662, 637829298
  %664 = sub i32 %659, 1
  %665 = mul i32 %659, %663
  %666 = urem i32 %665, 2
  %667 = icmp eq i32 %666, 0
  %668 = icmp slt i32 %660, 10
  %669 = xor i1 %667, true
  %670 = xor i1 %668, true
  %671 = xor i1 false, true
  %672 = and i1 %669, false
  %673 = and i1 %667, %671
  %674 = and i1 %670, false
  %675 = and i1 %668, %671
  %676 = or i1 %672, %673
  %677 = or i1 %674, %675
  %678 = xor i1 %676, %677
  %679 = or i1 %669, %670
  %680 = xor i1 %679, true
  %681 = or i1 false, %671
  %682 = and i1 %680, %681
  %683 = or i1 %678, %682
  %684 = or i1 %667, %668
  br i1 %683, label %685, label %1261

; <label>:685:                                    ; preds = %658, %1261
  %686 = load i32, i32* %50, align 4
  %687 = sub i32 %686, -150011881
  %688 = add i32 %687, 1
  %689 = add i32 %688, -150011881
  %690 = add nsw i32 %686, 1
  store i32 %689, i32* %50, align 4
  %691 = load %"struct.std::array.5"*, %"struct.std::array.5"** %22, align 8
  %692 = load i32, i32* @x.17
  %693 = load i32, i32* @y.18
  %694 = sub i32 %692, -221809854
  %695 = sub i32 %694, 1
  %696 = add i32 %695, -221809854
  %697 = sub i32 %692, 1
  %698 = mul i32 %692, %696
  %699 = urem i32 %698, 2
  %700 = icmp eq i32 %699, 0
  %701 = icmp slt i32 %693, 10
  %702 = xor i1 %700, true
  %703 = xor i1 %701, true
  %704 = xor i1 false, true
  %705 = and i1 %702, false
  %706 = and i1 %700, %704
  %707 = and i1 %703, false
  %708 = and i1 %701, %704
  %709 = or i1 %705, %706
  %710 = or i1 %707, %708
  %711 = xor i1 %709, %710
  %712 = or i1 %702, %703
  %713 = xor i1 %712, true
  %714 = or i1 false, %704
  %715 = and i1 %713, %714
  %716 = or i1 %711, %715
  %717 = or i1 %700, %701
  br i1 %716, label %718, label %1261

; <label>:718:                                    ; preds = %685
  invoke void @_ZN2STI1ME3_apEiRKSt5arrayIxLm2EE(%struct.ST* %54, i32 %686, %"struct.std::array.5"* dereferenceable(16) %691)
          to label %719 unwind label %212

; <label>:719:                                    ; preds = %718
  br label %720

; <label>:720:                                    ; preds = %719, %657
  %721 = load i32, i32* %51, align 4
  %722 = xor i32 %721, -1
  %723 = xor i32 1, -1
  %724 = xor i32 -231479633, -1
  %725 = or i32 %722, %723
  %726 = or i32 -231479633, %724
  %727 = xor i32 %725, -1
  %728 = and i32 %727, %726
  %729 = and i32 %721, 1
  %730 = icmp ne i32 %728, 0
  br i1 %730, label %731, label %792

; <label>:731:                                    ; preds = %720
  %732 = load i32, i32* @x.17
  %733 = load i32, i32* @y.18
  %734 = add i32 %732, 1920128821
  %735 = sub i32 %734, 1
  %736 = sub i32 %735, 1920128821
  %737 = sub i32 %732, 1
  %738 = mul i32 %732, %736
  %739 = urem i32 %738, 2
  %740 = icmp eq i32 %739, 0
  %741 = icmp slt i32 %733, 10
  %742 = xor i1 %740, true
  %743 = xor i1 %741, true
  %744 = xor i1 false, true
  %745 = and i1 %742, false
  %746 = and i1 %740, %744
  %747 = and i1 %743, false
  %748 = and i1 %741, %744
  %749 = or i1 %745, %746
  %750 = or i1 %747, %748
  %751 = xor i1 %749, %750
  %752 = or i1 %742, %743
  %753 = xor i1 %752, true
  %754 = or i1 false, %744
  %755 = and i1 %753, %754
  %756 = or i1 %751, %755
  %757 = or i1 %740, %741
  br i1 %756, label %758, label %1286

; <label>:758:                                    ; preds = %731, %1286
  %759 = load i32, i32* %51, align 4
  %760 = add i32 %759, 1930962047
  %761 = add i32 %760, -1
  %762 = sub i32 %761, 1930962047
  %763 = add nsw i32 %759, -1
  store i32 %762, i32* %51, align 4
  %764 = load %"struct.std::array.5"*, %"struct.std::array.5"** %22, align 8
  %765 = load i32, i32* @x.17
  %766 = load i32, i32* @y.18
  %767 = sub i32 0, 1
  %768 = add i32 %765, %767
  %769 = sub i32 %765, 1
  %770 = mul i32 %765, %768
  %771 = urem i32 %770, 2
  %772 = icmp eq i32 %771, 0
  %773 = icmp slt i32 %766, 10
  %774 = xor i1 %772, true
  %775 = xor i1 %773, true
  %776 = xor i1 true, true
  %777 = and i1 %774, true
  %778 = and i1 %772, %776
  %779 = and i1 %775, true
  %780 = and i1 %773, %776
  %781 = or i1 %777, %778
  %782 = or i1 %779, %780
  %783 = xor i1 %781, %782
  %784 = or i1 %774, %775
  %785 = xor i1 %784, true
  %786 = or i1 true, %776
  %787 = and i1 %785, %786
  %788 = or i1 %783, %787
  %789 = or i1 %772, %773
  br i1 %788, label %790, label %1286

; <label>:790:                                    ; preds = %758
  invoke void @_ZN2STI1ME3_apEiRKSt5arrayIxLm2EE(%struct.ST* %54, i32 %762, %"struct.std::array.5"* dereferenceable(16) %764)
          to label %791 unwind label %212

; <label>:791:                                    ; preds = %790
  br label %792

; <label>:792:                                    ; preds = %791, %720
  br label %793

; <label>:793:                                    ; preds = %792
  %794 = load i32, i32* %50, align 4
  %795 = ashr i32 %794, 1
  store i32 %795, i32* %50, align 4
  %796 = load i32, i32* %51, align 4
  %797 = ashr i32 %796, 1
  store i32 %797, i32* %51, align 4
  br label %602

; <label>:798:                                    ; preds = %602
  %799 = getelementptr inbounds %struct.ST, %struct.ST* %54, i32 0, i32 0
  %800 = load i32, i32* %799, align 8
  %801 = load i32, i32* %20, align 4
  %802 = add i32 %801, 872399682
  %803 = add i32 %802, %800
  %804 = sub i32 %803, 872399682
  %805 = add nsw i32 %801, %800
  store i32 %804, i32* %20, align 4
  br label %806

; <label>:806:                                    ; preds = %823, %798
  %807 = load i32, i32* %20, align 4
  %808 = xor i32 %807, -1
  %809 = xor i32 1, -1
  %810 = xor i32 77790884, -1
  %811 = or i32 %808, %809
  %812 = or i32 77790884, %810
  %813 = xor i32 %811, -1
  %814 = and i32 %813, %812
  %815 = and i32 %807, 1
  %816 = icmp ne i32 %814, 0
  %817 = xor i1 %816, true
  %818 = and i1 true, %817
  %819 = xor i1 true, true
  %820 = and i1 %816, %819
  %821 = or i1 %818, %820
  %822 = xor i1 %816, true
  br i1 %821, label %823, label %826

; <label>:823:                                    ; preds = %806
  %824 = load i32, i32* %20, align 4
  %825 = ashr i32 %824, 1
  store i32 %825, i32* %20, align 4
  br label %806

; <label>:826:                                    ; preds = %806
  br label %827

; <label>:827:                                    ; preds = %901, %826
  %828 = load i32, i32* %20, align 4
  %829 = ashr i32 %828, 1
  store i32 %829, i32* %20, align 4
  %830 = icmp ne i32 %829, 0
  br i1 %830, label %831, label %908

; <label>:831:                                    ; preds = %827
  %832 = load i32, i32* @x.17
  %833 = load i32, i32* @y.18
  %834 = sub i32 %832, 1680774815
  %835 = sub i32 %834, 1
  %836 = add i32 %835, 1680774815
  %837 = sub i32 %832, 1
  %838 = mul i32 %832, %836
  %839 = urem i32 %838, 2
  %840 = icmp eq i32 %839, 0
  %841 = icmp slt i32 %833, 10
  %842 = xor i1 %840, true
  %843 = xor i1 %841, true
  %844 = xor i1 true, true
  %845 = and i1 %842, true
  %846 = and i1 %840, %844
  %847 = and i1 %843, true
  %848 = and i1 %841, %844
  %849 = or i1 %845, %846
  %850 = or i1 %847, %848
  %851 = xor i1 %849, %850
  %852 = or i1 %842, %843
  %853 = xor i1 %852, true
  %854 = or i1 true, %844
  %855 = and i1 %853, %854
  %856 = or i1 %851, %855
  %857 = or i1 %840, %841
  br i1 %856, label %858, label %1300

; <label>:858:                                    ; preds = %831, %1300
  %859 = getelementptr inbounds %struct.ST, %struct.ST* %54, i32 0, i32 1
  %860 = load i32, i32* %20, align 4
  %861 = mul nsw i32 2, %860
  %862 = sext i32 %861 to i64
  %863 = call dereferenceable(24) %"struct.std::array"* @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EEixEm(%"class.std::vector"* %859, i64 %862) #3
  %864 = getelementptr inbounds %struct.ST, %struct.ST* %54, i32 0, i32 1
  %865 = load i32, i32* %20, align 4
  %866 = mul nsw i32 2, %865
  %867 = sub i32 0, %866
  %868 = sub i32 0, 1
  %869 = add i32 %867, %868
  %870 = sub i32 0, %869
  %871 = add nsw i32 %866, 1
  %872 = sext i32 %870 to i64
  %873 = call dereferenceable(24) %"struct.std::array"* @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EEixEm(%"class.std::vector"* %864, i64 %872) #3
  %874 = load i32, i32* @x.17
  %875 = load i32, i32* @y.18
  %876 = sub i32 %874, 395423591
  %877 = sub i32 %876, 1
  %878 = add i32 %877, 395423591
  %879 = sub i32 %874, 1
  %880 = mul i32 %874, %878
  %881 = urem i32 %880, 2
  %882 = icmp eq i32 %881, 0
  %883 = icmp slt i32 %875, 10
  %884 = xor i1 %882, true
  %885 = xor i1 %883, true
  %886 = xor i1 false, true
  %887 = and i1 %884, false
  %888 = and i1 %882, %886
  %889 = and i1 %885, false
  %890 = and i1 %883, %886
  %891 = or i1 %887, %888
  %892 = or i1 %889, %890
  %893 = xor i1 %891, %892
  %894 = or i1 %884, %885
  %895 = xor i1 %894, true
  %896 = or i1 false, %886
  %897 = and i1 %895, %896
  %898 = or i1 %893, %897
  %899 = or i1 %882, %883
  br i1 %898, label %900, label %1300

; <label>:900:                                    ; preds = %858
  invoke void @_ZN1M2opERKSt5arrayIxLm3EES3_(%"struct.std::array"* sret %52, %"struct.std::array"* dereferenceable(24) %863, %"struct.std::array"* dereferenceable(24) %873)
          to label %901 unwind label %212

; <label>:901:                                    ; preds = %900
  %902 = getelementptr inbounds %struct.ST, %struct.ST* %54, i32 0, i32 1
  %903 = load i32, i32* %20, align 4
  %904 = sext i32 %903 to i64
  %905 = call dereferenceable(24) %"struct.std::array"* @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EEixEm(%"class.std::vector"* %902, i64 %904) #3
  %906 = bitcast %"struct.std::array"* %905 to i8*
  %907 = bitcast %"struct.std::array"* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %906, i8* %907, i64 24, i32 8, i1 false)
  br label %827

; <label>:908:                                    ; preds = %827
  %909 = load i32, i32* @x.17
  %910 = load i32, i32* @y.18
  %911 = sub i32 %909, 1356715539
  %912 = sub i32 %911, 1
  %913 = add i32 %912, 1356715539
  %914 = sub i32 %909, 1
  %915 = mul i32 %909, %913
  %916 = urem i32 %915, 2
  %917 = icmp eq i32 %916, 0
  %918 = icmp slt i32 %910, 10
  %919 = xor i1 %917, true
  %920 = xor i1 %918, true
  %921 = xor i1 false, true
  %922 = and i1 %919, false
  %923 = and i1 %917, %921
  %924 = and i1 %920, false
  %925 = and i1 %918, %921
  %926 = or i1 %922, %923
  %927 = or i1 %924, %925
  %928 = xor i1 %926, %927
  %929 = or i1 %919, %920
  %930 = xor i1 %929, true
  %931 = or i1 false, %921
  %932 = and i1 %930, %931
  %933 = or i1 %928, %932
  %934 = or i1 %917, %918
  br i1 %933, label %935, label %1330

; <label>:935:                                    ; preds = %908, %1330
  %936 = getelementptr inbounds %struct.ST, %struct.ST* %54, i32 0, i32 0
  %937 = load i32, i32* %936, align 8
  %938 = load i32, i32* %21, align 4
  %939 = add i32 %938, -628645966
  %940 = add i32 %939, %937
  %941 = sub i32 %940, -628645966
  %942 = add nsw i32 %938, %937
  store i32 %941, i32* %21, align 4
  %943 = load i32, i32* @x.17
  %944 = load i32, i32* @y.18
  %945 = sub i32 %943, -187407174
  %946 = sub i32 %945, 1
  %947 = add i32 %946, -187407174
  %948 = sub i32 %943, 1
  %949 = mul i32 %943, %947
  %950 = urem i32 %949, 2
  %951 = icmp eq i32 %950, 0
  %952 = icmp slt i32 %944, 10
  %953 = and i1 %951, %952
  %954 = xor i1 %951, %952
  %955 = or i1 %953, %954
  %956 = or i1 %951, %952
  br i1 %955, label %957, label %1330

; <label>:957:                                    ; preds = %935
  br label %958

; <label>:958:                                    ; preds = %975, %957
  %959 = load i32, i32* %21, align 4
  %960 = xor i32 %959, -1
  %961 = xor i32 1, -1
  %962 = xor i32 1210965856, -1
  %963 = or i32 %960, %961
  %964 = or i32 1210965856, %962
  %965 = xor i32 %963, -1
  %966 = and i32 %965, %964
  %967 = and i32 %959, 1
  %968 = icmp ne i32 %966, 0
  %969 = xor i1 %968, true
  %970 = and i1 true, %969
  %971 = xor i1 true, true
  %972 = and i1 %968, %971
  %973 = or i1 %970, %972
  %974 = xor i1 %968, true
  br i1 %973, label %975, label %978

; <label>:975:                                    ; preds = %958
  %976 = load i32, i32* %21, align 4
  %977 = ashr i32 %976, 1
  store i32 %977, i32* %21, align 4
  br label %958

; <label>:978:                                    ; preds = %958
  br label %979

; <label>:979:                                    ; preds = %1039, %978
  %980 = load i32, i32* @x.17
  %981 = load i32, i32* @y.18
  %982 = sub i32 0, 1
  %983 = add i32 %980, %982
  %984 = sub i32 %980, 1
  %985 = mul i32 %980, %983
  %986 = urem i32 %985, 2
  %987 = icmp eq i32 %986, 0
  %988 = icmp slt i32 %981, 10
  %989 = xor i1 %987, true
  %990 = xor i1 %988, true
  %991 = xor i1 true, true
  %992 = and i1 %989, true
  %993 = and i1 %987, %991
  %994 = and i1 %990, true
  %995 = and i1 %988, %991
  %996 = or i1 %992, %993
  %997 = or i1 %994, %995
  %998 = xor i1 %996, %997
  %999 = or i1 %989, %990
  %1000 = xor i1 %999, true
  %1001 = or i1 true, %991
  %1002 = and i1 %1000, %1001
  %1003 = or i1 %998, %1002
  %1004 = or i1 %987, %988
  br i1 %1003, label %1005, label %1373

; <label>:1005:                                   ; preds = %979, %1373
  %1006 = load i32, i32* %21, align 4
  %1007 = ashr i32 %1006, 1
  store i32 %1007, i32* %21, align 4
  %1008 = icmp ne i32 %1007, 0
  %1009 = load i32, i32* @x.17
  %1010 = load i32, i32* @y.18
  %1011 = add i32 %1009, -1509369694
  %1012 = sub i32 %1011, 1
  %1013 = sub i32 %1012, -1509369694
  %1014 = sub i32 %1009, 1
  %1015 = mul i32 %1009, %1013
  %1016 = urem i32 %1015, 2
  %1017 = icmp eq i32 %1016, 0
  %1018 = icmp slt i32 %1010, 10
  %1019 = and i1 %1017, %1018
  %1020 = xor i1 %1017, %1018
  %1021 = or i1 %1019, %1020
  %1022 = or i1 %1017, %1018
  br i1 %1021, label %1023, label %1373

; <label>:1023:                                   ; preds = %1005
  br i1 %1008, label %1024, label %1046

; <label>:1024:                                   ; preds = %1023
  %1025 = getelementptr inbounds %struct.ST, %struct.ST* %54, i32 0, i32 1
  %1026 = load i32, i32* %21, align 4
  %1027 = mul nsw i32 2, %1026
  %1028 = sext i32 %1027 to i64
  %1029 = call dereferenceable(24) %"struct.std::array"* @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EEixEm(%"class.std::vector"* %1025, i64 %1028) #3
  %1030 = getelementptr inbounds %struct.ST, %struct.ST* %54, i32 0, i32 1
  %1031 = load i32, i32* %21, align 4
  %1032 = mul nsw i32 2, %1031
  %1033 = sub i32 %1032, 1070450597
  %1034 = add i32 %1033, 1
  %1035 = add i32 %1034, 1070450597
  %1036 = add nsw i32 %1032, 1
  %1037 = sext i32 %1035 to i64
  %1038 = call dereferenceable(24) %"struct.std::array"* @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EEixEm(%"class.std::vector"* %1030, i64 %1037) #3
  invoke void @_ZN1M2opERKSt5arrayIxLm3EES3_(%"struct.std::array"* sret %53, %"struct.std::array"* dereferenceable(24) %1029, %"struct.std::array"* dereferenceable(24) %1038)
          to label %1039 unwind label %212

; <label>:1039:                                   ; preds = %1024
  %1040 = getelementptr inbounds %struct.ST, %struct.ST* %54, i32 0, i32 1
  %1041 = load i32, i32* %21, align 4
  %1042 = sext i32 %1041 to i64
  %1043 = call dereferenceable(24) %"struct.std::array"* @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EEixEm(%"class.std::vector"* %1040, i64 %1042) #3
  %1044 = bitcast %"struct.std::array"* %1043 to i8*
  %1045 = bitcast %"struct.std::array"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1044, i8* %1045, i64 24, i32 8, i1 false)
  br label %979

; <label>:1046:                                   ; preds = %1023
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.6"* %25) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.6"* %24) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.6"* %23) #3
  ret void

; <label>:1047:                                   ; preds = %243
  %1048 = load i8*, i8** %27, align 8
  %1049 = load i32, i32* %28, align 4
  %1050 = insertvalue { i8*, i32 } undef, i8* %1048, 0
  %1051 = insertvalue { i8*, i32 } %1050, i32 %1049, 1
  resume { i8*, i32 } %1051

; <label>:1052:                                   ; preds = %18, %4
  %1053 = alloca %struct.ST*, align 8
  %1054 = alloca i32, align 4
  %1055 = alloca i32, align 4
  %1056 = alloca %"struct.std::array.5"*, align 8
  %1057 = alloca %"class.std::vector.6", align 8
  %1058 = alloca %"class.std::vector.6", align 8
  %1059 = alloca %"class.std::vector.6", align 8
  %1060 = alloca i32, align 4
  %1061 = alloca i8*
  %1062 = alloca i32
  %1063 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %1064 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %1065 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %1066 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %1067 = alloca %"class.std::back_insert_iterator", align 8
  %1068 = alloca %"struct.std::greater", align 1
  %1069 = alloca %"class.std::back_insert_iterator", align 8
  %1070 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %1071 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %1072 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %1073 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %1074 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %1075 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %1076 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %1077 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %1078 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %1079 = alloca %"class.std::vector.6"*, align 8
  %1080 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %1081 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %1082 = alloca i32, align 4
  %1083 = alloca %"struct.std::array.5", align 8
  %1084 = alloca i32, align 4
  %1085 = alloca i32, align 4
  %1086 = alloca %"struct.std::array", align 8
  %1087 = alloca %"struct.std::array", align 8
  store %struct.ST* %0, %struct.ST** %1053, align 8
  store i32 %1, i32* %1054, align 4
  store i32 %2, i32* %1055, align 4
  store %"struct.std::array.5"* %3, %"struct.std::array.5"** %1056, align 8
  %1088 = load %struct.ST*, %struct.ST** %1053, align 8
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.6"* %1057) #3
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.6"* %1058) #3
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.6"* %1059) #3
  %1089 = load i32, i32* %1054, align 4
  %1090 = getelementptr inbounds %struct.ST, %struct.ST* %1088, i32 0, i32 0
  %1091 = load i32, i32* %1090, align 8
  %1092 = shl i32 %1089, %1091
  %1093 = shl i32 %1089, %1091
  %1094 = sub i32 0, %1089
  %1095 = add i32 0, %1094
  %1096 = sub i32 0, %1089
  %1097 = sub i32 %1095, -822284692
  %1098 = add i32 %1097, %1091
  %1099 = add i32 %1098, -822284692
  %1100 = add i32 %1095, %1091
  %1101 = shl i32 %1089, %1091
  %1102 = sub i32 0, %1091
  %1103 = sub i32 %1089, %1102
  %1104 = add nsw i32 %1089, %1091
  store i32 %1103, i32* %1060, align 4
  br label %18

; <label>:1105:                                   ; preds = %122, %107
  %1106 = load i32, i32* %26, align 4
  %1107 = sub i32 0, 1436817661
  %1108 = sub i32 %1107, %1106
  %1109 = add i32 %1108, 1436817661
  %1110 = sub i32 0, %1106
  %1111 = add i32 %1109, -1329828335
  %1112 = add i32 %1111, 1
  %1113 = sub i32 %1112, -1329828335
  %1114 = add i32 %1109, 1
  %1115 = sub i32 %1106, -1349110574
  %1116 = sub i32 %1115, 1
  %1117 = add i32 %1116, -1349110574
  %1118 = sub i32 %1106, 1
  %1119 = mul i32 %1117, 1
  %1120 = sub i32 0, 1294463528
  %1121 = sub i32 %1120, %1106
  %1122 = add i32 %1121, 1294463528
  %1123 = sub i32 0, %1106
  %1124 = sub i32 0, %1122
  %1125 = sub i32 0, 1
  %1126 = add i32 %1124, %1125
  %1127 = sub i32 0, %1126
  %1128 = add i32 %1122, 1
  %1129 = add i32 0, -1104683937
  %1130 = sub i32 %1129, %1106
  %1131 = sub i32 %1130, -1104683937
  %1132 = sub i32 0, %1106
  %1133 = sub i32 0, %1131
  %1134 = sub i32 0, 1
  %1135 = add i32 %1133, %1134
  %1136 = sub i32 0, %1135
  %1137 = add i32 %1131, 1
  %1138 = ashr i32 %1106, 1
  store i32 %1138, i32* %26, align 4
  br label %122

; <label>:1139:                                   ; preds = %179, %152
  br label %179

; <label>:1140:                                   ; preds = %226, %212
  %1141 = landingpad { i8*, i32 }
          cleanup
  %1142 = extractvalue { i8*, i32 } %1141, 0
  store i8* %1142, i8** %27, align 8
  %1143 = extractvalue { i8*, i32 } %1141, 1
  store i32 %1143, i32* %28, align 4
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.6"* %25) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.6"* %24) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.6"* %23) #3
  br label %226

; <label>:1144:                                   ; preds = %280, %253
  %1145 = load i32, i32* %26, align 4
  %1146 = shl i32 %1145, 1
  %1147 = shl i32 %1145, 1
  %1148 = shl i32 %1145, 1
  %1149 = sub i32 0, 1
  %1150 = add i32 %1145, %1149
  %1151 = sub i32 %1145, 1
  %1152 = mul i32 %1150, 1
  %1153 = shl i32 %1145, 1
  %1154 = shl i32 %1145, 1
  %1155 = add i32 0, -1390893948
  %1156 = sub i32 %1155, %1145
  %1157 = sub i32 %1156, -1390893948
  %1158 = sub i32 0, %1145
  %1159 = sub i32 %1157, -1785758838
  %1160 = add i32 %1159, 1
  %1161 = add i32 %1160, -1785758838
  %1162 = add i32 %1157, 1
  %1163 = sub i32 0, 1
  %1164 = add i32 %1145, %1163
  %1165 = sub i32 %1145, 1
  %1166 = mul i32 %1164, 1
  %1167 = sub i32 0, %1145
  %1168 = add i32 0, %1167
  %1169 = sub i32 0, %1145
  %1170 = sub i32 0, %1168
  %1171 = sub i32 0, 1
  %1172 = add i32 %1170, %1171
  %1173 = sub i32 0, %1172
  %1174 = add i32 %1168, 1
  %1175 = xor i32 %1145, -1
  %1176 = xor i32 1, -1
  %1177 = xor i32 649223435, -1
  %1178 = or i32 %1175, %1176
  %1179 = or i32 649223435, %1177
  %1180 = xor i32 %1178, -1
  %1181 = and i32 %1180, %1179
  %1182 = and i32 %1145, 1
  %1183 = icmp ne i32 %1181, 0
  %1184 = sub i1 false, true
  %1185 = add i1 %1183, %1184
  %1186 = sub i1 %1183, true
  %1187 = mul i1 %1185, true
  %1188 = shl i1 %1183, true
  %1189 = xor i1 %1183, true
  %1190 = and i1 true, %1189
  %1191 = xor i1 true, true
  %1192 = and i1 %1183, %1191
  %1193 = xor i1 true, true
  %1194 = and i1 %1193, true
  %1195 = and i1 true, %1191
  %1196 = or i1 %1190, %1192
  %1197 = or i1 %1194, %1195
  %1198 = xor i1 %1196, %1197
  %1199 = xor i1 %1183, true
  br label %280

; <label>:1200:                                   ; preds = %338, %311
  br label %338

; <label>:1201:                                   ; preds = %385, %370
  %1202 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %33, i32 0, i32 0
  store %"class.std::vector.6"* %369, %"class.std::vector.6"** %1202, align 8
  %1203 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %29, i32 0, i32 0
  %1204 = load i32*, i32** %1203, align 8
  %1205 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %30, i32 0, i32 0
  %1206 = load i32*, i32** %1205, align 8
  %1207 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %31, i32 0, i32 0
  %1208 = load i32*, i32** %1207, align 8
  %1209 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %32, i32 0, i32 0
  %1210 = load i32*, i32** %1209, align 8
  %1211 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %33, i32 0, i32 0
  %1212 = load %"class.std::vector.6"*, %"class.std::vector.6"** %1211, align 8
  br label %385

; <label>:1213:                                   ; preds = %464, %449
  %1214 = call zeroext i1 @_ZN9__gnu_cxxneIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %46, %"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %47) #3
  br label %464

; <label>:1215:                                   ; preds = %515, %500
  br label %515

; <label>:1216:                                   ; preds = %559, %532
  %1217 = getelementptr inbounds %"struct.std::array.5", %"struct.std::array.5"* %49, i32 0, i32 0
  %1218 = bitcast [2 x i64]* %1217 to { i64, i64 }*
  %1219 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1218, i32 0, i32 0
  %1220 = extractvalue { i64, i64 } %531, 0
  store i64 %1220, i64* %1219, align 8
  %1221 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1218, i32 0, i32 1
  %1222 = extractvalue { i64, i64 } %531, 1
  store i64 %1222, i64* %1221, align 8
  %1223 = getelementptr inbounds %struct.ST, %struct.ST* %54, i32 0, i32 2
  %1224 = load i32, i32* %48, align 4
  %1225 = sext i32 %1224 to i64
  %1226 = call dereferenceable(16) %"struct.std::array.5"* @_ZNSt6vectorISt5arrayIxLm2EESaIS1_EEixEm(%"class.std::vector.0"* %1223, i64 %1225) #3
  %1227 = bitcast %"struct.std::array.5"* %1226 to i8*
  %1228 = bitcast %"struct.std::array.5"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1227, i8* %1228, i64 16, i32 8, i1 false)
  br label %559

; <label>:1229:                                   ; preds = %632, %606
  %1230 = load i32, i32* %50, align 4
  %1231 = add i32 0, -1371181908
  %1232 = sub i32 %1231, %1230
  %1233 = sub i32 %1232, -1371181908
  %1234 = sub i32 0, %1230
  %1235 = sub i32 0, 1
  %1236 = sub i32 %1233, %1235
  %1237 = add i32 %1233, 1
  %1238 = sub i32 0, 594509540
  %1239 = sub i32 %1238, %1230
  %1240 = add i32 %1239, 594509540
  %1241 = sub i32 0, %1230
  %1242 = sub i32 0, %1240
  %1243 = sub i32 0, 1
  %1244 = add i32 %1242, %1243
  %1245 = sub i32 0, %1244
  %1246 = add i32 %1240, 1
  %1247 = sub i32 %1230, -1238785292
  %1248 = sub i32 %1247, 1
  %1249 = add i32 %1248, -1238785292
  %1250 = sub i32 %1230, 1
  %1251 = mul i32 %1249, 1
  %1252 = sub i32 0, 1
  %1253 = add i32 %1230, %1252
  %1254 = sub i32 %1230, 1
  %1255 = mul i32 %1253, 1
  %1256 = xor i32 1, -1
  %1257 = xor i32 %1230, %1256
  %1258 = and i32 %1257, %1230
  %1259 = and i32 %1230, 1
  %1260 = icmp ne i32 %1258, 0
  br label %632

; <label>:1261:                                   ; preds = %685, %658
  %1262 = load i32, i32* %50, align 4
  %1263 = sub i32 0, 1
  %1264 = add i32 %1262, %1263
  %1265 = sub i32 %1262, 1
  %1266 = mul i32 %1264, 1
  %1267 = add i32 %1262, -1948231557
  %1268 = sub i32 %1267, 1
  %1269 = sub i32 %1268, -1948231557
  %1270 = sub i32 %1262, 1
  %1271 = mul i32 %1269, 1
  %1272 = add i32 0, 1878901413
  %1273 = sub i32 %1272, %1262
  %1274 = sub i32 %1273, 1878901413
  %1275 = sub i32 0, %1262
  %1276 = sub i32 %1274, 1258073339
  %1277 = add i32 %1276, 1
  %1278 = add i32 %1277, 1258073339
  %1279 = add i32 %1274, 1
  %1280 = sub i32 0, %1262
  %1281 = sub i32 0, 1
  %1282 = add i32 %1280, %1281
  %1283 = sub i32 0, %1282
  %1284 = add nsw i32 %1262, 1
  store i32 %1283, i32* %50, align 4
  %1285 = load %"struct.std::array.5"*, %"struct.std::array.5"** %22, align 8
  br label %685

; <label>:1286:                                   ; preds = %758, %731
  %1287 = load i32, i32* %51, align 4
  %1288 = sub i32 0, %1287
  %1289 = add i32 0, %1288
  %1290 = sub i32 0, %1287
  %1291 = sub i32 0, -1
  %1292 = sub i32 %1289, %1291
  %1293 = add i32 %1289, -1
  %1294 = shl i32 %1287, -1
  %1295 = add i32 %1287, -334236376
  %1296 = add i32 %1295, -1
  %1297 = sub i32 %1296, -334236376
  %1298 = add nsw i32 %1287, -1
  store i32 %1297, i32* %51, align 4
  %1299 = load %"struct.std::array.5"*, %"struct.std::array.5"** %22, align 8
  br label %758

; <label>:1300:                                   ; preds = %858, %831
  %1301 = getelementptr inbounds %struct.ST, %struct.ST* %54, i32 0, i32 1
  %1302 = load i32, i32* %20, align 4
  %1303 = add i32 0, -1363297086
  %1304 = sub i32 %1303, 2
  %1305 = sub i32 %1304, -1363297086
  %1306 = sub i32 0, 2
  %1307 = add i32 %1305, -431135555
  %1308 = add i32 %1307, %1302
  %1309 = sub i32 %1308, -431135555
  %1310 = add i32 %1305, %1302
  %1311 = shl i32 2, %1302
  %1312 = mul nsw i32 2, %1302
  %1313 = sext i32 %1312 to i64
  %1314 = call dereferenceable(24) %"struct.std::array"* @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EEixEm(%"class.std::vector"* %1301, i64 %1313) #3
  %1315 = getelementptr inbounds %struct.ST, %struct.ST* %54, i32 0, i32 1
  %1316 = load i32, i32* %20, align 4
  %1317 = sub i32 0, %1316
  %1318 = add i32 2, %1317
  %1319 = sub i32 2, %1316
  %1320 = mul i32 %1318, %1316
  %1321 = mul nsw i32 2, %1316
  %1322 = shl i32 %1321, 1
  %1323 = sub i32 0, %1321
  %1324 = sub i32 0, 1
  %1325 = add i32 %1323, %1324
  %1326 = sub i32 0, %1325
  %1327 = add nsw i32 %1321, 1
  %1328 = sext i32 %1326 to i64
  %1329 = call dereferenceable(24) %"struct.std::array"* @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EEixEm(%"class.std::vector"* %1315, i64 %1328) #3
  br label %858

; <label>:1330:                                   ; preds = %935, %908
  %1331 = getelementptr inbounds %struct.ST, %struct.ST* %54, i32 0, i32 0
  %1332 = load i32, i32* %1331, align 8
  %1333 = load i32, i32* %21, align 4
  %1334 = add i32 0, 788780206
  %1335 = sub i32 %1334, %1333
  %1336 = sub i32 %1335, 788780206
  %1337 = sub i32 0, %1333
  %1338 = add i32 %1336, -198406157
  %1339 = add i32 %1338, %1332
  %1340 = sub i32 %1339, -198406157
  %1341 = add i32 %1336, %1332
  %1342 = shl i32 %1333, %1332
  %1343 = sub i32 0, %1333
  %1344 = add i32 0, %1343
  %1345 = sub i32 0, %1333
  %1346 = sub i32 0, %1344
  %1347 = sub i32 0, %1332
  %1348 = add i32 %1346, %1347
  %1349 = sub i32 0, %1348
  %1350 = add i32 %1344, %1332
  %1351 = shl i32 %1333, %1332
  %1352 = sub i32 0, %1333
  %1353 = add i32 0, %1352
  %1354 = sub i32 0, %1333
  %1355 = add i32 %1353, -1497078019
  %1356 = add i32 %1355, %1332
  %1357 = sub i32 %1356, -1497078019
  %1358 = add i32 %1353, %1332
  %1359 = add i32 %1333, 839073359
  %1360 = sub i32 %1359, %1332
  %1361 = sub i32 %1360, 839073359
  %1362 = sub i32 %1333, %1332
  %1363 = mul i32 %1361, %1332
  %1364 = sub i32 0, %1333
  %1365 = add i32 0, %1364
  %1366 = sub i32 0, %1333
  %1367 = sub i32 0, %1332
  %1368 = sub i32 %1365, %1367
  %1369 = add i32 %1365, %1332
  %1370 = sub i32 0, %1332
  %1371 = sub i32 %1333, %1370
  %1372 = add nsw i32 %1333, %1332
  store i32 %1371, i32* %21, align 4
  br label %935

; <label>:1373:                                   ; preds = %1005, %979
  %1374 = load i32, i32* %21, align 4
  %1375 = sub i32 0, 877043826
  %1376 = sub i32 %1375, %1374
  %1377 = add i32 %1376, 877043826
  %1378 = sub i32 0, %1374
  %1379 = add i32 %1377, 387662273
  %1380 = add i32 %1379, 1
  %1381 = sub i32 %1380, 387662273
  %1382 = add i32 %1377, 1
  %1383 = shl i32 %1374, 1
  %1384 = ashr i32 %1374, 1
  store i32 %1384, i32* %21, align 4
  %1385 = icmp ne i32 %1384, 0
  br label %1005
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN2STI1MED2Ev(%struct.ST*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.19
  %5 = load i32, i32* @y.20
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1462533766, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %65
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1462533766, label %17
    i32 678924765, label %25
    i32 2002714895, label %58
    i32 1682975603, label %59
  ]

; <label>:16:                                     ; preds = %14
  br label %65

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 678924765, i32 1682975603
  store i32 %24, i32* %13
  br label %65

; <label>:25:                                     ; preds = %14
  %26 = alloca %struct.ST*, align 8
  store %struct.ST* %0, %struct.ST** %26, align 8
  %27 = load %struct.ST*, %struct.ST** %26, align 8
  %28 = getelementptr inbounds %struct.ST, %struct.ST* %27, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.6"* %28) #3
  %29 = getelementptr inbounds %struct.ST, %struct.ST* %27, i32 0, i32 2
  call void @_ZNSt6vectorISt5arrayIxLm2EESaIS1_EED2Ev(%"class.std::vector.0"* %29) #3
  %30 = getelementptr inbounds %struct.ST, %struct.ST* %27, i32 0, i32 1
  call void @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EED2Ev(%"class.std::vector"* %30) #3
  %31 = load i32, i32* @x.19
  %32 = load i32, i32* @y.20
  %33 = add i32 %31, -1065947889
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -1065947889
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 2002714895, i32 1682975603
  store i32 %57, i32* %13
  br label %65

; <label>:58:                                     ; preds = %14
  ret void

; <label>:59:                                     ; preds = %14
  %60 = alloca %struct.ST*, align 8
  store %struct.ST* %0, %struct.ST** %60, align 8
  %61 = load %struct.ST*, %struct.ST** %60, align 8
  %62 = getelementptr inbounds %struct.ST, %struct.ST* %61, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.6"* %62) #3
  %63 = getelementptr inbounds %struct.ST, %struct.ST* %61, i32 0, i32 2
  call void @_ZNSt6vectorISt5arrayIxLm2EESaIS1_EED2Ev(%"class.std::vector.0"* %63) #3
  %64 = getelementptr inbounds %struct.ST, %struct.ST* %61, i32 0, i32 1
  call void @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EED2Ev(%"class.std::vector"* %64) #3
  store i32 678924765, i32* %13
  br label %65

; <label>:65:                                     ; preds = %59, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.6"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.6"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %2, align 8
  %5 = load %"class.std::vector.6"*, %"class.std::vector.6"** %2, align 8
  %6 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  %14 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  %15 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %14) #3
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %9, i32* %13, %"class.std::allocator.8"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.7"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.7"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt5arrayIxLm2EESaIS1_EED2Ev(%"class.std::vector.0"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.0"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.std::array.5"*, %"struct.std::array.5"** %8, align 8
  %10 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"struct.std::array.5"*, %"struct.std::array.5"** %12, align 8
  %14 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %15 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %14) #3
  invoke void @_ZSt8_DestroyIPSt5arrayIxLm2EES1_EvT_S3_RSaIT0_E(%"struct.std::array.5"* %9, %"struct.std::array.5"* %13, %"class.std::allocator.2"* dereferenceable(1) %15)
          to label %16 unwind label %60

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.23
  %18 = load i32, i32* @y.24
  %19 = sub i32 %17, -1758592606
  %20 = sub i32 %19, 1
  %21 = add i32 %20, -1758592606
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 true, true
  %30 = and i1 %27, true
  %31 = and i1 %25, %29
  %32 = and i1 %28, true
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 true, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  br i1 %41, label %43, label %67

; <label>:43:                                     ; preds = %16, %67
  %44 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EED2Ev(%"struct.std::_Vector_base.1"* %44) #3
  %45 = load i32, i32* @x.23
  %46 = load i32, i32* @y.24
  %47 = add i32 %45, -698890160
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -698890160
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  br i1 %57, label %59, label %67

; <label>:59:                                     ; preds = %43
  ret void

; <label>:60:                                     ; preds = %1
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %3, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %4, align 4
  %64 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EED2Ev(%"struct.std::_Vector_base.1"* %64) #3
  br label %65

; <label>:65:                                     ; preds = %60
  %66 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %66) #11
  unreachable

; <label>:67:                                     ; preds = %43, %16
  %68 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EED2Ev(%"struct.std::_Vector_base.1"* %68) #3
  br label %43
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EED2Ev(%"class.std::vector"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.std::array"*, %"struct.std::array"** %8, align 8
  %10 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"struct.std::array"*, %"struct.std::array"** %12, align 8
  %14 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14) #3
  invoke void @_ZSt8_DestroyIPSt5arrayIxLm3EES1_EvT_S3_RSaIT0_E(%"struct.std::array"* %9, %"struct.std::array"* %13, %"class.std::allocator"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EED2Ev(%"struct.std::_Vector_base"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EED2Ev(%"struct.std::_Vector_base"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i32, i32* @x.25
  %25 = load i32, i32* @y.26
  %26 = add i32 %24, -240852682
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, -240852682
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 true, true
  %37 = and i1 %34, true
  %38 = and i1 %32, %36
  %39 = and i1 %35, true
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 true, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  br i1 %48, label %50, label %67

; <label>:50:                                     ; preds = %23, %67
  %51 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %51) #11
  %52 = load i32, i32* @x.25
  %53 = load i32, i32* @y.26
  %54 = add i32 %52, 1155569181
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, 1155569181
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  br i1 %64, label %66, label %67

; <label>:66:                                     ; preds = %50
  unreachable

; <label>:67:                                     ; preds = %50, %23
  %68 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %68) #11
  br label %50
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32*, i32*, %"class.std::allocator.8"* dereferenceable(1)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca %"class.std::allocator.8"*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store %"class.std::allocator.8"* %2, %"class.std::allocator.8"** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i32*, i32** %5, align 8
  call void @_ZSt8_DestroyIPiEvT_S1_(i32* %7, i32* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.8"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.29
  %6 = load i32, i32* @y.30
  %7 = sub i32 %5, -1577185785
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1577185785
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1913603797, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1913603797, label %19
    i32 1706361730, label %39
    i32 893849613, label %71
    i32 533987356, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1706361730, i32 533987356
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.7"*, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %40, align 8
  %41 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %42 to %"class.std::allocator.8"*
  store %"class.std::allocator.8"* %43, %"class.std::allocator.8"** %2
  %44 = load i32, i32* @x.29
  %45 = load i32, i32* @y.30
  %46 = add i32 %44, -1304082299
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -1304082299
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 893849613, i32 533987356
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile %"class.std::allocator.8"*, %"class.std::allocator.8"** %2
  ret %"class.std::allocator.8"* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"struct.std::_Vector_base.7"*, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %74, align 8
  %75 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %75, i32 0, i32 0
  %77 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %76 to %"class.std::allocator.8"*
  store i32 1706361730, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.7"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.7"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %2, align 8
  %5 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = ptrtoint i32* %11 to i64
  %16 = ptrtoint i32* %14 to i64
  %17 = sub i64 %15, 4256773758291572894
  %18 = sub i64 %17, %16
  %19 = add i64 %18, 4256773758291572894
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 4
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.7"* %5, i32* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = load i32, i32* @x.31
  %26 = load i32, i32* @y.32
  %27 = sub i32 %25, -281313839
  %28 = sub i32 %27, 1
  %29 = add i32 %28, -281313839
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 true, true
  %38 = and i1 %35, true
  %39 = and i1 %33, %37
  %40 = and i1 %36, true
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 true, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  br i1 %49, label %51, label %136

; <label>:51:                                     ; preds = %24, %136
  %52 = landingpad { i8*, i32 }
          catch i8* null
  %53 = extractvalue { i8*, i32 } %52, 0
  store i8* %53, i8** %3, align 8
  %54 = extractvalue { i8*, i32 } %52, 1
  store i32 %54, i32* %4, align 4
  %55 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %55) #3
  %56 = load i32, i32* @x.31
  %57 = load i32, i32* @y.32
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 false, true
  %68 = and i1 %65, false
  %69 = and i1 %63, %67
  %70 = and i1 %66, false
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 false, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  br i1 %79, label %81, label %136

; <label>:81:                                     ; preds = %51
  br label %82

; <label>:82:                                     ; preds = %81
  %83 = load i32, i32* @x.31
  %84 = load i32, i32* @y.32
  %85 = sub i32 0, 1
  %86 = add i32 %83, %85
  %87 = sub i32 %83, 1
  %88 = mul i32 %83, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %84, 10
  %92 = xor i1 %90, true
  %93 = xor i1 %91, true
  %94 = xor i1 true, true
  %95 = and i1 %92, true
  %96 = and i1 %90, %94
  %97 = and i1 %93, true
  %98 = and i1 %91, %94
  %99 = or i1 %95, %96
  %100 = or i1 %97, %98
  %101 = xor i1 %99, %100
  %102 = or i1 %92, %93
  %103 = xor i1 %102, true
  %104 = or i1 true, %94
  %105 = and i1 %103, %104
  %106 = or i1 %101, %105
  %107 = or i1 %90, %91
  br i1 %106, label %108, label %141

; <label>:108:                                    ; preds = %82, %141
  %109 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %109) #11
  %110 = load i32, i32* @x.31
  %111 = load i32, i32* @y.32
  %112 = sub i32 0, 1
  %113 = add i32 %110, %112
  %114 = sub i32 %110, 1
  %115 = mul i32 %110, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %111, 10
  %119 = xor i1 %117, true
  %120 = xor i1 %118, true
  %121 = xor i1 true, true
  %122 = and i1 %119, true
  %123 = and i1 %117, %121
  %124 = and i1 %120, true
  %125 = and i1 %118, %121
  %126 = or i1 %122, %123
  %127 = or i1 %124, %125
  %128 = xor i1 %126, %127
  %129 = or i1 %119, %120
  %130 = xor i1 %129, true
  %131 = or i1 true, %121
  %132 = and i1 %130, %131
  %133 = or i1 %128, %132
  %134 = or i1 %117, %118
  br i1 %133, label %135, label %141

; <label>:135:                                    ; preds = %108
  unreachable

; <label>:136:                                    ; preds = %51, %24
  %137 = landingpad { i8*, i32 }
          catch i8* null
  %138 = extractvalue { i8*, i32 } %137, 0
  store i8* %138, i8** %3, align 8
  %139 = extractvalue { i8*, i32 } %137, 1
  store i32 %139, i32* %4, align 4
  %140 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %140) #3
  br label %51

; <label>:141:                                    ; preds = %108, %82
  %142 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %142) #11
  br label %108
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #6 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.33
  %5 = load i32, i32* @y.34
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -2020904234, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %45
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -2020904234, label %17
    i32 -1949610241, label %25
    i32 1716786304, label %42
    i32 -1476722733, label %43
  ]

; <label>:16:                                     ; preds = %14
  br label %45

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -1949610241, i32 -1476722733
  store i32 %24, i32* %13
  br label %45

; <label>:25:                                     ; preds = %14
  %26 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #11
  %27 = load i32, i32* @x.33
  %28 = load i32, i32* @y.34
  %29 = add i32 %27, 632482530
  %30 = sub i32 %29, 1
  %31 = sub i32 %30, 632482530
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  %41 = select i1 %39, i32 1716786304, i32 -1476722733
  store i32 %41, i32* %13
  br label %45

; <label>:42:                                     ; preds = %14
  unreachable

; <label>:43:                                     ; preds = %14
  %44 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #11
  store i32 -1949610241, i32* %13
  br label %45

; <label>:45:                                     ; preds = %43, %25, %17, %16
  br label %14
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiEvT_S1_(i32*, i32*) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load i32*, i32** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32* %5, i32* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32*, i32*) #5 comdat align 2 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.7"*, i32*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.7"*
  %6 = alloca i64*
  %7 = alloca i32**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.39
  %11 = load i32, i32* @y.40
  %12 = sub i32 %10, -930810925
  %13 = sub i32 %12, 1
  %14 = add i32 %13, -930810925
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 1566579408, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %76
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 1566579408, label %24
    i32 1343330161, label %32
    i32 1901869042, label %57
    i32 450665485, label %60
    i32 2133847068, label %68
    i32 -1316383217, label %69
  ]

; <label>:23:                                     ; preds = %21
  br label %76

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 1343330161, i32 -1316383217
  store i32 %31, i32* %20
  br label %76

; <label>:32:                                     ; preds = %21
  %33 = alloca %"struct.std::_Vector_base.7"*, align 8
  %34 = alloca i32*, align 8
  store i32** %34, i32*** %7
  %35 = alloca i64, align 8
  store i64* %35, i64** %6
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %33, align 8
  %36 = load volatile i32**, i32*** %7
  store i32* %1, i32** %36, align 8
  %37 = load volatile i64*, i64** %6
  store i64 %2, i64* %37, align 8
  %38 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %33, align 8
  store %"struct.std::_Vector_base.7"* %38, %"struct.std::_Vector_base.7"** %5
  %39 = load volatile i32**, i32*** %7
  %40 = load i32*, i32** %39, align 8
  %41 = icmp ne i32* %40, null
  store i1 %41, i1* %4
  %42 = load i32, i32* @x.39
  %43 = load i32, i32* @y.40
  %44 = add i32 %42, 1192037742
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 1192037742
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 1901869042, i32 -1316383217
  store i32 %56, i32* %20
  br label %76

; <label>:57:                                     ; preds = %21
  %58 = load volatile i1, i1* %4
  %59 = select i1 %58, i32 450665485, i32 2133847068
  store i32 %59, i32* %20
  br label %76

; <label>:60:                                     ; preds = %21
  %61 = load volatile %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %5
  %62 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %61, i32 0, i32 0
  %63 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %62 to %"class.std::allocator.8"*
  %64 = load volatile i32**, i32*** %7
  %65 = load i32*, i32** %64, align 8
  %66 = load volatile i64*, i64** %6
  %67 = load i64, i64* %66, align 8
  call void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.8"* dereferenceable(1) %63, i32* %65, i64 %67)
  store i32 2133847068, i32* %20
  br label %76

; <label>:68:                                     ; preds = %21
  ret void

; <label>:69:                                     ; preds = %21
  %70 = alloca %"struct.std::_Vector_base.7"*, align 8
  %71 = alloca i32*, align 8
  %72 = alloca i64, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %70, align 8
  store i32* %1, i32** %71, align 8
  store i64 %2, i64* %72, align 8
  %73 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %70, align 8
  %74 = load i32*, i32** %71, align 8
  %75 = icmp ne i32* %74, null
  store i32 1343330161, i32* %20
  br label %76

; <label>:76:                                     ; preds = %69, %60, %57, %32, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.41
  %5 = load i32, i32* @y.42
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1226774314, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %61
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1226774314, label %17
    i32 -1777086124, label %37
    i32 1543767891, label %56
    i32 -520145688, label %57
  ]

; <label>:16:                                     ; preds = %14
  br label %61

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -1777086124, i32 -520145688
  store i32 %36, i32* %13
  br label %61

; <label>:37:                                     ; preds = %14
  %38 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %38, align 8
  %39 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %38, align 8
  %40 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %39 to %"class.std::allocator.8"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.8"* %40) #3
  %41 = load i32, i32* @x.41
  %42 = load i32, i32* @y.42
  %43 = sub i32 %41, -69850530
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -69850530
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 1543767891, i32 -520145688
  store i32 %55, i32* %13
  br label %61

; <label>:56:                                     ; preds = %14
  ret void

; <label>:57:                                     ; preds = %14
  %58 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %58, align 8
  %59 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %58, align 8
  %60 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %59 to %"class.std::allocator.8"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.8"* %60) #3
  store i32 -1777086124, i32* %13
  br label %61

; <label>:61:                                     ; preds = %57, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.8"* dereferenceable(1), i32*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.43
  %7 = load i32, i32* @y.44
  %8 = sub i32 %6, 957672754
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 957672754
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1750874678, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %71
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1750874678, label %20
    i32 -214193114, label %40
    i32 307329219, label %62
    i32 470300661, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %71

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -214193114, i32 470300661
  store i32 %39, i32* %16
  br label %71

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.8"*, align 8
  %42 = alloca i32*, align 8
  %43 = alloca i64, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %41, align 8
  store i32* %1, i32** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %41, align 8
  %45 = bitcast %"class.std::allocator.8"* %44 to %"class.__gnu_cxx::new_allocator.9"*
  %46 = load i32*, i32** %42, align 8
  %47 = load i64, i64* %43, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.9"* %45, i32* %46, i64 %47)
  %48 = load i32, i32* @x.43
  %49 = load i32, i32* @y.44
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 307329219, i32 470300661
  store i32 %61, i32* %16
  br label %71

; <label>:62:                                     ; preds = %17
  ret void

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.std::allocator.8"*, align 8
  %65 = alloca i32*, align 8
  %66 = alloca i64, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %64, align 8
  store i32* %1, i32** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %64, align 8
  %68 = bitcast %"class.std::allocator.8"* %67 to %"class.__gnu_cxx::new_allocator.9"*
  %69 = load i32*, i32** %65, align 8
  %70 = load i64, i64* %66, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.9"* %68, i32* %69, i64 %70)
  store i32 -214193114, i32* %16
  br label %71

; <label>:71:                                     ; preds = %63, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.9"*, i32*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = bitcast i32* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #7

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiED2Ev(%"class.std::allocator.8"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %2, align 8
  %3 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %2, align 8
  %4 = bitcast %"class.std::allocator.8"* %3 to %"class.__gnu_cxx::new_allocator.9"*
  call void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.9"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.9"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.49
  %5 = load i32, i32* @y.50
  %6 = sub i32 %4, 425882904
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 425882904
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 786811510, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 786811510, label %18
    i32 -1237351154, label %38
    i32 525644028, label %68
    i32 -1287872752, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1237351154, i32 -1287872752
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %39, align 8
  %41 = load i32, i32* @x.49
  %42 = load i32, i32* @y.50
  %43 = add i32 %41, -1262477309
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -1262477309
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 525644028, i32 -1287872752
  store i32 %67, i32* %14
  br label %72

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %70, align 8
  %71 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %70, align 8
  store i32 -1237351154, i32* %14
  br label %72

; <label>:72:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt5arrayIxLm2EES1_EvT_S3_RSaIT0_E(%"struct.std::array.5"*, %"struct.std::array.5"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"struct.std::array.5"*, align 8
  %5 = alloca %"struct.std::array.5"*, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::array.5"* %0, %"struct.std::array.5"** %4, align 8
  store %"struct.std::array.5"* %1, %"struct.std::array.5"** %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %7 = load %"struct.std::array.5"*, %"struct.std::array.5"** %4, align 8
  %8 = load %"struct.std::array.5"*, %"struct.std::array.5"** %5, align 8
  call void @_ZSt8_DestroyIPSt5arrayIxLm2EEEvT_S3_(%"struct.std::array.5"* %7, %"struct.std::array.5"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %4 to %"class.std::allocator.2"*
  ret %"class.std::allocator.2"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EED2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %5 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"struct.std::array.5"*, %"struct.std::array.5"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"struct.std::array.5"*, %"struct.std::array.5"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"struct.std::array.5"*, %"struct.std::array.5"** %13, align 8
  %15 = ptrtoint %"struct.std::array.5"* %11 to i64
  %16 = ptrtoint %"struct.std::array.5"* %14 to i64
  %17 = sub i64 0, %16
  %18 = add i64 %15, %17
  %19 = sub i64 %15, %16
  %20 = sdiv exact i64 %18, 16
  invoke void @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.1"* %5, %"struct.std::array.5"* %8, i64 %20)
          to label %21 unwind label %23

; <label>:21:                                     ; preds = %1
  %22 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %22) #3
  ret void

; <label>:23:                                     ; preds = %1
  %24 = load i32, i32* @x.55
  %25 = load i32, i32* @y.56
  %26 = sub i32 %24, 414525212
  %27 = sub i32 %26, 1
  %28 = add i32 %27, 414525212
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 false, true
  %37 = and i1 %34, false
  %38 = and i1 %32, %36
  %39 = and i1 %35, false
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 false, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  br i1 %48, label %50, label %112

; <label>:50:                                     ; preds = %23, %112
  %51 = landingpad { i8*, i32 }
          catch i8* null
  %52 = extractvalue { i8*, i32 } %51, 0
  store i8* %52, i8** %3, align 8
  %53 = extractvalue { i8*, i32 } %51, 1
  store i32 %53, i32* %4, align 4
  %54 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %54) #3
  %55 = load i32, i32* @x.55
  %56 = load i32, i32* @y.56
  %57 = sub i32 0, 1
  %58 = add i32 %55, %57
  %59 = sub i32 %55, 1
  %60 = mul i32 %55, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %56, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  br i1 %66, label %68, label %112

; <label>:68:                                     ; preds = %50
  br label %69

; <label>:69:                                     ; preds = %68
  %70 = load i32, i32* @x.55
  %71 = load i32, i32* @y.56
  %72 = sub i32 0, 1
  %73 = add i32 %70, %72
  %74 = sub i32 %70, 1
  %75 = mul i32 %70, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %71, 10
  %79 = xor i1 %77, true
  %80 = xor i1 %78, true
  %81 = xor i1 true, true
  %82 = and i1 %79, true
  %83 = and i1 %77, %81
  %84 = and i1 %80, true
  %85 = and i1 %78, %81
  %86 = or i1 %82, %83
  %87 = or i1 %84, %85
  %88 = xor i1 %86, %87
  %89 = or i1 %79, %80
  %90 = xor i1 %89, true
  %91 = or i1 true, %81
  %92 = and i1 %90, %91
  %93 = or i1 %88, %92
  %94 = or i1 %77, %78
  br i1 %93, label %95, label %117

; <label>:95:                                     ; preds = %69, %117
  %96 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %96) #11
  %97 = load i32, i32* @x.55
  %98 = load i32, i32* @y.56
  %99 = sub i32 %97, 1789932780
  %100 = sub i32 %99, 1
  %101 = add i32 %100, 1789932780
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  br i1 %109, label %111, label %117

; <label>:111:                                    ; preds = %95
  unreachable

; <label>:112:                                    ; preds = %50, %23
  %113 = landingpad { i8*, i32 }
          catch i8* null
  %114 = extractvalue { i8*, i32 } %113, 0
  store i8* %114, i8** %3, align 8
  %115 = extractvalue { i8*, i32 } %113, 1
  store i32 %115, i32* %4, align 4
  %116 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %116) #3
  br label %50

; <label>:117:                                    ; preds = %95, %69
  %118 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %118) #11
  br label %95
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt5arrayIxLm2EEEvT_S3_(%"struct.std::array.5"*, %"struct.std::array.5"*) #0 comdat {
  %3 = alloca %"struct.std::array.5"*, align 8
  %4 = alloca %"struct.std::array.5"*, align 8
  store %"struct.std::array.5"* %0, %"struct.std::array.5"** %3, align 8
  store %"struct.std::array.5"* %1, %"struct.std::array.5"** %4, align 8
  %5 = load %"struct.std::array.5"*, %"struct.std::array.5"** %3, align 8
  %6 = load %"struct.std::array.5"*, %"struct.std::array.5"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPSt5arrayIxLm2EEEEvT_S5_(%"struct.std::array.5"* %5, %"struct.std::array.5"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPSt5arrayIxLm2EEEEvT_S5_(%"struct.std::array.5"*, %"struct.std::array.5"*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.59
  %6 = load i32, i32* @y.60
  %7 = add i32 %5, 156294668
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 156294668
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1642460282, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1642460282, label %19
    i32 -211002934, label %39
    i32 -1895335424, label %57
    i32 -654672961, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -211002934, i32 -654672961
  store i32 %38, i32* %15
  br label %61

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::array.5"*, align 8
  %41 = alloca %"struct.std::array.5"*, align 8
  store %"struct.std::array.5"* %0, %"struct.std::array.5"** %40, align 8
  store %"struct.std::array.5"* %1, %"struct.std::array.5"** %41, align 8
  %42 = load i32, i32* @x.59
  %43 = load i32, i32* @y.60
  %44 = add i32 %42, -1015898511
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -1015898511
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1895335424, i32 -654672961
  store i32 %56, i32* %15
  br label %61

; <label>:57:                                     ; preds = %16
  ret void

; <label>:58:                                     ; preds = %16
  %59 = alloca %"struct.std::array.5"*, align 8
  %60 = alloca %"struct.std::array.5"*, align 8
  store %"struct.std::array.5"* %0, %"struct.std::array.5"** %59, align 8
  store %"struct.std::array.5"* %1, %"struct.std::array.5"** %60, align 8
  store i32 -211002934, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.1"*, %"struct.std::array.5"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.1"*
  %6 = alloca i64*
  %7 = alloca %"struct.std::array.5"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.61
  %11 = load i32, i32* @y.62
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 -692039750, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %126
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -692039750, label %23
    i32 -470604090, label %31
    i32 618254086, label %56
    i32 -1795578942, label %59
    i32 -312955109, label %87
    i32 77284, label %109
    i32 971002663, label %110
    i32 1927385785, label %111
    i32 864846584, label %118
  ]

; <label>:22:                                     ; preds = %20
  br label %126

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 -470604090, i32 1927385785
  store i32 %30, i32* %19
  br label %126

; <label>:31:                                     ; preds = %20
  %32 = alloca %"struct.std::_Vector_base.1"*, align 8
  %33 = alloca %"struct.std::array.5"*, align 8
  store %"struct.std::array.5"** %33, %"struct.std::array.5"*** %7
  %34 = alloca i64, align 8
  store i64* %34, i64** %6
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %32, align 8
  %35 = load volatile %"struct.std::array.5"**, %"struct.std::array.5"*** %7
  store %"struct.std::array.5"* %1, %"struct.std::array.5"** %35, align 8
  %36 = load volatile i64*, i64** %6
  store i64 %2, i64* %36, align 8
  %37 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %32, align 8
  store %"struct.std::_Vector_base.1"* %37, %"struct.std::_Vector_base.1"** %5
  %38 = load volatile %"struct.std::array.5"**, %"struct.std::array.5"*** %7
  %39 = load %"struct.std::array.5"*, %"struct.std::array.5"** %38, align 8
  %40 = icmp ne %"struct.std::array.5"* %39, null
  store i1 %40, i1* %4
  %41 = load i32, i32* @x.61
  %42 = load i32, i32* @y.62
  %43 = sub i32 %41, -1296642297
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -1296642297
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 618254086, i32 1927385785
  store i32 %55, i32* %19
  br label %126

; <label>:56:                                     ; preds = %20
  %57 = load volatile i1, i1* %4
  %58 = select i1 %57, i32 -1795578942, i32 971002663
  store i32 %58, i32* %19
  br label %126

; <label>:59:                                     ; preds = %20
  %60 = load i32, i32* @x.61
  %61 = load i32, i32* @y.62
  %62 = sub i32 %60, -996418590
  %63 = sub i32 %62, 1
  %64 = add i32 %63, -996418590
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 true, true
  %73 = and i1 %70, true
  %74 = and i1 %68, %72
  %75 = and i1 %71, true
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 true, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  %86 = select i1 %84, i32 -312955109, i32 864846584
  store i32 %86, i32* %19
  br label %126

; <label>:87:                                     ; preds = %20
  %88 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %89 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %88, i32 0, i32 0
  %90 = bitcast %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %89 to %"class.std::allocator.2"*
  %91 = load volatile %"struct.std::array.5"**, %"struct.std::array.5"*** %7
  %92 = load %"struct.std::array.5"*, %"struct.std::array.5"** %91, align 8
  %93 = load volatile i64*, i64** %6
  %94 = load i64, i64* %93, align 8
  call void @_ZNSt16allocator_traitsISaISt5arrayIxLm2EEEE10deallocateERS2_PS1_m(%"class.std::allocator.2"* dereferenceable(1) %90, %"struct.std::array.5"* %92, i64 %94)
  %95 = load i32, i32* @x.61
  %96 = load i32, i32* @y.62
  %97 = sub i32 0, 1
  %98 = add i32 %95, %97
  %99 = sub i32 %95, 1
  %100 = mul i32 %95, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %96, 10
  %104 = and i1 %102, %103
  %105 = xor i1 %102, %103
  %106 = or i1 %104, %105
  %107 = or i1 %102, %103
  %108 = select i1 %106, i32 77284, i32 864846584
  store i32 %108, i32* %19
  br label %126

; <label>:109:                                    ; preds = %20
  store i32 971002663, i32* %19
  br label %126

; <label>:110:                                    ; preds = %20
  ret void

; <label>:111:                                    ; preds = %20
  %112 = alloca %"struct.std::_Vector_base.1"*, align 8
  %113 = alloca %"struct.std::array.5"*, align 8
  %114 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %112, align 8
  store %"struct.std::array.5"* %1, %"struct.std::array.5"** %113, align 8
  store i64 %2, i64* %114, align 8
  %115 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %112, align 8
  %116 = load %"struct.std::array.5"*, %"struct.std::array.5"** %113, align 8
  %117 = icmp ne %"struct.std::array.5"* %116, null
  store i32 -470604090, i32* %19
  br label %126

; <label>:118:                                    ; preds = %20
  %119 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %120 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %119, i32 0, i32 0
  %121 = bitcast %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %120 to %"class.std::allocator.2"*
  %122 = load volatile %"struct.std::array.5"**, %"struct.std::array.5"*** %7
  %123 = load %"struct.std::array.5"*, %"struct.std::array.5"** %122, align 8
  %124 = load volatile i64*, i64** %6
  %125 = load i64, i64* %124, align 8
  call void @_ZNSt16allocator_traitsISaISt5arrayIxLm2EEEE10deallocateERS2_PS1_m(%"class.std::allocator.2"* dereferenceable(1) %121, %"struct.std::array.5"* %123, i64 %125)
  store i32 -312955109, i32* %19
  br label %126

; <label>:126:                                    ; preds = %118, %111, %109, %87, %59, %56, %31, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %3 to %"class.std::allocator.2"*
  call void @_ZNSaISt5arrayIxLm2EEED2Ev(%"class.std::allocator.2"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt5arrayIxLm2EEEE10deallocateERS2_PS1_m(%"class.std::allocator.2"* dereferenceable(1), %"struct.std::array.5"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.2"*, align 8
  %5 = alloca %"struct.std::array.5"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %4, align 8
  store %"struct.std::array.5"* %1, %"struct.std::array.5"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  %9 = load %"struct.std::array.5"*, %"struct.std::array.5"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm2EEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.3"* %8, %"struct.std::array.5"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm2EEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.3"*, %"struct.std::array.5"*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.67
  %7 = load i32, i32* @y.68
  %8 = sub i32 %6, 1027734028
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1027734028
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -269982349, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -269982349, label %20
    i32 -1661871863, label %40
    i32 -1344406629, label %62
    i32 -1783485951, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1661871863, i32 -1783485951
  store i32 %39, i32* %16
  br label %70

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %42 = alloca %"struct.std::array.5"*, align 8
  %43 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %41, align 8
  store %"struct.std::array.5"* %1, %"struct.std::array.5"** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %41, align 8
  %45 = load %"struct.std::array.5"*, %"struct.std::array.5"** %42, align 8
  %46 = bitcast %"struct.std::array.5"* %45 to i8*
  call void @_ZdlPv(i8* %46) #3
  %47 = load i32, i32* @x.67
  %48 = load i32, i32* @y.68
  %49 = add i32 %47, 312557502
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, 312557502
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -1344406629, i32 -1783485951
  store i32 %61, i32* %16
  br label %70

; <label>:62:                                     ; preds = %17
  ret void

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %65 = alloca %"struct.std::array.5"*, align 8
  %66 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %64, align 8
  store %"struct.std::array.5"* %1, %"struct.std::array.5"** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %64, align 8
  %68 = load %"struct.std::array.5"*, %"struct.std::array.5"** %65, align 8
  %69 = bitcast %"struct.std::array.5"* %68 to i8*
  call void @_ZdlPv(i8* %69) #3
  store i32 -1661871863, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt5arrayIxLm2EEED2Ev(%"class.std::allocator.2"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm2EEED2Ev(%"class.__gnu_cxx::new_allocator.3"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm2EEED2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt5arrayIxLm3EES1_EvT_S3_RSaIT0_E(%"struct.std::array"*, %"struct.std::array"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"struct.std::array"*, align 8
  %5 = alloca %"struct.std::array"*, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::array"* %0, %"struct.std::array"** %4, align 8
  store %"struct.std::array"* %1, %"struct.std::array"** %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %7 = load %"struct.std::array"*, %"struct.std::array"** %4, align 8
  %8 = load %"struct.std::array"*, %"struct.std::array"** %5, align 8
  call void @_ZSt8_DestroyIPSt5arrayIxLm3EEEvT_S3_(%"struct.std::array"* %7, %"struct.std::array"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.77
  %3 = load i32, i32* @y.78
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 false, true
  %14 = and i1 %11, false
  %15 = and i1 %9, %13
  %16 = and i1 %12, false
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 false, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %83

; <label>:27:                                     ; preds = %1, %83
  %28 = alloca %"struct.std::_Vector_base"*, align 8
  %29 = alloca i8*
  %30 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %28, align 8
  %31 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %28, align 8
  %32 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %32, i32 0, i32 0
  %34 = load %"struct.std::array"*, %"struct.std::array"** %33, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %35, i32 0, i32 2
  %37 = load %"struct.std::array"*, %"struct.std::array"** %36, align 8
  %38 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %38, i32 0, i32 0
  %40 = load %"struct.std::array"*, %"struct.std::array"** %39, align 8
  %41 = ptrtoint %"struct.std::array"* %37 to i64
  %42 = ptrtoint %"struct.std::array"* %40 to i64
  %43 = sub i64 0, %42
  %44 = add i64 %41, %43
  %45 = sub i64 %41, %42
  %46 = sdiv exact i64 %44, 24
  %47 = load i32, i32* @x.77
  %48 = load i32, i32* @y.78
  %49 = add i32 %47, 1578613920
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, 1578613920
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  br i1 %71, label %73, label %83

; <label>:73:                                     ; preds = %27
  invoke void @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"* %31, %"struct.std::array"* %34, i64 %46)
          to label %74 unwind label %76

; <label>:74:                                     ; preds = %73
  %75 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %75) #3
  ret void

; <label>:76:                                     ; preds = %73
  %77 = landingpad { i8*, i32 }
          catch i8* null
  %78 = extractvalue { i8*, i32 } %77, 0
  store i8* %78, i8** %29, align 8
  %79 = extractvalue { i8*, i32 } %77, 1
  store i32 %79, i32* %30, align 4
  %80 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %80) #3
  br label %81

; <label>:81:                                     ; preds = %76
  %82 = load i8*, i8** %29, align 8
  call void @__clang_call_terminate(i8* %82) #11
  unreachable

; <label>:83:                                     ; preds = %27, %1
  %84 = alloca %"struct.std::_Vector_base"*, align 8
  %85 = alloca i8*
  %86 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %84, align 8
  %87 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %84, align 8
  %88 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %87, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %88, i32 0, i32 0
  %90 = load %"struct.std::array"*, %"struct.std::array"** %89, align 8
  %91 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %87, i32 0, i32 0
  %92 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %91, i32 0, i32 2
  %93 = load %"struct.std::array"*, %"struct.std::array"** %92, align 8
  %94 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %87, i32 0, i32 0
  %95 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %94, i32 0, i32 0
  %96 = load %"struct.std::array"*, %"struct.std::array"** %95, align 8
  %97 = ptrtoint %"struct.std::array"* %93 to i64
  %98 = ptrtoint %"struct.std::array"* %96 to i64
  %99 = sub i64 0, 4921961256208330855
  %100 = sub i64 %99, %97
  %101 = add i64 %100, 4921961256208330855
  %102 = sub i64 0, %97
  %103 = sub i64 %101, 6000052762562038913
  %104 = add i64 %103, %98
  %105 = add i64 %104, 6000052762562038913
  %106 = add i64 %101, %98
  %107 = add i64 0, -4503180432933802614
  %108 = sub i64 %107, %97
  %109 = sub i64 %108, -4503180432933802614
  %110 = sub i64 0, %97
  %111 = sub i64 %109, 6914243442823275346
  %112 = add i64 %111, %98
  %113 = add i64 %112, 6914243442823275346
  %114 = add i64 %109, %98
  %115 = sub i64 0, -4217181922652977848
  %116 = sub i64 %115, %97
  %117 = add i64 %116, -4217181922652977848
  %118 = sub i64 0, %97
  %119 = add i64 %117, -2940660513538390239
  %120 = add i64 %119, %98
  %121 = sub i64 %120, -2940660513538390239
  %122 = add i64 %117, %98
  %123 = add i64 %97, -2435920169887688064
  %124 = sub i64 %123, %98
  %125 = sub i64 %124, -2435920169887688064
  %126 = sub i64 %97, %98
  %127 = mul i64 %125, %98
  %128 = shl i64 %97, %98
  %129 = sub i64 0, %98
  %130 = add i64 %97, %129
  %131 = sub i64 %97, %98
  %132 = mul i64 %130, %98
  %133 = sub i64 %97, -629063278033119447
  %134 = sub i64 %133, %98
  %135 = add i64 %134, -629063278033119447
  %136 = sub i64 %97, %98
  %137 = sub i64 0, %135
  %138 = add i64 0, %137
  %139 = sub i64 0, %135
  %140 = sub i64 %138, 8178076550191045972
  %141 = add i64 %140, 24
  %142 = add i64 %141, 8178076550191045972
  %143 = add i64 %138, 24
  %144 = shl i64 %135, 24
  %145 = sub i64 0, 1655271166730728049
  %146 = sub i64 %145, %135
  %147 = add i64 %146, 1655271166730728049
  %148 = sub i64 0, %135
  %149 = sub i64 0, 24
  %150 = sub i64 %147, %149
  %151 = add i64 %147, 24
  %152 = sdiv exact i64 %135, 24
  br label %27
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt5arrayIxLm3EEEvT_S3_(%"struct.std::array"*, %"struct.std::array"*) #0 comdat {
  %3 = alloca %"struct.std::array"*, align 8
  %4 = alloca %"struct.std::array"*, align 8
  store %"struct.std::array"* %0, %"struct.std::array"** %3, align 8
  store %"struct.std::array"* %1, %"struct.std::array"** %4, align 8
  %5 = load %"struct.std::array"*, %"struct.std::array"** %3, align 8
  %6 = load %"struct.std::array"*, %"struct.std::array"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPSt5arrayIxLm3EEEEvT_S5_(%"struct.std::array"* %5, %"struct.std::array"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPSt5arrayIxLm3EEEEvT_S5_(%"struct.std::array"*, %"struct.std::array"*) #5 comdat align 2 {
  %3 = alloca %"struct.std::array"*, align 8
  %4 = alloca %"struct.std::array"*, align 8
  store %"struct.std::array"* %0, %"struct.std::array"** %3, align 8
  store %"struct.std::array"* %1, %"struct.std::array"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"*, %"struct.std::array"*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::array"*
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca %"struct.std::_Vector_base"*, align 8
  %7 = alloca %"struct.std::array"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %6, align 8
  store %"struct.std::array"* %1, %"struct.std::array"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6, align 8
  store %"struct.std::_Vector_base"* %9, %"struct.std::_Vector_base"** %5
  %10 = load %"struct.std::array"*, %"struct.std::array"** %7, align 8
  store %"struct.std::array"* %10, %"struct.std::array"** %4
  %11 = alloca i32
  store i32 -1486319811, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %75
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -1486319811, label %15
    i32 6129039, label %19
    i32 1860397367, label %46
    i32 -186573893, label %67
    i32 -1241313735, label %68
    i32 -1196042744, label %69
  ]

; <label>:14:                                     ; preds = %12
  br label %75

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"struct.std::array"*, %"struct.std::array"** %4
  %17 = icmp ne %"struct.std::array"* %16, null
  %18 = select i1 %17, i32 6129039, i32 -1241313735
  store i32 %18, i32* %11
  br label %75

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.83
  %21 = load i32, i32* @y.84
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 true, true
  %32 = and i1 %29, true
  %33 = and i1 %27, %31
  %34 = and i1 %30, true
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 true, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  %45 = select i1 %43, i32 1860397367, i32 -1196042744
  store i32 %45, i32* %11
  br label %75

; <label>:46:                                     ; preds = %12
  %47 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %48 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %47, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %48 to %"class.std::allocator"*
  %50 = load %"struct.std::array"*, %"struct.std::array"** %7, align 8
  %51 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt5arrayIxLm3EEEE10deallocateERS2_PS1_m(%"class.std::allocator"* dereferenceable(1) %49, %"struct.std::array"* %50, i64 %51)
  %52 = load i32, i32* @x.83
  %53 = load i32, i32* @y.84
  %54 = sub i32 %52, 1049538194
  %55 = sub i32 %54, 1
  %56 = add i32 %55, 1049538194
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 -186573893, i32 -1196042744
  store i32 %66, i32* %11
  br label %75

; <label>:67:                                     ; preds = %12
  store i32 -1241313735, i32* %11
  br label %75

; <label>:68:                                     ; preds = %12
  ret void

; <label>:69:                                     ; preds = %12
  %70 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %71 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %70, i32 0, i32 0
  %72 = bitcast %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %71 to %"class.std::allocator"*
  %73 = load %"struct.std::array"*, %"struct.std::array"** %7, align 8
  %74 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt5arrayIxLm3EEEE10deallocateERS2_PS1_m(%"class.std::allocator"* dereferenceable(1) %72, %"struct.std::array"* %73, i64 %74)
  store i32 1860397367, i32* %11
  br label %75

; <label>:75:                                     ; preds = %69, %67, %46, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaISt5arrayIxLm3EEED2Ev(%"class.std::allocator"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt5arrayIxLm3EEEE10deallocateERS2_PS1_m(%"class.std::allocator"* dereferenceable(1), %"struct.std::array"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca %"struct.std::array"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store %"struct.std::array"* %1, %"struct.std::array"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load %"struct.std::array"*, %"struct.std::array"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm3EEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator"* %8, %"struct.std::array"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm3EEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator"*, %"struct.std::array"*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca %"struct.std::array"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store %"struct.std::array"* %1, %"struct.std::array"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load %"struct.std::array"*, %"struct.std::array"** %5, align 8
  %9 = bitcast %"struct.std::array"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt5arrayIxLm3EEED2Ev(%"class.std::allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm3EEED2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm3EEED2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt14__array_traitsIxLm3EE6_S_refERA3_Kxm([3 x i64]* dereferenceable(24), i64) #5 comdat align 2 {
  %3 = alloca [3 x i64]*, align 8
  %4 = alloca i64, align 8
  store [3 x i64]* %0, [3 x i64]** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load [3 x i64]*, [3 x i64]** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = getelementptr inbounds [3 x i64], [3 x i64]* %5, i64 0, i64 %6
  ret i64* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EEC2Ev(%"class.std::vector"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  invoke void @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EEC2Ev(%"struct.std::_Vector_base"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt5arrayIxLm2EESaIS1_EEC2Ev(%"class.std::vector.0"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  invoke void @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EEC2Ev(%"struct.std::_Vector_base.1"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.6"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.101
  %3 = load i32, i32* @y.102
  %4 = add i32 %2, -1992077492
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -1992077492
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %79

; <label>:16:                                     ; preds = %1, %79
  %17 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %17, align 8
  %18 = load %"class.std::vector.6"*, %"class.std::vector.6"** %17, align 8
  %19 = bitcast %"class.std::vector.6"* %18 to %"struct.std::_Vector_base.7"*
  %20 = load i32, i32* @x.101
  %21 = load i32, i32* @y.102
  %22 = sub i32 %20, 1701264574
  %23 = sub i32 %22, 1
  %24 = add i32 %23, 1701264574
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  br i1 %32, label %34, label %79

; <label>:34:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base.7"* %19)
          to label %35 unwind label %76

; <label>:35:                                     ; preds = %34
  %36 = load i32, i32* @x.101
  %37 = load i32, i32* @y.102
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  br i1 %59, label %61, label %83

; <label>:61:                                     ; preds = %35, %83
  %62 = load i32, i32* @x.101
  %63 = load i32, i32* @y.102
  %64 = sub i32 0, 1
  %65 = add i32 %62, %64
  %66 = sub i32 %62, 1
  %67 = mul i32 %62, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %63, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  br i1 %73, label %75, label %83

; <label>:75:                                     ; preds = %61
  ret void

; <label>:76:                                     ; preds = %34
  %77 = landingpad { i8*, i32 }
          catch i8* null
  %78 = extractvalue { i8*, i32 } %77, 0
  call void @__clang_call_terminate(i8* %78) #11
  unreachable

; <label>:79:                                     ; preds = %16, %1
  %80 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %80, align 8
  %81 = load %"class.std::vector.6"*, %"class.std::vector.6"** %80, align 8
  %82 = bitcast %"class.std::vector.6"* %81 to %"struct.std::_Vector_base.7"*
  br label %16

; <label>:83:                                     ; preds = %61, %35
  br label %61
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EE6assignEmRKS1_(%"class.std::vector"*, i64, %"struct.std::array"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.std::array"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"struct.std::array"* %2, %"struct.std::array"** %6, align 8
  %7 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load %"struct.std::array"*, %"struct.std::array"** %6, align 8
  call void @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EE14_M_fill_assignEmRKS1_(%"class.std::vector"* %7, i64 %8, %"struct.std::array"* dereferenceable(24) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN1M1eEv(%"struct.std::array"* noalias sret) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.105
  %5 = load i32, i32* @y.106
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1449473645, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %66
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1449473645, label %17
    i32 966758506, label %25
    i32 -1661353940, label %58
    i32 -1151771095, label %59
  ]

; <label>:16:                                     ; preds = %14
  br label %66

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 966758506, i32 -1151771095
  store i32 %24, i32* %13
  br label %66

; <label>:25:                                     ; preds = %14
  %26 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %0, i32 0, i32 0
  %27 = getelementptr inbounds [3 x i64], [3 x i64]* %26, i64 0, i64 0
  %28 = call i64 @_ZNSt14numeric_limitsIxE3maxEv() #3
  store i64 %28, i64* %27, align 8
  %29 = getelementptr inbounds i64, i64* %27, i64 1
  %30 = call i64 @_ZNSt14numeric_limitsIxE3minEv() #3
  store i64 %30, i64* %29, align 8
  %31 = getelementptr inbounds i64, i64* %29, i64 1
  store i64 0, i64* %31, align 8
  %32 = load i32, i32* @x.105
  %33 = load i32, i32* @y.106
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -1661353940, i32 -1151771095
  store i32 %57, i32* %13
  br label %66

; <label>:58:                                     ; preds = %14
  ret void

; <label>:59:                                     ; preds = %14
  %60 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %0, i32 0, i32 0
  %61 = getelementptr inbounds [3 x i64], [3 x i64]* %60, i64 0, i64 0
  %62 = call i64 @_ZNSt14numeric_limitsIxE3maxEv() #3
  store i64 %62, i64* %61, align 8
  %63 = getelementptr inbounds i64, i64* %61, i64 1
  %64 = call i64 @_ZNSt14numeric_limitsIxE3minEv() #3
  store i64 %64, i64* %63, align 8
  %65 = getelementptr inbounds i64, i64* %63, i64 1
  store i64 0, i64* %65, align 8
  store i32 966758506, i32* %13
  br label %66

; <label>:66:                                     ; preds = %59, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt5arrayIxLm2EESaIS1_EE6assignEmRKS1_(%"class.std::vector.0"*, i64, %"struct.std::array.5"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.std::array.5"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"struct.std::array.5"* %2, %"struct.std::array.5"** %6, align 8
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load %"struct.std::array.5"*, %"struct.std::array.5"** %6, align 8
  call void @_ZNSt6vectorISt5arrayIxLm2EESaIS1_EE14_M_fill_assignEmRKS1_(%"class.std::vector.0"* %7, i64 %8, %"struct.std::array.5"* dereferenceable(16) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64, i64 } @_ZN1M2idEv() #5 comdat align 2 {
  %1 = alloca %"struct.std::array.5", align 8
  %2 = getelementptr inbounds %"struct.std::array.5", %"struct.std::array.5"* %1, i32 0, i32 0
  %3 = getelementptr inbounds [2 x i64], [2 x i64]* %2, i64 0, i64 0
  store i64 1, i64* %3, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %"struct.std::array.5", %"struct.std::array.5"* %1, i32 0, i32 0
  %6 = bitcast [2 x i64]* %5 to { i64, i64 }*
  %7 = load { i64, i64 }, { i64, i64 }* %6, align 8
  ret { i64, i64 } %7
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE6assignEmRKi(%"class.std::vector.6"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.6"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::vector.6"*, %"class.std::vector.6"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i32*, i32** %6, align 8
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_assignEmRKi(%"class.std::vector.6"* %7, i64 %8, i32* dereferenceable(4) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.6"*, i64) #5 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.113
  %7 = load i32, i32* @y.114
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1398127622, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1398127622, label %19
    i32 1539867716, label %27
    i32 1721805843, label %52
    i32 -892524267, label %54
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1539867716, i32 -892524267
  store i32 %26, i32* %15
  br label %64

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.6"*, align 8
  %29 = alloca i64, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"class.std::vector.6"*, %"class.std::vector.6"** %28, align 8
  %31 = bitcast %"class.std::vector.6"* %30 to %"struct.std::_Vector_base.7"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %32, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  %35 = load i64, i64* %29, align 8
  %36 = getelementptr inbounds i32, i32* %34, i64 %35
  store i32* %36, i32** %3
  %37 = load i32, i32* @x.113
  %38 = load i32, i32* @y.114
  %39 = sub i32 %37, 454176713
  %40 = sub i32 %39, 1
  %41 = add i32 %40, 454176713
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 1721805843, i32 -892524267
  store i32 %51, i32* %15
  br label %64

; <label>:52:                                     ; preds = %16
  %53 = load volatile i32*, i32** %3
  ret i32* %53

; <label>:54:                                     ; preds = %16
  %55 = alloca %"class.std::vector.6"*, align 8
  %56 = alloca i64, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %55, align 8
  store i64 %1, i64* %56, align 8
  %57 = load %"class.std::vector.6"*, %"class.std::vector.6"** %55, align 8
  %58 = bitcast %"class.std::vector.6"* %57 to %"struct.std::_Vector_base.7"*
  %59 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %58, i32 0, i32 0
  %60 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %59, i32 0, i32 0
  %61 = load i32*, i32** %60, align 8
  %62 = load i64, i64* %56, align 8
  %63 = getelementptr inbounds i32, i32* %61, i64 %62
  store i32 1539867716, i32* %15
  br label %64

; <label>:64:                                     ; preds = %54, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EEC2Ev(%"struct.std::_Vector_base"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.115
  %5 = load i32, i32* @y.116
  %6 = add i32 %4, 2125228040
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 2125228040
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1162233181, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1162233181, label %18
    i32 1275407247, label %38
    i32 -885607707, label %69
    i32 -1808206437, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1275407247, i32 -1808206437
  store i32 %37, i32* %14
  br label %74

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %39, align 8
  %40 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %40, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %41)
  %42 = load i32, i32* @x.115
  %43 = load i32, i32* @y.116
  %44 = add i32 %42, 772539804
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 772539804
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -885607707, i32 -1808206437
  store i32 %68, i32* %14
  br label %74

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %71, align 8
  %72 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %71, align 8
  %73 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %72, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %73)
  store i32 1275407247, i32* %14
  br label %74

; <label>:74:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaISt5arrayIxLm3EEEC2Ev(%"class.std::allocator"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %3, i32 0, i32 0
  store %"struct.std::array"* null, %"struct.std::array"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %3, i32 0, i32 1
  store %"struct.std::array"* null, %"struct.std::array"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %3, i32 0, i32 2
  store %"struct.std::array"* null, %"struct.std::array"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt5arrayIxLm3EEEC2Ev(%"class.std::allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.119
  %5 = load i32, i32* @y.120
  %6 = sub i32 %4, 1136721326
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1136721326
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 930742946, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 930742946, label %18
    i32 -806667027, label %38
    i32 733039393, label %56
    i32 -246923504, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -806667027, i32 -246923504
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %39, align 8
  %40 = load %"class.std::allocator"*, %"class.std::allocator"** %39, align 8
  %41 = bitcast %"class.std::allocator"* %40 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm3EEEC2Ev(%"class.__gnu_cxx::new_allocator"* %41) #3
  %42 = load i32, i32* @x.119
  %43 = load i32, i32* @y.120
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 733039393, i32 -246923504
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %58, align 8
  %59 = load %"class.std::allocator"*, %"class.std::allocator"** %58, align 8
  %60 = bitcast %"class.std::allocator"* %59 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm3EEEC2Ev(%"class.__gnu_cxx::new_allocator"* %60) #3
  store i32 -806667027, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm3EEEC2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EEC2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %3 to %"class.std::allocator.2"*
  call void @_ZNSaISt5arrayIxLm2EEEC2Ev(%"class.std::allocator.2"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %3, i32 0, i32 0
  store %"struct.std::array.5"* null, %"struct.std::array.5"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %3, i32 0, i32 1
  store %"struct.std::array.5"* null, %"struct.std::array.5"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %3, i32 0, i32 2
  store %"struct.std::array.5"* null, %"struct.std::array.5"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt5arrayIxLm2EEEC2Ev(%"class.std::allocator.2"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm2EEEC2Ev(%"class.__gnu_cxx::new_allocator.3"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm2EEEC2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base.7"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.7"*, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %2, align 8
  %3 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.133
  %5 = load i32, i32* @y.134
  %6 = sub i32 %4, 1530241916
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1530241916
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -448758763, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %67
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -448758763, label %18
    i32 1372485697, label %38
    i32 1437364726, label %59
    i32 -619424667, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %67

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1372485697, i32 -619424667
  store i32 %37, i32* %14
  br label %67

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %39, align 8
  %40 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %39, align 8
  %41 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %40 to %"class.std::allocator.8"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.8"* %41) #3
  %42 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %40, i32 0, i32 0
  store i32* null, i32** %42, align 8
  %43 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %40, i32 0, i32 1
  store i32* null, i32** %43, align 8
  %44 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %40, i32 0, i32 2
  store i32* null, i32** %44, align 8
  %45 = load i32, i32* @x.133
  %46 = load i32, i32* @y.134
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1437364726, i32 -619424667
  store i32 %58, i32* %14
  br label %67

; <label>:59:                                     ; preds = %15
  ret void

; <label>:60:                                     ; preds = %15
  %61 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %61, align 8
  %62 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %61, align 8
  %63 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %62 to %"class.std::allocator.8"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.8"* %63) #3
  %64 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %62, i32 0, i32 0
  store i32* null, i32** %64, align 8
  %65 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %62, i32 0, i32 1
  store i32* null, i32** %65, align 8
  %66 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %62, i32 0, i32 2
  store i32* null, i32** %66, align 8
  store i32 1372485697, i32* %14
  br label %67

; <label>:67:                                     ; preds = %60, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2Ev(%"class.std::allocator.8"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %2, align 8
  %3 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %2, align 8
  %4 = bitcast %"class.std::allocator.8"* %3 to %"class.__gnu_cxx::new_allocator.9"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.9"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.9"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EE14_M_fill_assignEmRKS1_(%"class.std::vector"*, i64, %"struct.std::array"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"class.std::vector"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %8 = alloca %"class.std::vector"*
  %9 = alloca %"struct.std::array"**
  %10 = alloca i64*
  %11 = alloca i1
  %12 = alloca i1
  %13 = load i32, i32* @x.139
  %14 = load i32, i32* @y.140
  %15 = sub i32 %13, 129363104
  %16 = sub i32 %15, 1
  %17 = add i32 %16, 129363104
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  store i1 %21, i1* %12
  %22 = icmp slt i32 %14, 10
  store i1 %22, i1* %11
  %23 = alloca i32
  store i32 -1715735716, i32* %23
  br label %24

; <label>:24:                                     ; preds = %3, %315
  %25 = load i32, i32* %23
  switch i32 %25, label %26 [
    i32 -1715735716, label %27
    i32 -1384055911, label %47
    i32 -1113908492, label %89
    i32 1338527950, label %92
    i32 -1502249011, label %107
    i32 -620207130, label %138
    i32 2003103305, label %139
    i32 -741453776, label %146
    i32 1498425577, label %185
    i32 775350127, label %197
    i32 -2086620374, label %213
    i32 2011993997, label %241
    i32 2029702322, label %242
    i32 -1600968287, label %258
    i32 126502162, label %285
    i32 -807074656, label %286
    i32 990547735, label %297
    i32 -1385177833, label %313
    i32 199500980, label %314
  ]

; <label>:26:                                     ; preds = %24
  br label %315

; <label>:27:                                     ; preds = %24
  %28 = load volatile i1, i1* %12
  %29 = load volatile i1, i1* %11
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 true, true
  %33 = and i1 %30, true
  %34 = and i1 %28, %32
  %35 = and i1 %31, true
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 true, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 -1384055911, i32 -807074656
  store i32 %46, i32* %23
  br label %315

; <label>:47:                                     ; preds = %24
  %48 = alloca %"class.std::vector"*, align 8
  %49 = alloca i64, align 8
  store i64* %49, i64** %10
  %50 = alloca %"struct.std::array"*, align 8
  store %"struct.std::array"** %50, %"struct.std::array"*** %9
  %51 = alloca %"class.std::vector", align 8
  store %"class.std::vector"* %51, %"class.std::vector"** %8
  %52 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %52, %"class.__gnu_cxx::__normal_iterator"** %7
  %53 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %53, %"class.__gnu_cxx::__normal_iterator"** %6
  store %"class.std::vector"* %0, %"class.std::vector"** %48, align 8
  %54 = load volatile i64*, i64** %10
  store i64 %1, i64* %54, align 8
  %55 = load volatile %"struct.std::array"**, %"struct.std::array"*** %9
  store %"struct.std::array"* %2, %"struct.std::array"** %55, align 8
  %56 = load %"class.std::vector"*, %"class.std::vector"** %48, align 8
  store %"class.std::vector"* %56, %"class.std::vector"** %5
  %57 = load volatile i64*, i64** %10
  %58 = load i64, i64* %57, align 8
  %59 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %60 = call i64 @_ZNKSt6vectorISt5arrayIxLm3EESaIS1_EE8capacityEv(%"class.std::vector"* %59) #3
  %61 = icmp ugt i64 %58, %60
  store i1 %61, i1* %4
  %62 = load i32, i32* @x.139
  %63 = load i32, i32* @y.140
  %64 = add i32 %62, 677606392
  %65 = sub i32 %64, 1
  %66 = sub i32 %65, 677606392
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 true, true
  %75 = and i1 %72, true
  %76 = and i1 %70, %74
  %77 = and i1 %73, true
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 true, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  %88 = select i1 %86, i32 -1113908492, i32 -807074656
  store i32 %88, i32* %23
  br label %315

; <label>:89:                                     ; preds = %24
  %90 = load volatile i1, i1* %4
  %91 = select i1 %90, i32 1338527950, i32 2003103305
  store i32 %91, i32* %23
  br label %315

; <label>:92:                                     ; preds = %24
  %93 = load i32, i32* @x.139
  %94 = load i32, i32* @y.140
  %95 = sub i32 0, 1
  %96 = add i32 %93, %95
  %97 = sub i32 %93, 1
  %98 = mul i32 %93, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %94, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  %106 = select i1 %104, i32 -1502249011, i32 990547735
  store i32 %106, i32* %23
  br label %315

; <label>:107:                                    ; preds = %24
  %108 = load volatile i64*, i64** %10
  %109 = load i64, i64* %108, align 8
  %110 = load volatile %"struct.std::array"**, %"struct.std::array"*** %9
  %111 = load %"struct.std::array"*, %"struct.std::array"** %110, align 8
  %112 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %113 = bitcast %"class.std::vector"* %112 to %"struct.std::_Vector_base"*
  %114 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %113) #3
  %115 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  call void @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector"* %115, i64 %109, %"struct.std::array"* dereferenceable(24) %111, %"class.std::allocator"* dereferenceable(1) %114)
  %116 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %117 = bitcast %"class.std::vector"* %116 to %"struct.std::_Vector_base"*
  %118 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %117, i32 0, i32 0
  %119 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %120 = bitcast %"class.std::vector"* %119 to %"struct.std::_Vector_base"*
  %121 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %120, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %118, %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* dereferenceable(24) %121) #3
  %122 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  call void @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EED2Ev(%"class.std::vector"* %122) #3
  %123 = load i32, i32* @x.139
  %124 = load i32, i32* @y.140
  %125 = add i32 %123, -9028921
  %126 = sub i32 %125, 1
  %127 = sub i32 %126, -9028921
  %128 = sub i32 %123, 1
  %129 = mul i32 %123, %127
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %124, 10
  %133 = and i1 %131, %132
  %134 = xor i1 %131, %132
  %135 = or i1 %133, %134
  %136 = or i1 %131, %132
  %137 = select i1 %135, i32 -620207130, i32 990547735
  store i32 %137, i32* %23
  br label %315

; <label>:138:                                    ; preds = %24
  store i32 2029702322, i32* %23
  br label %315

; <label>:139:                                    ; preds = %24
  %140 = load volatile i64*, i64** %10
  %141 = load i64, i64* %140, align 8
  %142 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %143 = call i64 @_ZNKSt6vectorISt5arrayIxLm3EESaIS1_EE4sizeEv(%"class.std::vector"* %142) #3
  %144 = icmp ugt i64 %141, %143
  %145 = select i1 %144, i32 -741453776, i32 1498425577
  store i32 %145, i32* %23
  br label %315

; <label>:146:                                    ; preds = %24
  %147 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %148 = call %"struct.std::array"* @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EE5beginEv(%"class.std::vector"* %147) #3
  %149 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %150 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %149, i32 0, i32 0
  store %"struct.std::array"* %148, %"struct.std::array"** %150, align 8
  %151 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %152 = call %"struct.std::array"* @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EE3endEv(%"class.std::vector"* %151) #3
  %153 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %154 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %153, i32 0, i32 0
  store %"struct.std::array"* %152, %"struct.std::array"** %154, align 8
  %155 = load volatile %"struct.std::array"**, %"struct.std::array"*** %9
  %156 = load %"struct.std::array"*, %"struct.std::array"** %155, align 8
  %157 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %158 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %157, i32 0, i32 0
  %159 = load %"struct.std::array"*, %"struct.std::array"** %158, align 8
  %160 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %161 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %160, i32 0, i32 0
  %162 = load %"struct.std::array"*, %"struct.std::array"** %161, align 8
  call void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm3EESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RKT0_(%"struct.std::array"* %159, %"struct.std::array"* %162, %"struct.std::array"* dereferenceable(24) %156)
  %163 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %164 = bitcast %"class.std::vector"* %163 to %"struct.std::_Vector_base"*
  %165 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %164, i32 0, i32 0
  %166 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %165, i32 0, i32 1
  %167 = load %"struct.std::array"*, %"struct.std::array"** %166, align 8
  %168 = load volatile i64*, i64** %10
  %169 = load i64, i64* %168, align 8
  %170 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %171 = call i64 @_ZNKSt6vectorISt5arrayIxLm3EESaIS1_EE4sizeEv(%"class.std::vector"* %170) #3
  %172 = sub i64 0, %171
  %173 = add i64 %169, %172
  %174 = sub i64 %169, %171
  %175 = load volatile %"struct.std::array"**, %"struct.std::array"*** %9
  %176 = load %"struct.std::array"*, %"struct.std::array"** %175, align 8
  %177 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %178 = bitcast %"class.std::vector"* %177 to %"struct.std::_Vector_base"*
  %179 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %178) #3
  %180 = call %"struct.std::array"* @_ZSt24__uninitialized_fill_n_aIPSt5arrayIxLm3EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%"struct.std::array"* %167, i64 %173, %"struct.std::array"* dereferenceable(24) %176, %"class.std::allocator"* dereferenceable(1) %179)
  %181 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %182 = bitcast %"class.std::vector"* %181 to %"struct.std::_Vector_base"*
  %183 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %182, i32 0, i32 0
  %184 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %183, i32 0, i32 1
  store %"struct.std::array"* %180, %"struct.std::array"** %184, align 8
  store i32 775350127, i32* %23
  br label %315

; <label>:185:                                    ; preds = %24
  %186 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %187 = bitcast %"class.std::vector"* %186 to %"struct.std::_Vector_base"*
  %188 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %187, i32 0, i32 0
  %189 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %188, i32 0, i32 0
  %190 = load %"struct.std::array"*, %"struct.std::array"** %189, align 8
  %191 = load volatile i64*, i64** %10
  %192 = load i64, i64* %191, align 8
  %193 = load volatile %"struct.std::array"**, %"struct.std::array"*** %9
  %194 = load %"struct.std::array"*, %"struct.std::array"** %193, align 8
  %195 = call %"struct.std::array"* @_ZSt6fill_nIPSt5arrayIxLm3EEmS1_ET_S3_T0_RKT1_(%"struct.std::array"* %190, i64 %192, %"struct.std::array"* dereferenceable(24) %194)
  %196 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  call void @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector"* %196, %"struct.std::array"* %195) #3
  store i32 775350127, i32* %23
  br label %315

; <label>:197:                                    ; preds = %24
  %198 = load i32, i32* @x.139
  %199 = load i32, i32* @y.140
  %200 = add i32 %198, 2119546556
  %201 = sub i32 %200, 1
  %202 = sub i32 %201, 2119546556
  %203 = sub i32 %198, 1
  %204 = mul i32 %198, %202
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %199, 10
  %208 = and i1 %206, %207
  %209 = xor i1 %206, %207
  %210 = or i1 %208, %209
  %211 = or i1 %206, %207
  %212 = select i1 %210, i32 -2086620374, i32 -1385177833
  store i32 %212, i32* %23
  br label %315

; <label>:213:                                    ; preds = %24
  %214 = load i32, i32* @x.139
  %215 = load i32, i32* @y.140
  %216 = sub i32 %214, 240471488
  %217 = sub i32 %216, 1
  %218 = add i32 %217, 240471488
  %219 = sub i32 %214, 1
  %220 = mul i32 %214, %218
  %221 = urem i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %215, 10
  %224 = xor i1 %222, true
  %225 = xor i1 %223, true
  %226 = xor i1 false, true
  %227 = and i1 %224, false
  %228 = and i1 %222, %226
  %229 = and i1 %225, false
  %230 = and i1 %223, %226
  %231 = or i1 %227, %228
  %232 = or i1 %229, %230
  %233 = xor i1 %231, %232
  %234 = or i1 %224, %225
  %235 = xor i1 %234, true
  %236 = or i1 false, %226
  %237 = and i1 %235, %236
  %238 = or i1 %233, %237
  %239 = or i1 %222, %223
  %240 = select i1 %238, i32 2011993997, i32 -1385177833
  store i32 %240, i32* %23
  br label %315

; <label>:241:                                    ; preds = %24
  store i32 2029702322, i32* %23
  br label %315

; <label>:242:                                    ; preds = %24
  %243 = load i32, i32* @x.139
  %244 = load i32, i32* @y.140
  %245 = add i32 %243, -627457797
  %246 = sub i32 %245, 1
  %247 = sub i32 %246, -627457797
  %248 = sub i32 %243, 1
  %249 = mul i32 %243, %247
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %244, 10
  %253 = and i1 %251, %252
  %254 = xor i1 %251, %252
  %255 = or i1 %253, %254
  %256 = or i1 %251, %252
  %257 = select i1 %255, i32 -1600968287, i32 199500980
  store i32 %257, i32* %23
  br label %315

; <label>:258:                                    ; preds = %24
  %259 = load i32, i32* @x.139
  %260 = load i32, i32* @y.140
  %261 = sub i32 0, 1
  %262 = add i32 %259, %261
  %263 = sub i32 %259, 1
  %264 = mul i32 %259, %262
  %265 = urem i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %260, 10
  %268 = xor i1 %266, true
  %269 = xor i1 %267, true
  %270 = xor i1 false, true
  %271 = and i1 %268, false
  %272 = and i1 %266, %270
  %273 = and i1 %269, false
  %274 = and i1 %267, %270
  %275 = or i1 %271, %272
  %276 = or i1 %273, %274
  %277 = xor i1 %275, %276
  %278 = or i1 %268, %269
  %279 = xor i1 %278, true
  %280 = or i1 false, %270
  %281 = and i1 %279, %280
  %282 = or i1 %277, %281
  %283 = or i1 %266, %267
  %284 = select i1 %282, i32 126502162, i32 199500980
  store i32 %284, i32* %23
  br label %315

; <label>:285:                                    ; preds = %24
  ret void

; <label>:286:                                    ; preds = %24
  %287 = alloca %"class.std::vector"*, align 8
  %288 = alloca i64, align 8
  %289 = alloca %"struct.std::array"*, align 8
  %290 = alloca %"class.std::vector", align 8
  %291 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %292 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %287, align 8
  store i64 %1, i64* %288, align 8
  store %"struct.std::array"* %2, %"struct.std::array"** %289, align 8
  %293 = load %"class.std::vector"*, %"class.std::vector"** %287, align 8
  %294 = load i64, i64* %288, align 8
  %295 = call i64 @_ZNKSt6vectorISt5arrayIxLm3EESaIS1_EE8capacityEv(%"class.std::vector"* %293) #3
  %296 = icmp ugt i64 %294, %295
  store i32 -1384055911, i32* %23
  br label %315

; <label>:297:                                    ; preds = %24
  %298 = load volatile i64*, i64** %10
  %299 = load i64, i64* %298, align 8
  %300 = load volatile %"struct.std::array"**, %"struct.std::array"*** %9
  %301 = load %"struct.std::array"*, %"struct.std::array"** %300, align 8
  %302 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %303 = bitcast %"class.std::vector"* %302 to %"struct.std::_Vector_base"*
  %304 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %303) #3
  %305 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  call void @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector"* %305, i64 %299, %"struct.std::array"* dereferenceable(24) %301, %"class.std::allocator"* dereferenceable(1) %304)
  %306 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %307 = bitcast %"class.std::vector"* %306 to %"struct.std::_Vector_base"*
  %308 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %307, i32 0, i32 0
  %309 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %310 = bitcast %"class.std::vector"* %309 to %"struct.std::_Vector_base"*
  %311 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %310, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %308, %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* dereferenceable(24) %311) #3
  %312 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  call void @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EED2Ev(%"class.std::vector"* %312) #3
  store i32 -1502249011, i32* %23
  br label %315

; <label>:313:                                    ; preds = %24
  store i32 -2086620374, i32* %23
  br label %315

; <label>:314:                                    ; preds = %24
  store i32 -1600968287, i32* %23
  br label %315

; <label>:315:                                    ; preds = %314, %313, %297, %286, %258, %242, %241, %213, %197, %185, %146, %139, %138, %107, %92, %89, %47, %27, %26
  br label %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt5arrayIxLm3EESaIS1_EE8capacityEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.141
  %6 = load i32, i32* @y.142
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -546541491, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %159
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -546541491, label %18
    i32 312355083, label %38
    i32 -267912640, label %81
    i32 -400685249, label %83
  ]

; <label>:17:                                     ; preds = %15
  br label %159

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 312355083, i32 -400685249
  store i32 %37, i32* %14
  br label %159

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %39, align 8
  %40 = load %"class.std::vector"*, %"class.std::vector"** %39, align 8
  %41 = bitcast %"class.std::vector"* %40 to %"struct.std::_Vector_base"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %42, i32 0, i32 2
  %44 = load %"struct.std::array"*, %"struct.std::array"** %43, align 8
  %45 = bitcast %"class.std::vector"* %40 to %"struct.std::_Vector_base"*
  %46 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %46, i32 0, i32 0
  %48 = load %"struct.std::array"*, %"struct.std::array"** %47, align 8
  %49 = ptrtoint %"struct.std::array"* %44 to i64
  %50 = ptrtoint %"struct.std::array"* %48 to i64
  %51 = sub i64 0, %50
  %52 = add i64 %49, %51
  %53 = sub i64 %49, %50
  %54 = sdiv exact i64 %52, 24
  store i64 %54, i64* %2
  %55 = load i32, i32* @x.141
  %56 = load i32, i32* @y.142
  %57 = sub i32 0, 1
  %58 = add i32 %55, %57
  %59 = sub i32 %55, 1
  %60 = mul i32 %55, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %56, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 true, true
  %67 = and i1 %64, true
  %68 = and i1 %62, %66
  %69 = and i1 %65, true
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 true, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  %80 = select i1 %78, i32 -267912640, i32 -400685249
  store i32 %80, i32* %14
  br label %159

; <label>:81:                                     ; preds = %15
  %82 = load volatile i64, i64* %2
  ret i64 %82

; <label>:83:                                     ; preds = %15
  %84 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %84, align 8
  %85 = load %"class.std::vector"*, %"class.std::vector"** %84, align 8
  %86 = bitcast %"class.std::vector"* %85 to %"struct.std::_Vector_base"*
  %87 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %86, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %87, i32 0, i32 2
  %89 = load %"struct.std::array"*, %"struct.std::array"** %88, align 8
  %90 = bitcast %"class.std::vector"* %85 to %"struct.std::_Vector_base"*
  %91 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %90, i32 0, i32 0
  %92 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %91, i32 0, i32 0
  %93 = load %"struct.std::array"*, %"struct.std::array"** %92, align 8
  %94 = ptrtoint %"struct.std::array"* %89 to i64
  %95 = ptrtoint %"struct.std::array"* %93 to i64
  %96 = add i64 0, -7221481273635301633
  %97 = sub i64 %96, %94
  %98 = sub i64 %97, -7221481273635301633
  %99 = sub i64 0, %94
  %100 = sub i64 %98, -4892863835099558543
  %101 = add i64 %100, %95
  %102 = add i64 %101, -4892863835099558543
  %103 = add i64 %98, %95
  %104 = sub i64 0, %95
  %105 = add i64 %94, %104
  %106 = sub i64 %94, %95
  %107 = mul i64 %105, %95
  %108 = add i64 %94, -5652639581110250874
  %109 = sub i64 %108, %95
  %110 = sub i64 %109, -5652639581110250874
  %111 = sub i64 %94, %95
  %112 = mul i64 %110, %95
  %113 = add i64 0, -3879713264608360270
  %114 = sub i64 %113, %94
  %115 = sub i64 %114, -3879713264608360270
  %116 = sub i64 0, %94
  %117 = sub i64 0, %115
  %118 = sub i64 0, %95
  %119 = add i64 %117, %118
  %120 = sub i64 0, %119
  %121 = add i64 %115, %95
  %122 = sub i64 0, %95
  %123 = add i64 %94, %122
  %124 = sub i64 %94, %95
  %125 = add i64 %123, 1836848316185725396
  %126 = sub i64 %125, 24
  %127 = sub i64 %126, 1836848316185725396
  %128 = sub i64 %123, 24
  %129 = mul i64 %127, 24
  %130 = add i64 %123, -8362494117065103872
  %131 = sub i64 %130, 24
  %132 = sub i64 %131, -8362494117065103872
  %133 = sub i64 %123, 24
  %134 = mul i64 %132, 24
  %135 = add i64 0, 7194310950961024040
  %136 = sub i64 %135, %123
  %137 = sub i64 %136, 7194310950961024040
  %138 = sub i64 0, %123
  %139 = sub i64 %137, 1703291941482123012
  %140 = add i64 %139, 24
  %141 = add i64 %140, 1703291941482123012
  %142 = add i64 %137, 24
  %143 = add i64 0, 2787579974042843187
  %144 = sub i64 %143, %123
  %145 = sub i64 %144, 2787579974042843187
  %146 = sub i64 0, %123
  %147 = sub i64 0, %145
  %148 = sub i64 0, 24
  %149 = add i64 %147, %148
  %150 = sub i64 0, %149
  %151 = add i64 %145, 24
  %152 = sub i64 0, 24
  %153 = add i64 %123, %152
  %154 = sub i64 %123, 24
  %155 = mul i64 %153, 24
  %156 = shl i64 %123, 24
  %157 = shl i64 %123, 24
  %158 = sdiv exact i64 %123, 24
  store i32 312355083, i32* %14
  br label %159

; <label>:159:                                    ; preds = %83, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector"*, i64, %"struct.std::array"* dereferenceable(24), %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.143
  %6 = load i32, i32* @y.144
  %7 = sub i32 %5, -250066903
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -250066903
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %6, 10
  %15 = xor i1 %13, true
  %16 = xor i1 %14, true
  %17 = xor i1 false, true
  %18 = and i1 %15, false
  %19 = and i1 %13, %17
  %20 = and i1 %16, false
  %21 = and i1 %14, %17
  %22 = or i1 %18, %19
  %23 = or i1 %20, %21
  %24 = xor i1 %22, %23
  %25 = or i1 %15, %16
  %26 = xor i1 %25, true
  %27 = or i1 false, %17
  %28 = and i1 %26, %27
  %29 = or i1 %24, %28
  %30 = or i1 %13, %14
  br i1 %29, label %31, label %130

; <label>:31:                                     ; preds = %4, %130
  %32 = alloca %"class.std::vector"*, align 8
  %33 = alloca i64, align 8
  %34 = alloca %"struct.std::array"*, align 8
  %35 = alloca %"class.std::allocator"*, align 8
  %36 = alloca i8*
  %37 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %32, align 8
  store i64 %1, i64* %33, align 8
  store %"struct.std::array"* %2, %"struct.std::array"** %34, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %35, align 8
  %38 = load %"class.std::vector"*, %"class.std::vector"** %32, align 8
  %39 = bitcast %"class.std::vector"* %38 to %"struct.std::_Vector_base"*
  %40 = load i64, i64* %33, align 8
  %41 = load %"class.std::allocator"*, %"class.std::allocator"** %35, align 8
  call void @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base"* %39, i64 %40, %"class.std::allocator"* dereferenceable(1) %41)
  %42 = load i64, i64* %33, align 8
  %43 = load %"struct.std::array"*, %"struct.std::array"** %34, align 8
  %44 = load i32, i32* @x.143
  %45 = load i32, i32* @y.144
  %46 = add i32 %44, -274171221
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -274171221
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  br i1 %56, label %58, label %130

; <label>:58:                                     ; preds = %31
  invoke void @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector"* %38, i64 %42, %"struct.std::array"* dereferenceable(24) %43)
          to label %59 unwind label %90

; <label>:59:                                     ; preds = %58
  %60 = load i32, i32* @x.143
  %61 = load i32, i32* @y.144
  %62 = add i32 %60, -5592635
  %63 = sub i32 %62, 1
  %64 = sub i32 %63, -5592635
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  br i1 %72, label %74, label %143

; <label>:74:                                     ; preds = %59, %143
  %75 = load i32, i32* @x.143
  %76 = load i32, i32* @y.144
  %77 = add i32 %75, -1350106360
  %78 = sub i32 %77, 1
  %79 = sub i32 %78, -1350106360
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = and i1 %83, %84
  %86 = xor i1 %83, %84
  %87 = or i1 %85, %86
  %88 = or i1 %83, %84
  br i1 %87, label %89, label %143

; <label>:89:                                     ; preds = %74
  ret void

; <label>:90:                                     ; preds = %58
  %91 = load i32, i32* @x.143
  %92 = load i32, i32* @y.144
  %93 = add i32 %91, 1251399907
  %94 = sub i32 %93, 1
  %95 = sub i32 %94, 1251399907
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  br i1 %103, label %105, label %144

; <label>:105:                                    ; preds = %90, %144
  %106 = landingpad { i8*, i32 }
          cleanup
  %107 = extractvalue { i8*, i32 } %106, 0
  store i8* %107, i8** %36, align 8
  %108 = extractvalue { i8*, i32 } %106, 1
  store i32 %108, i32* %37, align 4
  %109 = bitcast %"class.std::vector"* %38 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EED2Ev(%"struct.std::_Vector_base"* %109) #3
  %110 = load i32, i32* @x.143
  %111 = load i32, i32* @y.144
  %112 = sub i32 %110, -251550648
  %113 = sub i32 %112, 1
  %114 = add i32 %113, -251550648
  %115 = sub i32 %110, 1
  %116 = mul i32 %110, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %111, 10
  %120 = and i1 %118, %119
  %121 = xor i1 %118, %119
  %122 = or i1 %120, %121
  %123 = or i1 %118, %119
  br i1 %122, label %124, label %144

; <label>:124:                                    ; preds = %105
  br label %125

; <label>:125:                                    ; preds = %124
  %126 = load i8*, i8** %36, align 8
  %127 = load i32, i32* %37, align 4
  %128 = insertvalue { i8*, i32 } undef, i8* %126, 0
  %129 = insertvalue { i8*, i32 } %128, i32 %127, 1
  resume { i8*, i32 } %129

; <label>:130:                                    ; preds = %31, %4
  %131 = alloca %"class.std::vector"*, align 8
  %132 = alloca i64, align 8
  %133 = alloca %"struct.std::array"*, align 8
  %134 = alloca %"class.std::allocator"*, align 8
  %135 = alloca i8*
  %136 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %131, align 8
  store i64 %1, i64* %132, align 8
  store %"struct.std::array"* %2, %"struct.std::array"** %133, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %134, align 8
  %137 = load %"class.std::vector"*, %"class.std::vector"** %131, align 8
  %138 = bitcast %"class.std::vector"* %137 to %"struct.std::_Vector_base"*
  %139 = load i64, i64* %132, align 8
  %140 = load %"class.std::allocator"*, %"class.std::allocator"** %134, align 8
  call void @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base"* %138, i64 %139, %"class.std::allocator"* dereferenceable(1) %140)
  %141 = load i64, i64* %132, align 8
  %142 = load %"struct.std::array"*, %"struct.std::array"** %133, align 8
  br label %31

; <label>:143:                                    ; preds = %74, %59
  br label %74

; <label>:144:                                    ; preds = %105, %90
  %145 = landingpad { i8*, i32 }
          cleanup
  %146 = extractvalue { i8*, i32 } %145, 0
  store i8* %146, i8** %36, align 8
  %147 = extractvalue { i8*, i32 } %145, 1
  store i32 %147, i32* %37, align 4
  %148 = bitcast %"class.std::vector"* %38 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EED2Ev(%"struct.std::_Vector_base"* %148) #3
  br label %105
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.145
  %6 = load i32, i32* @y.146
  %7 = add i32 %5, 226819889
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 226819889
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -714016485, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -714016485, label %19
    i32 1132103812, label %27
    i32 -937876846, label %67
    i32 -546296352, label %68
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1132103812, i32 -546296352
  store i32 %26, i32* %15
  br label %81

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"*, align 8
  %29 = alloca %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"** %28, align 8
  store %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %1, %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"** %29, align 8
  %30 = load %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"** %28, align 8
  %31 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %30, i32 0, i32 0
  %32 = load %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"** %29, align 8
  %33 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %32, i32 0, i32 0
  call void @_ZSt4swapIPSt5arrayIxLm3EEEvRT_S4_(%"struct.std::array"** dereferenceable(8) %31, %"struct.std::array"** dereferenceable(8) %33) #3
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %30, i32 0, i32 1
  %35 = load %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"** %29, align 8
  %36 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %35, i32 0, i32 1
  call void @_ZSt4swapIPSt5arrayIxLm3EEEvRT_S4_(%"struct.std::array"** dereferenceable(8) %34, %"struct.std::array"** dereferenceable(8) %36) #3
  %37 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %30, i32 0, i32 2
  %38 = load %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"** %29, align 8
  %39 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %38, i32 0, i32 2
  call void @_ZSt4swapIPSt5arrayIxLm3EEEvRT_S4_(%"struct.std::array"** dereferenceable(8) %37, %"struct.std::array"** dereferenceable(8) %39) #3
  %40 = load i32, i32* @x.145
  %41 = load i32, i32* @y.146
  %42 = sub i32 %40, 1590999195
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 1590999195
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -937876846, i32 -546296352
  store i32 %66, i32* %15
  br label %81

; <label>:67:                                     ; preds = %16
  ret void

; <label>:68:                                     ; preds = %16
  %69 = alloca %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"*, align 8
  %70 = alloca %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"** %69, align 8
  store %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %1, %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"** %70, align 8
  %71 = load %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"** %69, align 8
  %72 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %71, i32 0, i32 0
  %73 = load %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"** %70, align 8
  %74 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %73, i32 0, i32 0
  call void @_ZSt4swapIPSt5arrayIxLm3EEEvRT_S4_(%"struct.std::array"** dereferenceable(8) %72, %"struct.std::array"** dereferenceable(8) %74) #3
  %75 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %71, i32 0, i32 1
  %76 = load %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"** %70, align 8
  %77 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %76, i32 0, i32 1
  call void @_ZSt4swapIPSt5arrayIxLm3EEEvRT_S4_(%"struct.std::array"** dereferenceable(8) %75, %"struct.std::array"** dereferenceable(8) %77) #3
  %78 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %71, i32 0, i32 2
  %79 = load %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"** %70, align 8
  %80 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %79, i32 0, i32 2
  call void @_ZSt4swapIPSt5arrayIxLm3EEEvRT_S4_(%"struct.std::array"** dereferenceable(8) %78, %"struct.std::array"** dereferenceable(8) %80) #3
  store i32 1132103812, i32* %15
  br label %81

; <label>:81:                                     ; preds = %68, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt5arrayIxLm3EESaIS1_EE4sizeEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"struct.std::array"*, %"struct.std::array"** %6, align 8
  %8 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"struct.std::array"*, %"struct.std::array"** %10, align 8
  %12 = ptrtoint %"struct.std::array"* %7 to i64
  %13 = ptrtoint %"struct.std::array"* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 24
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm3EESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RKT0_(%"struct.std::array"*, %"struct.std::array"*, %"struct.std::array"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"struct.std::array"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"struct.std::array"* %0, %"struct.std::array"** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"struct.std::array"* %1, %"struct.std::array"** %10, align 8
  store %"struct.std::array"* %2, %"struct.std::array"** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %14 = load %"struct.std::array"*, %"struct.std::array"** %13, align 8
  %15 = call %"struct.std::array"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm3EESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.std::array"* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %19 = load %"struct.std::array"*, %"struct.std::array"** %18, align 8
  %20 = call %"struct.std::array"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm3EESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.std::array"* %19)
  %21 = load %"struct.std::array"*, %"struct.std::array"** %6, align 8
  call void @_ZSt8__fill_aIPSt5arrayIxLm3EES1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S8_RKS5_(%"struct.std::array"* %15, %"struct.std::array"* %20, %"struct.std::array"* dereferenceable(24) %21)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::array"* @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EE5beginEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %4 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %5 = bitcast %"class.std::vector"* %4 to %"struct.std::_Vector_base"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm3EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %2, %"struct.std::array"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %"struct.std::array"*, %"struct.std::array"** %8, align 8
  ret %"struct.std::array"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::array"* @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EE3endEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::array"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.153
  %6 = load i32, i32* @y.154
  %7 = sub i32 %5, -329527903
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -329527903
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -451319697, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -451319697, label %19
    i32 2070746951, label %27
    i32 -1394851047, label %62
    i32 1507350379, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 2070746951, i32 1507350379
  store i32 %26, i32* %15
  br label %73

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %29 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %29, align 8
  %30 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8
  %31 = bitcast %"class.std::vector"* %30 to %"struct.std::_Vector_base"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %32, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm3EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %28, %"struct.std::array"** dereferenceable(8) %33) #3
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %28, i32 0, i32 0
  %35 = load %"struct.std::array"*, %"struct.std::array"** %34, align 8
  store %"struct.std::array"* %35, %"struct.std::array"** %2
  %36 = load i32, i32* @x.153
  %37 = load i32, i32* @y.154
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 -1394851047, i32 1507350379
  store i32 %61, i32* %15
  br label %73

; <label>:62:                                     ; preds = %16
  %63 = load volatile %"struct.std::array"*, %"struct.std::array"** %2
  ret %"struct.std::array"* %63

; <label>:64:                                     ; preds = %16
  %65 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %66 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %66, align 8
  %67 = load %"class.std::vector"*, %"class.std::vector"** %66, align 8
  %68 = bitcast %"class.std::vector"* %67 to %"struct.std::_Vector_base"*
  %69 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %68, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %69, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm3EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %65, %"struct.std::array"** dereferenceable(8) %70) #3
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %65, i32 0, i32 0
  %72 = load %"struct.std::array"*, %"struct.std::array"** %71, align 8
  store i32 2070746951, i32* %15
  br label %73

; <label>:73:                                     ; preds = %64, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::array"* @_ZSt24__uninitialized_fill_n_aIPSt5arrayIxLm3EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%"struct.std::array"*, i64, %"struct.std::array"* dereferenceable(24), %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.std::array"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"struct.std::array"*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::array"* %0, %"struct.std::array"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"struct.std::array"* %2, %"struct.std::array"** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %9 = load %"struct.std::array"*, %"struct.std::array"** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %"struct.std::array"*, %"struct.std::array"** %7, align 8
  %12 = call %"struct.std::array"* @_ZSt20uninitialized_fill_nIPSt5arrayIxLm3EEmS1_ET_S3_T0_RKT1_(%"struct.std::array"* %9, i64 %10, %"struct.std::array"* dereferenceable(24) %11)
  ret %"struct.std::array"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector"*, %"struct.std::array"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"struct.std::array"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %"struct.std::array"* %1, %"struct.std::array"** %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = load %"struct.std::array"*, %"struct.std::array"** %4, align 8
  %7 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %8, i32 0, i32 1
  %10 = load %"struct.std::array"*, %"struct.std::array"** %9, align 8
  %11 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %12 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %11) #3
  invoke void @_ZSt8_DestroyIPSt5arrayIxLm3EES1_EvT_S3_RSaIT0_E(%"struct.std::array"* %6, %"struct.std::array"* %10, %"class.std::allocator"* dereferenceable(1) %12)
          to label %13 unwind label %48

; <label>:13:                                     ; preds = %2
  %14 = load i32, i32* @x.157
  %15 = load i32, i32* @y.158
  %16 = add i32 %14, -1019280770
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, -1019280770
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  br i1 %26, label %28, label %51

; <label>:28:                                     ; preds = %13, %51
  %29 = load %"struct.std::array"*, %"struct.std::array"** %4, align 8
  %30 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %31, i32 0, i32 1
  store %"struct.std::array"* %29, %"struct.std::array"** %32, align 8
  %33 = load i32, i32* @x.157
  %34 = load i32, i32* @y.158
  %35 = sub i32 %33, -268711279
  %36 = sub i32 %35, 1
  %37 = add i32 %36, -268711279
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  br i1 %45, label %47, label %51

; <label>:47:                                     ; preds = %28
  ret void

; <label>:48:                                     ; preds = %2
  %49 = landingpad { i8*, i32 }
          catch i8* null
  %50 = extractvalue { i8*, i32 } %49, 0
  call void @__clang_call_terminate(i8* %50) #11
  unreachable

; <label>:51:                                     ; preds = %28, %13
  %52 = load %"struct.std::array"*, %"struct.std::array"** %4, align 8
  %53 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %54 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %54, i32 0, i32 1
  store %"struct.std::array"* %52, %"struct.std::array"** %55, align 8
  br label %28
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::array"* @_ZSt6fill_nIPSt5arrayIxLm3EEmS1_ET_S3_T0_RKT1_(%"struct.std::array"*, i64, %"struct.std::array"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"struct.std::array"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.std::array"*, align 8
  store %"struct.std::array"* %0, %"struct.std::array"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"struct.std::array"* %2, %"struct.std::array"** %6, align 8
  %7 = load %"struct.std::array"*, %"struct.std::array"** %4, align 8
  %8 = call %"struct.std::array"* @_ZSt12__niter_baseIPSt5arrayIxLm3EEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.std::array"* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load %"struct.std::array"*, %"struct.std::array"** %6, align 8
  %11 = call %"struct.std::array"* @_ZSt10__fill_n_aIPSt5arrayIxLm3EEmS1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES6_T0_RKS5_(%"struct.std::array"* %8, i64 %9, %"struct.std::array"* dereferenceable(24) %10)
  ret %"struct.std::array"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base"*, i64, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator"*, %"class.std::allocator"** %6, align 8
  call void @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %10, %"class.std::allocator"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base"* %9, i64 %12)
          to label %13 unwind label %44

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @x.161
  %15 = load i32, i32* @y.162
  %16 = sub i32 %14, 1594525
  %17 = sub i32 %16, 1
  %18 = add i32 %17, 1594525
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  br i1 %26, label %28, label %53

; <label>:28:                                     ; preds = %13, %53
  %29 = load i32, i32* @x.161
  %30 = load i32, i32* @y.162
  %31 = sub i32 %29, 1411091289
  %32 = sub i32 %31, 1
  %33 = add i32 %32, 1411091289
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  br i1 %41, label %43, label %53

; <label>:43:                                     ; preds = %28
  ret void

; <label>:44:                                     ; preds = %3
  %45 = landingpad { i8*, i32 }
          cleanup
  %46 = extractvalue { i8*, i32 } %45, 0
  store i8* %46, i8** %7, align 8
  %47 = extractvalue { i8*, i32 } %45, 1
  store i32 %47, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %10) #3
  br label %48

; <label>:48:                                     ; preds = %44
  %49 = load i8*, i8** %7, align 8
  %50 = load i32, i32* %8, align 4
  %51 = insertvalue { i8*, i32 } undef, i8* %49, 0
  %52 = insertvalue { i8*, i32 } %51, i32 %50, 1
  resume { i8*, i32 } %52

; <label>:53:                                     ; preds = %28, %13
  br label %28
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector"*, i64, %"struct.std::array"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.163
  %7 = load i32, i32* @y.164
  %8 = sub i32 %6, -651928171
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -651928171
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1566374091, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %90
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1566374091, label %20
    i32 -1324754629, label %40
    i32 -235131381, label %72
    i32 -1167355518, label %73
  ]

; <label>:19:                                     ; preds = %17
  br label %90

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1324754629, i32 -1167355518
  store i32 %39, i32* %16
  br label %90

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector"*, align 8
  %42 = alloca i64, align 8
  %43 = alloca %"struct.std::array"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %41, align 8
  store i64 %1, i64* %42, align 8
  store %"struct.std::array"* %2, %"struct.std::array"** %43, align 8
  %44 = load %"class.std::vector"*, %"class.std::vector"** %41, align 8
  %45 = bitcast %"class.std::vector"* %44 to %"struct.std::_Vector_base"*
  %46 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %46, i32 0, i32 0
  %48 = load %"struct.std::array"*, %"struct.std::array"** %47, align 8
  %49 = load i64, i64* %42, align 8
  %50 = load %"struct.std::array"*, %"struct.std::array"** %43, align 8
  %51 = bitcast %"class.std::vector"* %44 to %"struct.std::_Vector_base"*
  %52 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %51) #3
  %53 = call %"struct.std::array"* @_ZSt24__uninitialized_fill_n_aIPSt5arrayIxLm3EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%"struct.std::array"* %48, i64 %49, %"struct.std::array"* dereferenceable(24) %50, %"class.std::allocator"* dereferenceable(1) %52)
  %54 = bitcast %"class.std::vector"* %44 to %"struct.std::_Vector_base"*
  %55 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %54, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %55, i32 0, i32 1
  store %"struct.std::array"* %53, %"struct.std::array"** %56, align 8
  %57 = load i32, i32* @x.163
  %58 = load i32, i32* @y.164
  %59 = sub i32 %57, 232683199
  %60 = sub i32 %59, 1
  %61 = add i32 %60, 232683199
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  %71 = select i1 %69, i32 -235131381, i32 -1167355518
  store i32 %71, i32* %16
  br label %90

; <label>:72:                                     ; preds = %17
  ret void

; <label>:73:                                     ; preds = %17
  %74 = alloca %"class.std::vector"*, align 8
  %75 = alloca i64, align 8
  %76 = alloca %"struct.std::array"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %74, align 8
  store i64 %1, i64* %75, align 8
  store %"struct.std::array"* %2, %"struct.std::array"** %76, align 8
  %77 = load %"class.std::vector"*, %"class.std::vector"** %74, align 8
  %78 = bitcast %"class.std::vector"* %77 to %"struct.std::_Vector_base"*
  %79 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %78, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %79, i32 0, i32 0
  %81 = load %"struct.std::array"*, %"struct.std::array"** %80, align 8
  %82 = load i64, i64* %75, align 8
  %83 = load %"struct.std::array"*, %"struct.std::array"** %76, align 8
  %84 = bitcast %"class.std::vector"* %77 to %"struct.std::_Vector_base"*
  %85 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %84) #3
  %86 = call %"struct.std::array"* @_ZSt24__uninitialized_fill_n_aIPSt5arrayIxLm3EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%"struct.std::array"* %81, i64 %82, %"struct.std::array"* dereferenceable(24) %83, %"class.std::allocator"* dereferenceable(1) %85)
  %87 = bitcast %"class.std::vector"* %77 to %"struct.std::_Vector_base"*
  %88 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %87, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %88, i32 0, i32 1
  store %"struct.std::array"* %86, %"struct.std::array"** %89, align 8
  store i32 -1324754629, i32* %16
  br label %90

; <label>:90:                                     ; preds = %73, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.165
  %6 = load i32, i32* @y.166
  %7 = add i32 %5, 743597822
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 743597822
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1527468233, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %84
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1527468233, label %19
    i32 -535614998, label %39
    i32 -397990105, label %74
    i32 1426149068, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %84

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -535614998, i32 1426149068
  store i32 %38, i32* %15
  br label %84

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"*, align 8
  %41 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"** %40, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %41, align 8
  %42 = load %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"** %40, align 8
  %43 = bitcast %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %42 to %"class.std::allocator"*
  %44 = load %"class.std::allocator"*, %"class.std::allocator"** %41, align 8
  call void @_ZNSaISt5arrayIxLm3EEEC2ERKS1_(%"class.std::allocator"* %43, %"class.std::allocator"* dereferenceable(1) %44) #3
  %45 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %42, i32 0, i32 0
  store %"struct.std::array"* null, %"struct.std::array"** %45, align 8
  %46 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %42, i32 0, i32 1
  store %"struct.std::array"* null, %"struct.std::array"** %46, align 8
  %47 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %42, i32 0, i32 2
  store %"struct.std::array"* null, %"struct.std::array"** %47, align 8
  %48 = load i32, i32* @x.165
  %49 = load i32, i32* @y.166
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -397990105, i32 1426149068
  store i32 %73, i32* %15
  br label %84

; <label>:74:                                     ; preds = %16
  ret void

; <label>:75:                                     ; preds = %16
  %76 = alloca %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"*, align 8
  %77 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"** %76, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %77, align 8
  %78 = load %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"** %76, align 8
  %79 = bitcast %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %78 to %"class.std::allocator"*
  %80 = load %"class.std::allocator"*, %"class.std::allocator"** %77, align 8
  call void @_ZNSaISt5arrayIxLm3EEEC2ERKS1_(%"class.std::allocator"* %79, %"class.std::allocator"* dereferenceable(1) %80) #3
  %81 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %78, i32 0, i32 0
  store %"struct.std::array"* null, %"struct.std::array"** %81, align 8
  %82 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %78, i32 0, i32 1
  store %"struct.std::array"* null, %"struct.std::array"** %82, align 8
  %83 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %78, i32 0, i32 2
  store %"struct.std::array"* null, %"struct.std::array"** %83, align 8
  store i32 -535614998, i32* %15
  br label %84

; <label>:84:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.167
  %6 = load i32, i32* @y.168
  %7 = add i32 %5, 141742888
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 141742888
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 333843915, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %82
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 333843915, label %19
    i32 -1730624849, label %27
    i32 -1010293987, label %61
    i32 -1136902514, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %82

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1730624849, i32 -1136902514
  store i32 %26, i32* %15
  br label %82

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base"*, align 8
  %29 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %28, align 8
  %31 = load i64, i64* %29, align 8
  %32 = call %"struct.std::array"* @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base"* %30, i64 %31)
  %33 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %30, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %33, i32 0, i32 0
  store %"struct.std::array"* %32, %"struct.std::array"** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %30, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %35, i32 0, i32 0
  %37 = load %"struct.std::array"*, %"struct.std::array"** %36, align 8
  %38 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %30, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %38, i32 0, i32 1
  store %"struct.std::array"* %37, %"struct.std::array"** %39, align 8
  %40 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %30, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %40, i32 0, i32 0
  %42 = load %"struct.std::array"*, %"struct.std::array"** %41, align 8
  %43 = load i64, i64* %29, align 8
  %44 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %42, i64 %43
  %45 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %30, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %45, i32 0, i32 2
  store %"struct.std::array"* %44, %"struct.std::array"** %46, align 8
  %47 = load i32, i32* @x.167
  %48 = load i32, i32* @y.168
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -1010293987, i32 -1136902514
  store i32 %60, i32* %15
  br label %82

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"struct.std::_Vector_base"*, align 8
  %64 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %63, align 8
  store i64 %1, i64* %64, align 8
  %65 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %63, align 8
  %66 = load i64, i64* %64, align 8
  %67 = call %"struct.std::array"* @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base"* %65, i64 %66)
  %68 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %65, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %68, i32 0, i32 0
  store %"struct.std::array"* %67, %"struct.std::array"** %69, align 8
  %70 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %65, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %70, i32 0, i32 0
  %72 = load %"struct.std::array"*, %"struct.std::array"** %71, align 8
  %73 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %65, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %73, i32 0, i32 1
  store %"struct.std::array"* %72, %"struct.std::array"** %74, align 8
  %75 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %65, i32 0, i32 0
  %76 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %75, i32 0, i32 0
  %77 = load %"struct.std::array"*, %"struct.std::array"** %76, align 8
  %78 = load i64, i64* %64, align 8
  %79 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %77, i64 %78
  %80 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %65, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %80, i32 0, i32 2
  store %"struct.std::array"* %79, %"struct.std::array"** %81, align 8
  store i32 -1730624849, i32* %15
  br label %82

; <label>:82:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt5arrayIxLm3EEEC2ERKS1_(%"class.std::allocator"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.169
  %6 = load i32, i32* @y.170
  %7 = sub i32 %5, -956154745
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -956154745
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1333562293, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %57
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1333562293, label %19
    i32 21871820, label %27
    i32 -1630192875, label %49
    i32 104617009, label %50
  ]

; <label>:18:                                     ; preds = %16
  br label %57

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 21871820, i32 104617009
  store i32 %26, i32* %15
  br label %57

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator"*, align 8
  %29 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %28, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %29, align 8
  %30 = load %"class.std::allocator"*, %"class.std::allocator"** %28, align 8
  %31 = bitcast %"class.std::allocator"* %30 to %"class.__gnu_cxx::new_allocator"*
  %32 = load %"class.std::allocator"*, %"class.std::allocator"** %29, align 8
  %33 = bitcast %"class.std::allocator"* %32 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm3EEEC2ERKS3_(%"class.__gnu_cxx::new_allocator"* %31, %"class.__gnu_cxx::new_allocator"* dereferenceable(1) %33) #3
  %34 = load i32, i32* @x.169
  %35 = load i32, i32* @y.170
  %36 = add i32 %34, 1307215969
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, 1307215969
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -1630192875, i32 104617009
  store i32 %48, i32* %15
  br label %57

; <label>:49:                                     ; preds = %16
  ret void

; <label>:50:                                     ; preds = %16
  %51 = alloca %"class.std::allocator"*, align 8
  %52 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %51, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %52, align 8
  %53 = load %"class.std::allocator"*, %"class.std::allocator"** %51, align 8
  %54 = bitcast %"class.std::allocator"* %53 to %"class.__gnu_cxx::new_allocator"*
  %55 = load %"class.std::allocator"*, %"class.std::allocator"** %52, align 8
  %56 = bitcast %"class.std::allocator"* %55 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm3EEEC2ERKS3_(%"class.__gnu_cxx::new_allocator"* %54, %"class.__gnu_cxx::new_allocator"* dereferenceable(1) %56) #3
  store i32 21871820, i32* %15
  br label %57

; <label>:57:                                     ; preds = %50, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm3EEEC2ERKS3_(%"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %3, align 8
  store %"class.__gnu_cxx::new_allocator"* %1, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::array"* @_ZNSt12_Vector_baseISt5arrayIxLm3EESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base"*
  %5 = alloca %"struct.std::_Vector_base"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5, align 8
  store %"struct.std::_Vector_base"* %7, %"struct.std::_Vector_base"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 -715532203, i32* %9
  %10 = alloca %"struct.std::array"*
  br label %11

; <label>:11:                                     ; preds = %2, %27
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 -715532203, label %14
    i32 524878067, label %18
    i32 658408640, label %24
    i32 1503006113, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %27

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 524878067, i32 658408640
  store i32 %17, i32* %9
  br label %27

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<std::array<long long, 3>, std::allocator<std::array<long long, 3> > >::_Vector_impl"* %20 to %"class.std::allocator"*
  %22 = load i64, i64* %6, align 8
  %23 = call %"struct.std::array"* @_ZNSt16allocator_traitsISaISt5arrayIxLm3EEEE8allocateERS2_m(%"class.std::allocator"* dereferenceable(1) %21, i64 %22)
  store i32 1503006113, i32* %9
  store %"struct.std::array"* %23, %"struct.std::array"** %10
  br label %27

; <label>:24:                                     ; preds = %11
  store i32 1503006113, i32* %9
  store %"struct.std::array"* null, %"struct.std::array"** %10
  br label %27

; <label>:25:                                     ; preds = %11
  %26 = load %"struct.std::array"*, %"struct.std::array"** %10
  ret %"struct.std::array"* %26

; <label>:27:                                     ; preds = %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::array"* @_ZNSt16allocator_traitsISaISt5arrayIxLm3EEEE8allocateERS2_m(%"class.std::allocator"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::array"* @_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm3EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %6, i64 %7, i8* null)
  ret %"struct.std::array"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::array"* @_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm3EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt5arrayIxLm3EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -2099144273, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -2099144273, label %16
    i32 -508948607, label %21
    i32 -591840104, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -508948607, i32 -591840104
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 24
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"struct.std::array"*
  ret %"struct.std::array"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt5arrayIxLm3EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #8

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #9

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPSt5arrayIxLm3EEEvRT_S4_(%"struct.std::array"** dereferenceable(8), %"struct.std::array"** dereferenceable(8)) #5 comdat {
  %3 = alloca %"struct.std::array"**, align 8
  %4 = alloca %"struct.std::array"**, align 8
  %5 = alloca %"struct.std::array"*, align 8
  store %"struct.std::array"** %0, %"struct.std::array"*** %3, align 8
  store %"struct.std::array"** %1, %"struct.std::array"*** %4, align 8
  %6 = load %"struct.std::array"**, %"struct.std::array"*** %3, align 8
  %7 = call dereferenceable(8) %"struct.std::array"** @_ZSt4moveIRPSt5arrayIxLm3EEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.std::array"** dereferenceable(8) %6) #3
  %8 = load %"struct.std::array"*, %"struct.std::array"** %7, align 8
  store %"struct.std::array"* %8, %"struct.std::array"** %5, align 8
  %9 = load %"struct.std::array"**, %"struct.std::array"*** %4, align 8
  %10 = call dereferenceable(8) %"struct.std::array"** @_ZSt4moveIRPSt5arrayIxLm3EEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.std::array"** dereferenceable(8) %9) #3
  %11 = load %"struct.std::array"*, %"struct.std::array"** %10, align 8
  %12 = load %"struct.std::array"**, %"struct.std::array"*** %3, align 8
  store %"struct.std::array"* %11, %"struct.std::array"** %12, align 8
  %13 = call dereferenceable(8) %"struct.std::array"** @_ZSt4moveIRPSt5arrayIxLm3EEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.std::array"** dereferenceable(8) %5) #3
  %14 = load %"struct.std::array"*, %"struct.std::array"** %13, align 8
  %15 = load %"struct.std::array"**, %"struct.std::array"*** %4, align 8
  store %"struct.std::array"* %14, %"struct.std::array"** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::array"** @_ZSt4moveIRPSt5arrayIxLm3EEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.std::array"** dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.std::array"**, align 8
  store %"struct.std::array"** %0, %"struct.std::array"*** %2, align 8
  %3 = load %"struct.std::array"**, %"struct.std::array"*** %2, align 8
  ret %"struct.std::array"** %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPSt5arrayIxLm3EES1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S8_RKS5_(%"struct.std::array"*, %"struct.std::array"*, %"struct.std::array"* dereferenceable(24)) #5 comdat {
  %4 = alloca i1
  %5 = alloca %"struct.std::array"**
  %6 = alloca %"struct.std::array"**
  %7 = alloca %"struct.std::array"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.185
  %11 = load i32, i32* @y.186
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 -104028868, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %176
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -104028868, label %23
    i32 -1043522340, label %43
    i32 -1677427873, label %64
    i32 1563560722, label %65
    i32 -1468672318, label %81
    i32 -2001765791, label %102
    i32 -808345141, label %105
    i32 -687284019, label %112
    i32 -581259315, label %140
    i32 -729862477, label %159
    i32 960972175, label %160
    i32 -493324562, label %161
    i32 -622233891, label %165
    i32 1498052604, label %171
  ]

; <label>:22:                                     ; preds = %20
  br label %176

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 false, true
  %29 = and i1 %26, false
  %30 = and i1 %24, %28
  %31 = and i1 %27, false
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 false, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 -1043522340, i32 -493324562
  store i32 %42, i32* %19
  br label %176

; <label>:43:                                     ; preds = %20
  %44 = alloca %"struct.std::array"*, align 8
  store %"struct.std::array"** %44, %"struct.std::array"*** %7
  %45 = alloca %"struct.std::array"*, align 8
  store %"struct.std::array"** %45, %"struct.std::array"*** %6
  %46 = alloca %"struct.std::array"*, align 8
  store %"struct.std::array"** %46, %"struct.std::array"*** %5
  %47 = load volatile %"struct.std::array"**, %"struct.std::array"*** %7
  store %"struct.std::array"* %0, %"struct.std::array"** %47, align 8
  %48 = load volatile %"struct.std::array"**, %"struct.std::array"*** %6
  store %"struct.std::array"* %1, %"struct.std::array"** %48, align 8
  %49 = load volatile %"struct.std::array"**, %"struct.std::array"*** %5
  store %"struct.std::array"* %2, %"struct.std::array"** %49, align 8
  %50 = load i32, i32* @x.185
  %51 = load i32, i32* @y.186
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 -1677427873, i32 -493324562
  store i32 %63, i32* %19
  br label %176

; <label>:64:                                     ; preds = %20
  store i32 1563560722, i32* %19
  br label %176

; <label>:65:                                     ; preds = %20
  %66 = load i32, i32* @x.185
  %67 = load i32, i32* @y.186
  %68 = sub i32 %66, 890477872
  %69 = sub i32 %68, 1
  %70 = add i32 %69, 890477872
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  %80 = select i1 %78, i32 -1468672318, i32 -622233891
  store i32 %80, i32* %19
  br label %176

; <label>:81:                                     ; preds = %20
  %82 = load volatile %"struct.std::array"**, %"struct.std::array"*** %7
  %83 = load %"struct.std::array"*, %"struct.std::array"** %82, align 8
  %84 = load volatile %"struct.std::array"**, %"struct.std::array"*** %6
  %85 = load %"struct.std::array"*, %"struct.std::array"** %84, align 8
  %86 = icmp ne %"struct.std::array"* %83, %85
  store i1 %86, i1* %4
  %87 = load i32, i32* @x.185
  %88 = load i32, i32* @y.186
  %89 = sub i32 %87, -211635870
  %90 = sub i32 %89, 1
  %91 = add i32 %90, -211635870
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = and i1 %95, %96
  %98 = xor i1 %95, %96
  %99 = or i1 %97, %98
  %100 = or i1 %95, %96
  %101 = select i1 %99, i32 -2001765791, i32 -622233891
  store i32 %101, i32* %19
  br label %176

; <label>:102:                                    ; preds = %20
  %103 = load volatile i1, i1* %4
  %104 = select i1 %103, i32 -808345141, i32 960972175
  store i32 %104, i32* %19
  br label %176

; <label>:105:                                    ; preds = %20
  %106 = load volatile %"struct.std::array"**, %"struct.std::array"*** %5
  %107 = load %"struct.std::array"*, %"struct.std::array"** %106, align 8
  %108 = load volatile %"struct.std::array"**, %"struct.std::array"*** %7
  %109 = load %"struct.std::array"*, %"struct.std::array"** %108, align 8
  %110 = bitcast %"struct.std::array"* %109 to i8*
  %111 = bitcast %"struct.std::array"* %107 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %110, i8* %111, i64 24, i32 8, i1 false)
  store i32 -687284019, i32* %19
  br label %176

; <label>:112:                                    ; preds = %20
  %113 = load i32, i32* @x.185
  %114 = load i32, i32* @y.186
  %115 = add i32 %113, 944208189
  %116 = sub i32 %115, 1
  %117 = sub i32 %116, 944208189
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = xor i1 %121, true
  %124 = xor i1 %122, true
  %125 = xor i1 true, true
  %126 = and i1 %123, true
  %127 = and i1 %121, %125
  %128 = and i1 %124, true
  %129 = and i1 %122, %125
  %130 = or i1 %126, %127
  %131 = or i1 %128, %129
  %132 = xor i1 %130, %131
  %133 = or i1 %123, %124
  %134 = xor i1 %133, true
  %135 = or i1 true, %125
  %136 = and i1 %134, %135
  %137 = or i1 %132, %136
  %138 = or i1 %121, %122
  %139 = select i1 %137, i32 -581259315, i32 1498052604
  store i32 %139, i32* %19
  br label %176

; <label>:140:                                    ; preds = %20
  %141 = load volatile %"struct.std::array"**, %"struct.std::array"*** %7
  %142 = load %"struct.std::array"*, %"struct.std::array"** %141, align 8
  %143 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %142, i32 1
  %144 = load volatile %"struct.std::array"**, %"struct.std::array"*** %7
  store %"struct.std::array"* %143, %"struct.std::array"** %144, align 8
  %145 = load i32, i32* @x.185
  %146 = load i32, i32* @y.186
  %147 = sub i32 0, 1
  %148 = add i32 %145, %147
  %149 = sub i32 %145, 1
  %150 = mul i32 %145, %148
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %146, 10
  %154 = and i1 %152, %153
  %155 = xor i1 %152, %153
  %156 = or i1 %154, %155
  %157 = or i1 %152, %153
  %158 = select i1 %156, i32 -729862477, i32 1498052604
  store i32 %158, i32* %19
  br label %176

; <label>:159:                                    ; preds = %20
  store i32 1563560722, i32* %19
  br label %176

; <label>:160:                                    ; preds = %20
  ret void

; <label>:161:                                    ; preds = %20
  %162 = alloca %"struct.std::array"*, align 8
  %163 = alloca %"struct.std::array"*, align 8
  %164 = alloca %"struct.std::array"*, align 8
  store %"struct.std::array"* %0, %"struct.std::array"** %162, align 8
  store %"struct.std::array"* %1, %"struct.std::array"** %163, align 8
  store %"struct.std::array"* %2, %"struct.std::array"** %164, align 8
  store i32 -1043522340, i32* %19
  br label %176

; <label>:165:                                    ; preds = %20
  %166 = load volatile %"struct.std::array"**, %"struct.std::array"*** %7
  %167 = load %"struct.std::array"*, %"struct.std::array"** %166, align 8
  %168 = load volatile %"struct.std::array"**, %"struct.std::array"*** %6
  %169 = load %"struct.std::array"*, %"struct.std::array"** %168, align 8
  %170 = icmp ne %"struct.std::array"* %167, %169
  store i32 -1468672318, i32* %19
  br label %176

; <label>:171:                                    ; preds = %20
  %172 = load volatile %"struct.std::array"**, %"struct.std::array"*** %7
  %173 = load %"struct.std::array"*, %"struct.std::array"** %172, align 8
  %174 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %173, i32 1
  %175 = load volatile %"struct.std::array"**, %"struct.std::array"*** %7
  store %"struct.std::array"* %174, %"struct.std::array"** %175, align 8
  store i32 -581259315, i32* %19
  br label %176

; <label>:176:                                    ; preds = %171, %165, %161, %159, %140, %112, %105, %102, %81, %65, %64, %43, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::array"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm3EESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.std::array"*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  store %"struct.std::array"* %0, %"struct.std::array"** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %8 = load %"struct.std::array"*, %"struct.std::array"** %7, align 8
  %9 = call %"struct.std::array"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm3EESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES8_(%"struct.std::array"* %8)
  ret %"struct.std::array"* %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #10

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::array"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm3EESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES8_(%"struct.std::array"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  store %"struct.std::array"* %0, %"struct.std::array"** %3, align 8
  %4 = call dereferenceable(8) %"struct.std::array"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %2) #3
  %5 = load %"struct.std::array"*, %"struct.std::array"** %4, align 8
  ret %"struct.std::array"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::array"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::array"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.191
  %6 = load i32, i32* @y.192
  %7 = sub i32 %5, 305215395
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 305215395
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -750936749, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %75
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -750936749, label %19
    i32 1085372647, label %39
    i32 701941710, label %69
    i32 -1173442900, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %75

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1085372647, i32 -1173442900
  store i32 %38, i32* %15
  br label %75

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %40, align 8
  %41 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %40, align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %41, i32 0, i32 0
  store %"struct.std::array"** %42, %"struct.std::array"*** %2
  %43 = load i32, i32* @x.191
  %44 = load i32, i32* @y.192
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 701941710, i32 -1173442900
  store i32 %68, i32* %15
  br label %75

; <label>:69:                                     ; preds = %16
  %70 = load volatile %"struct.std::array"**, %"struct.std::array"*** %2
  ret %"struct.std::array"** %70

; <label>:71:                                     ; preds = %16
  %72 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %72, align 8
  %73 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %72, align 8
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %73, i32 0, i32 0
  store i32 1085372647, i32* %15
  br label %75

; <label>:75:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm3EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"*, %"struct.std::array"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.193
  %6 = load i32, i32* @y.194
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 297196676, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %67
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 297196676, label %18
    i32 897318108, label %26
    i32 723694002, label %59
    i32 -207815544, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %67

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 897318108, i32 -207815544
  store i32 %25, i32* %14
  br label %67

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %28 = alloca %"struct.std::array"**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %27, align 8
  store %"struct.std::array"** %1, %"struct.std::array"*** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %27, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %29, i32 0, i32 0
  %31 = load %"struct.std::array"**, %"struct.std::array"*** %28, align 8
  %32 = load %"struct.std::array"*, %"struct.std::array"** %31, align 8
  store %"struct.std::array"* %32, %"struct.std::array"** %30, align 8
  %33 = load i32, i32* @x.193
  %34 = load i32, i32* @y.194
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 723694002, i32 -207815544
  store i32 %58, i32* %14
  br label %67

; <label>:59:                                     ; preds = %15
  ret void

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %62 = alloca %"struct.std::array"**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %61, align 8
  store %"struct.std::array"** %1, %"struct.std::array"*** %62, align 8
  %63 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %61, align 8
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %63, i32 0, i32 0
  %65 = load %"struct.std::array"**, %"struct.std::array"*** %62, align 8
  %66 = load %"struct.std::array"*, %"struct.std::array"** %65, align 8
  store %"struct.std::array"* %66, %"struct.std::array"** %64, align 8
  store i32 897318108, i32* %14
  br label %67

; <label>:67:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::array"* @_ZSt20uninitialized_fill_nIPSt5arrayIxLm3EEmS1_ET_S3_T0_RKT1_(%"struct.std::array"*, i64, %"struct.std::array"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"struct.std::array"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.195
  %8 = load i32, i32* @y.196
  %9 = add i32 %7, -401268639
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -401268639
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1019710263, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %88
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1019710263, label %21
    i32 -2025237342, label %41
    i32 -1254371671, label %77
    i32 -396940175, label %79
  ]

; <label>:20:                                     ; preds = %18
  br label %88

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -2025237342, i32 -396940175
  store i32 %40, i32* %17
  br label %88

; <label>:41:                                     ; preds = %18
  %42 = alloca %"struct.std::array"*, align 8
  %43 = alloca i64, align 8
  %44 = alloca %"struct.std::array"*, align 8
  %45 = alloca i8, align 1
  store %"struct.std::array"* %0, %"struct.std::array"** %42, align 8
  store i64 %1, i64* %43, align 8
  store %"struct.std::array"* %2, %"struct.std::array"** %44, align 8
  store i8 1, i8* %45, align 1
  %46 = load %"struct.std::array"*, %"struct.std::array"** %42, align 8
  %47 = load i64, i64* %43, align 8
  %48 = load %"struct.std::array"*, %"struct.std::array"** %44, align 8
  %49 = call %"struct.std::array"* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPSt5arrayIxLm3EEmS3_EET_S5_T0_RKT1_(%"struct.std::array"* %46, i64 %47, %"struct.std::array"* dereferenceable(24) %48)
  store %"struct.std::array"* %49, %"struct.std::array"** %4
  %50 = load i32, i32* @x.195
  %51 = load i32, i32* @y.196
  %52 = add i32 %50, -1553779399
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -1553779399
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -1254371671, i32 -396940175
  store i32 %76, i32* %17
  br label %88

; <label>:77:                                     ; preds = %18
  %78 = load volatile %"struct.std::array"*, %"struct.std::array"** %4
  ret %"struct.std::array"* %78

; <label>:79:                                     ; preds = %18
  %80 = alloca %"struct.std::array"*, align 8
  %81 = alloca i64, align 8
  %82 = alloca %"struct.std::array"*, align 8
  %83 = alloca i8, align 1
  store %"struct.std::array"* %0, %"struct.std::array"** %80, align 8
  store i64 %1, i64* %81, align 8
  store %"struct.std::array"* %2, %"struct.std::array"** %82, align 8
  store i8 1, i8* %83, align 1
  %84 = load %"struct.std::array"*, %"struct.std::array"** %80, align 8
  %85 = load i64, i64* %81, align 8
  %86 = load %"struct.std::array"*, %"struct.std::array"** %82, align 8
  %87 = call %"struct.std::array"* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPSt5arrayIxLm3EEmS3_EET_S5_T0_RKT1_(%"struct.std::array"* %84, i64 %85, %"struct.std::array"* dereferenceable(24) %86)
  store i32 -2025237342, i32* %17
  br label %88

; <label>:88:                                     ; preds = %79, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::array"* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPSt5arrayIxLm3EEmS3_EET_S5_T0_RKT1_(%"struct.std::array"*, i64, %"struct.std::array"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"struct.std::array"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.std::array"*, align 8
  store %"struct.std::array"* %0, %"struct.std::array"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"struct.std::array"* %2, %"struct.std::array"** %6, align 8
  %7 = load %"struct.std::array"*, %"struct.std::array"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load %"struct.std::array"*, %"struct.std::array"** %6, align 8
  %10 = call %"struct.std::array"* @_ZSt6fill_nIPSt5arrayIxLm3EEmS1_ET_S3_T0_RKT1_(%"struct.std::array"* %7, i64 %8, %"struct.std::array"* dereferenceable(24) %9)
  ret %"struct.std::array"* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::array"* @_ZSt10__fill_n_aIPSt5arrayIxLm3EEmS1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES6_T0_RKS5_(%"struct.std::array"*, i64, %"struct.std::array"* dereferenceable(24)) #5 comdat {
  %4 = alloca i1
  %5 = alloca %"struct.std::array"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"struct.std::array"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::array"* %0, %"struct.std::array"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"struct.std::array"* %2, %"struct.std::array"** %7, align 8
  %9 = load i64, i64* %6, align 8
  store i64 %9, i64* %8, align 8
  %10 = alloca i32
  store i32 393203309, i32* %10
  br label %11

; <label>:11:                                     ; preds = %3, %81
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 393203309, label %14
    i32 322896415, label %30
    i32 1110023621, label %60
    i32 495970429, label %63
    i32 537162895, label %68
    i32 -1642336533, label %76
    i32 -1112399159, label %78
  ]

; <label>:13:                                     ; preds = %11
  br label %81

; <label>:14:                                     ; preds = %11
  %15 = load i32, i32* @x.199
  %16 = load i32, i32* @y.200
  %17 = sub i32 %15, 692137512
  %18 = sub i32 %17, 1
  %19 = add i32 %18, 692137512
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %16, 10
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 322896415, i32 -1112399159
  store i32 %29, i32* %10
  br label %81

; <label>:30:                                     ; preds = %11
  %31 = load i64, i64* %8, align 8
  %32 = icmp ugt i64 %31, 0
  store i1 %32, i1* %4
  %33 = load i32, i32* @x.199
  %34 = load i32, i32* @y.200
  %35 = sub i32 %33, 1083845474
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 1083845474
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 1110023621, i32 -1112399159
  store i32 %59, i32* %10
  br label %81

; <label>:60:                                     ; preds = %11
  %61 = load volatile i1, i1* %4
  %62 = select i1 %61, i32 495970429, i32 -1642336533
  store i32 %62, i32* %10
  br label %81

; <label>:63:                                     ; preds = %11
  %64 = load %"struct.std::array"*, %"struct.std::array"** %7, align 8
  %65 = load %"struct.std::array"*, %"struct.std::array"** %5, align 8
  %66 = bitcast %"struct.std::array"* %65 to i8*
  %67 = bitcast %"struct.std::array"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %66, i8* %67, i64 24, i32 8, i1 false)
  store i32 537162895, i32* %10
  br label %81

; <label>:68:                                     ; preds = %11
  %69 = load i64, i64* %8, align 8
  %70 = sub i64 %69, -7230826085167113457
  %71 = add i64 %70, -1
  %72 = add i64 %71, -7230826085167113457
  %73 = add i64 %69, -1
  store i64 %72, i64* %8, align 8
  %74 = load %"struct.std::array"*, %"struct.std::array"** %5, align 8
  %75 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %74, i32 1
  store %"struct.std::array"* %75, %"struct.std::array"** %5, align 8
  store i32 393203309, i32* %10
  br label %81

; <label>:76:                                     ; preds = %11
  %77 = load %"struct.std::array"*, %"struct.std::array"** %5, align 8
  ret %"struct.std::array"* %77

; <label>:78:                                     ; preds = %11
  %79 = load i64, i64* %8, align 8
  %80 = icmp ugt i64 %79, 0
  store i32 322896415, i32* %10
  br label %81

; <label>:81:                                     ; preds = %78, %68, %63, %60, %30, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::array"* @_ZSt12__niter_baseIPSt5arrayIxLm3EEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.std::array"*) #0 comdat {
  %2 = alloca %"struct.std::array"*, align 8
  store %"struct.std::array"* %0, %"struct.std::array"** %2, align 8
  %3 = load %"struct.std::array"*, %"struct.std::array"** %2, align 8
  %4 = call %"struct.std::array"* @_ZNSt10_Iter_baseIPSt5arrayIxLm3EELb0EE7_S_baseES2_(%"struct.std::array"* %3)
  ret %"struct.std::array"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::array"* @_ZNSt10_Iter_baseIPSt5arrayIxLm3EELb0EE7_S_baseES2_(%"struct.std::array"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::array"*, align 8
  store %"struct.std::array"* %0, %"struct.std::array"** %2, align 8
  %3 = load %"struct.std::array"*, %"struct.std::array"** %2, align 8
  ret %"struct.std::array"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt14numeric_limitsIxE3maxEv() #5 comdat align 2 {
  ret i64 9223372036854775807
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt14numeric_limitsIxE3minEv() #5 comdat align 2 {
  ret i64 -9223372036854775808
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt5arrayIxLm2EESaIS1_EE14_M_fill_assignEmRKS1_(%"class.std::vector.0"*, i64, %"struct.std::array.5"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.std::vector.0"*
  %8 = alloca %"class.std::vector.0"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"struct.std::array.5"*, align 8
  %11 = alloca %"class.std::vector.0", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.11", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.11", align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %8, align 8
  store i64 %1, i64* %9, align 8
  store %"struct.std::array.5"* %2, %"struct.std::array.5"** %10, align 8
  %14 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  store %"class.std::vector.0"* %14, %"class.std::vector.0"** %7
  %15 = load i64, i64* %9, align 8
  store i64 %15, i64* %6
  %16 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %17 = call i64 @_ZNKSt6vectorISt5arrayIxLm2EESaIS1_EE8capacityEv(%"class.std::vector.0"* %16) #3
  store i64 %17, i64* %5
  %18 = alloca i32
  store i32 -1874560723, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %272
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1874560723, label %22
    i32 -1458155000, label %27
    i32 838990718, label %38
    i32 -1891651556, label %54
    i32 1119166521, label %85
    i32 -1303906153, label %88
    i32 664019048, label %104
    i32 1293311851, label %151
    i32 2026440232, label %152
    i32 309319372, label %162
    i32 1605207524, label %163
    i32 156735510, label %179
    i32 1190106801, label %207
    i32 335648300, label %208
    i32 1159099609, label %213
    i32 -1739761356, label %271
  ]

; <label>:21:                                     ; preds = %19
  br label %272

; <label>:22:                                     ; preds = %19
  %23 = load volatile i64, i64* %6
  %24 = load volatile i64, i64* %5
  %25 = icmp ugt i64 %23, %24
  %26 = select i1 %25, i32 -1458155000, i32 838990718
  store i32 %26, i32* %18
  br label %272

; <label>:27:                                     ; preds = %19
  %28 = load i64, i64* %9, align 8
  %29 = load %"struct.std::array.5"*, %"struct.std::array.5"** %10, align 8
  %30 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %31 = bitcast %"class.std::vector.0"* %30 to %"struct.std::_Vector_base.1"*
  %32 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %31) #3
  call void @_ZNSt6vectorISt5arrayIxLm2EESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.0"* %11, i64 %28, %"struct.std::array.5"* dereferenceable(16) %29, %"class.std::allocator.2"* dereferenceable(1) %32)
  %33 = bitcast %"class.std::vector.0"* %11 to %"struct.std::_Vector_base.1"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %33, i32 0, i32 0
  %35 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %36 = bitcast %"class.std::vector.0"* %35 to %"struct.std::_Vector_base.1"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %36, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %34, %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* dereferenceable(24) %37) #3
  call void @_ZNSt6vectorISt5arrayIxLm2EESaIS1_EED2Ev(%"class.std::vector.0"* %11) #3
  store i32 1605207524, i32* %18
  br label %272

; <label>:38:                                     ; preds = %19
  %39 = load i32, i32* @x.209
  %40 = load i32, i32* @y.210
  %41 = add i32 %39, 15255518
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, 15255518
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -1891651556, i32 335648300
  store i32 %53, i32* %18
  br label %272

; <label>:54:                                     ; preds = %19
  %55 = load i64, i64* %9, align 8
  %56 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %57 = call i64 @_ZNKSt6vectorISt5arrayIxLm2EESaIS1_EE4sizeEv(%"class.std::vector.0"* %56) #3
  %58 = icmp ugt i64 %55, %57
  store i1 %58, i1* %4
  %59 = load i32, i32* @x.209
  %60 = load i32, i32* @y.210
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 1119166521, i32 335648300
  store i32 %84, i32* %18
  br label %272

; <label>:85:                                     ; preds = %19
  %86 = load volatile i1, i1* %4
  %87 = select i1 %86, i32 -1303906153, i32 2026440232
  store i32 %87, i32* %18
  br label %272

; <label>:88:                                     ; preds = %19
  %89 = load i32, i32* @x.209
  %90 = load i32, i32* @y.210
  %91 = add i32 %89, -1219838325
  %92 = sub i32 %91, 1
  %93 = sub i32 %92, -1219838325
  %94 = sub i32 %89, 1
  %95 = mul i32 %89, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %90, 10
  %99 = and i1 %97, %98
  %100 = xor i1 %97, %98
  %101 = or i1 %99, %100
  %102 = or i1 %97, %98
  %103 = select i1 %101, i32 664019048, i32 1159099609
  store i32 %103, i32* %18
  br label %272

; <label>:104:                                    ; preds = %19
  %105 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %106 = call %"struct.std::array.5"* @_ZNSt6vectorISt5arrayIxLm2EESaIS1_EE5beginEv(%"class.std::vector.0"* %105) #3
  %107 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.11", %"class.__gnu_cxx::__normal_iterator.11"* %12, i32 0, i32 0
  store %"struct.std::array.5"* %106, %"struct.std::array.5"** %107, align 8
  %108 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %109 = call %"struct.std::array.5"* @_ZNSt6vectorISt5arrayIxLm2EESaIS1_EE3endEv(%"class.std::vector.0"* %108) #3
  %110 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.11", %"class.__gnu_cxx::__normal_iterator.11"* %13, i32 0, i32 0
  store %"struct.std::array.5"* %109, %"struct.std::array.5"** %110, align 8
  %111 = load %"struct.std::array.5"*, %"struct.std::array.5"** %10, align 8
  %112 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.11", %"class.__gnu_cxx::__normal_iterator.11"* %12, i32 0, i32 0
  %113 = load %"struct.std::array.5"*, %"struct.std::array.5"** %112, align 8
  %114 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.11", %"class.__gnu_cxx::__normal_iterator.11"* %13, i32 0, i32 0
  %115 = load %"struct.std::array.5"*, %"struct.std::array.5"** %114, align 8
  call void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm2EESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RKT0_(%"struct.std::array.5"* %113, %"struct.std::array.5"* %115, %"struct.std::array.5"* dereferenceable(16) %111)
  %116 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %117 = bitcast %"class.std::vector.0"* %116 to %"struct.std::_Vector_base.1"*
  %118 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %117, i32 0, i32 0
  %119 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %118, i32 0, i32 1
  %120 = load %"struct.std::array.5"*, %"struct.std::array.5"** %119, align 8
  %121 = load i64, i64* %9, align 8
  %122 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %123 = call i64 @_ZNKSt6vectorISt5arrayIxLm2EESaIS1_EE4sizeEv(%"class.std::vector.0"* %122) #3
  %124 = add i64 %121, 7087672944155534445
  %125 = sub i64 %124, %123
  %126 = sub i64 %125, 7087672944155534445
  %127 = sub i64 %121, %123
  %128 = load %"struct.std::array.5"*, %"struct.std::array.5"** %10, align 8
  %129 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %130 = bitcast %"class.std::vector.0"* %129 to %"struct.std::_Vector_base.1"*
  %131 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %130) #3
  %132 = call %"struct.std::array.5"* @_ZSt24__uninitialized_fill_n_aIPSt5arrayIxLm2EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%"struct.std::array.5"* %120, i64 %126, %"struct.std::array.5"* dereferenceable(16) %128, %"class.std::allocator.2"* dereferenceable(1) %131)
  %133 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %134 = bitcast %"class.std::vector.0"* %133 to %"struct.std::_Vector_base.1"*
  %135 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %134, i32 0, i32 0
  %136 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %135, i32 0, i32 1
  store %"struct.std::array.5"* %132, %"struct.std::array.5"** %136, align 8
  %137 = load i32, i32* @x.209
  %138 = load i32, i32* @y.210
  %139 = sub i32 0, 1
  %140 = add i32 %137, %139
  %141 = sub i32 %137, 1
  %142 = mul i32 %137, %140
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %138, 10
  %146 = and i1 %144, %145
  %147 = xor i1 %144, %145
  %148 = or i1 %146, %147
  %149 = or i1 %144, %145
  %150 = select i1 %148, i32 1293311851, i32 1159099609
  store i32 %150, i32* %18
  br label %272

; <label>:151:                                    ; preds = %19
  store i32 309319372, i32* %18
  br label %272

; <label>:152:                                    ; preds = %19
  %153 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %154 = bitcast %"class.std::vector.0"* %153 to %"struct.std::_Vector_base.1"*
  %155 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %154, i32 0, i32 0
  %156 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %155, i32 0, i32 0
  %157 = load %"struct.std::array.5"*, %"struct.std::array.5"** %156, align 8
  %158 = load i64, i64* %9, align 8
  %159 = load %"struct.std::array.5"*, %"struct.std::array.5"** %10, align 8
  %160 = call %"struct.std::array.5"* @_ZSt6fill_nIPSt5arrayIxLm2EEmS1_ET_S3_T0_RKT1_(%"struct.std::array.5"* %157, i64 %158, %"struct.std::array.5"* dereferenceable(16) %159)
  %161 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  call void @_ZNSt6vectorISt5arrayIxLm2EESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.0"* %161, %"struct.std::array.5"* %160) #3
  store i32 309319372, i32* %18
  br label %272

; <label>:162:                                    ; preds = %19
  store i32 1605207524, i32* %18
  br label %272

; <label>:163:                                    ; preds = %19
  %164 = load i32, i32* @x.209
  %165 = load i32, i32* @y.210
  %166 = add i32 %164, 307276072
  %167 = sub i32 %166, 1
  %168 = sub i32 %167, 307276072
  %169 = sub i32 %164, 1
  %170 = mul i32 %164, %168
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %165, 10
  %174 = and i1 %172, %173
  %175 = xor i1 %172, %173
  %176 = or i1 %174, %175
  %177 = or i1 %172, %173
  %178 = select i1 %176, i32 156735510, i32 -1739761356
  store i32 %178, i32* %18
  br label %272

; <label>:179:                                    ; preds = %19
  %180 = load i32, i32* @x.209
  %181 = load i32, i32* @y.210
  %182 = sub i32 %180, 1891727250
  %183 = sub i32 %182, 1
  %184 = add i32 %183, 1891727250
  %185 = sub i32 %180, 1
  %186 = mul i32 %180, %184
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %181, 10
  %190 = xor i1 %188, true
  %191 = xor i1 %189, true
  %192 = xor i1 false, true
  %193 = and i1 %190, false
  %194 = and i1 %188, %192
  %195 = and i1 %191, false
  %196 = and i1 %189, %192
  %197 = or i1 %193, %194
  %198 = or i1 %195, %196
  %199 = xor i1 %197, %198
  %200 = or i1 %190, %191
  %201 = xor i1 %200, true
  %202 = or i1 false, %192
  %203 = and i1 %201, %202
  %204 = or i1 %199, %203
  %205 = or i1 %188, %189
  %206 = select i1 %204, i32 1190106801, i32 -1739761356
  store i32 %206, i32* %18
  br label %272

; <label>:207:                                    ; preds = %19
  ret void

; <label>:208:                                    ; preds = %19
  %209 = load i64, i64* %9, align 8
  %210 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %211 = call i64 @_ZNKSt6vectorISt5arrayIxLm2EESaIS1_EE4sizeEv(%"class.std::vector.0"* %210) #3
  %212 = icmp ugt i64 %209, %211
  store i32 -1891651556, i32* %18
  br label %272

; <label>:213:                                    ; preds = %19
  %214 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %215 = call %"struct.std::array.5"* @_ZNSt6vectorISt5arrayIxLm2EESaIS1_EE5beginEv(%"class.std::vector.0"* %214) #3
  %216 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.11", %"class.__gnu_cxx::__normal_iterator.11"* %12, i32 0, i32 0
  store %"struct.std::array.5"* %215, %"struct.std::array.5"** %216, align 8
  %217 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %218 = call %"struct.std::array.5"* @_ZNSt6vectorISt5arrayIxLm2EESaIS1_EE3endEv(%"class.std::vector.0"* %217) #3
  %219 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.11", %"class.__gnu_cxx::__normal_iterator.11"* %13, i32 0, i32 0
  store %"struct.std::array.5"* %218, %"struct.std::array.5"** %219, align 8
  %220 = load %"struct.std::array.5"*, %"struct.std::array.5"** %10, align 8
  %221 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.11", %"class.__gnu_cxx::__normal_iterator.11"* %12, i32 0, i32 0
  %222 = load %"struct.std::array.5"*, %"struct.std::array.5"** %221, align 8
  %223 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.11", %"class.__gnu_cxx::__normal_iterator.11"* %13, i32 0, i32 0
  %224 = load %"struct.std::array.5"*, %"struct.std::array.5"** %223, align 8
  call void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm2EESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RKT0_(%"struct.std::array.5"* %222, %"struct.std::array.5"* %224, %"struct.std::array.5"* dereferenceable(16) %220)
  %225 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %226 = bitcast %"class.std::vector.0"* %225 to %"struct.std::_Vector_base.1"*
  %227 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %226, i32 0, i32 0
  %228 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %227, i32 0, i32 1
  %229 = load %"struct.std::array.5"*, %"struct.std::array.5"** %228, align 8
  %230 = load i64, i64* %9, align 8
  %231 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %232 = call i64 @_ZNKSt6vectorISt5arrayIxLm2EESaIS1_EE4sizeEv(%"class.std::vector.0"* %231) #3
  %233 = sub i64 0, 8608406313723793010
  %234 = sub i64 %233, %230
  %235 = add i64 %234, 8608406313723793010
  %236 = sub i64 0, %230
  %237 = sub i64 0, %232
  %238 = sub i64 %235, %237
  %239 = add i64 %235, %232
  %240 = sub i64 0, %232
  %241 = add i64 %230, %240
  %242 = sub i64 %230, %232
  %243 = mul i64 %241, %232
  %244 = shl i64 %230, %232
  %245 = add i64 %230, -7334108353139743542
  %246 = sub i64 %245, %232
  %247 = sub i64 %246, -7334108353139743542
  %248 = sub i64 %230, %232
  %249 = mul i64 %247, %232
  %250 = shl i64 %230, %232
  %251 = sub i64 0, %230
  %252 = add i64 0, %251
  %253 = sub i64 0, %230
  %254 = sub i64 %252, -2847967293496211450
  %255 = add i64 %254, %232
  %256 = add i64 %255, -2847967293496211450
  %257 = add i64 %252, %232
  %258 = sub i64 %230, 1838831376701809723
  %259 = sub i64 %258, %232
  %260 = add i64 %259, 1838831376701809723
  %261 = sub i64 %230, %232
  %262 = load %"struct.std::array.5"*, %"struct.std::array.5"** %10, align 8
  %263 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %264 = bitcast %"class.std::vector.0"* %263 to %"struct.std::_Vector_base.1"*
  %265 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %264) #3
  %266 = call %"struct.std::array.5"* @_ZSt24__uninitialized_fill_n_aIPSt5arrayIxLm2EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%"struct.std::array.5"* %229, i64 %260, %"struct.std::array.5"* dereferenceable(16) %262, %"class.std::allocator.2"* dereferenceable(1) %265)
  %267 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %268 = bitcast %"class.std::vector.0"* %267 to %"struct.std::_Vector_base.1"*
  %269 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %268, i32 0, i32 0
  %270 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %269, i32 0, i32 1
  store %"struct.std::array.5"* %266, %"struct.std::array.5"** %270, align 8
  store i32 664019048, i32* %18
  br label %272

; <label>:271:                                    ; preds = %19
  store i32 156735510, i32* %18
  br label %272

; <label>:272:                                    ; preds = %271, %213, %208, %179, %163, %162, %152, %151, %104, %88, %85, %54, %38, %27, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt5arrayIxLm2EESaIS1_EE8capacityEv(%"class.std::vector.0"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.211
  %6 = load i32, i32* @y.212
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 189760596, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %156
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 189760596, label %18
    i32 674390525, label %26
    i32 -1071563857, label %70
    i32 -1876528113, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %156

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 674390525, i32 -1876528113
  store i32 %25, i32* %14
  br label %156

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %27, align 8
  %28 = load %"class.std::vector.0"*, %"class.std::vector.0"** %27, align 8
  %29 = bitcast %"class.std::vector.0"* %28 to %"struct.std::_Vector_base.1"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %30, i32 0, i32 2
  %32 = load %"struct.std::array.5"*, %"struct.std::array.5"** %31, align 8
  %33 = bitcast %"class.std::vector.0"* %28 to %"struct.std::_Vector_base.1"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load %"struct.std::array.5"*, %"struct.std::array.5"** %35, align 8
  %37 = ptrtoint %"struct.std::array.5"* %32 to i64
  %38 = ptrtoint %"struct.std::array.5"* %36 to i64
  %39 = sub i64 0, %38
  %40 = add i64 %37, %39
  %41 = sub i64 %37, %38
  %42 = sdiv exact i64 %40, 16
  store i64 %42, i64* %2
  %43 = load i32, i32* @x.211
  %44 = load i32, i32* @y.212
  %45 = sub i32 %43, -1325727954
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -1325727954
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -1071563857, i32 -1876528113
  store i32 %69, i32* %14
  br label %156

; <label>:70:                                     ; preds = %15
  %71 = load volatile i64, i64* %2
  ret i64 %71

; <label>:72:                                     ; preds = %15
  %73 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %73, align 8
  %74 = load %"class.std::vector.0"*, %"class.std::vector.0"** %73, align 8
  %75 = bitcast %"class.std::vector.0"* %74 to %"struct.std::_Vector_base.1"*
  %76 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %76, i32 0, i32 2
  %78 = load %"struct.std::array.5"*, %"struct.std::array.5"** %77, align 8
  %79 = bitcast %"class.std::vector.0"* %74 to %"struct.std::_Vector_base.1"*
  %80 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %79, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %80, i32 0, i32 0
  %82 = load %"struct.std::array.5"*, %"struct.std::array.5"** %81, align 8
  %83 = ptrtoint %"struct.std::array.5"* %78 to i64
  %84 = ptrtoint %"struct.std::array.5"* %82 to i64
  %85 = shl i64 %83, %84
  %86 = add i64 0, -5524500169749517840
  %87 = sub i64 %86, %83
  %88 = sub i64 %87, -5524500169749517840
  %89 = sub i64 0, %83
  %90 = sub i64 %88, -8700954298249714443
  %91 = add i64 %90, %84
  %92 = add i64 %91, -8700954298249714443
  %93 = add i64 %88, %84
  %94 = add i64 0, 6999452605808712154
  %95 = sub i64 %94, %83
  %96 = sub i64 %95, 6999452605808712154
  %97 = sub i64 0, %83
  %98 = sub i64 0, %96
  %99 = sub i64 0, %84
  %100 = add i64 %98, %99
  %101 = sub i64 0, %100
  %102 = add i64 %96, %84
  %103 = shl i64 %83, %84
  %104 = sub i64 %83, 4059904230226992447
  %105 = sub i64 %104, %84
  %106 = add i64 %105, 4059904230226992447
  %107 = sub i64 %83, %84
  %108 = sub i64 0, %106
  %109 = add i64 0, %108
  %110 = sub i64 0, %106
  %111 = sub i64 0, %109
  %112 = sub i64 0, 16
  %113 = add i64 %111, %112
  %114 = sub i64 0, %113
  %115 = add i64 %109, 16
  %116 = sub i64 0, 16
  %117 = add i64 %106, %116
  %118 = sub i64 %106, 16
  %119 = mul i64 %117, 16
  %120 = add i64 0, 8162042922554781136
  %121 = sub i64 %120, %106
  %122 = sub i64 %121, 8162042922554781136
  %123 = sub i64 0, %106
  %124 = sub i64 0, %122
  %125 = sub i64 0, 16
  %126 = add i64 %124, %125
  %127 = sub i64 0, %126
  %128 = add i64 %122, 16
  %129 = sub i64 0, %106
  %130 = add i64 0, %129
  %131 = sub i64 0, %106
  %132 = sub i64 0, %130
  %133 = sub i64 0, 16
  %134 = add i64 %132, %133
  %135 = sub i64 0, %134
  %136 = add i64 %130, 16
  %137 = add i64 %106, -4128404565722637224
  %138 = sub i64 %137, 16
  %139 = sub i64 %138, -4128404565722637224
  %140 = sub i64 %106, 16
  %141 = mul i64 %139, 16
  %142 = add i64 %106, -3514664282537149317
  %143 = sub i64 %142, 16
  %144 = sub i64 %143, -3514664282537149317
  %145 = sub i64 %106, 16
  %146 = mul i64 %144, 16
  %147 = shl i64 %106, 16
  %148 = add i64 0, -18581025098681781
  %149 = sub i64 %148, %106
  %150 = sub i64 %149, -18581025098681781
  %151 = sub i64 0, %106
  %152 = sub i64 0, 16
  %153 = sub i64 %150, %152
  %154 = add i64 %150, 16
  %155 = sdiv exact i64 %106, 16
  store i32 674390525, i32* %14
  br label %156

; <label>:156:                                    ; preds = %72, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt5arrayIxLm2EESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.0"*, i64, %"struct.std::array.5"* dereferenceable(16), %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.213
  %6 = load i32, i32* @y.214
  %7 = add i32 %5, -921594032
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -921594032
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %6, 10
  %15 = xor i1 %13, true
  %16 = xor i1 %14, true
  %17 = xor i1 true, true
  %18 = and i1 %15, true
  %19 = and i1 %13, %17
  %20 = and i1 %16, true
  %21 = and i1 %14, %17
  %22 = or i1 %18, %19
  %23 = or i1 %20, %21
  %24 = xor i1 %22, %23
  %25 = or i1 %15, %16
  %26 = xor i1 %25, true
  %27 = or i1 true, %17
  %28 = and i1 %26, %27
  %29 = or i1 %24, %28
  %30 = or i1 %13, %14
  br i1 %29, label %31, label %81

; <label>:31:                                     ; preds = %4, %81
  %32 = alloca %"class.std::vector.0"*, align 8
  %33 = alloca i64, align 8
  %34 = alloca %"struct.std::array.5"*, align 8
  %35 = alloca %"class.std::allocator.2"*, align 8
  %36 = alloca i8*
  %37 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %32, align 8
  store i64 %1, i64* %33, align 8
  store %"struct.std::array.5"* %2, %"struct.std::array.5"** %34, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %35, align 8
  %38 = load %"class.std::vector.0"*, %"class.std::vector.0"** %32, align 8
  %39 = bitcast %"class.std::vector.0"* %38 to %"struct.std::_Vector_base.1"*
  %40 = load i64, i64* %33, align 8
  %41 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %35, align 8
  call void @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.1"* %39, i64 %40, %"class.std::allocator.2"* dereferenceable(1) %41)
  %42 = load i64, i64* %33, align 8
  %43 = load %"struct.std::array.5"*, %"struct.std::array.5"** %34, align 8
  %44 = load i32, i32* @x.213
  %45 = load i32, i32* @y.214
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  br i1 %67, label %69, label %81

; <label>:69:                                     ; preds = %31
  invoke void @_ZNSt6vectorISt5arrayIxLm2EESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.0"* %38, i64 %42, %"struct.std::array.5"* dereferenceable(16) %43)
          to label %70 unwind label %71

; <label>:70:                                     ; preds = %69
  ret void

; <label>:71:                                     ; preds = %69
  %72 = landingpad { i8*, i32 }
          cleanup
  %73 = extractvalue { i8*, i32 } %72, 0
  store i8* %73, i8** %36, align 8
  %74 = extractvalue { i8*, i32 } %72, 1
  store i32 %74, i32* %37, align 4
  %75 = bitcast %"class.std::vector.0"* %38 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EED2Ev(%"struct.std::_Vector_base.1"* %75) #3
  br label %76

; <label>:76:                                     ; preds = %71
  %77 = load i8*, i8** %36, align 8
  %78 = load i32, i32* %37, align 4
  %79 = insertvalue { i8*, i32 } undef, i8* %77, 0
  %80 = insertvalue { i8*, i32 } %79, i32 %78, 1
  resume { i8*, i32 } %80

; <label>:81:                                     ; preds = %31, %4
  %82 = alloca %"class.std::vector.0"*, align 8
  %83 = alloca i64, align 8
  %84 = alloca %"struct.std::array.5"*, align 8
  %85 = alloca %"class.std::allocator.2"*, align 8
  %86 = alloca i8*
  %87 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %82, align 8
  store i64 %1, i64* %83, align 8
  store %"struct.std::array.5"* %2, %"struct.std::array.5"** %84, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %85, align 8
  %88 = load %"class.std::vector.0"*, %"class.std::vector.0"** %82, align 8
  %89 = bitcast %"class.std::vector.0"* %88 to %"struct.std::_Vector_base.1"*
  %90 = load i64, i64* %83, align 8
  %91 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %85, align 8
  call void @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.1"* %89, i64 %90, %"class.std::allocator.2"* dereferenceable(1) %91)
  %92 = load i64, i64* %83, align 8
  %93 = load %"struct.std::array.5"*, %"struct.std::array.5"** %84, align 8
  br label %31
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %1, %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPSt5arrayIxLm2EEEvRT_S4_(%"struct.std::array.5"** dereferenceable(8) %6, %"struct.std::array.5"** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPSt5arrayIxLm2EEEvRT_S4_(%"struct.std::array.5"** dereferenceable(8) %9, %"struct.std::array.5"** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPSt5arrayIxLm2EEEvRT_S4_(%"struct.std::array.5"** dereferenceable(8) %12, %"struct.std::array.5"** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt5arrayIxLm2EESaIS1_EE4sizeEv(%"class.std::vector.0"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.217
  %6 = load i32, i32* @y.218
  %7 = add i32 %5, -1675469846
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1675469846
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1164685060, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %152
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1164685060, label %19
    i32 -231413200, label %39
    i32 -455556873, label %83
    i32 -1663138851, label %85
  ]

; <label>:18:                                     ; preds = %16
  br label %152

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -231413200, i32 -1663138851
  store i32 %38, i32* %15
  br label %152

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %40, align 8
  %41 = load %"class.std::vector.0"*, %"class.std::vector.0"** %40, align 8
  %42 = bitcast %"class.std::vector.0"* %41 to %"struct.std::_Vector_base.1"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %43, i32 0, i32 1
  %45 = load %"struct.std::array.5"*, %"struct.std::array.5"** %44, align 8
  %46 = bitcast %"class.std::vector.0"* %41 to %"struct.std::_Vector_base.1"*
  %47 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %46, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %47, i32 0, i32 0
  %49 = load %"struct.std::array.5"*, %"struct.std::array.5"** %48, align 8
  %50 = ptrtoint %"struct.std::array.5"* %45 to i64
  %51 = ptrtoint %"struct.std::array.5"* %49 to i64
  %52 = add i64 %50, 2530773623837639927
  %53 = sub i64 %52, %51
  %54 = sub i64 %53, 2530773623837639927
  %55 = sub i64 %50, %51
  %56 = sdiv exact i64 %54, 16
  store i64 %56, i64* %2
  %57 = load i32, i32* @x.217
  %58 = load i32, i32* @y.218
  %59 = sub i32 0, 1
  %60 = add i32 %57, %59
  %61 = sub i32 %57, 1
  %62 = mul i32 %57, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %58, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 false, true
  %69 = and i1 %66, false
  %70 = and i1 %64, %68
  %71 = and i1 %67, false
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 false, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 -455556873, i32 -1663138851
  store i32 %82, i32* %15
  br label %152

; <label>:83:                                     ; preds = %16
  %84 = load volatile i64, i64* %2
  ret i64 %84

; <label>:85:                                     ; preds = %16
  %86 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %86, align 8
  %87 = load %"class.std::vector.0"*, %"class.std::vector.0"** %86, align 8
  %88 = bitcast %"class.std::vector.0"* %87 to %"struct.std::_Vector_base.1"*
  %89 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %88, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %89, i32 0, i32 1
  %91 = load %"struct.std::array.5"*, %"struct.std::array.5"** %90, align 8
  %92 = bitcast %"class.std::vector.0"* %87 to %"struct.std::_Vector_base.1"*
  %93 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %92, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %93, i32 0, i32 0
  %95 = load %"struct.std::array.5"*, %"struct.std::array.5"** %94, align 8
  %96 = ptrtoint %"struct.std::array.5"* %91 to i64
  %97 = ptrtoint %"struct.std::array.5"* %95 to i64
  %98 = shl i64 %96, %97
  %99 = sub i64 0, 6271087609199358337
  %100 = sub i64 %99, %96
  %101 = add i64 %100, 6271087609199358337
  %102 = sub i64 0, %96
  %103 = add i64 %101, -3226018866912507495
  %104 = add i64 %103, %97
  %105 = sub i64 %104, -3226018866912507495
  %106 = add i64 %101, %97
  %107 = sub i64 0, 440241222394616828
  %108 = sub i64 %107, %96
  %109 = add i64 %108, 440241222394616828
  %110 = sub i64 0, %96
  %111 = sub i64 %109, 3705100891967833945
  %112 = add i64 %111, %97
  %113 = add i64 %112, 3705100891967833945
  %114 = add i64 %109, %97
  %115 = add i64 %96, 228579648741936279
  %116 = sub i64 %115, %97
  %117 = sub i64 %116, 228579648741936279
  %118 = sub i64 %96, %97
  %119 = add i64 %117, -337970550524393174
  %120 = sub i64 %119, 16
  %121 = sub i64 %120, -337970550524393174
  %122 = sub i64 %117, 16
  %123 = mul i64 %121, 16
  %124 = sub i64 %117, 3945788020177866947
  %125 = sub i64 %124, 16
  %126 = add i64 %125, 3945788020177866947
  %127 = sub i64 %117, 16
  %128 = mul i64 %126, 16
  %129 = sub i64 %117, 8904213993623043734
  %130 = sub i64 %129, 16
  %131 = add i64 %130, 8904213993623043734
  %132 = sub i64 %117, 16
  %133 = mul i64 %131, 16
  %134 = sub i64 0, %117
  %135 = add i64 0, %134
  %136 = sub i64 0, %117
  %137 = sub i64 0, 16
  %138 = sub i64 %135, %137
  %139 = add i64 %135, 16
  %140 = sub i64 %117, 307077687922077408
  %141 = sub i64 %140, 16
  %142 = add i64 %141, 307077687922077408
  %143 = sub i64 %117, 16
  %144 = mul i64 %142, 16
  %145 = shl i64 %117, 16
  %146 = sub i64 0, 16
  %147 = add i64 %117, %146
  %148 = sub i64 %117, 16
  %149 = mul i64 %147, 16
  %150 = shl i64 %117, 16
  %151 = sdiv exact i64 %117, 16
  store i32 -231413200, i32* %15
  br label %152

; <label>:152:                                    ; preds = %85, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm2EESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RKT0_(%"struct.std::array.5"*, %"struct.std::array.5"*, %"struct.std::array.5"* dereferenceable(16)) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.11", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.11", align 8
  %6 = alloca %"struct.std::array.5"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.11", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.11", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.11", %"class.__gnu_cxx::__normal_iterator.11"* %4, i32 0, i32 0
  store %"struct.std::array.5"* %0, %"struct.std::array.5"** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.11", %"class.__gnu_cxx::__normal_iterator.11"* %5, i32 0, i32 0
  store %"struct.std::array.5"* %1, %"struct.std::array.5"** %10, align 8
  store %"struct.std::array.5"* %2, %"struct.std::array.5"** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.11"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.11"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.11", %"class.__gnu_cxx::__normal_iterator.11"* %7, i32 0, i32 0
  %14 = load %"struct.std::array.5"*, %"struct.std::array.5"** %13, align 8
  %15 = call %"struct.std::array.5"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm2EESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.std::array.5"* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.11"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.11"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.11", %"class.__gnu_cxx::__normal_iterator.11"* %8, i32 0, i32 0
  %19 = load %"struct.std::array.5"*, %"struct.std::array.5"** %18, align 8
  %20 = call %"struct.std::array.5"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm2EESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.std::array.5"* %19)
  %21 = load %"struct.std::array.5"*, %"struct.std::array.5"** %6, align 8
  call void @_ZSt8__fill_aIPSt5arrayIxLm2EES1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S8_RKS5_(%"struct.std::array.5"* %15, %"struct.std::array.5"* %20, %"struct.std::array.5"* dereferenceable(16) %21)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::array.5"* @_ZNSt6vectorISt5arrayIxLm2EESaIS1_EE5beginEv(%"class.std::vector.0"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.11", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %4 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %5 = bitcast %"class.std::vector.0"* %4 to %"struct.std::_Vector_base.1"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm2EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.11"* %2, %"struct.std::array.5"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.11", %"class.__gnu_cxx::__normal_iterator.11"* %2, i32 0, i32 0
  %9 = load %"struct.std::array.5"*, %"struct.std::array.5"** %8, align 8
  ret %"struct.std::array.5"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::array.5"* @_ZNSt6vectorISt5arrayIxLm2EESaIS1_EE3endEv(%"class.std::vector.0"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::array.5"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.223
  %6 = load i32, i32* @y.224
  %7 = sub i32 %5, -1435392305
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1435392305
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -638613473, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -638613473, label %19
    i32 -566141473, label %27
    i32 1293091495, label %51
    i32 1624181131, label %53
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -566141473, i32 1624181131
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.11", align 8
  %29 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %29, align 8
  %30 = load %"class.std::vector.0"*, %"class.std::vector.0"** %29, align 8
  %31 = bitcast %"class.std::vector.0"* %30 to %"struct.std::_Vector_base.1"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %32, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm2EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.11"* %28, %"struct.std::array.5"** dereferenceable(8) %33) #3
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.11", %"class.__gnu_cxx::__normal_iterator.11"* %28, i32 0, i32 0
  %35 = load %"struct.std::array.5"*, %"struct.std::array.5"** %34, align 8
  store %"struct.std::array.5"* %35, %"struct.std::array.5"** %2
  %36 = load i32, i32* @x.223
  %37 = load i32, i32* @y.224
  %38 = sub i32 %36, -1291316513
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -1291316513
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 1293091495, i32 1624181131
  store i32 %50, i32* %15
  br label %62

; <label>:51:                                     ; preds = %16
  %52 = load volatile %"struct.std::array.5"*, %"struct.std::array.5"** %2
  ret %"struct.std::array.5"* %52

; <label>:53:                                     ; preds = %16
  %54 = alloca %"class.__gnu_cxx::__normal_iterator.11", align 8
  %55 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %55, align 8
  %56 = load %"class.std::vector.0"*, %"class.std::vector.0"** %55, align 8
  %57 = bitcast %"class.std::vector.0"* %56 to %"struct.std::_Vector_base.1"*
  %58 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %57, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %58, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm2EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.11"* %54, %"struct.std::array.5"** dereferenceable(8) %59) #3
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.11", %"class.__gnu_cxx::__normal_iterator.11"* %54, i32 0, i32 0
  %61 = load %"struct.std::array.5"*, %"struct.std::array.5"** %60, align 8
  store i32 -566141473, i32* %15
  br label %62

; <label>:62:                                     ; preds = %53, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::array.5"* @_ZSt24__uninitialized_fill_n_aIPSt5arrayIxLm2EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%"struct.std::array.5"*, i64, %"struct.std::array.5"* dereferenceable(16), %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.std::array.5"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.225
  %9 = load i32, i32* @y.226
  %10 = sub i32 %8, 693056202
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 693056202
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -1311291683, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %64
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1311291683, label %22
    i32 1965864368, label %30
    i32 -46090356, label %53
    i32 -1673180718, label %55
  ]

; <label>:21:                                     ; preds = %19
  br label %64

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 1965864368, i32 -1673180718
  store i32 %29, i32* %18
  br label %64

; <label>:30:                                     ; preds = %19
  %31 = alloca %"struct.std::array.5"*, align 8
  %32 = alloca i64, align 8
  %33 = alloca %"struct.std::array.5"*, align 8
  %34 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::array.5"* %0, %"struct.std::array.5"** %31, align 8
  store i64 %1, i64* %32, align 8
  store %"struct.std::array.5"* %2, %"struct.std::array.5"** %33, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %34, align 8
  %35 = load %"struct.std::array.5"*, %"struct.std::array.5"** %31, align 8
  %36 = load i64, i64* %32, align 8
  %37 = load %"struct.std::array.5"*, %"struct.std::array.5"** %33, align 8
  %38 = call %"struct.std::array.5"* @_ZSt20uninitialized_fill_nIPSt5arrayIxLm2EEmS1_ET_S3_T0_RKT1_(%"struct.std::array.5"* %35, i64 %36, %"struct.std::array.5"* dereferenceable(16) %37)
  store %"struct.std::array.5"* %38, %"struct.std::array.5"** %5
  %39 = load i32, i32* @x.225
  %40 = load i32, i32* @y.226
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -46090356, i32 -1673180718
  store i32 %52, i32* %18
  br label %64

; <label>:53:                                     ; preds = %19
  %54 = load volatile %"struct.std::array.5"*, %"struct.std::array.5"** %5
  ret %"struct.std::array.5"* %54

; <label>:55:                                     ; preds = %19
  %56 = alloca %"struct.std::array.5"*, align 8
  %57 = alloca i64, align 8
  %58 = alloca %"struct.std::array.5"*, align 8
  %59 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::array.5"* %0, %"struct.std::array.5"** %56, align 8
  store i64 %1, i64* %57, align 8
  store %"struct.std::array.5"* %2, %"struct.std::array.5"** %58, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %59, align 8
  %60 = load %"struct.std::array.5"*, %"struct.std::array.5"** %56, align 8
  %61 = load i64, i64* %57, align 8
  %62 = load %"struct.std::array.5"*, %"struct.std::array.5"** %58, align 8
  %63 = call %"struct.std::array.5"* @_ZSt20uninitialized_fill_nIPSt5arrayIxLm2EEmS1_ET_S3_T0_RKT1_(%"struct.std::array.5"* %60, i64 %61, %"struct.std::array.5"* dereferenceable(16) %62)
  store i32 1965864368, i32* %18
  br label %64

; <label>:64:                                     ; preds = %55, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt5arrayIxLm2EESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.0"*, %"struct.std::array.5"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.227
  %4 = load i32, i32* @y.228
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %168

; <label>:16:                                     ; preds = %2, %168
  %17 = alloca %"class.std::vector.0"*, align 8
  %18 = alloca %"struct.std::array.5"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %17, align 8
  store %"struct.std::array.5"* %1, %"struct.std::array.5"** %18, align 8
  %19 = load %"class.std::vector.0"*, %"class.std::vector.0"** %17, align 8
  %20 = load %"struct.std::array.5"*, %"struct.std::array.5"** %18, align 8
  %21 = bitcast %"class.std::vector.0"* %19 to %"struct.std::_Vector_base.1"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %22, i32 0, i32 1
  %24 = load %"struct.std::array.5"*, %"struct.std::array.5"** %23, align 8
  %25 = bitcast %"class.std::vector.0"* %19 to %"struct.std::_Vector_base.1"*
  %26 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %25) #3
  %27 = load i32, i32* @x.227
  %28 = load i32, i32* @y.228
  %29 = sub i32 %27, -1976201865
  %30 = sub i32 %29, 1
  %31 = add i32 %30, -1976201865
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 true, true
  %40 = and i1 %37, true
  %41 = and i1 %35, %39
  %42 = and i1 %38, true
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 true, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  br i1 %51, label %53, label %168

; <label>:53:                                     ; preds = %16
  invoke void @_ZSt8_DestroyIPSt5arrayIxLm2EES1_EvT_S3_RSaIT0_E(%"struct.std::array.5"* %20, %"struct.std::array.5"* %24, %"class.std::allocator.2"* dereferenceable(1) %26)
          to label %54 unwind label %112

; <label>:54:                                     ; preds = %53
  %55 = load i32, i32* @x.227
  %56 = load i32, i32* @y.228
  %57 = sub i32 0, 1
  %58 = add i32 %55, %57
  %59 = sub i32 %55, 1
  %60 = mul i32 %55, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %56, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 false, true
  %67 = and i1 %64, false
  %68 = and i1 %62, %66
  %69 = and i1 %65, false
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 false, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  br i1 %78, label %80, label %179

; <label>:80:                                     ; preds = %54, %179
  %81 = load %"struct.std::array.5"*, %"struct.std::array.5"** %18, align 8
  %82 = bitcast %"class.std::vector.0"* %19 to %"struct.std::_Vector_base.1"*
  %83 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %82, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %83, i32 0, i32 1
  store %"struct.std::array.5"* %81, %"struct.std::array.5"** %84, align 8
  %85 = load i32, i32* @x.227
  %86 = load i32, i32* @y.228
  %87 = add i32 %85, -253525045
  %88 = sub i32 %87, 1
  %89 = sub i32 %88, -253525045
  %90 = sub i32 %85, 1
  %91 = mul i32 %85, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %86, 10
  %95 = xor i1 %93, true
  %96 = xor i1 %94, true
  %97 = xor i1 false, true
  %98 = and i1 %95, false
  %99 = and i1 %93, %97
  %100 = and i1 %96, false
  %101 = and i1 %94, %97
  %102 = or i1 %98, %99
  %103 = or i1 %100, %101
  %104 = xor i1 %102, %103
  %105 = or i1 %95, %96
  %106 = xor i1 %105, true
  %107 = or i1 false, %97
  %108 = and i1 %106, %107
  %109 = or i1 %104, %108
  %110 = or i1 %93, %94
  br i1 %109, label %111, label %179

; <label>:111:                                    ; preds = %80
  ret void

; <label>:112:                                    ; preds = %53
  %113 = load i32, i32* @x.227
  %114 = load i32, i32* @y.228
  %115 = sub i32 0, 1
  %116 = add i32 %113, %115
  %117 = sub i32 %113, 1
  %118 = mul i32 %113, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %114, 10
  %122 = xor i1 %120, true
  %123 = xor i1 %121, true
  %124 = xor i1 true, true
  %125 = and i1 %122, true
  %126 = and i1 %120, %124
  %127 = and i1 %123, true
  %128 = and i1 %121, %124
  %129 = or i1 %125, %126
  %130 = or i1 %127, %128
  %131 = xor i1 %129, %130
  %132 = or i1 %122, %123
  %133 = xor i1 %132, true
  %134 = or i1 true, %124
  %135 = and i1 %133, %134
  %136 = or i1 %131, %135
  %137 = or i1 %120, %121
  br i1 %136, label %138, label %184

; <label>:138:                                    ; preds = %112, %184
  %139 = landingpad { i8*, i32 }
          catch i8* null
  %140 = extractvalue { i8*, i32 } %139, 0
  call void @__clang_call_terminate(i8* %140) #11
  %141 = load i32, i32* @x.227
  %142 = load i32, i32* @y.228
  %143 = sub i32 %141, -656863913
  %144 = sub i32 %143, 1
  %145 = add i32 %144, -656863913
  %146 = sub i32 %141, 1
  %147 = mul i32 %141, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %142, 10
  %151 = xor i1 %149, true
  %152 = xor i1 %150, true
  %153 = xor i1 true, true
  %154 = and i1 %151, true
  %155 = and i1 %149, %153
  %156 = and i1 %152, true
  %157 = and i1 %150, %153
  %158 = or i1 %154, %155
  %159 = or i1 %156, %157
  %160 = xor i1 %158, %159
  %161 = or i1 %151, %152
  %162 = xor i1 %161, true
  %163 = or i1 true, %153
  %164 = and i1 %162, %163
  %165 = or i1 %160, %164
  %166 = or i1 %149, %150
  br i1 %165, label %167, label %184

; <label>:167:                                    ; preds = %138
  unreachable

; <label>:168:                                    ; preds = %16, %2
  %169 = alloca %"class.std::vector.0"*, align 8
  %170 = alloca %"struct.std::array.5"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %169, align 8
  store %"struct.std::array.5"* %1, %"struct.std::array.5"** %170, align 8
  %171 = load %"class.std::vector.0"*, %"class.std::vector.0"** %169, align 8
  %172 = load %"struct.std::array.5"*, %"struct.std::array.5"** %170, align 8
  %173 = bitcast %"class.std::vector.0"* %171 to %"struct.std::_Vector_base.1"*
  %174 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %173, i32 0, i32 0
  %175 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %174, i32 0, i32 1
  %176 = load %"struct.std::array.5"*, %"struct.std::array.5"** %175, align 8
  %177 = bitcast %"class.std::vector.0"* %171 to %"struct.std::_Vector_base.1"*
  %178 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %177) #3
  br label %16

; <label>:179:                                    ; preds = %80, %54
  %180 = load %"struct.std::array.5"*, %"struct.std::array.5"** %18, align 8
  %181 = bitcast %"class.std::vector.0"* %19 to %"struct.std::_Vector_base.1"*
  %182 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %181, i32 0, i32 0
  %183 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %182, i32 0, i32 1
  store %"struct.std::array.5"* %180, %"struct.std::array.5"** %183, align 8
  br label %80

; <label>:184:                                    ; preds = %138, %112
  %185 = landingpad { i8*, i32 }
          catch i8* null
  %186 = extractvalue { i8*, i32 } %185, 0
  call void @__clang_call_terminate(i8* %186) #11
  br label %138
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::array.5"* @_ZSt6fill_nIPSt5arrayIxLm2EEmS1_ET_S3_T0_RKT1_(%"struct.std::array.5"*, i64, %"struct.std::array.5"* dereferenceable(16)) #0 comdat {
  %4 = alloca %"struct.std::array.5"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.229
  %8 = load i32, i32* @y.230
  %9 = add i32 %7, -321215645
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -321215645
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1035923599, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %76
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1035923599, label %21
    i32 1240331142, label %41
    i32 -1726937787, label %65
    i32 338979816, label %67
  ]

; <label>:20:                                     ; preds = %18
  br label %76

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1240331142, i32 338979816
  store i32 %40, i32* %17
  br label %76

; <label>:41:                                     ; preds = %18
  %42 = alloca %"struct.std::array.5"*, align 8
  %43 = alloca i64, align 8
  %44 = alloca %"struct.std::array.5"*, align 8
  store %"struct.std::array.5"* %0, %"struct.std::array.5"** %42, align 8
  store i64 %1, i64* %43, align 8
  store %"struct.std::array.5"* %2, %"struct.std::array.5"** %44, align 8
  %45 = load %"struct.std::array.5"*, %"struct.std::array.5"** %42, align 8
  %46 = call %"struct.std::array.5"* @_ZSt12__niter_baseIPSt5arrayIxLm2EEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.std::array.5"* %45)
  %47 = load i64, i64* %43, align 8
  %48 = load %"struct.std::array.5"*, %"struct.std::array.5"** %44, align 8
  %49 = call %"struct.std::array.5"* @_ZSt10__fill_n_aIPSt5arrayIxLm2EEmS1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES6_T0_RKS5_(%"struct.std::array.5"* %46, i64 %47, %"struct.std::array.5"* dereferenceable(16) %48)
  store %"struct.std::array.5"* %49, %"struct.std::array.5"** %4
  %50 = load i32, i32* @x.229
  %51 = load i32, i32* @y.230
  %52 = sub i32 %50, -1735158800
  %53 = sub i32 %52, 1
  %54 = add i32 %53, -1735158800
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -1726937787, i32 338979816
  store i32 %64, i32* %17
  br label %76

; <label>:65:                                     ; preds = %18
  %66 = load volatile %"struct.std::array.5"*, %"struct.std::array.5"** %4
  ret %"struct.std::array.5"* %66

; <label>:67:                                     ; preds = %18
  %68 = alloca %"struct.std::array.5"*, align 8
  %69 = alloca i64, align 8
  %70 = alloca %"struct.std::array.5"*, align 8
  store %"struct.std::array.5"* %0, %"struct.std::array.5"** %68, align 8
  store i64 %1, i64* %69, align 8
  store %"struct.std::array.5"* %2, %"struct.std::array.5"** %70, align 8
  %71 = load %"struct.std::array.5"*, %"struct.std::array.5"** %68, align 8
  %72 = call %"struct.std::array.5"* @_ZSt12__niter_baseIPSt5arrayIxLm2EEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.std::array.5"* %71)
  %73 = load i64, i64* %69, align 8
  %74 = load %"struct.std::array.5"*, %"struct.std::array.5"** %70, align 8
  %75 = call %"struct.std::array.5"* @_ZSt10__fill_n_aIPSt5arrayIxLm2EEmS1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES6_T0_RKS5_(%"struct.std::array.5"* %72, i64 %73, %"struct.std::array.5"* dereferenceable(16) %74)
  store i32 1240331142, i32* %17
  br label %76

; <label>:76:                                     ; preds = %67, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.1"*, i64, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.1"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %9 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %6, align 8
  call void @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %10, %"class.std::allocator.2"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base.1"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %10) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i8*, i8** %7, align 8
  %20 = load i32, i32* %8, align 4
  %21 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt5arrayIxLm2EESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.0"*, i64, %"struct.std::array.5"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.std::array.5"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"struct.std::array.5"* %2, %"struct.std::array.5"** %6, align 8
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %8 = bitcast %"class.std::vector.0"* %7 to %"struct.std::_Vector_base.1"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"struct.std::array.5"*, %"struct.std::array.5"** %10, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load %"struct.std::array.5"*, %"struct.std::array.5"** %6, align 8
  %14 = bitcast %"class.std::vector.0"* %7 to %"struct.std::_Vector_base.1"*
  %15 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %14) #3
  %16 = call %"struct.std::array.5"* @_ZSt24__uninitialized_fill_n_aIPSt5arrayIxLm2EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%"struct.std::array.5"* %11, i64 %12, %"struct.std::array.5"* dereferenceable(16) %13, %"class.std::allocator.2"* dereferenceable(1) %15)
  %17 = bitcast %"class.std::vector.0"* %7 to %"struct.std::_Vector_base.1"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %18, i32 0, i32 1
  store %"struct.std::array.5"* %16, %"struct.std::array.5"** %19, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %5 to %"class.std::allocator.2"*
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  call void @_ZNSaISt5arrayIxLm2EEEC2ERKS1_(%"class.std::allocator.2"* %6, %"class.std::allocator.2"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %5, i32 0, i32 0
  store %"struct.std::array.5"* null, %"struct.std::array.5"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %5, i32 0, i32 1
  store %"struct.std::array.5"* null, %"struct.std::array.5"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %5, i32 0, i32 2
  store %"struct.std::array.5"* null, %"struct.std::array.5"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.237
  %6 = load i32, i32* @y.238
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 2138107827, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %93
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 2138107827, label %18
    i32 1646862811, label %26
    i32 -755081055, label %72
    i32 772762866, label %73
  ]

; <label>:17:                                     ; preds = %15
  br label %93

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1646862811, i32 772762866
  store i32 %25, i32* %14
  br label %93

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base.1"*, align 8
  %28 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %27, align 8
  store i64 %1, i64* %28, align 8
  %29 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %27, align 8
  %30 = load i64, i64* %28, align 8
  %31 = call %"struct.std::array.5"* @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %29, i64 %30)
  %32 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %29, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %32, i32 0, i32 0
  store %"struct.std::array.5"* %31, %"struct.std::array.5"** %33, align 8
  %34 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %29, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load %"struct.std::array.5"*, %"struct.std::array.5"** %35, align 8
  %37 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %29, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %37, i32 0, i32 1
  store %"struct.std::array.5"* %36, %"struct.std::array.5"** %38, align 8
  %39 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %29, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %39, i32 0, i32 0
  %41 = load %"struct.std::array.5"*, %"struct.std::array.5"** %40, align 8
  %42 = load i64, i64* %28, align 8
  %43 = getelementptr inbounds %"struct.std::array.5", %"struct.std::array.5"* %41, i64 %42
  %44 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %29, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %44, i32 0, i32 2
  store %"struct.std::array.5"* %43, %"struct.std::array.5"** %45, align 8
  %46 = load i32, i32* @x.237
  %47 = load i32, i32* @y.238
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -755081055, i32 772762866
  store i32 %71, i32* %14
  br label %93

; <label>:72:                                     ; preds = %15
  ret void

; <label>:73:                                     ; preds = %15
  %74 = alloca %"struct.std::_Vector_base.1"*, align 8
  %75 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %74, align 8
  store i64 %1, i64* %75, align 8
  %76 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %74, align 8
  %77 = load i64, i64* %75, align 8
  %78 = call %"struct.std::array.5"* @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %76, i64 %77)
  %79 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %76, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %79, i32 0, i32 0
  store %"struct.std::array.5"* %78, %"struct.std::array.5"** %80, align 8
  %81 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %76, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %81, i32 0, i32 0
  %83 = load %"struct.std::array.5"*, %"struct.std::array.5"** %82, align 8
  %84 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %76, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %84, i32 0, i32 1
  store %"struct.std::array.5"* %83, %"struct.std::array.5"** %85, align 8
  %86 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %76, i32 0, i32 0
  %87 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %86, i32 0, i32 0
  %88 = load %"struct.std::array.5"*, %"struct.std::array.5"** %87, align 8
  %89 = load i64, i64* %75, align 8
  %90 = getelementptr inbounds %"struct.std::array.5", %"struct.std::array.5"* %88, i64 %89
  %91 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %76, i32 0, i32 0
  %92 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %91, i32 0, i32 2
  store %"struct.std::array.5"* %90, %"struct.std::array.5"** %92, align 8
  store i32 1646862811, i32* %14
  br label %93

; <label>:93:                                     ; preds = %73, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt5arrayIxLm2EEEC2ERKS1_(%"class.std::allocator.2"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm2EEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.3"* %6, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm2EEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %1, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::array.5"* @_ZNSt12_Vector_baseISt5arrayIxLm2EESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"struct.std::_Vector_base.1"*
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.243
  %9 = load i32, i32* @y.244
  %10 = add i32 %8, -958805271
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -958805271
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -1782730947, i32* %18
  %19 = alloca %"struct.std::array.5"*
  br label %20

; <label>:20:                                     ; preds = %2, %85
  %21 = load i32, i32* %18
  switch i32 %21, label %22 [
    i32 -1782730947, label %23
    i32 1827261522, label %43
    i32 1975405203, label %66
    i32 1270361368, label %69
    i32 -1538794452, label %76
    i32 -622284178, label %77
    i32 -389851652, label %79
  ]

; <label>:22:                                     ; preds = %20
  br label %85

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %7
  %25 = load volatile i1, i1* %6
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 false, true
  %29 = and i1 %26, false
  %30 = and i1 %24, %28
  %31 = and i1 %27, false
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 false, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 1827261522, i32 -389851652
  store i32 %42, i32* %18
  br label %85

; <label>:43:                                     ; preds = %20
  %44 = alloca %"struct.std::_Vector_base.1"*, align 8
  %45 = alloca i64, align 8
  store i64* %45, i64** %5
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %44, align 8
  %46 = load volatile i64*, i64** %5
  store i64 %1, i64* %46, align 8
  %47 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %44, align 8
  store %"struct.std::_Vector_base.1"* %47, %"struct.std::_Vector_base.1"** %4
  %48 = load volatile i64*, i64** %5
  %49 = load i64, i64* %48, align 8
  %50 = icmp ne i64 %49, 0
  store i1 %50, i1* %3
  %51 = load i32, i32* @x.243
  %52 = load i32, i32* @y.244
  %53 = sub i32 %51, -1305930102
  %54 = sub i32 %53, 1
  %55 = add i32 %54, -1305930102
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 1975405203, i32 -389851652
  store i32 %65, i32* %18
  br label %85

; <label>:66:                                     ; preds = %20
  %67 = load volatile i1, i1* %3
  %68 = select i1 %67, i32 1270361368, i32 -1538794452
  store i32 %68, i32* %18
  br label %85

; <label>:69:                                     ; preds = %20
  %70 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %4
  %71 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %70, i32 0, i32 0
  %72 = bitcast %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %71 to %"class.std::allocator.2"*
  %73 = load volatile i64*, i64** %5
  %74 = load i64, i64* %73, align 8
  %75 = call %"struct.std::array.5"* @_ZNSt16allocator_traitsISaISt5arrayIxLm2EEEE8allocateERS2_m(%"class.std::allocator.2"* dereferenceable(1) %72, i64 %74)
  store i32 -622284178, i32* %18
  store %"struct.std::array.5"* %75, %"struct.std::array.5"** %19
  br label %85

; <label>:76:                                     ; preds = %20
  store i32 -622284178, i32* %18
  store %"struct.std::array.5"* null, %"struct.std::array.5"** %19
  br label %85

; <label>:77:                                     ; preds = %20
  %78 = load %"struct.std::array.5"*, %"struct.std::array.5"** %19
  ret %"struct.std::array.5"* %78

; <label>:79:                                     ; preds = %20
  %80 = alloca %"struct.std::_Vector_base.1"*, align 8
  %81 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %80, align 8
  store i64 %1, i64* %81, align 8
  %82 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %80, align 8
  %83 = load i64, i64* %81, align 8
  %84 = icmp ne i64 %83, 0
  store i32 1827261522, i32* %18
  br label %85

; <label>:85:                                     ; preds = %79, %76, %69, %66, %43, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::array.5"* @_ZNSt16allocator_traitsISaISt5arrayIxLm2EEEE8allocateERS2_m(%"class.std::allocator.2"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::array.5"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.245
  %7 = load i32, i32* @y.246
  %8 = add i32 %6, 1697970370
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1697970370
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1143117204, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %59
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1143117204, label %20
    i32 1581198842, label %28
    i32 723311877, label %50
    i32 -308819544, label %52
  ]

; <label>:19:                                     ; preds = %17
  br label %59

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1581198842, i32 -308819544
  store i32 %27, i32* %16
  br label %59

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.2"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %29, align 8
  %32 = bitcast %"class.std::allocator.2"* %31 to %"class.__gnu_cxx::new_allocator.3"*
  %33 = load i64, i64* %30, align 8
  %34 = call %"struct.std::array.5"* @_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm2EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"* %32, i64 %33, i8* null)
  store %"struct.std::array.5"* %34, %"struct.std::array.5"** %3
  %35 = load i32, i32* @x.245
  %36 = load i32, i32* @y.246
  %37 = add i32 %35, -1129708872
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -1129708872
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 723311877, i32 -308819544
  store i32 %49, i32* %16
  br label %59

; <label>:50:                                     ; preds = %17
  %51 = load volatile %"struct.std::array.5"*, %"struct.std::array.5"** %3
  ret %"struct.std::array.5"* %51

; <label>:52:                                     ; preds = %17
  %53 = alloca %"class.std::allocator.2"*, align 8
  %54 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %53, align 8
  store i64 %1, i64* %54, align 8
  %55 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %53, align 8
  %56 = bitcast %"class.std::allocator.2"* %55 to %"class.__gnu_cxx::new_allocator.3"*
  %57 = load i64, i64* %54, align 8
  %58 = call %"struct.std::array.5"* @_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm2EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"* %56, i64 %57, i8* null)
  store i32 1581198842, i32* %16
  br label %59

; <label>:59:                                     ; preds = %52, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::array.5"* @_ZN9__gnu_cxx13new_allocatorISt5arrayIxLm2EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"struct.std::array.5"*
  %5 = alloca i1
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.247
  %10 = load i32, i32* @y.248
  %11 = add i32 %9, 146892387
  %12 = sub i32 %11, 1
  %13 = sub i32 %12, 146892387
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 2050659593, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %155
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 2050659593, label %23
    i32 720997804, label %31
    i32 1161408997, label %68
    i32 -1966826833, label %71
    i32 2121806232, label %72
    i32 -302588951, label %100
    i32 -1185313248, label %120
    i32 723982924, label %122
    i32 -838963027, label %130
  ]

; <label>:22:                                     ; preds = %20
  br label %155

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 720997804, i32 723982924
  store i32 %30, i32* %19
  br label %155

; <label>:31:                                     ; preds = %20
  %32 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %33 = alloca i64, align 8
  store i64* %33, i64** %6
  %34 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %32, align 8
  %35 = load volatile i64*, i64** %6
  store i64 %1, i64* %35, align 8
  store i8* %2, i8** %34, align 8
  %36 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %32, align 8
  %37 = load volatile i64*, i64** %6
  %38 = load i64, i64* %37, align 8
  %39 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt5arrayIxLm2EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %36) #3
  %40 = icmp ugt i64 %38, %39
  store i1 %40, i1* %5
  %41 = load i32, i32* @x.247
  %42 = load i32, i32* @y.248
  %43 = add i32 %41, 2123919009
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 2123919009
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1161408997, i32 723982924
  store i32 %67, i32* %19
  br label %155

; <label>:68:                                     ; preds = %20
  %69 = load volatile i1, i1* %5
  %70 = select i1 %69, i32 -1966826833, i32 2121806232
  store i32 %70, i32* %19
  br label %155

; <label>:71:                                     ; preds = %20
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:72:                                     ; preds = %20
  %73 = load i32, i32* @x.247
  %74 = load i32, i32* @y.248
  %75 = add i32 %73, 828756138
  %76 = sub i32 %75, 1
  %77 = sub i32 %76, 828756138
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = xor i1 %81, true
  %84 = xor i1 %82, true
  %85 = xor i1 true, true
  %86 = and i1 %83, true
  %87 = and i1 %81, %85
  %88 = and i1 %84, true
  %89 = and i1 %82, %85
  %90 = or i1 %86, %87
  %91 = or i1 %88, %89
  %92 = xor i1 %90, %91
  %93 = or i1 %83, %84
  %94 = xor i1 %93, true
  %95 = or i1 true, %85
  %96 = and i1 %94, %95
  %97 = or i1 %92, %96
  %98 = or i1 %81, %82
  %99 = select i1 %97, i32 -302588951, i32 -838963027
  store i32 %99, i32* %19
  br label %155

; <label>:100:                                    ; preds = %20
  %101 = load volatile i64*, i64** %6
  %102 = load i64, i64* %101, align 8
  %103 = mul i64 %102, 16
  %104 = call i8* @_Znwm(i64 %103)
  %105 = bitcast i8* %104 to %"struct.std::array.5"*
  store %"struct.std::array.5"* %105, %"struct.std::array.5"** %4
  %106 = load i32, i32* @x.247
  %107 = load i32, i32* @y.248
  %108 = sub i32 0, 1
  %109 = add i32 %106, %108
  %110 = sub i32 %106, 1
  %111 = mul i32 %106, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %107, 10
  %115 = and i1 %113, %114
  %116 = xor i1 %113, %114
  %117 = or i1 %115, %116
  %118 = or i1 %113, %114
  %119 = select i1 %117, i32 -1185313248, i32 -838963027
  store i32 %119, i32* %19
  br label %155

; <label>:120:                                    ; preds = %20
  %121 = load volatile %"struct.std::array.5"*, %"struct.std::array.5"** %4
  ret %"struct.std::array.5"* %121

; <label>:122:                                    ; preds = %20
  %123 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %124 = alloca i64, align 8
  %125 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %123, align 8
  store i64 %1, i64* %124, align 8
  store i8* %2, i8** %125, align 8
  %126 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %123, align 8
  %127 = load i64, i64* %124, align 8
  %128 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt5arrayIxLm2EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %126) #3
  %129 = icmp ugt i64 %127, %128
  store i32 720997804, i32* %19
  br label %155

; <label>:130:                                    ; preds = %20
  %131 = load volatile i64*, i64** %6
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, -1559127385993780430
  %134 = sub i64 %133, 16
  %135 = sub i64 %134, -1559127385993780430
  %136 = sub i64 %132, 16
  %137 = mul i64 %135, 16
  %138 = sub i64 0, 6738571492395946249
  %139 = sub i64 %138, %132
  %140 = add i64 %139, 6738571492395946249
  %141 = sub i64 0, %132
  %142 = sub i64 0, %140
  %143 = sub i64 0, 16
  %144 = add i64 %142, %143
  %145 = sub i64 0, %144
  %146 = add i64 %140, 16
  %147 = add i64 %132, -8898518103491076327
  %148 = sub i64 %147, 16
  %149 = sub i64 %148, -8898518103491076327
  %150 = sub i64 %132, 16
  %151 = mul i64 %149, 16
  %152 = mul i64 %132, 16
  %153 = call i8* @_Znwm(i64 %152)
  %154 = bitcast i8* %153 to %"struct.std::array.5"*
  store i32 -302588951, i32* %19
  br label %155

; <label>:155:                                    ; preds = %130, %122, %100, %72, %68, %31, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt5arrayIxLm2EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret i64 1152921504606846975
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPSt5arrayIxLm2EEEvRT_S4_(%"struct.std::array.5"** dereferenceable(8), %"struct.std::array.5"** dereferenceable(8)) #5 comdat {
  %3 = alloca %"struct.std::array.5"**, align 8
  %4 = alloca %"struct.std::array.5"**, align 8
  %5 = alloca %"struct.std::array.5"*, align 8
  store %"struct.std::array.5"** %0, %"struct.std::array.5"*** %3, align 8
  store %"struct.std::array.5"** %1, %"struct.std::array.5"*** %4, align 8
  %6 = load %"struct.std::array.5"**, %"struct.std::array.5"*** %3, align 8
  %7 = call dereferenceable(8) %"struct.std::array.5"** @_ZSt4moveIRPSt5arrayIxLm2EEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.std::array.5"** dereferenceable(8) %6) #3
  %8 = load %"struct.std::array.5"*, %"struct.std::array.5"** %7, align 8
  store %"struct.std::array.5"* %8, %"struct.std::array.5"** %5, align 8
  %9 = load %"struct.std::array.5"**, %"struct.std::array.5"*** %4, align 8
  %10 = call dereferenceable(8) %"struct.std::array.5"** @_ZSt4moveIRPSt5arrayIxLm2EEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.std::array.5"** dereferenceable(8) %9) #3
  %11 = load %"struct.std::array.5"*, %"struct.std::array.5"** %10, align 8
  %12 = load %"struct.std::array.5"**, %"struct.std::array.5"*** %3, align 8
  store %"struct.std::array.5"* %11, %"struct.std::array.5"** %12, align 8
  %13 = call dereferenceable(8) %"struct.std::array.5"** @_ZSt4moveIRPSt5arrayIxLm2EEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.std::array.5"** dereferenceable(8) %5) #3
  %14 = load %"struct.std::array.5"*, %"struct.std::array.5"** %13, align 8
  %15 = load %"struct.std::array.5"**, %"struct.std::array.5"*** %4, align 8
  store %"struct.std::array.5"* %14, %"struct.std::array.5"** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::array.5"** @_ZSt4moveIRPSt5arrayIxLm2EEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.std::array.5"** dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.std::array.5"**, align 8
  store %"struct.std::array.5"** %0, %"struct.std::array.5"*** %2, align 8
  %3 = load %"struct.std::array.5"**, %"struct.std::array.5"*** %2, align 8
  ret %"struct.std::array.5"** %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPSt5arrayIxLm2EES1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S8_RKS5_(%"struct.std::array.5"*, %"struct.std::array.5"*, %"struct.std::array.5"* dereferenceable(16)) #5 comdat {
  %4 = alloca i1
  %5 = alloca %"struct.std::array.5"*, align 8
  %6 = alloca %"struct.std::array.5"*, align 8
  %7 = alloca %"struct.std::array.5"*, align 8
  store %"struct.std::array.5"* %0, %"struct.std::array.5"** %5, align 8
  store %"struct.std::array.5"* %1, %"struct.std::array.5"** %6, align 8
  store %"struct.std::array.5"* %2, %"struct.std::array.5"** %7, align 8
  %8 = alloca i32
  store i32 -24905391, i32* %8
  br label %9

; <label>:9:                                      ; preds = %3, %181
  %10 = load i32, i32* %8
  switch i32 %10, label %11 [
    i32 -24905391, label %12
    i32 1462016089, label %40
    i32 -2102309944, label %59
    i32 1090300941, label %62
    i32 -549519478, label %90
    i32 -105025635, label %122
    i32 -537606336, label %123
    i32 2032063332, label %138
    i32 310820707, label %167
    i32 1216167622, label %168
    i32 1324653755, label %169
    i32 1242067075, label %173
    i32 -683856336, label %178
  ]

; <label>:11:                                     ; preds = %9
  br label %181

; <label>:12:                                     ; preds = %9
  %13 = load i32, i32* @x.255
  %14 = load i32, i32* @y.256
  %15 = add i32 %13, 472943000
  %16 = sub i32 %15, 1
  %17 = sub i32 %16, 472943000
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %14, 10
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1462016089, i32 1324653755
  store i32 %39, i32* %8
  br label %181

; <label>:40:                                     ; preds = %9
  %41 = load %"struct.std::array.5"*, %"struct.std::array.5"** %5, align 8
  %42 = load %"struct.std::array.5"*, %"struct.std::array.5"** %6, align 8
  %43 = icmp ne %"struct.std::array.5"* %41, %42
  store i1 %43, i1* %4
  %44 = load i32, i32* @x.255
  %45 = load i32, i32* @y.256
  %46 = add i32 %44, 210933633
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 210933633
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -2102309944, i32 1324653755
  store i32 %58, i32* %8
  br label %181

; <label>:59:                                     ; preds = %9
  %60 = load volatile i1, i1* %4
  %61 = select i1 %60, i32 1090300941, i32 1216167622
  store i32 %61, i32* %8
  br label %181

; <label>:62:                                     ; preds = %9
  %63 = load i32, i32* @x.255
  %64 = load i32, i32* @y.256
  %65 = sub i32 %63, 631109532
  %66 = sub i32 %65, 1
  %67 = add i32 %66, 631109532
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = xor i1 %71, true
  %74 = xor i1 %72, true
  %75 = xor i1 true, true
  %76 = and i1 %73, true
  %77 = and i1 %71, %75
  %78 = and i1 %74, true
  %79 = and i1 %72, %75
  %80 = or i1 %76, %77
  %81 = or i1 %78, %79
  %82 = xor i1 %80, %81
  %83 = or i1 %73, %74
  %84 = xor i1 %83, true
  %85 = or i1 true, %75
  %86 = and i1 %84, %85
  %87 = or i1 %82, %86
  %88 = or i1 %71, %72
  %89 = select i1 %87, i32 -549519478, i32 1242067075
  store i32 %89, i32* %8
  br label %181

; <label>:90:                                     ; preds = %9
  %91 = load %"struct.std::array.5"*, %"struct.std::array.5"** %7, align 8
  %92 = load %"struct.std::array.5"*, %"struct.std::array.5"** %5, align 8
  %93 = bitcast %"struct.std::array.5"* %92 to i8*
  %94 = bitcast %"struct.std::array.5"* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %93, i8* %94, i64 16, i32 8, i1 false)
  %95 = load i32, i32* @x.255
  %96 = load i32, i32* @y.256
  %97 = sub i32 %95, -1250518020
  %98 = sub i32 %97, 1
  %99 = add i32 %98, -1250518020
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = xor i1 %103, true
  %106 = xor i1 %104, true
  %107 = xor i1 true, true
  %108 = and i1 %105, true
  %109 = and i1 %103, %107
  %110 = and i1 %106, true
  %111 = and i1 %104, %107
  %112 = or i1 %108, %109
  %113 = or i1 %110, %111
  %114 = xor i1 %112, %113
  %115 = or i1 %105, %106
  %116 = xor i1 %115, true
  %117 = or i1 true, %107
  %118 = and i1 %116, %117
  %119 = or i1 %114, %118
  %120 = or i1 %103, %104
  %121 = select i1 %119, i32 -105025635, i32 1242067075
  store i32 %121, i32* %8
  br label %181

; <label>:122:                                    ; preds = %9
  store i32 -537606336, i32* %8
  br label %181

; <label>:123:                                    ; preds = %9
  %124 = load i32, i32* @x.255
  %125 = load i32, i32* @y.256
  %126 = sub i32 0, 1
  %127 = add i32 %124, %126
  %128 = sub i32 %124, 1
  %129 = mul i32 %124, %127
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %125, 10
  %133 = and i1 %131, %132
  %134 = xor i1 %131, %132
  %135 = or i1 %133, %134
  %136 = or i1 %131, %132
  %137 = select i1 %135, i32 2032063332, i32 -683856336
  store i32 %137, i32* %8
  br label %181

; <label>:138:                                    ; preds = %9
  %139 = load %"struct.std::array.5"*, %"struct.std::array.5"** %5, align 8
  %140 = getelementptr inbounds %"struct.std::array.5", %"struct.std::array.5"* %139, i32 1
  store %"struct.std::array.5"* %140, %"struct.std::array.5"** %5, align 8
  %141 = load i32, i32* @x.255
  %142 = load i32, i32* @y.256
  %143 = sub i32 0, 1
  %144 = add i32 %141, %143
  %145 = sub i32 %141, 1
  %146 = mul i32 %141, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %142, 10
  %150 = xor i1 %148, true
  %151 = xor i1 %149, true
  %152 = xor i1 true, true
  %153 = and i1 %150, true
  %154 = and i1 %148, %152
  %155 = and i1 %151, true
  %156 = and i1 %149, %152
  %157 = or i1 %153, %154
  %158 = or i1 %155, %156
  %159 = xor i1 %157, %158
  %160 = or i1 %150, %151
  %161 = xor i1 %160, true
  %162 = or i1 true, %152
  %163 = and i1 %161, %162
  %164 = or i1 %159, %163
  %165 = or i1 %148, %149
  %166 = select i1 %164, i32 310820707, i32 -683856336
  store i32 %166, i32* %8
  br label %181

; <label>:167:                                    ; preds = %9
  store i32 -24905391, i32* %8
  br label %181

; <label>:168:                                    ; preds = %9
  ret void

; <label>:169:                                    ; preds = %9
  %170 = load %"struct.std::array.5"*, %"struct.std::array.5"** %5, align 8
  %171 = load %"struct.std::array.5"*, %"struct.std::array.5"** %6, align 8
  %172 = icmp ne %"struct.std::array.5"* %170, %171
  store i32 1462016089, i32* %8
  br label %181

; <label>:173:                                    ; preds = %9
  %174 = load %"struct.std::array.5"*, %"struct.std::array.5"** %7, align 8
  %175 = load %"struct.std::array.5"*, %"struct.std::array.5"** %5, align 8
  %176 = bitcast %"struct.std::array.5"* %175 to i8*
  %177 = bitcast %"struct.std::array.5"* %174 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %176, i8* %177, i64 16, i32 8, i1 false)
  store i32 -549519478, i32* %8
  br label %181

; <label>:178:                                    ; preds = %9
  %179 = load %"struct.std::array.5"*, %"struct.std::array.5"** %5, align 8
  %180 = getelementptr inbounds %"struct.std::array.5", %"struct.std::array.5"* %179, i32 1
  store %"struct.std::array.5"* %180, %"struct.std::array.5"** %5, align 8
  store i32 2032063332, i32* %8
  br label %181

; <label>:181:                                    ; preds = %178, %173, %169, %167, %138, %123, %122, %90, %62, %59, %40, %12, %11
  br label %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::array.5"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm2EESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.std::array.5"*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.11", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.11", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.11", %"class.__gnu_cxx::__normal_iterator.11"* %2, i32 0, i32 0
  store %"struct.std::array.5"* %0, %"struct.std::array.5"** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.11"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.11"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.11", %"class.__gnu_cxx::__normal_iterator.11"* %3, i32 0, i32 0
  %8 = load %"struct.std::array.5"*, %"struct.std::array.5"** %7, align 8
  %9 = call %"struct.std::array.5"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm2EESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES8_(%"struct.std::array.5"* %8)
  ret %"struct.std::array.5"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::array.5"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm2EESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES8_(%"struct.std::array.5"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::array.5"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.259
  %6 = load i32, i32* @y.260
  %7 = add i32 %5, 1208609017
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1208609017
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 260802474, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 260802474, label %19
    i32 -1813317022, label %27
    i32 -1891595763, label %59
    i32 -1898055168, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1813317022, i32 -1898055168
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.11", align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.11", %"class.__gnu_cxx::__normal_iterator.11"* %28, i32 0, i32 0
  store %"struct.std::array.5"* %0, %"struct.std::array.5"** %29, align 8
  %30 = call dereferenceable(8) %"struct.std::array.5"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm2EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.11"* %28) #3
  %31 = load %"struct.std::array.5"*, %"struct.std::array.5"** %30, align 8
  store %"struct.std::array.5"* %31, %"struct.std::array.5"** %2
  %32 = load i32, i32* @x.259
  %33 = load i32, i32* @y.260
  %34 = sub i32 %32, -397985762
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -397985762
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -1891595763, i32 -1898055168
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"struct.std::array.5"*, %"struct.std::array.5"** %2
  ret %"struct.std::array.5"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.__gnu_cxx::__normal_iterator.11", align 8
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.11", %"class.__gnu_cxx::__normal_iterator.11"* %62, i32 0, i32 0
  store %"struct.std::array.5"* %0, %"struct.std::array.5"** %63, align 8
  %64 = call dereferenceable(8) %"struct.std::array.5"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm2EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.11"* %62) #3
  %65 = load %"struct.std::array.5"*, %"struct.std::array.5"** %64, align 8
  store i32 -1813317022, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::array.5"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm2EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.11"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.11"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.11"* %0, %"class.__gnu_cxx::__normal_iterator.11"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.11"*, %"class.__gnu_cxx::__normal_iterator.11"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.11", %"class.__gnu_cxx::__normal_iterator.11"* %3, i32 0, i32 0
  ret %"struct.std::array.5"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPSt5arrayIxLm2EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.11"*, %"struct.std::array.5"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.263
  %6 = load i32, i32* @y.264
  %7 = sub i32 %5, -525074056
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -525074056
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -598254420, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %57
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -598254420, label %19
    i32 -1909975481, label %27
    i32 -1431449090, label %49
    i32 1214813611, label %50
  ]

; <label>:18:                                     ; preds = %16
  br label %57

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1909975481, i32 1214813611
  store i32 %26, i32* %15
  br label %57

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.11"*, align 8
  %29 = alloca %"struct.std::array.5"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.11"* %0, %"class.__gnu_cxx::__normal_iterator.11"** %28, align 8
  store %"struct.std::array.5"** %1, %"struct.std::array.5"*** %29, align 8
  %30 = load %"class.__gnu_cxx::__normal_iterator.11"*, %"class.__gnu_cxx::__normal_iterator.11"** %28, align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.11", %"class.__gnu_cxx::__normal_iterator.11"* %30, i32 0, i32 0
  %32 = load %"struct.std::array.5"**, %"struct.std::array.5"*** %29, align 8
  %33 = load %"struct.std::array.5"*, %"struct.std::array.5"** %32, align 8
  store %"struct.std::array.5"* %33, %"struct.std::array.5"** %31, align 8
  %34 = load i32, i32* @x.263
  %35 = load i32, i32* @y.264
  %36 = add i32 %34, 1619500194
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, 1619500194
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -1431449090, i32 1214813611
  store i32 %48, i32* %15
  br label %57

; <label>:49:                                     ; preds = %16
  ret void

; <label>:50:                                     ; preds = %16
  %51 = alloca %"class.__gnu_cxx::__normal_iterator.11"*, align 8
  %52 = alloca %"struct.std::array.5"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.11"* %0, %"class.__gnu_cxx::__normal_iterator.11"** %51, align 8
  store %"struct.std::array.5"** %1, %"struct.std::array.5"*** %52, align 8
  %53 = load %"class.__gnu_cxx::__normal_iterator.11"*, %"class.__gnu_cxx::__normal_iterator.11"** %51, align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.11", %"class.__gnu_cxx::__normal_iterator.11"* %53, i32 0, i32 0
  %55 = load %"struct.std::array.5"**, %"struct.std::array.5"*** %52, align 8
  %56 = load %"struct.std::array.5"*, %"struct.std::array.5"** %55, align 8
  store %"struct.std::array.5"* %56, %"struct.std::array.5"** %54, align 8
  store i32 -1909975481, i32* %15
  br label %57

; <label>:57:                                     ; preds = %50, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::array.5"* @_ZSt20uninitialized_fill_nIPSt5arrayIxLm2EEmS1_ET_S3_T0_RKT1_(%"struct.std::array.5"*, i64, %"struct.std::array.5"* dereferenceable(16)) #0 comdat {
  %4 = alloca %"struct.std::array.5"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.std::array.5"*, align 8
  %7 = alloca i8, align 1
  store %"struct.std::array.5"* %0, %"struct.std::array.5"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"struct.std::array.5"* %2, %"struct.std::array.5"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"struct.std::array.5"*, %"struct.std::array.5"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %"struct.std::array.5"*, %"struct.std::array.5"** %6, align 8
  %11 = call %"struct.std::array.5"* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPSt5arrayIxLm2EEmS3_EET_S5_T0_RKT1_(%"struct.std::array.5"* %8, i64 %9, %"struct.std::array.5"* dereferenceable(16) %10)
  ret %"struct.std::array.5"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::array.5"* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPSt5arrayIxLm2EEmS3_EET_S5_T0_RKT1_(%"struct.std::array.5"*, i64, %"struct.std::array.5"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca %"struct.std::array.5"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.267
  %8 = load i32, i32* @y.268
  %9 = sub i32 %7, -814518530
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -814518530
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -284090318, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %74
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -284090318, label %21
    i32 -1014900566, label %41
    i32 245917036, label %64
    i32 532109807, label %66
  ]

; <label>:20:                                     ; preds = %18
  br label %74

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1014900566, i32 532109807
  store i32 %40, i32* %17
  br label %74

; <label>:41:                                     ; preds = %18
  %42 = alloca %"struct.std::array.5"*, align 8
  %43 = alloca i64, align 8
  %44 = alloca %"struct.std::array.5"*, align 8
  store %"struct.std::array.5"* %0, %"struct.std::array.5"** %42, align 8
  store i64 %1, i64* %43, align 8
  store %"struct.std::array.5"* %2, %"struct.std::array.5"** %44, align 8
  %45 = load %"struct.std::array.5"*, %"struct.std::array.5"** %42, align 8
  %46 = load i64, i64* %43, align 8
  %47 = load %"struct.std::array.5"*, %"struct.std::array.5"** %44, align 8
  %48 = call %"struct.std::array.5"* @_ZSt6fill_nIPSt5arrayIxLm2EEmS1_ET_S3_T0_RKT1_(%"struct.std::array.5"* %45, i64 %46, %"struct.std::array.5"* dereferenceable(16) %47)
  store %"struct.std::array.5"* %48, %"struct.std::array.5"** %4
  %49 = load i32, i32* @x.267
  %50 = load i32, i32* @y.268
  %51 = add i32 %49, -2102134712
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, -2102134712
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 245917036, i32 532109807
  store i32 %63, i32* %17
  br label %74

; <label>:64:                                     ; preds = %18
  %65 = load volatile %"struct.std::array.5"*, %"struct.std::array.5"** %4
  ret %"struct.std::array.5"* %65

; <label>:66:                                     ; preds = %18
  %67 = alloca %"struct.std::array.5"*, align 8
  %68 = alloca i64, align 8
  %69 = alloca %"struct.std::array.5"*, align 8
  store %"struct.std::array.5"* %0, %"struct.std::array.5"** %67, align 8
  store i64 %1, i64* %68, align 8
  store %"struct.std::array.5"* %2, %"struct.std::array.5"** %69, align 8
  %70 = load %"struct.std::array.5"*, %"struct.std::array.5"** %67, align 8
  %71 = load i64, i64* %68, align 8
  %72 = load %"struct.std::array.5"*, %"struct.std::array.5"** %69, align 8
  %73 = call %"struct.std::array.5"* @_ZSt6fill_nIPSt5arrayIxLm2EEmS1_ET_S3_T0_RKT1_(%"struct.std::array.5"* %70, i64 %71, %"struct.std::array.5"* dereferenceable(16) %72)
  store i32 -1014900566, i32* %17
  br label %74

; <label>:74:                                     ; preds = %66, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::array.5"* @_ZSt10__fill_n_aIPSt5arrayIxLm2EEmS1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES6_T0_RKS5_(%"struct.std::array.5"*, i64, %"struct.std::array.5"* dereferenceable(16)) #5 comdat {
  %4 = alloca %"struct.std::array.5"*
  %5 = alloca i64*
  %6 = alloca %"struct.std::array.5"**
  %7 = alloca %"struct.std::array.5"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.269
  %11 = load i32, i32* @y.270
  %12 = sub i32 %10, 1739188376
  %13 = sub i32 %12, 1
  %14 = add i32 %13, 1739188376
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -1747028018, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %210
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -1747028018, label %24
    i32 -663952633, label %32
    i32 1465997506, label %68
    i32 578891030, label %69
    i32 634976350, label %74
    i32 -1731083503, label %102
    i32 1382586546, label %135
    i32 -1006051086, label %136
    i32 -1970623569, label %147
    i32 -80395892, label %174
    i32 1780502167, label %192
    i32 1245947969, label %194
    i32 2000520480, label %200
    i32 1908845842, label %207
  ]

; <label>:23:                                     ; preds = %21
  br label %210

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 -663952633, i32 1245947969
  store i32 %31, i32* %20
  br label %210

; <label>:32:                                     ; preds = %21
  %33 = alloca %"struct.std::array.5"*, align 8
  store %"struct.std::array.5"** %33, %"struct.std::array.5"*** %7
  %34 = alloca i64, align 8
  %35 = alloca %"struct.std::array.5"*, align 8
  store %"struct.std::array.5"** %35, %"struct.std::array.5"*** %6
  %36 = alloca i64, align 8
  store i64* %36, i64** %5
  %37 = load volatile %"struct.std::array.5"**, %"struct.std::array.5"*** %7
  store %"struct.std::array.5"* %0, %"struct.std::array.5"** %37, align 8
  store i64 %1, i64* %34, align 8
  %38 = load volatile %"struct.std::array.5"**, %"struct.std::array.5"*** %6
  store %"struct.std::array.5"* %2, %"struct.std::array.5"** %38, align 8
  %39 = load i64, i64* %34, align 8
  %40 = load volatile i64*, i64** %5
  store i64 %39, i64* %40, align 8
  %41 = load i32, i32* @x.269
  %42 = load i32, i32* @y.270
  %43 = sub i32 %41, 219935678
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 219935678
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1465997506, i32 1245947969
  store i32 %67, i32* %20
  br label %210

; <label>:68:                                     ; preds = %21
  store i32 578891030, i32* %20
  br label %210

; <label>:69:                                     ; preds = %21
  %70 = load volatile i64*, i64** %5
  %71 = load i64, i64* %70, align 8
  %72 = icmp ugt i64 %71, 0
  %73 = select i1 %72, i32 634976350, i32 -1970623569
  store i32 %73, i32* %20
  br label %210

; <label>:74:                                     ; preds = %21
  %75 = load i32, i32* @x.269
  %76 = load i32, i32* @y.270
  %77 = add i32 %75, -838041686
  %78 = sub i32 %77, 1
  %79 = sub i32 %78, -838041686
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 true, true
  %88 = and i1 %85, true
  %89 = and i1 %83, %87
  %90 = and i1 %86, true
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 true, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  %101 = select i1 %99, i32 -1731083503, i32 2000520480
  store i32 %101, i32* %20
  br label %210

; <label>:102:                                    ; preds = %21
  %103 = load volatile %"struct.std::array.5"**, %"struct.std::array.5"*** %6
  %104 = load %"struct.std::array.5"*, %"struct.std::array.5"** %103, align 8
  %105 = load volatile %"struct.std::array.5"**, %"struct.std::array.5"*** %7
  %106 = load %"struct.std::array.5"*, %"struct.std::array.5"** %105, align 8
  %107 = bitcast %"struct.std::array.5"* %106 to i8*
  %108 = bitcast %"struct.std::array.5"* %104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %107, i8* %108, i64 16, i32 8, i1 false)
  %109 = load i32, i32* @x.269
  %110 = load i32, i32* @y.270
  %111 = sub i32 0, 1
  %112 = add i32 %109, %111
  %113 = sub i32 %109, 1
  %114 = mul i32 %109, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %110, 10
  %118 = xor i1 %116, true
  %119 = xor i1 %117, true
  %120 = xor i1 true, true
  %121 = and i1 %118, true
  %122 = and i1 %116, %120
  %123 = and i1 %119, true
  %124 = and i1 %117, %120
  %125 = or i1 %121, %122
  %126 = or i1 %123, %124
  %127 = xor i1 %125, %126
  %128 = or i1 %118, %119
  %129 = xor i1 %128, true
  %130 = or i1 true, %120
  %131 = and i1 %129, %130
  %132 = or i1 %127, %131
  %133 = or i1 %116, %117
  %134 = select i1 %132, i32 1382586546, i32 2000520480
  store i32 %134, i32* %20
  br label %210

; <label>:135:                                    ; preds = %21
  store i32 -1006051086, i32* %20
  br label %210

; <label>:136:                                    ; preds = %21
  %137 = load volatile i64*, i64** %5
  %138 = load i64, i64* %137, align 8
  %139 = sub i64 0, -1
  %140 = sub i64 %138, %139
  %141 = add i64 %138, -1
  %142 = load volatile i64*, i64** %5
  store i64 %140, i64* %142, align 8
  %143 = load volatile %"struct.std::array.5"**, %"struct.std::array.5"*** %7
  %144 = load %"struct.std::array.5"*, %"struct.std::array.5"** %143, align 8
  %145 = getelementptr inbounds %"struct.std::array.5", %"struct.std::array.5"* %144, i32 1
  %146 = load volatile %"struct.std::array.5"**, %"struct.std::array.5"*** %7
  store %"struct.std::array.5"* %145, %"struct.std::array.5"** %146, align 8
  store i32 578891030, i32* %20
  br label %210

; <label>:147:                                    ; preds = %21
  %148 = load i32, i32* @x.269
  %149 = load i32, i32* @y.270
  %150 = sub i32 0, 1
  %151 = add i32 %148, %150
  %152 = sub i32 %148, 1
  %153 = mul i32 %148, %151
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %149, 10
  %157 = xor i1 %155, true
  %158 = xor i1 %156, true
  %159 = xor i1 false, true
  %160 = and i1 %157, false
  %161 = and i1 %155, %159
  %162 = and i1 %158, false
  %163 = and i1 %156, %159
  %164 = or i1 %160, %161
  %165 = or i1 %162, %163
  %166 = xor i1 %164, %165
  %167 = or i1 %157, %158
  %168 = xor i1 %167, true
  %169 = or i1 false, %159
  %170 = and i1 %168, %169
  %171 = or i1 %166, %170
  %172 = or i1 %155, %156
  %173 = select i1 %171, i32 -80395892, i32 1908845842
  store i32 %173, i32* %20
  br label %210

; <label>:174:                                    ; preds = %21
  %175 = load volatile %"struct.std::array.5"**, %"struct.std::array.5"*** %7
  %176 = load %"struct.std::array.5"*, %"struct.std::array.5"** %175, align 8
  store %"struct.std::array.5"* %176, %"struct.std::array.5"** %4
  %177 = load i32, i32* @x.269
  %178 = load i32, i32* @y.270
  %179 = add i32 %177, -1276674677
  %180 = sub i32 %179, 1
  %181 = sub i32 %180, -1276674677
  %182 = sub i32 %177, 1
  %183 = mul i32 %177, %181
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %178, 10
  %187 = and i1 %185, %186
  %188 = xor i1 %185, %186
  %189 = or i1 %187, %188
  %190 = or i1 %185, %186
  %191 = select i1 %189, i32 1780502167, i32 1908845842
  store i32 %191, i32* %20
  br label %210

; <label>:192:                                    ; preds = %21
  %193 = load volatile %"struct.std::array.5"*, %"struct.std::array.5"** %4
  ret %"struct.std::array.5"* %193

; <label>:194:                                    ; preds = %21
  %195 = alloca %"struct.std::array.5"*, align 8
  %196 = alloca i64, align 8
  %197 = alloca %"struct.std::array.5"*, align 8
  %198 = alloca i64, align 8
  store %"struct.std::array.5"* %0, %"struct.std::array.5"** %195, align 8
  store i64 %1, i64* %196, align 8
  store %"struct.std::array.5"* %2, %"struct.std::array.5"** %197, align 8
  %199 = load i64, i64* %196, align 8
  store i64 %199, i64* %198, align 8
  store i32 -663952633, i32* %20
  br label %210

; <label>:200:                                    ; preds = %21
  %201 = load volatile %"struct.std::array.5"**, %"struct.std::array.5"*** %6
  %202 = load %"struct.std::array.5"*, %"struct.std::array.5"** %201, align 8
  %203 = load volatile %"struct.std::array.5"**, %"struct.std::array.5"*** %7
  %204 = load %"struct.std::array.5"*, %"struct.std::array.5"** %203, align 8
  %205 = bitcast %"struct.std::array.5"* %204 to i8*
  %206 = bitcast %"struct.std::array.5"* %202 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %205, i8* %206, i64 16, i32 8, i1 false)
  store i32 -1731083503, i32* %20
  br label %210

; <label>:207:                                    ; preds = %21
  %208 = load volatile %"struct.std::array.5"**, %"struct.std::array.5"*** %7
  %209 = load %"struct.std::array.5"*, %"struct.std::array.5"** %208, align 8
  store i32 -80395892, i32* %20
  br label %210

; <label>:210:                                    ; preds = %207, %200, %194, %174, %147, %136, %135, %102, %74, %69, %68, %32, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::array.5"* @_ZSt12__niter_baseIPSt5arrayIxLm2EEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.std::array.5"*) #0 comdat {
  %2 = alloca %"struct.std::array.5"*, align 8
  store %"struct.std::array.5"* %0, %"struct.std::array.5"** %2, align 8
  %3 = load %"struct.std::array.5"*, %"struct.std::array.5"** %2, align 8
  %4 = call %"struct.std::array.5"* @_ZNSt10_Iter_baseIPSt5arrayIxLm2EELb0EE7_S_baseES2_(%"struct.std::array.5"* %3)
  ret %"struct.std::array.5"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::array.5"* @_ZNSt10_Iter_baseIPSt5arrayIxLm2EELb0EE7_S_baseES2_(%"struct.std::array.5"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::array.5"*, align 8
  store %"struct.std::array.5"* %0, %"struct.std::array.5"** %2, align 8
  %3 = load %"struct.std::array.5"*, %"struct.std::array.5"** %2, align 8
  ret %"struct.std::array.5"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE14_M_fill_assignEmRKi(%"class.std::vector.6"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.std::vector.6"*
  %7 = alloca %"class.std::vector.6"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32*, align 8
  %10 = alloca %"class.std::vector.6", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i32* %2, i32** %9, align 8
  %13 = load %"class.std::vector.6"*, %"class.std::vector.6"** %7, align 8
  store %"class.std::vector.6"* %13, %"class.std::vector.6"** %6
  %14 = load i64, i64* %8, align 8
  store i64 %14, i64* %5
  %15 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %6
  %16 = call i64 @_ZNKSt6vectorIiSaIiEE8capacityEv(%"class.std::vector.6"* %15) #3
  store i64 %16, i64* %4
  %17 = alloca i32
  store i32 533185451, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %141
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 533185451, label %21
    i32 952903564, label %26
    i32 637193818, label %37
    i32 -992227931, label %43
    i32 1660024284, label %76
    i32 -1508473877, label %104
    i32 107984482, label %128
    i32 2119775952, label %129
    i32 2053327361, label %130
    i32 -630214259, label %131
  ]

; <label>:20:                                     ; preds = %18
  br label %141

; <label>:21:                                     ; preds = %18
  %22 = load volatile i64, i64* %5
  %23 = load volatile i64, i64* %4
  %24 = icmp ugt i64 %22, %23
  %25 = select i1 %24, i32 952903564, i32 637193818
  store i32 %25, i32* %17
  br label %141

; <label>:26:                                     ; preds = %18
  %27 = load i64, i64* %8, align 8
  %28 = load i32*, i32** %9, align 8
  %29 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %6
  %30 = bitcast %"class.std::vector.6"* %29 to %"struct.std::_Vector_base.7"*
  %31 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %30) #3
  call void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector.6"* %10, i64 %27, i32* dereferenceable(4) %28, %"class.std::allocator.8"* dereferenceable(1) %31)
  %32 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %32, i32 0, i32 0
  %34 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %6
  %35 = bitcast %"class.std::vector.6"* %34 to %"struct.std::_Vector_base.7"*
  %36 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %35, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %33, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24) %36) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.6"* %10) #3
  store i32 2053327361, i32* %17
  br label %141

; <label>:37:                                     ; preds = %18
  %38 = load i64, i64* %8, align 8
  %39 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %6
  %40 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.6"* %39) #3
  %41 = icmp ugt i64 %38, %40
  %42 = select i1 %41, i32 -992227931, i32 1660024284
  store i32 %42, i32* %17
  br label %141

; <label>:43:                                     ; preds = %18
  %44 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %6
  %45 = call i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector.6"* %44) #3
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %11, i32 0, i32 0
  store i32* %45, i32** %46, align 8
  %47 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %6
  %48 = call i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.6"* %47) #3
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %12, i32 0, i32 0
  store i32* %48, i32** %49, align 8
  %50 = load i32*, i32** %9, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %11, i32 0, i32 0
  %52 = load i32*, i32** %51, align 8
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %12, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  call void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RKT0_(i32* %52, i32* %54, i32* dereferenceable(4) %50)
  %55 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %6
  %56 = bitcast %"class.std::vector.6"* %55 to %"struct.std::_Vector_base.7"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %56, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %57, i32 0, i32 1
  %59 = load i32*, i32** %58, align 8
  %60 = load i64, i64* %8, align 8
  %61 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %6
  %62 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.6"* %61) #3
  %63 = sub i64 %60, -2232390093171853193
  %64 = sub i64 %63, %62
  %65 = add i64 %64, -2232390093171853193
  %66 = sub i64 %60, %62
  %67 = load i32*, i32** %9, align 8
  %68 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %6
  %69 = bitcast %"class.std::vector.6"* %68 to %"struct.std::_Vector_base.7"*
  %70 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %69) #3
  %71 = call i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32* %59, i64 %65, i32* dereferenceable(4) %67, %"class.std::allocator.8"* dereferenceable(1) %70)
  %72 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %6
  %73 = bitcast %"class.std::vector.6"* %72 to %"struct.std::_Vector_base.7"*
  %74 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %73, i32 0, i32 0
  %75 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %74, i32 0, i32 1
  store i32* %71, i32** %75, align 8
  store i32 2119775952, i32* %17
  br label %141

; <label>:76:                                     ; preds = %18
  %77 = load i32, i32* @x.275
  %78 = load i32, i32* @y.276
  %79 = sub i32 %77, 1203799613
  %80 = sub i32 %79, 1
  %81 = add i32 %80, 1203799613
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = xor i1 %85, true
  %88 = xor i1 %86, true
  %89 = xor i1 true, true
  %90 = and i1 %87, true
  %91 = and i1 %85, %89
  %92 = and i1 %88, true
  %93 = and i1 %86, %89
  %94 = or i1 %90, %91
  %95 = or i1 %92, %93
  %96 = xor i1 %94, %95
  %97 = or i1 %87, %88
  %98 = xor i1 %97, true
  %99 = or i1 true, %89
  %100 = and i1 %98, %99
  %101 = or i1 %96, %100
  %102 = or i1 %85, %86
  %103 = select i1 %101, i32 -1508473877, i32 -630214259
  store i32 %103, i32* %17
  br label %141

; <label>:104:                                    ; preds = %18
  %105 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %6
  %106 = bitcast %"class.std::vector.6"* %105 to %"struct.std::_Vector_base.7"*
  %107 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %106, i32 0, i32 0
  %108 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %107, i32 0, i32 0
  %109 = load i32*, i32** %108, align 8
  %110 = load i64, i64* %8, align 8
  %111 = load i32*, i32** %9, align 8
  %112 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %109, i64 %110, i32* dereferenceable(4) %111)
  %113 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %6
  call void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(%"class.std::vector.6"* %113, i32* %112) #3
  %114 = load i32, i32* @x.275
  %115 = load i32, i32* @y.276
  %116 = sub i32 0, 1
  %117 = add i32 %114, %116
  %118 = sub i32 %114, 1
  %119 = mul i32 %114, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %115, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  %127 = select i1 %125, i32 107984482, i32 -630214259
  store i32 %127, i32* %17
  br label %141

; <label>:128:                                    ; preds = %18
  store i32 2119775952, i32* %17
  br label %141

; <label>:129:                                    ; preds = %18
  store i32 2053327361, i32* %17
  br label %141

; <label>:130:                                    ; preds = %18
  ret void

; <label>:131:                                    ; preds = %18
  %132 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %6
  %133 = bitcast %"class.std::vector.6"* %132 to %"struct.std::_Vector_base.7"*
  %134 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %133, i32 0, i32 0
  %135 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %134, i32 0, i32 0
  %136 = load i32*, i32** %135, align 8
  %137 = load i64, i64* %8, align 8
  %138 = load i32*, i32** %9, align 8
  %139 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %136, i64 %137, i32* dereferenceable(4) %138)
  %140 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %6
  call void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(%"class.std::vector.6"* %140, i32* %139) #3
  store i32 -1508473877, i32* %17
  br label %141

; <label>:141:                                    ; preds = %131, %129, %128, %104, %76, %43, %37, %26, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE8capacityEv(%"class.std::vector.6"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %2, align 8
  %3 = load %"class.std::vector.6"*, %"class.std::vector.6"** %2, align 8
  %4 = bitcast %"class.std::vector.6"* %3 to %"struct.std::_Vector_base.7"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 2
  %7 = load i32*, i32** %6, align 8
  %8 = bitcast %"class.std::vector.6"* %3 to %"struct.std::_Vector_base.7"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = ptrtoint i32* %7 to i64
  %13 = ptrtoint i32* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 4
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector.6"*, i64, i32* dereferenceable(4), %"class.std::allocator.8"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.6"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.8"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.8"* %3, %"class.std::allocator.8"** %8, align 8
  %11 = load %"class.std::vector.6"*, %"class.std::vector.6"** %5, align 8
  %12 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %8, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.7"* %12, i64 %13, %"class.std::allocator.8"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load i32*, i32** %7, align 8
  invoke void @_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi(%"class.std::vector.6"* %11, i64 %15, i32* dereferenceable(4) %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %4
  ret void

; <label>:18:                                     ; preds = %4
  %19 = load i32, i32* @x.279
  %20 = load i32, i32* @y.280
  %21 = add i32 %19, 82143709
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, 82143709
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  br i1 %31, label %33, label %57

; <label>:33:                                     ; preds = %18, %57
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %9, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %10, align 4
  %37 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.7"* %37) #3
  %38 = load i32, i32* @x.279
  %39 = load i32, i32* @y.280
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  br i1 %49, label %51, label %57

; <label>:51:                                     ; preds = %33
  br label %52

; <label>:52:                                     ; preds = %51
  %53 = load i8*, i8** %9, align 8
  %54 = load i32, i32* %10, align 4
  %55 = insertvalue { i8*, i32 } undef, i8* %53, 0
  %56 = insertvalue { i8*, i32 } %55, i32 %54, 1
  resume { i8*, i32 } %56

; <label>:57:                                     ; preds = %33, %18
  %58 = landingpad { i8*, i32 }
          cleanup
  %59 = extractvalue { i8*, i32 } %58, 0
  store i8* %59, i8** %9, align 8
  %60 = extractvalue { i8*, i32 } %58, 1
  store i32 %60, i32* %10, align 4
  %61 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.7"* %61) #3
  br label %33
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %1, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %6, i32** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %9, i32** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %12, i32** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.6"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.283
  %6 = load i32, i32* @y.284
  %7 = sub i32 %5, -73985503
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -73985503
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1020565672, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %167
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1020565672, label %19
    i32 637523582, label %39
    i32 1535550892, label %84
    i32 -1741305681, label %86
  ]

; <label>:18:                                     ; preds = %16
  br label %167

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 637523582, i32 -1741305681
  store i32 %38, i32* %15
  br label %167

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %40, align 8
  %41 = load %"class.std::vector.6"*, %"class.std::vector.6"** %40, align 8
  %42 = bitcast %"class.std::vector.6"* %41 to %"struct.std::_Vector_base.7"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %43, i32 0, i32 1
  %45 = load i32*, i32** %44, align 8
  %46 = bitcast %"class.std::vector.6"* %41 to %"struct.std::_Vector_base.7"*
  %47 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %46, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %47, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = ptrtoint i32* %45 to i64
  %51 = ptrtoint i32* %49 to i64
  %52 = add i64 %50, -7231001220887969765
  %53 = sub i64 %52, %51
  %54 = sub i64 %53, -7231001220887969765
  %55 = sub i64 %50, %51
  %56 = sdiv exact i64 %54, 4
  store i64 %56, i64* %2
  %57 = load i32, i32* @x.283
  %58 = load i32, i32* @y.284
  %59 = sub i32 %57, -142381014
  %60 = sub i32 %59, 1
  %61 = add i32 %60, -142381014
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = xor i1 %65, true
  %68 = xor i1 %66, true
  %69 = xor i1 false, true
  %70 = and i1 %67, false
  %71 = and i1 %65, %69
  %72 = and i1 %68, false
  %73 = and i1 %66, %69
  %74 = or i1 %70, %71
  %75 = or i1 %72, %73
  %76 = xor i1 %74, %75
  %77 = or i1 %67, %68
  %78 = xor i1 %77, true
  %79 = or i1 false, %69
  %80 = and i1 %78, %79
  %81 = or i1 %76, %80
  %82 = or i1 %65, %66
  %83 = select i1 %81, i32 1535550892, i32 -1741305681
  store i32 %83, i32* %15
  br label %167

; <label>:84:                                     ; preds = %16
  %85 = load volatile i64, i64* %2
  ret i64 %85

; <label>:86:                                     ; preds = %16
  %87 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %87, align 8
  %88 = load %"class.std::vector.6"*, %"class.std::vector.6"** %87, align 8
  %89 = bitcast %"class.std::vector.6"* %88 to %"struct.std::_Vector_base.7"*
  %90 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %89, i32 0, i32 0
  %91 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %90, i32 0, i32 1
  %92 = load i32*, i32** %91, align 8
  %93 = bitcast %"class.std::vector.6"* %88 to %"struct.std::_Vector_base.7"*
  %94 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %93, i32 0, i32 0
  %95 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %94, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = ptrtoint i32* %92 to i64
  %98 = ptrtoint i32* %96 to i64
  %99 = sub i64 0, %98
  %100 = add i64 %97, %99
  %101 = sub i64 %97, %98
  %102 = mul i64 %100, %98
  %103 = sub i64 0, %97
  %104 = add i64 0, %103
  %105 = sub i64 0, %97
  %106 = sub i64 %104, 4916110112414626100
  %107 = add i64 %106, %98
  %108 = add i64 %107, 4916110112414626100
  %109 = add i64 %104, %98
  %110 = shl i64 %97, %98
  %111 = sub i64 0, %97
  %112 = add i64 0, %111
  %113 = sub i64 0, %97
  %114 = add i64 %112, -3690303483117728195
  %115 = add i64 %114, %98
  %116 = sub i64 %115, -3690303483117728195
  %117 = add i64 %112, %98
  %118 = shl i64 %97, %98
  %119 = shl i64 %97, %98
  %120 = sub i64 0, %98
  %121 = add i64 %97, %120
  %122 = sub i64 %97, %98
  %123 = mul i64 %121, %98
  %124 = sub i64 0, %97
  %125 = add i64 0, %124
  %126 = sub i64 0, %97
  %127 = add i64 %125, -7324370158181337657
  %128 = add i64 %127, %98
  %129 = sub i64 %128, -7324370158181337657
  %130 = add i64 %125, %98
  %131 = sub i64 0, %97
  %132 = add i64 0, %131
  %133 = sub i64 0, %97
  %134 = add i64 %132, 799486922314328416
  %135 = add i64 %134, %98
  %136 = sub i64 %135, 799486922314328416
  %137 = add i64 %132, %98
  %138 = add i64 %97, 4190558382072436671
  %139 = sub i64 %138, %98
  %140 = sub i64 %139, 4190558382072436671
  %141 = sub i64 %97, %98
  %142 = sub i64 0, %140
  %143 = add i64 0, %142
  %144 = sub i64 0, %140
  %145 = sub i64 %143, -1466477978312570665
  %146 = add i64 %145, 4
  %147 = add i64 %146, -1466477978312570665
  %148 = add i64 %143, 4
  %149 = shl i64 %140, 4
  %150 = sub i64 %140, 4773269650466970473
  %151 = sub i64 %150, 4
  %152 = add i64 %151, 4773269650466970473
  %153 = sub i64 %140, 4
  %154 = mul i64 %152, 4
  %155 = sub i64 0, %140
  %156 = add i64 0, %155
  %157 = sub i64 0, %140
  %158 = sub i64 0, 4
  %159 = sub i64 %156, %158
  %160 = add i64 %156, 4
  %161 = sub i64 %140, 5619305193050201584
  %162 = sub i64 %161, 4
  %163 = add i64 %162, 5619305193050201584
  %164 = sub i64 %140, 4
  %165 = mul i64 %163, 4
  %166 = sdiv exact i64 %140, 4
  store i32 637523582, i32* %15
  br label %167

; <label>:167:                                    ; preds = %86, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RKT0_(i32*, i32*, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %4, i32 0, i32 0
  store i32* %0, i32** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %5, i32 0, i32 0
  store i32* %1, i32** %10, align 8
  store i32* %2, i32** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %7, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %8, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32* %19)
  %21 = load i32*, i32** %6, align 8
  call void @_ZSt8__fill_aIPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32* %15, i32* %20, i32* dereferenceable(4) %21)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector.6"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %3 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %3, align 8
  %4 = load %"class.std::vector.6"*, %"class.std::vector.6"** %3, align 8
  %5 = bitcast %"class.std::vector.6"* %4 to %"struct.std::_Vector_base.7"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.12"* %2, i32** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %2, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  ret i32* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.6"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %3 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %3, align 8
  %4 = load %"class.std::vector.6"*, %"class.std::vector.6"** %3, align 8
  %5 = bitcast %"class.std::vector.6"* %4 to %"struct.std::_Vector_base.7"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.12"* %2, i32** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %2, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  ret i32* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32*, i64, i32* dereferenceable(4), %"class.std::allocator.8"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.8"*, align 8
  store i32* %0, i32** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.8"* %3, %"class.std::allocator.8"** %8, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = call i32* @_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_(i32* %9, i64 %10, i32* dereferenceable(4) %11)
  ret i32* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(%"class.std::vector.6"*, i32*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.6"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::vector.6"*, %"class.std::vector.6"** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %8, i32 0, i32 1
  %10 = load i32*, i32** %9, align 8
  %11 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  %12 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %11) #3
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %6, i32* %10, %"class.std::allocator.8"* dereferenceable(1) %12)
          to label %13 unwind label %47

; <label>:13:                                     ; preds = %2
  %14 = load i32, i32* @x.293
  %15 = load i32, i32* @y.294
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %15, 10
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  br i1 %25, label %27, label %50

; <label>:27:                                     ; preds = %13, %50
  %28 = load i32*, i32** %4, align 8
  %29 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %30, i32 0, i32 1
  store i32* %28, i32** %31, align 8
  %32 = load i32, i32* @x.293
  %33 = load i32, i32* @y.294
  %34 = sub i32 %32, 1827920725
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 1827920725
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %50

; <label>:46:                                     ; preds = %27
  ret void

; <label>:47:                                     ; preds = %2
  %48 = landingpad { i8*, i32 }
          catch i8* null
  %49 = extractvalue { i8*, i32 } %48, 0
  call void @__clang_call_terminate(i8* %49) #11
  unreachable

; <label>:50:                                     ; preds = %27, %13
  %51 = load i32*, i32** %4, align 8
  %52 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  %53 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %52, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %53, i32 0, i32 1
  store i32* %51, i32** %54, align 8
  br label %27
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.7"*, i64, %"class.std::allocator.8"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.7"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.8"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.8"* %2, %"class.std::allocator.8"** %6, align 8
  %9 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %6, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, %"class.std::allocator.8"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base.7"* %9, i64 %12)
          to label %13 unwind label %68

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @x.297
  %15 = load i32, i32* @y.298
  %16 = sub i32 %14, -1630432368
  %17 = sub i32 %16, 1
  %18 = add i32 %17, -1630432368
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  br i1 %38, label %40, label %119

; <label>:40:                                     ; preds = %13, %119
  %41 = load i32, i32* @x.297
  %42 = load i32, i32* @y.298
  %43 = add i32 %41, -985480550
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -985480550
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  br i1 %65, label %67, label %119

; <label>:67:                                     ; preds = %40
  ret void

; <label>:68:                                     ; preds = %3
  %69 = landingpad { i8*, i32 }
          cleanup
  %70 = extractvalue { i8*, i32 } %69, 0
  store i8* %70, i8** %7, align 8
  %71 = extractvalue { i8*, i32 } %69, 1
  store i32 %71, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10) #3
  br label %72

; <label>:72:                                     ; preds = %68
  %73 = load i32, i32* @x.297
  %74 = load i32, i32* @y.298
  %75 = add i32 %73, -1535987204
  %76 = sub i32 %75, 1
  %77 = sub i32 %76, -1535987204
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  br i1 %85, label %87, label %120

; <label>:87:                                     ; preds = %72, %120
  %88 = load i8*, i8** %7, align 8
  %89 = load i32, i32* %8, align 4
  %90 = insertvalue { i8*, i32 } undef, i8* %88, 0
  %91 = insertvalue { i8*, i32 } %90, i32 %89, 1
  %92 = load i32, i32* @x.297
  %93 = load i32, i32* @y.298
  %94 = sub i32 %92, 234176983
  %95 = sub i32 %94, 1
  %96 = add i32 %95, 234176983
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 false, true
  %105 = and i1 %102, false
  %106 = and i1 %100, %104
  %107 = and i1 %103, false
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 false, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  br i1 %116, label %118, label %120

; <label>:118:                                    ; preds = %87
  resume { i8*, i32 } %91

; <label>:119:                                    ; preds = %40, %13
  br label %40

; <label>:120:                                    ; preds = %87, %72
  %121 = load i8*, i8** %7, align 8
  %122 = load i32, i32* %8, align 4
  %123 = insertvalue { i8*, i32 } undef, i8* %121, 0
  %124 = insertvalue { i8*, i32 } %123, i32 %122, 1
  br label %87
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi(%"class.std::vector.6"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.299
  %7 = load i32, i32* @y.300
  %8 = sub i32 %6, 2042418106
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 2042418106
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -834123497, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %78
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -834123497, label %20
    i32 1302047221, label %28
    i32 -1709161912, label %60
    i32 590123349, label %61
  ]

; <label>:19:                                     ; preds = %17
  br label %78

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1302047221, i32 590123349
  store i32 %27, i32* %16
  br label %78

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.6"*, align 8
  %30 = alloca i64, align 8
  %31 = alloca i32*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %29, align 8
  store i64 %1, i64* %30, align 8
  store i32* %2, i32** %31, align 8
  %32 = load %"class.std::vector.6"*, %"class.std::vector.6"** %29, align 8
  %33 = bitcast %"class.std::vector.6"* %32 to %"struct.std::_Vector_base.7"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = load i64, i64* %30, align 8
  %38 = load i32*, i32** %31, align 8
  %39 = bitcast %"class.std::vector.6"* %32 to %"struct.std::_Vector_base.7"*
  %40 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %39) #3
  %41 = call i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32* %36, i64 %37, i32* dereferenceable(4) %38, %"class.std::allocator.8"* dereferenceable(1) %40)
  %42 = bitcast %"class.std::vector.6"* %32 to %"struct.std::_Vector_base.7"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %43, i32 0, i32 1
  store i32* %41, i32** %44, align 8
  %45 = load i32, i32* @x.299
  %46 = load i32, i32* @y.300
  %47 = add i32 %45, -889177254
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -889177254
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -1709161912, i32 590123349
  store i32 %59, i32* %16
  br label %78

; <label>:60:                                     ; preds = %17
  ret void

; <label>:61:                                     ; preds = %17
  %62 = alloca %"class.std::vector.6"*, align 8
  %63 = alloca i64, align 8
  %64 = alloca i32*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %62, align 8
  store i64 %1, i64* %63, align 8
  store i32* %2, i32** %64, align 8
  %65 = load %"class.std::vector.6"*, %"class.std::vector.6"** %62, align 8
  %66 = bitcast %"class.std::vector.6"* %65 to %"struct.std::_Vector_base.7"*
  %67 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %66, i32 0, i32 0
  %68 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %67, i32 0, i32 0
  %69 = load i32*, i32** %68, align 8
  %70 = load i64, i64* %63, align 8
  %71 = load i32*, i32** %64, align 8
  %72 = bitcast %"class.std::vector.6"* %65 to %"struct.std::_Vector_base.7"*
  %73 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %72) #3
  %74 = call i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32* %69, i64 %70, i32* dereferenceable(4) %71, %"class.std::allocator.8"* dereferenceable(1) %73)
  %75 = bitcast %"class.std::vector.6"* %65 to %"struct.std::_Vector_base.7"*
  %76 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %76, i32 0, i32 1
  store i32* %74, i32** %77, align 8
  store i32 1302047221, i32* %16
  br label %78

; <label>:78:                                     ; preds = %61, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"class.std::allocator.8"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.8"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.8"* %1, %"class.std::allocator.8"** %4, align 8
  %5 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5 to %"class.std::allocator.8"*
  %7 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %4, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.8"* %6, %"class.std::allocator.8"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 0
  store i32* null, i32** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 1
  store i32* null, i32** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 2
  store i32* null, i32** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base.7"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.7"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.7"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %8, i32 0, i32 0
  store i32* %7, i32** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %13, i32 0, i32 1
  store i32* %12, i32** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds i32, i32* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %20, i32 0, i32 2
  store i32* %19, i32** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2ERKS_(%"class.std::allocator.8"*, %"class.std::allocator.8"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.305
  %6 = load i32, i32* @y.306
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1272266718, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %79
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1272266718, label %18
    i32 547880112, label %38
    i32 -1748512487, label %71
    i32 -1705316480, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %79

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 547880112, i32 -1705316480
  store i32 %37, i32* %14
  br label %79

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.8"*, align 8
  %40 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %39, align 8
  store %"class.std::allocator.8"* %1, %"class.std::allocator.8"** %40, align 8
  %41 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %39, align 8
  %42 = bitcast %"class.std::allocator.8"* %41 to %"class.__gnu_cxx::new_allocator.9"*
  %43 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %40, align 8
  %44 = bitcast %"class.std::allocator.8"* %43 to %"class.__gnu_cxx::new_allocator.9"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.9"* %42, %"class.__gnu_cxx::new_allocator.9"* dereferenceable(1) %44) #3
  %45 = load i32, i32* @x.305
  %46 = load i32, i32* @y.306
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -1748512487, i32 -1705316480
  store i32 %70, i32* %14
  br label %79

; <label>:71:                                     ; preds = %15
  ret void

; <label>:72:                                     ; preds = %15
  %73 = alloca %"class.std::allocator.8"*, align 8
  %74 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %73, align 8
  store %"class.std::allocator.8"* %1, %"class.std::allocator.8"** %74, align 8
  %75 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %73, align 8
  %76 = bitcast %"class.std::allocator.8"* %75 to %"class.__gnu_cxx::new_allocator.9"*
  %77 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %74, align 8
  %78 = bitcast %"class.std::allocator.8"* %77 to %"class.__gnu_cxx::new_allocator.9"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.9"* %76, %"class.__gnu_cxx::new_allocator.9"* dereferenceable(1) %78) #3
  store i32 547880112, i32* %14
  br label %79

; <label>:79:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %1, %"class.__gnu_cxx::new_allocator.9"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.7"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base.7"*
  %5 = alloca %"struct.std::_Vector_base.7"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %5, align 8
  store %"struct.std::_Vector_base.7"* %7, %"struct.std::_Vector_base.7"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 -1919133585, i32* %9
  %10 = alloca i32*
  br label %11

; <label>:11:                                     ; preds = %2, %72
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 -1919133585, label %14
    i32 -42540098, label %18
    i32 -1193327344, label %24
    i32 -2078138861, label %40
    i32 -1114854120, label %68
    i32 -1153585970, label %69
    i32 -2130159377, label %71
  ]

; <label>:13:                                     ; preds = %11
  br label %72

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 -42540098, i32 -1193327344
  store i32 %17, i32* %9
  br label %72

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %20 to %"class.std::allocator.8"*
  %22 = load i64, i64* %6, align 8
  %23 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.8"* dereferenceable(1) %21, i64 %22)
  store i32 -1153585970, i32* %9
  store i32* %23, i32** %10
  br label %72

; <label>:24:                                     ; preds = %11
  %25 = load i32, i32* @x.309
  %26 = load i32, i32* @y.310
  %27 = add i32 %25, 1366151760
  %28 = sub i32 %27, 1
  %29 = sub i32 %28, 1366151760
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  %39 = select i1 %37, i32 -2078138861, i32 -2130159377
  store i32 %39, i32* %9
  br label %72

; <label>:40:                                     ; preds = %11
  %41 = load i32, i32* @x.309
  %42 = load i32, i32* @y.310
  %43 = sub i32 %41, 2002077624
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 2002077624
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -1114854120, i32 -2130159377
  store i32 %67, i32* %9
  br label %72

; <label>:68:                                     ; preds = %11
  store i32 -1153585970, i32* %9
  store i32* null, i32** %10
  br label %72

; <label>:69:                                     ; preds = %11
  %70 = load i32*, i32** %10
  ret i32* %70

; <label>:71:                                     ; preds = %11
  store i32 -2078138861, i32* %9
  br label %72

; <label>:72:                                     ; preds = %71, %68, %40, %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.8"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.8"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %3, align 8
  %6 = bitcast %"class.std::allocator.8"* %5 to %"class.__gnu_cxx::new_allocator.9"*
  %7 = load i64, i64* %4, align 8
  %8 = call i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.9"* %6, i64 %7, i8* null)
  ret i32* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.9"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.9"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 1906512028, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1906512028, label %16
    i32 -2067356415, label %21
    i32 -1912684594, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -2067356415, i32 -1912684594
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 4
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to i32*
  ret i32* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.9"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.315
  %5 = load i32, i32* @y.316
  %6 = sub i32 %4, 2143788044
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 2143788044
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1328249947, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1328249947, label %18
    i32 806082280, label %38
    i32 -2006867776, label %56
    i32 -1981112636, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 806082280, i32 -1981112636
  store i32 %37, i32* %14
  br label %60

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %39, align 8
  %41 = load i32, i32* @x.315
  %42 = load i32, i32* @y.316
  %43 = sub i32 %41, 1531072104
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 1531072104
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -2006867776, i32 -1981112636
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret i64 4611686018427387903

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %58, align 8
  store i32 806082280, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8), i32** dereferenceable(8)) #5 comdat {
  %3 = alloca i32**, align 8
  %4 = alloca i32**, align 8
  %5 = alloca i32*, align 8
  store i32** %0, i32*** %3, align 8
  store i32** %1, i32*** %4, align 8
  %6 = load i32**, i32*** %3, align 8
  %7 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %6) #3
  %8 = load i32*, i32** %7, align 8
  store i32* %8, i32** %5, align 8
  %9 = load i32**, i32*** %4, align 8
  %10 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %9) #3
  %11 = load i32*, i32** %10, align 8
  %12 = load i32**, i32*** %3, align 8
  store i32* %11, i32** %12, align 8
  %13 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %5) #3
  %14 = load i32*, i32** %13, align 8
  %15 = load i32**, i32*** %4, align 8
  store i32* %14, i32** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8)) #5 comdat {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  ret i32** %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32*, i32*, i32* dereferenceable(4)) #5 comdat {
  %4 = alloca i32*
  %5 = alloca i32**
  %6 = alloca i32**
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.321
  %10 = load i32, i32* @y.322
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 848286760, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %128
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 848286760, label %22
    i32 1679815149, label %30
    i32 -869899628, label %66
    i32 649414776, label %67
    i32 1574504000, label %74
    i32 -696393121, label %79
    i32 1110238791, label %94
    i32 -184489365, label %114
    i32 85708792, label %115
    i32 450772175, label %116
    i32 659138159, label %123
  ]

; <label>:21:                                     ; preds = %19
  br label %128

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %8
  %24 = load volatile i1, i1* %7
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 1679815149, i32 450772175
  store i32 %29, i32* %18
  br label %128

; <label>:30:                                     ; preds = %19
  %31 = alloca i32*, align 8
  store i32** %31, i32*** %6
  %32 = alloca i32*, align 8
  store i32** %32, i32*** %5
  %33 = alloca i32*, align 8
  %34 = alloca i32, align 4
  store i32* %34, i32** %4
  %35 = load volatile i32**, i32*** %6
  store i32* %0, i32** %35, align 8
  %36 = load volatile i32**, i32*** %5
  store i32* %1, i32** %36, align 8
  store i32* %2, i32** %33, align 8
  %37 = load i32*, i32** %33, align 8
  %38 = load i32, i32* %37, align 4
  %39 = load volatile i32*, i32** %4
  store i32 %38, i32* %39, align 4
  %40 = load i32, i32* @x.321
  %41 = load i32, i32* @y.322
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 -869899628, i32 450772175
  store i32 %65, i32* %18
  br label %128

; <label>:66:                                     ; preds = %19
  store i32 649414776, i32* %18
  br label %128

; <label>:67:                                     ; preds = %19
  %68 = load volatile i32**, i32*** %6
  %69 = load i32*, i32** %68, align 8
  %70 = load volatile i32**, i32*** %5
  %71 = load i32*, i32** %70, align 8
  %72 = icmp ne i32* %69, %71
  %73 = select i1 %72, i32 1574504000, i32 85708792
  store i32 %73, i32* %18
  br label %128

; <label>:74:                                     ; preds = %19
  %75 = load volatile i32*, i32** %4
  %76 = load i32, i32* %75, align 4
  %77 = load volatile i32**, i32*** %6
  %78 = load i32*, i32** %77, align 8
  store i32 %76, i32* %78, align 4
  store i32 -696393121, i32* %18
  br label %128

; <label>:79:                                     ; preds = %19
  %80 = load i32, i32* @x.321
  %81 = load i32, i32* @y.322
  %82 = sub i32 0, 1
  %83 = add i32 %80, %82
  %84 = sub i32 %80, 1
  %85 = mul i32 %80, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %81, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  %93 = select i1 %91, i32 1110238791, i32 659138159
  store i32 %93, i32* %18
  br label %128

; <label>:94:                                     ; preds = %19
  %95 = load volatile i32**, i32*** %6
  %96 = load i32*, i32** %95, align 8
  %97 = getelementptr inbounds i32, i32* %96, i32 1
  %98 = load volatile i32**, i32*** %6
  store i32* %97, i32** %98, align 8
  %99 = load i32, i32* @x.321
  %100 = load i32, i32* @y.322
  %101 = sub i32 %99, -398308353
  %102 = sub i32 %101, 1
  %103 = add i32 %102, -398308353
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = and i1 %107, %108
  %110 = xor i1 %107, %108
  %111 = or i1 %109, %110
  %112 = or i1 %107, %108
  %113 = select i1 %111, i32 -184489365, i32 659138159
  store i32 %113, i32* %18
  br label %128

; <label>:114:                                    ; preds = %19
  store i32 649414776, i32* %18
  br label %128

; <label>:115:                                    ; preds = %19
  ret void

; <label>:116:                                    ; preds = %19
  %117 = alloca i32*, align 8
  %118 = alloca i32*, align 8
  %119 = alloca i32*, align 8
  %120 = alloca i32, align 4
  store i32* %0, i32** %117, align 8
  store i32* %1, i32** %118, align 8
  store i32* %2, i32** %119, align 8
  %121 = load i32*, i32** %119, align 8
  %122 = load i32, i32* %121, align 4
  store i32 %122, i32* %120, align 4
  store i32 1679815149, i32* %18
  br label %128

; <label>:123:                                    ; preds = %19
  %124 = load volatile i32**, i32*** %6
  %125 = load i32*, i32** %124, align 8
  %126 = getelementptr inbounds i32, i32* %125, i32 1
  %127 = load volatile i32**, i32*** %6
  store i32* %126, i32** %127, align 8
  store i32 1110238791, i32* %18
  br label %128

; <label>:128:                                    ; preds = %123, %116, %114, %94, %79, %74, %67, %66, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %2, i32 0, i32 0
  store i32* %0, i32** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %3, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = call i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb1EE7_S_baseES6_(i32* %8)
  ret i32* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb1EE7_S_baseES6_(i32*) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.325
  %6 = load i32, i32* @y.326
  %7 = add i32 %5, -1023409334
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1023409334
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 852748106, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 852748106, label %19
    i32 -1486659074, label %27
    i32 -94841796, label %59
    i32 -1321990136, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1486659074, i32 -1321990136
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %28, i32 0, i32 0
  store i32* %0, i32** %29, align 8
  %30 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.12"* %28) #3
  %31 = load i32*, i32** %30, align 8
  store i32* %31, i32** %2
  %32 = load i32, i32* @x.325
  %33 = load i32, i32* @y.326
  %34 = sub i32 %32, -672014113
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -672014113
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -94841796, i32 -1321990136
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i32*, i32** %2
  ret i32* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %62, i32 0, i32 0
  store i32* %0, i32** %63, align 8
  %64 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.12"* %62) #3
  %65 = load i32*, i32** %64, align 8
  store i32 -1486659074, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.12"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.12"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.12"* %0, %"class.__gnu_cxx::__normal_iterator.12"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %3, i32 0, i32 0
  ret i32** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.12"*, i32** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.329
  %6 = load i32, i32* @y.330
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1233745710, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %68
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1233745710, label %18
    i32 -1995632182, label %26
    i32 1476288020, label %60
    i32 -976835868, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %68

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1995632182, i32 -976835868
  store i32 %25, i32* %14
  br label %68

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.12"*, align 8
  %28 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator.12"* %0, %"class.__gnu_cxx::__normal_iterator.12"** %27, align 8
  store i32** %1, i32*** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %27, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %29, i32 0, i32 0
  %31 = load i32**, i32*** %28, align 8
  %32 = load i32*, i32** %31, align 8
  store i32* %32, i32** %30, align 8
  %33 = load i32, i32* @x.329
  %34 = load i32, i32* @y.330
  %35 = sub i32 %33, -191960599
  %36 = sub i32 %35, 1
  %37 = add i32 %36, -191960599
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 1476288020, i32 -976835868
  store i32 %59, i32* %14
  br label %68

; <label>:60:                                     ; preds = %15
  ret void

; <label>:61:                                     ; preds = %15
  %62 = alloca %"class.__gnu_cxx::__normal_iterator.12"*, align 8
  %63 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator.12"* %0, %"class.__gnu_cxx::__normal_iterator.12"** %62, align 8
  store i32** %1, i32*** %63, align 8
  %64 = load %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %62, align 8
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %64, i32 0, i32 0
  %66 = load i32**, i32*** %63, align 8
  %67 = load i32*, i32** %66, align 8
  store i32* %67, i32** %65, align 8
  store i32 -1995632182, i32* %14
  br label %68

; <label>:68:                                     ; preds = %61, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.333
  %8 = load i32, i32* @y.334
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -1103416928, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %73
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1103416928, label %20
    i32 162481400, label %28
    i32 418459666, label %63
    i32 1447132554, label %65
  ]

; <label>:19:                                     ; preds = %17
  br label %73

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 162481400, i32 1447132554
  store i32 %27, i32* %16
  br label %73

; <label>:28:                                     ; preds = %17
  %29 = alloca i32*, align 8
  %30 = alloca i64, align 8
  %31 = alloca i32*, align 8
  store i32* %0, i32** %29, align 8
  store i64 %1, i64* %30, align 8
  store i32* %2, i32** %31, align 8
  %32 = load i32*, i32** %29, align 8
  %33 = load i64, i64* %30, align 8
  %34 = load i32*, i32** %31, align 8
  %35 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %32, i64 %33, i32* dereferenceable(4) %34)
  store i32* %35, i32** %4
  %36 = load i32, i32* @x.333
  %37 = load i32, i32* @y.334
  %38 = add i32 %36, 516838187
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, 516838187
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 418459666, i32 1447132554
  store i32 %62, i32* %16
  br label %73

; <label>:63:                                     ; preds = %17
  %64 = load volatile i32*, i32** %4
  ret i32* %64

; <label>:65:                                     ; preds = %17
  %66 = alloca i32*, align 8
  %67 = alloca i64, align 8
  %68 = alloca i32*, align 8
  store i32* %0, i32** %66, align 8
  store i64 %1, i64* %67, align 8
  store i32* %2, i32** %68, align 8
  %69 = load i32*, i32** %66, align 8
  %70 = load i64, i64* %67, align 8
  %71 = load i32*, i32** %68, align 8
  %72 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %69, i64 %70, i32* dereferenceable(4) %71)
  store i32 162481400, i32* %16
  br label %73

; <label>:73:                                     ; preds = %65, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32*, i64, i32* dereferenceable(4)) #5 comdat {
  %4 = alloca i64*
  %5 = alloca i32*
  %6 = alloca i32**
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.335
  %10 = load i32, i32* @y.336
  %11 = sub i32 %9, -998432719
  %12 = sub i32 %11, 1
  %13 = add i32 %12, -998432719
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 2025857187, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %92
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 2025857187, label %23
    i32 1862629582, label %31
    i32 1956880238, label %57
    i32 -472956400, label %58
    i32 1893745596, label %63
    i32 2126755998, label %68
    i32 -547022281, label %80
    i32 -1828115500, label %83
  ]

; <label>:22:                                     ; preds = %20
  br label %92

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 1862629582, i32 -1828115500
  store i32 %30, i32* %19
  br label %92

; <label>:31:                                     ; preds = %20
  %32 = alloca i32*, align 8
  store i32** %32, i32*** %6
  %33 = alloca i64, align 8
  %34 = alloca i32*, align 8
  %35 = alloca i32, align 4
  store i32* %35, i32** %5
  %36 = alloca i64, align 8
  store i64* %36, i64** %4
  %37 = load volatile i32**, i32*** %6
  store i32* %0, i32** %37, align 8
  store i64 %1, i64* %33, align 8
  store i32* %2, i32** %34, align 8
  %38 = load i32*, i32** %34, align 8
  %39 = load i32, i32* %38, align 4
  %40 = load volatile i32*, i32** %5
  store i32 %39, i32* %40, align 4
  %41 = load i64, i64* %33, align 8
  %42 = load volatile i64*, i64** %4
  store i64 %41, i64* %42, align 8
  %43 = load i32, i32* @x.335
  %44 = load i32, i32* @y.336
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 1956880238, i32 -1828115500
  store i32 %56, i32* %19
  br label %92

; <label>:57:                                     ; preds = %20
  store i32 -472956400, i32* %19
  br label %92

; <label>:58:                                     ; preds = %20
  %59 = load volatile i64*, i64** %4
  %60 = load i64, i64* %59, align 8
  %61 = icmp ugt i64 %60, 0
  %62 = select i1 %61, i32 1893745596, i32 -547022281
  store i32 %62, i32* %19
  br label %92

; <label>:63:                                     ; preds = %20
  %64 = load volatile i32*, i32** %5
  %65 = load i32, i32* %64, align 4
  %66 = load volatile i32**, i32*** %6
  %67 = load i32*, i32** %66, align 8
  store i32 %65, i32* %67, align 4
  store i32 2126755998, i32* %19
  br label %92

; <label>:68:                                     ; preds = %20
  %69 = load volatile i64*, i64** %4
  %70 = load i64, i64* %69, align 8
  %71 = sub i64 %70, 8801323889652439013
  %72 = add i64 %71, -1
  %73 = add i64 %72, 8801323889652439013
  %74 = add i64 %70, -1
  %75 = load volatile i64*, i64** %4
  store i64 %73, i64* %75, align 8
  %76 = load volatile i32**, i32*** %6
  %77 = load i32*, i32** %76, align 8
  %78 = getelementptr inbounds i32, i32* %77, i32 1
  %79 = load volatile i32**, i32*** %6
  store i32* %78, i32** %79, align 8
  store i32 -472956400, i32* %19
  br label %92

; <label>:80:                                     ; preds = %20
  %81 = load volatile i32**, i32*** %6
  %82 = load i32*, i32** %81, align 8
  ret i32* %82

; <label>:83:                                     ; preds = %20
  %84 = alloca i32*, align 8
  %85 = alloca i64, align 8
  %86 = alloca i32*, align 8
  %87 = alloca i32, align 4
  %88 = alloca i64, align 8
  store i32* %0, i32** %84, align 8
  store i64 %1, i64* %85, align 8
  store i32* %2, i32** %86, align 8
  %89 = load i32*, i32** %86, align 8
  %90 = load i32, i32* %89, align 4
  store i32 %90, i32* %87, align 4
  %91 = load i64, i64* %85, align 8
  store i64 %91, i64* %88, align 8
  store i32 1862629582, i32* %19
  br label %92

; <label>:92:                                     ; preds = %83, %68, %63, %58, %57, %31, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32*) #0 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  %4 = call i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %3)
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32*) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.339
  %6 = load i32, i32* @y.340
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1957885368, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1957885368, label %18
    i32 -1924889807, label %38
    i32 1631476064, label %68
    i32 1789113645, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1924889807, i32 1789113645
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca i32*, align 8
  store i32* %0, i32** %39, align 8
  %40 = load i32*, i32** %39, align 8
  store i32* %40, i32** %2
  %41 = load i32, i32* @x.339
  %42 = load i32, i32* @y.340
  %43 = add i32 %41, 161295541
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 161295541
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1631476064, i32 1789113645
  store i32 %67, i32* %14
  br label %73

; <label>:68:                                     ; preds = %15
  %69 = load volatile i32*, i32** %2
  ret i32* %69

; <label>:70:                                     ; preds = %15
  %71 = alloca i32*, align 8
  store i32* %0, i32** %71, align 8
  %72 = load i32*, i32** %71, align 8
  store i32 -1924889807, i32* %14
  br label %73

; <label>:73:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt6fill_nIPxmxET_S1_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #0 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.341
  %8 = load i32, i32* @y.342
  %9 = sub i32 %7, -878181682
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -878181682
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1620999831, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %88
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1620999831, label %21
    i32 1819748145, label %41
    i32 -611028742, label %77
    i32 -910115977, label %79
  ]

; <label>:20:                                     ; preds = %18
  br label %88

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1819748145, i32 -910115977
  store i32 %40, i32* %17
  br label %88

; <label>:41:                                     ; preds = %18
  %42 = alloca i64*, align 8
  %43 = alloca i64, align 8
  %44 = alloca i64*, align 8
  store i64* %0, i64** %42, align 8
  store i64 %1, i64* %43, align 8
  store i64* %2, i64** %44, align 8
  %45 = load i64*, i64** %42, align 8
  %46 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %45)
  %47 = load i64, i64* %43, align 8
  %48 = load i64*, i64** %44, align 8
  %49 = call i64* @_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64* %46, i64 %47, i64* dereferenceable(8) %48)
  store i64* %49, i64** %4
  %50 = load i32, i32* @x.341
  %51 = load i32, i32* @y.342
  %52 = sub i32 %50, -1718044878
  %53 = sub i32 %52, 1
  %54 = add i32 %53, -1718044878
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -611028742, i32 -910115977
  store i32 %76, i32* %17
  br label %88

; <label>:77:                                     ; preds = %18
  %78 = load volatile i64*, i64** %4
  ret i64* %78

; <label>:79:                                     ; preds = %18
  %80 = alloca i64*, align 8
  %81 = alloca i64, align 8
  %82 = alloca i64*, align 8
  store i64* %0, i64** %80, align 8
  store i64 %1, i64* %81, align 8
  store i64* %2, i64** %82, align 8
  %83 = load i64*, i64** %80, align 8
  %84 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %83)
  %85 = load i64, i64* %81, align 8
  %86 = load i64*, i64** %82, align 8
  %87 = call i64* @_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64* %84, i64 %85, i64* dereferenceable(8) %86)
  store i32 1819748145, i32* %17
  br label %88

; <label>:88:                                     ; preds = %79, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt5arrayIxLm3EE5beginEv(%"struct.std::array"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::array"*, align 8
  store %"struct.std::array"* %0, %"struct.std::array"** %2, align 8
  %3 = load %"struct.std::array"*, %"struct.std::array"** %2, align 8
  %4 = call i64* @_ZNSt5arrayIxLm3EE4dataEv(%"struct.std::array"* %3) #3
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt5arrayIxLm3EE4sizeEv(%"struct.std::array"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.345
  %5 = load i32, i32* @y.346
  %6 = sub i32 %4, 261846287
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 261846287
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1621069152, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %48
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1621069152, label %18
    i32 1146580049, label %26
    i32 -1054481531, label %44
    i32 404889829, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %48

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1146580049, i32 404889829
  store i32 %25, i32* %14
  br label %48

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::array"*, align 8
  store %"struct.std::array"* %0, %"struct.std::array"** %27, align 8
  %28 = load %"struct.std::array"*, %"struct.std::array"** %27, align 8
  %29 = load i32, i32* @x.345
  %30 = load i32, i32* @y.346
  %31 = add i32 %29, -891318160
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, -891318160
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -1054481531, i32 404889829
  store i32 %43, i32* %14
  br label %48

; <label>:44:                                     ; preds = %15
  ret i64 3

; <label>:45:                                     ; preds = %15
  %46 = alloca %"struct.std::array"*, align 8
  store %"struct.std::array"* %0, %"struct.std::array"** %46, align 8
  %47 = load %"struct.std::array"*, %"struct.std::array"** %46, align 8
  store i32 1146580049, i32* %14
  br label %48

; <label>:48:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64*, i64, i64* dereferenceable(8)) #5 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %7, align 8
  %11 = load i64, i64* %5, align 8
  store i64 %11, i64* %8, align 8
  %12 = alloca i32
  store i32 1193362206, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %121
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1193362206, label %16
    i32 686755558, label %20
    i32 53626255, label %23
    i32 1012288890, label %51
    i32 1625727169, label %74
    i32 -291762590, label %75
    i32 -1945756400, label %77
  ]

; <label>:15:                                     ; preds = %13
  br label %121

; <label>:16:                                     ; preds = %13
  %17 = load i64, i64* %8, align 8
  %18 = icmp ugt i64 %17, 0
  %19 = select i1 %18, i32 686755558, i32 -291762590
  store i32 %19, i32* %12
  br label %121

; <label>:20:                                     ; preds = %13
  %21 = load i64, i64* %7, align 8
  %22 = load i64*, i64** %4, align 8
  store i64 %21, i64* %22, align 8
  store i32 53626255, i32* %12
  br label %121

; <label>:23:                                     ; preds = %13
  %24 = load i32, i32* @x.347
  %25 = load i32, i32* @y.348
  %26 = sub i32 %24, 317198638
  %27 = sub i32 %26, 1
  %28 = add i32 %27, 317198638
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 false, true
  %37 = and i1 %34, false
  %38 = and i1 %32, %36
  %39 = and i1 %35, false
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 false, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  %50 = select i1 %48, i32 1012288890, i32 -1945756400
  store i32 %50, i32* %12
  br label %121

; <label>:51:                                     ; preds = %13
  %52 = load i64, i64* %8, align 8
  %53 = sub i64 %52, -4833303335023118658
  %54 = add i64 %53, -1
  %55 = add i64 %54, -4833303335023118658
  %56 = add i64 %52, -1
  store i64 %55, i64* %8, align 8
  %57 = load i64*, i64** %4, align 8
  %58 = getelementptr inbounds i64, i64* %57, i32 1
  store i64* %58, i64** %4, align 8
  %59 = load i32, i32* @x.347
  %60 = load i32, i32* @y.348
  %61 = sub i32 %59, -1148163457
  %62 = sub i32 %61, 1
  %63 = add i32 %62, -1148163457
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 1625727169, i32 -1945756400
  store i32 %73, i32* %12
  br label %121

; <label>:74:                                     ; preds = %13
  store i32 1193362206, i32* %12
  br label %121

; <label>:75:                                     ; preds = %13
  %76 = load i64*, i64** %4, align 8
  ret i64* %76

; <label>:77:                                     ; preds = %13
  %78 = load i64, i64* %8, align 8
  %79 = sub i64 0, %78
  %80 = add i64 0, %79
  %81 = sub i64 0, %78
  %82 = sub i64 0, -1
  %83 = sub i64 %80, %82
  %84 = add i64 %80, -1
  %85 = add i64 0, 3246253558713171749
  %86 = sub i64 %85, %78
  %87 = sub i64 %86, 3246253558713171749
  %88 = sub i64 0, %78
  %89 = add i64 %87, 3488036936033850289
  %90 = add i64 %89, -1
  %91 = sub i64 %90, 3488036936033850289
  %92 = add i64 %87, -1
  %93 = add i64 0, 95473590991791909
  %94 = sub i64 %93, %78
  %95 = sub i64 %94, 95473590991791909
  %96 = sub i64 0, %78
  %97 = add i64 %95, 5524829161797467572
  %98 = add i64 %97, -1
  %99 = sub i64 %98, 5524829161797467572
  %100 = add i64 %95, -1
  %101 = add i64 0, 1759602021694107882
  %102 = sub i64 %101, %78
  %103 = sub i64 %102, 1759602021694107882
  %104 = sub i64 0, %78
  %105 = add i64 %103, -5100338000084593779
  %106 = add i64 %105, -1
  %107 = sub i64 %106, -5100338000084593779
  %108 = add i64 %103, -1
  %109 = sub i64 0, -1
  %110 = add i64 %78, %109
  %111 = sub i64 %78, -1
  %112 = mul i64 %110, -1
  %113 = shl i64 %78, -1
  %114 = sub i64 0, %78
  %115 = sub i64 0, -1
  %116 = add i64 %114, %115
  %117 = sub i64 0, %116
  %118 = add i64 %78, -1
  store i64 %117, i64* %8, align 8
  %119 = load i64*, i64** %4, align 8
  %120 = getelementptr inbounds i64, i64* %119, i32 1
  store i64* %120, i64** %4, align 8
  store i32 1012288890, i32* %12
  br label %121

; <label>:121:                                    ; preds = %77, %74, %51, %23, %20, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64*) #0 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  %4 = call i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64* %3)
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64*) #5 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.351
  %6 = load i32, i32* @y.352
  %7 = sub i32 %5, -295639793
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -295639793
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -101316221, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -101316221, label %19
    i32 -2061031827, label %27
    i32 2011267760, label %56
    i32 -150866790, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -2061031827, i32 -150866790
  store i32 %26, i32* %15
  br label %61

; <label>:27:                                     ; preds = %16
  %28 = alloca i64*, align 8
  store i64* %0, i64** %28, align 8
  %29 = load i64*, i64** %28, align 8
  store i64* %29, i64** %2
  %30 = load i32, i32* @x.351
  %31 = load i32, i32* @y.352
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 2011267760, i32 -150866790
  store i32 %55, i32* %15
  br label %61

; <label>:56:                                     ; preds = %16
  %57 = load volatile i64*, i64** %2
  ret i64* %57

; <label>:58:                                     ; preds = %16
  %59 = alloca i64*, align 8
  store i64* %0, i64** %59, align 8
  %60 = load i64*, i64** %59, align 8
  store i32 -2061031827, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt5arrayIxLm3EE4dataEv(%"struct.std::array"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::array"*, align 8
  store %"struct.std::array"* %0, %"struct.std::array"** %2, align 8
  %3 = load %"struct.std::array"*, %"struct.std::array"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i32 0, i32 0
  %5 = call i64* @_ZNSt14__array_traitsIxLm3EE6_S_ptrERA3_Kx([3 x i64]* dereferenceable(24) %4) #3
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt14__array_traitsIxLm3EE6_S_ptrERA3_Kx([3 x i64]* dereferenceable(24)) #5 comdat align 2 {
  %2 = alloca [3 x i64]*, align 8
  store [3 x i64]* %0, [3 x i64]** %2, align 8
  %3 = load [3 x i64]*, [3 x i64]** %2, align 8
  %4 = getelementptr inbounds [3 x i64], [3 x i64]* %3, i32 0, i32 0
  ret i64* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN1M2opERKSt5arrayIxLm3EES3_(%"struct.std::array"* noalias sret, %"struct.std::array"* dereferenceable(24), %"struct.std::array"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"struct.std::array"*, align 8
  %5 = alloca %"struct.std::array"*, align 8
  store %"struct.std::array"* %1, %"struct.std::array"** %4, align 8
  store %"struct.std::array"* %2, %"struct.std::array"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %0, i32 0, i32 0
  %7 = getelementptr inbounds [3 x i64], [3 x i64]* %6, i64 0, i64 0
  %8 = load %"struct.std::array"*, %"struct.std::array"** %4, align 8
  %9 = call dereferenceable(8) i64* @_ZNKSt5arrayIxLm3EEixEm(%"struct.std::array"* %8, i64 0) #3
  %10 = load %"struct.std::array"*, %"struct.std::array"** %5, align 8
  %11 = call dereferenceable(8) i64* @_ZNKSt5arrayIxLm3EEixEm(%"struct.std::array"* %10, i64 0) #3
  %12 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %9, i64* dereferenceable(8) %11)
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %7, align 8
  %14 = getelementptr inbounds i64, i64* %7, i64 1
  %15 = load %"struct.std::array"*, %"struct.std::array"** %4, align 8
  %16 = call dereferenceable(8) i64* @_ZNKSt5arrayIxLm3EEixEm(%"struct.std::array"* %15, i64 1) #3
  %17 = load %"struct.std::array"*, %"struct.std::array"** %5, align 8
  %18 = call dereferenceable(8) i64* @_ZNKSt5arrayIxLm3EEixEm(%"struct.std::array"* %17, i64 1) #3
  %19 = call dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* dereferenceable(8) %16, i64* dereferenceable(8) %18)
  %20 = load i64, i64* %19, align 8
  store i64 %20, i64* %14, align 8
  %21 = getelementptr inbounds i64, i64* %14, i64 1
  %22 = load %"struct.std::array"*, %"struct.std::array"** %4, align 8
  %23 = call dereferenceable(8) i64* @_ZNKSt5arrayIxLm3EEixEm(%"struct.std::array"* %22, i64 2) #3
  %24 = load i64, i64* %23, align 8
  %25 = load %"struct.std::array"*, %"struct.std::array"** %5, align 8
  %26 = call dereferenceable(8) i64* @_ZNKSt5arrayIxLm3EEixEm(%"struct.std::array"* %25, i64 2) #3
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 0, %27
  %29 = sub i64 %24, %28
  %30 = add nsw i64 %24, %27
  store i64 %29, i64* %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  %8 = load i64*, i64** %7, align 8
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %4
  %10 = load i64*, i64** %6, align 8
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 1180874060, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1180874060, label %16
    i32 -1140523937, label %21
    i32 74960712, label %23
    i32 -240782830, label %25
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp slt i64 %17, %18
  %20 = select i1 %19, i32 -1140523937, i32 74960712
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  %22 = load i64*, i64** %7, align 8
  store i64* %22, i64** %5, align 8
  store i32 -240782830, i32* %12
  br label %27

; <label>:23:                                     ; preds = %13
  %24 = load i64*, i64** %6, align 8
  store i64* %24, i64** %5, align 8
  store i32 -240782830, i32* %12
  br label %27

; <label>:25:                                     ; preds = %13
  %26 = load i64*, i64** %5, align 8
  ret i64* %26

; <label>:27:                                     ; preds = %23, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNKSt5arrayIxLm3EEixEm(%"struct.std::array"*, i64) #5 comdat align 2 {
  %3 = alloca %"struct.std::array"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::array"* %0, %"struct.std::array"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::array"*, %"struct.std::array"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %5, i32 0, i32 0
  %7 = load i64, i64* %4, align 8
  %8 = call dereferenceable(8) i64* @_ZNSt14__array_traitsIxLm3EE6_S_refERA3_Kxm([3 x i64]* dereferenceable(24) %6, i64 %7) #3
  ret i64* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i64**
  %6 = alloca i64**
  %7 = alloca i64**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.363
  %11 = load i32, i32* @y.364
  %12 = add i32 %10, -129824162
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, -129824162
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 209527752, i32* %20
  br label %21

; <label>:21:                                     ; preds = %2, %152
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 209527752, label %24
    i32 718990758, label %44
    i32 -1402580232, label %83
    i32 901219460, label %86
    i32 948617889, label %90
    i32 1449543816, label %94
    i32 -1050708305, label %121
    i32 1646161604, label %138
    i32 911534162, label %140
    i32 67370166, label %149
  ]

; <label>:23:                                     ; preds = %21
  br label %152

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 true, true
  %30 = and i1 %27, true
  %31 = and i1 %25, %29
  %32 = and i1 %28, true
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 true, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 718990758, i32 911534162
  store i32 %43, i32* %20
  br label %152

; <label>:44:                                     ; preds = %21
  %45 = alloca i64*, align 8
  store i64** %45, i64*** %7
  %46 = alloca i64*, align 8
  store i64** %46, i64*** %6
  %47 = alloca i64*, align 8
  store i64** %47, i64*** %5
  %48 = load volatile i64**, i64*** %6
  store i64* %0, i64** %48, align 8
  %49 = load volatile i64**, i64*** %5
  store i64* %1, i64** %49, align 8
  %50 = load volatile i64**, i64*** %6
  %51 = load i64*, i64** %50, align 8
  %52 = load i64, i64* %51, align 8
  %53 = load volatile i64**, i64*** %5
  %54 = load i64*, i64** %53, align 8
  %55 = load i64, i64* %54, align 8
  %56 = icmp slt i64 %52, %55
  store i1 %56, i1* %4
  %57 = load i32, i32* @x.363
  %58 = load i32, i32* @y.364
  %59 = sub i32 0, 1
  %60 = add i32 %57, %59
  %61 = sub i32 %57, 1
  %62 = mul i32 %57, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %58, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 false, true
  %69 = and i1 %66, false
  %70 = and i1 %64, %68
  %71 = and i1 %67, false
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 false, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 -1402580232, i32 911534162
  store i32 %82, i32* %20
  br label %152

; <label>:83:                                     ; preds = %21
  %84 = load volatile i1, i1* %4
  %85 = select i1 %84, i32 901219460, i32 948617889
  store i32 %85, i32* %20
  br label %152

; <label>:86:                                     ; preds = %21
  %87 = load volatile i64**, i64*** %5
  %88 = load i64*, i64** %87, align 8
  %89 = load volatile i64**, i64*** %7
  store i64* %88, i64** %89, align 8
  store i32 1449543816, i32* %20
  br label %152

; <label>:90:                                     ; preds = %21
  %91 = load volatile i64**, i64*** %6
  %92 = load i64*, i64** %91, align 8
  %93 = load volatile i64**, i64*** %7
  store i64* %92, i64** %93, align 8
  store i32 1449543816, i32* %20
  br label %152

; <label>:94:                                     ; preds = %21
  %95 = load i32, i32* @x.363
  %96 = load i32, i32* @y.364
  %97 = sub i32 0, 1
  %98 = add i32 %95, %97
  %99 = sub i32 %95, 1
  %100 = mul i32 %95, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %96, 10
  %104 = xor i1 %102, true
  %105 = xor i1 %103, true
  %106 = xor i1 true, true
  %107 = and i1 %104, true
  %108 = and i1 %102, %106
  %109 = and i1 %105, true
  %110 = and i1 %103, %106
  %111 = or i1 %107, %108
  %112 = or i1 %109, %110
  %113 = xor i1 %111, %112
  %114 = or i1 %104, %105
  %115 = xor i1 %114, true
  %116 = or i1 true, %106
  %117 = and i1 %115, %116
  %118 = or i1 %113, %117
  %119 = or i1 %102, %103
  %120 = select i1 %118, i32 -1050708305, i32 67370166
  store i32 %120, i32* %20
  br label %152

; <label>:121:                                    ; preds = %21
  %122 = load volatile i64**, i64*** %7
  %123 = load i64*, i64** %122, align 8
  store i64* %123, i64** %3
  %124 = load i32, i32* @x.363
  %125 = load i32, i32* @y.364
  %126 = sub i32 0, 1
  %127 = add i32 %124, %126
  %128 = sub i32 %124, 1
  %129 = mul i32 %124, %127
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %125, 10
  %133 = and i1 %131, %132
  %134 = xor i1 %131, %132
  %135 = or i1 %133, %134
  %136 = or i1 %131, %132
  %137 = select i1 %135, i32 1646161604, i32 67370166
  store i32 %137, i32* %20
  br label %152

; <label>:138:                                    ; preds = %21
  %139 = load volatile i64*, i64** %3
  ret i64* %139

; <label>:140:                                    ; preds = %21
  %141 = alloca i64*, align 8
  %142 = alloca i64*, align 8
  %143 = alloca i64*, align 8
  store i64* %0, i64** %142, align 8
  store i64* %1, i64** %143, align 8
  %144 = load i64*, i64** %142, align 8
  %145 = load i64, i64* %144, align 8
  %146 = load i64*, i64** %143, align 8
  %147 = load i64, i64* %146, align 8
  %148 = icmp slt i64 %145, %147
  store i32 718990758, i32* %20
  br label %152

; <label>:149:                                    ; preds = %21
  %150 = load volatile i64**, i64*** %7
  %151 = load i64*, i64** %150, align 8
  store i32 -1050708305, i32* %20
  br label %152

; <label>:152:                                    ; preds = %149, %140, %121, %94, %90, %86, %83, %44, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE9push_backERKi(%"class.std::vector.6"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i32*
  %5 = alloca %"class.std::vector.6"*
  %6 = alloca %"class.std::vector.6"*, align 8
  %7 = alloca i32*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %6, align 8
  store i32* %1, i32** %7, align 8
  %8 = load %"class.std::vector.6"*, %"class.std::vector.6"** %6, align 8
  store %"class.std::vector.6"* %8, %"class.std::vector.6"** %5
  %9 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %5
  %10 = bitcast %"class.std::vector.6"* %9 to %"struct.std::_Vector_base.7"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  store i32* %13, i32** %4
  %14 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %5
  %15 = bitcast %"class.std::vector.6"* %14 to %"struct.std::_Vector_base.7"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load i32*, i32** %17, align 8
  store i32* %18, i32** %3
  %19 = alloca i32
  store i32 1519977651, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %166
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1519977651, label %23
    i32 -921273736, label %28
    i32 -2080046865, label %44
    i32 -582185229, label %88
    i32 65098012, label %89
    i32 1021426775, label %92
    i32 715233321, label %120
    i32 -1538391747, label %147
    i32 -1682481814, label %148
    i32 -480407969, label %165
  ]

; <label>:22:                                     ; preds = %20
  br label %166

; <label>:23:                                     ; preds = %20
  %24 = load volatile i32*, i32** %4
  %25 = load volatile i32*, i32** %3
  %26 = icmp ne i32* %24, %25
  %27 = select i1 %26, i32 -921273736, i32 65098012
  store i32 %27, i32* %19
  br label %166

; <label>:28:                                     ; preds = %20
  %29 = load i32, i32* @x.365
  %30 = load i32, i32* @y.366
  %31 = sub i32 %29, -762824608
  %32 = sub i32 %31, 1
  %33 = add i32 %32, -762824608
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -2080046865, i32 -1682481814
  store i32 %43, i32* %19
  br label %166

; <label>:44:                                     ; preds = %20
  %45 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %5
  %46 = bitcast %"class.std::vector.6"* %45 to %"struct.std::_Vector_base.7"*
  %47 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %46, i32 0, i32 0
  %48 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %47 to %"class.std::allocator.8"*
  %49 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %5
  %50 = bitcast %"class.std::vector.6"* %49 to %"struct.std::_Vector_base.7"*
  %51 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %50, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %51, i32 0, i32 1
  %53 = load i32*, i32** %52, align 8
  %54 = load i32*, i32** %7, align 8
  call void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.8"* dereferenceable(1) %48, i32* %53, i32* dereferenceable(4) %54)
  %55 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %5
  %56 = bitcast %"class.std::vector.6"* %55 to %"struct.std::_Vector_base.7"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %56, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %57, i32 0, i32 1
  %59 = load i32*, i32** %58, align 8
  %60 = getelementptr inbounds i32, i32* %59, i32 1
  store i32* %60, i32** %58, align 8
  %61 = load i32, i32* @x.365
  %62 = load i32, i32* @y.366
  %63 = add i32 %61, -1581812378
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, -1581812378
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 true, true
  %74 = and i1 %71, true
  %75 = and i1 %69, %73
  %76 = and i1 %72, true
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 true, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  %87 = select i1 %85, i32 -582185229, i32 -1682481814
  store i32 %87, i32* %19
  br label %166

; <label>:88:                                     ; preds = %20
  store i32 1021426775, i32* %19
  br label %166

; <label>:89:                                     ; preds = %20
  %90 = load i32*, i32** %7, align 8
  %91 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %5
  call void @_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_(%"class.std::vector.6"* %91, i32* dereferenceable(4) %90)
  store i32 1021426775, i32* %19
  br label %166

; <label>:92:                                     ; preds = %20
  %93 = load i32, i32* @x.365
  %94 = load i32, i32* @y.366
  %95 = sub i32 %93, 204420133
  %96 = sub i32 %95, 1
  %97 = add i32 %96, 204420133
  %98 = sub i32 %93, 1
  %99 = mul i32 %93, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %94, 10
  %103 = xor i1 %101, true
  %104 = xor i1 %102, true
  %105 = xor i1 false, true
  %106 = and i1 %103, false
  %107 = and i1 %101, %105
  %108 = and i1 %104, false
  %109 = and i1 %102, %105
  %110 = or i1 %106, %107
  %111 = or i1 %108, %109
  %112 = xor i1 %110, %111
  %113 = or i1 %103, %104
  %114 = xor i1 %113, true
  %115 = or i1 false, %105
  %116 = and i1 %114, %115
  %117 = or i1 %112, %116
  %118 = or i1 %101, %102
  %119 = select i1 %117, i32 715233321, i32 -480407969
  store i32 %119, i32* %19
  br label %166

; <label>:120:                                    ; preds = %20
  %121 = load i32, i32* @x.365
  %122 = load i32, i32* @y.366
  %123 = sub i32 0, 1
  %124 = add i32 %121, %123
  %125 = sub i32 %121, 1
  %126 = mul i32 %121, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %122, 10
  %130 = xor i1 %128, true
  %131 = xor i1 %129, true
  %132 = xor i1 false, true
  %133 = and i1 %130, false
  %134 = and i1 %128, %132
  %135 = and i1 %131, false
  %136 = and i1 %129, %132
  %137 = or i1 %133, %134
  %138 = or i1 %135, %136
  %139 = xor i1 %137, %138
  %140 = or i1 %130, %131
  %141 = xor i1 %140, true
  %142 = or i1 false, %132
  %143 = and i1 %141, %142
  %144 = or i1 %139, %143
  %145 = or i1 %128, %129
  %146 = select i1 %144, i32 -1538391747, i32 -480407969
  store i32 %146, i32* %19
  br label %166

; <label>:147:                                    ; preds = %20
  ret void

; <label>:148:                                    ; preds = %20
  %149 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %5
  %150 = bitcast %"class.std::vector.6"* %149 to %"struct.std::_Vector_base.7"*
  %151 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %150, i32 0, i32 0
  %152 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %151 to %"class.std::allocator.8"*
  %153 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %5
  %154 = bitcast %"class.std::vector.6"* %153 to %"struct.std::_Vector_base.7"*
  %155 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %154, i32 0, i32 0
  %156 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %155, i32 0, i32 1
  %157 = load i32*, i32** %156, align 8
  %158 = load i32*, i32** %7, align 8
  call void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.8"* dereferenceable(1) %152, i32* %157, i32* dereferenceable(4) %158)
  %159 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %5
  %160 = bitcast %"class.std::vector.6"* %159 to %"struct.std::_Vector_base.7"*
  %161 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %160, i32 0, i32 0
  %162 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %161, i32 0, i32 1
  %163 = load i32*, i32** %162, align 8
  %164 = getelementptr inbounds i32, i32* %163, i32 1
  store i32* %164, i32** %162, align 8
  store i32 -2080046865, i32* %19
  br label %166

; <label>:165:                                    ; preds = %20
  store i32 715233321, i32* %19
  br label %166

; <label>:166:                                    ; preds = %165, %148, %120, %92, %89, %88, %44, %28, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.6"* @_ZSt5mergeIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_St20back_insert_iteratorIS5_ESt7greaterIiEET1_T_SC_T0_SD_SB_T2_(i32*, i32*, i32*, i32*, %"class.std::vector.6"*) #0 comdat {
  %6 = alloca %"class.std::vector.6"*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.367
  %10 = load i32, i32* @y.368
  %11 = sub i32 %9, -433465513
  %12 = sub i32 %11, 1
  %13 = add i32 %12, -433465513
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 1167145721, i32* %19
  br label %20

; <label>:20:                                     ; preds = %5, %161
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1167145721, label %23
    i32 75788428, label %43
    i32 462334750, label %114
    i32 1129763723, label %116
  ]

; <label>:22:                                     ; preds = %20
  br label %161

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 false, true
  %29 = and i1 %26, false
  %30 = and i1 %24, %28
  %31 = and i1 %27, false
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 false, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 75788428, i32 1129763723
  store i32 %42, i32* %19
  br label %161

; <label>:43:                                     ; preds = %20
  %44 = alloca %"class.std::back_insert_iterator", align 8
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %48 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %49 = alloca %"class.std::back_insert_iterator", align 8
  %50 = alloca %"struct.std::greater", align 1
  %51 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %52 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %53 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %54 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %55 = alloca %"class.std::back_insert_iterator", align 8
  %56 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %57 = alloca %"struct.std::greater", align 1
  %58 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %59 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %45, i32 0, i32 0
  store i32* %0, i32** %59, align 8
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %46, i32 0, i32 0
  store i32* %1, i32** %60, align 8
  %61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %47, i32 0, i32 0
  store i32* %2, i32** %61, align 8
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %48, i32 0, i32 0
  store i32* %3, i32** %62, align 8
  %63 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %49, i32 0, i32 0
  store %"class.std::vector.6"* %4, %"class.std::vector.6"** %63, align 8
  %64 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %51 to i8*
  %65 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %64, i8* %65, i64 8, i32 8, i1 false)
  %66 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %52 to i8*
  %67 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %66, i8* %67, i64 8, i32 8, i1 false)
  %68 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %53 to i8*
  %69 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %68, i8* %69, i64 8, i32 8, i1 false)
  %70 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %54 to i8*
  %71 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %70, i8* %71, i64 8, i32 8, i1 false)
  %72 = bitcast %"class.std::back_insert_iterator"* %55 to i8*
  %73 = bitcast %"class.std::back_insert_iterator"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %72, i8* %73, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt7greaterIiEEENS0_15_Iter_comp_iterIT_EES5_()
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %51, i32 0, i32 0
  %75 = load i32*, i32** %74, align 8
  %76 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %52, i32 0, i32 0
  %77 = load i32*, i32** %76, align 8
  %78 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %53, i32 0, i32 0
  %79 = load i32*, i32** %78, align 8
  %80 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %54, i32 0, i32 0
  %81 = load i32*, i32** %80, align 8
  %82 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %55, i32 0, i32 0
  %83 = load %"class.std::vector.6"*, %"class.std::vector.6"** %82, align 8
  %84 = call %"class.std::vector.6"* @_ZSt7__mergeIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_St20back_insert_iteratorIS5_ENS0_5__ops15_Iter_comp_iterISt7greaterIiEEEET1_T_SF_T0_SG_SE_T2_(i32* %75, i32* %77, i32* %79, i32* %81, %"class.std::vector.6"* %83)
  %85 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %44, i32 0, i32 0
  store %"class.std::vector.6"* %84, %"class.std::vector.6"** %85, align 8
  %86 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %44, i32 0, i32 0
  %87 = load %"class.std::vector.6"*, %"class.std::vector.6"** %86, align 8
  store %"class.std::vector.6"* %87, %"class.std::vector.6"** %6
  %88 = load i32, i32* @x.367
  %89 = load i32, i32* @y.368
  %90 = sub i32 0, 1
  %91 = add i32 %88, %90
  %92 = sub i32 %88, 1
  %93 = mul i32 %88, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %89, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 true, true
  %100 = and i1 %97, true
  %101 = and i1 %95, %99
  %102 = and i1 %98, true
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 true, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  %113 = select i1 %111, i32 462334750, i32 1129763723
  store i32 %113, i32* %19
  br label %161

; <label>:114:                                    ; preds = %20
  %115 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %6
  ret %"class.std::vector.6"* %115

; <label>:116:                                    ; preds = %20
  %117 = alloca %"class.std::back_insert_iterator", align 8
  %118 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %119 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %120 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %121 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %122 = alloca %"class.std::back_insert_iterator", align 8
  %123 = alloca %"struct.std::greater", align 1
  %124 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %125 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %126 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %127 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %128 = alloca %"class.std::back_insert_iterator", align 8
  %129 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %130 = alloca %"struct.std::greater", align 1
  %131 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %132 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %118, i32 0, i32 0
  store i32* %0, i32** %132, align 8
  %133 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %119, i32 0, i32 0
  store i32* %1, i32** %133, align 8
  %134 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %120, i32 0, i32 0
  store i32* %2, i32** %134, align 8
  %135 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %121, i32 0, i32 0
  store i32* %3, i32** %135, align 8
  %136 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %122, i32 0, i32 0
  store %"class.std::vector.6"* %4, %"class.std::vector.6"** %136, align 8
  %137 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %124 to i8*
  %138 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %118 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %137, i8* %138, i64 8, i32 8, i1 false)
  %139 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %125 to i8*
  %140 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %139, i8* %140, i64 8, i32 8, i1 false)
  %141 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %126 to i8*
  %142 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %120 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %141, i8* %142, i64 8, i32 8, i1 false)
  %143 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %127 to i8*
  %144 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %143, i8* %144, i64 8, i32 8, i1 false)
  %145 = bitcast %"class.std::back_insert_iterator"* %128 to i8*
  %146 = bitcast %"class.std::back_insert_iterator"* %122 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %145, i8* %146, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt7greaterIiEEENS0_15_Iter_comp_iterIT_EES5_()
  %147 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %124, i32 0, i32 0
  %148 = load i32*, i32** %147, align 8
  %149 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %125, i32 0, i32 0
  %150 = load i32*, i32** %149, align 8
  %151 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %126, i32 0, i32 0
  %152 = load i32*, i32** %151, align 8
  %153 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %127, i32 0, i32 0
  %154 = load i32*, i32** %153, align 8
  %155 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %128, i32 0, i32 0
  %156 = load %"class.std::vector.6"*, %"class.std::vector.6"** %155, align 8
  %157 = call %"class.std::vector.6"* @_ZSt7__mergeIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_St20back_insert_iteratorIS5_ENS0_5__ops15_Iter_comp_iterISt7greaterIiEEEET1_T_SF_T0_SG_SE_T2_(i32* %148, i32* %150, i32* %152, i32* %154, %"class.std::vector.6"* %156)
  %158 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %117, i32 0, i32 0
  store %"class.std::vector.6"* %157, %"class.std::vector.6"** %158, align 8
  %159 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %117, i32 0, i32 0
  %160 = load %"class.std::vector.6"*, %"class.std::vector.6"** %159, align 8
  store i32 75788428, i32* %19
  br label %161

; <label>:161:                                    ; preds = %116, %43, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.6"* @_ZSt13back_inserterISt6vectorIiSaIiEEESt20back_insert_iteratorIT_ERS4_(%"class.std::vector.6"* dereferenceable(24)) #0 comdat {
  %2 = alloca %"class.std::vector.6"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.369
  %6 = load i32, i32* @y.370
  %7 = add i32 %5, 679967429
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 679967429
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1293657829, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1293657829, label %19
    i32 549987256, label %27
    i32 568883393, label %60
    i32 -807601687, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 549987256, i32 -807601687
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::back_insert_iterator", align 8
  %29 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %29, align 8
  %30 = load %"class.std::vector.6"*, %"class.std::vector.6"** %29, align 8
  call void @_ZNSt20back_insert_iteratorISt6vectorIiSaIiEEEC2ERS2_(%"class.std::back_insert_iterator"* %28, %"class.std::vector.6"* dereferenceable(24) %30)
  %31 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %28, i32 0, i32 0
  %32 = load %"class.std::vector.6"*, %"class.std::vector.6"** %31, align 8
  store %"class.std::vector.6"* %32, %"class.std::vector.6"** %2
  %33 = load i32, i32* @x.369
  %34 = load i32, i32* @y.370
  %35 = sub i32 %33, 1989915329
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 1989915329
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 568883393, i32 -807601687
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %2
  ret %"class.std::vector.6"* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::back_insert_iterator", align 8
  %64 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %64, align 8
  %65 = load %"class.std::vector.6"*, %"class.std::vector.6"** %64, align 8
  call void @_ZNSt20back_insert_iteratorISt6vectorIiSaIiEEEC2ERS2_(%"class.std::back_insert_iterator"* %63, %"class.std::vector.6"* dereferenceable(24) %65)
  %66 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %63, i32 0, i32 0
  %67 = load %"class.std::vector.6"*, %"class.std::vector.6"** %66, align 8
  store i32 549987256, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt6vectorIiSaIiEE5eraseEN9__gnu_cxx17__normal_iteratorIPKiS1_EES6_(%"class.std::vector.6"*, i32*, i32*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %7 = alloca %"class.std::vector.6"*, align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %5, i32 0, i32 0
  store i32* %1, i32** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %6, i32 0, i32 0
  store i32* %2, i32** %13, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %7, align 8
  %14 = load %"class.std::vector.6"*, %"class.std::vector.6"** %7, align 8
  %15 = call i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector.6"* %14) #3
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %8, i32 0, i32 0
  store i32* %15, i32** %16, align 8
  %17 = call i32* @_ZNKSt6vectorIiSaIiEE6cbeginEv(%"class.std::vector.6"* %14) #3
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %9, i32 0, i32 0
  store i32* %17, i32** %18, align 8
  %19 = call i64 @_ZN9__gnu_cxxmiIPKiSt6vectorIiSaIiEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator.13"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.13"* dereferenceable(8) %9) #3
  %20 = call i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl(%"class.__gnu_cxx::__normal_iterator.12"* %8, i64 %19) #3
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %10, i32 0, i32 0
  store i32* %20, i32** %21, align 8
  %22 = call i64 @_ZN9__gnu_cxxmiIPKiSt6vectorIiSaIiEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator.13"* dereferenceable(8) %6, %"class.__gnu_cxx::__normal_iterator.13"* dereferenceable(8) %9) #3
  %23 = call i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl(%"class.__gnu_cxx::__normal_iterator.12"* %8, i64 %22) #3
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %11, i32 0, i32 0
  store i32* %23, i32** %24, align 8
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %10, i32 0, i32 0
  %26 = load i32*, i32** %25, align 8
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %11, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = call i32* @_ZNSt6vectorIiSaIiEE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPiS1_EES5_(%"class.std::vector.6"* %14, i32* %26, i32* %28)
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %4, i32 0, i32 0
  store i32* %29, i32** %30, align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %4, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  ret i32* %32
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt6uniqueIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEET_S7_S7_(i32*, i32*) #0 comdat {
  %3 = alloca i32*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.373
  %7 = load i32, i32* @y.374
  %8 = add i32 %6, -498913558
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -498913558
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -2046562109, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %113
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -2046562109, label %20
    i32 1318311357, label %40
    i32 -523630671, label %89
    i32 637209950, label %91
  ]

; <label>:19:                                     ; preds = %17
  br label %113

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1318311357, i32 637209950
  store i32 %39, i32* %16
  br label %113

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %46 = alloca %"struct.__gnu_cxx::__ops::_Iter_equal_to_iter", align 1
  %47 = alloca %"struct.__gnu_cxx::__ops::_Iter_equal_to_iter", align 1
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %42, i32 0, i32 0
  store i32* %0, i32** %48, align 8
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %43, i32 0, i32 0
  store i32* %1, i32** %49, align 8
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %44 to i8*
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %45 to i8*
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops20__iter_equal_to_iterEv()
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %44, i32 0, i32 0
  %55 = load i32*, i32** %54, align 8
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %45, i32 0, i32 0
  %57 = load i32*, i32** %56, align 8
  %58 = call i32* @_ZSt8__uniqueIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops19_Iter_equal_to_iterEET_S9_S9_T0_(i32* %55, i32* %57)
  %59 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %41, i32 0, i32 0
  store i32* %58, i32** %59, align 8
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %41, i32 0, i32 0
  %61 = load i32*, i32** %60, align 8
  store i32* %61, i32** %3
  %62 = load i32, i32* @x.373
  %63 = load i32, i32* @y.374
  %64 = sub i32 %62, -969161361
  %65 = sub i32 %64, 1
  %66 = add i32 %65, -969161361
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 false, true
  %75 = and i1 %72, false
  %76 = and i1 %70, %74
  %77 = and i1 %73, false
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 false, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  %88 = select i1 %86, i32 -523630671, i32 637209950
  store i32 %88, i32* %16
  br label %113

; <label>:89:                                     ; preds = %17
  %90 = load volatile i32*, i32** %3
  ret i32* %90

; <label>:91:                                     ; preds = %17
  %92 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %93 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %94 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %95 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %96 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %97 = alloca %"struct.__gnu_cxx::__ops::_Iter_equal_to_iter", align 1
  %98 = alloca %"struct.__gnu_cxx::__ops::_Iter_equal_to_iter", align 1
  %99 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %93, i32 0, i32 0
  store i32* %0, i32** %99, align 8
  %100 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %94, i32 0, i32 0
  store i32* %1, i32** %100, align 8
  %101 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %95 to i8*
  %102 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %101, i8* %102, i64 8, i32 8, i1 false)
  %103 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %96 to i8*
  %104 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %103, i8* %104, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops20__iter_equal_to_iterEv()
  %105 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %95, i32 0, i32 0
  %106 = load i32*, i32** %105, align 8
  %107 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %96, i32 0, i32 0
  %108 = load i32*, i32** %107, align 8
  %109 = call i32* @_ZSt8__uniqueIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops19_Iter_equal_to_iterEET_S9_S9_T0_(i32* %106, i32* %108)
  %110 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %92, i32 0, i32 0
  store i32* %109, i32** %110, align 8
  %111 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %92, i32 0, i32 0
  %112 = load i32*, i32** %111, align 8
  store i32 1318311357, i32* %16
  br label %113

; <label>:113:                                    ; preds = %91, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2IPiEERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameIS9_S8_EE7__valueES5_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.12"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %0, %"class.__gnu_cxx::__normal_iterator.13"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.12"* %1, %"class.__gnu_cxx::__normal_iterator.12"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %5, i32 0, i32 0
  %7 = load %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %4, align 8
  %8 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.12"* %7) #3
  %9 = load i32*, i32** %8, align 8
  store i32* %9, i32** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt7reverseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_(i32*, i32*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %7 = alloca %"struct.std::random_access_iterator_tag", align 1
  %8 = alloca %"struct.std::random_access_iterator_tag", align 1
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %3, i32 0, i32 0
  store i32* %0, i32** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %4, i32 0, i32 0
  store i32* %1, i32** %10, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %5 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %6 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  call void @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt15iterator_traitsIT_E17iterator_categoryERKS8_(%"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %3)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %5, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %6, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  call void @_ZSt9__reverseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_St26random_access_iterator_tag(i32* %16, i32* %18)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.379
  %7 = load i32, i32* @y.380
  %8 = sub i32 %6, 524776751
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 524776751
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 547624724, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %77
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 547624724, label %20
    i32 -232414036, label %28
    i32 2054000095, label %65
    i32 1403686552, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %77

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -232414036, i32 1403686552
  store i32 %27, i32* %16
  br label %77

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.12"*, align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.12"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.12"* %0, %"class.__gnu_cxx::__normal_iterator.12"** %29, align 8
  store %"class.__gnu_cxx::__normal_iterator.12"* %1, %"class.__gnu_cxx::__normal_iterator.12"** %30, align 8
  %31 = load %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %29, align 8
  %32 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.12"* %31) #3
  %33 = load i32*, i32** %32, align 8
  %34 = load %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %30, align 8
  %35 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.12"* %34) #3
  %36 = load i32*, i32** %35, align 8
  %37 = icmp ne i32* %33, %36
  store i1 %37, i1* %3
  %38 = load i32, i32* @x.379
  %39 = load i32, i32* @y.380
  %40 = sub i32 %38, 2048381043
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 2048381043
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 2054000095, i32 1403686552
  store i32 %64, i32* %16
  br label %77

; <label>:65:                                     ; preds = %17
  %66 = load volatile i1, i1* %3
  ret i1 %66

; <label>:67:                                     ; preds = %17
  %68 = alloca %"class.__gnu_cxx::__normal_iterator.12"*, align 8
  %69 = alloca %"class.__gnu_cxx::__normal_iterator.12"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.12"* %0, %"class.__gnu_cxx::__normal_iterator.12"** %68, align 8
  store %"class.__gnu_cxx::__normal_iterator.12"* %1, %"class.__gnu_cxx::__normal_iterator.12"** %69, align 8
  %70 = load %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %68, align 8
  %71 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.12"* %70) #3
  %72 = load i32*, i32** %71, align 8
  %73 = load %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %69, align 8
  %74 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.12"* %73) #3
  %75 = load i32*, i32** %74, align 8
  %76 = icmp ne i32* %72, %75
  store i32 -232414036, i32* %16
  br label %77

; <label>:77:                                     ; preds = %67, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.12"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.12"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.12"* %0, %"class.__gnu_cxx::__normal_iterator.12"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN2STI1ME3_apEiRKSt5arrayIxLm2EE(%struct.ST*, i32, %"struct.std::array.5"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca i32
  %5 = alloca i32
  %6 = alloca %struct.ST*
  %7 = alloca %struct.ST*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %"struct.std::array.5"*, align 8
  store %struct.ST* %0, %struct.ST** %7, align 8
  store i32 %1, i32* %8, align 4
  store %"struct.std::array.5"* %2, %"struct.std::array.5"** %9, align 8
  %10 = load %struct.ST*, %struct.ST** %7, align 8
  store %struct.ST* %10, %struct.ST** %6
  %11 = load volatile %struct.ST*, %struct.ST** %6
  %12 = getelementptr inbounds %struct.ST, %struct.ST* %11, i32 0, i32 1
  %13 = load i32, i32* %8, align 4
  %14 = sext i32 %13 to i64
  %15 = call dereferenceable(24) %"struct.std::array"* @_ZNSt6vectorISt5arrayIxLm3EESaIS1_EEixEm(%"class.std::vector"* %12, i64 %14) #3
  %16 = load %"struct.std::array.5"*, %"struct.std::array.5"** %9, align 8
  %17 = load volatile %struct.ST*, %struct.ST** %6
  %18 = getelementptr inbounds %struct.ST, %struct.ST* %17, i32 0, i32 3
  %19 = load i32, i32* %8, align 4
  %20 = sext i32 %19 to i64
  %21 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.6"* %18, i64 %20) #3
  %22 = load i32, i32* %21, align 4
  call void @_ZN1M2apERSt5arrayIxLm3EERKS0_IxLm2EEi(%"struct.std::array"* dereferenceable(24) %15, %"struct.std::array.5"* dereferenceable(16) %16, i32 %22)
  %23 = load i32, i32* %8, align 4
  store i32 %23, i32* %5
  %24 = load volatile %struct.ST*, %struct.ST** %6
  %25 = getelementptr inbounds %struct.ST, %struct.ST* %24, i32 0, i32 0
  %26 = load i32, i32* %25, align 8
  store i32 %26, i32* %4
  %27 = alloca i32
  store i32 1408975172, i32* %27
  br label %28

; <label>:28:                                     ; preds = %3, %88
  %29 = load i32, i32* %27
  switch i32 %29, label %30 [
    i32 1408975172, label %31
    i32 -466715339, label %36
    i32 -785719036, label %43
    i32 -1234418270, label %70
    i32 1553022942, label %86
    i32 1624137902, label %87
  ]

; <label>:30:                                     ; preds = %28
  br label %88

; <label>:31:                                     ; preds = %28
  %32 = load volatile i32, i32* %5
  %33 = load volatile i32, i32* %4
  %34 = icmp slt i32 %32, %33
  %35 = select i1 %34, i32 -466715339, i32 -785719036
  store i32 %35, i32* %27
  br label %88

; <label>:36:                                     ; preds = %28
  %37 = load volatile %struct.ST*, %struct.ST** %6
  %38 = getelementptr inbounds %struct.ST, %struct.ST* %37, i32 0, i32 2
  %39 = load i32, i32* %8, align 4
  %40 = sext i32 %39 to i64
  %41 = call dereferenceable(16) %"struct.std::array.5"* @_ZNSt6vectorISt5arrayIxLm2EESaIS1_EEixEm(%"class.std::vector.0"* %38, i64 %40) #3
  %42 = load %"struct.std::array.5"*, %"struct.std::array.5"** %9, align 8
  call void @_ZN1M2apERSt5arrayIxLm2EERKS1_(%"struct.std::array.5"* dereferenceable(16) %41, %"struct.std::array.5"* dereferenceable(16) %42)
  store i32 -785719036, i32* %27
  br label %88

; <label>:43:                                     ; preds = %28
  %44 = load i32, i32* @x.383
  %45 = load i32, i32* @y.384
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -1234418270, i32 1624137902
  store i32 %69, i32* %27
  br label %88

; <label>:70:                                     ; preds = %28
  %71 = load i32, i32* @x.383
  %72 = load i32, i32* @y.384
  %73 = add i32 %71, 1607720681
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, 1607720681
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  %85 = select i1 %83, i32 1553022942, i32 1624137902
  store i32 %85, i32* %27
  br label %88

; <label>:86:                                     ; preds = %28
  ret void

; <label>:87:                                     ; preds = %28
  store i32 -1234418270, i32* %27
  br label %88

; <label>:88:                                     ; preds = %87, %70, %43, %36, %31, %30
  br label %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::array.5"* @_ZNSt6vectorISt5arrayIxLm2EESaIS1_EEixEm(%"class.std::vector.0"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl", %"struct.std::_Vector_base<std::array<long long, 2>, std::allocator<std::array<long long, 2> > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.std::array.5"*, %"struct.std::array.5"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"struct.std::array.5", %"struct.std::array.5"* %9, i64 %10
  ret %"struct.std::array.5"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.12"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv(%"class.__gnu_cxx::__normal_iterator.12"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.12"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.12"* %0, %"class.__gnu_cxx::__normal_iterator.12"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds i32, i32* %5, i32 1
  store i32* %6, i32** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator.12"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.8"* dereferenceable(1), i32*, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.8"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %4, align 8
  %8 = bitcast %"class.std::allocator.8"* %7 to %"class.__gnu_cxx::new_allocator.9"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.9"* %8, i32* %9, i32* dereferenceable(4) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_(%"class.std::vector.6"*, i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.6"*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %3, align 8
  store i32* %1, i32** %4, align 8
  %10 = load %"class.std::vector.6"*, %"class.std::vector.6"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(%"class.std::vector.6"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %13 = load i64, i64* %5, align 8
  %14 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.7"* %12, i64 %13)
  store i32* %14, i32** %6, align 8
  %15 = load i32*, i32** %6, align 8
  store i32* %15, i32** %7, align 8
  %16 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %17 to %"class.std::allocator.8"*
  %19 = load i32*, i32** %6, align 8
  %20 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.6"* %10) #3
  %21 = getelementptr inbounds i32, i32* %19, i64 %20
  %22 = load i32*, i32** %4, align 8
  %23 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %22) #3
  invoke void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.8"* dereferenceable(1) %18, i32* %21, i32* dereferenceable(4) %23)
          to label %24 unwind label %124

; <label>:24:                                     ; preds = %2
  %25 = load i32, i32* @x.391
  %26 = load i32, i32* @y.392
  %27 = add i32 %25, 509742069
  %28 = sub i32 %27, 1
  %29 = sub i32 %28, 509742069
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  br i1 %37, label %39, label %615

; <label>:39:                                     ; preds = %24, %615
  store i32* null, i32** %7, align 8
  %40 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %41 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %40, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %41, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %45, i32 0, i32 1
  %47 = load i32*, i32** %46, align 8
  %48 = load i32*, i32** %6, align 8
  %49 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %50 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %49) #3
  %51 = load i32, i32* @x.391
  %52 = load i32, i32* @y.392
  %53 = add i32 %51, -2042780047
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, -2042780047
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  br i1 %75, label %77, label %615

; <label>:77:                                     ; preds = %39
  %78 = invoke i32* @_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_(i32* %43, i32* %47, i32* %48, %"class.std::allocator.8"* dereferenceable(1) %50)
          to label %79 unwind label %124

; <label>:79:                                     ; preds = %77
  %80 = load i32, i32* @x.391
  %81 = load i32, i32* @y.392
  %82 = add i32 %80, 345748406
  %83 = sub i32 %82, 1
  %84 = sub i32 %83, 345748406
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = xor i1 %88, true
  %91 = xor i1 %89, true
  %92 = xor i1 true, true
  %93 = and i1 %90, true
  %94 = and i1 %88, %92
  %95 = and i1 %91, true
  %96 = and i1 %89, %92
  %97 = or i1 %93, %94
  %98 = or i1 %95, %96
  %99 = xor i1 %97, %98
  %100 = or i1 %90, %91
  %101 = xor i1 %100, true
  %102 = or i1 true, %92
  %103 = and i1 %101, %102
  %104 = or i1 %99, %103
  %105 = or i1 %88, %89
  br i1 %104, label %106, label %627

; <label>:106:                                    ; preds = %79, %627
  store i32* %78, i32** %7, align 8
  %107 = load i32*, i32** %7, align 8
  %108 = getelementptr inbounds i32, i32* %107, i32 1
  store i32* %108, i32** %7, align 8
  %109 = load i32, i32* @x.391
  %110 = load i32, i32* @y.392
  %111 = sub i32 %109, 1190250042
  %112 = sub i32 %111, 1
  %113 = add i32 %112, 1190250042
  %114 = sub i32 %109, 1
  %115 = mul i32 %109, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %110, 10
  %119 = and i1 %117, %118
  %120 = xor i1 %117, %118
  %121 = or i1 %119, %120
  %122 = or i1 %117, %118
  br i1 %121, label %123, label %627

; <label>:123:                                    ; preds = %106
  br label %419

; <label>:124:                                    ; preds = %77, %2
  %125 = load i32, i32* @x.391
  %126 = load i32, i32* @y.392
  %127 = sub i32 %125, -570327279
  %128 = sub i32 %127, 1
  %129 = add i32 %128, -570327279
  %130 = sub i32 %125, 1
  %131 = mul i32 %125, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %126, 10
  %135 = xor i1 %133, true
  %136 = xor i1 %134, true
  %137 = xor i1 false, true
  %138 = and i1 %135, false
  %139 = and i1 %133, %137
  %140 = and i1 %136, false
  %141 = and i1 %134, %137
  %142 = or i1 %138, %139
  %143 = or i1 %140, %141
  %144 = xor i1 %142, %143
  %145 = or i1 %135, %136
  %146 = xor i1 %145, true
  %147 = or i1 false, %137
  %148 = and i1 %146, %147
  %149 = or i1 %144, %148
  %150 = or i1 %133, %134
  br i1 %149, label %151, label %630

; <label>:151:                                    ; preds = %124, %630
  %152 = landingpad { i8*, i32 }
          catch i8* null
  %153 = extractvalue { i8*, i32 } %152, 0
  store i8* %153, i8** %8, align 8
  %154 = extractvalue { i8*, i32 } %152, 1
  store i32 %154, i32* %9, align 4
  %155 = load i32, i32* @x.391
  %156 = load i32, i32* @y.392
  %157 = add i32 %155, 117767362
  %158 = sub i32 %157, 1
  %159 = sub i32 %158, 117767362
  %160 = sub i32 %155, 1
  %161 = mul i32 %155, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %156, 10
  %165 = xor i1 %163, true
  %166 = xor i1 %164, true
  %167 = xor i1 true, true
  %168 = and i1 %165, true
  %169 = and i1 %163, %167
  %170 = and i1 %166, true
  %171 = and i1 %164, %167
  %172 = or i1 %168, %169
  %173 = or i1 %170, %171
  %174 = xor i1 %172, %173
  %175 = or i1 %165, %166
  %176 = xor i1 %175, true
  %177 = or i1 true, %167
  %178 = and i1 %176, %177
  %179 = or i1 %174, %178
  %180 = or i1 %163, %164
  br i1 %179, label %181, label %630

; <label>:181:                                    ; preds = %151
  br label %182

; <label>:182:                                    ; preds = %181
  %183 = load i32, i32* @x.391
  %184 = load i32, i32* @y.392
  %185 = sub i32 %183, -605040161
  %186 = sub i32 %185, 1
  %187 = add i32 %186, -605040161
  %188 = sub i32 %183, 1
  %189 = mul i32 %183, %187
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %184, 10
  %193 = xor i1 %191, true
  %194 = xor i1 %192, true
  %195 = xor i1 false, true
  %196 = and i1 %193, false
  %197 = and i1 %191, %195
  %198 = and i1 %194, false
  %199 = and i1 %192, %195
  %200 = or i1 %196, %197
  %201 = or i1 %198, %199
  %202 = xor i1 %200, %201
  %203 = or i1 %193, %194
  %204 = xor i1 %203, true
  %205 = or i1 false, %195
  %206 = and i1 %204, %205
  %207 = or i1 %202, %206
  %208 = or i1 %191, %192
  br i1 %207, label %209, label %634

; <label>:209:                                    ; preds = %182, %634
  %210 = load i8*, i8** %8, align 8
  %211 = call i8* @__cxa_begin_catch(i8* %210) #3
  %212 = load i32*, i32** %7, align 8
  %213 = icmp ne i32* %212, null
  %214 = load i32, i32* @x.391
  %215 = load i32, i32* @y.392
  %216 = add i32 %214, -2033463094
  %217 = sub i32 %216, 1
  %218 = sub i32 %217, -2033463094
  %219 = sub i32 %214, 1
  %220 = mul i32 %214, %218
  %221 = urem i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %215, 10
  %224 = and i1 %222, %223
  %225 = xor i1 %222, %223
  %226 = or i1 %224, %225
  %227 = or i1 %222, %223
  br i1 %226, label %228, label %634

; <label>:228:                                    ; preds = %209
  br i1 %213, label %241, label %229

; <label>:229:                                    ; preds = %228
  %230 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %231 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %230, i32 0, i32 0
  %232 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %231 to %"class.std::allocator.8"*
  %233 = load i32*, i32** %6, align 8
  %234 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.6"* %10) #3
  %235 = getelementptr inbounds i32, i32* %233, i64 %234
  invoke void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.8"* dereferenceable(1) %232, i32* %235)
          to label %236 unwind label %237

; <label>:236:                                    ; preds = %229
  br label %319

; <label>:237:                                    ; preds = %364, %363, %275, %229
  %238 = landingpad { i8*, i32 }
          cleanup
  %239 = extractvalue { i8*, i32 } %238, 0
  store i8* %239, i8** %8, align 8
  %240 = extractvalue { i8*, i32 } %238, 1
  store i32 %240, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %365 unwind label %539

; <label>:241:                                    ; preds = %228
  %242 = load i32, i32* @x.391
  %243 = load i32, i32* @y.392
  %244 = sub i32 %242, 195157387
  %245 = sub i32 %244, 1
  %246 = add i32 %245, 195157387
  %247 = sub i32 %242, 1
  %248 = mul i32 %242, %246
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %243, 10
  %252 = and i1 %250, %251
  %253 = xor i1 %250, %251
  %254 = or i1 %252, %253
  %255 = or i1 %250, %251
  br i1 %254, label %256, label %639

; <label>:256:                                    ; preds = %241, %639
  %257 = load i32*, i32** %6, align 8
  %258 = load i32*, i32** %7, align 8
  %259 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %260 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %259) #3
  %261 = load i32, i32* @x.391
  %262 = load i32, i32* @y.392
  %263 = sub i32 %261, 1069667760
  %264 = sub i32 %263, 1
  %265 = add i32 %264, 1069667760
  %266 = sub i32 %261, 1
  %267 = mul i32 %261, %265
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %262, 10
  %271 = and i1 %269, %270
  %272 = xor i1 %269, %270
  %273 = or i1 %271, %272
  %274 = or i1 %269, %270
  br i1 %273, label %275, label %639

; <label>:275:                                    ; preds = %256
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %257, i32* %258, %"class.std::allocator.8"* dereferenceable(1) %260)
          to label %276 unwind label %237

; <label>:276:                                    ; preds = %275
  %277 = load i32, i32* @x.391
  %278 = load i32, i32* @y.392
  %279 = add i32 %277, 196751103
  %280 = sub i32 %279, 1
  %281 = sub i32 %280, 196751103
  %282 = sub i32 %277, 1
  %283 = mul i32 %277, %281
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %278, 10
  %287 = xor i1 %285, true
  %288 = xor i1 %286, true
  %289 = xor i1 true, true
  %290 = and i1 %287, true
  %291 = and i1 %285, %289
  %292 = and i1 %288, true
  %293 = and i1 %286, %289
  %294 = or i1 %290, %291
  %295 = or i1 %292, %293
  %296 = xor i1 %294, %295
  %297 = or i1 %287, %288
  %298 = xor i1 %297, true
  %299 = or i1 true, %289
  %300 = and i1 %298, %299
  %301 = or i1 %296, %300
  %302 = or i1 %285, %286
  br i1 %301, label %303, label %644

; <label>:303:                                    ; preds = %276, %644
  %304 = load i32, i32* @x.391
  %305 = load i32, i32* @y.392
  %306 = sub i32 %304, -1849659497
  %307 = sub i32 %306, 1
  %308 = add i32 %307, -1849659497
  %309 = sub i32 %304, 1
  %310 = mul i32 %304, %308
  %311 = urem i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %305, 10
  %314 = and i1 %312, %313
  %315 = xor i1 %312, %313
  %316 = or i1 %314, %315
  %317 = or i1 %312, %313
  br i1 %316, label %318, label %644

; <label>:318:                                    ; preds = %303
  br label %319

; <label>:319:                                    ; preds = %318, %236
  %320 = load i32, i32* @x.391
  %321 = load i32, i32* @y.392
  %322 = sub i32 %320, 1097332869
  %323 = sub i32 %322, 1
  %324 = add i32 %323, 1097332869
  %325 = sub i32 %320, 1
  %326 = mul i32 %320, %324
  %327 = urem i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %321, 10
  %330 = and i1 %328, %329
  %331 = xor i1 %328, %329
  %332 = or i1 %330, %331
  %333 = or i1 %328, %329
  br i1 %332, label %334, label %645

; <label>:334:                                    ; preds = %319, %645
  %335 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %336 = load i32*, i32** %6, align 8
  %337 = load i64, i64* %5, align 8
  %338 = load i32, i32* @x.391
  %339 = load i32, i32* @y.392
  %340 = sub i32 0, 1
  %341 = add i32 %338, %340
  %342 = sub i32 %338, 1
  %343 = mul i32 %338, %341
  %344 = urem i32 %343, 2
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %339, 10
  %347 = xor i1 %345, true
  %348 = xor i1 %346, true
  %349 = xor i1 true, true
  %350 = and i1 %347, true
  %351 = and i1 %345, %349
  %352 = and i1 %348, true
  %353 = and i1 %346, %349
  %354 = or i1 %350, %351
  %355 = or i1 %352, %353
  %356 = xor i1 %354, %355
  %357 = or i1 %347, %348
  %358 = xor i1 %357, true
  %359 = or i1 true, %349
  %360 = and i1 %358, %359
  %361 = or i1 %356, %360
  %362 = or i1 %345, %346
  br i1 %361, label %363, label %645

; <label>:363:                                    ; preds = %334
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.7"* %335, i32* %336, i64 %337)
          to label %364 unwind label %237

; <label>:364:                                    ; preds = %363
  invoke void @__cxa_rethrow() #12
          to label %572 unwind label %237

; <label>:365:                                    ; preds = %237
  %366 = load i32, i32* @x.391
  %367 = load i32, i32* @y.392
  %368 = sub i32 %366, 606508744
  %369 = sub i32 %368, 1
  %370 = add i32 %369, 606508744
  %371 = sub i32 %366, 1
  %372 = mul i32 %366, %370
  %373 = urem i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %367, 10
  %376 = xor i1 %374, true
  %377 = xor i1 %375, true
  %378 = xor i1 true, true
  %379 = and i1 %376, true
  %380 = and i1 %374, %378
  %381 = and i1 %377, true
  %382 = and i1 %375, %378
  %383 = or i1 %379, %380
  %384 = or i1 %381, %382
  %385 = xor i1 %383, %384
  %386 = or i1 %376, %377
  %387 = xor i1 %386, true
  %388 = or i1 true, %378
  %389 = and i1 %387, %388
  %390 = or i1 %385, %389
  %391 = or i1 %374, %375
  br i1 %390, label %392, label %649

; <label>:392:                                    ; preds = %365, %649
  %393 = load i32, i32* @x.391
  %394 = load i32, i32* @y.392
  %395 = sub i32 0, 1
  %396 = add i32 %393, %395
  %397 = sub i32 %393, 1
  %398 = mul i32 %393, %396
  %399 = urem i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %394, 10
  %402 = xor i1 %400, true
  %403 = xor i1 %401, true
  %404 = xor i1 true, true
  %405 = and i1 %402, true
  %406 = and i1 %400, %404
  %407 = and i1 %403, true
  %408 = and i1 %401, %404
  %409 = or i1 %405, %406
  %410 = or i1 %407, %408
  %411 = xor i1 %409, %410
  %412 = or i1 %402, %403
  %413 = xor i1 %412, true
  %414 = or i1 true, %404
  %415 = and i1 %413, %414
  %416 = or i1 %411, %415
  %417 = or i1 %400, %401
  br i1 %416, label %418, label %649

; <label>:418:                                    ; preds = %392
  br label %505

; <label>:419:                                    ; preds = %123
  %420 = load i32, i32* @x.391
  %421 = load i32, i32* @y.392
  %422 = add i32 %420, 1734056280
  %423 = sub i32 %422, 1
  %424 = sub i32 %423, 1734056280
  %425 = sub i32 %420, 1
  %426 = mul i32 %420, %424
  %427 = urem i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = icmp slt i32 %421, 10
  %430 = and i1 %428, %429
  %431 = xor i1 %428, %429
  %432 = or i1 %430, %431
  %433 = or i1 %428, %429
  br i1 %432, label %434, label %650

; <label>:434:                                    ; preds = %419, %650
  %435 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %436 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %435, i32 0, i32 0
  %437 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %436, i32 0, i32 0
  %438 = load i32*, i32** %437, align 8
  %439 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %440 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %439, i32 0, i32 0
  %441 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %440, i32 0, i32 1
  %442 = load i32*, i32** %441, align 8
  %443 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %444 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %443) #3
  call void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %438, i32* %442, %"class.std::allocator.8"* dereferenceable(1) %444)
  %445 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %446 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %447 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %446, i32 0, i32 0
  %448 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %447, i32 0, i32 0
  %449 = load i32*, i32** %448, align 8
  %450 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %451 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %450, i32 0, i32 0
  %452 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %451, i32 0, i32 2
  %453 = load i32*, i32** %452, align 8
  %454 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %455 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %454, i32 0, i32 0
  %456 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %455, i32 0, i32 0
  %457 = load i32*, i32** %456, align 8
  %458 = ptrtoint i32* %453 to i64
  %459 = ptrtoint i32* %457 to i64
  %460 = sub i64 0, %459
  %461 = add i64 %458, %460
  %462 = sub i64 %458, %459
  %463 = sdiv exact i64 %461, 4
  call void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.7"* %445, i32* %449, i64 %463)
  %464 = load i32*, i32** %6, align 8
  %465 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %466 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %465, i32 0, i32 0
  %467 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %466, i32 0, i32 0
  store i32* %464, i32** %467, align 8
  %468 = load i32*, i32** %7, align 8
  %469 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %470 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %469, i32 0, i32 0
  %471 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %470, i32 0, i32 1
  store i32* %468, i32** %471, align 8
  %472 = load i32*, i32** %6, align 8
  %473 = load i64, i64* %5, align 8
  %474 = getelementptr inbounds i32, i32* %472, i64 %473
  %475 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %476 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %475, i32 0, i32 0
  %477 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %476, i32 0, i32 2
  store i32* %474, i32** %477, align 8
  %478 = load i32, i32* @x.391
  %479 = load i32, i32* @y.392
  %480 = sub i32 %478, -77258125
  %481 = sub i32 %480, 1
  %482 = add i32 %481, -77258125
  %483 = sub i32 %478, 1
  %484 = mul i32 %478, %482
  %485 = urem i32 %484, 2
  %486 = icmp eq i32 %485, 0
  %487 = icmp slt i32 %479, 10
  %488 = xor i1 %486, true
  %489 = xor i1 %487, true
  %490 = xor i1 true, true
  %491 = and i1 %488, true
  %492 = and i1 %486, %490
  %493 = and i1 %489, true
  %494 = and i1 %487, %490
  %495 = or i1 %491, %492
  %496 = or i1 %493, %494
  %497 = xor i1 %495, %496
  %498 = or i1 %488, %489
  %499 = xor i1 %498, true
  %500 = or i1 true, %490
  %501 = and i1 %499, %500
  %502 = or i1 %497, %501
  %503 = or i1 %486, %487
  br i1 %502, label %504, label %650

; <label>:504:                                    ; preds = %434
  ret void

; <label>:505:                                    ; preds = %418
  %506 = load i32, i32* @x.391
  %507 = load i32, i32* @y.392
  %508 = add i32 %506, 268145842
  %509 = sub i32 %508, 1
  %510 = sub i32 %509, 268145842
  %511 = sub i32 %506, 1
  %512 = mul i32 %506, %510
  %513 = urem i32 %512, 2
  %514 = icmp eq i32 %513, 0
  %515 = icmp slt i32 %507, 10
  %516 = and i1 %514, %515
  %517 = xor i1 %514, %515
  %518 = or i1 %516, %517
  %519 = or i1 %514, %515
  br i1 %518, label %520, label %709

; <label>:520:                                    ; preds = %505, %709
  %521 = load i8*, i8** %8, align 8
  %522 = load i32, i32* %9, align 4
  %523 = insertvalue { i8*, i32 } undef, i8* %521, 0
  %524 = insertvalue { i8*, i32 } %523, i32 %522, 1
  %525 = load i32, i32* @x.391
  %526 = load i32, i32* @y.392
  %527 = sub i32 0, 1
  %528 = add i32 %525, %527
  %529 = sub i32 %525, 1
  %530 = mul i32 %525, %528
  %531 = urem i32 %530, 2
  %532 = icmp eq i32 %531, 0
  %533 = icmp slt i32 %526, 10
  %534 = and i1 %532, %533
  %535 = xor i1 %532, %533
  %536 = or i1 %534, %535
  %537 = or i1 %532, %533
  br i1 %536, label %538, label %709

; <label>:538:                                    ; preds = %520
  resume { i8*, i32 } %524

; <label>:539:                                    ; preds = %237
  %540 = load i32, i32* @x.391
  %541 = load i32, i32* @y.392
  %542 = sub i32 %540, -698803997
  %543 = sub i32 %542, 1
  %544 = add i32 %543, -698803997
  %545 = sub i32 %540, 1
  %546 = mul i32 %540, %544
  %547 = urem i32 %546, 2
  %548 = icmp eq i32 %547, 0
  %549 = icmp slt i32 %541, 10
  %550 = and i1 %548, %549
  %551 = xor i1 %548, %549
  %552 = or i1 %550, %551
  %553 = or i1 %548, %549
  br i1 %552, label %554, label %714

; <label>:554:                                    ; preds = %539, %714
  %555 = landingpad { i8*, i32 }
          catch i8* null
  %556 = extractvalue { i8*, i32 } %555, 0
  call void @__clang_call_terminate(i8* %556) #11
  %557 = load i32, i32* @x.391
  %558 = load i32, i32* @y.392
  %559 = add i32 %557, -1588653426
  %560 = sub i32 %559, 1
  %561 = sub i32 %560, -1588653426
  %562 = sub i32 %557, 1
  %563 = mul i32 %557, %561
  %564 = urem i32 %563, 2
  %565 = icmp eq i32 %564, 0
  %566 = icmp slt i32 %558, 10
  %567 = and i1 %565, %566
  %568 = xor i1 %565, %566
  %569 = or i1 %567, %568
  %570 = or i1 %565, %566
  br i1 %569, label %571, label %714

; <label>:571:                                    ; preds = %554
  unreachable

; <label>:572:                                    ; preds = %364
  %573 = load i32, i32* @x.391
  %574 = load i32, i32* @y.392
  %575 = sub i32 %573, 1481162658
  %576 = sub i32 %575, 1
  %577 = add i32 %576, 1481162658
  %578 = sub i32 %573, 1
  %579 = mul i32 %573, %577
  %580 = urem i32 %579, 2
  %581 = icmp eq i32 %580, 0
  %582 = icmp slt i32 %574, 10
  %583 = xor i1 %581, true
  %584 = xor i1 %582, true
  %585 = xor i1 false, true
  %586 = and i1 %583, false
  %587 = and i1 %581, %585
  %588 = and i1 %584, false
  %589 = and i1 %582, %585
  %590 = or i1 %586, %587
  %591 = or i1 %588, %589
  %592 = xor i1 %590, %591
  %593 = or i1 %583, %584
  %594 = xor i1 %593, true
  %595 = or i1 false, %585
  %596 = and i1 %594, %595
  %597 = or i1 %592, %596
  %598 = or i1 %581, %582
  br i1 %597, label %599, label %717

; <label>:599:                                    ; preds = %572, %717
  %600 = load i32, i32* @x.391
  %601 = load i32, i32* @y.392
  %602 = sub i32 %600, -1888098879
  %603 = sub i32 %602, 1
  %604 = add i32 %603, -1888098879
  %605 = sub i32 %600, 1
  %606 = mul i32 %600, %604
  %607 = urem i32 %606, 2
  %608 = icmp eq i32 %607, 0
  %609 = icmp slt i32 %601, 10
  %610 = and i1 %608, %609
  %611 = xor i1 %608, %609
  %612 = or i1 %610, %611
  %613 = or i1 %608, %609
  br i1 %612, label %614, label %717

; <label>:614:                                    ; preds = %599
  unreachable

; <label>:615:                                    ; preds = %39, %24
  store i32* null, i32** %7, align 8
  %616 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %617 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %616, i32 0, i32 0
  %618 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %617, i32 0, i32 0
  %619 = load i32*, i32** %618, align 8
  %620 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %621 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %620, i32 0, i32 0
  %622 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %621, i32 0, i32 1
  %623 = load i32*, i32** %622, align 8
  %624 = load i32*, i32** %6, align 8
  %625 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %626 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %625) #3
  br label %39

; <label>:627:                                    ; preds = %106, %79
  store i32* %78, i32** %7, align 8
  %628 = load i32*, i32** %7, align 8
  %629 = getelementptr inbounds i32, i32* %628, i32 1
  store i32* %629, i32** %7, align 8
  br label %106

; <label>:630:                                    ; preds = %151, %124
  %631 = landingpad { i8*, i32 }
          catch i8* null
  %632 = extractvalue { i8*, i32 } %631, 0
  store i8* %632, i8** %8, align 8
  %633 = extractvalue { i8*, i32 } %631, 1
  store i32 %633, i32* %9, align 4
  br label %151

; <label>:634:                                    ; preds = %209, %182
  %635 = load i8*, i8** %8, align 8
  %636 = call i8* @__cxa_begin_catch(i8* %635) #3
  %637 = load i32*, i32** %7, align 8
  %638 = icmp ne i32* %637, null
  br label %209

; <label>:639:                                    ; preds = %256, %241
  %640 = load i32*, i32** %6, align 8
  %641 = load i32*, i32** %7, align 8
  %642 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %643 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %642) #3
  br label %256

; <label>:644:                                    ; preds = %303, %276
  br label %303

; <label>:645:                                    ; preds = %334, %319
  %646 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %647 = load i32*, i32** %6, align 8
  %648 = load i64, i64* %5, align 8
  br label %334

; <label>:649:                                    ; preds = %392, %365
  br label %392

; <label>:650:                                    ; preds = %434, %419
  %651 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %652 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %651, i32 0, i32 0
  %653 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %652, i32 0, i32 0
  %654 = load i32*, i32** %653, align 8
  %655 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %656 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %655, i32 0, i32 0
  %657 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %656, i32 0, i32 1
  %658 = load i32*, i32** %657, align 8
  %659 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %660 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %659) #3
  call void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %654, i32* %658, %"class.std::allocator.8"* dereferenceable(1) %660)
  %661 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %662 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %663 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %662, i32 0, i32 0
  %664 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %663, i32 0, i32 0
  %665 = load i32*, i32** %664, align 8
  %666 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %667 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %666, i32 0, i32 0
  %668 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %667, i32 0, i32 2
  %669 = load i32*, i32** %668, align 8
  %670 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %671 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %670, i32 0, i32 0
  %672 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %671, i32 0, i32 0
  %673 = load i32*, i32** %672, align 8
  %674 = ptrtoint i32* %669 to i64
  %675 = ptrtoint i32* %673 to i64
  %676 = sub i64 0, 1326640600461344074
  %677 = sub i64 %676, %674
  %678 = add i64 %677, 1326640600461344074
  %679 = sub i64 0, %674
  %680 = add i64 %678, -4952742254381407746
  %681 = add i64 %680, %675
  %682 = sub i64 %681, -4952742254381407746
  %683 = add i64 %678, %675
  %684 = sub i64 0, %675
  %685 = add i64 %674, %684
  %686 = sub i64 %674, %675
  %687 = sub i64 0, %685
  %688 = add i64 0, %687
  %689 = sub i64 0, %685
  %690 = add i64 %688, 8105252146908579441
  %691 = add i64 %690, 4
  %692 = sub i64 %691, 8105252146908579441
  %693 = add i64 %688, 4
  %694 = sdiv exact i64 %685, 4
  call void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.7"* %661, i32* %665, i64 %694)
  %695 = load i32*, i32** %6, align 8
  %696 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %697 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %696, i32 0, i32 0
  %698 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %697, i32 0, i32 0
  store i32* %695, i32** %698, align 8
  %699 = load i32*, i32** %7, align 8
  %700 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %701 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %700, i32 0, i32 0
  %702 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %701, i32 0, i32 1
  store i32* %699, i32** %702, align 8
  %703 = load i32*, i32** %6, align 8
  %704 = load i64, i64* %5, align 8
  %705 = getelementptr inbounds i32, i32* %703, i64 %704
  %706 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %707 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %706, i32 0, i32 0
  %708 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %707, i32 0, i32 2
  store i32* %705, i32** %708, align 8
  br label %434

; <label>:709:                                    ; preds = %520, %505
  %710 = load i8*, i8** %8, align 8
  %711 = load i32, i32* %9, align 4
  %712 = insertvalue { i8*, i32 } undef, i8* %710, 0
  %713 = insertvalue { i8*, i32 } %712, i32 %711, 1
  br label %520

; <label>:714:                                    ; preds = %554, %539
  %715 = landingpad { i8*, i32 }
          catch i8* null
  %716 = extractvalue { i8*, i32 } %715, 0
  call void @__clang_call_terminate(i8* %716) #11
  br label %554

; <label>:717:                                    ; preds = %599, %572
  br label %599
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.9"*, i32*, i32* dereferenceable(4)) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.393
  %7 = load i32, i32* @y.394
  %8 = add i32 %6, 78184316
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 78184316
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 901411038, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %78
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 901411038, label %20
    i32 -1648083839, label %40
    i32 823632153, label %66
    i32 33566002, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %78

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1648083839, i32 33566002
  store i32 %39, i32* %16
  br label %78

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  %42 = alloca i32*, align 8
  %43 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %41, align 8
  store i32* %1, i32** %42, align 8
  store i32* %2, i32** %43, align 8
  %44 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %41, align 8
  %45 = load i32*, i32** %42, align 8
  %46 = bitcast i32* %45 to i8*
  %47 = bitcast i8* %46 to i32*
  %48 = load i32*, i32** %43, align 8
  %49 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %48) #3
  %50 = load i32, i32* %49, align 4
  store i32 %50, i32* %47, align 4
  %51 = load i32, i32* @x.393
  %52 = load i32, i32* @y.394
  %53 = add i32 %51, -870060183
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, -870060183
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 823632153, i32 33566002
  store i32 %65, i32* %16
  br label %78

; <label>:66:                                     ; preds = %17
  ret void

; <label>:67:                                     ; preds = %17
  %68 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  %69 = alloca i32*, align 8
  %70 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %68, align 8
  store i32* %1, i32** %69, align 8
  store i32* %2, i32** %70, align 8
  %71 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %68, align 8
  %72 = load i32*, i32** %69, align 8
  %73 = bitcast i32* %72 to i8*
  %74 = bitcast i8* %73 to i32*
  %75 = load i32*, i32** %70, align 8
  %76 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %75) #3
  %77 = load i32, i32* %76, align 4
  store i32 %77, i32* %74, align 4
  store i32 -1648083839, i32* %16
  br label %78

; <label>:78:                                     ; preds = %67, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4)) #5 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(%"class.std::vector.6"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.std::vector.6"*
  %8 = alloca %"class.std::vector.6"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %8, align 8
  store i64 %1, i64* %9, align 8
  store i8* %2, i8** %10, align 8
  %13 = load %"class.std::vector.6"*, %"class.std::vector.6"** %8, align 8
  store %"class.std::vector.6"* %13, %"class.std::vector.6"** %7
  %14 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %7
  %15 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.6"* %14) #3
  %16 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %7
  %17 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.6"* %16) #3
  %18 = sub i64 0, %17
  %19 = add i64 %15, %18
  %20 = sub i64 %15, %17
  store i64 %19, i64* %6
  %21 = load i64, i64* %9, align 8
  store i64 %21, i64* %5
  %22 = alloca i32
  store i32 -1300882427, i32* %22
  %23 = alloca i64
  br label %24

; <label>:24:                                     ; preds = %3, %172
  %25 = load i32, i32* %22
  switch i32 %25, label %26 [
    i32 -1300882427, label %27
    i32 -175940836, label %32
    i32 -1784941862, label %34
    i32 -1053495099, label %62
    i32 -1279483225, label %102
    i32 -787859679, label %105
    i32 -1111926948, label %111
    i32 557119368, label %114
    i32 -129928652, label %116
    i32 -175056311, label %118
  ]

; <label>:26:                                     ; preds = %24
  br label %172

; <label>:27:                                     ; preds = %24
  %28 = load volatile i64, i64* %6
  %29 = load volatile i64, i64* %5
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i32 -175940836, i32 -1784941862
  store i32 %31, i32* %22
  br label %172

; <label>:32:                                     ; preds = %24
  %33 = load i8*, i8** %10, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %33) #12
  unreachable

; <label>:34:                                     ; preds = %24
  %35 = load i32, i32* @x.397
  %36 = load i32, i32* @y.398
  %37 = sub i32 %35, 867726623
  %38 = sub i32 %37, 1
  %39 = add i32 %38, 867726623
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 -1053495099, i32 -175056311
  store i32 %61, i32* %22
  br label %172

; <label>:62:                                     ; preds = %24
  %63 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %7
  %64 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.6"* %63) #3
  %65 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %7
  %66 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.6"* %65) #3
  store i64 %66, i64* %12, align 8
  %67 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %12, i64* dereferenceable(8) %9)
  %68 = load i64, i64* %67, align 8
  %69 = sub i64 0, %68
  %70 = sub i64 %64, %69
  %71 = add i64 %64, %68
  store i64 %70, i64* %11, align 8
  %72 = load i64, i64* %11, align 8
  %73 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %7
  %74 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.6"* %73) #3
  %75 = icmp ult i64 %72, %74
  store i1 %75, i1* %4
  %76 = load i32, i32* @x.397
  %77 = load i32, i32* @y.398
  %78 = sub i32 0, 1
  %79 = add i32 %76, %78
  %80 = sub i32 %76, 1
  %81 = mul i32 %76, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %77, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 true, true
  %88 = and i1 %85, true
  %89 = and i1 %83, %87
  %90 = and i1 %86, true
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 true, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  %101 = select i1 %99, i32 -1279483225, i32 -175056311
  store i32 %101, i32* %22
  br label %172

; <label>:102:                                    ; preds = %24
  %103 = load volatile i1, i1* %4
  %104 = select i1 %103, i32 -1111926948, i32 -787859679
  store i32 %104, i32* %22
  br label %172

; <label>:105:                                    ; preds = %24
  %106 = load i64, i64* %11, align 8
  %107 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %7
  %108 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.6"* %107) #3
  %109 = icmp ugt i64 %106, %108
  %110 = select i1 %109, i32 -1111926948, i32 557119368
  store i32 %110, i32* %22
  br label %172

; <label>:111:                                    ; preds = %24
  %112 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %7
  %113 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.6"* %112) #3
  store i32 -129928652, i32* %22
  store i64 %113, i64* %23
  br label %172

; <label>:114:                                    ; preds = %24
  %115 = load i64, i64* %11, align 8
  store i32 -129928652, i32* %22
  store i64 %115, i64* %23
  br label %172

; <label>:116:                                    ; preds = %24
  %117 = load i64, i64* %23
  ret i64 %117

; <label>:118:                                    ; preds = %24
  %119 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %7
  %120 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.6"* %119) #3
  %121 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %7
  %122 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.6"* %121) #3
  store i64 %122, i64* %12, align 8
  %123 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %12, i64* dereferenceable(8) %9)
  %124 = load i64, i64* %123, align 8
  %125 = add i64 %120, 4561238781774767542
  %126 = sub i64 %125, %124
  %127 = sub i64 %126, 4561238781774767542
  %128 = sub i64 %120, %124
  %129 = mul i64 %127, %124
  %130 = sub i64 0, -5544225337222776593
  %131 = sub i64 %130, %120
  %132 = add i64 %131, -5544225337222776593
  %133 = sub i64 0, %120
  %134 = add i64 %132, -8316863964342821427
  %135 = add i64 %134, %124
  %136 = sub i64 %135, -8316863964342821427
  %137 = add i64 %132, %124
  %138 = shl i64 %120, %124
  %139 = sub i64 0, 4645053033150020189
  %140 = sub i64 %139, %120
  %141 = add i64 %140, 4645053033150020189
  %142 = sub i64 0, %120
  %143 = sub i64 0, %124
  %144 = sub i64 %141, %143
  %145 = add i64 %141, %124
  %146 = sub i64 0, %124
  %147 = add i64 %120, %146
  %148 = sub i64 %120, %124
  %149 = mul i64 %147, %124
  %150 = sub i64 0, -6341217324237787764
  %151 = sub i64 %150, %120
  %152 = add i64 %151, -6341217324237787764
  %153 = sub i64 0, %120
  %154 = add i64 %152, 8156352912939840071
  %155 = add i64 %154, %124
  %156 = sub i64 %155, 8156352912939840071
  %157 = add i64 %152, %124
  %158 = sub i64 0, %124
  %159 = add i64 %120, %158
  %160 = sub i64 %120, %124
  %161 = mul i64 %159, %124
  %162 = shl i64 %120, %124
  %163 = shl i64 %120, %124
  %164 = sub i64 %120, -5202652333993915163
  %165 = add i64 %164, %124
  %166 = add i64 %165, -5202652333993915163
  %167 = add i64 %120, %124
  store i64 %166, i64* %11, align 8
  %168 = load i64, i64* %11, align 8
  %169 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %7
  %170 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.6"* %169) #3
  %171 = icmp ult i64 %168, %170
  store i32 -1053495099, i32* %22
  br label %172

; <label>:172:                                    ; preds = %118, %114, %111, %105, %102, %62, %34, %27, %26
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_(i32*, i32*, i32*, %"class.std::allocator.8"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.399
  %9 = load i32, i32* @y.400
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 1643498196, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %109
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1643498196, label %21
    i32 -1744620171, label %41
    i32 -1750927078, label %87
    i32 700536770, label %89
  ]

; <label>:20:                                     ; preds = %18
  br label %109

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1744620171, i32 700536770
  store i32 %40, i32* %17
  br label %109

; <label>:41:                                     ; preds = %18
  %42 = alloca i32*, align 8
  %43 = alloca i32*, align 8
  %44 = alloca i32*, align 8
  %45 = alloca %"class.std::allocator.8"*, align 8
  %46 = alloca %"class.std::move_iterator", align 8
  %47 = alloca %"class.std::move_iterator", align 8
  store i32* %0, i32** %42, align 8
  store i32* %1, i32** %43, align 8
  store i32* %2, i32** %44, align 8
  store %"class.std::allocator.8"* %3, %"class.std::allocator.8"** %45, align 8
  %48 = load i32*, i32** %42, align 8
  %49 = call i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %48)
  %50 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %46, i32 0, i32 0
  store i32* %49, i32** %50, align 8
  %51 = load i32*, i32** %43, align 8
  %52 = call i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %51)
  %53 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %47, i32 0, i32 0
  store i32* %52, i32** %53, align 8
  %54 = load i32*, i32** %44, align 8
  %55 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %45, align 8
  %56 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %46, i32 0, i32 0
  %57 = load i32*, i32** %56, align 8
  %58 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %47, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8
  %60 = call i32* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E(i32* %57, i32* %59, i32* %54, %"class.std::allocator.8"* dereferenceable(1) %55)
  store i32* %60, i32** %5
  %61 = load i32, i32* @x.399
  %62 = load i32, i32* @y.400
  %63 = sub i32 0, 1
  %64 = add i32 %61, %63
  %65 = sub i32 %61, 1
  %66 = mul i32 %61, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %62, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 false, true
  %73 = and i1 %70, false
  %74 = and i1 %68, %72
  %75 = and i1 %71, false
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 false, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  %86 = select i1 %84, i32 -1750927078, i32 700536770
  store i32 %86, i32* %17
  br label %109

; <label>:87:                                     ; preds = %18
  %88 = load volatile i32*, i32** %5
  ret i32* %88

; <label>:89:                                     ; preds = %18
  %90 = alloca i32*, align 8
  %91 = alloca i32*, align 8
  %92 = alloca i32*, align 8
  %93 = alloca %"class.std::allocator.8"*, align 8
  %94 = alloca %"class.std::move_iterator", align 8
  %95 = alloca %"class.std::move_iterator", align 8
  store i32* %0, i32** %90, align 8
  store i32* %1, i32** %91, align 8
  store i32* %2, i32** %92, align 8
  store %"class.std::allocator.8"* %3, %"class.std::allocator.8"** %93, align 8
  %96 = load i32*, i32** %90, align 8
  %97 = call i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %96)
  %98 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %94, i32 0, i32 0
  store i32* %97, i32** %98, align 8
  %99 = load i32*, i32** %91, align 8
  %100 = call i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %99)
  %101 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %95, i32 0, i32 0
  store i32* %100, i32** %101, align 8
  %102 = load i32*, i32** %92, align 8
  %103 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %93, align 8
  %104 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %94, i32 0, i32 0
  %105 = load i32*, i32** %104, align 8
  %106 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %95, i32 0, i32 0
  %107 = load i32*, i32** %106, align 8
  %108 = call i32* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E(i32* %105, i32* %107, i32* %102, %"class.std::allocator.8"* dereferenceable(1) %103)
  store i32 -1744620171, i32* %17
  br label %109

; <label>:109:                                    ; preds = %89, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.8"* dereferenceable(1), i32*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.401
  %6 = load i32, i32* @y.402
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1947180990, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %66
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1947180990, label %18
    i32 -1097718599, label %38
    i32 -1774351523, label %59
    i32 -757195008, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %66

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1097718599, i32 -757195008
  store i32 %37, i32* %14
  br label %66

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.8"*, align 8
  %40 = alloca i32*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %39, align 8
  store i32* %1, i32** %40, align 8
  %41 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %39, align 8
  %42 = bitcast %"class.std::allocator.8"* %41 to %"class.__gnu_cxx::new_allocator.9"*
  %43 = load i32*, i32** %40, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator.9"* %42, i32* %43)
  %44 = load i32, i32* @x.401
  %45 = load i32, i32* @y.402
  %46 = add i32 %44, 1460336081
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 1460336081
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -1774351523, i32 -757195008
  store i32 %58, i32* %14
  br label %66

; <label>:59:                                     ; preds = %15
  ret void

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::allocator.8"*, align 8
  %62 = alloca i32*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %61, align 8
  store i32* %1, i32** %62, align 8
  %63 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %61, align 8
  %64 = bitcast %"class.std::allocator.8"* %63 to %"class.__gnu_cxx::new_allocator.9"*
  %65 = load i32*, i32** %62, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator.9"* %64, i32* %65)
  store i32 -1097718599, i32* %14
  br label %66

; <label>:66:                                     ; preds = %60, %38, %18, %17
  br label %15
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.6"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.403
  %6 = load i32, i32* @y.404
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1515276643, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %79
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1515276643, label %18
    i32 346454183, label %38
    i32 1917822121, label %71
    i32 1380203902, label %73
  ]

; <label>:17:                                     ; preds = %15
  br label %79

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 346454183, i32 1380203902
  store i32 %37, i32* %14
  br label %79

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %39, align 8
  %40 = load %"class.std::vector.6"*, %"class.std::vector.6"** %39, align 8
  %41 = bitcast %"class.std::vector.6"* %40 to %"struct.std::_Vector_base.7"*
  %42 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %41) #3
  %43 = call i64 @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_(%"class.std::allocator.8"* dereferenceable(1) %42) #3
  store i64 %43, i64* %2
  %44 = load i32, i32* @x.403
  %45 = load i32, i32* @y.404
  %46 = sub i32 %44, -708112370
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -708112370
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 1917822121, i32 1380203902
  store i32 %70, i32* %14
  br label %79

; <label>:71:                                     ; preds = %15
  %72 = load volatile i64, i64* %2
  ret i64 %72

; <label>:73:                                     ; preds = %15
  %74 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %74, align 8
  %75 = load %"class.std::vector.6"*, %"class.std::vector.6"** %74, align 8
  %76 = bitcast %"class.std::vector.6"* %75 to %"struct.std::_Vector_base.7"*
  %77 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %76) #3
  %78 = call i64 @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_(%"class.std::allocator.8"* dereferenceable(1) %77) #3
  store i32 346454183, i32* %14
  br label %79

; <label>:79:                                     ; preds = %73, %38, %18, %17
  br label %15
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  %8 = load i64*, i64** %6, align 8
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %4
  %10 = load i64*, i64** %7, align 8
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 1064954287, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %73
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1064954287, label %16
    i32 1960894705, label %21
    i32 -187815369, label %37
    i32 1331862033, label %66
    i32 1725981190, label %67
    i32 1455857542, label %69
    i32 1184794613, label %71
  ]

; <label>:15:                                     ; preds = %13
  br label %73

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp ult i64 %17, %18
  %20 = select i1 %19, i32 1960894705, i32 1725981190
  store i32 %20, i32* %12
  br label %73

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.405
  %23 = load i32, i32* @y.406
  %24 = sub i32 %22, 1049731643
  %25 = sub i32 %24, 1
  %26 = add i32 %25, 1049731643
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 -187815369, i32 1184794613
  store i32 %36, i32* %12
  br label %73

; <label>:37:                                     ; preds = %13
  %38 = load i64*, i64** %7, align 8
  store i64* %38, i64** %5, align 8
  %39 = load i32, i32* @x.405
  %40 = load i32, i32* @y.406
  %41 = add i32 %39, 904569555
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, 904569555
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 1331862033, i32 1184794613
  store i32 %65, i32* %12
  br label %73

; <label>:66:                                     ; preds = %13
  store i32 1455857542, i32* %12
  br label %73

; <label>:67:                                     ; preds = %13
  %68 = load i64*, i64** %6, align 8
  store i64* %68, i64** %5, align 8
  store i32 1455857542, i32* %12
  br label %73

; <label>:69:                                     ; preds = %13
  %70 = load i64*, i64** %5, align 8
  ret i64* %70

; <label>:71:                                     ; preds = %13
  %72 = load i64*, i64** %7, align 8
  store i64* %72, i64** %5, align 8
  store i32 -187815369, i32* %12
  br label %73

; <label>:73:                                     ; preds = %71, %67, %66, %37, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_(%"class.std::allocator.8"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %2, align 8
  %3 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %2, align 8
  %4 = bitcast %"class.std::allocator.8"* %3 to %"class.__gnu_cxx::new_allocator.9"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.9"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.8"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.8"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.409
  %6 = load i32, i32* @y.410
  %7 = sub i32 %5, -999159846
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -999159846
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1461752357, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1461752357, label %19
    i32 1254976154, label %39
    i32 -1817283503, label %71
    i32 366556282, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1254976154, i32 366556282
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.7"*, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %40, align 8
  %41 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %42 to %"class.std::allocator.8"*
  store %"class.std::allocator.8"* %43, %"class.std::allocator.8"** %2
  %44 = load i32, i32* @x.409
  %45 = load i32, i32* @y.410
  %46 = sub i32 %44, -111829109
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -111829109
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -1817283503, i32 366556282
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile %"class.std::allocator.8"*, %"class.std::allocator.8"** %2
  ret %"class.std::allocator.8"* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"struct.std::_Vector_base.7"*, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %74, align 8
  %75 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %75, i32 0, i32 0
  %77 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %76 to %"class.std::allocator.8"*
  store i32 1254976154, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E(i32*, i32*, i32*, %"class.std::allocator.8"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::move_iterator", align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.8"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store i32* %0, i32** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %6, i32 0, i32 0
  store i32* %1, i32** %12, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.8"* %3, %"class.std::allocator.8"** %8, align 8
  %13 = bitcast %"class.std::move_iterator"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load i32*, i32** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = call i32* @_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %19, i32* %21, i32* %17)
  ret i32* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32*) #0 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  %4 = load i32*, i32** %3, align 8
  call void @_ZNSt13move_iteratorIPiEC2ES0_(%"class.std::move_iterator"* %2, i32* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  ret i32* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store i32* %0, i32** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store i32* %1, i32** %11, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load i32*, i32** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_(i32* %18, i32* %20, i32* %16)
  ret i32* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_(i32*, i32*, i32*) #0 comdat align 2 {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.std::move_iterator", align 8
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store i32* %0, i32** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store i32* %1, i32** %10, align 8
  store i32* %2, i32** %6, align 8
  %11 = bitcast %"class.std::move_iterator"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.std::move_iterator"* %8 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load i32*, i32** %6, align 8
  %16 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %7, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = call i32* @_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %17, i32* %19, i32* %15)
  ret i32* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.419
  %8 = load i32, i32* @y.420
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 858663919, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %85
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 858663919, label %20
    i32 681558979, label %28
    i32 669024891, label %63
    i32 343147854, label %65
  ]

; <label>:19:                                     ; preds = %17
  br label %85

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 681558979, i32 343147854
  store i32 %27, i32* %16
  br label %85

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::move_iterator", align 8
  %30 = alloca %"class.std::move_iterator", align 8
  %31 = alloca i32*, align 8
  %32 = alloca %"class.std::move_iterator", align 8
  %33 = alloca %"class.std::move_iterator", align 8
  %34 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %29, i32 0, i32 0
  store i32* %0, i32** %34, align 8
  %35 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %30, i32 0, i32 0
  store i32* %1, i32** %35, align 8
  store i32* %2, i32** %31, align 8
  %36 = bitcast %"class.std::move_iterator"* %32 to i8*
  %37 = bitcast %"class.std::move_iterator"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 8, i32 8, i1 false)
  %38 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %32, i32 0, i32 0
  %39 = load i32*, i32** %38, align 8
  %40 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %39)
  %41 = bitcast %"class.std::move_iterator"* %33 to i8*
  %42 = bitcast %"class.std::move_iterator"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %33, i32 0, i32 0
  %44 = load i32*, i32** %43, align 8
  %45 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %44)
  %46 = load i32*, i32** %31, align 8
  %47 = call i32* @_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_(i32* %40, i32* %45, i32* %46)
  store i32* %47, i32** %4
  %48 = load i32, i32* @x.419
  %49 = load i32, i32* @y.420
  %50 = sub i32 %48, 948804542
  %51 = sub i32 %50, 1
  %52 = add i32 %51, 948804542
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 669024891, i32 343147854
  store i32 %62, i32* %16
  br label %85

; <label>:63:                                     ; preds = %17
  %64 = load volatile i32*, i32** %4
  ret i32* %64

; <label>:65:                                     ; preds = %17
  %66 = alloca %"class.std::move_iterator", align 8
  %67 = alloca %"class.std::move_iterator", align 8
  %68 = alloca i32*, align 8
  %69 = alloca %"class.std::move_iterator", align 8
  %70 = alloca %"class.std::move_iterator", align 8
  %71 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %66, i32 0, i32 0
  store i32* %0, i32** %71, align 8
  %72 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %67, i32 0, i32 0
  store i32* %1, i32** %72, align 8
  store i32* %2, i32** %68, align 8
  %73 = bitcast %"class.std::move_iterator"* %69 to i8*
  %74 = bitcast %"class.std::move_iterator"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 8, i32 8, i1 false)
  %75 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %69, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %76)
  %78 = bitcast %"class.std::move_iterator"* %70 to i8*
  %79 = bitcast %"class.std::move_iterator"* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %78, i8* %79, i64 8, i32 8, i1 false)
  %80 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %70, i32 0, i32 0
  %81 = load i32*, i32** %80, align 8
  %82 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %81)
  %83 = load i32*, i32** %68, align 8
  %84 = call i32* @_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_(i32* %77, i32* %82, i32* %83)
  store i32 681558979, i32* %16
  br label %85

; <label>:85:                                     ; preds = %65, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %7)
  %9 = load i32*, i32** %5, align 8
  %10 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %9)
  %11 = load i32*, i32** %6, align 8
  %12 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %11)
  %13 = call i32* @_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_(i32* %8, i32* %10, i32* %12)
  ret i32* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32*) #0 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca %"class.std::move_iterator", align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  store i32* %0, i32** %4, align 8
  %5 = bitcast %"class.std::move_iterator"* %3 to i8*
  %6 = bitcast %"class.std::move_iterator"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = call i32* @_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_(i32* %8)
  ret i32* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.425
  %8 = load i32, i32* @y.426
  %9 = sub i32 %7, 792807190
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 792807190
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 654286481, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %75
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 654286481, label %21
    i32 1861861471, label %41
    i32 -40785753, label %64
    i32 -1999810764, label %66
  ]

; <label>:20:                                     ; preds = %18
  br label %75

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1861861471, i32 -1999810764
  store i32 %40, i32* %17
  br label %75

; <label>:41:                                     ; preds = %18
  %42 = alloca i32*, align 8
  %43 = alloca i32*, align 8
  %44 = alloca i32*, align 8
  %45 = alloca i8, align 1
  store i32* %0, i32** %42, align 8
  store i32* %1, i32** %43, align 8
  store i32* %2, i32** %44, align 8
  store i8 1, i8* %45, align 1
  %46 = load i32*, i32** %42, align 8
  %47 = load i32*, i32** %43, align 8
  %48 = load i32*, i32** %44, align 8
  %49 = call i32* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32* %46, i32* %47, i32* %48)
  store i32* %49, i32** %4
  %50 = load i32, i32* @x.425
  %51 = load i32, i32* @y.426
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 -40785753, i32 -1999810764
  store i32 %63, i32* %17
  br label %75

; <label>:64:                                     ; preds = %18
  %65 = load volatile i32*, i32** %4
  ret i32* %65

; <label>:66:                                     ; preds = %18
  %67 = alloca i32*, align 8
  %68 = alloca i32*, align 8
  %69 = alloca i32*, align 8
  %70 = alloca i8, align 1
  store i32* %0, i32** %67, align 8
  store i32* %1, i32** %68, align 8
  store i32* %2, i32** %69, align 8
  store i8 1, i8* %70, align 1
  %71 = load i32*, i32** %67, align 8
  %72 = load i32*, i32** %68, align 8
  %73 = load i32*, i32** %69, align 8
  %74 = call i32* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32* %71, i32* %72, i32* %73)
  store i32 1861861471, i32* %17
  br label %75

; <label>:75:                                     ; preds = %66, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32*, i32*, i32*) #5 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i64, align 8
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = load i32*, i32** %5, align 8
  %11 = ptrtoint i32* %9 to i64
  %12 = ptrtoint i32* %10 to i64
  %13 = sub i64 0, %12
  %14 = add i64 %11, %13
  %15 = sub i64 %11, %12
  %16 = sdiv exact i64 %14, 4
  store i64 %16, i64* %8, align 8
  %17 = load i64, i64* %8, align 8
  store i64 %17, i64* %4
  %18 = alloca i32
  store i32 977925119, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %37
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 977925119, label %22
    i32 -491993342, label %26
    i32 38724607, label %33
  ]

; <label>:21:                                     ; preds = %19
  br label %37

; <label>:22:                                     ; preds = %19
  %23 = load volatile i64, i64* %4
  %24 = icmp ne i64 %23, 0
  %25 = select i1 %24, i32 -491993342, i32 38724607
  store i32 %25, i32* %18
  br label %37

; <label>:26:                                     ; preds = %19
  %27 = load i32*, i32** %7, align 8
  %28 = bitcast i32* %27 to i8*
  %29 = load i32*, i32** %5, align 8
  %30 = bitcast i32* %29 to i8*
  %31 = load i64, i64* %8, align 8
  %32 = mul i64 4, %31
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %28, i8* %30, i64 %32, i32 4, i1 false)
  store i32 38724607, i32* %18
  br label %37

; <label>:33:                                     ; preds = %19
  %34 = load i32*, i32** %7, align 8
  %35 = load i64, i64* %8, align 8
  %36 = getelementptr inbounds i32, i32* %34, i64 %35
  ret i32* %36

; <label>:37:                                     ; preds = %26, %22, %21
  br label %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #10

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_(i32*) #0 comdat align 2 {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  store i32* %0, i32** %3, align 8
  %4 = call i32* @_ZNKSt13move_iteratorIPiE4baseEv(%"class.std::move_iterator"* %2)
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNKSt13move_iteratorIPiE4baseEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPiEC2ES0_(%"class.std::move_iterator"*, i32*) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.433
  %6 = load i32, i32* @y.434
  %7 = add i32 %5, -1149526232
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1149526232
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2047977688, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %55
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2047977688, label %19
    i32 1044803409, label %27
    i32 712936361, label %48
    i32 -1756282655, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %55

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1044803409, i32 -1756282655
  store i32 %26, i32* %15
  br label %55

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator"*, align 8
  %29 = alloca i32*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %28, align 8
  store i32* %1, i32** %29, align 8
  %30 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %28, align 8
  %31 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %30, i32 0, i32 0
  %32 = load i32*, i32** %29, align 8
  store i32* %32, i32** %31, align 8
  %33 = load i32, i32* @x.433
  %34 = load i32, i32* @y.434
  %35 = sub i32 %33, -1561952621
  %36 = sub i32 %35, 1
  %37 = add i32 %36, -1561952621
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 712936361, i32 -1756282655
  store i32 %47, i32* %15
  br label %55

; <label>:48:                                     ; preds = %16
  ret void

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::move_iterator"*, align 8
  %51 = alloca i32*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %50, align 8
  store i32* %1, i32** %51, align 8
  %52 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %50, align 8
  %53 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %52, i32 0, i32 0
  %54 = load i32*, i32** %51, align 8
  store i32* %54, i32** %53, align 8
  store i32 1044803409, i32* %15
  br label %55

; <label>:55:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator.9"*, i32*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  %4 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.6"* @_ZSt7__mergeIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_St20back_insert_iteratorIS5_ENS0_5__ops15_Iter_comp_iterISt7greaterIiEEEET1_T_SF_T0_SG_SE_T2_(i32*, i32*, i32*, i32*, %"class.std::vector.6"*) #0 comdat {
  %6 = alloca %"class.std::vector.6"*
  %7 = alloca i1
  %8 = alloca i1
  %9 = alloca %"class.std::back_insert_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %14 = alloca %"class.std::back_insert_iterator", align 8
  %15 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %19 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %20 = alloca %"class.std::back_insert_iterator", align 8
  %21 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %22 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %23 = alloca %"class.std::back_insert_iterator", align 8
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %10, i32 0, i32 0
  store i32* %0, i32** %24, align 8
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %11, i32 0, i32 0
  store i32* %1, i32** %25, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %12, i32 0, i32 0
  store i32* %2, i32** %26, align 8
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %13, i32 0, i32 0
  store i32* %3, i32** %27, align 8
  %28 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %14, i32 0, i32 0
  store %"class.std::vector.6"* %4, %"class.std::vector.6"** %28, align 8
  %29 = alloca i32
  store i32 1512402128, i32* %29
  %30 = alloca i1
  br label %31

; <label>:31:                                     ; preds = %5, %328
  %32 = load i32, i32* %29
  switch i32 %32, label %33 [
    i32 1512402128, label %34
    i32 -1759464231, label %50
    i32 144857824, label %78
    i32 114710611, label %81
    i32 -1669301104, label %109
    i32 1352935634, label %138
    i32 -2045677981, label %140
    i32 1499039909, label %143
    i32 1922369449, label %154
    i32 -1799071592, label %159
    i32 1786764939, label %164
    i32 -572053723, label %192
    i32 -1672429455, label %220
    i32 -1610237033, label %221
    i32 1523424028, label %236
    i32 579734534, label %291
    i32 -478008888, label %293
    i32 -2091323279, label %295
    i32 -2070234667, label %297
    i32 2061308325, label %299
  ]

; <label>:33:                                     ; preds = %31
  br label %328

; <label>:34:                                     ; preds = %31
  %35 = load i32, i32* @x.437
  %36 = load i32, i32* @y.438
  %37 = add i32 %35, -2070227798
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -2070227798
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -1759464231, i32 -478008888
  store i32 %49, i32* %29
  br label %328

; <label>:50:                                     ; preds = %31
  %51 = call zeroext i1 @_ZN9__gnu_cxxneIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %10, %"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %11) #3
  store i1 %51, i1* %8
  %52 = load i32, i32* @x.437
  %53 = load i32, i32* @y.438
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 144857824, i32 -478008888
  store i32 %77, i32* %29
  br label %328

; <label>:78:                                     ; preds = %31
  %79 = load volatile i1, i1* %8
  %80 = select i1 %79, i32 114710611, i32 -2045677981
  store i32 %80, i32* %29
  store i1 false, i1* %30
  br label %328

; <label>:81:                                     ; preds = %31
  %82 = load i32, i32* @x.437
  %83 = load i32, i32* @y.438
  %84 = add i32 %82, -1604787946
  %85 = sub i32 %84, 1
  %86 = sub i32 %85, -1604787946
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = xor i1 %90, true
  %93 = xor i1 %91, true
  %94 = xor i1 false, true
  %95 = and i1 %92, false
  %96 = and i1 %90, %94
  %97 = and i1 %93, false
  %98 = and i1 %91, %94
  %99 = or i1 %95, %96
  %100 = or i1 %97, %98
  %101 = xor i1 %99, %100
  %102 = or i1 %92, %93
  %103 = xor i1 %102, true
  %104 = or i1 false, %94
  %105 = and i1 %103, %104
  %106 = or i1 %101, %105
  %107 = or i1 %90, %91
  %108 = select i1 %106, i32 -1669301104, i32 -2091323279
  store i32 %108, i32* %29
  br label %328

; <label>:109:                                    ; preds = %31
  %110 = call zeroext i1 @_ZN9__gnu_cxxneIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %12, %"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %13) #3
  store i1 %110, i1* %7
  %111 = load i32, i32* @x.437
  %112 = load i32, i32* @y.438
  %113 = add i32 %111, -1527245076
  %114 = sub i32 %113, 1
  %115 = sub i32 %114, -1527245076
  %116 = sub i32 %111, 1
  %117 = mul i32 %111, %115
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %112, 10
  %121 = xor i1 %119, true
  %122 = xor i1 %120, true
  %123 = xor i1 false, true
  %124 = and i1 %121, false
  %125 = and i1 %119, %123
  %126 = and i1 %122, false
  %127 = and i1 %120, %123
  %128 = or i1 %124, %125
  %129 = or i1 %126, %127
  %130 = xor i1 %128, %129
  %131 = or i1 %121, %122
  %132 = xor i1 %131, true
  %133 = or i1 false, %123
  %134 = and i1 %132, %133
  %135 = or i1 %130, %134
  %136 = or i1 %119, %120
  %137 = select i1 %135, i32 1352935634, i32 -2091323279
  store i32 %137, i32* %29
  br label %328

; <label>:138:                                    ; preds = %31
  store i32 -2045677981, i32* %29
  %139 = load volatile i1, i1* %7
  store i1 %139, i1* %30
  br label %328

; <label>:140:                                    ; preds = %31
  %141 = load i1, i1* %30
  %142 = select i1 %141, i32 1499039909, i32 -1610237033
  store i32 %142, i32* %29
  br label %328

; <label>:143:                                    ; preds = %31
  %144 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %16 to i8*
  %145 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %144, i8* %145, i64 8, i32 8, i1 false)
  %146 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %17 to i8*
  %147 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %146, i8* %147, i64 8, i32 8, i1 false)
  %148 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %16, i32 0, i32 0
  %149 = load i32*, i32** %148, align 8
  %150 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %17, i32 0, i32 0
  %151 = load i32*, i32** %150, align 8
  %152 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt7greaterIiEEclINS_17__normal_iteratorIPiSt6vectorIiSaIiEEEESB_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %15, i32* %149, i32* %151)
  %153 = select i1 %152, i32 1922369449, i32 -1799071592
  store i32 %153, i32* %29
  br label %328

; <label>:154:                                    ; preds = %31
  %155 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.12"* %12) #3
  %156 = call dereferenceable(8) %"class.std::back_insert_iterator"* @_ZNSt20back_insert_iteratorISt6vectorIiSaIiEEEdeEv(%"class.std::back_insert_iterator"* %14)
  %157 = call dereferenceable(8) %"class.std::back_insert_iterator"* @_ZNSt20back_insert_iteratorISt6vectorIiSaIiEEEaSERKi(%"class.std::back_insert_iterator"* %156, i32* dereferenceable(4) %155)
  %158 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.12"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv(%"class.__gnu_cxx::__normal_iterator.12"* %12) #3
  store i32 1786764939, i32* %29
  br label %328

; <label>:159:                                    ; preds = %31
  %160 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.12"* %10) #3
  %161 = call dereferenceable(8) %"class.std::back_insert_iterator"* @_ZNSt20back_insert_iteratorISt6vectorIiSaIiEEEdeEv(%"class.std::back_insert_iterator"* %14)
  %162 = call dereferenceable(8) %"class.std::back_insert_iterator"* @_ZNSt20back_insert_iteratorISt6vectorIiSaIiEEEaSERKi(%"class.std::back_insert_iterator"* %161, i32* dereferenceable(4) %160)
  %163 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.12"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv(%"class.__gnu_cxx::__normal_iterator.12"* %10) #3
  store i32 1786764939, i32* %29
  br label %328

; <label>:164:                                    ; preds = %31
  %165 = load i32, i32* @x.437
  %166 = load i32, i32* @y.438
  %167 = sub i32 %165, 797381348
  %168 = sub i32 %167, 1
  %169 = add i32 %168, 797381348
  %170 = sub i32 %165, 1
  %171 = mul i32 %165, %169
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %166, 10
  %175 = xor i1 %173, true
  %176 = xor i1 %174, true
  %177 = xor i1 false, true
  %178 = and i1 %175, false
  %179 = and i1 %173, %177
  %180 = and i1 %176, false
  %181 = and i1 %174, %177
  %182 = or i1 %178, %179
  %183 = or i1 %180, %181
  %184 = xor i1 %182, %183
  %185 = or i1 %175, %176
  %186 = xor i1 %185, true
  %187 = or i1 false, %177
  %188 = and i1 %186, %187
  %189 = or i1 %184, %188
  %190 = or i1 %173, %174
  %191 = select i1 %189, i32 -572053723, i32 -2070234667
  store i32 %191, i32* %29
  br label %328

; <label>:192:                                    ; preds = %31
  %193 = call dereferenceable(8) %"class.std::back_insert_iterator"* @_ZNSt20back_insert_iteratorISt6vectorIiSaIiEEEppEv(%"class.std::back_insert_iterator"* %14)
  %194 = load i32, i32* @x.437
  %195 = load i32, i32* @y.438
  %196 = sub i32 0, 1
  %197 = add i32 %194, %196
  %198 = sub i32 %194, 1
  %199 = mul i32 %194, %197
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %195, 10
  %203 = xor i1 %201, true
  %204 = xor i1 %202, true
  %205 = xor i1 false, true
  %206 = and i1 %203, false
  %207 = and i1 %201, %205
  %208 = and i1 %204, false
  %209 = and i1 %202, %205
  %210 = or i1 %206, %207
  %211 = or i1 %208, %209
  %212 = xor i1 %210, %211
  %213 = or i1 %203, %204
  %214 = xor i1 %213, true
  %215 = or i1 false, %205
  %216 = and i1 %214, %215
  %217 = or i1 %212, %216
  %218 = or i1 %201, %202
  %219 = select i1 %217, i32 -1672429455, i32 -2070234667
  store i32 %219, i32* %29
  br label %328

; <label>:220:                                    ; preds = %31
  store i32 1512402128, i32* %29
  br label %328

; <label>:221:                                    ; preds = %31
  %222 = load i32, i32* @x.437
  %223 = load i32, i32* @y.438
  %224 = sub i32 0, 1
  %225 = add i32 %222, %224
  %226 = sub i32 %222, 1
  %227 = mul i32 %222, %225
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %223, 10
  %231 = and i1 %229, %230
  %232 = xor i1 %229, %230
  %233 = or i1 %231, %232
  %234 = or i1 %229, %230
  %235 = select i1 %233, i32 1523424028, i32 2061308325
  store i32 %235, i32* %29
  br label %328

; <label>:236:                                    ; preds = %31
  %237 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %18 to i8*
  %238 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %237, i8* %238, i64 8, i32 8, i1 false)
  %239 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %19 to i8*
  %240 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %239, i8* %240, i64 8, i32 8, i1 false)
  %241 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %21 to i8*
  %242 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %241, i8* %242, i64 8, i32 8, i1 false)
  %243 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %22 to i8*
  %244 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %243, i8* %244, i64 8, i32 8, i1 false)
  %245 = bitcast %"class.std::back_insert_iterator"* %23 to i8*
  %246 = bitcast %"class.std::back_insert_iterator"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %245, i8* %246, i64 8, i32 8, i1 false)
  %247 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %21, i32 0, i32 0
  %248 = load i32*, i32** %247, align 8
  %249 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %22, i32 0, i32 0
  %250 = load i32*, i32** %249, align 8
  %251 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %23, i32 0, i32 0
  %252 = load %"class.std::vector.6"*, %"class.std::vector.6"** %251, align 8
  %253 = call %"class.std::vector.6"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEESt20back_insert_iteratorIS5_EET0_T_SA_S9_(i32* %248, i32* %250, %"class.std::vector.6"* %252)
  %254 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %20, i32 0, i32 0
  store %"class.std::vector.6"* %253, %"class.std::vector.6"** %254, align 8
  %255 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %18, i32 0, i32 0
  %256 = load i32*, i32** %255, align 8
  %257 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %19, i32 0, i32 0
  %258 = load i32*, i32** %257, align 8
  %259 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %20, i32 0, i32 0
  %260 = load %"class.std::vector.6"*, %"class.std::vector.6"** %259, align 8
  %261 = call %"class.std::vector.6"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEESt20back_insert_iteratorIS5_EET0_T_SA_S9_(i32* %256, i32* %258, %"class.std::vector.6"* %260)
  %262 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %9, i32 0, i32 0
  store %"class.std::vector.6"* %261, %"class.std::vector.6"** %262, align 8
  %263 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %9, i32 0, i32 0
  %264 = load %"class.std::vector.6"*, %"class.std::vector.6"** %263, align 8
  store %"class.std::vector.6"* %264, %"class.std::vector.6"** %6
  %265 = load i32, i32* @x.437
  %266 = load i32, i32* @y.438
  %267 = sub i32 0, 1
  %268 = add i32 %265, %267
  %269 = sub i32 %265, 1
  %270 = mul i32 %265, %268
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %266, 10
  %274 = xor i1 %272, true
  %275 = xor i1 %273, true
  %276 = xor i1 false, true
  %277 = and i1 %274, false
  %278 = and i1 %272, %276
  %279 = and i1 %275, false
  %280 = and i1 %273, %276
  %281 = or i1 %277, %278
  %282 = or i1 %279, %280
  %283 = xor i1 %281, %282
  %284 = or i1 %274, %275
  %285 = xor i1 %284, true
  %286 = or i1 false, %276
  %287 = and i1 %285, %286
  %288 = or i1 %283, %287
  %289 = or i1 %272, %273
  %290 = select i1 %288, i32 579734534, i32 2061308325
  store i32 %290, i32* %29
  br label %328

; <label>:291:                                    ; preds = %31
  %292 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %6
  ret %"class.std::vector.6"* %292

; <label>:293:                                    ; preds = %31
  %294 = call zeroext i1 @_ZN9__gnu_cxxneIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %10, %"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %11) #3
  store i32 -1759464231, i32* %29
  br label %328

; <label>:295:                                    ; preds = %31
  %296 = call zeroext i1 @_ZN9__gnu_cxxneIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %12, %"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %13) #3
  store i32 -1669301104, i32* %29
  br label %328

; <label>:297:                                    ; preds = %31
  %298 = call dereferenceable(8) %"class.std::back_insert_iterator"* @_ZNSt20back_insert_iteratorISt6vectorIiSaIiEEEppEv(%"class.std::back_insert_iterator"* %14)
  store i32 -572053723, i32* %29
  br label %328

; <label>:299:                                    ; preds = %31
  %300 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %18 to i8*
  %301 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %300, i8* %301, i64 8, i32 8, i1 false)
  %302 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %19 to i8*
  %303 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %302, i8* %303, i64 8, i32 8, i1 false)
  %304 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %21 to i8*
  %305 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %304, i8* %305, i64 8, i32 8, i1 false)
  %306 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %22 to i8*
  %307 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %306, i8* %307, i64 8, i32 8, i1 false)
  %308 = bitcast %"class.std::back_insert_iterator"* %23 to i8*
  %309 = bitcast %"class.std::back_insert_iterator"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %308, i8* %309, i64 8, i32 8, i1 false)
  %310 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %21, i32 0, i32 0
  %311 = load i32*, i32** %310, align 8
  %312 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %22, i32 0, i32 0
  %313 = load i32*, i32** %312, align 8
  %314 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %23, i32 0, i32 0
  %315 = load %"class.std::vector.6"*, %"class.std::vector.6"** %314, align 8
  %316 = call %"class.std::vector.6"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEESt20back_insert_iteratorIS5_EET0_T_SA_S9_(i32* %311, i32* %313, %"class.std::vector.6"* %315)
  %317 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %20, i32 0, i32 0
  store %"class.std::vector.6"* %316, %"class.std::vector.6"** %317, align 8
  %318 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %18, i32 0, i32 0
  %319 = load i32*, i32** %318, align 8
  %320 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %19, i32 0, i32 0
  %321 = load i32*, i32** %320, align 8
  %322 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %20, i32 0, i32 0
  %323 = load %"class.std::vector.6"*, %"class.std::vector.6"** %322, align 8
  %324 = call %"class.std::vector.6"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEESt20back_insert_iteratorIS5_EET0_T_SA_S9_(i32* %319, i32* %321, %"class.std::vector.6"* %323)
  %325 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %9, i32 0, i32 0
  store %"class.std::vector.6"* %324, %"class.std::vector.6"** %325, align 8
  %326 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %9, i32 0, i32 0
  %327 = load %"class.std::vector.6"*, %"class.std::vector.6"** %326, align 8
  store i32 1523424028, i32* %29
  br label %328

; <label>:328:                                    ; preds = %299, %297, %295, %293, %236, %221, %220, %192, %164, %159, %154, %143, %140, %138, %109, %81, %78, %50, %34, %33
  br label %31
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt7greaterIiEEENS0_15_Iter_comp_iterIT_EES5_() #0 comdat {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.439
  %4 = load i32, i32* @y.440
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %2
  %11 = icmp slt i32 %4, 10
  store i1 %11, i1* %1
  %12 = alloca i32
  store i32 1280043386, i32* %12
  br label %13

; <label>:13:                                     ; preds = %0, %71
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1280043386, label %16
    i32 -29416213, label %36
    i32 1126129928, label %66
    i32 -838594587, label %67
  ]

; <label>:15:                                     ; preds = %13
  br label %71

; <label>:16:                                     ; preds = %13
  %17 = load volatile i1, i1* %2
  %18 = load volatile i1, i1* %1
  %19 = xor i1 %17, true
  %20 = xor i1 %18, true
  %21 = xor i1 true, true
  %22 = and i1 %19, true
  %23 = and i1 %17, %21
  %24 = and i1 %20, true
  %25 = and i1 %18, %21
  %26 = or i1 %22, %23
  %27 = or i1 %24, %25
  %28 = xor i1 %26, %27
  %29 = or i1 %19, %20
  %30 = xor i1 %29, true
  %31 = or i1 true, %21
  %32 = and i1 %30, %31
  %33 = or i1 %28, %32
  %34 = or i1 %17, %18
  %35 = select i1 %33, i32 -29416213, i32 -838594587
  store i32 %35, i32* %12
  br label %71

; <label>:36:                                     ; preds = %13
  %37 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %38 = alloca %"struct.std::greater", align 1
  %39 = alloca %"struct.std::greater", align 1
  call void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt7greaterIiEEC2ES3_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %37)
  %40 = load i32, i32* @x.439
  %41 = load i32, i32* @y.440
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 1126129928, i32 -838594587
  store i32 %65, i32* %12
  br label %71

; <label>:66:                                     ; preds = %13
  ret void

; <label>:67:                                     ; preds = %13
  %68 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %69 = alloca %"struct.std::greater", align 1
  %70 = alloca %"struct.std::greater", align 1
  call void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt7greaterIiEEC2ES3_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %68)
  store i32 -29416213, i32* %12
  br label %71

; <label>:71:                                     ; preds = %67, %36, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt7greaterIiEEclINS_17__normal_iteratorIPiSt6vectorIiSaIiEEEESB_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, i32*, i32*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.441
  %8 = load i32, i32* @y.442
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -1241895044, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %78
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1241895044, label %20
    i32 -1731705177, label %28
    i32 -1451930324, label %65
    i32 1516694030, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %78

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1731705177, i32 1516694030
  store i32 %27, i32* %16
  br label %78

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %31 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %29, i32 0, i32 0
  store i32* %1, i32** %32, align 8
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %30, i32 0, i32 0
  store i32* %2, i32** %33, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %31, align 8
  %34 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %31, align 8
  %35 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %34, i32 0, i32 0
  %36 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.12"* %29) #3
  %37 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.12"* %30) #3
  %38 = call zeroext i1 @_ZNKSt7greaterIiEclERKiS2_(%"struct.std::greater"* %35, i32* dereferenceable(4) %36, i32* dereferenceable(4) %37)
  store i1 %38, i1* %4
  %39 = load i32, i32* @x.441
  %40 = load i32, i32* @y.442
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 -1451930324, i32 1516694030
  store i32 %64, i32* %16
  br label %78

; <label>:65:                                     ; preds = %17
  %66 = load volatile i1, i1* %4
  ret i1 %66

; <label>:67:                                     ; preds = %17
  %68 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %69 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %70 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %68, i32 0, i32 0
  store i32* %1, i32** %71, align 8
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %69, i32 0, i32 0
  store i32* %2, i32** %72, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %70, align 8
  %73 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %70, align 8
  %74 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %73, i32 0, i32 0
  %75 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.12"* %68) #3
  %76 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.12"* %69) #3
  %77 = call zeroext i1 @_ZNKSt7greaterIiEclERKiS2_(%"struct.std::greater"* %74, i32* dereferenceable(4) %75, i32* dereferenceable(4) %76)
  store i32 -1731705177, i32* %16
  br label %78

; <label>:78:                                     ; preds = %67, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::back_insert_iterator"* @_ZNSt20back_insert_iteratorISt6vectorIiSaIiEEEdeEv(%"class.std::back_insert_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::back_insert_iterator"*, align 8
  store %"class.std::back_insert_iterator"* %0, %"class.std::back_insert_iterator"** %2, align 8
  %3 = load %"class.std::back_insert_iterator"*, %"class.std::back_insert_iterator"** %2, align 8
  ret %"class.std::back_insert_iterator"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) %"class.std::back_insert_iterator"* @_ZNSt20back_insert_iteratorISt6vectorIiSaIiEEEaSERKi(%"class.std::back_insert_iterator"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca %"class.std::back_insert_iterator"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::back_insert_iterator"* %0, %"class.std::back_insert_iterator"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::back_insert_iterator"*, %"class.std::back_insert_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.6"*, %"class.std::vector.6"** %6, align 8
  %8 = load i32*, i32** %4, align 8
  call void @_ZNSt6vectorIiSaIiEE9push_backERKi(%"class.std::vector.6"* %7, i32* dereferenceable(4) %8)
  ret %"class.std::back_insert_iterator"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::back_insert_iterator"* @_ZNSt20back_insert_iteratorISt6vectorIiSaIiEEEppEv(%"class.std::back_insert_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::back_insert_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.447
  %6 = load i32, i32* @y.448
  %7 = sub i32 %5, -428672425
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -428672425
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -191719504, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -191719504, label %19
    i32 1575797332, label %39
    i32 -846238845, label %56
    i32 1695619429, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1575797332, i32 1695619429
  store i32 %38, i32* %15
  br label %61

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::back_insert_iterator"*, align 8
  store %"class.std::back_insert_iterator"* %0, %"class.std::back_insert_iterator"** %40, align 8
  %41 = load %"class.std::back_insert_iterator"*, %"class.std::back_insert_iterator"** %40, align 8
  store %"class.std::back_insert_iterator"* %41, %"class.std::back_insert_iterator"** %2
  %42 = load i32, i32* @x.447
  %43 = load i32, i32* @y.448
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -846238845, i32 1695619429
  store i32 %55, i32* %15
  br label %61

; <label>:56:                                     ; preds = %16
  %57 = load volatile %"class.std::back_insert_iterator"*, %"class.std::back_insert_iterator"** %2
  ret %"class.std::back_insert_iterator"* %57

; <label>:58:                                     ; preds = %16
  %59 = alloca %"class.std::back_insert_iterator"*, align 8
  store %"class.std::back_insert_iterator"* %0, %"class.std::back_insert_iterator"** %59, align 8
  %60 = load %"class.std::back_insert_iterator"*, %"class.std::back_insert_iterator"** %59, align 8
  store i32 1575797332, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.6"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEESt20back_insert_iteratorIS5_EET0_T_SA_S9_(i32*, i32*, %"class.std::vector.6"*) #0 comdat {
  %4 = alloca %"class.std::back_insert_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %7 = alloca %"class.std::back_insert_iterator", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %12 = alloca %"class.std::back_insert_iterator", align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %5, i32 0, i32 0
  store i32* %0, i32** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %6, i32 0, i32 0
  store i32* %1, i32** %14, align 8
  %15 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %7, i32 0, i32 0
  store %"class.std::vector.6"* %2, %"class.std::vector.6"** %15, align 8
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %9 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %9, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES8_(i32* %19)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %8, i32 0, i32 0
  store i32* %20, i32** %21, align 8
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %11 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %11, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES8_(i32* %25)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %10, i32 0, i32 0
  store i32* %26, i32** %27, align 8
  %28 = bitcast %"class.std::back_insert_iterator"* %12 to i8*
  %29 = bitcast %"class.std::back_insert_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 8, i1 false)
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %8, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %10, i32 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %12, i32 0, i32 0
  %35 = load %"class.std::vector.6"*, %"class.std::vector.6"** %34, align 8
  %36 = call %"class.std::vector.6"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEESt20back_insert_iteratorIS5_EET1_T0_SA_S9_(i32* %31, i32* %33, %"class.std::vector.6"* %35)
  %37 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %4, i32 0, i32 0
  store %"class.std::vector.6"* %36, %"class.std::vector.6"** %37, align 8
  %38 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %4, i32 0, i32 0
  %39 = load %"class.std::vector.6"*, %"class.std::vector.6"** %38, align 8
  ret %"class.std::vector.6"* %39
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt7greaterIiEclERKiS2_(%"struct.std::greater"*, i32* dereferenceable(4), i32* dereferenceable(4)) #5 comdat align 2 {
  %4 = alloca %"struct.std::greater"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"struct.std::greater"* %0, %"struct.std::greater"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"struct.std::greater"*, %"struct.std::greater"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = load i32, i32* %8, align 4
  %10 = load i32*, i32** %6, align 8
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %9, %11
  ret i1 %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.6"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEESt20back_insert_iteratorIS5_EET1_T0_SA_S9_(i32*, i32*, %"class.std::vector.6"*) #0 comdat {
  %4 = alloca %"class.std::vector.6"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.453
  %8 = load i32, i32* @y.454
  %9 = add i32 %7, 1783621296
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 1783621296
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 135186285, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %126
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 135186285, label %21
    i32 862507952, label %41
    i32 -475115697, label %90
    i32 239621177, label %92
  ]

; <label>:20:                                     ; preds = %18
  br label %126

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 862507952, i32 239621177
  store i32 %40, i32* %17
  br label %126

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::back_insert_iterator", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %45 = alloca %"class.std::back_insert_iterator", align 8
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %48 = alloca %"class.std::back_insert_iterator", align 8
  %49 = alloca %"class.std::back_insert_iterator", align 8
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %43, i32 0, i32 0
  store i32* %0, i32** %50, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %44, i32 0, i32 0
  store i32* %1, i32** %51, align 8
  %52 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %45, i32 0, i32 0
  store %"class.std::vector.6"* %2, %"class.std::vector.6"** %52, align 8
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %46 to i8*
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 8, i32 8, i1 false)
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %46, i32 0, i32 0
  %56 = load i32*, i32** %55, align 8
  %57 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32* %56)
  %58 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %47 to i8*
  %59 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %58, i8* %59, i64 8, i32 8, i1 false)
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %47, i32 0, i32 0
  %61 = load i32*, i32** %60, align 8
  %62 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32* %61)
  %63 = bitcast %"class.std::back_insert_iterator"* %49 to i8*
  %64 = bitcast %"class.std::back_insert_iterator"* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %63, i8* %64, i64 8, i32 8, i1 false)
  %65 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %49, i32 0, i32 0
  %66 = load %"class.std::vector.6"*, %"class.std::vector.6"** %65, align 8
  %67 = call %"class.std::vector.6"* @_ZSt12__niter_baseISt20back_insert_iteratorISt6vectorIiSaIiEEEENSt11_Niter_baseIT_E13iterator_typeES6_(%"class.std::vector.6"* %66)
  %68 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %48, i32 0, i32 0
  store %"class.std::vector.6"* %67, %"class.std::vector.6"** %68, align 8
  %69 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %48, i32 0, i32 0
  %70 = load %"class.std::vector.6"*, %"class.std::vector.6"** %69, align 8
  %71 = call %"class.std::vector.6"* @_ZSt13__copy_move_aILb0EPiSt20back_insert_iteratorISt6vectorIiSaIiEEEET1_T0_S7_S6_(i32* %57, i32* %62, %"class.std::vector.6"* %70)
  %72 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %42, i32 0, i32 0
  store %"class.std::vector.6"* %71, %"class.std::vector.6"** %72, align 8
  %73 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %42, i32 0, i32 0
  %74 = load %"class.std::vector.6"*, %"class.std::vector.6"** %73, align 8
  store %"class.std::vector.6"* %74, %"class.std::vector.6"** %4
  %75 = load i32, i32* @x.453
  %76 = load i32, i32* @y.454
  %77 = add i32 %75, 985366270
  %78 = sub i32 %77, 1
  %79 = sub i32 %78, 985366270
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = and i1 %83, %84
  %86 = xor i1 %83, %84
  %87 = or i1 %85, %86
  %88 = or i1 %83, %84
  %89 = select i1 %87, i32 -475115697, i32 239621177
  store i32 %89, i32* %17
  br label %126

; <label>:90:                                     ; preds = %18
  %91 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %4
  ret %"class.std::vector.6"* %91

; <label>:92:                                     ; preds = %18
  %93 = alloca %"class.std::back_insert_iterator", align 8
  %94 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %95 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %96 = alloca %"class.std::back_insert_iterator", align 8
  %97 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %98 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %99 = alloca %"class.std::back_insert_iterator", align 8
  %100 = alloca %"class.std::back_insert_iterator", align 8
  %101 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %94, i32 0, i32 0
  store i32* %0, i32** %101, align 8
  %102 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %95, i32 0, i32 0
  store i32* %1, i32** %102, align 8
  %103 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %96, i32 0, i32 0
  store %"class.std::vector.6"* %2, %"class.std::vector.6"** %103, align 8
  %104 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %97 to i8*
  %105 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %104, i8* %105, i64 8, i32 8, i1 false)
  %106 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %97, i32 0, i32 0
  %107 = load i32*, i32** %106, align 8
  %108 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32* %107)
  %109 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %98 to i8*
  %110 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %109, i8* %110, i64 8, i32 8, i1 false)
  %111 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %98, i32 0, i32 0
  %112 = load i32*, i32** %111, align 8
  %113 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32* %112)
  %114 = bitcast %"class.std::back_insert_iterator"* %100 to i8*
  %115 = bitcast %"class.std::back_insert_iterator"* %96 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %114, i8* %115, i64 8, i32 8, i1 false)
  %116 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %100, i32 0, i32 0
  %117 = load %"class.std::vector.6"*, %"class.std::vector.6"** %116, align 8
  %118 = call %"class.std::vector.6"* @_ZSt12__niter_baseISt20back_insert_iteratorISt6vectorIiSaIiEEEENSt11_Niter_baseIT_E13iterator_typeES6_(%"class.std::vector.6"* %117)
  %119 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %99, i32 0, i32 0
  store %"class.std::vector.6"* %118, %"class.std::vector.6"** %119, align 8
  %120 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %99, i32 0, i32 0
  %121 = load %"class.std::vector.6"*, %"class.std::vector.6"** %120, align 8
  %122 = call %"class.std::vector.6"* @_ZSt13__copy_move_aILb0EPiSt20back_insert_iteratorISt6vectorIiSaIiEEEET1_T0_S7_S6_(i32* %108, i32* %113, %"class.std::vector.6"* %121)
  %123 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %93, i32 0, i32 0
  store %"class.std::vector.6"* %122, %"class.std::vector.6"** %123, align 8
  %124 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %93, i32 0, i32 0
  %125 = load %"class.std::vector.6"*, %"class.std::vector.6"** %124, align 8
  store i32 862507952, i32* %17
  br label %126

; <label>:126:                                    ; preds = %92, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES8_(i32*) #0 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.455
  %6 = load i32, i32* @y.456
  %7 = sub i32 %5, -521906403
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -521906403
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 571497700, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 571497700, label %19
    i32 1671259230, label %27
    i32 1539852263, label %54
    i32 1894033368, label %56
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1671259230, i32 1894033368
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %29, i32 0, i32 0
  store i32* %0, i32** %31, align 8
  %32 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %30 to i8*
  %33 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 8, i32 8, i1 false)
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %30, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = call i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb0EE7_S_baseES6_(i32* %35)
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %28, i32 0, i32 0
  store i32* %36, i32** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %28, i32 0, i32 0
  %39 = load i32*, i32** %38, align 8
  store i32* %39, i32** %2
  %40 = load i32, i32* @x.455
  %41 = load i32, i32* @y.456
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 1539852263, i32 1894033368
  store i32 %53, i32* %15
  br label %69

; <label>:54:                                     ; preds = %16
  %55 = load volatile i32*, i32** %2
  ret i32* %55

; <label>:56:                                     ; preds = %16
  %57 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %58 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %59 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %58, i32 0, i32 0
  store i32* %0, i32** %60, align 8
  %61 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %59 to i8*
  %62 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %61, i8* %62, i64 8, i32 8, i1 false)
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %59, i32 0, i32 0
  %64 = load i32*, i32** %63, align 8
  %65 = call i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb0EE7_S_baseES6_(i32* %64)
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %57, i32 0, i32 0
  store i32* %65, i32** %66, align 8
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %57, i32 0, i32 0
  %68 = load i32*, i32** %67, align 8
  store i32 1671259230, i32* %15
  br label %69

; <label>:69:                                     ; preds = %56, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.6"* @_ZSt13__copy_move_aILb0EPiSt20back_insert_iteratorISt6vectorIiSaIiEEEET1_T0_S7_S6_(i32*, i32*, %"class.std::vector.6"*) #0 comdat {
  %4 = alloca %"class.std::back_insert_iterator", align 8
  %5 = alloca %"class.std::back_insert_iterator", align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i8, align 1
  %9 = alloca %"class.std::back_insert_iterator", align 8
  %10 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %5, i32 0, i32 0
  store %"class.std::vector.6"* %2, %"class.std::vector.6"** %10, align 8
  store i32* %0, i32** %6, align 8
  store i32* %1, i32** %7, align 8
  store i8 0, i8* %8, align 1
  %11 = load i32*, i32** %6, align 8
  %12 = load i32*, i32** %7, align 8
  %13 = bitcast %"class.std::back_insert_iterator"* %9 to i8*
  %14 = bitcast %"class.std::back_insert_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %9, i32 0, i32 0
  %16 = load %"class.std::vector.6"*, %"class.std::vector.6"** %15, align 8
  %17 = call %"class.std::vector.6"* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPiSt20back_insert_iteratorISt6vectorIiSaIiEEEEET0_T_SA_S9_(i32* %11, i32* %12, %"class.std::vector.6"* %16)
  %18 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %4, i32 0, i32 0
  store %"class.std::vector.6"* %17, %"class.std::vector.6"** %18, align 8
  %19 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %4, i32 0, i32 0
  %20 = load %"class.std::vector.6"*, %"class.std::vector.6"** %19, align 8
  ret %"class.std::vector.6"* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.6"* @_ZSt12__niter_baseISt20back_insert_iteratorISt6vectorIiSaIiEEEENSt11_Niter_baseIT_E13iterator_typeES6_(%"class.std::vector.6"*) #0 comdat {
  %2 = alloca %"class.std::back_insert_iterator", align 8
  %3 = alloca %"class.std::back_insert_iterator", align 8
  %4 = alloca %"class.std::back_insert_iterator", align 8
  %5 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %3, i32 0, i32 0
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %5, align 8
  %6 = bitcast %"class.std::back_insert_iterator"* %4 to i8*
  %7 = bitcast %"class.std::back_insert_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 8, i32 8, i1 false)
  %8 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %4, i32 0, i32 0
  %9 = load %"class.std::vector.6"*, %"class.std::vector.6"** %8, align 8
  %10 = call %"class.std::vector.6"* @_ZNSt10_Iter_baseISt20back_insert_iteratorISt6vectorIiSaIiEEELb0EE7_S_baseES4_(%"class.std::vector.6"* %9)
  %11 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %2, i32 0, i32 0
  store %"class.std::vector.6"* %10, %"class.std::vector.6"** %11, align 8
  %12 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %2, i32 0, i32 0
  %13 = load %"class.std::vector.6"*, %"class.std::vector.6"** %12, align 8
  ret %"class.std::vector.6"* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.6"* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPiSt20back_insert_iteratorISt6vectorIiSaIiEEEEET0_T_SA_S9_(i32*, i32*, %"class.std::vector.6"*) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.6"*
  %5 = alloca i1
  %6 = alloca i64*
  %7 = alloca i32**
  %8 = alloca %"class.std::back_insert_iterator"*
  %9 = alloca %"class.std::back_insert_iterator"*
  %10 = alloca i1
  %11 = alloca i1
  %12 = load i32, i32* @x.461
  %13 = load i32, i32* @y.462
  %14 = sub i32 0, 1
  %15 = add i32 %12, %14
  %16 = sub i32 %12, 1
  %17 = mul i32 %12, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  store i1 %19, i1* %11
  %20 = icmp slt i32 %13, 10
  store i1 %20, i1* %10
  %21 = alloca i32
  store i32 1116916510, i32* %21
  br label %22

; <label>:22:                                     ; preds = %3, %277
  %23 = load i32, i32* %21
  switch i32 %23, label %24 [
    i32 1116916510, label %25
    i32 1192022564, label %45
    i32 -844577744, label %90
    i32 915220808, label %91
    i32 -943583679, label %107
    i32 941646798, label %138
    i32 68099053, label %141
    i32 470472852, label %153
    i32 -820236531, label %162
    i32 -416641263, label %190
    i32 -1008724465, label %225
    i32 302694429, label %227
    i32 416189932, label %265
    i32 996086180, label %269
  ]

; <label>:24:                                     ; preds = %22
  br label %277

; <label>:25:                                     ; preds = %22
  %26 = load volatile i1, i1* %11
  %27 = load volatile i1, i1* %10
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 true, true
  %31 = and i1 %28, true
  %32 = and i1 %26, %30
  %33 = and i1 %29, true
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 true, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  %44 = select i1 %42, i32 1192022564, i32 302694429
  store i32 %44, i32* %21
  br label %277

; <label>:45:                                     ; preds = %22
  %46 = alloca %"class.std::back_insert_iterator", align 8
  store %"class.std::back_insert_iterator"* %46, %"class.std::back_insert_iterator"** %9
  %47 = alloca %"class.std::back_insert_iterator", align 8
  store %"class.std::back_insert_iterator"* %47, %"class.std::back_insert_iterator"** %8
  %48 = alloca i32*, align 8
  store i32** %48, i32*** %7
  %49 = alloca i32*, align 8
  %50 = alloca i64, align 8
  store i64* %50, i64** %6
  %51 = load volatile %"class.std::back_insert_iterator"*, %"class.std::back_insert_iterator"** %8
  %52 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %51, i32 0, i32 0
  store %"class.std::vector.6"* %2, %"class.std::vector.6"** %52, align 8
  %53 = load volatile i32**, i32*** %7
  store i32* %0, i32** %53, align 8
  store i32* %1, i32** %49, align 8
  %54 = load i32*, i32** %49, align 8
  %55 = load volatile i32**, i32*** %7
  %56 = load i32*, i32** %55, align 8
  %57 = ptrtoint i32* %54 to i64
  %58 = ptrtoint i32* %56 to i64
  %59 = sub i64 0, %58
  %60 = add i64 %57, %59
  %61 = sub i64 %57, %58
  %62 = sdiv exact i64 %60, 4
  %63 = load volatile i64*, i64** %6
  store i64 %62, i64* %63, align 8
  %64 = load i32, i32* @x.461
  %65 = load i32, i32* @y.462
  %66 = sub i32 0, 1
  %67 = add i32 %64, %66
  %68 = sub i32 %64, 1
  %69 = mul i32 %64, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %65, 10
  %73 = xor i1 %71, true
  %74 = xor i1 %72, true
  %75 = xor i1 false, true
  %76 = and i1 %73, false
  %77 = and i1 %71, %75
  %78 = and i1 %74, false
  %79 = and i1 %72, %75
  %80 = or i1 %76, %77
  %81 = or i1 %78, %79
  %82 = xor i1 %80, %81
  %83 = or i1 %73, %74
  %84 = xor i1 %83, true
  %85 = or i1 false, %75
  %86 = and i1 %84, %85
  %87 = or i1 %82, %86
  %88 = or i1 %71, %72
  %89 = select i1 %87, i32 -844577744, i32 302694429
  store i32 %89, i32* %21
  br label %277

; <label>:90:                                     ; preds = %22
  store i32 915220808, i32* %21
  br label %277

; <label>:91:                                     ; preds = %22
  %92 = load i32, i32* @x.461
  %93 = load i32, i32* @y.462
  %94 = sub i32 %92, 1505034305
  %95 = sub i32 %94, 1
  %96 = add i32 %95, 1505034305
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  %106 = select i1 %104, i32 -943583679, i32 416189932
  store i32 %106, i32* %21
  br label %277

; <label>:107:                                    ; preds = %22
  %108 = load volatile i64*, i64** %6
  %109 = load i64, i64* %108, align 8
  %110 = icmp sgt i64 %109, 0
  store i1 %110, i1* %5
  %111 = load i32, i32* @x.461
  %112 = load i32, i32* @y.462
  %113 = add i32 %111, -1350710025
  %114 = sub i32 %113, 1
  %115 = sub i32 %114, -1350710025
  %116 = sub i32 %111, 1
  %117 = mul i32 %111, %115
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %112, 10
  %121 = xor i1 %119, true
  %122 = xor i1 %120, true
  %123 = xor i1 false, true
  %124 = and i1 %121, false
  %125 = and i1 %119, %123
  %126 = and i1 %122, false
  %127 = and i1 %120, %123
  %128 = or i1 %124, %125
  %129 = or i1 %126, %127
  %130 = xor i1 %128, %129
  %131 = or i1 %121, %122
  %132 = xor i1 %131, true
  %133 = or i1 false, %123
  %134 = and i1 %132, %133
  %135 = or i1 %130, %134
  %136 = or i1 %119, %120
  %137 = select i1 %135, i32 941646798, i32 416189932
  store i32 %137, i32* %21
  br label %277

; <label>:138:                                    ; preds = %22
  %139 = load volatile i1, i1* %5
  %140 = select i1 %139, i32 68099053, i32 -820236531
  store i32 %140, i32* %21
  br label %277

; <label>:141:                                    ; preds = %22
  %142 = load volatile i32**, i32*** %7
  %143 = load i32*, i32** %142, align 8
  %144 = load volatile %"class.std::back_insert_iterator"*, %"class.std::back_insert_iterator"** %8
  %145 = call dereferenceable(8) %"class.std::back_insert_iterator"* @_ZNSt20back_insert_iteratorISt6vectorIiSaIiEEEdeEv(%"class.std::back_insert_iterator"* %144)
  %146 = call dereferenceable(8) %"class.std::back_insert_iterator"* @_ZNSt20back_insert_iteratorISt6vectorIiSaIiEEEaSERKi(%"class.std::back_insert_iterator"* %145, i32* dereferenceable(4) %143)
  %147 = load volatile i32**, i32*** %7
  %148 = load i32*, i32** %147, align 8
  %149 = getelementptr inbounds i32, i32* %148, i32 1
  %150 = load volatile i32**, i32*** %7
  store i32* %149, i32** %150, align 8
  %151 = load volatile %"class.std::back_insert_iterator"*, %"class.std::back_insert_iterator"** %8
  %152 = call dereferenceable(8) %"class.std::back_insert_iterator"* @_ZNSt20back_insert_iteratorISt6vectorIiSaIiEEEppEv(%"class.std::back_insert_iterator"* %151)
  store i32 470472852, i32* %21
  br label %277

; <label>:153:                                    ; preds = %22
  %154 = load volatile i64*, i64** %6
  %155 = load i64, i64* %154, align 8
  %156 = sub i64 0, %155
  %157 = sub i64 0, -1
  %158 = add i64 %156, %157
  %159 = sub i64 0, %158
  %160 = add nsw i64 %155, -1
  %161 = load volatile i64*, i64** %6
  store i64 %159, i64* %161, align 8
  store i32 915220808, i32* %21
  br label %277

; <label>:162:                                    ; preds = %22
  %163 = load i32, i32* @x.461
  %164 = load i32, i32* @y.462
  %165 = add i32 %163, -725076271
  %166 = sub i32 %165, 1
  %167 = sub i32 %166, -725076271
  %168 = sub i32 %163, 1
  %169 = mul i32 %163, %167
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %164, 10
  %173 = xor i1 %171, true
  %174 = xor i1 %172, true
  %175 = xor i1 true, true
  %176 = and i1 %173, true
  %177 = and i1 %171, %175
  %178 = and i1 %174, true
  %179 = and i1 %172, %175
  %180 = or i1 %176, %177
  %181 = or i1 %178, %179
  %182 = xor i1 %180, %181
  %183 = or i1 %173, %174
  %184 = xor i1 %183, true
  %185 = or i1 true, %175
  %186 = and i1 %184, %185
  %187 = or i1 %182, %186
  %188 = or i1 %171, %172
  %189 = select i1 %187, i32 -416641263, i32 996086180
  store i32 %189, i32* %21
  br label %277

; <label>:190:                                    ; preds = %22
  %191 = load volatile %"class.std::back_insert_iterator"*, %"class.std::back_insert_iterator"** %9
  %192 = bitcast %"class.std::back_insert_iterator"* %191 to i8*
  %193 = load volatile %"class.std::back_insert_iterator"*, %"class.std::back_insert_iterator"** %8
  %194 = bitcast %"class.std::back_insert_iterator"* %193 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %192, i8* %194, i64 8, i32 8, i1 false)
  %195 = load volatile %"class.std::back_insert_iterator"*, %"class.std::back_insert_iterator"** %9
  %196 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %195, i32 0, i32 0
  %197 = load %"class.std::vector.6"*, %"class.std::vector.6"** %196, align 8
  store %"class.std::vector.6"* %197, %"class.std::vector.6"** %4
  %198 = load i32, i32* @x.461
  %199 = load i32, i32* @y.462
  %200 = add i32 %198, -1705783979
  %201 = sub i32 %200, 1
  %202 = sub i32 %201, -1705783979
  %203 = sub i32 %198, 1
  %204 = mul i32 %198, %202
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %199, 10
  %208 = xor i1 %206, true
  %209 = xor i1 %207, true
  %210 = xor i1 false, true
  %211 = and i1 %208, false
  %212 = and i1 %206, %210
  %213 = and i1 %209, false
  %214 = and i1 %207, %210
  %215 = or i1 %211, %212
  %216 = or i1 %213, %214
  %217 = xor i1 %215, %216
  %218 = or i1 %208, %209
  %219 = xor i1 %218, true
  %220 = or i1 false, %210
  %221 = and i1 %219, %220
  %222 = or i1 %217, %221
  %223 = or i1 %206, %207
  %224 = select i1 %222, i32 -1008724465, i32 996086180
  store i32 %224, i32* %21
  br label %277

; <label>:225:                                    ; preds = %22
  %226 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %4
  ret %"class.std::vector.6"* %226

; <label>:227:                                    ; preds = %22
  %228 = alloca %"class.std::back_insert_iterator", align 8
  %229 = alloca %"class.std::back_insert_iterator", align 8
  %230 = alloca i32*, align 8
  %231 = alloca i32*, align 8
  %232 = alloca i64, align 8
  %233 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %229, i32 0, i32 0
  store %"class.std::vector.6"* %2, %"class.std::vector.6"** %233, align 8
  store i32* %0, i32** %230, align 8
  store i32* %1, i32** %231, align 8
  %234 = load i32*, i32** %231, align 8
  %235 = load i32*, i32** %230, align 8
  %236 = ptrtoint i32* %234 to i64
  %237 = ptrtoint i32* %235 to i64
  %238 = shl i64 %236, %237
  %239 = sub i64 0, %237
  %240 = add i64 %236, %239
  %241 = sub i64 %236, %237
  %242 = mul i64 %240, %237
  %243 = sub i64 %236, 750576152371466044
  %244 = sub i64 %243, %237
  %245 = add i64 %244, 750576152371466044
  %246 = sub i64 %236, %237
  %247 = mul i64 %245, %237
  %248 = add i64 %236, -2779455425940129667
  %249 = sub i64 %248, %237
  %250 = sub i64 %249, -2779455425940129667
  %251 = sub i64 %236, %237
  %252 = add i64 0, -6090916606804779139
  %253 = sub i64 %252, %250
  %254 = sub i64 %253, -6090916606804779139
  %255 = sub i64 0, %250
  %256 = sub i64 0, 4
  %257 = sub i64 %254, %256
  %258 = add i64 %254, 4
  %259 = add i64 %250, -8767748253536568929
  %260 = sub i64 %259, 4
  %261 = sub i64 %260, -8767748253536568929
  %262 = sub i64 %250, 4
  %263 = mul i64 %261, 4
  %264 = sdiv exact i64 %250, 4
  store i64 %264, i64* %232, align 8
  store i32 1192022564, i32* %21
  br label %277

; <label>:265:                                    ; preds = %22
  %266 = load volatile i64*, i64** %6
  %267 = load i64, i64* %266, align 8
  %268 = icmp sgt i64 %267, 0
  store i32 -943583679, i32* %21
  br label %277

; <label>:269:                                    ; preds = %22
  %270 = load volatile %"class.std::back_insert_iterator"*, %"class.std::back_insert_iterator"** %9
  %271 = bitcast %"class.std::back_insert_iterator"* %270 to i8*
  %272 = load volatile %"class.std::back_insert_iterator"*, %"class.std::back_insert_iterator"** %8
  %273 = bitcast %"class.std::back_insert_iterator"* %272 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %271, i8* %273, i64 8, i32 8, i1 false)
  %274 = load volatile %"class.std::back_insert_iterator"*, %"class.std::back_insert_iterator"** %9
  %275 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %274, i32 0, i32 0
  %276 = load %"class.std::vector.6"*, %"class.std::vector.6"** %275, align 8
  store i32 -416641263, i32* %21
  br label %277

; <label>:277:                                    ; preds = %269, %265, %227, %190, %162, %153, %141, %138, %107, %91, %90, %45, %25, %24
  br label %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.6"* @_ZNSt10_Iter_baseISt20back_insert_iteratorISt6vectorIiSaIiEEELb0EE7_S_baseES4_(%"class.std::vector.6"*) #5 comdat align 2 {
  %2 = alloca %"class.std::back_insert_iterator", align 8
  %3 = alloca %"class.std::back_insert_iterator", align 8
  %4 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %3, i32 0, i32 0
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %4, align 8
  %5 = bitcast %"class.std::back_insert_iterator"* %2 to i8*
  %6 = bitcast %"class.std::back_insert_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %2, i32 0, i32 0
  %8 = load %"class.std::vector.6"*, %"class.std::vector.6"** %7, align 8
  ret %"class.std::vector.6"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb0EE7_S_baseES6_(i32*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %3, i32 0, i32 0
  store i32* %0, i32** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %2 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %2, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  ret i32* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt7greaterIiEEC2ES3_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::greater", align 1
  %3 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %3, align 8
  %4 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %3, align 8
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4, i32 0, i32 0
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt20back_insert_iteratorISt6vectorIiSaIiEEEC2ERS2_(%"class.std::back_insert_iterator"*, %"class.std::vector.6"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::back_insert_iterator"*, align 8
  %4 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::back_insert_iterator"* %0, %"class.std::back_insert_iterator"** %3, align 8
  store %"class.std::vector.6"* %1, %"class.std::vector.6"** %4, align 8
  %5 = load %"class.std::back_insert_iterator"*, %"class.std::back_insert_iterator"** %3, align 8
  %6 = bitcast %"class.std::back_insert_iterator"* %5 to %"struct.std::iterator"*
  %7 = getelementptr inbounds %"class.std::back_insert_iterator", %"class.std::back_insert_iterator"* %5, i32 0, i32 0
  %8 = load %"class.std::vector.6"*, %"class.std::vector.6"** %4, align 8
  store %"class.std::vector.6"* %8, %"class.std::vector.6"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNKSt6vectorIiSaIiEE6cbeginEv(%"class.std::vector.6"*) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.471
  %6 = load i32, i32* @y.472
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1151881366, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %76
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1151881366, label %18
    i32 1997732692, label %26
    i32 1060027021, label %63
    i32 1709869053, label %65
  ]

; <label>:17:                                     ; preds = %15
  br label %76

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1997732692, i32 1709869053
  store i32 %25, i32* %14
  br label %76

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %28 = alloca %"class.std::vector.6"*, align 8
  %29 = alloca i32*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %28, align 8
  %30 = load %"class.std::vector.6"*, %"class.std::vector.6"** %28, align 8
  %31 = bitcast %"class.std::vector.6"* %30 to %"struct.std::_Vector_base.7"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %32, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  store i32* %34, i32** %29, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.13"* %27, i32** dereferenceable(8) %29) #3
  %35 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %27, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  store i32* %36, i32** %2
  %37 = load i32, i32* @x.471
  %38 = load i32, i32* @y.472
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 1060027021, i32 1709869053
  store i32 %62, i32* %14
  br label %76

; <label>:63:                                     ; preds = %15
  %64 = load volatile i32*, i32** %2
  ret i32* %64

; <label>:65:                                     ; preds = %15
  %66 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %67 = alloca %"class.std::vector.6"*, align 8
  %68 = alloca i32*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %67, align 8
  %69 = load %"class.std::vector.6"*, %"class.std::vector.6"** %67, align 8
  %70 = bitcast %"class.std::vector.6"* %69 to %"struct.std::_Vector_base.7"*
  %71 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %71, i32 0, i32 0
  %73 = load i32*, i32** %72, align 8
  store i32* %73, i32** %68, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.13"* %66, i32** dereferenceable(8) %68) #3
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %66, i32 0, i32 0
  %75 = load i32*, i32** %74, align 8
  store i32 1997732692, i32* %14
  br label %76

; <label>:76:                                     ; preds = %65, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt6vectorIiSaIiEE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPiS1_EES5_(%"class.std::vector.6"*, i32*, i32*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"class.std::vector.6"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.12"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.12"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.12"*
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.12"*
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.12"*
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.12"*
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.12"*
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.12"*
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.12"*
  %15 = alloca i1
  %16 = alloca i1
  %17 = load i32, i32* @x.473
  %18 = load i32, i32* @y.474
  %19 = add i32 %17, 545938968
  %20 = sub i32 %19, 1
  %21 = sub i32 %20, 545938968
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  store i1 %25, i1* %16
  %26 = icmp slt i32 %18, 10
  store i1 %26, i1* %15
  %27 = alloca i32
  store i32 -641526145, i32* %27
  br label %28

; <label>:28:                                     ; preds = %3, %158
  %29 = load i32, i32* %27
  switch i32 %29, label %30 [
    i32 -641526145, label %31
    i32 -1455548945, label %51
    i32 368379124, label %85
    i32 1491520408, label %88
    i32 -95085112, label %97
    i32 1768149277, label %122
    i32 897716949, label %135
    i32 -1803132131, label %143
  ]

; <label>:30:                                     ; preds = %28
  br label %158

; <label>:31:                                     ; preds = %28
  %32 = load volatile i1, i1* %16
  %33 = load volatile i1, i1* %15
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 true, true
  %37 = and i1 %34, true
  %38 = and i1 %32, %36
  %39 = and i1 %35, true
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 true, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  %50 = select i1 %48, i32 -1455548945, i32 -1803132131
  store i32 %50, i32* %27
  br label %158

; <label>:51:                                     ; preds = %28
  %52 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  store %"class.__gnu_cxx::__normal_iterator.12"* %52, %"class.__gnu_cxx::__normal_iterator.12"** %14
  %53 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  store %"class.__gnu_cxx::__normal_iterator.12"* %53, %"class.__gnu_cxx::__normal_iterator.12"** %13
  %54 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  store %"class.__gnu_cxx::__normal_iterator.12"* %54, %"class.__gnu_cxx::__normal_iterator.12"** %12
  %55 = alloca %"class.std::vector.6"*, align 8
  %56 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  store %"class.__gnu_cxx::__normal_iterator.12"* %56, %"class.__gnu_cxx::__normal_iterator.12"** %11
  %57 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  store %"class.__gnu_cxx::__normal_iterator.12"* %57, %"class.__gnu_cxx::__normal_iterator.12"** %10
  %58 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  store %"class.__gnu_cxx::__normal_iterator.12"* %58, %"class.__gnu_cxx::__normal_iterator.12"** %9
  %59 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  store %"class.__gnu_cxx::__normal_iterator.12"* %59, %"class.__gnu_cxx::__normal_iterator.12"** %8
  %60 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  store %"class.__gnu_cxx::__normal_iterator.12"* %60, %"class.__gnu_cxx::__normal_iterator.12"** %7
  %61 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  store %"class.__gnu_cxx::__normal_iterator.12"* %61, %"class.__gnu_cxx::__normal_iterator.12"** %6
  %62 = load volatile %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %13
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %62, i32 0, i32 0
  store i32* %1, i32** %63, align 8
  %64 = load volatile %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %12
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %64, i32 0, i32 0
  store i32* %2, i32** %65, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %55, align 8
  %66 = load %"class.std::vector.6"*, %"class.std::vector.6"** %55, align 8
  store %"class.std::vector.6"* %66, %"class.std::vector.6"** %5
  %67 = load volatile %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %13
  %68 = load volatile %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %12
  %69 = call zeroext i1 @_ZN9__gnu_cxxneIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %67, %"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %68) #3
  store i1 %69, i1* %4
  %70 = load i32, i32* @x.473
  %71 = load i32, i32* @y.474
  %72 = sub i32 %70, -2021595353
  %73 = sub i32 %72, 1
  %74 = add i32 %73, -2021595353
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  %84 = select i1 %82, i32 368379124, i32 -1803132131
  store i32 %84, i32* %27
  br label %158

; <label>:85:                                     ; preds = %28
  %86 = load volatile i1, i1* %4
  %87 = select i1 %86, i32 1491520408, i32 897716949
  store i32 %87, i32* %27
  br label %158

; <label>:88:                                     ; preds = %28
  %89 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %5
  %90 = call i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.6"* %89) #3
  %91 = load volatile %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %11
  %92 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %91, i32 0, i32 0
  store i32* %90, i32** %92, align 8
  %93 = load volatile %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %12
  %94 = load volatile %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %11
  %95 = call zeroext i1 @_ZN9__gnu_cxxneIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %93, %"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %94) #3
  %96 = select i1 %95, i32 -95085112, i32 1768149277
  store i32 %96, i32* %27
  br label %158

; <label>:97:                                     ; preds = %28
  %98 = load volatile %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %10
  %99 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %98 to i8*
  %100 = load volatile %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %12
  %101 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %100 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %99, i8* %101, i64 8, i32 8, i1 false)
  %102 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %5
  %103 = call i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.6"* %102) #3
  %104 = load volatile %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %9
  %105 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %104, i32 0, i32 0
  store i32* %103, i32** %105, align 8
  %106 = load volatile %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %8
  %107 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %106 to i8*
  %108 = load volatile %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %13
  %109 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %108 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %107, i8* %109, i64 8, i32 8, i1 false)
  %110 = load volatile %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %10
  %111 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %110, i32 0, i32 0
  %112 = load i32*, i32** %111, align 8
  %113 = load volatile %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %9
  %114 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %113, i32 0, i32 0
  %115 = load i32*, i32** %114, align 8
  %116 = load volatile %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %8
  %117 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %116, i32 0, i32 0
  %118 = load i32*, i32** %117, align 8
  %119 = call i32* @_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_ET0_T_S8_S7_(i32* %112, i32* %115, i32* %118)
  %120 = load volatile %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %7
  %121 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %120, i32 0, i32 0
  store i32* %119, i32** %121, align 8
  store i32 1768149277, i32* %27
  br label %158

; <label>:122:                                    ; preds = %28
  %123 = load volatile %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %13
  %124 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.12"* %123) #3
  %125 = load i32*, i32** %124, align 8
  %126 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %5
  %127 = call i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.6"* %126) #3
  %128 = load volatile %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %6
  %129 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %128, i32 0, i32 0
  store i32* %127, i32** %129, align 8
  %130 = load volatile %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %12
  %131 = load volatile %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %6
  %132 = call i64 @_ZN9__gnu_cxxmiIPiSt6vectorIiSaIiEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %131, %"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %130) #3
  %133 = getelementptr inbounds i32, i32* %125, i64 %132
  %134 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %5
  call void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(%"class.std::vector.6"* %134, i32* %133) #3
  store i32 897716949, i32* %27
  br label %158

; <label>:135:                                    ; preds = %28
  %136 = load volatile %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %14
  %137 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %136 to i8*
  %138 = load volatile %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %13
  %139 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %138 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %137, i8* %139, i64 8, i32 8, i1 false)
  %140 = load volatile %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %14
  %141 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %140, i32 0, i32 0
  %142 = load i32*, i32** %141, align 8
  ret i32* %142

; <label>:143:                                    ; preds = %28
  %144 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %145 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %146 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %147 = alloca %"class.std::vector.6"*, align 8
  %148 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %149 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %150 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %151 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %152 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %153 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %154 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %145, i32 0, i32 0
  store i32* %1, i32** %154, align 8
  %155 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %146, i32 0, i32 0
  store i32* %2, i32** %155, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %147, align 8
  %156 = load %"class.std::vector.6"*, %"class.std::vector.6"** %147, align 8
  %157 = call zeroext i1 @_ZN9__gnu_cxxneIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %145, %"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %146) #3
  store i32 -1455548945, i32* %27
  br label %158

; <label>:158:                                    ; preds = %143, %122, %97, %88, %85, %51, %31, %30
  br label %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl(%"class.__gnu_cxx::__normal_iterator.12"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.12"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store %"class.__gnu_cxx::__normal_iterator.12"* %0, %"class.__gnu_cxx::__normal_iterator.12"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %4, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = load i64, i64* %5, align 8
  %11 = getelementptr inbounds i32, i32* %9, i64 %10
  store i32* %11, i32** %6, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.12"* %3, i32** dereferenceable(8) %6) #3
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %3, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  ret i32* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPKiSt6vectorIiSaIiEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator.13"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.13"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %0, %"class.__gnu_cxx::__normal_iterator.13"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %1, %"class.__gnu_cxx::__normal_iterator.13"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %3, align 8
  %6 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.13"* %5) #3
  %7 = load i32*, i32** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %4, align 8
  %9 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.13"* %8) #3
  %10 = load i32*, i32** %9, align 8
  %11 = ptrtoint i32* %7 to i64
  %12 = ptrtoint i32* %10 to i64
  %13 = add i64 %11, 1973585687725147502
  %14 = sub i64 %13, %12
  %15 = sub i64 %14, 1973585687725147502
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 4
  ret i64 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.13"*, i32** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  %4 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %0, %"class.__gnu_cxx::__normal_iterator.13"** %3, align 8
  store i32** %1, i32*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %5, i32 0, i32 0
  %7 = load i32**, i32*** %4, align 8
  %8 = load i32*, i32** %7, align 8
  store i32* %8, i32** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_ET0_T_S8_S7_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %5, i32 0, i32 0
  store i32* %0, i32** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %6, i32 0, i32 0
  store i32* %1, i32** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %7, i32 0, i32 0
  store i32* %2, i32** %15, align 8
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %9 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %9, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES8_(i32* %19)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %8, i32 0, i32 0
  store i32* %20, i32** %21, align 8
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %11 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %11, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES8_(i32* %25)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %10, i32 0, i32 0
  store i32* %26, i32** %27, align 8
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %12 to i8*
  %29 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 8, i1 false)
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %8, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %10, i32 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %12, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = call i32* @_ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_ET1_T0_S8_S7_(i32* %31, i32* %33, i32* %35)
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %4, i32 0, i32 0
  store i32* %36, i32** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %4, i32 0, i32 0
  %39 = load i32*, i32** %38, align 8
  ret i32* %39
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPiSt6vectorIiSaIiEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8)) #5 comdat {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.483
  %7 = load i32, i32* @y.484
  %8 = add i32 %6, -1749824555
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1749824555
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 827174738, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %159
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 827174738, label %20
    i32 -1824354190, label %40
    i32 146021249, label %71
    i32 1227852705, label %73
  ]

; <label>:19:                                     ; preds = %17
  br label %159

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1824354190, i32 1227852705
  store i32 %39, i32* %16
  br label %159

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.12"*, align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.12"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.12"* %0, %"class.__gnu_cxx::__normal_iterator.12"** %41, align 8
  store %"class.__gnu_cxx::__normal_iterator.12"* %1, %"class.__gnu_cxx::__normal_iterator.12"** %42, align 8
  %43 = load %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %41, align 8
  %44 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.12"* %43) #3
  %45 = load i32*, i32** %44, align 8
  %46 = load %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %42, align 8
  %47 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.12"* %46) #3
  %48 = load i32*, i32** %47, align 8
  %49 = ptrtoint i32* %45 to i64
  %50 = ptrtoint i32* %48 to i64
  %51 = add i64 %49, 6705887206476254834
  %52 = sub i64 %51, %50
  %53 = sub i64 %52, 6705887206476254834
  %54 = sub i64 %49, %50
  %55 = sdiv exact i64 %53, 4
  store i64 %55, i64* %3
  %56 = load i32, i32* @x.483
  %57 = load i32, i32* @y.484
  %58 = sub i32 %56, 286791038
  %59 = sub i32 %58, 1
  %60 = add i32 %59, 286791038
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 146021249, i32 1227852705
  store i32 %70, i32* %16
  br label %159

; <label>:71:                                     ; preds = %17
  %72 = load volatile i64, i64* %3
  ret i64 %72

; <label>:73:                                     ; preds = %17
  %74 = alloca %"class.__gnu_cxx::__normal_iterator.12"*, align 8
  %75 = alloca %"class.__gnu_cxx::__normal_iterator.12"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.12"* %0, %"class.__gnu_cxx::__normal_iterator.12"** %74, align 8
  store %"class.__gnu_cxx::__normal_iterator.12"* %1, %"class.__gnu_cxx::__normal_iterator.12"** %75, align 8
  %76 = load %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %74, align 8
  %77 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.12"* %76) #3
  %78 = load i32*, i32** %77, align 8
  %79 = load %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %75, align 8
  %80 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.12"* %79) #3
  %81 = load i32*, i32** %80, align 8
  %82 = ptrtoint i32* %78 to i64
  %83 = ptrtoint i32* %81 to i64
  %84 = sub i64 %82, -5051875671651062997
  %85 = sub i64 %84, %83
  %86 = add i64 %85, -5051875671651062997
  %87 = sub i64 %82, %83
  %88 = mul i64 %86, %83
  %89 = add i64 %82, 8555454623974698940
  %90 = sub i64 %89, %83
  %91 = sub i64 %90, 8555454623974698940
  %92 = sub i64 %82, %83
  %93 = mul i64 %91, %83
  %94 = add i64 %82, -9117535409259267869
  %95 = sub i64 %94, %83
  %96 = sub i64 %95, -9117535409259267869
  %97 = sub i64 %82, %83
  %98 = mul i64 %96, %83
  %99 = shl i64 %82, %83
  %100 = shl i64 %82, %83
  %101 = sub i64 %82, -7991882311557913275
  %102 = sub i64 %101, %83
  %103 = add i64 %102, -7991882311557913275
  %104 = sub i64 %82, %83
  %105 = mul i64 %103, %83
  %106 = shl i64 %82, %83
  %107 = add i64 0, 1026622461539368743
  %108 = sub i64 %107, %82
  %109 = sub i64 %108, 1026622461539368743
  %110 = sub i64 0, %82
  %111 = sub i64 0, %83
  %112 = sub i64 %109, %111
  %113 = add i64 %109, %83
  %114 = add i64 %82, -3788637027983073137
  %115 = sub i64 %114, %83
  %116 = sub i64 %115, -3788637027983073137
  %117 = sub i64 %82, %83
  %118 = add i64 0, 8066684225250616231
  %119 = sub i64 %118, %116
  %120 = sub i64 %119, 8066684225250616231
  %121 = sub i64 0, %116
  %122 = add i64 %120, -3459305493834871569
  %123 = add i64 %122, 4
  %124 = sub i64 %123, -3459305493834871569
  %125 = add i64 %120, 4
  %126 = add i64 %116, -4035106971577475349
  %127 = sub i64 %126, 4
  %128 = sub i64 %127, -4035106971577475349
  %129 = sub i64 %116, 4
  %130 = mul i64 %128, 4
  %131 = add i64 %116, 8906295933345871535
  %132 = sub i64 %131, 4
  %133 = sub i64 %132, 8906295933345871535
  %134 = sub i64 %116, 4
  %135 = mul i64 %133, 4
  %136 = add i64 0, 3139668095586508469
  %137 = sub i64 %136, %116
  %138 = sub i64 %137, 3139668095586508469
  %139 = sub i64 0, %116
  %140 = sub i64 0, %138
  %141 = sub i64 0, 4
  %142 = add i64 %140, %141
  %143 = sub i64 0, %142
  %144 = add i64 %138, 4
  %145 = shl i64 %116, 4
  %146 = add i64 0, 3423236701938776717
  %147 = sub i64 %146, %116
  %148 = sub i64 %147, 3423236701938776717
  %149 = sub i64 0, %116
  %150 = sub i64 0, 4
  %151 = sub i64 %148, %150
  %152 = add i64 %148, 4
  %153 = add i64 %116, 34939634691831640
  %154 = sub i64 %153, 4
  %155 = sub i64 %154, 34939634691831640
  %156 = sub i64 %116, 4
  %157 = mul i64 %155, 4
  %158 = sdiv exact i64 %116, 4
  store i32 -1824354190, i32* %16
  br label %159

; <label>:159:                                    ; preds = %73, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_ET1_T0_S8_S7_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %8 = alloca i32*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %5, i32 0, i32 0
  store i32* %0, i32** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %6, i32 0, i32 0
  store i32* %1, i32** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %7, i32 0, i32 0
  store i32* %2, i32** %14, align 8
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %9 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %9, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32* %18)
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %10 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %10, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32* %23)
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %11 to i8*
  %26 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 8, i1 false)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %11, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32* %28)
  %30 = call i32* @_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_(i32* %19, i32* %24, i32* %29)
  store i32* %30, i32** %8, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.12"* %4, i32** dereferenceable(8) %8) #3
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %4, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  ret i32* %32
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.13"*) #5 comdat align 2 {
  %2 = alloca i32**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.487
  %6 = load i32, i32* @y.488
  %7 = sub i32 %5, 1565662786
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1565662786
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -928385720, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -928385720, label %19
    i32 1999349078, label %39
    i32 -1108286634, label %58
    i32 1409390739, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1999349078, i32 1409390739
  store i32 %38, i32* %15
  br label %64

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %0, %"class.__gnu_cxx::__normal_iterator.13"** %40, align 8
  %41 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %40, align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %41, i32 0, i32 0
  store i32** %42, i32*** %2
  %43 = load i32, i32* @x.487
  %44 = load i32, i32* @y.488
  %45 = sub i32 %43, -874598903
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -874598903
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -1108286634, i32 1409390739
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  %59 = load volatile i32**, i32*** %2
  ret i32** %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %0, %"class.__gnu_cxx::__normal_iterator.13"** %61, align 8
  %62 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %61, align 8
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %62, i32 0, i32 0
  store i32 1999349078, i32* %15
  br label %64

; <label>:64:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt8__uniqueIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops19_Iter_equal_to_iterEET_S9_S9_T0_(i32*, i32*) #0 comdat {
  %3 = alloca i1
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_equal_to_iter", align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %11 = alloca %"struct.__gnu_cxx::__ops::_Iter_equal_to_iter", align 1
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %5, i32 0, i32 0
  store i32* %0, i32** %15, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %6, i32 0, i32 0
  store i32* %1, i32** %16, align 8
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %9 to i8*
  %18 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 8, i32 8, i1 false)
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %10 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %9, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %10, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = call i32* @_ZSt15__adjacent_findIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops19_Iter_equal_to_iterEET_S9_S9_T0_(i32* %22, i32* %24)
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %8, i32 0, i32 0
  store i32* %25, i32** %26, align 8
  %27 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %5 to i8*
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 8, i32 8, i1 false)
  %29 = alloca i32
  store i32 -1562279208, i32* %29
  br label %30

; <label>:30:                                     ; preds = %2, %215
  %31 = load i32, i32* %29
  switch i32 %31, label %32 [
    i32 -1562279208, label %33
    i32 924549356, label %36
    i32 -1326733741, label %64
    i32 -1512268101, label %81
    i32 2116512591, label %82
    i32 -431871826, label %86
    i32 810383734, label %113
    i32 -1913849796, label %143
    i32 698541012, label %146
    i32 -234206247, label %157
    i32 1429454629, label %173
    i32 -1503163917, label %194
    i32 1739332102, label %195
    i32 1275450856, label %196
    i32 1459220096, label %200
    i32 542830992, label %203
    i32 -721654832, label %206
    i32 1522619804, label %209
  ]

; <label>:32:                                     ; preds = %30
  br label %215

; <label>:33:                                     ; preds = %30
  %34 = call zeroext i1 @_ZN9__gnu_cxxeqIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %6) #3
  %35 = select i1 %34, i32 924549356, i32 2116512591
  store i32 %35, i32* %29
  br label %215

; <label>:36:                                     ; preds = %30
  %37 = load i32, i32* @x.489
  %38 = load i32, i32* @y.490
  %39 = add i32 %37, 2026557356
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, 2026557356
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -1326733741, i32 542830992
  store i32 %63, i32* %29
  br label %215

; <label>:64:                                     ; preds = %30
  %65 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %4 to i8*
  %66 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 8, i32 8, i1 false)
  %67 = load i32, i32* @x.489
  %68 = load i32, i32* @y.490
  %69 = sub i32 0, 1
  %70 = add i32 %67, %69
  %71 = sub i32 %67, 1
  %72 = mul i32 %67, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %68, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  %80 = select i1 %78, i32 -1512268101, i32 542830992
  store i32 %80, i32* %29
  br label %215

; <label>:81:                                     ; preds = %30
  store i32 1459220096, i32* %29
  br label %215

; <label>:82:                                     ; preds = %30
  %83 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %12 to i8*
  %84 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %83, i8* %84, i64 8, i32 8, i1 false)
  %85 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.12"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv(%"class.__gnu_cxx::__normal_iterator.12"* %5) #3
  store i32 -431871826, i32* %29
  br label %215

; <label>:86:                                     ; preds = %30
  %87 = load i32, i32* @x.489
  %88 = load i32, i32* @y.490
  %89 = sub i32 0, 1
  %90 = add i32 %87, %89
  %91 = sub i32 %87, 1
  %92 = mul i32 %87, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %88, 10
  %96 = xor i1 %94, true
  %97 = xor i1 %95, true
  %98 = xor i1 true, true
  %99 = and i1 %96, true
  %100 = and i1 %94, %98
  %101 = and i1 %97, true
  %102 = and i1 %95, %98
  %103 = or i1 %99, %100
  %104 = or i1 %101, %102
  %105 = xor i1 %103, %104
  %106 = or i1 %96, %97
  %107 = xor i1 %106, true
  %108 = or i1 true, %98
  %109 = and i1 %107, %108
  %110 = or i1 %105, %109
  %111 = or i1 %94, %95
  %112 = select i1 %110, i32 810383734, i32 -721654832
  store i32 %112, i32* %29
  br label %215

; <label>:113:                                    ; preds = %30
  %114 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.12"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv(%"class.__gnu_cxx::__normal_iterator.12"* %5) #3
  %115 = call zeroext i1 @_ZN9__gnu_cxxneIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %114, %"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %6) #3
  store i1 %115, i1* %3
  %116 = load i32, i32* @x.489
  %117 = load i32, i32* @y.490
  %118 = add i32 %116, 1818302147
  %119 = sub i32 %118, 1
  %120 = sub i32 %119, 1818302147
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = xor i1 %124, true
  %127 = xor i1 %125, true
  %128 = xor i1 false, true
  %129 = and i1 %126, false
  %130 = and i1 %124, %128
  %131 = and i1 %127, false
  %132 = and i1 %125, %128
  %133 = or i1 %129, %130
  %134 = or i1 %131, %132
  %135 = xor i1 %133, %134
  %136 = or i1 %126, %127
  %137 = xor i1 %136, true
  %138 = or i1 false, %128
  %139 = and i1 %137, %138
  %140 = or i1 %135, %139
  %141 = or i1 %124, %125
  %142 = select i1 %140, i32 -1913849796, i32 -721654832
  store i32 %142, i32* %29
  br label %215

; <label>:143:                                    ; preds = %30
  %144 = load volatile i1, i1* %3
  %145 = select i1 %144, i32 698541012, i32 1275450856
  store i32 %145, i32* %29
  br label %215

; <label>:146:                                    ; preds = %30
  %147 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %13 to i8*
  %148 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %147, i8* %148, i64 8, i32 8, i1 false)
  %149 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %14 to i8*
  %150 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %149, i8* %150, i64 8, i32 8, i1 false)
  %151 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %13, i32 0, i32 0
  %152 = load i32*, i32** %151, align 8
  %153 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %14, i32 0, i32 0
  %154 = load i32*, i32** %153, align 8
  %155 = call zeroext i1 @_ZNK9__gnu_cxx5__ops19_Iter_equal_to_iterclINS_17__normal_iteratorIPiSt6vectorIiSaIiEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_equal_to_iter"* %7, i32* %152, i32* %154)
  %156 = select i1 %155, i32 1739332102, i32 -234206247
  store i32 %156, i32* %29
  br label %215

; <label>:157:                                    ; preds = %30
  %158 = load i32, i32* @x.489
  %159 = load i32, i32* @y.490
  %160 = sub i32 %158, -1544601043
  %161 = sub i32 %160, 1
  %162 = add i32 %161, -1544601043
  %163 = sub i32 %158, 1
  %164 = mul i32 %158, %162
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %159, 10
  %168 = and i1 %166, %167
  %169 = xor i1 %166, %167
  %170 = or i1 %168, %169
  %171 = or i1 %166, %167
  %172 = select i1 %170, i32 1429454629, i32 1522619804
  store i32 %172, i32* %29
  br label %215

; <label>:173:                                    ; preds = %30
  %174 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.12"* %5) #3
  %175 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %174) #3
  %176 = load i32, i32* %175, align 4
  %177 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.12"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv(%"class.__gnu_cxx::__normal_iterator.12"* %12) #3
  %178 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.12"* %177) #3
  store i32 %176, i32* %178, align 4
  %179 = load i32, i32* @x.489
  %180 = load i32, i32* @y.490
  %181 = sub i32 %179, 1575813201
  %182 = sub i32 %181, 1
  %183 = add i32 %182, 1575813201
  %184 = sub i32 %179, 1
  %185 = mul i32 %179, %183
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %180, 10
  %189 = and i1 %187, %188
  %190 = xor i1 %187, %188
  %191 = or i1 %189, %190
  %192 = or i1 %187, %188
  %193 = select i1 %191, i32 -1503163917, i32 1522619804
  store i32 %193, i32* %29
  br label %215

; <label>:194:                                    ; preds = %30
  store i32 1739332102, i32* %29
  br label %215

; <label>:195:                                    ; preds = %30
  store i32 -431871826, i32* %29
  br label %215

; <label>:196:                                    ; preds = %30
  %197 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.12"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv(%"class.__gnu_cxx::__normal_iterator.12"* %12) #3
  %198 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %4 to i8*
  %199 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %197 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %198, i8* %199, i64 8, i32 8, i1 false)
  store i32 1459220096, i32* %29
  br label %215

; <label>:200:                                    ; preds = %30
  %201 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %4, i32 0, i32 0
  %202 = load i32*, i32** %201, align 8
  ret i32* %202

; <label>:203:                                    ; preds = %30
  %204 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %4 to i8*
  %205 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %204, i8* %205, i64 8, i32 8, i1 false)
  store i32 -1326733741, i32* %29
  br label %215

; <label>:206:                                    ; preds = %30
  %207 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.12"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv(%"class.__gnu_cxx::__normal_iterator.12"* %5) #3
  %208 = call zeroext i1 @_ZN9__gnu_cxxneIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %207, %"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %6) #3
  store i32 810383734, i32* %29
  br label %215

; <label>:209:                                    ; preds = %30
  %210 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.12"* %5) #3
  %211 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %210) #3
  %212 = load i32, i32* %211, align 4
  %213 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.12"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv(%"class.__gnu_cxx::__normal_iterator.12"* %12) #3
  %214 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.12"* %213) #3
  store i32 %212, i32* %214, align 4
  store i32 1429454629, i32* %29
  br label %215

; <label>:215:                                    ; preds = %209, %206, %203, %196, %195, %194, %173, %157, %146, %143, %113, %86, %82, %81, %64, %36, %33, %32
  br label %30
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops20__iter_equal_to_iterEv() #5 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_equal_to_iter", align 1
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt15__adjacent_findIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops19_Iter_equal_to_iterEET_S9_S9_T0_(i32*, i32*) #0 comdat {
  %3 = alloca i1
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_equal_to_iter", align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %5, i32 0, i32 0
  store i32* %0, i32** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %6, i32 0, i32 0
  store i32* %1, i32** %12, align 8
  %13 = alloca i32
  store i32 -2126780747, i32* %13
  br label %14

; <label>:14:                                     ; preds = %2, %257
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -2126780747, label %17
    i32 1012380803, label %20
    i32 1478018832, label %48
    i32 1544877720, label %66
    i32 1110184131, label %67
    i32 -1128963992, label %83
    i32 518863686, label %112
    i32 -407513196, label %113
    i32 -261014244, label %117
    i32 632318522, label %145
    i32 1895399729, label %181
    i32 -886082193, label %184
    i32 -636032989, label %211
    i32 -2017858890, label %228
    i32 -1620322393, label %229
    i32 -336230121, label %232
    i32 166235841, label %235
    i32 1173924667, label %238
    i32 1046257270, label %241
    i32 545072576, label %244
    i32 911367911, label %254
  ]

; <label>:16:                                     ; preds = %14
  br label %257

; <label>:17:                                     ; preds = %14
  %18 = call zeroext i1 @_ZN9__gnu_cxxeqIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %6) #3
  %19 = select i1 %18, i32 1012380803, i32 1110184131
  store i32 %19, i32* %13
  br label %257

; <label>:20:                                     ; preds = %14
  %21 = load i32, i32* @x.493
  %22 = load i32, i32* @y.494
  %23 = sub i32 %21, -1029341873
  %24 = sub i32 %23, 1
  %25 = add i32 %24, -1029341873
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 true, true
  %34 = and i1 %31, true
  %35 = and i1 %29, %33
  %36 = and i1 %32, true
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 true, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  %47 = select i1 %45, i32 1478018832, i32 1173924667
  store i32 %47, i32* %13
  br label %257

; <label>:48:                                     ; preds = %14
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %4 to i8*
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = load i32, i32* @x.493
  %52 = load i32, i32* @y.494
  %53 = add i32 %51, -316365479
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, -316365479
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 1544877720, i32 1173924667
  store i32 %65, i32* %13
  br label %257

; <label>:66:                                     ; preds = %14
  store i32 166235841, i32* %13
  br label %257

; <label>:67:                                     ; preds = %14
  %68 = load i32, i32* @x.493
  %69 = load i32, i32* @y.494
  %70 = add i32 %68, -1028221880
  %71 = sub i32 %70, 1
  %72 = sub i32 %71, -1028221880
  %73 = sub i32 %68, 1
  %74 = mul i32 %68, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %69, 10
  %78 = and i1 %76, %77
  %79 = xor i1 %76, %77
  %80 = or i1 %78, %79
  %81 = or i1 %76, %77
  %82 = select i1 %80, i32 -1128963992, i32 1046257270
  store i32 %82, i32* %13
  br label %257

; <label>:83:                                     ; preds = %14
  %84 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %8 to i8*
  %85 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %84, i8* %85, i64 8, i32 8, i1 false)
  %86 = load i32, i32* @x.493
  %87 = load i32, i32* @y.494
  %88 = sub i32 0, 1
  %89 = add i32 %86, %88
  %90 = sub i32 %86, 1
  %91 = mul i32 %86, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %87, 10
  %95 = xor i1 %93, true
  %96 = xor i1 %94, true
  %97 = xor i1 true, true
  %98 = and i1 %95, true
  %99 = and i1 %93, %97
  %100 = and i1 %96, true
  %101 = and i1 %94, %97
  %102 = or i1 %98, %99
  %103 = or i1 %100, %101
  %104 = xor i1 %102, %103
  %105 = or i1 %95, %96
  %106 = xor i1 %105, true
  %107 = or i1 true, %97
  %108 = and i1 %106, %107
  %109 = or i1 %104, %108
  %110 = or i1 %93, %94
  %111 = select i1 %109, i32 518863686, i32 1046257270
  store i32 %111, i32* %13
  br label %257

; <label>:112:                                    ; preds = %14
  store i32 -407513196, i32* %13
  br label %257

; <label>:113:                                    ; preds = %14
  %114 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.12"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv(%"class.__gnu_cxx::__normal_iterator.12"* %8) #3
  %115 = call zeroext i1 @_ZN9__gnu_cxxneIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %114, %"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %6) #3
  %116 = select i1 %115, i32 -261014244, i32 -336230121
  store i32 %116, i32* %13
  br label %257

; <label>:117:                                    ; preds = %14
  %118 = load i32, i32* @x.493
  %119 = load i32, i32* @y.494
  %120 = add i32 %118, 1921879576
  %121 = sub i32 %120, 1
  %122 = sub i32 %121, 1921879576
  %123 = sub i32 %118, 1
  %124 = mul i32 %118, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %119, 10
  %128 = xor i1 %126, true
  %129 = xor i1 %127, true
  %130 = xor i1 false, true
  %131 = and i1 %128, false
  %132 = and i1 %126, %130
  %133 = and i1 %129, false
  %134 = and i1 %127, %130
  %135 = or i1 %131, %132
  %136 = or i1 %133, %134
  %137 = xor i1 %135, %136
  %138 = or i1 %128, %129
  %139 = xor i1 %138, true
  %140 = or i1 false, %130
  %141 = and i1 %139, %140
  %142 = or i1 %137, %141
  %143 = or i1 %126, %127
  %144 = select i1 %142, i32 632318522, i32 545072576
  store i32 %144, i32* %13
  br label %257

; <label>:145:                                    ; preds = %14
  %146 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %9 to i8*
  %147 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %146, i8* %147, i64 8, i32 8, i1 false)
  %148 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %10 to i8*
  %149 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %148, i8* %149, i64 8, i32 8, i1 false)
  %150 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %9, i32 0, i32 0
  %151 = load i32*, i32** %150, align 8
  %152 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %10, i32 0, i32 0
  %153 = load i32*, i32** %152, align 8
  %154 = call zeroext i1 @_ZNK9__gnu_cxx5__ops19_Iter_equal_to_iterclINS_17__normal_iteratorIPiSt6vectorIiSaIiEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_equal_to_iter"* %7, i32* %151, i32* %153)
  store i1 %154, i1* %3
  %155 = load i32, i32* @x.493
  %156 = load i32, i32* @y.494
  %157 = sub i32 0, 1
  %158 = add i32 %155, %157
  %159 = sub i32 %155, 1
  %160 = mul i32 %155, %158
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %156, 10
  %164 = xor i1 %162, true
  %165 = xor i1 %163, true
  %166 = xor i1 true, true
  %167 = and i1 %164, true
  %168 = and i1 %162, %166
  %169 = and i1 %165, true
  %170 = and i1 %163, %166
  %171 = or i1 %167, %168
  %172 = or i1 %169, %170
  %173 = xor i1 %171, %172
  %174 = or i1 %164, %165
  %175 = xor i1 %174, true
  %176 = or i1 true, %166
  %177 = and i1 %175, %176
  %178 = or i1 %173, %177
  %179 = or i1 %162, %163
  %180 = select i1 %178, i32 1895399729, i32 545072576
  store i32 %180, i32* %13
  br label %257

; <label>:181:                                    ; preds = %14
  %182 = load volatile i1, i1* %3
  %183 = select i1 %182, i32 -886082193, i32 -1620322393
  store i32 %183, i32* %13
  br label %257

; <label>:184:                                    ; preds = %14
  %185 = load i32, i32* @x.493
  %186 = load i32, i32* @y.494
  %187 = sub i32 0, 1
  %188 = add i32 %185, %187
  %189 = sub i32 %185, 1
  %190 = mul i32 %185, %188
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %186, 10
  %194 = xor i1 %192, true
  %195 = xor i1 %193, true
  %196 = xor i1 false, true
  %197 = and i1 %194, false
  %198 = and i1 %192, %196
  %199 = and i1 %195, false
  %200 = and i1 %193, %196
  %201 = or i1 %197, %198
  %202 = or i1 %199, %200
  %203 = xor i1 %201, %202
  %204 = or i1 %194, %195
  %205 = xor i1 %204, true
  %206 = or i1 false, %196
  %207 = and i1 %205, %206
  %208 = or i1 %203, %207
  %209 = or i1 %192, %193
  %210 = select i1 %208, i32 -636032989, i32 911367911
  store i32 %210, i32* %13
  br label %257

; <label>:211:                                    ; preds = %14
  %212 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %4 to i8*
  %213 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %212, i8* %213, i64 8, i32 8, i1 false)
  %214 = load i32, i32* @x.493
  %215 = load i32, i32* @y.494
  %216 = sub i32 0, 1
  %217 = add i32 %214, %216
  %218 = sub i32 %214, 1
  %219 = mul i32 %214, %217
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %215, 10
  %223 = and i1 %221, %222
  %224 = xor i1 %221, %222
  %225 = or i1 %223, %224
  %226 = or i1 %221, %222
  %227 = select i1 %225, i32 -2017858890, i32 911367911
  store i32 %227, i32* %13
  br label %257

; <label>:228:                                    ; preds = %14
  store i32 166235841, i32* %13
  br label %257

; <label>:229:                                    ; preds = %14
  %230 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %5 to i8*
  %231 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %230, i8* %231, i64 8, i32 8, i1 false)
  store i32 -407513196, i32* %13
  br label %257

; <label>:232:                                    ; preds = %14
  %233 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %4 to i8*
  %234 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %233, i8* %234, i64 8, i32 8, i1 false)
  store i32 166235841, i32* %13
  br label %257

; <label>:235:                                    ; preds = %14
  %236 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %4, i32 0, i32 0
  %237 = load i32*, i32** %236, align 8
  ret i32* %237

; <label>:238:                                    ; preds = %14
  %239 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %4 to i8*
  %240 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %239, i8* %240, i64 8, i32 8, i1 false)
  store i32 1478018832, i32* %13
  br label %257

; <label>:241:                                    ; preds = %14
  %242 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %8 to i8*
  %243 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %242, i8* %243, i64 8, i32 8, i1 false)
  store i32 -1128963992, i32* %13
  br label %257

; <label>:244:                                    ; preds = %14
  %245 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %9 to i8*
  %246 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %245, i8* %246, i64 8, i32 8, i1 false)
  %247 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %10 to i8*
  %248 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %247, i8* %248, i64 8, i32 8, i1 false)
  %249 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %9, i32 0, i32 0
  %250 = load i32*, i32** %249, align 8
  %251 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %10, i32 0, i32 0
  %252 = load i32*, i32** %251, align 8
  %253 = call zeroext i1 @_ZNK9__gnu_cxx5__ops19_Iter_equal_to_iterclINS_17__normal_iteratorIPiSt6vectorIiSaIiEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_equal_to_iter"* %7, i32* %250, i32* %252)
  store i32 632318522, i32* %13
  br label %257

; <label>:254:                                    ; preds = %14
  %255 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %4 to i8*
  %256 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %255, i8* %256, i64 8, i32 8, i1 false)
  store i32 -636032989, i32* %13
  br label %257

; <label>:257:                                    ; preds = %254, %244, %241, %238, %232, %229, %228, %211, %184, %181, %145, %117, %113, %112, %83, %67, %66, %48, %20, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxeqIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.12"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.12"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.12"* %0, %"class.__gnu_cxx::__normal_iterator.12"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.12"* %1, %"class.__gnu_cxx::__normal_iterator.12"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %3, align 8
  %6 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.12"* %5) #3
  %7 = load i32*, i32** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %4, align 8
  %9 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.12"* %8) #3
  %10 = load i32*, i32** %9, align 8
  %11 = icmp eq i32* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK9__gnu_cxx5__ops19_Iter_equal_to_iterclINS_17__normal_iteratorIPiSt6vectorIiSaIiEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_equal_to_iter"*, i32*, i32*) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_equal_to_iter"*, align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %4, i32 0, i32 0
  store i32* %1, i32** %7, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %5, i32 0, i32 0
  store i32* %2, i32** %8, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_equal_to_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_equal_to_iter"** %6, align 8
  %9 = load %"struct.__gnu_cxx::__ops::_Iter_equal_to_iter"*, %"struct.__gnu_cxx::__ops::_Iter_equal_to_iter"** %6, align 8
  %10 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.12"* %4) #3
  %11 = load i32, i32* %10, align 4
  %12 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.12"* %5) #3
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %11, %13
  ret i1 %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4)) #5 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt9__reverseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_St26random_access_iterator_tag(i32*, i32*) #0 comdat {
  %3 = alloca i1
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %6 = alloca %"struct.std::random_access_iterator_tag", align 1
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %4, i32 0, i32 0
  store i32* %0, i32** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %5, i32 0, i32 0
  store i32* %1, i32** %10, align 8
  %11 = alloca i32
  store i32 -619619235, i32* %11
  br label %12

; <label>:12:                                     ; preds = %2, %193
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -619619235, label %15
    i32 -1328857767, label %18
    i32 -467058935, label %19
    i32 723507153, label %21
    i32 -686267529, label %49
    i32 1570157331, label %78
    i32 740462176, label %81
    i32 -1592686611, label %96
    i32 638905017, label %134
    i32 -1001383119, label %135
    i32 -321110159, label %162
    i32 1873851770, label %178
    i32 -1290012844, label %179
    i32 1138632867, label %181
    i32 1371679268, label %192
  ]

; <label>:14:                                     ; preds = %12
  br label %193

; <label>:15:                                     ; preds = %12
  %16 = call zeroext i1 @_ZN9__gnu_cxxeqIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %5) #3
  %17 = select i1 %16, i32 -1328857767, i32 -467058935
  store i32 %17, i32* %11
  br label %193

; <label>:18:                                     ; preds = %12
  store i32 -1001383119, i32* %11
  br label %193

; <label>:19:                                     ; preds = %12
  %20 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.12"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEmmEv(%"class.__gnu_cxx::__normal_iterator.12"* %5) #3
  store i32 723507153, i32* %11
  br label %193

; <label>:21:                                     ; preds = %12
  %22 = load i32, i32* @x.501
  %23 = load i32, i32* @y.502
  %24 = sub i32 %22, -1481576016
  %25 = sub i32 %24, 1
  %26 = add i32 %25, -1481576016
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 true, true
  %35 = and i1 %32, true
  %36 = and i1 %30, %34
  %37 = and i1 %33, true
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 true, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 -686267529, i32 -1290012844
  store i32 %48, i32* %11
  br label %193

; <label>:49:                                     ; preds = %12
  %50 = call zeroext i1 @_ZN9__gnu_cxxltIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %5) #3
  store i1 %50, i1* %3
  %51 = load i32, i32* @x.501
  %52 = load i32, i32* @y.502
  %53 = sub i32 %51, -965616394
  %54 = sub i32 %53, 1
  %55 = add i32 %54, -965616394
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 1570157331, i32 -1290012844
  store i32 %77, i32* %11
  br label %193

; <label>:78:                                     ; preds = %12
  %79 = load volatile i1, i1* %3
  %80 = select i1 %79, i32 740462176, i32 -1001383119
  store i32 %80, i32* %11
  br label %193

; <label>:81:                                     ; preds = %12
  %82 = load i32, i32* @x.501
  %83 = load i32, i32* @y.502
  %84 = sub i32 0, 1
  %85 = add i32 %82, %84
  %86 = sub i32 %82, 1
  %87 = mul i32 %82, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %83, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  %95 = select i1 %93, i32 -1592686611, i32 1138632867
  store i32 %95, i32* %11
  br label %193

; <label>:96:                                     ; preds = %12
  %97 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %7 to i8*
  %98 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %97, i8* %98, i64 8, i32 8, i1 false)
  %99 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %8 to i8*
  %100 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %99, i8* %100, i64 8, i32 8, i1 false)
  %101 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %7, i32 0, i32 0
  %102 = load i32*, i32** %101, align 8
  %103 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %8, i32 0, i32 0
  %104 = load i32*, i32** %103, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_EvT_T0_(i32* %102, i32* %104)
  %105 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.12"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv(%"class.__gnu_cxx::__normal_iterator.12"* %4) #3
  %106 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.12"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEmmEv(%"class.__gnu_cxx::__normal_iterator.12"* %5) #3
  %107 = load i32, i32* @x.501
  %108 = load i32, i32* @y.502
  %109 = add i32 %107, -1096181746
  %110 = sub i32 %109, 1
  %111 = sub i32 %110, -1096181746
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = xor i1 %115, true
  %118 = xor i1 %116, true
  %119 = xor i1 false, true
  %120 = and i1 %117, false
  %121 = and i1 %115, %119
  %122 = and i1 %118, false
  %123 = and i1 %116, %119
  %124 = or i1 %120, %121
  %125 = or i1 %122, %123
  %126 = xor i1 %124, %125
  %127 = or i1 %117, %118
  %128 = xor i1 %127, true
  %129 = or i1 false, %119
  %130 = and i1 %128, %129
  %131 = or i1 %126, %130
  %132 = or i1 %115, %116
  %133 = select i1 %131, i32 638905017, i32 1138632867
  store i32 %133, i32* %11
  br label %193

; <label>:134:                                    ; preds = %12
  store i32 723507153, i32* %11
  br label %193

; <label>:135:                                    ; preds = %12
  %136 = load i32, i32* @x.501
  %137 = load i32, i32* @y.502
  %138 = sub i32 0, 1
  %139 = add i32 %136, %138
  %140 = sub i32 %136, 1
  %141 = mul i32 %136, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %137, 10
  %145 = xor i1 %143, true
  %146 = xor i1 %144, true
  %147 = xor i1 false, true
  %148 = and i1 %145, false
  %149 = and i1 %143, %147
  %150 = and i1 %146, false
  %151 = and i1 %144, %147
  %152 = or i1 %148, %149
  %153 = or i1 %150, %151
  %154 = xor i1 %152, %153
  %155 = or i1 %145, %146
  %156 = xor i1 %155, true
  %157 = or i1 false, %147
  %158 = and i1 %156, %157
  %159 = or i1 %154, %158
  %160 = or i1 %143, %144
  %161 = select i1 %159, i32 -321110159, i32 1371679268
  store i32 %161, i32* %11
  br label %193

; <label>:162:                                    ; preds = %12
  %163 = load i32, i32* @x.501
  %164 = load i32, i32* @y.502
  %165 = add i32 %163, 342476688
  %166 = sub i32 %165, 1
  %167 = sub i32 %166, 342476688
  %168 = sub i32 %163, 1
  %169 = mul i32 %163, %167
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %164, 10
  %173 = and i1 %171, %172
  %174 = xor i1 %171, %172
  %175 = or i1 %173, %174
  %176 = or i1 %171, %172
  %177 = select i1 %175, i32 1873851770, i32 1371679268
  store i32 %177, i32* %11
  br label %193

; <label>:178:                                    ; preds = %12
  ret void

; <label>:179:                                    ; preds = %12
  %180 = call zeroext i1 @_ZN9__gnu_cxxltIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8) %5) #3
  store i32 -686267529, i32* %11
  br label %193

; <label>:181:                                    ; preds = %12
  %182 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %7 to i8*
  %183 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %182, i8* %183, i64 8, i32 8, i1 false)
  %184 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %8 to i8*
  %185 = bitcast %"class.__gnu_cxx::__normal_iterator.12"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %184, i8* %185, i64 8, i32 8, i1 false)
  %186 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %7, i32 0, i32 0
  %187 = load i32*, i32** %186, align 8
  %188 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %8, i32 0, i32 0
  %189 = load i32*, i32** %188, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_EvT_T0_(i32* %187, i32* %189)
  %190 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.12"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv(%"class.__gnu_cxx::__normal_iterator.12"* %4) #3
  %191 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.12"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEmmEv(%"class.__gnu_cxx::__normal_iterator.12"* %5) #3
  store i32 -1592686611, i32* %11
  br label %193

; <label>:192:                                    ; preds = %12
  store i32 -321110159, i32* %11
  br label %193

; <label>:193:                                    ; preds = %192, %181, %179, %162, %135, %134, %96, %81, %78, %49, %21, %19, %18, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt15iterator_traitsIT_E17iterator_categoryERKS8_(%"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.std::random_access_iterator_tag", align 1
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.12"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.12"* %0, %"class.__gnu_cxx::__normal_iterator.12"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.12"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEmmEv(%"class.__gnu_cxx::__normal_iterator.12"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.12"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.12"* %0, %"class.__gnu_cxx::__normal_iterator.12"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds i32, i32* %5, i32 -1
  store i32* %6, i32** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator.12"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxltIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.12"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.12"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.12"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.12"* %0, %"class.__gnu_cxx::__normal_iterator.12"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.12"* %1, %"class.__gnu_cxx::__normal_iterator.12"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %3, align 8
  %6 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.12"* %5) #3
  %7 = load i32*, i32** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.12"*, %"class.__gnu_cxx::__normal_iterator.12"** %4, align 8
  %9 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.12"* %8) #3
  %10 = load i32*, i32** %9, align 8
  %11 = icmp ult i32* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_EvT_T0_(i32*, i32*) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.12", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %3, i32 0, i32 0
  store i32* %0, i32** %5, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.12", %"class.__gnu_cxx::__normal_iterator.12"* %4, i32 0, i32 0
  store i32* %1, i32** %6, align 8
  %7 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.12"* %3) #3
  %8 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.12"* %4) #3
  call void @_ZSt4swapIiEvRT_S1_(i32* dereferenceable(4) %7, i32* dereferenceable(4) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIiEvRT_S1_(i32* dereferenceable(4), i32* dereferenceable(4)) #5 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %6 = load i32*, i32** %3, align 8
  %7 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %6) #3
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* %5, align 4
  %9 = load i32*, i32** %4, align 8
  %10 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %9) #3
  %11 = load i32, i32* %10, align 4
  %12 = load i32*, i32** %3, align 8
  store i32 %11, i32* %12, align 4
  %13 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %5) #3
  %14 = load i32, i32* %13, align 4
  %15 = load i32*, i32** %4, align 8
  store i32 %14, i32* %15, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN1M2apERSt5arrayIxLm3EERKS0_IxLm2EEi(%"struct.std::array"* dereferenceable(24), %"struct.std::array.5"* dereferenceable(16), i32) #5 comdat align 2 {
  %4 = alloca i64
  %5 = alloca %"struct.std::array"*, align 8
  %6 = alloca %"struct.std::array.5"*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %"struct.std::array"* %0, %"struct.std::array"** %5, align 8
  store %"struct.std::array.5"* %1, %"struct.std::array.5"** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 0, i32* %8, align 4
  %9 = alloca i32
  store i32 1959603136, i32* %9
  %10 = alloca i32
  br label %11

; <label>:11:                                     ; preds = %3, %68
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 1959603136, label %14
    i32 -1238370968, label %18
    i32 217232296, label %31
    i32 926064494, label %33
    i32 -2074846065, label %34
    i32 -1335920440, label %50
    i32 -2068053985, label %56
    i32 -670604958, label %62
    i32 726347094, label %67
  ]

; <label>:13:                                     ; preds = %11
  br label %68

; <label>:14:                                     ; preds = %11
  %15 = load i32, i32* %8, align 4
  %16 = icmp slt i32 %15, 3
  %17 = select i1 %16, i32 -1238370968, i32 -2068053985
  store i32 %17, i32* %9
  br label %68

; <label>:18:                                     ; preds = %11
  %19 = load %"struct.std::array.5"*, %"struct.std::array.5"** %6, align 8
  %20 = call dereferenceable(8) i64* @_ZNKSt5arrayIxLm2EEixEm(%"struct.std::array.5"* %19, i64 0) #3
  %21 = load i64, i64* %20, align 8
  %22 = load %"struct.std::array"*, %"struct.std::array"** %5, align 8
  %23 = load i32, i32* %8, align 4
  %24 = sext i32 %23 to i64
  %25 = call dereferenceable(8) i64* @_ZNSt5arrayIxLm3EEixEm(%"struct.std::array"* %22, i64 %24) #3
  %26 = load i64, i64* %25, align 8
  %27 = mul nsw i64 %21, %26
  store i64 %27, i64* %4
  %28 = load i32, i32* %8, align 4
  %29 = icmp eq i32 %28, 2
  %30 = select i1 %29, i32 217232296, i32 926064494
  store i32 %30, i32* %9
  br label %68

; <label>:31:                                     ; preds = %11
  %32 = load i32, i32* %7, align 4
  store i32 -2074846065, i32* %9
  store i32 %32, i32* %10
  br label %68

; <label>:33:                                     ; preds = %11
  store i32 -2074846065, i32* %9
  store i32 1, i32* %10
  br label %68

; <label>:34:                                     ; preds = %11
  %35 = load i32, i32* %10
  %36 = sext i32 %35 to i64
  %37 = load %"struct.std::array.5"*, %"struct.std::array.5"** %6, align 8
  %38 = call dereferenceable(8) i64* @_ZNKSt5arrayIxLm2EEixEm(%"struct.std::array.5"* %37, i64 1) #3
  %39 = load i64, i64* %38, align 8
  %40 = mul nsw i64 %36, %39
  %41 = load volatile i64, i64* %4
  %42 = sub i64 %41, -1032752324934904951
  %43 = add i64 %42, %40
  %44 = add i64 %43, -1032752324934904951
  %45 = add nsw i64 %41, %40
  %46 = load %"struct.std::array"*, %"struct.std::array"** %5, align 8
  %47 = load i32, i32* %8, align 4
  %48 = sext i32 %47 to i64
  %49 = call dereferenceable(8) i64* @_ZNSt5arrayIxLm3EEixEm(%"struct.std::array"* %46, i64 %48) #3
  store i64 %44, i64* %49, align 8
  store i32 -1335920440, i32* %9
  br label %68

; <label>:50:                                     ; preds = %11
  %51 = load i32, i32* %8, align 4
  %52 = add i32 %51, 1305382841
  %53 = add i32 %52, 1
  %54 = sub i32 %53, 1305382841
  %55 = add nsw i32 %51, 1
  store i32 %54, i32* %8, align 4
  store i32 1959603136, i32* %9
  br label %68

; <label>:56:                                     ; preds = %11
  %57 = load %"struct.std::array.5"*, %"struct.std::array.5"** %6, align 8
  %58 = call dereferenceable(8) i64* @_ZNKSt5arrayIxLm2EEixEm(%"struct.std::array.5"* %57, i64 0) #3
  %59 = load i64, i64* %58, align 8
  %60 = icmp slt i64 %59, 0
  %61 = select i1 %60, i32 -670604958, i32 726347094
  store i32 %61, i32* %9
  br label %68

; <label>:62:                                     ; preds = %11
  %63 = load %"struct.std::array"*, %"struct.std::array"** %5, align 8
  %64 = call dereferenceable(8) i64* @_ZNSt5arrayIxLm3EEixEm(%"struct.std::array"* %63, i64 0) #3
  %65 = load %"struct.std::array"*, %"struct.std::array"** %5, align 8
  %66 = call dereferenceable(8) i64* @_ZNSt5arrayIxLm3EEixEm(%"struct.std::array"* %65, i64 1) #3
  call void @_ZSt4swapIxEvRT_S1_(i64* dereferenceable(8) %64, i64* dereferenceable(8) %66) #3
  store i32 726347094, i32* %9
  br label %68

; <label>:67:                                     ; preds = %11
  ret void

; <label>:68:                                     ; preds = %62, %56, %50, %34, %33, %31, %18, %14, %13
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN1M2apERSt5arrayIxLm2EERKS1_(%"struct.std::array.5"* dereferenceable(16), %"struct.std::array.5"* dereferenceable(16)) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.515
  %6 = load i32, i32* @y.516
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -45781261, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %161
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -45781261, label %18
    i32 -697799986, label %26
    i32 -1340594231, label %77
    i32 1022129437, label %78
  ]

; <label>:17:                                     ; preds = %15
  br label %161

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -697799986, i32 1022129437
  store i32 %25, i32* %14
  br label %161

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::array.5"*, align 8
  %28 = alloca %"struct.std::array.5"*, align 8
  store %"struct.std::array.5"* %0, %"struct.std::array.5"** %27, align 8
  store %"struct.std::array.5"* %1, %"struct.std::array.5"** %28, align 8
  %29 = load %"struct.std::array.5"*, %"struct.std::array.5"** %28, align 8
  %30 = call dereferenceable(8) i64* @_ZNKSt5arrayIxLm2EEixEm(%"struct.std::array.5"* %29, i64 0) #3
  %31 = load i64, i64* %30, align 8
  %32 = load %"struct.std::array.5"*, %"struct.std::array.5"** %27, align 8
  %33 = call dereferenceable(8) i64* @_ZNSt5arrayIxLm2EEixEm(%"struct.std::array.5"* %32, i64 0) #3
  %34 = load i64, i64* %33, align 8
  %35 = mul nsw i64 %34, %31
  store i64 %35, i64* %33, align 8
  %36 = load %"struct.std::array.5"*, %"struct.std::array.5"** %28, align 8
  %37 = call dereferenceable(8) i64* @_ZNKSt5arrayIxLm2EEixEm(%"struct.std::array.5"* %36, i64 0) #3
  %38 = load i64, i64* %37, align 8
  %39 = load %"struct.std::array.5"*, %"struct.std::array.5"** %27, align 8
  %40 = call dereferenceable(8) i64* @_ZNSt5arrayIxLm2EEixEm(%"struct.std::array.5"* %39, i64 1) #3
  %41 = load i64, i64* %40, align 8
  %42 = mul nsw i64 %38, %41
  %43 = load %"struct.std::array.5"*, %"struct.std::array.5"** %28, align 8
  %44 = call dereferenceable(8) i64* @_ZNKSt5arrayIxLm2EEixEm(%"struct.std::array.5"* %43, i64 1) #3
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 0, %45
  %47 = sub i64 %42, %46
  %48 = add nsw i64 %42, %45
  %49 = load %"struct.std::array.5"*, %"struct.std::array.5"** %27, align 8
  %50 = call dereferenceable(8) i64* @_ZNSt5arrayIxLm2EEixEm(%"struct.std::array.5"* %49, i64 1) #3
  store i64 %47, i64* %50, align 8
  %51 = load i32, i32* @x.515
  %52 = load i32, i32* @y.516
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -1340594231, i32 1022129437
  store i32 %76, i32* %14
  br label %161

; <label>:77:                                     ; preds = %15
  ret void

; <label>:78:                                     ; preds = %15
  %79 = alloca %"struct.std::array.5"*, align 8
  %80 = alloca %"struct.std::array.5"*, align 8
  store %"struct.std::array.5"* %0, %"struct.std::array.5"** %79, align 8
  store %"struct.std::array.5"* %1, %"struct.std::array.5"** %80, align 8
  %81 = load %"struct.std::array.5"*, %"struct.std::array.5"** %80, align 8
  %82 = call dereferenceable(8) i64* @_ZNKSt5arrayIxLm2EEixEm(%"struct.std::array.5"* %81, i64 0) #3
  %83 = load i64, i64* %82, align 8
  %84 = load %"struct.std::array.5"*, %"struct.std::array.5"** %79, align 8
  %85 = call dereferenceable(8) i64* @_ZNSt5arrayIxLm2EEixEm(%"struct.std::array.5"* %84, i64 0) #3
  %86 = load i64, i64* %85, align 8
  %87 = shl i64 %86, %83
  %88 = sub i64 %86, -6863556952755498856
  %89 = sub i64 %88, %83
  %90 = add i64 %89, -6863556952755498856
  %91 = sub i64 %86, %83
  %92 = mul i64 %90, %83
  %93 = sub i64 0, %86
  %94 = add i64 0, %93
  %95 = sub i64 0, %86
  %96 = add i64 %94, -6814024832876634497
  %97 = add i64 %96, %83
  %98 = sub i64 %97, -6814024832876634497
  %99 = add i64 %94, %83
  %100 = mul nsw i64 %86, %83
  store i64 %100, i64* %85, align 8
  %101 = load %"struct.std::array.5"*, %"struct.std::array.5"** %80, align 8
  %102 = call dereferenceable(8) i64* @_ZNKSt5arrayIxLm2EEixEm(%"struct.std::array.5"* %101, i64 0) #3
  %103 = load i64, i64* %102, align 8
  %104 = load %"struct.std::array.5"*, %"struct.std::array.5"** %79, align 8
  %105 = call dereferenceable(8) i64* @_ZNSt5arrayIxLm2EEixEm(%"struct.std::array.5"* %104, i64 1) #3
  %106 = load i64, i64* %105, align 8
  %107 = shl i64 %103, %106
  %108 = sub i64 %103, 5902586746630240220
  %109 = sub i64 %108, %106
  %110 = add i64 %109, 5902586746630240220
  %111 = sub i64 %103, %106
  %112 = mul i64 %110, %106
  %113 = sub i64 0, -8309988246039614280
  %114 = sub i64 %113, %103
  %115 = add i64 %114, -8309988246039614280
  %116 = sub i64 0, %103
  %117 = add i64 %115, -8496642157830417411
  %118 = add i64 %117, %106
  %119 = sub i64 %118, -8496642157830417411
  %120 = add i64 %115, %106
  %121 = sub i64 0, %103
  %122 = add i64 0, %121
  %123 = sub i64 0, %103
  %124 = sub i64 0, %106
  %125 = sub i64 %122, %124
  %126 = add i64 %122, %106
  %127 = shl i64 %103, %106
  %128 = mul nsw i64 %103, %106
  %129 = load %"struct.std::array.5"*, %"struct.std::array.5"** %80, align 8
  %130 = call dereferenceable(8) i64* @_ZNKSt5arrayIxLm2EEixEm(%"struct.std::array.5"* %129, i64 1) #3
  %131 = load i64, i64* %130, align 8
  %132 = sub i64 0, %131
  %133 = add i64 %128, %132
  %134 = sub i64 %128, %131
  %135 = mul i64 %133, %131
  %136 = shl i64 %128, %131
  %137 = shl i64 %128, %131
  %138 = shl i64 %128, %131
  %139 = sub i64 0, 8855003568894079417
  %140 = sub i64 %139, %128
  %141 = add i64 %140, 8855003568894079417
  %142 = sub i64 0, %128
  %143 = sub i64 0, %141
  %144 = sub i64 0, %131
  %145 = add i64 %143, %144
  %146 = sub i64 0, %145
  %147 = add i64 %141, %131
  %148 = sub i64 0, %128
  %149 = add i64 0, %148
  %150 = sub i64 0, %128
  %151 = sub i64 0, %149
  %152 = sub i64 0, %131
  %153 = add i64 %151, %152
  %154 = sub i64 0, %153
  %155 = add i64 %149, %131
  %156 = sub i64 0, %131
  %157 = sub i64 %128, %156
  %158 = add nsw i64 %128, %131
  %159 = load %"struct.std::array.5"*, %"struct.std::array.5"** %79, align 8
  %160 = call dereferenceable(8) i64* @_ZNSt5arrayIxLm2EEixEm(%"struct.std::array.5"* %159, i64 1) #3
  store i64 %157, i64* %160, align 8
  store i32 -697799986, i32* %14
  br label %161

; <label>:161:                                    ; preds = %78, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNKSt5arrayIxLm2EEixEm(%"struct.std::array.5"*, i64) #5 comdat align 2 {
  %3 = alloca %"struct.std::array.5"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::array.5"* %0, %"struct.std::array.5"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::array.5"*, %"struct.std::array.5"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::array.5", %"struct.std::array.5"* %5, i32 0, i32 0
  %7 = load i64, i64* %4, align 8
  %8 = call dereferenceable(8) i64* @_ZNSt14__array_traitsIxLm2EE6_S_refERA2_Kxm([2 x i64]* dereferenceable(16) %6, i64 %7) #3
  ret i64* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIxEvRT_S1_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  %6 = load i64*, i64** %3, align 8
  %7 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %6) #3
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %5, align 8
  %9 = load i64*, i64** %4, align 8
  %10 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %9) #3
  %11 = load i64, i64* %10, align 8
  %12 = load i64*, i64** %3, align 8
  store i64 %11, i64* %12, align 8
  %13 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %5) #3
  %14 = load i64, i64* %13, align 8
  %15 = load i64*, i64** %4, align 8
  store i64 %14, i64* %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt14__array_traitsIxLm2EE6_S_refERA2_Kxm([2 x i64]* dereferenceable(16), i64) #5 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.521
  %7 = load i32, i32* @y.522
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -593708553, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %80
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -593708553, label %19
    i32 -1097764840, label %39
    i32 -808831229, label %72
    i32 -977142762, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %80

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1097764840, i32 -977142762
  store i32 %38, i32* %15
  br label %80

; <label>:39:                                     ; preds = %16
  %40 = alloca [2 x i64]*, align 8
  %41 = alloca i64, align 8
  store [2 x i64]* %0, [2 x i64]** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load [2 x i64]*, [2 x i64]** %40, align 8
  %43 = load i64, i64* %41, align 8
  %44 = getelementptr inbounds [2 x i64], [2 x i64]* %42, i64 0, i64 %43
  store i64* %44, i64** %3
  %45 = load i32, i32* @x.521
  %46 = load i32, i32* @y.522
  %47 = add i32 %45, -962281968
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -962281968
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -808831229, i32 -977142762
  store i32 %71, i32* %15
  br label %80

; <label>:72:                                     ; preds = %16
  %73 = load volatile i64*, i64** %3
  ret i64* %73

; <label>:74:                                     ; preds = %16
  %75 = alloca [2 x i64]*, align 8
  %76 = alloca i64, align 8
  store [2 x i64]* %0, [2 x i64]** %75, align 8
  store i64 %1, i64* %76, align 8
  %77 = load [2 x i64]*, [2 x i64]** %75, align 8
  %78 = load i64, i64* %76, align 8
  %79 = getelementptr inbounds [2 x i64], [2 x i64]* %77, i64 0, i64 %78
  store i32 -1097764840, i32* %15
  br label %80

; <label>:80:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8)) #5 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.523
  %6 = load i32, i32* @y.524
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -971057254, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -971057254, label %18
    i32 -1492158772, label %26
    i32 -1142455763, label %55
    i32 1836760735, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1492158772, i32 1836760735
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca i64*, align 8
  store i64* %0, i64** %27, align 8
  %28 = load i64*, i64** %27, align 8
  store i64* %28, i64** %2
  %29 = load i32, i32* @x.523
  %30 = load i32, i32* @y.524
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 -1142455763, i32 1836760735
  store i32 %54, i32* %14
  br label %60

; <label>:55:                                     ; preds = %15
  %56 = load volatile i64*, i64** %2
  ret i64* %56

; <label>:57:                                     ; preds = %15
  %58 = alloca i64*, align 8
  store i64* %0, i64** %58, align 8
  %59 = load i64*, i64** %58, align 8
  store i32 -1492158772, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt5arrayIxLm2EEixEm(%"struct.std::array.5"*, i64) #5 comdat align 2 {
  %3 = alloca %"struct.std::array.5"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::array.5"* %0, %"struct.std::array.5"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::array.5"*, %"struct.std::array.5"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::array.5", %"struct.std::array.5"* %5, i32 0, i32 0
  %7 = load i64, i64* %4, align 8
  %8 = call dereferenceable(8) i64* @_ZNSt14__array_traitsIxLm2EE6_S_refERA2_Kxm([2 x i64]* dereferenceable(16) %6, i64 %7) #3
  ret i64* %8
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s104653926.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline noreturn nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
